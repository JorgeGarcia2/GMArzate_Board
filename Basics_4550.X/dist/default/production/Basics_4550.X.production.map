Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Basics_4550.X.production.sym \
  --cmf=dist/default/production\Basics_4550.X.production.cmf -z -Q18F4550 \
  -oC:\Users\jorge\AppData\Local\Temp\sf9g.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Basics_4550.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=03C0h-07FFh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\jorge\AppData\Local\Temp\sf9g.o \
  dist/default/production\Basics_4550.X.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\jorge\AppData\Local\Temp\sf9g.o
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\Basics_4550.X.production.o
                intcode                               8        8        6        4       0
                temp                                 5C       5C        1        1       1
                mediumconst                        7E88     7E88      178     3F44       0
                text72                             50DE     50DE       42        4       0
                intcode_body                       51A0     51A0       40        4       0
                text70                             46AC     46AC       C2        4       0
                text69                             5424     5424       16        4       0
                text68                             5472     5472       12        4       0
                text67                             535C     535C       2A        4       0
                text66                             53D2     53D2       24        4       0
                text65                             5006     5006       4A        4       0
                text64                             549E     549E        6        4       0
                text63                             5490     5490        8        4       0
                text62                             5498     5498        6        4       0
                text61                             48CE     48CE       A6        4       0
                text60                             4DFA     4DFA       62        4       0
                text59                             40FC     40FC      10C        4       0
                text58                             4BBE     4BBE       82        4       0
                text57                             5160     5160       40        4       0
                text56                             476E     476E       B6        4       0
                text55                             4F12     4F12       56        4       0
                text54                             54A4     54A4        4        4       0
                text53                             5484     5484        C        4       0
                text52                             1EA4     1EA4      39A        4       0
                text51                             38BA     38BA      1B4        4       0
                text50                             4208     4208      108        4       0
                text49                             4310     4310      104        4       0
                text48                             16C6     16C6      42C        4       0
                text47                             5258     5258       38        4       0
                text46                             1206     1206      4C0        4       0
                text45                             5050     5050       48        4       0
                text44                             1AF2     1AF2      3B2        4       0
                text43                             521E     521E       3A        4       0
                text42                             2B56     2B56      2B4        4       0
                text41                             5460     5460       12        4       0
                text40                             544E     544E       12        4       0
                text39                             4D30     4D30       68        4       0
                text38                             2E0A     2E0A      25C        4       0
                text37                             5332     5332       2A        4       0
                text36                             4FBC     4FBC       4A        4       0
                text35                             53F6     53F6       18        4       0
                text34                             51E0     51E0       3E        4       0
                text33                             4974     4974       A0        4       0
                text32                             52FC     52FC       36        4       0
                text31                             3BF4     3BF4      178        4       0
                text30                             3D6C     3D6C      154        4       0
                text29                             4F68     4F68       54        4       0
                text28                             4824     4824       AA        4       0
                text27                             3EC0     3EC0      126        4       0
                text26                             223E     223E      342        4       0
                text25                             4414     4414       EC        4       0
                text24                             4E5C     4E5C       5C        4       0
                text23                             4A14     4A14       98        4       0
                text22                             3A6E     3A6E      186        4       0
                text21                             2876     2876      2E0        4       0
                text20                             53AC     53AC       26        4       0
                text19                             45DC     45DC       D0        4       0
                text18                             4D98     4D98       62        4       0
                text17                             4EB8     4EB8       5A        4       0
                text16                             3066     3066      250        4       0
                text15                             2580     2580      2F6        4       0
                text14                             34E2     34E2      20A        4       0
                text13                             36EC     36EC      1CE        4       0
                text12                              CAE      CAE      558        4       0
                text11                             3FE6     3FE6      116        4       0
                text10                             4CB8     4CB8       78        4       0
                text9                              32B6     32B6      22C        4       0
                text8                              5386     5386       26        4       0
                text7                              4AAC     4AAC       8A        4       0
                text6                                12       12      C9C        4       0
                text5                              52C6     52C6       36        4       0
                text4                              540E     540E       16        4       0
                text3                              5098     5098       46        4       0
                text2                              5290     5290       36        4       0
                text1                              4500     4500       DC        4       0
                text0                              4B36     4B36       88        4       0
                cstackCOMRAM                          1        1       58        1       1
                cstackBANK0                          60       60       62       60       1
                cstackBANK1                         100      100       FE      100       1
                cstackBANK2                         200      200       84      200       1
                bssBANK3                            300      300       C0      300       1
                dataBANK2                           284      284       40      200       1
                bssBANK2                            2C4      2C4       20      200       1
                dataBANK0                            EB       EB       14       60       1
                bssBANK0                             C2       C2       29       60       1
                bssCOMRAM                            59       59        3        1       1
                cinit                              4C40     4C40       78        4       0
                idataBANK2                         5120     5120       40        4       0
                idataBANK0                         543A     543A       14        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                text72                             50DE     50DE       42         0
                intcode_body                       51A0     51A0       40         0
                text70                             46AC     46AC       C2         0
                text69                             5424     5424       16         0
                text68                             5472     5472       12         0
                text67                             535C     535C       2A         0
                text66                             53D2     53D2       24         0
                text65                             5006     5006       4A         0
                text64                             549E     549E        6         0
                text63                             5490     5490        8         0
                text62                             5498     5498        6         0
                text61                             48CE     48CE       A6         0
                text60                             4DFA     4DFA       62         0
                text59                             40FC     40FC      10C         0
                text58                             4BBE     4BBE       82         0
                text57                             5160     5160       40         0
                text56                             476E     476E       B6         0
                text55                             4F12     4F12       56         0
                text54                             54A4     54A4        4         0
                text53                             5484     5484        C         0
                text52                             1EA4     1EA4      39A         0
                text51                             38BA     38BA      1B4         0
                text50                             4208     4208      108         0
                text49                             4310     4310      104         0
                text48                             16C6     16C6      42C         0
                text47                             5258     5258       38         0
                text46                             1206     1206      4C0         0
                text45                             5050     5050       48         0
                text44                             1AF2     1AF2      3B2         0
                text43                             521E     521E       3A         0
                text42                             2B56     2B56      2B4         0
                text41                             5460     5460       12         0
                text40                             544E     544E       12         0
                text39                             4D30     4D30       68         0
                text38                             2E0A     2E0A      25C         0
                text37                             5332     5332       2A         0
                text36                             4FBC     4FBC       4A         0
                text35                             53F6     53F6       18         0
                text34                             51E0     51E0       3E         0
                text33                             4974     4974       A0         0
                text32                             52FC     52FC       36         0
                text31                             3BF4     3BF4      178         0
                text30                             3D6C     3D6C      154         0
                text29                             4F68     4F68       54         0
                text28                             4824     4824       AA         0
                text27                             3EC0     3EC0      126         0
                text26                             223E     223E      342         0
                text25                             4414     4414       EC         0
                text24                             4E5C     4E5C       5C         0
                text23                             4A14     4A14       98         0
                text22                             3A6E     3A6E      186         0
                text21                             2876     2876      2E0         0
                text20                             53AC     53AC       26         0
                text19                             45DC     45DC       D0         0
                text18                             4D98     4D98       62         0
                text17                             4EB8     4EB8       5A         0
                text16                             3066     3066      250         0
                text15                             2580     2580      2F6         0
                text14                             34E2     34E2      20A         0
                text13                             36EC     36EC      1CE         0
                text12                              CAE      CAE      558         0
                text11                             3FE6     3FE6      116         0
                text10                             4CB8     4CB8       78         0
                text9                              32B6     32B6      22C         0
                text8                              5386     5386       26         0
                text7                              4AAC     4AAC       8A         0
                text6                                12       12      C9C         0
                text5                              52C6     52C6       36         0
                text4                              540E     540E       16         0
                text3                              5098     5098       46         0
                text2                              5290     5290       36         0
                text1                              4500     4500       DC         0
                text0                              4B36     4B36       88         0
                cinit                              4C40     4C40       78         0
                idataBANK2                         5120     5120       40         0
                idataBANK0                         543A     543A       14         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        7E88     7E88      178         0

        CLASS   COMRAM         
                temp                                 5C       5C        1         1
                cstackCOMRAM                          1        1       58         1
                bssCOMRAM                            59       59        3         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       62         1
                dataBANK0                            EB       EB       14         1
                bssBANK0                             C2       C2       29         1

        CLASS   BANK1          
                cstackBANK1                         100      100       FE         1

        CLASS   BANK2          
                cstackBANK2                         200      200       84         1
                dataBANK2                           284      284       40         1
                bssBANK2                            2C4      2C4       20         1

        CLASS   BANK3          
                bssBANK3                            300      300       C0         1

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005C  00005D         1       1  COMRAM  
                intcode                        000008  0054A0  0054A8         4       0  CODE    
                cstackBANK0                    000060  00009F  0000FF        60       1  BANK0   
                cstackBANK1                    000100  0000FE  0001FE       100       1  BANK1   
                cstackBANK2                    000200  0000E4  0002E4       200       1  BANK2   
                bssBANK3                       000300  0000C0  0003C0       300       1  BANK3   
                mediumconst                    007E88  000178  008000      3F44       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000FF-0000FF                1
        BANK1            0001FE-0001FF                2
        BANK2            0002E4-0002FF               1C
        BANK3            0003C0-0003FF               40
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           00005D-00005F                3
                         0000FF-0000FF                1
                         0001FE-0001FF                2
                         0002E4-0002FF               1C
                         0003C0-0007FF              440
        CODE             000004-000007                4
                         0054A8-007E87             29E0
        COMRAM           00005D-00005F                3
        CONST            000004-000007                4
                         0054A8-007E87             29E0
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0054A8-007E87             29E0
        RAM              0000FF-0000FF                1
                         0001FE-0001FF                2
                         0002E4-0002FF               1C
                         0003C0-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       0054A8-007E87              100
        STACK            0003C0-0007FF              440

                                  Symbol Table

?_DHT11_GetRHum              cstackCOMRAM 000004
?_DHT11_GetTemp              cstackCOMRAM 000004
?_DHT11_Wait4Resp            cstackCOMRAM 000004
?_LCD_Printf                 cstackBANK1  0001E8
?_SERIAL_Printf              cstackBANK1  0001E8
?___aldiv                    cstackCOMRAM 000004
?___almod                    cstackCOMRAM 000004
?___fladd                    cstackCOMRAM 000037
?___fldiv                    cstackCOMRAM 00001E
?___flmul                    cstackCOMRAM 000047
?___flneg                    cstackCOMRAM 000004
?___flsub                    cstackBANK0  00006D
?___fltol                    cstackBANK0  00008B
?___wmul                     cstackCOMRAM 000004
?___xxtofl                   cstackCOMRAM 000010
?_atoui                      cstackCOMRAM 00000A
?_ftoa_sci                   cstackBANK0  0000AC
?_lroundf                    cstackBANK0  000093
?_my_vsprintf                cstackBANK0  0000BA
?_normalize                  cstackCOMRAM 000053
?_posc                       cstackCOMRAM 000008
?_roundStr                   cstackCOMRAM 00000E
?_roundf                     cstackBANK0  000075
?_strlen                     cstackCOMRAM 000004
BLED_Color@biled             cstackCOMRAM 000008
BLED_Color@green             cstackCOMRAM 000004
BLED_Color@red               cstackCOMRAM 000005
BLED_Enable@biled            cstackCOMRAM 000006
BLED_Toggle@biled            cstackCOMRAM 000003
DHT11_MReq@checksum          cstackCOMRAM 000049
DHT11_MReq@data              cstackCOMRAM 00004C
DHT11_MReq@error             cstackCOMRAM 000051
DHT11_MReq@i                 cstackCOMRAM 000052
DHT11_MReq@j                 cstackCOMRAM 000054
DHT11_MReq@voltLen           cstackCOMRAM 00004A
DHT11_Wait4Resp@HtoL         cstackCOMRAM 000006
DHT11_Wait4Resp@retryTimeout cstackCOMRAM 000007
DHT11_Wait4Resp@timeout_10us cstackCOMRAM 000004
LCD_DisplayCtrl@cmd          cstackCOMRAM 00000B
LCD_DisplayCtrl@curBlink     cstackCOMRAM 000009
LCD_DisplayCtrl@curOn        cstackCOMRAM 000008
LCD_DisplayCtrl@disOn        cstackCOMRAM 00000A
LCD_Printf@ap                cstackBANK2  000282
LCD_Printf@fmt               cstackBANK1  0001E8
LCD_Printf@strout            cstackBANK2  000200
LCD_SendCmd@data             cstackCOMRAM 000007
LCD_SendCmd@fbyte            cstackCOMRAM 000006
LCD_SendNibble@data          cstackCOMRAM 000005
LCD_SetRowCol@cmd            cstackCOMRAM 00000B
LCD_SetRowCol@col            cstackCOMRAM 000008
LCD_SetRowCol@row            cstackCOMRAM 00000D
LCD_Write@i                  cstackCOMRAM 000013
LCD_Write@str                cstackCOMRAM 00000F
LCD_WriteByte@wData          cstackCOMRAM 000006
LCD_WriteChar@wData          cstackCOMRAM 00000E
LED_Enable@led               cstackCOMRAM 000006
SERIAL_Init@BAUD             cstackCOMRAM 000012
SERIAL_Init@baudrate         cstackCOMRAM 00001A
SERIAL_Printf@ap             cstackBANK2  000282
SERIAL_Printf@fmt            cstackBANK1  0001E8
SERIAL_Printf@strout         cstackBANK2  000200
SERIAL_Write@i               cstackCOMRAM 00000A
SERIAL_Write@str             cstackCOMRAM 000008
SERIAL_WriteChar@data        cstackCOMRAM 000004
TIMER0_Int@t0_8b             cstackCOMRAM 000007
TIMER0_Int@t0_cs             cstackCOMRAM 000004
TIMER0_Int@t0_psa            cstackCOMRAM 000006
TIMER0_Int@t0_se             cstackCOMRAM 000005
TIMER0_SetPs@prescale        cstackCOMRAM 000006
TIMER0_SetReg@val            cstackBANK0  000097
TIMER0_SetTime@CT            cstackBANK0  0000BA
TIMER0_SetTime@MC            cstackBANK0  0000B6
TIMER0_SetTime@e             cstackBANK0  0000B5
TIMER0_SetTime@time          cstackBANK0  000099
TIMER0_SetTime@tmax          cstackBANK0  00009D
TIMER0_SetTime@tmin          cstackBANK0  0000A1
_BAUDCONbits                 (abs)        000FB8
_BLED_Color                  text70       0046AC
_BLED_Enable                 text65       005006
_BLED_Toggle                 text72       0050DE
_DHT11_GetRHum               text41       005460
_DHT11_GetTemp               text40       00544E
_DHT11_Init                  text64       00549E
_DHT11_MReq                  text38       002E0A
_DHT11_Wait4Resp             text39       004D30
_INTCON2bits                 (abs)        000FF1
_INTCON3bits                 (abs)        000FF0
_INTCONbits                  (abs)        000FF2
_INTERRUPT_Init              text63       005490
_INTERRUPT_Tmr0              text62       005498
_LATB                        (abs)        000F8A
_LATBbits                    (abs)        000F8A
_LATCbits                    (abs)        000F8B
_LATD                        (abs)        000F8C
_LATDbits                    (abs)        000F8C
_LATEbits                    (abs)        000F8D
_LCD_CLS                     text37       005332
_LCD_DisplayCtrl             text66       0053D2
_LCD_Init                    text61       0048CE
_LCD_Lat                     text69       005424
_LCD_Printf                  text5        0052C6
_LCD_SendCmd                 text67       00535C
_LCD_SendNibble              text68       005472
_LCD_SetRowCol               text36       004FBC
_LCD_Write                   text33       004974
_LCD_WriteByte               text35       0053F6
_LCD_WriteChar               text34       0051E0
_LED_Enable                  text60       004DFA
_PIE1bits                    (abs)        000F9D
_PIR1bits                    (abs)        000F9E
_PORTB                       (abs)        000F81
_PORTBbits                   (abs)        000F81
_PORTCbits                   (abs)        000F82
_PS_TMR0                     bssBANK0     0000EA
_PS_TMR1                     bssBANK0     0000E9
_RCONbits                    (abs)        000FD0
_RCREG                       (abs)        000FAE
_RCSTAbits                   (abs)        000FAB
_SERIAL_Init                 text58       004BBE
_SERIAL_Init$2747            cstackCOMRAM 000016
_SERIAL_Printf               text2        005290
_SERIAL_Write                text3        005098
_SERIAL_WriteChar            text4        00540E
_SPBRG                       (abs)        000FAF
_SPBRGH                      (abs)        000FB0
_SYSTEM_Init                 text55       004F12
_T0CONbits                   (abs)        000FD5
_T1CONbits                   (abs)        000FCD
_TIMER0_End                  text54       0054A4
_TIMER0_Int                  text57       005160
_TIMER0_SetPs                text56       00476E
_TIMER0_SetReg               text53       005484
_TIMER0_SetTime              text42       002B56
_TIMER0_SetTime$1449         cstackBANK0  0000B1
_TIMER0_SetTime$2748         cstackBANK0  0000A5
_TIMER0_SetTime$2749         cstackBANK0  0000A9
_TIMER0_SetTime$2750         cstackBANK0  0000AD
_TMR0H                       (abs)        000FD7
_TMR1H                       (abs)        000FCF
_TMR1L                       (abs)        000FCE
_TRISAbits                   (abs)        000F92
_TRISB                       (abs)        000F93
_TRISBbits                   (abs)        000F93
_TRISCbits                   (abs)        000F94
_TRISD                       (abs)        000F95
_TRISEbits                   (abs)        000F96
_TXREG                       (abs)        000FAD
_TXSTAbits                   (abs)        000FAC
__CFG_BOR$ON                 (abs)        000000
__CFG_BORV$3                 (abs)        000000
__CFG_CCP2MX$ON              (abs)        000000
__CFG_CP0$OFF                (abs)        000000
__CFG_CP1$OFF                (abs)        000000
__CFG_CP2$OFF                (abs)        000000
__CFG_CP3$OFF                (abs)        000000
__CFG_CPB$OFF                (abs)        000000
__CFG_CPD$OFF                (abs)        000000
__CFG_CPUDIV$OSC1_PLL2       (abs)        000000
__CFG_DEBUG$OFF              (abs)        000000
__CFG_EBTR0$OFF              (abs)        000000
__CFG_EBTR1$OFF              (abs)        000000
__CFG_EBTR2$OFF              (abs)        000000
__CFG_EBTR3$OFF              (abs)        000000
__CFG_EBTRB$OFF              (abs)        000000
__CFG_FCMEN$OFF              (abs)        000000
__CFG_FOSC$HSPLL_HS          (abs)        000000
__CFG_ICPRT$OFF              (abs)        000000
__CFG_IESO$OFF               (abs)        000000
__CFG_LPT1OSC$OFF            (abs)        000000
__CFG_LVP$OFF                (abs)        000000
__CFG_MCLRE$ON               (abs)        000000
__CFG_PBADEN$OFF             (abs)        000000
__CFG_PLLDIV$5               (abs)        000000
__CFG_PWRT$OFF               (abs)        000000
__CFG_STVREN$ON              (abs)        000000
__CFG_USBDIV$2               (abs)        000000
__CFG_VREGEN$ON              (abs)        000000
__CFG_WDT$OFF                (abs)        000000
__CFG_WDTPS$32768            (abs)        000000
__CFG_WRT0$OFF               (abs)        000000
__CFG_WRT1$OFF               (abs)        000000
__CFG_WRT2$OFF               (abs)        000000
__CFG_WRT3$OFF               (abs)        000000
__CFG_WRTB$OFF               (abs)        000000
__CFG_WRTC$OFF               (abs)        000000
__CFG_WRTD$OFF               (abs)        000000
__CFG_XINST$OFF              (abs)        000000
__HRAM                       (abs)        000000
__Habs1                      abs1         000000
__Hbank0                     bank0        000000
__Hbank1                     bank1        000000
__Hbank2                     bank2        000000
__Hbank3                     bank3        000000
__Hbank4                     bank4        000000
__Hbank5                     bank5        000000
__Hbank6                     bank6        000000
__Hbank7                     bank7        000000
__Hbigbss                    bigbss       000000
__Hbigdata                   bigdata      000000
__Hbigram                    bigram       000000
__Hbss                       bss          000000
__HbssBANK0                  bssBANK0     000000
__HbssBANK2                  bssBANK2     000000
__HbssBANK3                  bssBANK3     000000
__HbssCOMRAM                 bssCOMRAM    000000
__Hcinit                     cinit        000000
__Hclrtext                   clrtext      000000
__Hcomram                    comram       000000
__Hconfig                    config       30000E
__Hconst                     const        000000
__HcstackBANK0               cstackBANK0  000000
__HcstackBANK1               cstackBANK1  000000
__HcstackBANK2               cstackBANK2  000000
__HcstackCOMRAM              cstackCOMRAM 000000
__Hdata                      data         000000
__HdataBANK0                 dataBANK0    000000
__HdataBANK2                 dataBANK2    000000
__Heeprom_data               eeprom_data  000000
__Hfarbss                    farbss       000000
__Hfardata                   fardata      000000
__Hibigdata                  ibigdata     000000
__Hidata                     idata        000000
__HidataBANK0                idataBANK0   000000
__HidataBANK2                idataBANK2   000000
__Hidloc                     idloc        200008
__Hifardata                  ifardata     000000
__Hinit                      init         000012
__Hintcode                   intcode      00000E
__Hintcode_body              intcode_body 000000
__Hintcodelo                 intcodelo    00000E
__Hintentry                  intentry     000000
__Hintret                    intret       000000
__Hintsave_regs              intsave_regs 000000
__Hirdata                    irdata       000000
__Hmediumconst               mediumconst  008000
__HnvFARRAM                  nvFARRAM     000000
__Hnvbit                     nvbit        000000
__Hnvrram                    nvrram       000000
__Hparam                     rparam       000000
__Hpowerup                   powerup      00000E
__Hram                       ram          000000
__Hramtop                    ramtop       000800
__Hrbit                      rbit         000000
__Hrbss                      rbss         000000
__Hrdata                     rdata        000000
__Hreset_vec                 reset_vec    000004
__Hrparam                    rparam       000000
__Hsfr                       sfr          000000
__Hsmallconst                smallconst   000000
__Hspace_0                   (abs)        30000E
__Hspace_1                   (abs)        0003C0
__Hspace_2                   (abs)        000000
__Hstack                     stack        000000
__Hstruct                    struct       000000
__Htemp                      temp         00005D
__Htext                      text         000000
__Htext0                     text0        000000
__Htext1                     text1        000000
__Htext10                    text10       000000
__Htext11                    text11       000000
__Htext12                    text12       000000
__Htext13                    text13       000000
__Htext14                    text14       000000
__Htext15                    text15       000000
__Htext16                    text16       000000
__Htext17                    text17       000000
__Htext18                    text18       000000
__Htext19                    text19       000000
__Htext2                     text2        000000
__Htext20                    text20       000000
__Htext21                    text21       000000
__Htext22                    text22       000000
__Htext23                    text23       000000
__Htext24                    text24       000000
__Htext25                    text25       000000
__Htext26                    text26       000000
__Htext27                    text27       000000
__Htext28                    text28       000000
__Htext29                    text29       000000
__Htext3                     text3        000000
__Htext30                    text30       000000
__Htext31                    text31       000000
__Htext32                    text32       000000
__Htext33                    text33       000000
__Htext34                    text34       000000
__Htext35                    text35       000000
__Htext36                    text36       000000
__Htext37                    text37       000000
__Htext38                    text38       000000
__Htext39                    text39       000000
__Htext4                     text4        000000
__Htext40                    text40       000000
__Htext41                    text41       000000
__Htext42                    text42       000000
__Htext43                    text43       000000
__Htext44                    text44       000000
__Htext45                    text45       000000
__Htext46                    text46       000000
__Htext47                    text47       000000
__Htext48                    text48       000000
__Htext49                    text49       000000
__Htext5                     text5        000000
__Htext50                    text50       000000
__Htext51                    text51       000000
__Htext52                    text52       000000
__Htext53                    text53       000000
__Htext54                    text54       000000
__Htext55                    text55       000000
__Htext56                    text56       000000
__Htext57                    text57       000000
__Htext58                    text58       000000
__Htext59                    text59       000000
__Htext6                     text6        000000
__Htext60                    text60       000000
__Htext61                    text61       000000
__Htext62                    text62       000000
__Htext63                    text63       000000
__Htext64                    text64       000000
__Htext65                    text65       000000
__Htext66                    text66       000000
__Htext67                    text67       000000
__Htext68                    text68       000000
__Htext69                    text69       000000
__Htext7                     text7        000000
__Htext70                    text70       000000
__Htext72                    text72       000000
__Htext8                     text8        000000
__Htext9                     text9        000000
__LRAM                       (abs)        000001
__Labs1                      abs1         000000
__Lbank0                     bank0        000000
__Lbank1                     bank1        000000
__Lbank2                     bank2        000000
__Lbank3                     bank3        000000
__Lbank4                     bank4        000000
__Lbank5                     bank5        000000
__Lbank6                     bank6        000000
__Lbank7                     bank7        000000
__Lbigbss                    bigbss       000000
__Lbigdata                   bigdata      000000
__Lbigram                    bigram       000000
__Lbss                       bss          000000
__LbssBANK0                  bssBANK0     000000
__LbssBANK2                  bssBANK2     000000
__LbssBANK3                  bssBANK3     000000
__LbssCOMRAM                 bssCOMRAM    000000
__Lcinit                     cinit        000000
__Lclrtext                   clrtext      000000
__Lcomram                    comram       000000
__Lconfig                    config       300000
__Lconst                     const        000000
__LcstackBANK0               cstackBANK0  000000
__LcstackBANK1               cstackBANK1  000000
__LcstackBANK2               cstackBANK2  000000
__LcstackCOMRAM              cstackCOMRAM 000000
__Ldata                      data         000000
__LdataBANK0                 dataBANK0    000000
__LdataBANK2                 dataBANK2    000000
__Leeprom_data               eeprom_data  000000
__Lfarbss                    farbss       000000
__Lfardata                   fardata      000000
__Libigdata                  ibigdata     000000
__Lidata                     idata        000000
__LidataBANK0                idataBANK0   000000
__LidataBANK2                idataBANK2   000000
__Lidloc                     idloc        200000
__Lifardata                  ifardata     000000
__Linit                      init         00000E
__Lintcode                   intcode      000008
__Lintcode_body              intcode_body 000000
__Lintcodelo                 intcodelo    00000E
__Lintentry                  intentry     000000
__Lintret                    intret       000000
__Lintsave_regs              intsave_regs 000000
__Lirdata                    irdata       000000
__Lmediumconst               mediumconst  007E88
__LnvFARRAM                  nvFARRAM     000000
__Lnvbit                     nvbit        000000
__Lnvrram                    nvrram       000000
__Lparam                     rparam       000000
__Lpowerup                   powerup      00000E
__Lram                       ram          000000
__Lramtop                    ramtop       000800
__Lrbit                      rbit         000000
__Lrbss                      rbss         000000
__Lrdata                     rdata        000000
__Lreset_vec                 reset_vec    000000
__Lrparam                    rparam       000000
__Lsfr                       sfr          000000
__Lsmallconst                smallconst   000000
__Lspace_0                   (abs)        000000
__Lspace_1                   (abs)        000000
__Lspace_2                   (abs)        000000
__Lstack                     stack        000000
__Lstruct                    struct       000000
__Ltemp                      temp         00005C
__Ltext                      text         000000
__Ltext0                     text0        000000
__Ltext1                     text1        000000
__Ltext10                    text10       000000
__Ltext11                    text11       000000
__Ltext12                    text12       000000
__Ltext13                    text13       000000
__Ltext14                    text14       000000
__Ltext15                    text15       000000
__Ltext16                    text16       000000
__Ltext17                    text17       000000
__Ltext18                    text18       000000
__Ltext19                    text19       000000
__Ltext2                     text2        000000
__Ltext20                    text20       000000
__Ltext21                    text21       000000
__Ltext22                    text22       000000
__Ltext23                    text23       000000
__Ltext24                    text24       000000
__Ltext25                    text25       000000
__Ltext26                    text26       000000
__Ltext27                    text27       000000
__Ltext28                    text28       000000
__Ltext29                    text29       000000
__Ltext3                     text3        000000
__Ltext30                    text30       000000
__Ltext31                    text31       000000
__Ltext32                    text32       000000
__Ltext33                    text33       000000
__Ltext34                    text34       000000
__Ltext35                    text35       000000
__Ltext36                    text36       000000
__Ltext37                    text37       000000
__Ltext38                    text38       000000
__Ltext39                    text39       000000
__Ltext4                     text4        000000
__Ltext40                    text40       000000
__Ltext41                    text41       000000
__Ltext42                    text42       000000
__Ltext43                    text43       000000
__Ltext44                    text44       000000
__Ltext45                    text45       000000
__Ltext46                    text46       000000
__Ltext47                    text47       000000
__Ltext48                    text48       000000
__Ltext49                    text49       000000
__Ltext5                     text5        000000
__Ltext50                    text50       000000
__Ltext51                    text51       000000
__Ltext52                    text52       000000
__Ltext53                    text53       000000
__Ltext54                    text54       000000
__Ltext55                    text55       000000
__Ltext56                    text56       000000
__Ltext57                    text57       000000
__Ltext58                    text58       000000
__Ltext59                    text59       000000
__Ltext6                     text6        000000
__Ltext60                    text60       000000
__Ltext61                    text61       000000
__Ltext62                    text62       000000
__Ltext63                    text63       000000
__Ltext64                    text64       000000
__Ltext65                    text65       000000
__Ltext66                    text66       000000
__Ltext67                    text67       000000
__Ltext68                    text68       000000
__Ltext69                    text69       000000
__Ltext7                     text7        000000
__Ltext70                    text70       000000
__Ltext72                    text72       000000
__Ltext8                     text8        000000
__Ltext9                     text9        000000
__S0                         (abs)        30000E
__S1                         (abs)        0003C0
__S2                         (abs)        000000
___aldiv                     text59       0040FC
___aldiv@counter             cstackCOMRAM 00000C
___aldiv@dividend            cstackCOMRAM 000004
___aldiv@divisor             cstackCOMRAM 000008
___aldiv@quotient            cstackCOMRAM 00000E
___aldiv@sign                cstackCOMRAM 00000D
___almod                     text25       004414
___almod@counter             cstackCOMRAM 00000C
___almod@dividend            cstackCOMRAM 000004
___almod@divisor             cstackCOMRAM 000008
___almod@sign                cstackCOMRAM 00000D
___fladd                     text46       001206
___fladd@a                   cstackCOMRAM 00003B
___fladd@aexp                cstackCOMRAM 000044
___fladd@b                   cstackCOMRAM 000037
___fladd@bexp                cstackCOMRAM 000045
___fladd@grs                 cstackCOMRAM 000046
___fladd@signs               cstackCOMRAM 000043
___fldiv                     text52       001EA4
___fldiv@a                   cstackCOMRAM 000022
___fldiv@aexp                cstackCOMRAM 000036
___fldiv@b                   cstackCOMRAM 00001E
___fldiv@bexp                cstackCOMRAM 000035
___fldiv@grs                 cstackCOMRAM 000031
___fldiv@new_exp             cstackCOMRAM 00002F
___fldiv@rem                 cstackCOMRAM 00002A
___fldiv@sign                cstackCOMRAM 00002E
___fleq                      text28       004824
___fleq@ff1                  cstackCOMRAM 000004
___fleq@ff2                  cstackCOMRAM 000008
___flge                      text49       004310
___flge@ff1                  cstackCOMRAM 000004
___flge@ff2                  cstackCOMRAM 000008
___flmul                     text48       0016C6
___flmul@a                   cstackCOMRAM 00004B
___flmul@aexp                cstackBANK0  000061
___flmul@b                   cstackCOMRAM 000047
___flmul@bexp                cstackBANK0  000066
___flmul@grs                 cstackBANK0  000062
___flmul@prod                cstackBANK0  000067
___flmul@sign                cstackBANK0  000060
___flmul@temp                cstackBANK0  00006B
___flneg                     text47       005258
___flneg@f1                  cstackCOMRAM 000004
___flsub                     text45       005050
___flsub@a                   cstackBANK0  000071
___flsub@b                   cstackBANK0  00006D
___fltol                     text50       004208
___fltol@exp1                cstackCOMRAM 000058
___fltol@f1                  cstackBANK0  00008B
___fltol@sign1               cstackCOMRAM 000057
___inthi_sp                  stack        000000
___intlo_sp                  stack        000000
___param_bank                (abs)        000000
___rparam_used               (abs)        000001
___sp                        stack        000000
___wmul                      text20       0053AC
___wmul@multiplicand         cstackCOMRAM 000006
___wmul@multiplier           cstackCOMRAM 000004
___wmul@product              cstackCOMRAM 000008
___xxtofl                    text51       0038BA
___xxtofl@arg                cstackCOMRAM 00001A
___xxtofl@exp                cstackCOMRAM 000019
___xxtofl@sign               cstackCOMRAM 000018
___xxtofl@val                cstackCOMRAM 000010
__accesstop                  (abs)        000060
__activetblptr               (abs)        000002
__end_of_BLED_Color          text70       00476E
__end_of_BLED_Enable         text65       005050
__end_of_BLED_Toggle         text72       005120
__end_of_DHT11_GetRHum       text41       005472
__end_of_DHT11_GetTemp       text40       005460
__end_of_DHT11_Init          text64       0054A4
__end_of_DHT11_MReq          text38       003066
__end_of_DHT11_Wait4Resp     text39       004D98
__end_of_INTERRUPT_Init      text63       005498
__end_of_INTERRUPT_Tmr0      text62       00549E
__end_of_LCD_CLS             text37       00535C
__end_of_LCD_DisplayCtrl     text66       0053F6
__end_of_LCD_Init            text61       004974
__end_of_LCD_Lat             text69       00543A
__end_of_LCD_Printf          text5        0052FC
__end_of_LCD_SendCmd         text67       005386
__end_of_LCD_SendNibble      text68       005484
__end_of_LCD_SetRowCol       text36       005006
__end_of_LCD_Write           text33       004A14
__end_of_LCD_WriteByte       text35       00540E
__end_of_LCD_WriteChar       text34       00521E
__end_of_LED_Enable          text60       004E5C
__end_of_SERIAL_Init         text58       004C40
__end_of_SERIAL_Printf       text2        0052C6
__end_of_SERIAL_Write        text3        0050DE
__end_of_SERIAL_WriteChar    text4        005424
__end_of_SYSTEM_Init         text55       004F68
__end_of_TIMER0_End          text54       0054A8
__end_of_TIMER0_Int          text57       0051A0
__end_of_TIMER0_SetPs        text56       004824
__end_of_TIMER0_SetReg       text53       005490
__end_of_TIMER0_SetTime      text42       002E0A
__end_of___aldiv             text59       004208
__end_of___almod             text25       004500
__end_of___fladd             text46       0016C6
__end_of___fldiv             text52       00223E
__end_of___fleq              text28       0048CE
__end_of___flge              text49       004414
__end_of___flmul             text48       001AF2
__end_of___flneg             text47       005290
__end_of___flsub             text45       005098
__end_of___fltol             text50       004310
__end_of___wmul              text20       0053D2
__end_of___xxtofl            text51       003A6E
__end_of__initialization     cinit        004CAA
__end_of_addOx               text31       003D6C
__end_of_addSig              text30       003EC0
__end_of_atoui               text19       0046AC
__end_of_cleanS              text29       004FBC
__end_of_dtll_task           text1        0045DC
__end_of_ftoa                text26       002580
__end_of_ftoa_sci            text21       002B56
__end_of_getWP               text16       0032B6
__end_of_itoa                text22       003BF4
__end_of_lroundf             text43       005258
__end_of_main                text0        004BBE
__end_of_myISR               intcode_body 0051E0
__end_of_my_vsprintf         text6        000CAE
__end_of_normalize           text27       003FE6
__end_of_posc                text18       004DFA
__end_of_precE               text14       0036EC
__end_of_precF               text13       0038BA
__end_of_precG               text12       001206
__end_of_precI               text11       0040FC
__end_of_precS               text10       004D30
__end_of_reverse             text23       004AAC
__end_of_roundStr            text15       002876
__end_of_roundf              text44       001EA4
__end_of_searchc             text17       004F12
__end_of_setWidth            text9        0034E2
__end_of_strcat              text8        0053AC
__end_of_strcpy              text24       004EB8
__end_of_strlen              text32       005332
__end_of_toint               mediumconst  007E9C
__end_of_upperCL             text7        004B36
__end_offtoa@width           mediumconst  007E9E
__end_offtoa_sci@width       mediumconst  007EA0
__end_ofmy_vsprintf@tipo     mediumconst  007E98
__initialization             cinit        004C40
__mediumconst                mediumconst  007E88
__pbssBANK0                  bssBANK0     0000C2
__pbssBANK2                  bssBANK2     0002C4
__pbssBANK3                  bssBANK3     000300
__pbssCOMRAM                 bssCOMRAM    000059
__pcinit                     cinit        004C40
__pcstackBANK0               cstackBANK0  000060
__pcstackBANK1               cstackBANK1  000100
__pcstackBANK2               cstackBANK2  000200
__pcstackCOMRAM              cstackCOMRAM 000001
__pdataBANK0                 dataBANK0    0000EB
__pdataBANK2                 dataBANK2    000284
__pidataBANK0                idataBANK0   00543A
__pidataBANK2                idataBANK2   005120
__pintcode                   intcode      000008
__pintcode_body              intcode_body 0051A0
__pmediumconst               mediumconst  007E88
__ptext0                     text0        004B36
__ptext1                     text1        004500
__ptext10                    text10       004CB8
__ptext11                    text11       003FE6
__ptext12                    text12       000CAE
__ptext13                    text13       0036EC
__ptext14                    text14       0034E2
__ptext15                    text15       002580
__ptext16                    text16       003066
__ptext17                    text17       004EB8
__ptext18                    text18       004D98
__ptext19                    text19       0045DC
__ptext2                     text2        005290
__ptext20                    text20       0053AC
__ptext21                    text21       002876
__ptext22                    text22       003A6E
__ptext23                    text23       004A14
__ptext24                    text24       004E5C
__ptext25                    text25       004414
__ptext26                    text26       00223E
__ptext27                    text27       003EC0
__ptext28                    text28       004824
__ptext29                    text29       004F68
__ptext3                     text3        005098
__ptext30                    text30       003D6C
__ptext31                    text31       003BF4
__ptext32                    text32       0052FC
__ptext33                    text33       004974
__ptext34                    text34       0051E0
__ptext35                    text35       0053F6
__ptext36                    text36       004FBC
__ptext37                    text37       005332
__ptext38                    text38       002E0A
__ptext39                    text39       004D30
__ptext4                     text4        00540E
__ptext40                    text40       00544E
__ptext41                    text41       005460
__ptext42                    text42       002B56
__ptext43                    text43       00521E
__ptext44                    text44       001AF2
__ptext45                    text45       005050
__ptext46                    text46       001206
__ptext47                    text47       005258
__ptext48                    text48       0016C6
__ptext49                    text49       004310
__ptext5                     text5        0052C6
__ptext50                    text50       004208
__ptext51                    text51       0038BA
__ptext52                    text52       001EA4
__ptext53                    text53       005484
__ptext54                    text54       0054A4
__ptext55                    text55       004F12
__ptext56                    text56       00476E
__ptext57                    text57       005160
__ptext58                    text58       004BBE
__ptext59                    text59       0040FC
__ptext6                     text6        000012
__ptext60                    text60       004DFA
__ptext61                    text61       0048CE
__ptext62                    text62       005498
__ptext63                    text63       005490
__ptext64                    text64       00549E
__ptext65                    text65       005006
__ptext66                    text66       0053D2
__ptext67                    text67       00535C
__ptext68                    text68       005472
__ptext69                    text69       005424
__ptext7                     text7        004AAC
__ptext70                    text70       0046AC
__ptext72                    text72       0050DE
__ptext8                     text8        005386
__ptext9                     text9        0032B6
__ramtop                     ramtop       000800
__size_of_BLED_Color         (abs)        000000
__size_of_BLED_Enable        (abs)        000000
__size_of_BLED_Toggle        (abs)        000000
__size_of_DHT11_GetRHum      (abs)        000000
__size_of_DHT11_GetTemp      (abs)        000000
__size_of_DHT11_Init         (abs)        000000
__size_of_DHT11_MReq         (abs)        000000
__size_of_DHT11_Wait4Resp    (abs)        000000
__size_of_INTERRUPT_Init     (abs)        000000
__size_of_INTERRUPT_Tmr0     (abs)        000000
__size_of_LCD_CLS            (abs)        000000
__size_of_LCD_DisplayCtrl    (abs)        000000
__size_of_LCD_Init           (abs)        000000
__size_of_LCD_Lat            (abs)        000000
__size_of_LCD_Printf         (abs)        000000
__size_of_LCD_SendCmd        (abs)        000000
__size_of_LCD_SendNibble     (abs)        000000
__size_of_LCD_SetRowCol      (abs)        000000
__size_of_LCD_Write          (abs)        000000
__size_of_LCD_WriteByte      (abs)        000000
__size_of_LCD_WriteChar      (abs)        000000
__size_of_LED_Enable         (abs)        000000
__size_of_SERIAL_Init        (abs)        000000
__size_of_SERIAL_Printf      (abs)        000000
__size_of_SERIAL_Write       (abs)        000000
__size_of_SERIAL_WriteChar   (abs)        000000
__size_of_SYSTEM_Init        (abs)        000000
__size_of_TIMER0_End         (abs)        000000
__size_of_TIMER0_Int         (abs)        000000
__size_of_TIMER0_SetPs       (abs)        000000
__size_of_TIMER0_SetReg      (abs)        000000
__size_of_TIMER0_SetTime     (abs)        000000
__size_of___aldiv            (abs)        000000
__size_of___almod            (abs)        000000
__size_of___fladd            (abs)        000000
__size_of___fldiv            (abs)        000000
__size_of___fleq             (abs)        000000
__size_of___flge             (abs)        000000
__size_of___flmul            (abs)        000000
__size_of___flneg            (abs)        000000
__size_of___flsub            (abs)        000000
__size_of___fltol            (abs)        000000
__size_of___wmul             (abs)        000000
__size_of___xxtofl           (abs)        000000
__size_of_addOx              (abs)        000000
__size_of_addSig             (abs)        000000
__size_of_atoui              (abs)        000000
__size_of_cleanS             (abs)        000000
__size_of_dtll_task          (abs)        000000
__size_of_ftoa               (abs)        000000
__size_of_ftoa_sci           (abs)        000000
__size_of_getWP              (abs)        000000
__size_of_itoa               (abs)        000000
__size_of_lroundf            (abs)        000000
__size_of_main               (abs)        000000
__size_of_myISR              (abs)        000000
__size_of_my_vsprintf        (abs)        000000
__size_of_normalize          (abs)        000000
__size_of_posc               (abs)        000000
__size_of_precE              (abs)        000000
__size_of_precF              (abs)        000000
__size_of_precG              (abs)        000000
__size_of_precI              (abs)        000000
__size_of_precS              (abs)        000000
__size_of_reverse            (abs)        000000
__size_of_roundStr           (abs)        000000
__size_of_roundf             (abs)        000000
__size_of_searchc            (abs)        000000
__size_of_setWidth           (abs)        000000
__size_of_strcat             (abs)        000000
__size_of_strcpy             (abs)        000000
__size_of_strlen             (abs)        000000
__size_of_upperCL            (abs)        000000
__smallconst                 smallconst   000000
_addOx                       text31       003BF4
_addSig                      text30       003D6C
_alingL                      bssCOMRAM    00005B
_atoui                       text19       0045DC
_cleanS                      text29       004F68
_count                       bssBANK0     0000E3
_dht_humidity                bssBANK0     0000D5
_dht_temp                    bssBANK0     0000D9
_dtll_task                   text1        004500
_ftoa                        text26       00223E
_ftoa_sci                    text21       002876
_getWP                       text16       003066
_itoa                        text22       003A6E
_itoa$1693                   cstackCOMRAM 000018
_keyPad                      dataBANK0    0000EB
_lcd_c                       bssBANK0     0000DD
_lcd_r                       bssCOMRAM    000059
_lroundf                     text43       00521E
_main                        text0        004B36
_myISR                       intcode      000008
_my_vsprintf                 text6        000012
_normalize                   text27       003EC0
_numeral                     bssCOMRAM    00005A
_posc                        text18       004D98
_precE                       text14       0034E2
_precF                       text13       0036EC
_precG                       text12       000CAE
_precI                       text11       003FE6
_precInt                     bssBANK0     0000E6
_precS                       text10       004CB8
_reverse                     text23       004A14
_roundStr                    text15       002580
_roundf                      text44       001AF2
_roundf$2751                 cstackBANK0  00007F
_roundf$2752                 cstackBANK0  000079
_searchc                     text17       004EB8
_setWidth                    text9        0032B6
_sig                         bssBANK0     0000E8
_space                       bssBANK0     0000E5
_strcat                      text8        005386
_strcpy                      text24       004E5C
_strlen                      text32       0052FC
_upperCL                     text7        004AAC
_zeros                       bssBANK0     0000E7
addOx@hoS                    cstackCOMRAM 000008
addOx@k                      cstackCOMRAM 000011
addOx@len                    cstackCOMRAM 00000F
addOx@num                    cstackCOMRAM 00000A
addOx@type                   cstackCOMRAM 00000C
addSig@k                     cstackCOMRAM 000028
addSig@len                   cstackCOMRAM 000026
addSig@num                   cstackCOMRAM 000020
addSig@numS                  cstackCOMRAM 00001E
atoui@i                      cstackCOMRAM 000011
atoui@num                    cstackCOMRAM 00000D
atoui@str                    cstackCOMRAM 00000A
atoui@vp                     cstackCOMRAM 00000F
btemp                        temp         00005C
cleanS@i                     cstackCOMRAM 00000D
cleanS@len                   cstackCOMRAM 00000B
cleanS@str                   cstackCOMRAM 000008
dtll_task@relativeHum        cstackBANK1  0001F8
dtll_task@temperature        cstackBANK1  0001F4
end_of_initialization        cinit        004CAA
ftoa@buffer                  cstackBANK0  000093
ftoa@digit                   cstackBANK0  000099
ftoa@digit_1719              cstackBANK0  00009B
ftoa@exponent                cstackBANK0  00009D
ftoa@places                  cstackBANK0  00009F
ftoa@value                   cstackBANK0  000095
ftoa_sci@buffer              cstackBANK0  0000AC
ftoa_sci@digit               cstackBANK0  0000B2
ftoa_sci@digit_1711          cstackBANK0  0000B4
ftoa_sci@exponent            cstackBANK0  0000B8
ftoa_sci@i                   cstackBANK0  0000B6
ftoa_sci@value               cstackBANK0  0000AE
getWP@form                   cstackBANK0  0000A4
getWP@i                      cstackCOMRAM 000024
getWP@j                      cstackCOMRAM 00002A
getWP@k                      cstackCOMRAM 000026
getWP@len                    cstackCOMRAM 000022
getWP@p                      cstackCOMRAM 000028
getWP@prec_str               cstackCOMRAM 000018
getWP@precision              cstackBANK0  0000A8
getWP@width                  cstackBANK0  0000A6
getWP@width_str              cstackCOMRAM 00001D
int$flags                    temp         00005C
int_func                     intcode_body 0051A0
intlevel0                    text         000000
intlevel1                    text         000000
intlevel2                    text         000000
intlevel3                    text         000000
itoa@base_                   cstackBANK0  0000AA
itoa@i                       cstackCOMRAM 000020
itoa@num                     cstackBANK0  0000A6
itoa@rem                     cstackCOMRAM 00001C
itoa@str                     cstackBANK0  0000A4
lroundf@x                    cstackBANK0  000093
my_vsprintf@buffer           cstackBANK1  00018E
my_vsprintf@ch               cstackBANK1  0001CE
my_vsprintf@char_temp        cstackBANK1  000180
my_vsprintf@double_temp      cstackBANK1  0001E0
my_vsprintf@error            cstackBANK1  0001D6
my_vsprintf@expA             cstackBANK1  0001D4
my_vsprintf@format           cstackBANK1  000182
my_vsprintf@i                cstackBANK1  0001E4
my_vsprintf@int_temp         cstackBANK1  0001DE
my_vsprintf@j                cstackBANK1  0001DC
my_vsprintf@length           cstackBANK1  0001D2
my_vsprintf@prec             cstackBANK1  0001E6
my_vsprintf@sformat          cstackBANK0  0000BC
my_vsprintf@str              cstackBANK0  0000BA
my_vsprintf@string           cstackBANK1  000100
my_vsprintf@string_temp      cstackBANK1  00018C
my_vsprintf@tipo             mediumconst  007E89
my_vsprintf@uint_temp        cstackBANK1  0001D0
my_vsprintf@valist           cstackBANK0  0000BE
my_vsprintf@width            cstackBANK1  0001DA
my_vsprintf@x                cstackBANK1  0001D8
normalize@exponent           cstackBANK0  00006D
normalize@val                cstackCOMRAM 000053
normalize@value              cstackBANK0  00006F
posc@a                       cstackCOMRAM 00000C
posc@c                       cstackCOMRAM 00000A
posc@str                     cstackCOMRAM 000008
precE@i                      cstackCOMRAM 00002B
precE@j                      cstackCOMRAM 00002D
precE@k                      cstackCOMRAM 00002F
precE@len                    cstackCOMRAM 000027
precE@p                      cstackCOMRAM 000025
precE@posE                   cstackCOMRAM 000029
precE@precision              cstackCOMRAM 000021
precE@str                    cstackCOMRAM 00001F
precF@i                      cstackCOMRAM 00002A
precF@j                      cstackCOMRAM 000026
precF@k                      cstackCOMRAM 00002E
precF@len                    cstackCOMRAM 00002C
precF@p                      cstackCOMRAM 000028
precF@precision              cstackCOMRAM 000021
precF@str                    cstackCOMRAM 00001F
precG@digS                   cstackCOMRAM 00002A
precG@f                      cstackCOMRAM 000028
precG@i                      cstackCOMRAM 000034
precG@j                      cstackCOMRAM 000030
precG@k                      cstackCOMRAM 000032
precG@len                    cstackCOMRAM 00002E
precG@p                      cstackCOMRAM 000026
precG@posE                   cstackCOMRAM 00002C
precG@precision              cstackCOMRAM 000021
precG@str                    cstackCOMRAM 00001F
precI@i                      cstackCOMRAM 000014
precI@j                      cstackCOMRAM 000010
precI@k                      cstackCOMRAM 00000E
precI@len                    cstackCOMRAM 000012
precI@precision              cstackCOMRAM 00000A
precI@str                    cstackCOMRAM 000008
precS@i                      cstackCOMRAM 000010
precS@len                    cstackCOMRAM 00000E
precS@precision              cstackCOMRAM 00000A
precS@str                    cstackCOMRAM 000008
reverse@F192                 dataBANK2    000284
reverse@auxstr               cstackBANK0  000060
reverse@i                    cstackBANK0  0000A2
reverse@j                    cstackBANK0  0000A0
reverse@str                  cstackCOMRAM 000012
roundStr@decnum              cstackCOMRAM 00000E
roundStr@e                   cstackCOMRAM 000010
roundStr@i                   cstackCOMRAM 00001B
roundStr@k                   cstackCOMRAM 00001D
roundStr@len                 cstackCOMRAM 000017
roundStr@p                   cstackCOMRAM 000019
roundStr@prn                 cstackCOMRAM 000012
roundf@F525                  bssBANK0     0000D1
roundf@e                     cstackBANK0  00007D
roundf@u                     cstackBANK0  000083
roundf@x                     cstackBANK0  000075
roundf@y                     cstackBANK0  000087
searchc@a                    cstackCOMRAM 00000C
searchc@c                    cstackCOMRAM 00000A
searchc@str                  cstackCOMRAM 000008
setWidth@j                   cstackCOMRAM 000012
setWidth@len                 cstackCOMRAM 000010
setWidth@str                 cstackCOMRAM 000008
setWidth@width               cstackCOMRAM 00000A
setWidth@widthDif            cstackCOMRAM 00000E
stackhi                      (abs)        0007FF
stacklo                      (abs)        0003C0
start                        init         00000E
start_initialization         cinit        004C40
strcat@dest                  cstackCOMRAM 000012
strcat@src                   cstackCOMRAM 000014
strcpy@d                     cstackCOMRAM 000010
strcpy@dest                  cstackCOMRAM 000008
strcpy@s                     cstackCOMRAM 00000E
strcpy@src                   cstackCOMRAM 00000A
strlen@a                     cstackCOMRAM 000006
strlen@s                     cstackCOMRAM 000004
ttemp5                       temp         00005D
ttemp6                       temp         000060
ttemp7                       temp         000064
upperCL@i                    cstackCOMRAM 00000B
upperCL@str                  cstackCOMRAM 000008
wtemp8                       temp         00005D


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 128 in file "src/main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       2       0       0       0       0       0       0
      Totals:         0       0       2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_BLED_Color
		_LCD_DisplayCtrl
		_LCD_Printf
		_SERIAL_Printf
		_SYSTEM_Init
		_TIMER0_SetTime
		_dtll_task
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _dtll_task *****************
 Defined at:
		line 105 in file "src/main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  relativeHum     4  248[BANK1 ] float 
  temperature     4  244[BANK1 ] float 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       8       0       0       0       0       0       0
      Temps:          0       0       2       0       0       0       0       0       0
      Totals:         0       0      10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_DHT11_GetRHum
		_DHT11_GetTemp
		_DHT11_MReq
		_LCD_CLS
		_LCD_Printf
		_SERIAL_Printf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SERIAL_Printf *****************
 Defined at:
		line 90 in file "src/serial.c"
 Parameters:    Size  Location     Type
  fmt             2  232[BANK1 ] PTR const unsigned char 
		 -> STR_18(16), STR_16(8), STR_14(51), STR_12(15), 
		 -> STR_10(23), STR_8(23), STR_5(28), STR_3(14), 
 Auto vars:     Size  Location     Type
  strout        128    0[BANK2 ] unsigned char [128]
  ap              2  130[BANK2 ] PTR void [1]
		 -> ?_LCD_Printf(2), ?_SERIAL_Printf(2), 
  ret             2    0        int 
 Return value:  Size  Location     Type
                  2  232[BANK1 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0      10       0       0       0       0       0       0
      Locals:         0       0       0     132       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0      10     132       0       0       0       0       0
Total ram usage:      142 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_SERIAL_Write
		_my_vsprintf
 This function is called by:
		_dtll_task
		_main
		_testMath_task
		_KBDSerial_task
 This function uses a non-reentrant model


 *************** function _SERIAL_Write *****************
 Defined at:
		line 33 in file "src/serial.c"
 Parameters:    Size  Location     Type
  str             2    7[COMRAM] PTR unsigned char 
		 -> SERIAL_Printf@strout(128), 
 Auto vars:     Size  Location     Type
  i               2    9[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SERIAL_WriteChar
		_strlen
 This function is called by:
		_SERIAL_Printf
 This function uses a non-reentrant model


 *************** function _SERIAL_WriteChar *****************
 Defined at:
		line 28 in file "src/serial.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SERIAL_Write
		_SERIAL_WriteLine
 This function uses a non-reentrant model


 *************** function _LCD_Printf *****************
 Defined at:
		line 174 in file "src/lcd.c"
 Parameters:    Size  Location     Type
  fmt             2  232[BANK1 ] PTR const unsigned char 
		 -> STR_17(15), STR_15(7), STR_13(31), STR_11(15), 
		 -> STR_9(25), STR_7(27), STR_4(23), STR_2(14), 
		 -> STR_1(8), 
 Auto vars:     Size  Location     Type
  strout        128    0[BANK2 ] unsigned char [128]
  ap              2  130[BANK2 ] PTR void [1]
		 -> ?_LCD_Printf(2), ?_SERIAL_Printf(2), 
  ret             2    0        int 
 Return value:  Size  Location     Type
                  2  232[BANK1 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0      10       0       0       0       0       0       0
      Locals:         0       0       0     132       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0      10     132       0       0       0       0       0
Total ram usage:      142 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_LCD_Write
		_my_vsprintf
 This function is called by:
		_dtll_task
		_main
		_SerialLCD_task
		_testMath_task
		_KBDSerial_task
 This function uses a non-reentrant model


 *************** function _my_vsprintf *****************
 Defined at:
		line 8 in file "src/print/my_print.c"
 Parameters:    Size  Location     Type
  str             2   90[BANK0 ] PTR unsigned char 
		 -> LCD_Printf@strout(128), SERIAL_Printf@strout(128), 
  sformat         2   92[BANK0 ] PTR const unsigned char 
		 -> STR_18(16), STR_17(15), STR_16(8), STR_15(7), 
		 -> STR_14(51), STR_13(31), STR_12(15), STR_11(15), 
		 -> STR_10(23), STR_9(25), STR_8(23), STR_7(27), 
		 -> STR_5(28), STR_4(23), STR_3(14), STR_2(14), 
		 -> STR_1(8), 
  valist          2   94[BANK0 ] PTR PTR void 
		 -> LCD_Printf@ap(2), SERIAL_Printf@ap(2), 
 Auto vars:     Size  Location     Type
  string        128    0[BANK1 ] unsigned char [128]
  buffer         64  142[BANK1 ] unsigned char [64]
  format         10  130[BANK1 ] unsigned char [10]
  double_temp     4  224[BANK1 ] unsigned char [10]
  prec            2  230[BANK1 ] int 
  i               2  228[BANK1 ] int 
  int_temp        2  222[BANK1 ] int 
  j               2  220[BANK1 ] int 
  width           2  218[BANK1 ] int 
  x               2  216[BANK1 ] int 
  ch              2  206[BANK1 ] unsigned char [2]
  error           2  214[BANK1 ] int 
  expA            2  212[BANK1 ] int 
  char_temp       2  128[BANK1 ] unsigned char [2]
  length          2  210[BANK1 ] int 
  uint_temp       2  208[BANK1 ] unsigned short 
  string_temp     2  140[BANK1 ] PTR unsigned char 
		 -> ?_LCD_Printf(2), ?_SERIAL_Printf(2), STR_6(5), SerialLCD_task@txt(32), 
 Return value:  Size  Location     Type
                  2   90[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       6       0       0       0       0       0       0       0
      Locals:         0       0     232       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0
      Totals:         0       8     232       0       0       0       0       0       0
Total ram usage:      240 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___xxtofl
		_addOx
		_addSig
		_cleanS
		_ftoa
		_ftoa_sci
		_getWP
		_itoa
		_precE
		_precF
		_precG
		_precI
		_precS
		_setWidth
		_strcat
		_strcpy
		_strlen
		_upperCL
 This function is called by:
		_SERIAL_Printf
		_LCD_Printf
 This function uses a non-reentrant model


 *************** function _upperCL *****************
 Defined at:
		line 103 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2    7[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
 Auto vars:     Size  Location     Type
  i               2   10[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _strcat *****************
 Defined at:
		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
 Parameters:    Size  Location     Type
  dest            2   17[COMRAM] PTR unsigned char 
		 -> my_vsprintf@string(128), 
  src             2   19[COMRAM] PTR const unsigned char 
		 -> my_vsprintf@buffer(64), my_vsprintf@ch(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   17[COMRAM] PTR unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strcpy
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _setWidth *****************
 Defined at:
		line 403 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2    7[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  width           2    9[COMRAM] PTR int 
		 -> my_vsprintf@width(2), 
 Auto vars:     Size  Location     Type
  j               2   17[COMRAM] int 
  len             2   15[COMRAM] int 
  widthDif        2   13[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _precS *****************
 Defined at:
		line 348 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2    7[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  precision       2    9[COMRAM] PTR int 
		 -> my_vsprintf@prec(2), 
 Auto vars:     Size  Location     Type
  i               2   15[COMRAM] int 
  len             2   13[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _precI *****************
 Defined at:
		line 323 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2    7[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  precision       2    9[COMRAM] PTR int 
		 -> my_vsprintf@prec(2), 
 Auto vars:     Size  Location     Type
  i               2   19[COMRAM] int 
  len             2   17[COMRAM] int 
  j               2   15[COMRAM] int 
  k               2   13[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         8       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _precG *****************
 Defined at:
		line 239 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2   30[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  precision       2   32[COMRAM] PTR int 
		 -> my_vsprintf@prec(2), 
 Auto vars:     Size  Location     Type
  i               2   51[COMRAM] int 
  k               2   49[COMRAM] int 
  j               2   47[COMRAM] int 
  len             2   45[COMRAM] int 
  posE            2   43[COMRAM] int 
  digS            2   41[COMRAM] int 
  f               2   39[COMRAM] int 
  p               2   37[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:        16       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        23       0       0       0       0       0       0       0       0
Total ram usage:       23 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_posc
		_roundStr
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _precF *****************
 Defined at:
		line 173 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2   30[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  precision       2   32[COMRAM] PTR int 
		 -> my_vsprintf@prec(2), 
 Auto vars:     Size  Location     Type
  k               2   45[COMRAM] int 
  len             2   43[COMRAM] int 
  i               2   41[COMRAM] int 
  p               2   39[COMRAM] int 
  j               2   37[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:        10       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        17       0       0       0       0       0       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_posc
		_roundStr
		_searchc
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _precE *****************
 Defined at:
		line 202 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2   30[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  precision       2   32[COMRAM] PTR int 
		 -> my_vsprintf@prec(2), 
 Auto vars:     Size  Location     Type
  k               2   46[COMRAM] int 
  j               2   44[COMRAM] int 
  i               2   42[COMRAM] int 
  posE            2   40[COMRAM] int 
  len             2   38[COMRAM] int 
  p               2   36[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:        12       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        18       0       0       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_posc
		_roundStr
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _roundStr *****************
 Defined at:
		line 38 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  decnum          2   13[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  e               2   15[COMRAM] int 
  prn             2   17[COMRAM] int 
 Auto vars:     Size  Location     Type
  k               2   28[COMRAM] int 
  i               2   26[COMRAM] int 
  p               2   24[COMRAM] int 
  len             2   22[COMRAM] int 
 Return value:  Size  Location     Type
                  2   13[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         8       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        17       0       0       0       0       0       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_posc
		_strlen
 This function is called by:
		_precF
		_precE
		_precG
 This function uses a non-reentrant model


 *************** function _getWP *****************
 Defined at:
		line 125 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  form            2   68[BANK0 ] PTR unsigned char 
		 -> my_vsprintf@format(10), 
  width           2   70[BANK0 ] PTR int 
		 -> my_vsprintf@width(2), 
  precision       2   72[BANK0 ] PTR int 
		 -> my_vsprintf@prec(2), 
 Auto vars:     Size  Location     Type
  width_str       5   28[COMRAM] unsigned char [5]
  prec_str        5   23[COMRAM] unsigned char [5]
  j               2   41[COMRAM] int 
  p               2   39[COMRAM] int 
  k               2   37[COMRAM] int 
  i               2   35[COMRAM] int 
  len             2   33[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       6       0       0       0       0       0       0       0
      Locals:        20       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        22       6       0       0       0       0       0       0       0
Total ram usage:       28 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_atoui
		_posc
		_reverse
		_searchc
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _searchc *****************
 Defined at:
		line 11 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2    7[COMRAM] PTR unsigned char 
		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), 
  c               1    9[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  a               2   11[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strlen
 This function is called by:
		_getWP
		_precF
 This function uses a non-reentrant model


 *************** function _posc *****************
 Defined at:
		line 24 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2    7[COMRAM] PTR unsigned char 
		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), 
  c               1    9[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  a               2   11[COMRAM] int 
 Return value:  Size  Location     Type
                  2    7[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strlen
 This function is called by:
		_roundStr
		_getWP
		_precF
		_precE
		_precG
 This function uses a non-reentrant model


 *************** function _atoui *****************
 Defined at:
		line 57 in file "src/print/toString.c"
 Parameters:    Size  Location     Type
  str             2    9[COMRAM] PTR unsigned char 
		 -> getWP@prec_str(5), getWP@width_str(5), 
 Auto vars:     Size  Location     Type
  i               2   16[COMRAM] int 
  vp              2   14[COMRAM] int 
  num             2   12[COMRAM] int 
 Return value:  Size  Location     Type
                  2    9[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___wmul
		_strlen
 This function is called by:
		_getWP
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    3[COMRAM] unsigned int 
  multiplicand    2    5[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    7[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    3[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_atoui
 This function uses a non-reentrant model


 *************** function _ftoa_sci *****************
 Defined at:
		line 97 in file "src/print/toString.c"
 Parameters:    Size  Location     Type
  buffer          2   76[BANK0 ] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  value           4   78[BANK0 ] PTR unsigned char 
 Auto vars:     Size  Location     Type
  digit           2   84[BANK0 ] int 
  exponent        2   88[BANK0 ] int 
  i               2   86[BANK0 ] int 
  digit           2   82[BANK0 ] int 
 Return value:  Size  Location     Type
                  2   76[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       6       0       0       0       0       0       0       0
      Locals:         0       8       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0      14       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___fleq
		___flmul
		___flneg
		___flsub
		___fltol
		___xxtofl
		_itoa
		_normalize
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _itoa *****************
 Defined at:
		line 22 in file "src/print/toString.c"
 Parameters:    Size  Location     Type
  str             2   68[BANK0 ] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  num             4   70[BANK0 ] long 
  base_           2   74[BANK0 ] int 
 Auto vars:     Size  Location     Type
  rem             4   27[COMRAM] long 
  i               2   31[COMRAM] int 
  isNegative      2    0        int 
 Return value:  Size  Location     Type
                  2   68[BANK0 ] PTR unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       8       0       0       0       0       0       0       0
      Locals:        12       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        12       8       0       0       0       0       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___aldiv
		___almod
		_reverse
 This function is called by:
		_my_vsprintf
		_ftoa_sci
 This function uses a non-reentrant model


 *************** function _reverse *****************
 Defined at:
		line 8 in file "src/print/toString.c"
 Parameters:    Size  Location     Type
  str             2   17[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), getWP@prec_str(5), getWP@width_str(5), 
 Auto vars:     Size  Location     Type
  auxstr         64    0[BANK0 ] unsigned char [64]
  i               2   66[BANK0 ] int 
  j               2   64[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0      68       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         4      68       0       0       0       0       0       0       0
Total ram usage:       72 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strcpy
		_strlen
 This function is called by:
		_getWP
		_itoa
 This function uses a non-reentrant model


 *************** function _strcpy *****************
 Defined at:
		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 Parameters:    Size  Location     Type
  dest            2    7[COMRAM] PTR unsigned char 
		 -> LCD_Printf@strout(128), my_vsprintf@buffer(64), my_vsprintf@string(128), getWP@prec_str(5), 
		 -> getWP@width_str(5), SERIAL_Printf@strout(128), 
  src             2    9[COMRAM] PTR const unsigned char 
		 -> ?_LCD_Printf(2), reverse@auxstr(64), STR_20(2), STR_19(2), 
		 -> my_vsprintf@buffer(64), my_vsprintf@ch(2), my_vsprintf@char_temp(2), my_vsprintf@string(128), 
		 -> ?_SERIAL_Printf(2), STR_6(5), SerialLCD_task@txt(32), 
 Auto vars:     Size  Location     Type
  d               2   15[COMRAM] PTR unsigned char 
		 -> LCD_Printf@strout(128), my_vsprintf@buffer(64), my_vsprintf@string(128), getWP@prec_str(5), 
		 -> getWP@width_str(5), SERIAL_Printf@strout(128), 
  s               2   13[COMRAM] PTR const unsigned char 
		 -> ?_LCD_Printf(2), reverse@auxstr(64), STR_20(2), STR_19(2), 
		 -> my_vsprintf@buffer(64), my_vsprintf@ch(2), my_vsprintf@char_temp(2), my_vsprintf@string(128), 
		 -> ?_SERIAL_Printf(2), STR_6(5), SerialLCD_task@txt(32), 
 Return value:  Size  Location     Type
                  2    7[COMRAM] PTR unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_my_vsprintf
		_reverse
		_strcat
 This function uses a non-reentrant model


 *************** function ___almod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
 Parameters:    Size  Location     Type
  dividend        4    3[COMRAM] long 
  divisor         4    7[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1   12[COMRAM] unsigned char 
  counter         1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    3[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function _ftoa *****************
 Defined at:
		line 140 in file "src/print/toString.c"
 Parameters:    Size  Location     Type
  buffer          2   51[BANK0 ] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  value           4   53[BANK0 ] PTR unsigned char 
 Auto vars:     Size  Location     Type
  digit           2   59[BANK0 ] int 
  digit           2   57[BANK0 ] int 
  places          2   63[BANK0 ] int 
  exponent        2   61[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       6       0       0       0       0       0       0       0
      Locals:         0       8       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0      14       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fleq
		___flmul
		___flneg
		___flsub
		___fltol
		___xxtofl
		_normalize
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _normalize *****************
 Defined at:
		line 76 in file "src/print/toString.c"
 Parameters:    Size  Location     Type
  val             2   82[COMRAM] PTR 
		 -> ftoa@value(4), ftoa_sci@value(4), 
 Auto vars:     Size  Location     Type
  value           4   15[BANK0 ] PTR 
  exponent        2   13[BANK0 ] int 
 Return value:  Size  Location     Type
                  2   82[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       6       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___fldiv
		___flge
		___flmul
 This function is called by:
		_ftoa_sci
		_ftoa
 This function uses a non-reentrant model


 *************** function ___fleq *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 Parameters:    Size  Location     Type
  ff1             4    3[COMRAM] int 
  ff2             4    7[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ftoa_sci
		_ftoa
 This function uses a non-reentrant model


 *************** function _cleanS *****************
 Defined at:
		line 115 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  str             2    7[COMRAM] PTR unsigned char 
		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), SerialLCD_task@txt(32), 
 Auto vars:     Size  Location     Type
  i               2   12[COMRAM] int 
  len             2   10[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strlen
 This function is called by:
		_my_vsprintf
		_SerialLCD_task
 This function uses a non-reentrant model


 *************** function _addSig *****************
 Defined at:
		line 361 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  numS            2   29[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  num             4   31[COMRAM] PTR unsigned char 
 Auto vars:     Size  Location     Type
  k               2   39[COMRAM] int 
  len             2   37[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flge
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _addOx *****************
 Defined at:
		line 383 in file "src/print/format.c"
 Parameters:    Size  Location     Type
  hoS             2    7[COMRAM] PTR unsigned char 
		 -> my_vsprintf@buffer(64), 
  num             2    9[COMRAM] int 
  type            1   11[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  k               2   16[COMRAM] int 
  len             2   14[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strlen
 This function is called by:
		_my_vsprintf
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 Parameters:    Size  Location     Type
  s               2    3[COMRAM] PTR const unsigned char 
		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), my_vsprintf@string(128), getWP@prec_str(5), 
		 -> getWP@width_str(5), SERIAL_Printf@strout(128), SerialLCD_task@txt(32), 
 Auto vars:     Size  Location     Type
  a               2    5[COMRAM] PTR const unsigned char 
		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), my_vsprintf@string(128), getWP@prec_str(5), 
		 -> getWP@width_str(5), SERIAL_Printf@strout(128), SerialLCD_task@txt(32), 
 Return value:  Size  Location     Type
                  2    3[COMRAM] unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SERIAL_Write
		_searchc
		_posc
		_roundStr
		_upperCL
		_cleanS
		_getWP
		_precF
		_precE
		_precG
		_precI
		_precS
		_addSig
		_addOx
		_setWidth
		_my_vsprintf
		_reverse
		_atoui
		_strcat
		_SERIAL_WriteLine
 This function uses a non-reentrant model


 *************** function _LCD_Write *****************
 Defined at:
		line 152 in file "src/lcd.c"
 Parameters:    Size  Location     Type
  str             2   14[COMRAM] PTR unsigned char 
		 -> LCD_Printf@strout(128), 
 Auto vars:     Size  Location     Type
  i               2   18[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_LCD_SetRowCol
		_LCD_WriteChar
 This function is called by:
		_LCD_Printf
 This function uses a non-reentrant model


 *************** function _LCD_WriteChar *****************
 Defined at:
		line 63 in file "src/lcd.c"
 Parameters:    Size  Location     Type
  wData           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  wData           1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_SetRowCol
		_LCD_WriteByte
 This function is called by:
		_LCD_Write
 This function uses a non-reentrant model


 *************** function _LCD_WriteByte *****************
 Defined at:
		line 55 in file "src/lcd.c"
 Parameters:    Size  Location     Type
  wData           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  wData           1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_SendNibble
 This function is called by:
		_LCD_WriteChar
		_CreateChar
 This function uses a non-reentrant model


 *************** function _LCD_SetRowCol *****************
 Defined at:
		line 128 in file "src/lcd.c"
 Parameters:    Size  Location     Type
  row             1    wreg     _Bool 
  col             1    7[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  row             1   12[COMRAM] _Bool 
  cmd             2   10[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_SendCmd
 This function is called by:
		_LCD_WriteChar
		_LCD_Write
		_CreateChar
 This function uses a non-reentrant model


 *************** function _LCD_CLS *****************
 Defined at:
		line 76 in file "src/lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_SendCmd
 This function is called by:
		_dtll_task
		_SerialLCD_task
		_testMath_task
		_KBDSerial_task
 This function uses a non-reentrant model


 *************** function _DHT11_MReq *****************
 Defined at:
		line 28 in file "src/dht11.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            5   75[COMRAM] unsigned char [5]
  j               2   83[COMRAM] int 
  i               2   81[COMRAM] int 
  voltLen         2   73[COMRAM] int 
  error           1   80[COMRAM] _Bool 
  checksum        1   72[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:        13       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_DHT11_Wait4Resp
		___fladd
		___fldiv
		___xxtofl
 This function is called by:
		_dtll_task
 This function uses a non-reentrant model


 *************** function _DHT11_Wait4Resp *****************
 Defined at:
		line 12 in file "src/dht11.c"
 Parameters:    Size  Location     Type
  HtoL            1    wreg     _Bool 
  timeout_10us    2    3[COMRAM] int 
 Auto vars:     Size  Location     Type
  HtoL            1    5[COMRAM] _Bool 
  retryTimeout    2    6[COMRAM] int 
 Return value:  Size  Location     Type
                  2    3[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_DHT11_MReq
 This function uses a non-reentrant model


 *************** function _DHT11_GetTemp *****************
 Defined at:
		line 87 in file "src/dht11.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    3[COMRAM] float 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_dtll_task
 This function uses a non-reentrant model


 *************** function _DHT11_GetRHum *****************
 Defined at:
		line 92 in file "src/dht11.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    3[COMRAM] float 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_dtll_task
 This function uses a non-reentrant model


 *************** function _TIMER0_SetTime *****************
 Defined at:
		line 74 in file "src/timer.c"
 Parameters:    Size  Location     Type
  time            4   57[BANK0 ] float 
 Auto vars:     Size  Location     Type
  CT              4   90[BANK0 ] float 
  MC              4   86[BANK0 ] float 
  tmin            4   65[BANK0 ] float 
  tmax            4   61[BANK0 ] float 
  e               1   85[BANK0 ] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       4       0       0       0       0       0       0       0
      Locals:         0      33       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0      37       0       0       0       0       0       0       0
Total ram usage:       37 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_TIMER0_End
		_TIMER0_SetReg
		___fladd
		___fldiv
		___flge
		___flmul
		___flsub
		___fltol
		___xxtofl
		_lroundf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lroundf *****************
 Defined at:
		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lroundf.c"
 Parameters:    Size  Location     Type
  x               4   51[BANK0 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   51[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       4       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___fltol
		_roundf
 This function is called by:
		_TIMER0_SetTime
 This function uses a non-reentrant model


 *************** function _roundf *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
 Parameters:    Size  Location     Type
  x               4   21[BANK0 ] float 
 Auto vars:     Size  Location     Type
  y               4   39[BANK0 ] float 
  u               4   35[BANK0 ] struct .
  e               2   29[BANK0 ] int 
 Return value:  Size  Location     Type
                  4   21[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       4       0       0       0       0       0       0       0
      Locals:         0      18       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:         4      22       0       0       0       0       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
		___flge
		___flmul
		___flneg
		___flsub
 This function is called by:
		_lroundf
 This function uses a non-reentrant model


 *************** function ___flsub *****************
 Defined at:
		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 Parameters:    Size  Location     Type
  b               4   13[BANK0 ] float 
  a               4   17[BANK0 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       8       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       8       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___fladd
 This function is called by:
		_TIMER0_SetTime
		_ftoa_sci
		_ftoa
		_roundf
 This function uses a non-reentrant model


 *************** function ___fladd *****************
 Defined at:
		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 Parameters:    Size  Location     Type
  b               4   54[COMRAM] float 
  a               4   58[COMRAM] float 
 Auto vars:     Size  Location     Type
  grs             1   69[COMRAM] unsigned char 
  bexp            1   68[COMRAM] unsigned char 
  aexp            1   67[COMRAM] unsigned char 
  signs           1   66[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   54[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        16       0       0       0       0       0       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TIMER0_SetTime
		_DHT11_MReq
		___flsub
		_roundf
 This function uses a non-reentrant model


 *************** function ___flneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 Parameters:    Size  Location     Type
  f1              4    3[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    3[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ftoa_sci
		_ftoa
		_roundf
 This function uses a non-reentrant model


 *************** function ___flmul *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 Parameters:    Size  Location     Type
  b               4   70[COMRAM] unsigned char 
  a               4   74[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  prod            4    7[BANK0 ] struct .
  grs             4    2[BANK0 ] unsigned long 
  temp            2   11[BANK0 ] struct .
  bexp            1    6[BANK0 ] unsigned char 
  aexp            1    1[BANK0 ] unsigned char 
  sign            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   70[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         0      13       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        12      13       0       0       0       0       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TIMER0_SetTime
		_normalize
		_ftoa_sci
		_ftoa
		_roundf
 This function uses a non-reentrant model


 *************** function ___flge *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 Parameters:    Size  Location     Type
  ff1             4    3[COMRAM] unsigned char 
  ff2             4    7[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TIMER0_SetTime
		_addSig
		_normalize
		_roundf
 This function uses a non-reentrant model


 *************** function ___fltol *****************
 Defined at:
		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 Parameters:    Size  Location     Type
  f1              4   43[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  exp1            1   87[COMRAM] unsigned char 
  sign1           1   86[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   43[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       4       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       4       0       0       0       0       0       0       0
      Totals:         2       8       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TIMER0_SetTime
		_ftoa_sci
		_ftoa
		_lroundf
 This function uses a non-reentrant model


 *************** function ___xxtofl *****************
 Defined at:
		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 Parameters:    Size  Location     Type
  sign            1    wreg     unsigned char 
  val             4   15[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1   23[COMRAM] unsigned char 
  arg             4   25[COMRAM] unsigned long 
  exp             1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   15[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TIMER0_SetTime
		_my_vsprintf
		_ftoa_sci
		_ftoa
		_DHT11_MReq
 This function uses a non-reentrant model


 *************** function ___fldiv *****************
 Defined at:
		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 Parameters:    Size  Location     Type
  b               4   29[COMRAM] unsigned char 
  a               4   33[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  grs             4   48[COMRAM] unsigned long 
  rem             4   41[COMRAM] unsigned long 
  new_exp         2   46[COMRAM] short 
  aexp            1   53[COMRAM] unsigned char 
  bexp            1   52[COMRAM] unsigned char 
  sign            1   45[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   29[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:        13       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        25       0       0       0       0       0       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TIMER0_SetTime
		_normalize
		_DHT11_MReq
 This function uses a non-reentrant model


 *************** function _TIMER0_SetReg *****************
 Defined at:
		line 68 in file "src/timer.c"
 Parameters:    Size  Location     Type
  val             2   55[BANK0 ] unsigned short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       2       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TIMER0_SetTime
 This function uses a non-reentrant model


 *************** function _TIMER0_End *****************
 Defined at:
		line 16 in file "src/timer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_TIMER0_SetTime
 This function uses a non-reentrant model


 *************** function _SYSTEM_Init *****************
 Defined at:
		line 70 in file "src/system.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_BLED_Enable
		_DHT11_Init
		_INTERRUPT_Init
		_INTERRUPT_Tmr0
		_LCD_Init
		_LED_Enable
		_SERIAL_Init
		_TIMER0_Int
		_TIMER0_SetPs
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TIMER0_SetPs *****************
 Defined at:
		line 21 in file "src/timer.c"
 Parameters:    Size  Location     Type
  prescale        1    wreg     enum E3949
 Auto vars:     Size  Location     Type
  prescale        1    5[COMRAM] enum E3949
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Init
 This function uses a non-reentrant model


 *************** function _TIMER0_Int *****************
 Defined at:
		line 6 in file "src/timer.c"
 Parameters:    Size  Location     Type
  t0_8b           1    wreg     _Bool 
  t0_cs           1    3[COMRAM] _Bool 
  t0_se           1    4[COMRAM] _Bool 
  t0_psa          1    5[COMRAM] _Bool 
 Auto vars:     Size  Location     Type
  t0_8b           1    6[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Init
 This function uses a non-reentrant model


 *************** function _SERIAL_Init *****************
 Defined at:
		line 3 in file "src/serial.c"
 Parameters:    Size  Location     Type
  BAUD            4   17[COMRAM] long 
 Auto vars:     Size  Location     Type
  baudrate        2   25[COMRAM] unsigned short 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___aldiv
 This function is called by:
		_SYSTEM_Init
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 Parameters:    Size  Location     Type
  dividend        4    3[COMRAM] long 
  divisor         4    7[COMRAM] long 
 Auto vars:     Size  Location     Type
  quotient        4   13[COMRAM] long 
  sign            1   12[COMRAM] unsigned char 
  counter         1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    3[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SERIAL_Init
		_itoa
 This function uses a non-reentrant model


 *************** function _LED_Enable *****************
 Defined at:
		line 3 in file "src/leds.c"
 Parameters:    Size  Location     Type
  led             1    wreg     enum E3160
 Auto vars:     Size  Location     Type
  led             1    5[COMRAM] enum E3160
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Init
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 7 in file "src/lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_SendCmd
 This function is called by:
		_SYSTEM_Init
 This function uses a non-reentrant model


 *************** function _INTERRUPT_Tmr0 *****************
 Defined at:
		line 44 in file "src/interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Init
 This function uses a non-reentrant model


 *************** function _INTERRUPT_Init *****************
 Defined at:
		line 3 in file "src/interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Init
 This function uses a non-reentrant model


 *************** function _DHT11_Init *****************
 Defined at:
		line 6 in file "src/dht11.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Init
 This function uses a non-reentrant model


 *************** function _BLED_Enable *****************
 Defined at:
		line 79 in file "src/leds.c"
 Parameters:    Size  Location     Type
  biled           1    wreg     enum E3166
 Auto vars:     Size  Location     Type
  biled           1    5[COMRAM] enum E3166
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Init
 This function uses a non-reentrant model


 *************** function _LCD_DisplayCtrl *****************
 Defined at:
		line 93 in file "src/lcd.c"
 Parameters:    Size  Location     Type
  disOn           1    wreg     _Bool 
  curOn           1    7[COMRAM] _Bool 
  curBlink        1    8[COMRAM] _Bool 
 Auto vars:     Size  Location     Type
  disOn           1    9[COMRAM] _Bool 
  cmd             1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_SendCmd
 This function is called by:
		_main
		_KBDSerial_task
 This function uses a non-reentrant model


 *************** function _LCD_SendCmd *****************
 Defined at:
		line 44 in file "src/lcd.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
  fbyte           1    5[COMRAM] _Bool 
 Auto vars:     Size  Location     Type
  data            1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_SendNibble
 This function is called by:
		_LCD_Init
		_LCD_CLS
		_LCD_DisplayCtrl
		_LCD_SetRowCol
		_LCD_RH
		_LCD_DisplayShift
		_LCD_EntryMode
		_LCD_SetCGRAM
 This function uses a non-reentrant model


 *************** function _LCD_SendNibble *****************
 Defined at:
		line 37 in file "src/lcd.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Lat
 This function is called by:
		_LCD_SendCmd
		_LCD_WriteByte
 This function uses a non-reentrant model


 *************** function _LCD_Lat *****************
 Defined at:
		line 29 in file "src/lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_LCD_SendNibble
 This function uses a non-reentrant model


 *************** function _BLED_Color *****************
 Defined at:
		line 97 in file "src/leds.c"
 Parameters:    Size  Location     Type
  biled           1    wreg     enum E3166
  green           1    3[COMRAM] _Bool 
  red             1    4[COMRAM] _Bool 
 Auto vars:     Size  Location     Type
  biled           1    7[COMRAM] enum E3166
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _myISR *****************
 Defined at:
		line 23 in file "src/main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_BLED_Toggle
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _BLED_Toggle *****************
 Defined at:
		line 111 in file "src/leds.c"
 Parameters:    Size  Location     Type
  biled           1    wreg     enum E3166
 Auto vars:     Size  Location     Type
  biled           1    2[COMRAM] enum E3166
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_myISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
src/print/my_print.c
		_my_vsprintf   		CODE           	0012	0000	3229

src/print/my_print.c estimated size: 3229

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c
		_roundf        		CODE           	1AF2	0000	947

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c estimated size: 947

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c
		___fleq        		CODE           	4824	0000	171

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c estimated size: 171

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c
		_strcat        		CODE           	5386	0000	39

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c estimated size: 39

src/print/toString.c
		_atoui         		CODE           	45DC	0000	209
		_ftoa          		CODE           	223E	0000	835
		_ftoa_sci      		CODE           	2876	0000	737
		_itoa          		CODE           	3A6E	0000	391
		_reverse       		CODE           	4A14	0000	153
		_normalize     		CODE           	3EC0	0000	295

src/print/toString.c estimated size: 2620

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c
		___xxtofl      		CODE           	38BA	0000	437

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c estimated size: 437

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c
		_strlen        		CODE           	52FC	0000	55

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c estimated size: 55

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c
		___fltol       		CODE           	4208	0000	265

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c estimated size: 265

src/system.c
		_SYSTEM_Init   		CODE           	4F12	0000	87

src/system.c estimated size: 87

src/leds.c
		_BLED_Enable   		CODE           	5006	0000	75
		_BLED_Toggle   		CODE           	50DE	0000	67
		_LED_Enable    		CODE           	4DFA	0000	99
		_BLED_Color    		CODE           	46AC	0000	195

src/leds.c estimated size: 436

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c
		_strcpy        		CODE           	4E5C	0000	93

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c estimated size: 93

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c
		___aldiv       		CODE           	40FC	0000	269

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c estimated size: 269

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c
		___flmul       		CODE           	16C6	0000	1069

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c estimated size: 1069

src/serial.c
		_SERIAL_WriteChar		CODE           	540E	0000	23
		_SERIAL_Printf 		CODE           	5290	0000	55
		_SERIAL_Init   		CODE           	4BBE	0000	131
		_SERIAL_Write  		CODE           	5098	0000	71

src/serial.c estimated size: 280

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c
		___fldiv       		CODE           	1EA4	0000	923

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c estimated size: 923

src/dht11.c
		_DHT11_GetRHum 		CODE           	5460	0000	19
		_DHT11_GetTemp 		CODE           	544E	0000	19
		_DHT11_MReq    		CODE           	2E0A	0000	605
		_DHT11_Init    		CODE           	549E	0000	7
		_DHT11_Wait4Resp		CODE           	4D30	0000	105

src/dht11.c estimated size: 755

src/main.c
		_myISR         		CODE           	0008	0000	71
		_main          		CODE           	4B36	0000	137
		_dtll_task     		CODE           	4500	0000	221

src/main.c estimated size: 429

src/interrupts.c
		_INTERRUPT_Tmr0		CODE           	5498	0000	7
		_INTERRUPT_Init		CODE           	5490	0000	9

src/interrupts.c estimated size: 16

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c
		___flge        		CODE           	4310	0000	261

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c estimated size: 261

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c
		___flneg       		CODE           	5258	0000	57

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c estimated size: 57

shared
		ftoa_sci@width 		MEDIUMCONST    	0000	0000	0
		__initialization		CODE           	4C40	0000	107
		_toint         		MEDIUMCONST    	0000	0000	0
		my_vsprintf@tipo		MEDIUMCONST    	7E89	0000	16
		ftoa@width     		MEDIUMCONST    	0000	0000	0

shared estimated size: 123

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lroundf.c
		_lroundf       		CODE           	521E	0000	59

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lroundf.c estimated size: 59

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c
		___flsub       		CODE           	5050	0000	73
		___fladd       		CODE           	1206	0000	1217

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c estimated size: 1290

src/print/format.c
		_posc          		CODE           	4D98	0000	99
		_precI         		CODE           	3FE6	0000	279
		_upperCL       		CODE           	4AAC	0000	139
		_addSig        		CODE           	3D6C	0000	341
		_setWidth      		CODE           	32B6	0000	557
		_searchc       		CODE           	4EB8	0000	91
		_precE         		CODE           	34E2	0000	523
		_getWP         		CODE           	3066	0000	593
		_cleanS        		CODE           	4F68	0000	85
		_precF         		CODE           	36EC	0000	463
		_roundStr      		CODE           	2580	0000	759
		_precG         		CODE           	0CAE	0000	1369
		_precS         		CODE           	4CB8	0000	121
		_addOx         		CODE           	3BF4	0000	377

src/print/format.c estimated size: 5796

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c
		___wmul        		CODE           	53AC	0000	39

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c estimated size: 39

src/timer.c
		_TIMER0_SetTime		CODE           	2B56	0000	693
		_TIMER0_End    		CODE           	54A4	0000	5
		_TIMER0_Int    		CODE           	5160	0000	65
		_TIMER0_SetPs  		CODE           	476E	0000	183
		_TIMER0_SetReg 		CODE           	5484	0000	13

src/timer.c estimated size: 959

src/lcd.c
		_LCD_Init      		CODE           	48CE	0000	167
		_LCD_SendCmd   		CODE           	535C	0000	43
		_LCD_CLS       		CODE           	5332	0000	43
		_LCD_SetRowCol 		CODE           	4FBC	0000	75
		_LCD_SendNibble		CODE           	5472	0000	19
		_LCD_Printf    		CODE           	52C6	0000	55
		_LCD_Lat       		CODE           	5424	0000	23
		_LCD_Write     		CODE           	4974	0000	161
		_LCD_DisplayCtrl		CODE           	53D2	0000	37
		_LCD_WriteChar 		CODE           	51E0	0000	63
		_LCD_WriteByte 		CODE           	53F6	0000	25

src/lcd.c estimated size: 711

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c
		___almod       		CODE           	4414	0000	237

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c estimated size: 237

