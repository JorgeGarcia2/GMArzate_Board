

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Aug 27 20:35:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           ; Version 2.10
    74                           ; Generated 31/07/2019 GMT
    75                           ; 
    76                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F4550 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataBANK0
   109  004CD8                     __pidataBANK0:
   110                           	opt callstack 0
   111                           
   112                           ;initializer for my_vprintf@F3517
   113  004CD8  20                 	db	32
   114  004CD9  00                 	db	0
   115  004CDA  00                 	db	0
   116  004CDB  00                 	db	0
   117  004CDC  00                 	db	0
   118  004CDD  00                 	db	0
   119  004CDE  00                 	db	0
   120  004CDF  00                 	db	0
   121  004CE0  00                 	db	0
   122  004CE1  00                 	db	0
   123  004CE2  00                 	db	0
   124  004CE3  00                 	db	0
   125  004CE4  00                 	db	0
   126  004CE5  00                 	db	0
   127  004CE6  00                 	db	0
   128  004CE7  00                 	db	0
   129  004CE8  00                 	db	0
   130  004CE9  00                 	db	0
   131  004CEA  00                 	db	0
   132  004CEB  00                 	db	0
   133  004CEC  00                 	db	0
   134  004CED  00                 	db	0
   135  004CEE  00                 	db	0
   136  004CEF  00                 	db	0
   137  004CF0  00                 	db	0
   138  004CF1  00                 	db	0
   139  004CF2  00                 	db	0
   140  004CF3  00                 	db	0
   141  004CF4  00                 	db	0
   142  004CF5  00                 	db	0
   143  004CF6  00                 	db	0
   144  004CF7  00                 	db	0
   145  004CF8  00                 	db	0
   146  004CF9  00                 	db	0
   147  004CFA  00                 	db	0
   148  004CFB  00                 	db	0
   149  004CFC  00                 	db	0
   150  004CFD  00                 	db	0
   151  004CFE  00                 	db	0
   152  004CFF  00                 	db	0
   153  004D00  00                 	db	0
   154  004D01  00                 	db	0
   155  004D02  00                 	db	0
   156  004D03  00                 	db	0
   157  004D04  00                 	db	0
   158  004D05  00                 	db	0
   159  004D06  00                 	db	0
   160  004D07  00                 	db	0
   161  004D08  00                 	db	0
   162  004D09  00                 	db	0
   163  004D0A  00                 	db	0
   164  004D0B  00                 	db	0
   165  004D0C  00                 	db	0
   166  004D0D  00                 	db	0
   167  004D0E  00                 	db	0
   168  004D0F  00                 	db	0
   169  004D10  00                 	db	0
   170  004D11  00                 	db	0
   171  004D12  00                 	db	0
   172  004D13  00                 	db	0
   173  004D14  00                 	db	0
   174  004D15  00                 	db	0
   175  004D16  00                 	db	0
   176  004D17  00                 	db	0
   177                           
   178                           ;initializer for _keyPad
   179  004D18  31                 	db	49
   180  004D19  32                 	db	50
   181  004D1A  33                 	db	51
   182  004D1B  41                 	db	65
   183  004D1C  34                 	db	52
   184  004D1D  35                 	db	53
   185  004D1E  36                 	db	54
   186  004D1F  42                 	db	66
   187  004D20  37                 	db	55
   188  004D21  38                 	db	56
   189  004D22  39                 	db	57
   190  004D23  43                 	db	67
   191  004D24  2A                 	db	42
   192  004D25  30                 	db	48
   193  004D26  23                 	db	35
   194  004D27  44                 	db	68
   195  004D28  00                 	db	0
   196  004D29  00                 	db	0
   197  004D2A  00                 	db	0
   198  004D2B  00                 	db	0
   199                           
   200                           	psect	idataBANK2
   201  004EE6                     __pidataBANK2:
   202                           	opt callstack 0
   203                           
   204                           ;initializer for reverse@F192
   205  004EE6  20                 	db	32
   206  004EE7  00                 	db	0
   207  004EE8  00                 	db	0
   208  004EE9  00                 	db	0
   209  004EEA  00                 	db	0
   210  004EEB  00                 	db	0
   211  004EEC  00                 	db	0
   212  004EED  00                 	db	0
   213  004EEE  00                 	db	0
   214  004EEF  00                 	db	0
   215  004EF0  00                 	db	0
   216  004EF1  00                 	db	0
   217  004EF2  00                 	db	0
   218  004EF3  00                 	db	0
   219  004EF4  00                 	db	0
   220  004EF5  00                 	db	0
   221  004EF6  00                 	db	0
   222  004EF7  00                 	db	0
   223  004EF8  00                 	db	0
   224  004EF9  00                 	db	0
   225  004EFA  00                 	db	0
   226  004EFB  00                 	db	0
   227  004EFC  00                 	db	0
   228  004EFD  00                 	db	0
   229  004EFE  00                 	db	0
   230  004EFF  00                 	db	0
   231  004F00  00                 	db	0
   232  004F01  00                 	db	0
   233  004F02  00                 	db	0
   234  004F03  00                 	db	0
   235  004F04  00                 	db	0
   236  004F05  00                 	db	0
   237  004F06  00                 	db	0
   238  004F07  00                 	db	0
   239  004F08  00                 	db	0
   240  004F09  00                 	db	0
   241  004F0A  00                 	db	0
   242  004F0B  00                 	db	0
   243  004F0C  00                 	db	0
   244  004F0D  00                 	db	0
   245  004F0E  00                 	db	0
   246  004F0F  00                 	db	0
   247  004F10  00                 	db	0
   248  004F11  00                 	db	0
   249  004F12  00                 	db	0
   250  004F13  00                 	db	0
   251  004F14  00                 	db	0
   252  004F15  00                 	db	0
   253  004F16  00                 	db	0
   254  004F17  00                 	db	0
   255  004F18  00                 	db	0
   256  004F19  00                 	db	0
   257  004F1A  00                 	db	0
   258  004F1B  00                 	db	0
   259  004F1C  00                 	db	0
   260  004F1D  00                 	db	0
   261  004F1E  00                 	db	0
   262  004F1F  00                 	db	0
   263  004F20  00                 	db	0
   264  004F21  00                 	db	0
   265  004F22  00                 	db	0
   266  004F23  00                 	db	0
   267  004F24  00                 	db	0
   268  004F25  00                 	db	0
   269                           
   270                           	psect	smallconst
   271  000800                     __psmallconst:
   272                           	opt callstack 0
   273  000800  00                 	db	0
   274  000801                     my_vprintf@tipo:
   275                           	opt callstack 0
   276  000801  25                 	db	37
   277  000802  63                 	db	99
   278  000803  73                 	db	115
   279  000804  64                 	db	100
   280  000805  69                 	db	105
   281  000806  78                 	db	120
   282  000807  58                 	db	88
   283  000808  6F                 	db	111
   284  000809  75                 	db	117
   285  00080A  66                 	db	102
   286  00080B  67                 	db	103
   287  00080C  47                 	db	71
   288  00080D  65                 	db	101
   289  00080E  45                 	db	69
   290  00080F  6E                 	db	110
   291  000810                     __end_ofmy_vprintf@tipo:
   292                           	opt callstack 0
   293  000810  0007               	dw	7
   294  000812                     __end_offtoa@width:
   295                           	opt callstack 0
   296  000812  0006               	dw	6
   297  000814                     __end_offtoa_sci@width:
   298                           	opt callstack 0
   299  0000                     _TMR1L	set	4046
   300  0000                     _TMR1H	set	4047
   301  0000                     _T1CONbits	set	4045
   302  0000                     _TRISAbits	set	3986
   303  0000                     _T0CONbits	set	4053
   304  0000                     _LATCbits	set	3979
   305  0000                     _LATEbits	set	3981
   306  0000                     _TRISEbits	set	3990
   307  0000                     _PORTBbits	set	3969
   308  0000                     _LATBbits	set	3978
   309  0000                     _LATB	set	3978
   310  0000                     _TRISB	set	3987
   311  0000                     _PIE1bits	set	3997
   312  0000                     _INTCON3bits	set	4080
   313  0000                     _INTCON2bits	set	4081
   314  0000                     _TRISBbits	set	3987
   315  0000                     _RCONbits	set	4048
   316  0000                     _TRISDbits	set	3989
   317  0000                     _RCREG	set	4014
   318  0000                     _PIR1bits	set	3998
   319  0000                     _TXREG	set	4013
   320  0000                     _SPBRG	set	4015
   321  0000                     _SPBRGH	set	4016
   322  0000                     _BAUDCONbits	set	4024
   323  0000                     _TXSTAbits	set	4012
   324  0000                     _RCSTAbits	set	4011
   325  0000                     _TRISCbits	set	3988
   326  0000                     _LATDbits	set	3980
   327  0000                     _PORTB	set	3969
   328  0000                     _TMR0L	set	4054
   329  0000                     _TMR0H	set	4055
   330  0000                     _INTCONbits	set	4082
   331  000814                     STR_3:
   332  000814  4D                 	db	77	;'M'
   333  000815  6F                 	db	111	;'o'
   334  000816  74                 	db	116	;'t'
   335  000817  6F                 	db	111	;'o'
   336  000818  72                 	db	114	;'r'
   337  000819  20                 	db	32
   338  00081A  67                 	db	103	;'g'
   339  00081B  69                 	db	105	;'i'
   340  00081C  72                 	db	114	;'r'
   341  00081D  61                 	db	97	;'a'
   342  00081E  6E                 	db	110	;'n'
   343  00081F  64                 	db	100	;'d'
   344  000820  6F                 	db	111	;'o'
   345  000821  20                 	db	32
   346  000822  61                 	db	97	;'a'
   347  000823  20                 	db	32
   348  000824  6C                 	db	108	;'l'
   349  000825  61                 	db	97	;'a'
   350  000826  20                 	db	32
   351  000827  49                 	db	73	;'I'
   352  000828  7A                 	db	122	;'z'
   353  000829  71                 	db	113	;'q'
   354  00082A  75                 	db	117	;'u'
   355  00082B  69                 	db	105	;'i'
   356  00082C  65                 	db	101	;'e'
   357  00082D  72                 	db	114	;'r'
   358  00082E  64                 	db	100	;'d'
   359  00082F  61                 	db	97	;'a'
   360  000830  0A                 	db	10
   361  000831  0A                 	db	10
   362  000832  00                 	db	0
   363  000833                     STR_2:
   364  000833  4D                 	db	77	;'M'
   365  000834  6F                 	db	111	;'o'
   366  000835  74                 	db	116	;'t'
   367  000836  6F                 	db	111	;'o'
   368  000837  72                 	db	114	;'r'
   369  000838  20                 	db	32
   370  000839  67                 	db	103	;'g'
   371  00083A  69                 	db	105	;'i'
   372  00083B  72                 	db	114	;'r'
   373  00083C  61                 	db	97	;'a'
   374  00083D  6E                 	db	110	;'n'
   375  00083E  64                 	db	100	;'d'
   376  00083F  6F                 	db	111	;'o'
   377  000840  20                 	db	32
   378  000841  61                 	db	97	;'a'
   379  000842  20                 	db	32
   380  000843  6C                 	db	108	;'l'
   381  000844  61                 	db	97	;'a'
   382  000845  20                 	db	32
   383  000846  44                 	db	68	;'D'
   384  000847  65                 	db	101	;'e'
   385  000848  72                 	db	114	;'r'
   386  000849  65                 	db	101	;'e'
   387  00084A  63                 	db	99	;'c'
   388  00084B  68                 	db	104	;'h'
   389  00084C  61                 	db	97	;'a'
   390  00084D  0A                 	db	10
   391  00084E  0A                 	db	10
   392  00084F  00                 	db	0
   393  000850                     STR_1:
   394  000850  42                 	db	66	;'B'
   395  000851  49                 	db	73	;'I'
   396  000852  45                 	db	69	;'E'
   397  000853  4E                 	db	78	;'N'
   398  000854  56                 	db	86	;'V'
   399  000855  45                 	db	69	;'E'
   400  000856  4E                 	db	78	;'N'
   401  000857  49                 	db	73	;'I'
   402  000858  44                 	db	68	;'D'
   403  000859  4F                 	db	79	;'O'
   404  00085A  0A                 	db	10
   405  00085B  0A                 	db	10
   406  00085C  00                 	db	0
   407  00085D                     STR_5:
   408  00085D  20                 	db	32
   409  00085E  00                 	db	0
   410  00085F                     STR_4:
   411  00085F  25                 	db	37
   412  000860  00                 	db	0
   413                           
   414                           ; #config settings
   415  000861  00                 	db	0	; dummy byte at the end
   416  0000                     
   417                           	psect	cinit
   418  004B5A                     __pcinit:
   419                           	opt callstack 0
   420  004B5A                     start_initialization:
   421                           	opt callstack 0
   422  004B5A                     __initialization:
   423                           	opt callstack 0
   424                           
   425                           ; Initialize objects allocated to BANK2 (64 bytes)
   426                           ; load TBLPTR registers with __pidataBANK2
   427  004B5A  0EE6               	movlw	low __pidataBANK2
   428  004B5C  6EF6               	movwf	tblptrl,c
   429  004B5E  0E4E               	movlw	high __pidataBANK2
   430  004B60  6EF7               	movwf	tblptrh,c
   431  004B62  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   432  004B64  6EF8               	movwf	tblptru,c
   433  004B66  EE02  F080         	lfsr	0,__pdataBANK2
   434  004B6A  EE10 F040          	lfsr	1,64
   435  004B6E                     copy_data0:
   436  004B6E  0009               	tblrd		*+
   437  004B70  CFF5 FFEE          	movff	tablat,postinc0
   438  004B74  50E5               	movf	postdec1,w,c
   439  004B76  50E1               	movf	fsr1l,w,c
   440  004B78  E1FA               	bnz	copy_data0
   441                           
   442                           ; Initialize objects allocated to BANK0 (84 bytes)
   443                           ; load TBLPTR registers with __pidataBANK0
   444  004B7A  0ED8               	movlw	low __pidataBANK0
   445  004B7C  6EF6               	movwf	tblptrl,c
   446  004B7E  0E4C               	movlw	high __pidataBANK0
   447  004B80  6EF7               	movwf	tblptrh,c
   448  004B82  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   449  004B84  6EF8               	movwf	tblptru,c
   450  004B86  EE00  F060         	lfsr	0,__pdataBANK0
   451  004B8A  EE10 F054          	lfsr	1,84
   452  004B8E                     copy_data1:
   453  004B8E  0009               	tblrd		*+
   454  004B90  CFF5 FFEE          	movff	tablat,postinc0
   455  004B94  50E5               	movf	postdec1,w,c
   456  004B96  50E1               	movf	fsr1l,w,c
   457  004B98  E1FA               	bnz	copy_data1
   458                           
   459                           ; Clear objects allocated to BANK2 (128 bytes)
   460  004B9A  EE02  F000         	lfsr	0,__pbssBANK2
   461  004B9E  0E80               	movlw	128
   462  004BA0                     clear_0:
   463  004BA0  6AEE               	clrf	postinc0,c
   464  004BA2  06E8               	decf	wreg,f,c
   465  004BA4  E1FD               	bnz	clear_0
   466                           
   467                           ; Clear objects allocated to COMRAM (24 bytes)
   468  004BA6  EE00  F03D         	lfsr	0,__pbssCOMRAM
   469  004BAA  0E18               	movlw	24
   470  004BAC                     clear_1:
   471  004BAC  6AEE               	clrf	postinc0,c
   472  004BAE  06E8               	decf	wreg,f,c
   473  004BB0  E1FD               	bnz	clear_1
   474  004BB2                     end_of_initialization:
   475                           	opt callstack 0
   476  004BB2                     __end_of__initialization:
   477                           	opt callstack 0
   478  004BB2  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   479  004BB4  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   480  004BB6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   481  004BB8  6EF8               	movwf	tblptru,c
   482  004BBA  0100               	movlb	0
   483  004BBC  EFFB  F021         	goto	_main	;jump to C main() function
   484                           
   485                           	psect	bssCOMRAM
   486  00003D                     __pbssCOMRAM:
   487                           	opt callstack 0
   488  00003D                     	ds	5
   489  000042                     	ds	5
   490  000047                     	ds	2
   491  000049                     	ds	2
   492  00004B                     _count:
   493                           	opt callstack 0
   494  00004B                     	ds	2
   495  00004D                     _numeral:
   496                           	opt callstack 0
   497  00004D                     	ds	1
   498  00004E                     _space:
   499                           	opt callstack 0
   500  00004E                     	ds	1
   501  00004F                     _precInt:
   502                           	opt callstack 0
   503  00004F                     	ds	1
   504  000050                     _alingL:
   505                           	opt callstack 0
   506  000050                     	ds	1
   507  000051                     _zeros:
   508                           	opt callstack 0
   509  000051                     	ds	1
   510  000052                     _sig:
   511                           	opt callstack 0
   512  000052                     	ds	1
   513  000053                     _x:
   514                           	opt callstack 0
   515  000053                     	ds	1
   516  000054                     _reqKey:
   517                           	opt callstack 0
   518  000054                     	ds	1
   519                           
   520                           	psect	dataBANK0
   521  000060                     __pdataBANK0:
   522                           	opt callstack 0
   523  000060                     my_vprintf@F3517:
   524                           	opt callstack 0
   525  000060                     	ds	64
   526  0000A0                     _keyPad:
   527                           	opt callstack 0
   528  0000A0                     	ds	20
   529                           
   530                           	psect	bssBANK2
   531  000200                     __pbssBANK2:
   532                           	opt callstack 0
   533  000200                     	ds	128
   534                           
   535                           	psect	dataBANK2
   536  000280                     __pdataBANK2:
   537                           	opt callstack 0
   538  000280                     reverse@F192:
   539                           	opt callstack 0
   540  000280                     	ds	64
   541                           
   542                           	psect	cstackBANK1
   543  000100                     __pcstackBANK1:
   544                           	opt callstack 0
   545  000100                     my_vprintf@string:
   546                           	opt callstack 0
   547                           
   548                           ; 128 bytes @ 0x0
   549  000100                     	ds	128
   550  000180                     my_vprintf@length:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x80
   554  000180                     	ds	2
   555  000182                     my_vprintf@char_temp:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x82
   559  000182                     	ds	2
   560  000184                     my_vprintf@format:
   561                           	opt callstack 0
   562                           
   563                           ; 10 bytes @ 0x84
   564  000184                     	ds	10
   565  00018E                     my_vprintf@buffer:
   566                           	opt callstack 0
   567                           
   568                           ; 64 bytes @ 0x8E
   569  00018E                     	ds	64
   570  0001CE                     my_vprintf@string_temp:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0xCE
   574  0001CE                     	ds	2
   575  0001D0                     my_vprintf@ch:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0xD0
   579  0001D0                     	ds	2
   580  0001D2                     my_vprintf@uint_temp:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0xD2
   584  0001D2                     	ds	2
   585  0001D4                     my_vprintf@error:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0xD4
   589  0001D4                     	ds	2
   590  0001D6                     my_vprintf@expA:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0xD6
   594  0001D6                     	ds	2
   595  0001D8                     my_vprintf@x:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0xD8
   599  0001D8                     	ds	2
   600  0001DA                     my_vprintf@width:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0xDA
   604  0001DA                     	ds	2
   605  0001DC                     my_vprintf@j:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0xDC
   609  0001DC                     	ds	2
   610  0001DE                     my_vprintf@int_temp:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0xDE
   614  0001DE                     	ds	2
   615  0001E0                     my_vprintf@i:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0xE0
   619  0001E0                     	ds	2
   620  0001E2                     my_vprintf@double_temp:
   621                           	opt callstack 0
   622                           
   623                           ; 4 bytes @ 0xE2
   624  0001E2                     	ds	4
   625  0001E6                     my_vprintf@valist:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0xE6
   629  0001E6                     	ds	2
   630  0001E8                     my_vprintf@prec:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0xE8
   634  0001E8                     	ds	2
   635                           
   636                           	psect	cstackBANK0
   637  0000B4                     __pcstackBANK0:
   638                           	opt callstack 0
   639  0000B4                     reverse@auxstr:
   640                           	opt callstack 0
   641                           
   642                           ; 64 bytes @ 0x0
   643  0000B4                     	ds	64
   644  0000F4                     reverse@j:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x40
   648  0000F4                     	ds	2
   649  0000F6                     reverse@i:
   650                           	opt callstack 0
   651                           
   652                           ; 2 bytes @ 0x42
   653  0000F6                     	ds	2
   654  0000F8                     ?_ftoa_sci:
   655                           	opt callstack 0
   656  0000F8                     ftoa_sci@buffer:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x44
   660  0000F8                     	ds	2
   661  0000FA                     ftoa_sci@value:
   662                           	opt callstack 0
   663                           
   664                           ; 4 bytes @ 0x46
   665  0000FA                     	ds	4
   666                           
   667                           	psect	cstackCOMRAM
   668  000001                     __pcstackCOMRAM:
   669                           	opt callstack 0
   670  000001                     ??_BLED_Toggle:
   671  000001                     
   672                           ; 1 bytes @ 0x0
   673  000001                     	ds	2
   674  000003                     BLED_Toggle@biled:
   675                           	opt callstack 0
   676                           
   677                           ; 1 bytes @ 0x2
   678  000003                     	ds	1
   679  000004                     ??_KBD_GetChar:
   680  000004                     ??_TIMER0_SetPs:
   681  000004                     ??_BLED_Enable:
   682  000004                     ?_strlen:
   683                           	opt callstack 0
   684  000004                     ?___wmul:
   685                           	opt callstack 0
   686  000004                     ?___fladd:
   687                           	opt callstack 0
   688  000004                     ?___fldiv:
   689                           	opt callstack 0
   690  000004                     ?___flmul:
   691                           	opt callstack 0
   692  000004                     ?___aldiv:
   693                           	opt callstack 0
   694  000004                     ?___almod:
   695                           	opt callstack 0
   696  000004                     ?___flneg:
   697                           	opt callstack 0
   698  000004                     ?___xxtofl:
   699                           	opt callstack 0
   700  000004                     SERIAL_WriteChar@data:
   701                           	opt callstack 0
   702  000004                     BLED_Color@green:
   703                           	opt callstack 0
   704  000004                     TIMER0_Int@t0_cs:
   705                           	opt callstack 0
   706  000004                     ___wmul@multiplier:
   707                           	opt callstack 0
   708  000004                     strlen@s:
   709                           	opt callstack 0
   710  000004                     ___aldiv@dividend:
   711                           	opt callstack 0
   712  000004                     ___almod@dividend:
   713                           	opt callstack 0
   714  000004                     ___fleq@ff1:
   715                           	opt callstack 0
   716  000004                     ___flge@ff1:
   717                           	opt callstack 0
   718  000004                     ___flneg@f1:
   719                           	opt callstack 0
   720  000004                     ___fladd@b:
   721                           	opt callstack 0
   722  000004                     ___fldiv@b:
   723                           	opt callstack 0
   724  000004                     ___flmul@b:
   725                           	opt callstack 0
   726  000004                     ___xxtofl@val:
   727                           	opt callstack 0
   728                           
   729                           ; 4 bytes @ 0x3
   730  000004                     	ds	1
   731  000005                     BLED_Color@red:
   732                           	opt callstack 0
   733  000005                     TIMER0_Int@t0_se:
   734                           	opt callstack 0
   735                           
   736                           ; 1 bytes @ 0x4
   737  000005                     	ds	1
   738  000006                     ??_BLED_Color:
   739  000006                     BLED_Enable@biled:
   740                           	opt callstack 0
   741  000006                     TIMER0_Int@t0_psa:
   742                           	opt callstack 0
   743  000006                     TIMER0_SetPs@prescale:
   744                           	opt callstack 0
   745  000006                     ___wmul@multiplicand:
   746                           	opt callstack 0
   747  000006                     strlen@a:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x5
   751  000006                     	ds	1
   752  000007                     TIMER0_Int@t0_8b:
   753                           	opt callstack 0
   754                           
   755                           ; 1 bytes @ 0x6
   756  000007                     	ds	1
   757  000008                     ??___xxtofl:
   758  000008                     ?_posc:
   759                           	opt callstack 0
   760  000008                     KBD_GetChar@key:
   761                           	opt callstack 0
   762  000008                     BLED_Color@biled:
   763                           	opt callstack 0
   764  000008                     SERIAL_Write@str:
   765                           	opt callstack 0
   766  000008                     searchc@str:
   767                           	opt callstack 0
   768  000008                     posc@str:
   769                           	opt callstack 0
   770  000008                     upperCL@str:
   771                           	opt callstack 0
   772  000008                     cleanS@str:
   773                           	opt callstack 0
   774  000008                     precI@str:
   775                           	opt callstack 0
   776  000008                     precS@str:
   777                           	opt callstack 0
   778  000008                     addOx@hoS:
   779                           	opt callstack 0
   780  000008                     setWidth@str:
   781                           	opt callstack 0
   782  000008                     ___wmul@product:
   783                           	opt callstack 0
   784  000008                     strcpy@dest:
   785                           	opt callstack 0
   786  000008                     ___aldiv@divisor:
   787                           	opt callstack 0
   788  000008                     ___almod@divisor:
   789                           	opt callstack 0
   790  000008                     ___fleq@ff2:
   791                           	opt callstack 0
   792  000008                     ___flge@ff2:
   793                           	opt callstack 0
   794  000008                     ___fladd@a:
   795                           	opt callstack 0
   796  000008                     ___fldiv@a:
   797                           	opt callstack 0
   798  000008                     ___flmul@a:
   799                           	opt callstack 0
   800                           
   801                           ; 4 bytes @ 0x7
   802  000008                     	ds	1
   803  000009                     KBD_GetChar@row:
   804                           	opt callstack 0
   805                           
   806                           ; 2 bytes @ 0x8
   807  000009                     	ds	1
   808  00000A                     ??_cleanS:
   809  00000A                     ?_atoui:
   810                           	opt callstack 0
   811  00000A                     searchc@c:
   812                           	opt callstack 0
   813  00000A                     posc@c:
   814                           	opt callstack 0
   815  00000A                     SERIAL_Write@i:
   816                           	opt callstack 0
   817  00000A                     precI@precision:
   818                           	opt callstack 0
   819  00000A                     precS@precision:
   820                           	opt callstack 0
   821  00000A                     addOx@num:
   822                           	opt callstack 0
   823  00000A                     setWidth@width:
   824                           	opt callstack 0
   825  00000A                     atoui@str:
   826                           	opt callstack 0
   827  00000A                     strcpy@src:
   828                           	opt callstack 0
   829                           
   830                           ; 2 bytes @ 0x9
   831  00000A                     	ds	1
   832  00000B                     KBD_GetChar@col:
   833                           	opt callstack 0
   834  00000B                     upperCL@i:
   835                           	opt callstack 0
   836  00000B                     cleanS@len:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0xA
   840  00000B                     	ds	1
   841  00000C                     ??_atoui:
   842  00000C                     ??_strcpy:
   843  00000C                     ??___fladd:
   844  00000C                     ??___fldiv:
   845  00000C                     ??___flmul:
   846  00000C                     ??_precI:
   847  00000C                     ??_precS:
   848  00000C                     ??_setWidth:
   849  00000C                     ??___fleq:
   850  00000C                     ??___flge:
   851  00000C                     addOx@type:
   852                           	opt callstack 0
   853  00000C                     ___aldiv@counter:
   854                           	opt callstack 0
   855  00000C                     ___almod@counter:
   856                           	opt callstack 0
   857  00000C                     ___xxtofl@sign:
   858                           	opt callstack 0
   859  00000C                     searchc@a:
   860                           	opt callstack 0
   861  00000C                     posc@a:
   862                           	opt callstack 0
   863                           
   864                           ; 2 bytes @ 0xB
   865  00000C                     	ds	1
   866  00000D                     ??_addOx:
   867  00000D                     ___aldiv@sign:
   868                           	opt callstack 0
   869  00000D                     ___almod@sign:
   870                           	opt callstack 0
   871  00000D                     ___xxtofl@exp:
   872                           	opt callstack 0
   873  00000D                     cleanS@i:
   874                           	opt callstack 0
   875  00000D                     atoui@num:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0xC
   879  00000D                     	ds	1
   880  00000E                     ?_roundStr:
   881                           	opt callstack 0
   882  00000E                     roundStr@decnum:
   883                           	opt callstack 0
   884  00000E                     precI@k:
   885                           	opt callstack 0
   886  00000E                     precS@len:
   887                           	opt callstack 0
   888  00000E                     setWidth@widthDif:
   889                           	opt callstack 0
   890  00000E                     strcpy@s:
   891                           	opt callstack 0
   892  00000E                     ___aldiv@quotient:
   893                           	opt callstack 0
   894  00000E                     ___xxtofl@arg:
   895                           	opt callstack 0
   896                           
   897                           ; 4 bytes @ 0xD
   898  00000E                     	ds	1
   899  00000F                     addOx@len:
   900                           	opt callstack 0
   901  00000F                     atoui@vp:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0xE
   905  00000F                     	ds	1
   906  000010                     ___fladd@signs:
   907                           	opt callstack 0
   908  000010                     ___flmul@sign:
   909                           	opt callstack 0
   910  000010                     roundStr@e:
   911                           	opt callstack 0
   912  000010                     precI@j:
   913                           	opt callstack 0
   914  000010                     precS@i:
   915                           	opt callstack 0
   916  000010                     setWidth@len:
   917                           	opt callstack 0
   918  000010                     strcpy@d:
   919                           	opt callstack 0
   920  000010                     ___fldiv@rem:
   921                           	opt callstack 0
   922                           
   923                           ; 4 bytes @ 0xF
   924  000010                     	ds	1
   925  000011                     ___fladd@aexp:
   926                           	opt callstack 0
   927  000011                     addOx@k:
   928                           	opt callstack 0
   929  000011                     atoui@i:
   930                           	opt callstack 0
   931  000011                     ___flmul@grs:
   932                           	opt callstack 0
   933                           
   934                           ; 4 bytes @ 0x10
   935  000011                     	ds	1
   936  000012                     ___fladd@bexp:
   937                           	opt callstack 0
   938  000012                     roundStr@prn:
   939                           	opt callstack 0
   940  000012                     precI@len:
   941                           	opt callstack 0
   942  000012                     addSig@numS:
   943                           	opt callstack 0
   944  000012                     setWidth@j:
   945                           	opt callstack 0
   946  000012                     reverse@str:
   947                           	opt callstack 0
   948  000012                     strcat@dest:
   949                           	opt callstack 0
   950  000012                     SERIAL_Init@BAUD:
   951                           	opt callstack 0
   952                           
   953                           ; 4 bytes @ 0x11
   954  000012                     	ds	1
   955  000013                     ___fladd@grs:
   956                           	opt callstack 0
   957                           
   958                           ; 1 bytes @ 0x12
   959  000013                     	ds	1
   960  000014                     ??_reverse:
   961  000014                     ??_roundStr:
   962  000014                     ___fldiv@sign:
   963                           	opt callstack 0
   964  000014                     precI@i:
   965                           	opt callstack 0
   966  000014                     strcat@src:
   967                           	opt callstack 0
   968  000014                     addSig@num:
   969                           	opt callstack 0
   970                           
   971                           ; 4 bytes @ 0x13
   972  000014                     	ds	1
   973  000015                     ___flmul@aexp:
   974                           	opt callstack 0
   975  000015                     ___fldiv@new_exp:
   976                           	opt callstack 0
   977                           
   978                           ; 2 bytes @ 0x14
   979  000015                     	ds	1
   980  000016                     ___flmul@bexp:
   981                           	opt callstack 0
   982  000016                     getWP@form:
   983                           	opt callstack 0
   984  000016                     itoa@str:
   985                           	opt callstack 0
   986  000016                     _SERIAL_Init$2374:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0x15
   990  000016                     	ds	1
   991  000017                     roundStr@len:
   992                           	opt callstack 0
   993  000017                     ___fldiv@grs:
   994                           	opt callstack 0
   995  000017                     ___flmul@prod:
   996                           	opt callstack 0
   997                           
   998                           ; 4 bytes @ 0x16
   999  000017                     	ds	1
  1000  000018                     ??_addSig:
  1001  000018                     getWP@width:
  1002                           	opt callstack 0
  1003  000018                     itoa@num:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x17
  1007  000018                     	ds	1
  1008  000019                     roundStr@p:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x18
  1012  000019                     	ds	1
  1013  00001A                     SERIAL_Init@baudrate:
  1014                           	opt callstack 0
  1015  00001A                     getWP@precision:
  1016                           	opt callstack 0
  1017  00001A                     addSig@len:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x19
  1021  00001A                     	ds	1
  1022  00001B                     ___fldiv@bexp:
  1023                           	opt callstack 0
  1024  00001B                     roundStr@i:
  1025                           	opt callstack 0
  1026  00001B                     ___flmul@temp:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x1A
  1030  00001B                     	ds	1
  1031  00001C                     ??_getWP:
  1032  00001C                     ___fldiv@aexp:
  1033                           	opt callstack 0
  1034  00001C                     addSig@k:
  1035                           	opt callstack 0
  1036  00001C                     itoa@base_:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x1B
  1040  00001C                     	ds	1
  1041  00001D                     ?_normalize:
  1042                           	opt callstack 0
  1043  00001D                     ?___flsub:
  1044                           	opt callstack 0
  1045  00001D                     ?___fltol:
  1046                           	opt callstack 0
  1047  00001D                     roundStr@k:
  1048                           	opt callstack 0
  1049  00001D                     normalize@val:
  1050                           	opt callstack 0
  1051  00001D                     ___fltol@f1:
  1052                           	opt callstack 0
  1053  00001D                     ___flsub@b:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x1C
  1057  00001D                     	ds	1
  1058  00001E                     getWP@prec_str:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 5 bytes @ 0x1D
  1062  00001E                     	ds	1
  1063  00001F                     precF@str:
  1064                           	opt callstack 0
  1065  00001F                     precE@str:
  1066                           	opt callstack 0
  1067  00001F                     precG@str:
  1068                           	opt callstack 0
  1069  00001F                     normalize@exponent:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x1E
  1073  00001F                     	ds	1
  1074  000020                     _itoa$1637:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x1F
  1078  000020                     	ds	1
  1079  000021                     ??___fltol:
  1080  000021                     precF@precision:
  1081                           	opt callstack 0
  1082  000021                     precE@precision:
  1083                           	opt callstack 0
  1084  000021                     precG@precision:
  1085                           	opt callstack 0
  1086  000021                     normalize@value:
  1087                           	opt callstack 0
  1088  000021                     ___flsub@a:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x20
  1092  000021                     	ds	2
  1093  000023                     ??_precF:
  1094  000023                     ??_precE:
  1095  000023                     ??_precG:
  1096  000023                     getWP@width_str:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 5 bytes @ 0x22
  1100  000023                     	ds	1
  1101  000024                     itoa@rem:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x23
  1105  000024                     	ds	1
  1106  000025                     ___fltol@sign1:
  1107                           	opt callstack 0
  1108  000025                     precE@p:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x24
  1112  000025                     	ds	1
  1113  000026                     ___fltol@exp1:
  1114                           	opt callstack 0
  1115  000026                     precF@j:
  1116                           	opt callstack 0
  1117  000026                     precG@p:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x25
  1121  000026                     	ds	1
  1122  000027                     precE@len:
  1123                           	opt callstack 0
  1124  000027                     ftoa@buffer:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x26
  1128  000027                     	ds	1
  1129  000028                     getWP@len:
  1130                           	opt callstack 0
  1131  000028                     precF@p:
  1132                           	opt callstack 0
  1133  000028                     precG@f:
  1134                           	opt callstack 0
  1135  000028                     itoa@i:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x27
  1139  000028                     	ds	1
  1140  000029                     precE@posE:
  1141                           	opt callstack 0
  1142  000029                     ftoa@value:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x28
  1146  000029                     	ds	1
  1147  00002A                     getWP@i:
  1148                           	opt callstack 0
  1149  00002A                     precF@i:
  1150                           	opt callstack 0
  1151  00002A                     precG@digS:
  1152                           	opt callstack 0
  1153  00002A                     ftoa_sci@digit:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x29
  1157  00002A                     	ds	1
  1158  00002B                     precE@i:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x2A
  1162  00002B                     	ds	1
  1163  00002C                     getWP@k:
  1164                           	opt callstack 0
  1165  00002C                     precF@len:
  1166                           	opt callstack 0
  1167  00002C                     precG@posE:
  1168                           	opt callstack 0
  1169  00002C                     ftoa_sci@digit_1655:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x2B
  1173  00002C                     	ds	1
  1174  00002D                     precE@j:
  1175                           	opt callstack 0
  1176  00002D                     ftoa@digit:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x2C
  1180  00002D                     	ds	1
  1181  00002E                     getWP@p:
  1182                           	opt callstack 0
  1183  00002E                     precF@k:
  1184                           	opt callstack 0
  1185  00002E                     precG@len:
  1186                           	opt callstack 0
  1187  00002E                     ftoa_sci@i:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x2D
  1191  00002E                     	ds	1
  1192  00002F                     precE@k:
  1193                           	opt callstack 0
  1194  00002F                     ftoa@digit_1663:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x2E
  1198  00002F                     	ds	1
  1199  000030                     getWP@j:
  1200                           	opt callstack 0
  1201  000030                     precG@j:
  1202                           	opt callstack 0
  1203  000030                     ftoa_sci@exponent:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x2F
  1207  000030                     	ds	1
  1208  000031                     ftoa@exponent:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x30
  1212  000031                     	ds	1
  1213  000032                     precG@k:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x31
  1217  000032                     	ds	1
  1218  000033                     ftoa@places:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x32
  1222  000033                     	ds	1
  1223  000034                     precG@i:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x33
  1227  000034                     	ds	2
  1228  000036                     ?_my_vprintf:
  1229                           	opt callstack 0
  1230  000036                     my_vprintf@sformat:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x35
  1234  000036                     	ds	2
  1235  000038                     ??_my_vprintf:
  1236                           
  1237                           ; 1 bytes @ 0x37
  1238  000038                     	ds	2
  1239  00003A                     ??_main:
  1240                           
  1241                           ; 1 bytes @ 0x39
  1242  00003A                     	ds	2
  1243  00003C                     main@c:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x3B
  1247  00003C                     	ds	1
  1248                           
  1249 ;;
  1250 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1251 ;;
  1252 ;; *************** function _main *****************
  1253 ;; Defined at:
  1254 ;;		line 40 in file "src/main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  c               1   59[COMRAM] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0
  1269 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1270 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1271 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1272 ;;Total ram usage:        3 bytes
  1273 ;; Hardware stack levels required when called:    7
  1274 ;; This function calls:
  1275 ;;		_BLED_Color
  1276 ;;		_KBD_GetChar
  1277 ;;		_SYSTEM_Init
  1278 ;;		_my_vprintf
  1279 ;; This function is called by:
  1280 ;;		Startup code after reset
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text0
  1285  0043F6                     __ptext0:
  1286                           	opt callstack 0
  1287  0043F6                     _main:
  1288                           	opt callstack 24
  1289  0043F6                     
  1290                           ;src/main.c: 42:     SYSTEM_Init();
  1291  0043F6  ECC0  F026         	call	_SYSTEM_Init	;wreg free
  1292  0043FA                     
  1293                           ;src/main.c: 43:     (TMR0H = 0x48);
  1294  0043FA  0E48               	movlw	72
  1295  0043FC  6ED7               	movwf	215,c	;volatile
  1296  0043FE                     
  1297                           ;src/main.c: 44:     (TMR0L = 0xE5);
  1298  0043FE  0EE5               	movlw	229
  1299  004400  6ED6               	movwf	214,c	;volatile
  1300                           
  1301                           ;src/main.c: 46:     BLED_Color(BL1,0,0);
  1302  004402  0E00               	movlw	0
  1303  004404  6E04               	movwf	BLED_Color@green^0,c
  1304  004406  0E00               	movlw	0
  1305  004408  6E05               	movwf	BLED_Color@red^0,c
  1306  00440A  0E00               	movlw	0
  1307  00440C  EC4F  F023         	call	_BLED_Color
  1308                           
  1309                           ;src/main.c: 47:     BLED_Color(BL2,0,1);
  1310  004410  0E00               	movlw	0
  1311  004412  6E04               	movwf	BLED_Color@green^0,c
  1312  004414  0E01               	movlw	1
  1313  004416  6E05               	movwf	BLED_Color@red^0,c
  1314  004418  0E01               	movlw	1
  1315  00441A  EC4F  F023         	call	_BLED_Color
  1316  00441E                     
  1317                           ;src/main.c: 49:     my_vprintf("BIENVENIDO\n\n");
  1318  00441E  0E50               	movlw	low STR_1
  1319  004420  6E36               	movwf	my_vprintf@sformat^0,c
  1320  004422  0E08               	movlw	high STR_1
  1321  004424  6E37               	movwf	(my_vprintf@sformat+1)^0,c
  1322  004426  EC31  F004         	call	_my_vprintf	;wreg free
  1323  00442A                     l5787:
  1324                           
  1325                           ;src/main.c: 53:     {;src/main.c: 54:         BLED_Color(BL2,1,0);
  1326  00442A  0E01               	movlw	1
  1327  00442C  6E04               	movwf	BLED_Color@green^0,c
  1328  00442E  0E00               	movlw	0
  1329  004430  6E05               	movwf	BLED_Color@red^0,c
  1330  004432  0E01               	movlw	1
  1331  004434  EC4F  F023         	call	_BLED_Color
  1332  004438                     
  1333                           ;src/main.c: 55:         c = KBD_GetChar();
  1334  004438  EC7B  F01B         	call	_KBD_GetChar	;wreg free
  1335  00443C  6E3C               	movwf	main@c^0,c
  1336  00443E                     
  1337                           ;src/main.c: 56:         BLED_Color(BL2,0,1);
  1338  00443E  0E00               	movlw	0
  1339  004440  6E04               	movwf	BLED_Color@green^0,c
  1340  004442  0E01               	movlw	1
  1341  004444  6E05               	movwf	BLED_Color@red^0,c
  1342  004446  0E01               	movlw	1
  1343  004448  EC4F  F023         	call	_BLED_Color
  1344  00444C                     
  1345                           ;src/main.c: 57:         if (c == 'A')
  1346  00444C  0E41               	movlw	65
  1347  00444E  183C               	xorwf	main@c^0,w,c
  1348  004450  A4D8               	btfss	status,2,c
  1349  004452  EF2D  F022         	goto	u6691
  1350  004456  EF2F  F022         	goto	u6690
  1351  00445A                     u6691:
  1352  00445A  EF44  F022         	goto	l5805
  1353  00445E                     u6690:
  1354  00445E                     
  1355                           ;src/main.c: 58:         {;src/main.c: 59:             LATDbits.LATD0 = 0;
  1356  00445E  908C               	bcf	140,0,c	;volatile
  1357                           
  1358                           ;src/main.c: 60:             LATDbits.LATD1 = 0;
  1359  004460  928C               	bcf	140,1,c	;volatile
  1360  004462                     
  1361                           ;src/main.c: 61:             _delay((unsigned long)((1000)*(48000000/4000.0)));
  1362  004462  0E3D               	movlw	61
  1363  004464  6E3B               	movwf	(??_main+1)^0,c
  1364  004466  0EE1               	movlw	225
  1365  004468  6E3A               	movwf	??_main^0,c
  1366  00446A  0E40               	movlw	64
  1367  00446C                     u6727:
  1368  00446C  2EE8               	decfsz	wreg,f,c
  1369  00446E  D7FE               	bra	u6727
  1370  004470  2E3A               	decfsz	??_main^0,f,c
  1371  004472  D7FC               	bra	u6727
  1372  004474  2E3B               	decfsz	(??_main+1)^0,f,c
  1373  004476  D7FA               	bra	u6727
  1374  004478                     
  1375                           ;src/main.c: 62:             my_vprintf("Motor girando a la Derecha\n\n");
  1376  004478  0E33               	movlw	low STR_2
  1377  00447A  6E36               	movwf	my_vprintf@sformat^0,c
  1378  00447C  0E08               	movlw	high STR_2
  1379  00447E  6E37               	movwf	(my_vprintf@sformat+1)^0,c
  1380  004480  EC31  F004         	call	_my_vprintf	;wreg free
  1381  004484                     
  1382                           ;src/main.c: 63:             LATDbits.LATD0 = 0;
  1383  004484  908C               	bcf	140,0,c	;volatile
  1384  004486                     
  1385                           ;src/main.c: 64:             LATDbits.LATD1 = 1;
  1386  004486  828C               	bsf	140,1,c	;volatile
  1387  004488                     l5805:
  1388                           
  1389                           ;src/main.c: 66:         if (c == 'B')
  1390  004488  0E42               	movlw	66
  1391  00448A  183C               	xorwf	main@c^0,w,c
  1392  00448C  A4D8               	btfss	status,2,c
  1393  00448E  EF4B  F022         	goto	u6701
  1394  004492  EF4D  F022         	goto	u6700
  1395  004496                     u6701:
  1396  004496  EF62  F022         	goto	l5817
  1397  00449A                     u6700:
  1398  00449A                     
  1399                           ;src/main.c: 67:         {;src/main.c: 68:             LATDbits.LATD0 = 0;
  1400  00449A  908C               	bcf	140,0,c	;volatile
  1401                           
  1402                           ;src/main.c: 69:             LATDbits.LATD1 = 0;
  1403  00449C  928C               	bcf	140,1,c	;volatile
  1404  00449E                     
  1405                           ;src/main.c: 70:             _delay((unsigned long)((1000)*(48000000/4000.0)));
  1406  00449E  0E3D               	movlw	61
  1407  0044A0  6E3B               	movwf	(??_main+1)^0,c
  1408  0044A2  0EE1               	movlw	225
  1409  0044A4  6E3A               	movwf	??_main^0,c
  1410  0044A6  0E40               	movlw	64
  1411  0044A8                     u6737:
  1412  0044A8  2EE8               	decfsz	wreg,f,c
  1413  0044AA  D7FE               	bra	u6737
  1414  0044AC  2E3A               	decfsz	??_main^0,f,c
  1415  0044AE  D7FC               	bra	u6737
  1416  0044B0  2E3B               	decfsz	(??_main+1)^0,f,c
  1417  0044B2  D7FA               	bra	u6737
  1418  0044B4                     
  1419                           ;src/main.c: 71:             my_vprintf("Motor girando a la Izquierda\n\n");
  1420  0044B4  0E14               	movlw	low STR_3
  1421  0044B6  6E36               	movwf	my_vprintf@sformat^0,c
  1422  0044B8  0E08               	movlw	high STR_3
  1423  0044BA  6E37               	movwf	(my_vprintf@sformat+1)^0,c
  1424  0044BC  EC31  F004         	call	_my_vprintf	;wreg free
  1425  0044C0                     
  1426                           ;src/main.c: 72:             LATDbits.LATD0 = 1;
  1427  0044C0  808C               	bsf	140,0,c	;volatile
  1428  0044C2                     
  1429                           ;src/main.c: 73:             LATDbits.LATD1 = 0;
  1430  0044C2  928C               	bcf	140,1,c	;volatile
  1431  0044C4                     l5817:
  1432                           
  1433                           ;src/main.c: 76:         _delay((unsigned long)((2000)*(48000000/4000.0)));
  1434  0044C4  0E7A               	movlw	122
  1435  0044C6  6E3B               	movwf	(??_main+1)^0,c
  1436  0044C8  0EC1               	movlw	193
  1437  0044CA  6E3A               	movwf	??_main^0,c
  1438  0044CC  0E82               	movlw	130
  1439  0044CE                     u6747:
  1440  0044CE  2EE8               	decfsz	wreg,f,c
  1441  0044D0  D7FE               	bra	u6747
  1442  0044D2  2E3A               	decfsz	??_main^0,f,c
  1443  0044D4  D7FC               	bra	u6747
  1444  0044D6  2E3B               	decfsz	(??_main+1)^0,f,c
  1445  0044D8  D7FA               	bra	u6747
  1446  0044DA  EF15  F022         	goto	l5787
  1447  0044DE  EF07  F000         	goto	start
  1448  0044E2                     __end_of_main:
  1449                           	opt callstack 0
  1450                           
  1451 ;; *************** function _my_vprintf *****************
  1452 ;; Defined at:
  1453 ;;		line 8 in file "src/print/my_print.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  sformat         2   53[COMRAM] PTR const unsigned char 
  1456 ;;		 -> STR_3(31), STR_2(29), STR_1(13), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  string        128    0[BANK1 ] unsigned char [128]
  1459 ;;  buffer         64  142[BANK1 ] unsigned char [64]
  1460 ;;  format         10  132[BANK1 ] unsigned char [10]
  1461 ;;  double_temp     4  226[BANK1 ] unsigned char [10]
  1462 ;;  prec            2  232[BANK1 ] int 
  1463 ;;  valist          2  230[BANK1 ] PTR void [1]
  1464 ;;		 -> ?_my_vprintf(2), 
  1465 ;;  i               2  224[BANK1 ] int 
  1466 ;;  int_temp        2  222[BANK1 ] int 
  1467 ;;  j               2  220[BANK1 ] int 
  1468 ;;  width           2  218[BANK1 ] int 
  1469 ;;  x               2  216[BANK1 ] int 
  1470 ;;  ch              2  208[BANK1 ] unsigned char [2]
  1471 ;;  expA            2  214[BANK1 ] int 
  1472 ;;  char_temp       2  130[BANK1 ] unsigned char [2]
  1473 ;;  error           2  212[BANK1 ] int 
  1474 ;;  uint_temp       2  210[BANK1 ] unsigned short 
  1475 ;;  string_temp     2  206[BANK1 ] PTR unsigned char 
  1476 ;;  length          2  128[BANK1 ] int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2   53[COMRAM] int 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1486 ;;      Params:         2       0       0       0       0       0       0       0       0
  1487 ;;      Locals:         0       0     234       0       0       0       0       0       0
  1488 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1489 ;;      Totals:         4       0     234       0       0       0       0       0       0
  1490 ;;Total ram usage:      238 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    6
  1493 ;; This function calls:
  1494 ;;		_SERIAL_Write
  1495 ;;		___xxtofl
  1496 ;;		_addOx
  1497 ;;		_addSig
  1498 ;;		_cleanS
  1499 ;;		_ftoa
  1500 ;;		_ftoa_sci
  1501 ;;		_getWP
  1502 ;;		_itoa
  1503 ;;		_precE
  1504 ;;		_precF
  1505 ;;		_precG
  1506 ;;		_precI
  1507 ;;		_precS
  1508 ;;		_setWidth
  1509 ;;		_strcat
  1510 ;;		_strcpy
  1511 ;;		_strlen
  1512 ;;		_upperCL
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text1
  1519  000862                     __ptext1:
  1520                           	opt callstack 0
  1521  000862                     _my_vprintf:
  1522                           	opt callstack 24
  1523  000862                     
  1524                           ;src/print/my_print.c: 9:  va_list valist;;src/print/my_print.c: 11:  *valist = __va_sta
      +                          rt();
  1525  000862  0E38               	movlw	low (?_my_vprintf+2)
  1526  000864  0101               	movlb	1	; () banked
  1527  000866  6FE6               	movwf	my_vprintf@valist& (0+255),b
  1528  000868  0E00               	movlw	high (?_my_vprintf+2)
  1529  00086A  6FE7               	movwf	(my_vprintf@valist+1)& (0+255),b
  1530  00086C                     
  1531                           ; BSR set to: 1
  1532                           ;src/print/my_print.c: 13:  const char tipo[]= {'%','c','s','d','i','x','X','o','u','f',
      +                          'g','G','e','E','n'};;src/print/my_print.c: 14:  char string[128] = "";
  1533  00086C  EE21  F000         	lfsr	2,my_vprintf@string
  1534  000870  0E7F               	movlw	127
  1535  000872                     u6201:
  1536  000872  6ADE               	clrf	postinc2,c
  1537  000874  06E8               	decf	wreg,f,c
  1538  000876  E2FD               	bc	u6201
  1539  000878                     
  1540                           ; BSR set to: 1
  1541                           ;src/print/my_print.c: 15:  int length = 0;
  1542  000878  0E00               	movlw	0
  1543  00087A  6F81               	movwf	(my_vprintf@length+1)& (0+255),b
  1544  00087C  0E00               	movlw	0
  1545  00087E  6F80               	movwf	my_vprintf@length& (0+255),b
  1546  000880                     
  1547                           ; BSR set to: 1
  1548                           ;src/print/my_print.c: 18:  int i, j, x;;src/print/my_print.c: 19:  char char_temp[2] = 
      +                          {0,0};
  1549  000880  0E00               	movlw	0
  1550  000882  6F83               	movwf	(my_vprintf@char_temp+1)& (0+255),b
  1551  000884  0E00               	movlw	0
  1552  000886  6F82               	movwf	my_vprintf@char_temp& (0+255),b
  1553  000888                     
  1554                           ; BSR set to: 1
  1555                           ;src/print/my_print.c: 20:  char *string_temp;;src/print/my_print.c: 21:  double double_
      +                          temp;;src/print/my_print.c: 22:  char ch[2]={0,0};
  1556  000888  0E00               	movlw	0
  1557  00088A  6FD1               	movwf	(my_vprintf@ch+1)& (0+255),b
  1558  00088C  0E00               	movlw	0
  1559  00088E  6FD0               	movwf	my_vprintf@ch& (0+255),b
  1560  000890                     
  1561                           ; BSR set to: 1
  1562                           ;src/print/my_print.c: 23:  char format[10];;src/print/my_print.c: 24:  char buffer[64] 
      +                          = " ";
  1563  000890  EE20  F060         	lfsr	2,my_vprintf@F3517
  1564  000894  EE11  F08E         	lfsr	1,my_vprintf@buffer
  1565  000898  0E3F               	movlw	63
  1566  00089A                     u6211:
  1567  00089A  CFDB FFE3          	movff	plusw2,plusw1
  1568  00089E  06E8               	decf	wreg,f,c
  1569  0008A0  E2FC               	bc	u6211
  1570  0008A2                     
  1571                           ; BSR set to: 1
  1572                           ;src/print/my_print.c: 25:  int expA;;src/print/my_print.c: 26:  int prec;;src/print/my_
      +                          print.c: 27:  int width;;src/print/my_print.c: 28:  int error = 0;
  1573  0008A2  0E00               	movlw	0
  1574  0008A4  6FD5               	movwf	(my_vprintf@error+1)& (0+255),b
  1575  0008A6  0E00               	movlw	0
  1576  0008A8  6FD4               	movwf	my_vprintf@error& (0+255),b
  1577                           
  1578                           ;src/print/my_print.c: 34:  while ( (ch[0] = *sformat++)) {
  1579  0008AA  EFCD  F009         	goto	l5687
  1580  0008AE                     l5415:
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;src/print/my_print.c: 35:   if ( '%' == ch[0] ) {
  1584  0008AE  0E25               	movlw	37
  1585  0008B0  19D0               	xorwf	my_vprintf@ch& (0+255),w,b
  1586  0008B2  A4D8               	btfss	status,2,c
  1587  0008B4  EF5E  F004         	goto	u6221
  1588  0008B8  EF60  F004         	goto	u6220
  1589  0008BC                     u6221:
  1590  0008BC  EFC0  F009         	goto	l5683
  1591  0008C0                     u6220:
  1592  0008C0                     
  1593                           ; BSR set to: 1
  1594                           ;src/print/my_print.c: 36:    cleanS(buffer);
  1595  0008C0  0E8E               	movlw	low my_vprintf@buffer
  1596  0008C2  6E08               	movwf	cleanS@str^0,c
  1597  0008C4  0E01               	movlw	high my_vprintf@buffer
  1598  0008C6  6E09               	movwf	(cleanS@str+1)^0,c
  1599  0008C8  EC96  F026         	call	_cleanS	;wreg free
  1600                           
  1601                           ;src/print/my_print.c: 37:    cleanS(format);
  1602  0008CC  0E84               	movlw	low my_vprintf@format
  1603  0008CE  6E08               	movwf	cleanS@str^0,c
  1604  0008D0  0E01               	movlw	high my_vprintf@format
  1605  0008D2  6E09               	movwf	(cleanS@str+1)^0,c
  1606  0008D4  EC96  F026         	call	_cleanS	;wreg free
  1607  0008D8                     
  1608                           ;src/print/my_print.c: 38:    width = -1;
  1609  0008D8  0101               	movlb	1	; () banked
  1610  0008DA  69DA               	setf	my_vprintf@width& (0+255),b
  1611  0008DC  69DB               	setf	(my_vprintf@width+1)& (0+255),b
  1612  0008DE                     
  1613                           ; BSR set to: 1
  1614                           ;src/print/my_print.c: 39:    prec = -1;
  1615  0008DE  69E8               	setf	my_vprintf@prec& (0+255),b
  1616  0008E0  69E9               	setf	(my_vprintf@prec+1)& (0+255),b
  1617  0008E2                     
  1618                           ; BSR set to: 1
  1619                           ;src/print/my_print.c: 41:    format[0]='%';
  1620  0008E2  0E25               	movlw	37
  1621  0008E4  6F84               	movwf	my_vprintf@format& (0+255),b
  1622  0008E6                     
  1623                           ; BSR set to: 1
  1624                           ;src/print/my_print.c: 42:    x = 0;
  1625  0008E6  0E00               	movlw	0
  1626  0008E8  6FD9               	movwf	(my_vprintf@x+1)& (0+255),b
  1627  0008EA  0E00               	movlw	0
  1628  0008EC  6FD8               	movwf	my_vprintf@x& (0+255),b
  1629  0008EE                     
  1630                           ; BSR set to: 1
  1631                           ;src/print/my_print.c: 43:    i = 1;
  1632  0008EE  0E00               	movlw	0
  1633  0008F0  6FE1               	movwf	(my_vprintf@i+1)& (0+255),b
  1634  0008F2  0E01               	movlw	1
  1635  0008F4  6FE0               	movwf	my_vprintf@i& (0+255),b
  1636                           
  1637                           ;src/print/my_print.c: 45:    while (x==0) {
  1638  0008F6  EFC2  F004         	goto	l5449
  1639  0008FA                     l5429:
  1640                           
  1641                           ; BSR set to: 1
  1642                           ;src/print/my_print.c: 46:      format[i] = *sformat++;
  1643  0008FA  C036  FFF6         	movff	my_vprintf@sformat,tblptrl
  1644  0008FE  C037  FFF7         	movff	my_vprintf@sformat+1,tblptrh
  1645  000902                     	if	0	;tblptru may be non-zero
  1646  000902                     	endif
  1647  000902                     	if	0	;tblptru may be non-zero
  1648  000902                     	endif
  1649  000902  0E84               	movlw	low my_vprintf@format
  1650  000904  25E0               	addwf	my_vprintf@i& (0+255),w,b
  1651  000906  6ED9               	movwf	fsr2l,c
  1652  000908  0E01               	movlw	high my_vprintf@format
  1653  00090A  21E1               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  1654  00090C  6EDA               	movwf	fsr2h,c
  1655  00090E  0008               	tblrd		*
  1656  000910  CFF5 FFDF          	movff	tablat,indf2
  1657  000914                     
  1658                           ; BSR set to: 1
  1659  000914  4A36               	infsnz	my_vprintf@sformat^0,f,c
  1660  000916  2A37               	incf	(my_vprintf@sformat+1)^0,f,c
  1661  000918                     
  1662                           ; BSR set to: 1
  1663                           ;src/print/my_print.c: 47:      for(j = 0; j < 15; j++) {
  1664  000918  0E00               	movlw	0
  1665  00091A  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  1666  00091C  0E00               	movlw	0
  1667  00091E  6FDC               	movwf	my_vprintf@j& (0+255),b
  1668  000920                     l5435:
  1669                           
  1670                           ; BSR set to: 1
  1671  000920  BFDD               	btfsc	(my_vprintf@j+1)& (0+255),7,b
  1672  000922  EF9C  F004         	goto	u6231
  1673  000926  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  1674  000928  E109               	bnz	u6230
  1675  00092A  0E0F               	movlw	15
  1676  00092C  5DDC               	subwf	my_vprintf@j& (0+255),w,b
  1677  00092E  A0D8               	btfss	status,0,c
  1678  000930  EF9C  F004         	goto	u6231
  1679  000934  EF9E  F004         	goto	u6230
  1680  000938                     u6231:
  1681  000938  EFA0  F004         	goto	l5439
  1682  00093C                     u6230:
  1683  00093C  EFC0  F004         	goto	l5447
  1684  000940                     l5439:
  1685                           
  1686                           ; BSR set to: 1
  1687                           ;src/print/my_print.c: 48:         if (format[i] == tipo[j])
  1688  000940  0E84               	movlw	low my_vprintf@format
  1689  000942  25E0               	addwf	my_vprintf@i& (0+255),w,b
  1690  000944  6ED9               	movwf	fsr2l,c
  1691  000946  0E01               	movlw	high my_vprintf@format
  1692  000948  21E1               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  1693  00094A  6EDA               	movwf	fsr2h,c
  1694  00094C  50DF               	movf	indf2,w,c
  1695  00094E  6E38               	movwf	??_my_vprintf^0,c
  1696  000950  0E01               	movlw	low my_vprintf@tipo
  1697  000952  25DC               	addwf	my_vprintf@j& (0+255),w,b
  1698  000954  6EF6               	movwf	tblptrl,c
  1699  000956  0E08               	movlw	high my_vprintf@tipo
  1700  000958  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  1701  00095A  6EF7               	movwf	tblptrh,c
  1702  00095C                     	if	0	;There are less than 3 active tblptr bytes
  1703  00095C                     	endif
  1704  00095C  0008               	tblrd		*
  1705  00095E  50F5               	movf	tablat,w,c
  1706  000960  1838               	xorwf	??_my_vprintf^0,w,c
  1707  000962  A4D8               	btfss	status,2,c
  1708  000964  EFB6  F004         	goto	u6241
  1709  000968  EFB8  F004         	goto	u6240
  1710  00096C                     u6241:
  1711  00096C  EFBC  F004         	goto	l5443
  1712  000970                     u6240:
  1713  000970                     
  1714                           ; BSR set to: 1
  1715                           ;src/print/my_print.c: 49:       x = i;
  1716  000970  C1E0  F1D8         	movff	my_vprintf@i,my_vprintf@x
  1717  000974  C1E1  F1D9         	movff	my_vprintf@i+1,my_vprintf@x+1
  1718  000978                     l5443:
  1719                           
  1720                           ; BSR set to: 1
  1721                           ;src/print/my_print.c: 50:      }
  1722  000978  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  1723  00097A  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  1724  00097C  EF90  F004         	goto	l5435
  1725  000980                     l5447:
  1726                           
  1727                           ; BSR set to: 1
  1728                           ;src/print/my_print.c: 51:      i++;
  1729  000980  4BE0               	infsnz	my_vprintf@i& (0+255),f,b
  1730  000982  2BE1               	incf	(my_vprintf@i+1)& (0+255),f,b
  1731  000984                     l5449:
  1732                           
  1733                           ; BSR set to: 1
  1734                           ;src/print/my_print.c: 45:    while (x==0) {
  1735  000984  51D8               	movf	my_vprintf@x& (0+255),w,b
  1736  000986  11D9               	iorwf	(my_vprintf@x+1)& (0+255),w,b
  1737  000988  B4D8               	btfsc	status,2,c
  1738  00098A  EFC9  F004         	goto	u6251
  1739  00098E  EFCB  F004         	goto	u6250
  1740  000992                     u6251:
  1741  000992  EF7D  F004         	goto	l5429
  1742  000996                     u6250:
  1743  000996                     
  1744                           ; BSR set to: 1
  1745                           ;src/print/my_print.c: 55:    i=0;
  1746  000996  0E00               	movlw	0
  1747  000998  6FE1               	movwf	(my_vprintf@i+1)& (0+255),b
  1748  00099A  0E00               	movlw	0
  1749  00099C  6FE0               	movwf	my_vprintf@i& (0+255),b
  1750                           
  1751                           ;src/print/my_print.c: 56:    for (j=0; j < x; j++) {
  1752  00099E  0E00               	movlw	0
  1753  0009A0  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  1754  0009A2  0E00               	movlw	0
  1755  0009A4  6FDC               	movwf	my_vprintf@j& (0+255),b
  1756  0009A6  EF34  F005         	goto	l5473
  1757  0009AA                     l5453:
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;src/print/my_print.c: 57:     if(format[j]=='*' && i==0)
  1761  0009AA  0E84               	movlw	low my_vprintf@format
  1762  0009AC  25DC               	addwf	my_vprintf@j& (0+255),w,b
  1763  0009AE  6ED9               	movwf	fsr2l,c
  1764  0009B0  0E01               	movlw	high my_vprintf@format
  1765  0009B2  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  1766  0009B4  6EDA               	movwf	fsr2h,c
  1767  0009B6  0E2A               	movlw	42
  1768  0009B8  18DE               	xorwf	postinc2,w,c
  1769  0009BA  A4D8               	btfss	status,2,c
  1770  0009BC  EFE2  F004         	goto	u6261
  1771  0009C0  EFE4  F004         	goto	u6260
  1772  0009C4                     u6261:
  1773  0009C4  EFFB  F004         	goto	l5461
  1774  0009C8                     u6260:
  1775  0009C8                     
  1776                           ; BSR set to: 1
  1777  0009C8  51E0               	movf	my_vprintf@i& (0+255),w,b
  1778  0009CA  11E1               	iorwf	(my_vprintf@i+1)& (0+255),w,b
  1779  0009CC  A4D8               	btfss	status,2,c
  1780  0009CE  EFEB  F004         	goto	u6271
  1781  0009D2  EFED  F004         	goto	u6270
  1782  0009D6                     u6271:
  1783  0009D6  EFFB  F004         	goto	l5461
  1784  0009DA                     u6270:
  1785  0009DA                     
  1786                           ; BSR set to: 1
  1787                           ;src/print/my_print.c: 58:      width = (*(int *)__va_arg(*(int **)valist, (int)0));
  1788  0009DA  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  1789  0009DE  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  1790  0009E2  CFDE F1DA          	movff	postinc2,my_vprintf@width
  1791  0009E6  CFDD F1DB          	movff	postdec2,my_vprintf@width+1
  1792  0009EA                     
  1793                           ; BSR set to: 1
  1794  0009EA  0E02               	movlw	2
  1795  0009EC  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  1796  0009EE  0E00               	movlw	0
  1797  0009F0  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  1798  0009F2  EF32  F005         	goto	l635
  1799  0009F6                     l5461:
  1800                           
  1801                           ; BSR set to: 1
  1802  0009F6  0E84               	movlw	low my_vprintf@format
  1803  0009F8  25DC               	addwf	my_vprintf@j& (0+255),w,b
  1804  0009FA  6ED9               	movwf	fsr2l,c
  1805  0009FC  0E01               	movlw	high my_vprintf@format
  1806  0009FE  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  1807  000A00  6EDA               	movwf	fsr2h,c
  1808  000A02  0E2A               	movlw	42
  1809  000A04  18DE               	xorwf	postinc2,w,c
  1810  000A06  A4D8               	btfss	status,2,c
  1811  000A08  EF08  F005         	goto	u6281
  1812  000A0C  EF0A  F005         	goto	u6280
  1813  000A10                     u6281:
  1814  000A10  EF21  F005         	goto	l5469
  1815  000A14                     u6280:
  1816  000A14                     
  1817                           ; BSR set to: 1
  1818  000A14  05E0               	decf	my_vprintf@i& (0+255),w,b
  1819  000A16  11E1               	iorwf	(my_vprintf@i+1)& (0+255),w,b
  1820  000A18  A4D8               	btfss	status,2,c
  1821  000A1A  EF11  F005         	goto	u6291
  1822  000A1E  EF13  F005         	goto	u6290
  1823  000A22                     u6291:
  1824  000A22  EF21  F005         	goto	l5469
  1825  000A26                     u6290:
  1826  000A26                     
  1827                           ; BSR set to: 1
  1828                           ;src/print/my_print.c: 60:      prec = (*(int *)__va_arg(*(int **)valist, (int)0));
  1829  000A26  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  1830  000A2A  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  1831  000A2E  CFDE F1E8          	movff	postinc2,my_vprintf@prec
  1832  000A32  CFDD F1E9          	movff	postdec2,my_vprintf@prec+1
  1833  000A36                     
  1834                           ; BSR set to: 1
  1835  000A36  0E02               	movlw	2
  1836  000A38  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  1837  000A3A  0E00               	movlw	0
  1838  000A3C  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  1839  000A3E  EF32  F005         	goto	l635
  1840  000A42                     l5469:
  1841                           
  1842                           ; BSR set to: 1
  1843  000A42  0E84               	movlw	low my_vprintf@format
  1844  000A44  25DC               	addwf	my_vprintf@j& (0+255),w,b
  1845  000A46  6ED9               	movwf	fsr2l,c
  1846  000A48  0E01               	movlw	high my_vprintf@format
  1847  000A4A  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  1848  000A4C  6EDA               	movwf	fsr2h,c
  1849  000A4E  0E2E               	movlw	46
  1850  000A50  18DE               	xorwf	postinc2,w,c
  1851  000A52  A4D8               	btfss	status,2,c
  1852  000A54  EF2E  F005         	goto	u6301
  1853  000A58  EF30  F005         	goto	u6300
  1854  000A5C                     u6301:
  1855  000A5C  EF32  F005         	goto	l635
  1856  000A60                     u6300:
  1857  000A60                     
  1858                           ; BSR set to: 1
  1859                           ;src/print/my_print.c: 62:      i++;
  1860  000A60  4BE0               	infsnz	my_vprintf@i& (0+255),f,b
  1861  000A62  2BE1               	incf	(my_vprintf@i+1)& (0+255),f,b
  1862  000A64                     l635:
  1863                           
  1864                           ; BSR set to: 1
  1865                           ;src/print/my_print.c: 63:    }
  1866  000A64  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  1867  000A66  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  1868  000A68                     l5473:
  1869                           
  1870                           ; BSR set to: 1
  1871  000A68  51D8               	movf	my_vprintf@x& (0+255),w,b
  1872  000A6A  5DDC               	subwf	my_vprintf@j& (0+255),w,b
  1873  000A6C  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  1874  000A6E  0A80               	xorlw	128
  1875  000A70  6E38               	movwf	??_my_vprintf^0,c
  1876  000A72  51D9               	movf	(my_vprintf@x+1)& (0+255),w,b
  1877  000A74  0A80               	xorlw	128
  1878  000A76  5838               	subwfb	??_my_vprintf^0,w,c
  1879  000A78  A0D8               	btfss	status,0,c
  1880  000A7A  EF41  F005         	goto	u6311
  1881  000A7E  EF43  F005         	goto	u6310
  1882  000A82                     u6311:
  1883  000A82  EFD5  F004         	goto	l5453
  1884  000A86                     u6310:
  1885  000A86                     
  1886                           ; BSR set to: 1
  1887                           ;src/print/my_print.c: 65:    getWP(format, &width, &prec);
  1888  000A86  0E84               	movlw	low my_vprintf@format
  1889  000A88  6E16               	movwf	getWP@form^0,c
  1890  000A8A  0E01               	movlw	high my_vprintf@format
  1891  000A8C  6E17               	movwf	(getWP@form+1)^0,c
  1892  000A8E  0EDA               	movlw	low my_vprintf@width
  1893  000A90  6E18               	movwf	getWP@width^0,c
  1894  000A92  0E01               	movlw	high my_vprintf@width
  1895  000A94  6E19               	movwf	(getWP@width+1)^0,c
  1896  000A96  0EE8               	movlw	low my_vprintf@prec
  1897  000A98  6E1A               	movwf	getWP@precision^0,c
  1898  000A9A  0E01               	movlw	high my_vprintf@prec
  1899  000A9C  6E1B               	movwf	(getWP@precision+1)^0,c
  1900  000A9E  EC57  F017         	call	_getWP	;wreg free
  1901  000AA2                     
  1902                           ;src/print/my_print.c: 68:    if (width >= 64)
  1903  000AA2  0101               	movlb	1	; () banked
  1904  000AA4  BFDB               	btfsc	(my_vprintf@width+1)& (0+255),7,b
  1905  000AA6  EF5E  F005         	goto	u6321
  1906  000AAA  51DB               	movf	(my_vprintf@width+1)& (0+255),w,b
  1907  000AAC  E109               	bnz	u6320
  1908  000AAE  0E40               	movlw	64
  1909  000AB0  5DDA               	subwf	my_vprintf@width& (0+255),w,b
  1910  000AB2  A0D8               	btfss	status,0,c
  1911  000AB4  EF5E  F005         	goto	u6321
  1912  000AB8  EF60  F005         	goto	u6320
  1913  000ABC                     u6321:
  1914  000ABC  EF64  F005         	goto	l5481
  1915  000AC0                     u6320:
  1916  000AC0                     
  1917                           ; BSR set to: 1
  1918                           ;src/print/my_print.c: 69:     width = 0;
  1919  000AC0  0E00               	movlw	0
  1920  000AC2  6FDB               	movwf	(my_vprintf@width+1)& (0+255),b
  1921  000AC4  0E00               	movlw	0
  1922  000AC6  6FDA               	movwf	my_vprintf@width& (0+255),b
  1923  000AC8                     l5481:
  1924                           
  1925                           ; BSR set to: 1
  1926                           ;src/print/my_print.c: 70:    if (prec >= 64)
  1927  000AC8  BFE9               	btfsc	(my_vprintf@prec+1)& (0+255),7,b
  1928  000ACA  EF70  F005         	goto	u6331
  1929  000ACE  51E9               	movf	(my_vprintf@prec+1)& (0+255),w,b
  1930  000AD0  E109               	bnz	u6330
  1931  000AD2  0E40               	movlw	64
  1932  000AD4  5DE8               	subwf	my_vprintf@prec& (0+255),w,b
  1933  000AD6  A0D8               	btfss	status,0,c
  1934  000AD8  EF70  F005         	goto	u6331
  1935  000ADC  EF72  F005         	goto	u6330
  1936  000AE0                     u6331:
  1937  000AE0  EF50  F009         	goto	l5675
  1938  000AE4                     u6330:
  1939  000AE4                     
  1940                           ; BSR set to: 1
  1941                           ;src/print/my_print.c: 71:     prec = 0;
  1942  000AE4  0E00               	movlw	0
  1943  000AE6  6FE9               	movwf	(my_vprintf@prec+1)& (0+255),b
  1944  000AE8  0E00               	movlw	0
  1945  000AEA  6FE8               	movwf	my_vprintf@prec& (0+255),b
  1946  000AEC  EF50  F009         	goto	l5675
  1947  000AF0                     l5485:
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;src/print/my_print.c: 75:      strcpy(buffer, "%");
  1951  000AF0  0E8E               	movlw	low my_vprintf@buffer
  1952  000AF2  6E08               	movwf	strcpy@dest^0,c
  1953  000AF4  0E01               	movlw	high my_vprintf@buffer
  1954  000AF6  6E09               	movwf	(strcpy@dest+1)^0,c
  1955  000AF8  0E5F               	movlw	low STR_4
  1956  000AFA  6E0A               	movwf	strcpy@src^0,c
  1957  000AFC  0E08               	movlw	high STR_4
  1958  000AFE  6E0B               	movwf	(strcpy@src+1)^0,c
  1959  000B00  EC11  F026         	call	_strcpy	;wreg free
  1960                           
  1961                           ;src/print/my_print.c: 76:      break;
  1962  000B04  EF9F  F009         	goto	l5677
  1963  000B08                     l5487:
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;src/print/my_print.c: 78:      char_temp[0] = (*(char *)__va_arg(*(char **)valist, (cha
      +                          r)0));
  1967  000B08  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  1968  000B0C  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  1969  000B10  50DF               	movf	indf2,w,c
  1970  000B12  6F82               	movwf	my_vprintf@char_temp& (0+255),b
  1971  000B14                     
  1972                           ; BSR set to: 1
  1973  000B14  0E02               	movlw	2
  1974  000B16  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  1975  000B18  0E00               	movlw	0
  1976  000B1A  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  1977  000B1C                     
  1978                           ; BSR set to: 1
  1979                           ;src/print/my_print.c: 79:      strcpy(buffer, char_temp);
  1980  000B1C  0E8E               	movlw	low my_vprintf@buffer
  1981  000B1E  6E08               	movwf	strcpy@dest^0,c
  1982  000B20  0E01               	movlw	high my_vprintf@buffer
  1983  000B22  6E09               	movwf	(strcpy@dest+1)^0,c
  1984  000B24  0E82               	movlw	low my_vprintf@char_temp
  1985  000B26  6E0A               	movwf	strcpy@src^0,c
  1986  000B28  0E01               	movlw	high my_vprintf@char_temp
  1987  000B2A  6E0B               	movwf	(strcpy@src+1)^0,c
  1988  000B2C  EC11  F026         	call	_strcpy	;wreg free
  1989                           
  1990                           ;src/print/my_print.c: 80:      break;
  1991  000B30  EF9F  F009         	goto	l5677
  1992  000B34                     l5493:
  1993                           
  1994                           ; BSR set to: 1
  1995                           ;src/print/my_print.c: 82:      string_temp = (*(char * *)__va_arg(*(char * **)valist, (
      +                          char *)0));
  1996  000B34  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  1997  000B38  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  1998  000B3C  CFDE F1CE          	movff	postinc2,my_vprintf@string_temp
  1999  000B40  CFDD F1CF          	movff	postdec2,my_vprintf@string_temp+1
  2000  000B44                     
  2001                           ; BSR set to: 1
  2002  000B44  0E02               	movlw	2
  2003  000B46  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2004  000B48  0E00               	movlw	0
  2005  000B4A  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2006  000B4C                     
  2007                           ; BSR set to: 1
  2008                           ;src/print/my_print.c: 83:      strcpy(buffer, string_temp);
  2009  000B4C  0E8E               	movlw	low my_vprintf@buffer
  2010  000B4E  6E08               	movwf	strcpy@dest^0,c
  2011  000B50  0E01               	movlw	high my_vprintf@buffer
  2012  000B52  6E09               	movwf	(strcpy@dest+1)^0,c
  2013  000B54  C1CE  F00A         	movff	my_vprintf@string_temp,strcpy@src
  2014  000B58  C1CF  F00B         	movff	my_vprintf@string_temp+1,strcpy@src+1
  2015  000B5C  EC11  F026         	call	_strcpy	;wreg free
  2016  000B60                     
  2017                           ;src/print/my_print.c: 84:      precS(buffer, &prec);
  2018  000B60  0E8E               	movlw	low my_vprintf@buffer
  2019  000B62  6E08               	movwf	precS@str^0,c
  2020  000B64  0E01               	movlw	high my_vprintf@buffer
  2021  000B66  6E09               	movwf	(precS@str+1)^0,c
  2022  000B68  0EE8               	movlw	low my_vprintf@prec
  2023  000B6A  6E0A               	movwf	precS@precision^0,c
  2024  000B6C  0E01               	movlw	high my_vprintf@prec
  2025  000B6E  6E0B               	movwf	(precS@precision+1)^0,c
  2026  000B70  EC71  F025         	call	_precS	;wreg free
  2027                           
  2028                           ;src/print/my_print.c: 85:      break;
  2029  000B74  EF9F  F009         	goto	l5677
  2030  000B78                     l5501:
  2031                           
  2032                           ; BSR set to: 1
  2033                           ;src/print/my_print.c: 87:      int_temp = (*(int *)__va_arg(*(int **)valist, (int)0));
  2034  000B78  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2035  000B7C  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2036  000B80  CFDE F1DE          	movff	postinc2,my_vprintf@int_temp
  2037  000B84  CFDD F1DF          	movff	postdec2,my_vprintf@int_temp+1
  2038  000B88                     
  2039                           ; BSR set to: 1
  2040  000B88  0E02               	movlw	2
  2041  000B8A  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2042  000B8C  0E00               	movlw	0
  2043  000B8E  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2044  000B90                     
  2045                           ; BSR set to: 1
  2046                           ;src/print/my_print.c: 88:      itoa(buffer, int_temp, 10);
  2047  000B90  0E8E               	movlw	low my_vprintf@buffer
  2048  000B92  6E16               	movwf	itoa@str^0,c
  2049  000B94  0E01               	movlw	high my_vprintf@buffer
  2050  000B96  6E17               	movwf	(itoa@str+1)^0,c
  2051  000B98  C1DE  F018         	movff	my_vprintf@int_temp,itoa@num
  2052  000B9C  C1DF  F019         	movff	my_vprintf@int_temp+1,itoa@num+1
  2053  000BA0  0E00               	movlw	0
  2054  000BA2  BE19               	btfsc	(itoa@num+1)^0,7,c
  2055  000BA4  0EFF               	movlw	-1
  2056  000BA6  6E1A               	movwf	(itoa@num+2)^0,c
  2057  000BA8  6E1B               	movwf	(itoa@num+3)^0,c
  2058  000BAA  0E00               	movlw	0
  2059  000BAC  6E1D               	movwf	(itoa@base_+1)^0,c
  2060  000BAE  0E0A               	movlw	10
  2061  000BB0  6E1C               	movwf	itoa@base_^0,c
  2062  000BB2  EC31  F01D         	call	_itoa	;wreg free
  2063  000BB6                     
  2064                           ;src/print/my_print.c: 89:      precI(buffer, &prec);
  2065  000BB6  0E8E               	movlw	low my_vprintf@buffer
  2066  000BB8  6E08               	movwf	precI@str^0,c
  2067  000BBA  0E01               	movlw	high my_vprintf@buffer
  2068  000BBC  6E09               	movwf	(precI@str+1)^0,c
  2069  000BBE  0EE8               	movlw	low my_vprintf@prec
  2070  000BC0  6E0A               	movwf	precI@precision^0,c
  2071  000BC2  0E01               	movlw	high my_vprintf@prec
  2072  000BC4  6E0B               	movwf	(precI@precision+1)^0,c
  2073  000BC6  ECE6  F01F         	call	_precI	;wreg free
  2074  000BCA                     
  2075                           ;src/print/my_print.c: 90:      addSig(buffer, (double)int_temp);
  2076  000BCA  0E8E               	movlw	low my_vprintf@buffer
  2077  000BCC  6E12               	movwf	addSig@numS^0,c
  2078  000BCE  0E01               	movlw	high my_vprintf@buffer
  2079  000BD0  6E13               	movwf	(addSig@numS+1)^0,c
  2080  000BD2  C1DE  F004         	movff	my_vprintf@int_temp,___xxtofl@val
  2081  000BD6  C1DF  F005         	movff	my_vprintf@int_temp+1,___xxtofl@val+1
  2082  000BDA  0E00               	movlw	0
  2083  000BDC  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  2084  000BDE  0EFF               	movlw	-1
  2085  000BE0  6E06               	movwf	(___xxtofl@val+2)^0,c
  2086  000BE2  6E07               	movwf	(___xxtofl@val+3)^0,c
  2087  000BE4  0E01               	movlw	1
  2088  000BE6  EC57  F01C         	call	___xxtofl
  2089  000BEA  C004  F014         	movff	?___xxtofl,addSig@num
  2090  000BEE  C005  F015         	movff	?___xxtofl+1,addSig@num+1
  2091  000BF2  C006  F016         	movff	?___xxtofl+2,addSig@num+2
  2092  000BF6  C007  F017         	movff	?___xxtofl+3,addSig@num+3
  2093  000BFA  ECAD  F01E         	call	_addSig	;wreg free
  2094                           
  2095                           ;src/print/my_print.c: 91:      break;
  2096  000BFE  EF9F  F009         	goto	l5677
  2097  000C02                     l5511:
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;src/print/my_print.c: 93:      int_temp = (*(int *)__va_arg(*(int **)valist, (int)0));
  2101  000C02  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2102  000C06  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2103  000C0A  CFDE F1DE          	movff	postinc2,my_vprintf@int_temp
  2104  000C0E  CFDD F1DF          	movff	postdec2,my_vprintf@int_temp+1
  2105  000C12                     
  2106                           ; BSR set to: 1
  2107  000C12  0E02               	movlw	2
  2108  000C14  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2109  000C16  0E00               	movlw	0
  2110  000C18  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2111  000C1A                     
  2112                           ; BSR set to: 1
  2113                           ;src/print/my_print.c: 94:      itoa(buffer, int_temp, 10);
  2114  000C1A  0E8E               	movlw	low my_vprintf@buffer
  2115  000C1C  6E16               	movwf	itoa@str^0,c
  2116  000C1E  0E01               	movlw	high my_vprintf@buffer
  2117  000C20  6E17               	movwf	(itoa@str+1)^0,c
  2118  000C22  C1DE  F018         	movff	my_vprintf@int_temp,itoa@num
  2119  000C26  C1DF  F019         	movff	my_vprintf@int_temp+1,itoa@num+1
  2120  000C2A  0E00               	movlw	0
  2121  000C2C  BE19               	btfsc	(itoa@num+1)^0,7,c
  2122  000C2E  0EFF               	movlw	-1
  2123  000C30  6E1A               	movwf	(itoa@num+2)^0,c
  2124  000C32  6E1B               	movwf	(itoa@num+3)^0,c
  2125  000C34  0E00               	movlw	0
  2126  000C36  6E1D               	movwf	(itoa@base_+1)^0,c
  2127  000C38  0E0A               	movlw	10
  2128  000C3A  6E1C               	movwf	itoa@base_^0,c
  2129  000C3C  EC31  F01D         	call	_itoa	;wreg free
  2130  000C40                     
  2131                           ;src/print/my_print.c: 95:      precI(buffer, &prec);
  2132  000C40  0E8E               	movlw	low my_vprintf@buffer
  2133  000C42  6E08               	movwf	precI@str^0,c
  2134  000C44  0E01               	movlw	high my_vprintf@buffer
  2135  000C46  6E09               	movwf	(precI@str+1)^0,c
  2136  000C48  0EE8               	movlw	low my_vprintf@prec
  2137  000C4A  6E0A               	movwf	precI@precision^0,c
  2138  000C4C  0E01               	movlw	high my_vprintf@prec
  2139  000C4E  6E0B               	movwf	(precI@precision+1)^0,c
  2140  000C50  ECE6  F01F         	call	_precI	;wreg free
  2141  000C54                     
  2142                           ;src/print/my_print.c: 96:      addSig(buffer, (double)int_temp);
  2143  000C54  0E8E               	movlw	low my_vprintf@buffer
  2144  000C56  6E12               	movwf	addSig@numS^0,c
  2145  000C58  0E01               	movlw	high my_vprintf@buffer
  2146  000C5A  6E13               	movwf	(addSig@numS+1)^0,c
  2147  000C5C  C1DE  F004         	movff	my_vprintf@int_temp,___xxtofl@val
  2148  000C60  C1DF  F005         	movff	my_vprintf@int_temp+1,___xxtofl@val+1
  2149  000C64  0E00               	movlw	0
  2150  000C66  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  2151  000C68  0EFF               	movlw	-1
  2152  000C6A  6E06               	movwf	(___xxtofl@val+2)^0,c
  2153  000C6C  6E07               	movwf	(___xxtofl@val+3)^0,c
  2154  000C6E  0E01               	movlw	1
  2155  000C70  EC57  F01C         	call	___xxtofl
  2156  000C74  C004  F014         	movff	?___xxtofl,addSig@num
  2157  000C78  C005  F015         	movff	?___xxtofl+1,addSig@num+1
  2158  000C7C  C006  F016         	movff	?___xxtofl+2,addSig@num+2
  2159  000C80  C007  F017         	movff	?___xxtofl+3,addSig@num+3
  2160  000C84  ECAD  F01E         	call	_addSig	;wreg free
  2161                           
  2162                           ;src/print/my_print.c: 97:      break;
  2163  000C88  EF9F  F009         	goto	l5677
  2164  000C8C                     l5521:
  2165                           
  2166                           ; BSR set to: 1
  2167                           ;src/print/my_print.c: 99:      uint_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2168  000C8C  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2169  000C90  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2170  000C94  CFDE F1D2          	movff	postinc2,my_vprintf@uint_temp
  2171  000C98  CFDD F1D3          	movff	postdec2,my_vprintf@uint_temp+1
  2172  000C9C                     
  2173                           ; BSR set to: 1
  2174  000C9C  0E02               	movlw	2
  2175  000C9E  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2176  000CA0  0E00               	movlw	0
  2177  000CA2  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2178  000CA4                     
  2179                           ; BSR set to: 1
  2180                           ;src/print/my_print.c: 100:      itoa(buffer, uint_temp, 10);
  2181  000CA4  0E8E               	movlw	low my_vprintf@buffer
  2182  000CA6  6E16               	movwf	itoa@str^0,c
  2183  000CA8  0E01               	movlw	high my_vprintf@buffer
  2184  000CAA  6E17               	movwf	(itoa@str+1)^0,c
  2185  000CAC  C1D2  F018         	movff	my_vprintf@uint_temp,itoa@num
  2186  000CB0  C1D3  F019         	movff	my_vprintf@uint_temp+1,itoa@num+1
  2187  000CB4  6A1A               	clrf	(itoa@num+2)^0,c
  2188  000CB6  6A1B               	clrf	(itoa@num+3)^0,c
  2189  000CB8  0E00               	movlw	0
  2190  000CBA  6E1D               	movwf	(itoa@base_+1)^0,c
  2191  000CBC  0E0A               	movlw	10
  2192  000CBE  6E1C               	movwf	itoa@base_^0,c
  2193  000CC0  EC31  F01D         	call	_itoa	;wreg free
  2194  000CC4                     
  2195                           ;src/print/my_print.c: 101:      precI(buffer, &prec);
  2196  000CC4  0E8E               	movlw	low my_vprintf@buffer
  2197  000CC6  6E08               	movwf	precI@str^0,c
  2198  000CC8  0E01               	movlw	high my_vprintf@buffer
  2199  000CCA  6E09               	movwf	(precI@str+1)^0,c
  2200  000CCC  0EE8               	movlw	low my_vprintf@prec
  2201  000CCE  6E0A               	movwf	precI@precision^0,c
  2202  000CD0  0E01               	movlw	high my_vprintf@prec
  2203  000CD2  6E0B               	movwf	(precI@precision+1)^0,c
  2204  000CD4  ECE6  F01F         	call	_precI	;wreg free
  2205                           
  2206                           ;src/print/my_print.c: 102:      break;
  2207  000CD8  EF9F  F009         	goto	l5677
  2208  000CDC                     l5529:
  2209                           
  2210                           ; BSR set to: 1
  2211                           ;src/print/my_print.c: 104:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2212  000CDC  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2213  000CE0  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2214  000CE4  CFDE F1DE          	movff	postinc2,my_vprintf@int_temp
  2215  000CE8  CFDD F1DF          	movff	postdec2,my_vprintf@int_temp+1
  2216  000CEC                     
  2217                           ; BSR set to: 1
  2218  000CEC  0E02               	movlw	2
  2219  000CEE  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2220  000CF0  0E00               	movlw	0
  2221  000CF2  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2222  000CF4                     
  2223                           ; BSR set to: 1
  2224                           ;src/print/my_print.c: 105:      itoa(buffer, int_temp, 16);
  2225  000CF4  0E8E               	movlw	low my_vprintf@buffer
  2226  000CF6  6E16               	movwf	itoa@str^0,c
  2227  000CF8  0E01               	movlw	high my_vprintf@buffer
  2228  000CFA  6E17               	movwf	(itoa@str+1)^0,c
  2229  000CFC  C1DE  F018         	movff	my_vprintf@int_temp,itoa@num
  2230  000D00  C1DF  F019         	movff	my_vprintf@int_temp+1,itoa@num+1
  2231  000D04  0E00               	movlw	0
  2232  000D06  BE19               	btfsc	(itoa@num+1)^0,7,c
  2233  000D08  0EFF               	movlw	-1
  2234  000D0A  6E1A               	movwf	(itoa@num+2)^0,c
  2235  000D0C  6E1B               	movwf	(itoa@num+3)^0,c
  2236  000D0E  0E00               	movlw	0
  2237  000D10  6E1D               	movwf	(itoa@base_+1)^0,c
  2238  000D12  0E10               	movlw	16
  2239  000D14  6E1C               	movwf	itoa@base_^0,c
  2240  000D16  EC31  F01D         	call	_itoa	;wreg free
  2241  000D1A                     
  2242                           ;src/print/my_print.c: 106:      precI(buffer, &prec);
  2243  000D1A  0E8E               	movlw	low my_vprintf@buffer
  2244  000D1C  6E08               	movwf	precI@str^0,c
  2245  000D1E  0E01               	movlw	high my_vprintf@buffer
  2246  000D20  6E09               	movwf	(precI@str+1)^0,c
  2247  000D22  0EE8               	movlw	low my_vprintf@prec
  2248  000D24  6E0A               	movwf	precI@precision^0,c
  2249  000D26  0E01               	movlw	high my_vprintf@prec
  2250  000D28  6E0B               	movwf	(precI@precision+1)^0,c
  2251  000D2A  ECE6  F01F         	call	_precI	;wreg free
  2252  000D2E                     
  2253                           ;src/print/my_print.c: 107:      addOx(buffer, int_temp,'x');
  2254  000D2E  0E8E               	movlw	low my_vprintf@buffer
  2255  000D30  6E08               	movwf	addOx@hoS^0,c
  2256  000D32  0E01               	movlw	high my_vprintf@buffer
  2257  000D34  6E09               	movwf	(addOx@hoS+1)^0,c
  2258  000D36  C1DE  F00A         	movff	my_vprintf@int_temp,addOx@num
  2259  000D3A  C1DF  F00B         	movff	my_vprintf@int_temp+1,addOx@num+1
  2260  000D3E  0E78               	movlw	120
  2261  000D40  6E0C               	movwf	addOx@type^0,c
  2262  000D42  ECF1  F01D         	call	_addOx	;wreg free
  2263  000D46                     l5539:
  2264                           
  2265                           ;src/print/my_print.c: 108:      upperCL(buffer);
  2266  000D46  0E8E               	movlw	low my_vprintf@buffer
  2267  000D48  6E08               	movwf	upperCL@str^0,c
  2268  000D4A  0E01               	movlw	high my_vprintf@buffer
  2269  000D4C  6E09               	movwf	(upperCL@str+1)^0,c
  2270  000D4E  ECAA  F024         	call	_upperCL	;wreg free
  2271                           
  2272                           ;src/print/my_print.c: 110:      break;
  2273  000D52  EF9F  F009         	goto	l5677
  2274  000D56                     l5541:
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;src/print/my_print.c: 112:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2278  000D56  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2279  000D5A  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2280  000D5E  CFDE F1DE          	movff	postinc2,my_vprintf@int_temp
  2281  000D62  CFDD F1DF          	movff	postdec2,my_vprintf@int_temp+1
  2282  000D66                     
  2283                           ; BSR set to: 1
  2284  000D66  0E02               	movlw	2
  2285  000D68  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2286  000D6A  0E00               	movlw	0
  2287  000D6C  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2288  000D6E                     
  2289                           ; BSR set to: 1
  2290                           ;src/print/my_print.c: 113:      itoa(buffer, int_temp, 16);
  2291  000D6E  0E8E               	movlw	low my_vprintf@buffer
  2292  000D70  6E16               	movwf	itoa@str^0,c
  2293  000D72  0E01               	movlw	high my_vprintf@buffer
  2294  000D74  6E17               	movwf	(itoa@str+1)^0,c
  2295  000D76  C1DE  F018         	movff	my_vprintf@int_temp,itoa@num
  2296  000D7A  C1DF  F019         	movff	my_vprintf@int_temp+1,itoa@num+1
  2297  000D7E  0E00               	movlw	0
  2298  000D80  BE19               	btfsc	(itoa@num+1)^0,7,c
  2299  000D82  0EFF               	movlw	-1
  2300  000D84  6E1A               	movwf	(itoa@num+2)^0,c
  2301  000D86  6E1B               	movwf	(itoa@num+3)^0,c
  2302  000D88  0E00               	movlw	0
  2303  000D8A  6E1D               	movwf	(itoa@base_+1)^0,c
  2304  000D8C  0E10               	movlw	16
  2305  000D8E  6E1C               	movwf	itoa@base_^0,c
  2306  000D90  EC31  F01D         	call	_itoa	;wreg free
  2307  000D94                     
  2308                           ;src/print/my_print.c: 114:      precI(buffer, &prec);
  2309  000D94  0E8E               	movlw	low my_vprintf@buffer
  2310  000D96  6E08               	movwf	precI@str^0,c
  2311  000D98  0E01               	movlw	high my_vprintf@buffer
  2312  000D9A  6E09               	movwf	(precI@str+1)^0,c
  2313  000D9C  0EE8               	movlw	low my_vprintf@prec
  2314  000D9E  6E0A               	movwf	precI@precision^0,c
  2315  000DA0  0E01               	movlw	high my_vprintf@prec
  2316  000DA2  6E0B               	movwf	(precI@precision+1)^0,c
  2317  000DA4  ECE6  F01F         	call	_precI	;wreg free
  2318  000DA8                     
  2319                           ;src/print/my_print.c: 115:      addOx(buffer, int_temp,'x');
  2320  000DA8  0E8E               	movlw	low my_vprintf@buffer
  2321  000DAA  6E08               	movwf	addOx@hoS^0,c
  2322  000DAC  0E01               	movlw	high my_vprintf@buffer
  2323  000DAE  6E09               	movwf	(addOx@hoS+1)^0,c
  2324  000DB0  C1DE  F00A         	movff	my_vprintf@int_temp,addOx@num
  2325  000DB4  C1DF  F00B         	movff	my_vprintf@int_temp+1,addOx@num+1
  2326  000DB8  0E78               	movlw	120
  2327  000DBA  6E0C               	movwf	addOx@type^0,c
  2328  000DBC  ECF1  F01D         	call	_addOx	;wreg free
  2329                           
  2330                           ;src/print/my_print.c: 116:      break;
  2331  000DC0  EF9F  F009         	goto	l5677
  2332  000DC4                     l5551:
  2333                           
  2334                           ; BSR set to: 1
  2335                           ;src/print/my_print.c: 118:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2336  000DC4  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2337  000DC8  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2338  000DCC  CFDE F1DE          	movff	postinc2,my_vprintf@int_temp
  2339  000DD0  CFDD F1DF          	movff	postdec2,my_vprintf@int_temp+1
  2340  000DD4                     
  2341                           ; BSR set to: 1
  2342  000DD4  0E02               	movlw	2
  2343  000DD6  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2344  000DD8  0E00               	movlw	0
  2345  000DDA  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2346  000DDC                     
  2347                           ; BSR set to: 1
  2348                           ;src/print/my_print.c: 119:      itoa(buffer, int_temp, 8);
  2349  000DDC  0E8E               	movlw	low my_vprintf@buffer
  2350  000DDE  6E16               	movwf	itoa@str^0,c
  2351  000DE0  0E01               	movlw	high my_vprintf@buffer
  2352  000DE2  6E17               	movwf	(itoa@str+1)^0,c
  2353  000DE4  C1DE  F018         	movff	my_vprintf@int_temp,itoa@num
  2354  000DE8  C1DF  F019         	movff	my_vprintf@int_temp+1,itoa@num+1
  2355  000DEC  0E00               	movlw	0
  2356  000DEE  BE19               	btfsc	(itoa@num+1)^0,7,c
  2357  000DF0  0EFF               	movlw	-1
  2358  000DF2  6E1A               	movwf	(itoa@num+2)^0,c
  2359  000DF4  6E1B               	movwf	(itoa@num+3)^0,c
  2360  000DF6  0E00               	movlw	0
  2361  000DF8  6E1D               	movwf	(itoa@base_+1)^0,c
  2362  000DFA  0E08               	movlw	8
  2363  000DFC  6E1C               	movwf	itoa@base_^0,c
  2364  000DFE  EC31  F01D         	call	_itoa	;wreg free
  2365  000E02                     
  2366                           ;src/print/my_print.c: 120:      precI(buffer, &prec);
  2367  000E02  0E8E               	movlw	low my_vprintf@buffer
  2368  000E04  6E08               	movwf	precI@str^0,c
  2369  000E06  0E01               	movlw	high my_vprintf@buffer
  2370  000E08  6E09               	movwf	(precI@str+1)^0,c
  2371  000E0A  0EE8               	movlw	low my_vprintf@prec
  2372  000E0C  6E0A               	movwf	precI@precision^0,c
  2373  000E0E  0E01               	movlw	high my_vprintf@prec
  2374  000E10  6E0B               	movwf	(precI@precision+1)^0,c
  2375  000E12  ECE6  F01F         	call	_precI	;wreg free
  2376  000E16                     
  2377                           ;src/print/my_print.c: 121:      addOx(buffer, int_temp,'o');
  2378  000E16  0E8E               	movlw	low my_vprintf@buffer
  2379  000E18  6E08               	movwf	addOx@hoS^0,c
  2380  000E1A  0E01               	movlw	high my_vprintf@buffer
  2381  000E1C  6E09               	movwf	(addOx@hoS+1)^0,c
  2382  000E1E  C1DE  F00A         	movff	my_vprintf@int_temp,addOx@num
  2383  000E22  C1DF  F00B         	movff	my_vprintf@int_temp+1,addOx@num+1
  2384  000E26  0E6F               	movlw	111
  2385  000E28  6E0C               	movwf	addOx@type^0,c
  2386  000E2A  ECF1  F01D         	call	_addOx	;wreg free
  2387                           
  2388                           ;src/print/my_print.c: 122:      break;
  2389  000E2E  EF9F  F009         	goto	l5677
  2390  000E32                     l5561:
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;src/print/my_print.c: 124:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2394  000E32  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2395  000E36  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2396  000E3A  CFDE F1E2          	movff	postinc2,my_vprintf@double_temp
  2397  000E3E  CFDE F1E3          	movff	postinc2,my_vprintf@double_temp+1
  2398  000E42  CFDE F1E4          	movff	postinc2,my_vprintf@double_temp+2
  2399  000E46  CFDE F1E5          	movff	postinc2,my_vprintf@double_temp+3
  2400  000E4A                     
  2401                           ; BSR set to: 1
  2402  000E4A  0E04               	movlw	4
  2403  000E4C  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2404  000E4E  0E00               	movlw	0
  2405  000E50  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2406  000E52                     
  2407                           ; BSR set to: 1
  2408                           ;src/print/my_print.c: 125:      ftoa(buffer, double_temp);
  2409  000E52  0E8E               	movlw	low my_vprintf@buffer
  2410  000E54  6E27               	movwf	ftoa@buffer^0,c
  2411  000E56  0E01               	movlw	high my_vprintf@buffer
  2412  000E58  6E28               	movwf	(ftoa@buffer+1)^0,c
  2413  000E5A  C1E2  F029         	movff	my_vprintf@double_temp,ftoa@value
  2414  000E5E  C1E3  F02A         	movff	my_vprintf@double_temp+1,ftoa@value+1
  2415  000E62  C1E4  F02B         	movff	my_vprintf@double_temp+2,ftoa@value+2
  2416  000E66  C1E5  F02C         	movff	my_vprintf@double_temp+3,ftoa@value+3
  2417  000E6A  ECD3  F012         	call	_ftoa	;wreg free
  2418  000E6E                     
  2419                           ;src/print/my_print.c: 126:      precF(buffer, &prec);
  2420  000E6E  0E8E               	movlw	low my_vprintf@buffer
  2421  000E70  6E1F               	movwf	precF@str^0,c
  2422  000E72  0E01               	movlw	high my_vprintf@buffer
  2423  000E74  6E20               	movwf	(precF@str+1)^0,c
  2424  000E76  0EE8               	movlw	low my_vprintf@prec
  2425  000E78  6E21               	movwf	precF@precision^0,c
  2426  000E7A  0E01               	movlw	high my_vprintf@prec
  2427  000E7C  6E22               	movwf	(precF@precision+1)^0,c
  2428  000E7E  EC94  F01A         	call	_precF	;wreg free
  2429  000E82                     l5569:
  2430                           
  2431                           ;src/print/my_print.c: 127:      addSig(buffer, double_temp);
  2432  000E82  0E8E               	movlw	low my_vprintf@buffer
  2433  000E84  6E12               	movwf	addSig@numS^0,c
  2434  000E86  0E01               	movlw	high my_vprintf@buffer
  2435  000E88  6E13               	movwf	(addSig@numS+1)^0,c
  2436  000E8A  C1E2  F014         	movff	my_vprintf@double_temp,addSig@num
  2437  000E8E  C1E3  F015         	movff	my_vprintf@double_temp+1,addSig@num+1
  2438  000E92  C1E4  F016         	movff	my_vprintf@double_temp+2,addSig@num+2
  2439  000E96  C1E5  F017         	movff	my_vprintf@double_temp+3,addSig@num+3
  2440  000E9A  ECAD  F01E         	call	_addSig	;wreg free
  2441                           
  2442                           ;src/print/my_print.c: 128:      break;
  2443  000E9E  EF9F  F009         	goto	l5677
  2444  000EA2                     l5571:
  2445                           
  2446                           ; BSR set to: 1
  2447                           ;src/print/my_print.c: 130:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2448  000EA2  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2449  000EA6  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2450  000EAA  CFDE F1E2          	movff	postinc2,my_vprintf@double_temp
  2451  000EAE  CFDE F1E3          	movff	postinc2,my_vprintf@double_temp+1
  2452  000EB2  CFDE F1E4          	movff	postinc2,my_vprintf@double_temp+2
  2453  000EB6  CFDE F1E5          	movff	postinc2,my_vprintf@double_temp+3
  2454  000EBA                     
  2455                           ; BSR set to: 1
  2456  000EBA  0E04               	movlw	4
  2457  000EBC  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2458  000EBE  0E00               	movlw	0
  2459  000EC0  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2460  000EC2                     
  2461                           ; BSR set to: 1
  2462                           ;src/print/my_print.c: 131:      ftoa_sci(buffer, double_temp);
  2463  000EC2  0E8E               	movlw	low my_vprintf@buffer
  2464  000EC4  0100               	movlb	0	; () banked
  2465  000EC6  6FF8               	movwf	ftoa_sci@buffer& (0+255),b
  2466  000EC8  0E01               	movlw	high my_vprintf@buffer
  2467  000ECA  6FF9               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2468  000ECC  C1E2  F0FA         	movff	my_vprintf@double_temp,ftoa_sci@value
  2469  000ED0  C1E3  F0FB         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2470  000ED4  C1E4  F0FC         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2471  000ED8  C1E5  F0FD         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2472  000EDC  ECE7  F015         	call	_ftoa_sci	;wreg free
  2473  000EE0                     
  2474                           ;src/print/my_print.c: 132:      precE(buffer, &prec);
  2475  000EE0  0E8E               	movlw	low my_vprintf@buffer
  2476  000EE2  6E1F               	movwf	precE@str^0,c
  2477  000EE4  0E01               	movlw	high my_vprintf@buffer
  2478  000EE6  6E20               	movwf	(precE@str+1)^0,c
  2479  000EE8  0EE8               	movlw	low my_vprintf@prec
  2480  000EEA  6E21               	movwf	precE@precision^0,c
  2481  000EEC  0E01               	movlw	high my_vprintf@prec
  2482  000EEE  6E22               	movwf	(precE@precision+1)^0,c
  2483  000EF0  EC8F  F019         	call	_precE	;wreg free
  2484  000EF4  EF41  F007         	goto	l5569
  2485  000EF8                     l5581:
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;src/print/my_print.c: 136:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2489  000EF8  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2490  000EFC  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2491  000F00  CFDE F1E2          	movff	postinc2,my_vprintf@double_temp
  2492  000F04  CFDE F1E3          	movff	postinc2,my_vprintf@double_temp+1
  2493  000F08  CFDE F1E4          	movff	postinc2,my_vprintf@double_temp+2
  2494  000F0C  CFDE F1E5          	movff	postinc2,my_vprintf@double_temp+3
  2495  000F10                     
  2496                           ; BSR set to: 1
  2497  000F10  0E04               	movlw	4
  2498  000F12  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2499  000F14  0E00               	movlw	0
  2500  000F16  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2501  000F18                     
  2502                           ; BSR set to: 1
  2503                           ;src/print/my_print.c: 137:      ftoa_sci(buffer, double_temp);
  2504  000F18  0E8E               	movlw	low my_vprintf@buffer
  2505  000F1A  0100               	movlb	0	; () banked
  2506  000F1C  6FF8               	movwf	ftoa_sci@buffer& (0+255),b
  2507  000F1E  0E01               	movlw	high my_vprintf@buffer
  2508  000F20  6FF9               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2509  000F22  C1E2  F0FA         	movff	my_vprintf@double_temp,ftoa_sci@value
  2510  000F26  C1E3  F0FB         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2511  000F2A  C1E4  F0FC         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2512  000F2E  C1E5  F0FD         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2513  000F32  ECE7  F015         	call	_ftoa_sci	;wreg free
  2514  000F36                     
  2515                           ;src/print/my_print.c: 138:      precE(buffer, &prec);
  2516  000F36  0E8E               	movlw	low my_vprintf@buffer
  2517  000F38  6E1F               	movwf	precE@str^0,c
  2518  000F3A  0E01               	movlw	high my_vprintf@buffer
  2519  000F3C  6E20               	movwf	(precE@str+1)^0,c
  2520  000F3E  0EE8               	movlw	low my_vprintf@prec
  2521  000F40  6E21               	movwf	precE@precision^0,c
  2522  000F42  0E01               	movlw	high my_vprintf@prec
  2523  000F44  6E22               	movwf	(precE@precision+1)^0,c
  2524  000F46  EC8F  F019         	call	_precE	;wreg free
  2525  000F4A                     l5589:
  2526                           
  2527                           ;src/print/my_print.c: 139:      addSig(buffer, double_temp);
  2528  000F4A  0E8E               	movlw	low my_vprintf@buffer
  2529  000F4C  6E12               	movwf	addSig@numS^0,c
  2530  000F4E  0E01               	movlw	high my_vprintf@buffer
  2531  000F50  6E13               	movwf	(addSig@numS+1)^0,c
  2532  000F52  C1E2  F014         	movff	my_vprintf@double_temp,addSig@num
  2533  000F56  C1E3  F015         	movff	my_vprintf@double_temp+1,addSig@num+1
  2534  000F5A  C1E4  F016         	movff	my_vprintf@double_temp+2,addSig@num+2
  2535  000F5E  C1E5  F017         	movff	my_vprintf@double_temp+3,addSig@num+3
  2536  000F62  ECAD  F01E         	call	_addSig	;wreg free
  2537  000F66  EFA3  F006         	goto	l5539
  2538  000F6A                     l5593:
  2539                           
  2540                           ; BSR set to: 1
  2541                           ;src/print/my_print.c: 143:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2542  000F6A  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2543  000F6E  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2544  000F72  CFDE F1E2          	movff	postinc2,my_vprintf@double_temp
  2545  000F76  CFDE F1E3          	movff	postinc2,my_vprintf@double_temp+1
  2546  000F7A  CFDE F1E4          	movff	postinc2,my_vprintf@double_temp+2
  2547  000F7E  CFDE F1E5          	movff	postinc2,my_vprintf@double_temp+3
  2548  000F82                     
  2549                           ; BSR set to: 1
  2550  000F82  0E04               	movlw	4
  2551  000F84  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2552  000F86  0E00               	movlw	0
  2553  000F88  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2554  000F8A                     
  2555                           ; BSR set to: 1
  2556                           ;src/print/my_print.c: 144:      expA = ftoa_sci(buffer, double_temp);
  2557  000F8A  0E8E               	movlw	low my_vprintf@buffer
  2558  000F8C  0100               	movlb	0	; () banked
  2559  000F8E  6FF8               	movwf	ftoa_sci@buffer& (0+255),b
  2560  000F90  0E01               	movlw	high my_vprintf@buffer
  2561  000F92  6FF9               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2562  000F94  C1E2  F0FA         	movff	my_vprintf@double_temp,ftoa_sci@value
  2563  000F98  C1E3  F0FB         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2564  000F9C  C1E4  F0FC         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2565  000FA0  C1E5  F0FD         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2566  000FA4  ECE7  F015         	call	_ftoa_sci	;wreg free
  2567  000FA8  C0F8  F1D6         	movff	?_ftoa_sci,my_vprintf@expA
  2568  000FAC  C0F9  F1D7         	movff	?_ftoa_sci+1,my_vprintf@expA+1
  2569  000FB0                     
  2570                           ;src/print/my_print.c: 145:      ftoa(buffer, double_temp);
  2571  000FB0  0E8E               	movlw	low my_vprintf@buffer
  2572  000FB2  6E27               	movwf	ftoa@buffer^0,c
  2573  000FB4  0E01               	movlw	high my_vprintf@buffer
  2574  000FB6  6E28               	movwf	(ftoa@buffer+1)^0,c
  2575  000FB8  C1E2  F029         	movff	my_vprintf@double_temp,ftoa@value
  2576  000FBC  C1E3  F02A         	movff	my_vprintf@double_temp+1,ftoa@value+1
  2577  000FC0  C1E4  F02B         	movff	my_vprintf@double_temp+2,ftoa@value+2
  2578  000FC4  C1E5  F02C         	movff	my_vprintf@double_temp+3,ftoa@value+3
  2579  000FC8  ECD3  F012         	call	_ftoa	;wreg free
  2580  000FCC                     
  2581                           ;src/print/my_print.c: 146:      j=0;
  2582  000FCC  0E00               	movlw	0
  2583  000FCE  0101               	movlb	1	; () banked
  2584  000FD0  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  2585  000FD2  0E00               	movlw	0
  2586  000FD4  6FDC               	movwf	my_vprintf@j& (0+255),b
  2587  000FD6                     
  2588                           ; BSR set to: 1
  2589                           ;src/print/my_print.c: 147:      for (i=0;i<strlen(buffer);i++)
  2590  000FD6  0E00               	movlw	0
  2591  000FD8  6FE1               	movwf	(my_vprintf@i+1)& (0+255),b
  2592  000FDA  0E00               	movlw	0
  2593  000FDC  6FE0               	movwf	my_vprintf@i& (0+255),b
  2594  000FDE  EF22  F008         	goto	l5615
  2595  000FE2                     l5605:
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;src/print/my_print.c: 148:      {;src/print/my_print.c: 149:       if (buffer[i]=='.')
  2599  000FE2  0E8E               	movlw	low my_vprintf@buffer
  2600  000FE4  25E0               	addwf	my_vprintf@i& (0+255),w,b
  2601  000FE6  6ED9               	movwf	fsr2l,c
  2602  000FE8  0E01               	movlw	high my_vprintf@buffer
  2603  000FEA  21E1               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2604  000FEC  6EDA               	movwf	fsr2h,c
  2605  000FEE  0E2E               	movlw	46
  2606  000FF0  18DE               	xorwf	postinc2,w,c
  2607  000FF2  A4D8               	btfss	status,2,c
  2608  000FF4  EFFE  F007         	goto	u6341
  2609  000FF8  EF00  F008         	goto	u6340
  2610  000FFC                     u6341:
  2611  000FFC  EF02  F008         	goto	l5609
  2612  001000                     u6340:
  2613  001000  EF34  F008         	goto	l5617
  2614  001004                     l5609:
  2615                           
  2616                           ; BSR set to: 1
  2617                           ;src/print/my_print.c: 152:       if (buffer[i]>=48 && buffer[i]<=57)
  2618  001004  0E8E               	movlw	low my_vprintf@buffer
  2619  001006  25E0               	addwf	my_vprintf@i& (0+255),w,b
  2620  001008  6ED9               	movwf	fsr2l,c
  2621  00100A  0E01               	movlw	high my_vprintf@buffer
  2622  00100C  21E1               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2623  00100E  6EDA               	movwf	fsr2h,c
  2624  001010  0E2F               	movlw	47
  2625  001012  64DF               	cpfsgt	indf2,c
  2626  001014  EF0E  F008         	goto	u6351
  2627  001018  EF10  F008         	goto	u6350
  2628  00101C                     u6351:
  2629  00101C  EF20  F008         	goto	l661
  2630  001020                     u6350:
  2631  001020                     
  2632                           ; BSR set to: 1
  2633  001020  0E8E               	movlw	low my_vprintf@buffer
  2634  001022  25E0               	addwf	my_vprintf@i& (0+255),w,b
  2635  001024  6ED9               	movwf	fsr2l,c
  2636  001026  0E01               	movlw	high my_vprintf@buffer
  2637  001028  21E1               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2638  00102A  6EDA               	movwf	fsr2h,c
  2639  00102C  0E3A               	movlw	58
  2640  00102E  60DF               	cpfslt	indf2,c
  2641  001030  EF1C  F008         	goto	u6361
  2642  001034  EF1E  F008         	goto	u6360
  2643  001038                     u6361:
  2644  001038  EF20  F008         	goto	l661
  2645  00103C                     u6360:
  2646  00103C                     
  2647                           ; BSR set to: 1
  2648                           ;src/print/my_print.c: 153:        j++;
  2649  00103C  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  2650  00103E  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  2651  001040                     l661:
  2652                           
  2653                           ; BSR set to: 1
  2654                           ;src/print/my_print.c: 154:      }
  2655  001040  4BE0               	infsnz	my_vprintf@i& (0+255),f,b
  2656  001042  2BE1               	incf	(my_vprintf@i+1)& (0+255),f,b
  2657  001044                     l5615:
  2658                           
  2659                           ; BSR set to: 1
  2660  001044  0E8E               	movlw	low my_vprintf@buffer
  2661  001046  6E04               	movwf	strlen@s^0,c
  2662  001048  0E01               	movlw	high my_vprintf@buffer
  2663  00104A  6E05               	movwf	(strlen@s+1)^0,c
  2664  00104C  ECCF  F027         	call	_strlen	;wreg free
  2665  001050  5004               	movf	?_strlen^0,w,c
  2666  001052  0101               	movlb	1	; () banked
  2667  001054  5DE0               	subwf	my_vprintf@i& (0+255),w,b
  2668  001056  5005               	movf	(?_strlen+1)^0,w,c
  2669  001058  59E1               	subwfb	(my_vprintf@i+1)& (0+255),w,b
  2670  00105A  A0D8               	btfss	status,0,c
  2671  00105C  EF32  F008         	goto	u6371
  2672  001060  EF34  F008         	goto	u6370
  2673  001064                     u6371:
  2674  001064  EFF1  F007         	goto	l5605
  2675  001068                     u6370:
  2676  001068                     l5617:
  2677                           
  2678                           ; BSR set to: 1
  2679                           ;src/print/my_print.c: 155:      if (prec == -1)
  2680  001068  29E8               	incf	my_vprintf@prec& (0+255),w,b
  2681  00106A  E106               	bnz	u6381
  2682  00106C  29E9               	incf	(my_vprintf@prec+1)& (0+255),w,b
  2683  00106E  A4D8               	btfss	status,2,c
  2684  001070  EF3C  F008         	goto	u6381
  2685  001074  EF3E  F008         	goto	u6380
  2686  001078                     u6381:
  2687  001078  EF42  F008         	goto	l5621
  2688  00107C                     u6380:
  2689  00107C                     
  2690                           ; BSR set to: 1
  2691                           ;src/print/my_print.c: 156:       prec = 6;
  2692  00107C  0E00               	movlw	0
  2693  00107E  6FE9               	movwf	(my_vprintf@prec+1)& (0+255),b
  2694  001080  0E06               	movlw	6
  2695  001082  6FE8               	movwf	my_vprintf@prec& (0+255),b
  2696  001084                     l5621:
  2697                           
  2698                           ; BSR set to: 1
  2699                           ;src/print/my_print.c: 157:      if (expA <= -4 || j > prec)
  2700  001084  AFD7               	btfss	(my_vprintf@expA+1)& (0+255),7,b
  2701  001086  EF50  F008         	goto	u6390
  2702  00108A  0EFD               	movlw	253
  2703  00108C  5DD6               	subwf	my_vprintf@expA& (0+255),w,b
  2704  00108E  0EFF               	movlw	255
  2705  001090  59D7               	subwfb	(my_vprintf@expA+1)& (0+255),w,b
  2706  001092  A0D8               	btfss	status,0,c
  2707  001094  EF4E  F008         	goto	u6391
  2708  001098  EF50  F008         	goto	u6390
  2709  00109C                     u6391:
  2710  00109C  EF5F  F008         	goto	l5625
  2711  0010A0                     u6390:
  2712  0010A0                     
  2713                           ; BSR set to: 1
  2714  0010A0  51DC               	movf	my_vprintf@j& (0+255),w,b
  2715  0010A2  5DE8               	subwf	my_vprintf@prec& (0+255),w,b
  2716  0010A4  51E9               	movf	(my_vprintf@prec+1)& (0+255),w,b
  2717  0010A6  0A80               	xorlw	128
  2718  0010A8  6E38               	movwf	??_my_vprintf^0,c
  2719  0010AA  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  2720  0010AC  0A80               	xorlw	128
  2721  0010AE  5838               	subwfb	??_my_vprintf^0,w,c
  2722  0010B0  B0D8               	btfsc	status,0,c
  2723  0010B2  EF5D  F008         	goto	u6401
  2724  0010B6  EF5F  F008         	goto	u6400
  2725  0010BA                     u6401:
  2726  0010BA  EF6E  F008         	goto	l5627
  2727  0010BE                     u6400:
  2728  0010BE                     l5625:
  2729                           
  2730                           ; BSR set to: 1
  2731                           ;src/print/my_print.c: 158:       ftoa_sci(buffer, double_temp);
  2732  0010BE  0E8E               	movlw	low my_vprintf@buffer
  2733  0010C0  0100               	movlb	0	; () banked
  2734  0010C2  6FF8               	movwf	ftoa_sci@buffer& (0+255),b
  2735  0010C4  0E01               	movlw	high my_vprintf@buffer
  2736  0010C6  6FF9               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2737  0010C8  C1E2  F0FA         	movff	my_vprintf@double_temp,ftoa_sci@value
  2738  0010CC  C1E3  F0FB         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2739  0010D0  C1E4  F0FC         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2740  0010D4  C1E5  F0FD         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2741  0010D8  ECE7  F015         	call	_ftoa_sci	;wreg free
  2742  0010DC                     l5627:
  2743                           
  2744                           ;src/print/my_print.c: 159:      precG(buffer, &prec);
  2745  0010DC  0E8E               	movlw	low my_vprintf@buffer
  2746  0010DE  6E1F               	movwf	precG@str^0,c
  2747  0010E0  0E01               	movlw	high my_vprintf@buffer
  2748  0010E2  6E20               	movwf	(precG@str+1)^0,c
  2749  0010E4  0EE8               	movlw	low my_vprintf@prec
  2750  0010E6  6E21               	movwf	precG@precision^0,c
  2751  0010E8  0E01               	movlw	high my_vprintf@prec
  2752  0010EA  6E22               	movwf	(precG@precision+1)^0,c
  2753  0010EC  ECE5  F009         	call	_precG	;wreg free
  2754  0010F0  EF41  F007         	goto	l5569
  2755  0010F4                     l5631:
  2756                           
  2757                           ; BSR set to: 1
  2758                           ;src/print/my_print.c: 163:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2759  0010F4  C1E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2760  0010F8  C1E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2761  0010FC  CFDE F1E2          	movff	postinc2,my_vprintf@double_temp
  2762  001100  CFDE F1E3          	movff	postinc2,my_vprintf@double_temp+1
  2763  001104  CFDE F1E4          	movff	postinc2,my_vprintf@double_temp+2
  2764  001108  CFDE F1E5          	movff	postinc2,my_vprintf@double_temp+3
  2765  00110C                     
  2766                           ; BSR set to: 1
  2767  00110C  0E04               	movlw	4
  2768  00110E  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2769  001110  0E00               	movlw	0
  2770  001112  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2771  001114                     
  2772                           ; BSR set to: 1
  2773                           ;src/print/my_print.c: 164:      expA = ftoa_sci(buffer, double_temp);
  2774  001114  0E8E               	movlw	low my_vprintf@buffer
  2775  001116  0100               	movlb	0	; () banked
  2776  001118  6FF8               	movwf	ftoa_sci@buffer& (0+255),b
  2777  00111A  0E01               	movlw	high my_vprintf@buffer
  2778  00111C  6FF9               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2779  00111E  C1E2  F0FA         	movff	my_vprintf@double_temp,ftoa_sci@value
  2780  001122  C1E3  F0FB         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2781  001126  C1E4  F0FC         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2782  00112A  C1E5  F0FD         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2783  00112E  ECE7  F015         	call	_ftoa_sci	;wreg free
  2784  001132  C0F8  F1D6         	movff	?_ftoa_sci,my_vprintf@expA
  2785  001136  C0F9  F1D7         	movff	?_ftoa_sci+1,my_vprintf@expA+1
  2786  00113A                     
  2787                           ;src/print/my_print.c: 165:      ftoa(buffer, double_temp);
  2788  00113A  0E8E               	movlw	low my_vprintf@buffer
  2789  00113C  6E27               	movwf	ftoa@buffer^0,c
  2790  00113E  0E01               	movlw	high my_vprintf@buffer
  2791  001140  6E28               	movwf	(ftoa@buffer+1)^0,c
  2792  001142  C1E2  F029         	movff	my_vprintf@double_temp,ftoa@value
  2793  001146  C1E3  F02A         	movff	my_vprintf@double_temp+1,ftoa@value+1
  2794  00114A  C1E4  F02B         	movff	my_vprintf@double_temp+2,ftoa@value+2
  2795  00114E  C1E5  F02C         	movff	my_vprintf@double_temp+3,ftoa@value+3
  2796  001152  ECD3  F012         	call	_ftoa	;wreg free
  2797  001156                     
  2798                           ;src/print/my_print.c: 166:      j=0;
  2799  001156  0E00               	movlw	0
  2800  001158  0101               	movlb	1	; () banked
  2801  00115A  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  2802  00115C  0E00               	movlw	0
  2803  00115E  6FDC               	movwf	my_vprintf@j& (0+255),b
  2804  001160                     
  2805                           ; BSR set to: 1
  2806                           ;src/print/my_print.c: 167:      for (i=0;i<strlen(buffer);i++)
  2807  001160  0E00               	movlw	0
  2808  001162  6FE1               	movwf	(my_vprintf@i+1)& (0+255),b
  2809  001164  0E00               	movlw	0
  2810  001166  6FE0               	movwf	my_vprintf@i& (0+255),b
  2811  001168  EFE7  F008         	goto	l5653
  2812  00116C                     l5643:
  2813                           
  2814                           ; BSR set to: 1
  2815                           ;src/print/my_print.c: 168:      {;src/print/my_print.c: 169:       if (buffer[i]=='.')
  2816  00116C  0E8E               	movlw	low my_vprintf@buffer
  2817  00116E  25E0               	addwf	my_vprintf@i& (0+255),w,b
  2818  001170  6ED9               	movwf	fsr2l,c
  2819  001172  0E01               	movlw	high my_vprintf@buffer
  2820  001174  21E1               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2821  001176  6EDA               	movwf	fsr2h,c
  2822  001178  0E2E               	movlw	46
  2823  00117A  18DE               	xorwf	postinc2,w,c
  2824  00117C  A4D8               	btfss	status,2,c
  2825  00117E  EFC3  F008         	goto	u6411
  2826  001182  EFC5  F008         	goto	u6410
  2827  001186                     u6411:
  2828  001186  EFC7  F008         	goto	l5647
  2829  00118A                     u6410:
  2830  00118A  EFF9  F008         	goto	l5655
  2831  00118E                     l5647:
  2832                           
  2833                           ; BSR set to: 1
  2834                           ;src/print/my_print.c: 172:       if (buffer[i]>=48 && buffer[i]<=57)
  2835  00118E  0E8E               	movlw	low my_vprintf@buffer
  2836  001190  25E0               	addwf	my_vprintf@i& (0+255),w,b
  2837  001192  6ED9               	movwf	fsr2l,c
  2838  001194  0E01               	movlw	high my_vprintf@buffer
  2839  001196  21E1               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2840  001198  6EDA               	movwf	fsr2h,c
  2841  00119A  0E2F               	movlw	47
  2842  00119C  64DF               	cpfsgt	indf2,c
  2843  00119E  EFD3  F008         	goto	u6421
  2844  0011A2  EFD5  F008         	goto	u6420
  2845  0011A6                     u6421:
  2846  0011A6  EFE5  F008         	goto	l671
  2847  0011AA                     u6420:
  2848  0011AA                     
  2849                           ; BSR set to: 1
  2850  0011AA  0E8E               	movlw	low my_vprintf@buffer
  2851  0011AC  25E0               	addwf	my_vprintf@i& (0+255),w,b
  2852  0011AE  6ED9               	movwf	fsr2l,c
  2853  0011B0  0E01               	movlw	high my_vprintf@buffer
  2854  0011B2  21E1               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2855  0011B4  6EDA               	movwf	fsr2h,c
  2856  0011B6  0E3A               	movlw	58
  2857  0011B8  60DF               	cpfslt	indf2,c
  2858  0011BA  EFE1  F008         	goto	u6431
  2859  0011BE  EFE3  F008         	goto	u6430
  2860  0011C2                     u6431:
  2861  0011C2  EFE5  F008         	goto	l671
  2862  0011C6                     u6430:
  2863  0011C6                     
  2864                           ; BSR set to: 1
  2865                           ;src/print/my_print.c: 173:        j++;
  2866  0011C6  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  2867  0011C8  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  2868  0011CA                     l671:
  2869                           
  2870                           ; BSR set to: 1
  2871                           ;src/print/my_print.c: 174:      }
  2872  0011CA  4BE0               	infsnz	my_vprintf@i& (0+255),f,b
  2873  0011CC  2BE1               	incf	(my_vprintf@i+1)& (0+255),f,b
  2874  0011CE                     l5653:
  2875                           
  2876                           ; BSR set to: 1
  2877  0011CE  0E8E               	movlw	low my_vprintf@buffer
  2878  0011D0  6E04               	movwf	strlen@s^0,c
  2879  0011D2  0E01               	movlw	high my_vprintf@buffer
  2880  0011D4  6E05               	movwf	(strlen@s+1)^0,c
  2881  0011D6  ECCF  F027         	call	_strlen	;wreg free
  2882  0011DA  5004               	movf	?_strlen^0,w,c
  2883  0011DC  0101               	movlb	1	; () banked
  2884  0011DE  5DE0               	subwf	my_vprintf@i& (0+255),w,b
  2885  0011E0  5005               	movf	(?_strlen+1)^0,w,c
  2886  0011E2  59E1               	subwfb	(my_vprintf@i+1)& (0+255),w,b
  2887  0011E4  A0D8               	btfss	status,0,c
  2888  0011E6  EFF7  F008         	goto	u6441
  2889  0011EA  EFF9  F008         	goto	u6440
  2890  0011EE                     u6441:
  2891  0011EE  EFB6  F008         	goto	l5643
  2892  0011F2                     u6440:
  2893  0011F2                     l5655:
  2894                           
  2895                           ; BSR set to: 1
  2896                           ;src/print/my_print.c: 175:      if (prec == -1)
  2897  0011F2  29E8               	incf	my_vprintf@prec& (0+255),w,b
  2898  0011F4  E106               	bnz	u6451
  2899  0011F6  29E9               	incf	(my_vprintf@prec+1)& (0+255),w,b
  2900  0011F8  A4D8               	btfss	status,2,c
  2901  0011FA  EF01  F009         	goto	u6451
  2902  0011FE  EF03  F009         	goto	u6450
  2903  001202                     u6451:
  2904  001202  EF07  F009         	goto	l5659
  2905  001206                     u6450:
  2906  001206                     
  2907                           ; BSR set to: 1
  2908                           ;src/print/my_print.c: 176:       prec = 6;
  2909  001206  0E00               	movlw	0
  2910  001208  6FE9               	movwf	(my_vprintf@prec+1)& (0+255),b
  2911  00120A  0E06               	movlw	6
  2912  00120C  6FE8               	movwf	my_vprintf@prec& (0+255),b
  2913  00120E                     l5659:
  2914                           
  2915                           ; BSR set to: 1
  2916                           ;src/print/my_print.c: 177:      if (expA <= -4 || j > prec)
  2917  00120E  AFD7               	btfss	(my_vprintf@expA+1)& (0+255),7,b
  2918  001210  EF15  F009         	goto	u6460
  2919  001214  0EFD               	movlw	253
  2920  001216  5DD6               	subwf	my_vprintf@expA& (0+255),w,b
  2921  001218  0EFF               	movlw	255
  2922  00121A  59D7               	subwfb	(my_vprintf@expA+1)& (0+255),w,b
  2923  00121C  A0D8               	btfss	status,0,c
  2924  00121E  EF13  F009         	goto	u6461
  2925  001222  EF15  F009         	goto	u6460
  2926  001226                     u6461:
  2927  001226  EF24  F009         	goto	l5663
  2928  00122A                     u6460:
  2929  00122A                     
  2930                           ; BSR set to: 1
  2931  00122A  51DC               	movf	my_vprintf@j& (0+255),w,b
  2932  00122C  5DE8               	subwf	my_vprintf@prec& (0+255),w,b
  2933  00122E  51E9               	movf	(my_vprintf@prec+1)& (0+255),w,b
  2934  001230  0A80               	xorlw	128
  2935  001232  6E38               	movwf	??_my_vprintf^0,c
  2936  001234  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  2937  001236  0A80               	xorlw	128
  2938  001238  5838               	subwfb	??_my_vprintf^0,w,c
  2939  00123A  B0D8               	btfsc	status,0,c
  2940  00123C  EF22  F009         	goto	u6471
  2941  001240  EF24  F009         	goto	u6470
  2942  001244                     u6471:
  2943  001244  EF33  F009         	goto	l5665
  2944  001248                     u6470:
  2945  001248                     l5663:
  2946                           
  2947                           ; BSR set to: 1
  2948                           ;src/print/my_print.c: 178:       ftoa_sci(buffer, double_temp);
  2949  001248  0E8E               	movlw	low my_vprintf@buffer
  2950  00124A  0100               	movlb	0	; () banked
  2951  00124C  6FF8               	movwf	ftoa_sci@buffer& (0+255),b
  2952  00124E  0E01               	movlw	high my_vprintf@buffer
  2953  001250  6FF9               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2954  001252  C1E2  F0FA         	movff	my_vprintf@double_temp,ftoa_sci@value
  2955  001256  C1E3  F0FB         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2956  00125A  C1E4  F0FC         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2957  00125E  C1E5  F0FD         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2958  001262  ECE7  F015         	call	_ftoa_sci	;wreg free
  2959  001266                     l5665:
  2960                           
  2961                           ;src/print/my_print.c: 179:      precG(buffer, &prec);
  2962  001266  0E8E               	movlw	low my_vprintf@buffer
  2963  001268  6E1F               	movwf	precG@str^0,c
  2964  00126A  0E01               	movlw	high my_vprintf@buffer
  2965  00126C  6E20               	movwf	(precG@str+1)^0,c
  2966  00126E  0EE8               	movlw	low my_vprintf@prec
  2967  001270  6E21               	movwf	precG@precision^0,c
  2968  001272  0E01               	movlw	high my_vprintf@prec
  2969  001274  6E22               	movwf	(precG@precision+1)^0,c
  2970  001276  ECE5  F009         	call	_precG	;wreg free
  2971  00127A  EFA5  F007         	goto	l5589
  2972  00127E                     l5671:
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;src/print/my_print.c: 184:      strcpy(buffer," ");
  2976  00127E  0E8E               	movlw	low my_vprintf@buffer
  2977  001280  6E08               	movwf	strcpy@dest^0,c
  2978  001282  0E01               	movlw	high my_vprintf@buffer
  2979  001284  6E09               	movwf	(strcpy@dest+1)^0,c
  2980  001286  0E5D               	movlw	low STR_5
  2981  001288  6E0A               	movwf	strcpy@src^0,c
  2982  00128A  0E08               	movlw	high STR_5
  2983  00128C  6E0B               	movwf	(strcpy@src+1)^0,c
  2984  00128E  EC11  F026         	call	_strcpy	;wreg free
  2985                           
  2986                           ;src/print/my_print.c: 185:      break;
  2987  001292  EF9F  F009         	goto	l5677
  2988  001296                     l5673:
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;src/print/my_print.c: 187:      error--;
  2992  001296  07D4               	decf	my_vprintf@error& (0+255),f,b
  2993  001298  A0D8               	btfss	status,0,c
  2994  00129A  07D5               	decf	(my_vprintf@error+1)& (0+255),f,b
  2995                           
  2996                           ;src/print/my_print.c: 188:    }
  2997  00129C  EF9F  F009         	goto	l5677
  2998  0012A0                     l5675:
  2999                           
  3000                           ; BSR set to: 1
  3001  0012A0  0E84               	movlw	low my_vprintf@format
  3002  0012A2  25D8               	addwf	my_vprintf@x& (0+255),w,b
  3003  0012A4  6ED9               	movwf	fsr2l,c
  3004  0012A6  0E01               	movlw	high my_vprintf@format
  3005  0012A8  21D9               	addwfc	(my_vprintf@x+1)& (0+255),w,b
  3006  0012AA  6EDA               	movwf	fsr2h,c
  3007  0012AC  50DF               	movf	indf2,w,c
  3008  0012AE  6E38               	movwf	??_my_vprintf^0,c
  3009  0012B0  6A39               	clrf	(??_my_vprintf+1)^0,c
  3010                           
  3011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3012                           ; Switch size 1, requested type "simple"
  3013                           ; Number of cases is 1, Range of values is 0 to 0
  3014                           ; switch strategies available:
  3015                           ; Name         Instructions Cycles
  3016                           ; simple_byte            4     3 (average)
  3017                           ;	Chosen strategy is simple_byte
  3018  0012B2  5039               	movf	(??_my_vprintf+1)^0,w,c
  3019  0012B4  0A00               	xorlw	0	; case 0
  3020  0012B6  B4D8               	btfsc	status,2,c
  3021  0012B8  EF60  F009         	goto	l5939
  3022  0012BC  EF4B  F009         	goto	l5673
  3023  0012C0                     l5939:
  3024                           
  3025                           ; BSR set to: 1
  3026                           ; Switch size 1, requested type "simple"
  3027                           ; Number of cases is 15, Range of values is 37 to 120
  3028                           ; switch strategies available:
  3029                           ; Name         Instructions Cycles
  3030                           ; simple_byte           46    24 (average)
  3031                           ;	Chosen strategy is simple_byte
  3032  0012C0  5038               	movf	??_my_vprintf^0,w,c
  3033  0012C2  0A25               	xorlw	37	; case 37
  3034  0012C4  B4D8               	btfsc	status,2,c
  3035  0012C6  EF78  F005         	goto	l5485
  3036  0012CA  0A60               	xorlw	96	; case 69
  3037  0012CC  B4D8               	btfsc	status,2,c
  3038  0012CE  EF7C  F007         	goto	l5581
  3039  0012D2  0A02               	xorlw	2	; case 71
  3040  0012D4  B4D8               	btfsc	status,2,c
  3041  0012D6  EF7A  F008         	goto	l5631
  3042  0012DA  0A1F               	xorlw	31	; case 88
  3043  0012DC  B4D8               	btfsc	status,2,c
  3044  0012DE  EF6E  F006         	goto	l5529
  3045  0012E2  0A3B               	xorlw	59	; case 99
  3046  0012E4  B4D8               	btfsc	status,2,c
  3047  0012E6  EF84  F005         	goto	l5487
  3048  0012EA  0A07               	xorlw	7	; case 100
  3049  0012EC  B4D8               	btfsc	status,2,c
  3050  0012EE  EFBC  F005         	goto	l5501
  3051  0012F2  0A01               	xorlw	1	; case 101
  3052  0012F4  B4D8               	btfsc	status,2,c
  3053  0012F6  EF51  F007         	goto	l5571
  3054  0012FA  0A03               	xorlw	3	; case 102
  3055  0012FC  B4D8               	btfsc	status,2,c
  3056  0012FE  EF19  F007         	goto	l5561
  3057  001302  0A01               	xorlw	1	; case 103
  3058  001304  B4D8               	btfsc	status,2,c
  3059  001306  EFB5  F007         	goto	l5593
  3060  00130A  0A0E               	xorlw	14	; case 105
  3061  00130C  B4D8               	btfsc	status,2,c
  3062  00130E  EF01  F006         	goto	l5511
  3063  001312  0A07               	xorlw	7	; case 110
  3064  001314  B4D8               	btfsc	status,2,c
  3065  001316  EF3F  F009         	goto	l5671
  3066  00131A  0A01               	xorlw	1	; case 111
  3067  00131C  B4D8               	btfsc	status,2,c
  3068  00131E  EFE2  F006         	goto	l5551
  3069  001322  0A1C               	xorlw	28	; case 115
  3070  001324  B4D8               	btfsc	status,2,c
  3071  001326  EF9A  F005         	goto	l5493
  3072  00132A  0A06               	xorlw	6	; case 117
  3073  00132C  B4D8               	btfsc	status,2,c
  3074  00132E  EF46  F006         	goto	l5521
  3075  001332  0A0D               	xorlw	13	; case 120
  3076  001334  B4D8               	btfsc	status,2,c
  3077  001336  EFAB  F006         	goto	l5541
  3078  00133A  EF4B  F009         	goto	l5673
  3079  00133E                     l5677:
  3080                           
  3081                           ;src/print/my_print.c: 189:    setWidth(buffer, &width);
  3082  00133E  0E8E               	movlw	low my_vprintf@buffer
  3083  001340  6E08               	movwf	setWidth@str^0,c
  3084  001342  0E01               	movlw	high my_vprintf@buffer
  3085  001344  6E09               	movwf	(setWidth@str+1)^0,c
  3086  001346  0EDA               	movlw	low my_vprintf@width
  3087  001348  6E0A               	movwf	setWidth@width^0,c
  3088  00134A  0E01               	movlw	high my_vprintf@width
  3089  00134C  6E0B               	movwf	(setWidth@width+1)^0,c
  3090  00134E  EC7A  F018         	call	_setWidth	;wreg free
  3091  001352                     
  3092                           ;src/print/my_print.c: 190:    strcat(string, buffer);
  3093  001352  0E00               	movlw	low my_vprintf@string
  3094  001354  6E12               	movwf	strcat@dest^0,c
  3095  001356  0E01               	movlw	high my_vprintf@string
  3096  001358  6E13               	movwf	(strcat@dest+1)^0,c
  3097  00135A  0E8E               	movlw	low my_vprintf@buffer
  3098  00135C  6E14               	movwf	strcat@src^0,c
  3099  00135E  0E01               	movlw	high my_vprintf@buffer
  3100  001360  6E15               	movwf	(strcat@src+1)^0,c
  3101  001362  ECEA  F027         	call	_strcat	;wreg free
  3102  001366                     
  3103                           ;src/print/my_print.c: 191:    length += strlen(buffer);
  3104  001366  0E8E               	movlw	low my_vprintf@buffer
  3105  001368  6E04               	movwf	strlen@s^0,c
  3106  00136A  0E01               	movlw	high my_vprintf@buffer
  3107  00136C  6E05               	movwf	(strlen@s+1)^0,c
  3108  00136E  ECCF  F027         	call	_strlen	;wreg free
  3109  001372  5004               	movf	?_strlen^0,w,c
  3110  001374  0101               	movlb	1	; () banked
  3111  001376  2780               	addwf	my_vprintf@length& (0+255),f,b
  3112  001378  5005               	movf	(?_strlen+1)^0,w,c
  3113  00137A  2381               	addwfc	(my_vprintf@length+1)& (0+255),f,b
  3114                           
  3115                           ;src/print/my_print.c: 193:   }
  3116  00137C  EFCD  F009         	goto	l5687
  3117  001380                     l5683:
  3118                           
  3119                           ; BSR set to: 1
  3120                           ;src/print/my_print.c: 195:   {;src/print/my_print.c: 196:    strcat(string, ch);
  3121  001380  0E00               	movlw	low my_vprintf@string
  3122  001382  6E12               	movwf	strcat@dest^0,c
  3123  001384  0E01               	movlw	high my_vprintf@string
  3124  001386  6E13               	movwf	(strcat@dest+1)^0,c
  3125  001388  0ED0               	movlw	low my_vprintf@ch
  3126  00138A  6E14               	movwf	strcat@src^0,c
  3127  00138C  0E01               	movlw	high my_vprintf@ch
  3128  00138E  6E15               	movwf	(strcat@src+1)^0,c
  3129  001390  ECEA  F027         	call	_strcat	;wreg free
  3130  001394                     
  3131                           ;src/print/my_print.c: 197:    length++;
  3132  001394  0101               	movlb	1	; () banked
  3133  001396  4B80               	infsnz	my_vprintf@length& (0+255),f,b
  3134  001398  2B81               	incf	(my_vprintf@length+1)& (0+255),f,b
  3135  00139A                     l5687:
  3136                           
  3137                           ; BSR set to: 1
  3138                           ;src/print/my_print.c: 34:  while ( (ch[0] = *sformat++)) {
  3139  00139A  C036  FFF6         	movff	my_vprintf@sformat,tblptrl
  3140  00139E  C037  FFF7         	movff	my_vprintf@sformat+1,tblptrh
  3141  0013A2  4A36               	infsnz	my_vprintf@sformat^0,f,c
  3142  0013A4  2A37               	incf	(my_vprintf@sformat+1)^0,f,c
  3143  0013A6                     	if	0	;tblptru may be non-zero
  3144  0013A6                     	endif
  3145  0013A6                     	if	0	;tblptru may be non-zero
  3146  0013A6                     	endif
  3147  0013A6  0008               	tblrd		*
  3148  0013A8  CFF5 F1D0          	movff	tablat,my_vprintf@ch
  3149  0013AC  51D0               	movf	my_vprintf@ch& (0+255),w,b
  3150  0013AE  A4D8               	btfss	status,2,c
  3151  0013B0  EFDC  F009         	goto	u6481
  3152  0013B4  EFDE  F009         	goto	u6480
  3153  0013B8                     u6481:
  3154  0013B8  EF57  F004         	goto	l5415
  3155  0013BC                     u6480:
  3156  0013BC                     
  3157                           ; BSR set to: 1
  3158                           ;src/print/my_print.c: 203:  SERIAL_Write(string);
  3159  0013BC  0E00               	movlw	low my_vprintf@string
  3160  0013BE  6E08               	movwf	SERIAL_Write@str^0,c
  3161  0013C0  0E01               	movlw	high my_vprintf@string
  3162  0013C2  6E09               	movwf	(SERIAL_Write@str+1)^0,c
  3163  0013C4  EC2F  F027         	call	_SERIAL_Write	;wreg free
  3164  0013C8  0012               	return		;funcret
  3165  0013CA                     __end_of_my_vprintf:
  3166                           	opt callstack 0
  3167                           
  3168 ;; *************** function _upperCL *****************
  3169 ;; Defined at:
  3170 ;;		line 103 in file "src/print/format.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  str             2    7[COMRAM] PTR unsigned char 
  3173 ;;		 -> my_vprintf@buffer(64), 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  i               2   10[COMRAM] int 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3185 ;;      Params:         2       0       0       0       0       0       0       0       0
  3186 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3187 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3188 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3189 ;;Total ram usage:        5 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    3
  3192 ;; This function calls:
  3193 ;;		_strlen
  3194 ;; This function is called by:
  3195 ;;		_my_vprintf
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text2
  3200  004954                     __ptext2:
  3201                           	opt callstack 0
  3202  004954                     _upperCL:
  3203                           	opt callstack 26
  3204  004954                     
  3205                           ;src/print/format.c: 104:     int i;;src/print/format.c: 105:     for (i = 0; i <= strle
      +                          n(str);i++) {
  3206  004954  0E00               	movlw	0
  3207  004956  6E0C               	movwf	(upperCL@i+1)^0,c
  3208  004958  0E00               	movlw	0
  3209  00495A  6E0B               	movwf	upperCL@i^0,c
  3210  00495C  EFDD  F024         	goto	l4753
  3211  004960                     l4745:
  3212                           
  3213                           ;src/print/format.c: 106:         if((str[i] >= 97) && (str[i] <= 122))
  3214  004960  500B               	movf	upperCL@i^0,w,c
  3215  004962  2408               	addwf	upperCL@str^0,w,c
  3216  004964  6ED9               	movwf	fsr2l,c
  3217  004966  500C               	movf	(upperCL@i+1)^0,w,c
  3218  004968  2009               	addwfc	(upperCL@str+1)^0,w,c
  3219  00496A  6EDA               	movwf	fsr2h,c
  3220  00496C  0E60               	movlw	96
  3221  00496E  64DF               	cpfsgt	indf2,c
  3222  004970  EFBC  F024         	goto	u5031
  3223  004974  EFBE  F024         	goto	u5030
  3224  004978                     u5031:
  3225  004978  EFDB  F024         	goto	l4751
  3226  00497C                     u5030:
  3227  00497C  500B               	movf	upperCL@i^0,w,c
  3228  00497E  2408               	addwf	upperCL@str^0,w,c
  3229  004980  6ED9               	movwf	fsr2l,c
  3230  004982  500C               	movf	(upperCL@i+1)^0,w,c
  3231  004984  2009               	addwfc	(upperCL@str+1)^0,w,c
  3232  004986  6EDA               	movwf	fsr2h,c
  3233  004988  0E7B               	movlw	123
  3234  00498A  60DF               	cpfslt	indf2,c
  3235  00498C  EFCA  F024         	goto	u5041
  3236  004990  EFCC  F024         	goto	u5040
  3237  004994                     u5041:
  3238  004994  EFDB  F024         	goto	l4751
  3239  004998                     u5040:
  3240  004998                     
  3241                           ;src/print/format.c: 107:             str[i] = str[i] - 32;
  3242  004998  500B               	movf	upperCL@i^0,w,c
  3243  00499A  2408               	addwf	upperCL@str^0,w,c
  3244  00499C  6ED9               	movwf	fsr2l,c
  3245  00499E  500C               	movf	(upperCL@i+1)^0,w,c
  3246  0049A0  2009               	addwfc	(upperCL@str+1)^0,w,c
  3247  0049A2  6EDA               	movwf	fsr2h,c
  3248  0049A4  500B               	movf	upperCL@i^0,w,c
  3249  0049A6  2408               	addwf	upperCL@str^0,w,c
  3250  0049A8  6EE1               	movwf	fsr1l,c
  3251  0049AA  500C               	movf	(upperCL@i+1)^0,w,c
  3252  0049AC  2009               	addwfc	(upperCL@str+1)^0,w,c
  3253  0049AE  6EE2               	movwf	fsr1h,c
  3254  0049B0  50E7               	movf	indf1,w,c
  3255  0049B2  0FE0               	addlw	224
  3256  0049B4  6EDF               	movwf	indf2,c
  3257  0049B6                     l4751:
  3258                           
  3259                           ;src/print/format.c: 108:     }
  3260  0049B6  4A0B               	infsnz	upperCL@i^0,f,c
  3261  0049B8  2A0C               	incf	(upperCL@i+1)^0,f,c
  3262  0049BA                     l4753:
  3263  0049BA  C008  F004         	movff	upperCL@str,strlen@s
  3264  0049BE  C009  F005         	movff	upperCL@str+1,strlen@s+1
  3265  0049C2  ECCF  F027         	call	_strlen	;wreg free
  3266  0049C6  500B               	movf	upperCL@i^0,w,c
  3267  0049C8  5C04               	subwf	?_strlen^0,w,c
  3268  0049CA  500C               	movf	(upperCL@i+1)^0,w,c
  3269  0049CC  5805               	subwfb	(?_strlen+1)^0,w,c
  3270  0049CE  B0D8               	btfsc	status,0,c
  3271  0049D0  EFEC  F024         	goto	u5051
  3272  0049D4  EFEE  F024         	goto	u5050
  3273  0049D8                     u5051:
  3274  0049D8  EFB0  F024         	goto	l4745
  3275  0049DC                     u5050:
  3276  0049DC  0012               	return		;funcret
  3277  0049DE                     __end_of_upperCL:
  3278                           	opt callstack 0
  3279                           
  3280 ;; *************** function _strcat *****************
  3281 ;; Defined at:
  3282 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  dest            2   17[COMRAM] PTR unsigned char 
  3285 ;;		 -> my_vprintf@string(128), 
  3286 ;;  src             2   19[COMRAM] PTR const unsigned char 
  3287 ;;		 -> my_vprintf@buffer(64), my_vprintf@ch(2), 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  2   17[COMRAM] PTR unsigned char 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3299 ;;      Params:         4       0       0       0       0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3302 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3303 ;;Total ram usage:        4 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    3
  3306 ;; This function calls:
  3307 ;;		_strcpy
  3308 ;;		_strlen
  3309 ;; This function is called by:
  3310 ;;		_my_vprintf
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text3
  3315  004FD4                     __ptext3:
  3316                           	opt callstack 0
  3317  004FD4                     _strcat:
  3318                           	opt callstack 26
  3319  004FD4  C012  F004         	movff	strcat@dest,strlen@s
  3320  004FD8  C013  F005         	movff	strcat@dest+1,strlen@s+1
  3321  004FDC  ECCF  F027         	call	_strlen	;wreg free
  3322  004FE0  5004               	movf	?_strlen^0,w,c
  3323  004FE2  2412               	addwf	strcat@dest^0,w,c
  3324  004FE4  6E08               	movwf	strcpy@dest^0,c
  3325  004FE6  5005               	movf	(?_strlen+1)^0,w,c
  3326  004FE8  2013               	addwfc	(strcat@dest+1)^0,w,c
  3327  004FEA  6E09               	movwf	(strcpy@dest+1)^0,c
  3328  004FEC  C014  F00A         	movff	strcat@src,strcpy@src
  3329  004FF0  C015  F00B         	movff	strcat@src+1,strcpy@src+1
  3330  004FF4  EC11  F026         	call	_strcpy	;wreg free
  3331  004FF8  0012               	return		;funcret
  3332  004FFA                     __end_of_strcat:
  3333                           	opt callstack 0
  3334                           
  3335 ;; *************** function _setWidth *****************
  3336 ;; Defined at:
  3337 ;;		line 403 in file "src/print/format.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  str             2    7[COMRAM] PTR unsigned char 
  3340 ;;		 -> my_vprintf@buffer(64), 
  3341 ;;  width           2    9[COMRAM] PTR int 
  3342 ;;		 -> my_vprintf@width(2), 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  j               2   17[COMRAM] int 
  3345 ;;  len             2   15[COMRAM] int 
  3346 ;;  widthDif        2   13[COMRAM] int 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3356 ;;      Params:         4       0       0       0       0       0       0       0       0
  3357 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3358 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3359 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3360 ;;Total ram usage:       12 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    3
  3363 ;; This function calls:
  3364 ;;		_strlen
  3365 ;; This function is called by:
  3366 ;;		_my_vprintf
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text4
  3371  0030F4                     __ptext4:
  3372                           	opt callstack 0
  3373  0030F4                     _setWidth:
  3374                           	opt callstack 26
  3375  0030F4                     
  3376                           ;src/print/format.c: 404:     int j;;src/print/format.c: 405:     int len = strlen(str);
  3377  0030F4  C008  F004         	movff	setWidth@str,strlen@s
  3378  0030F8  C009  F005         	movff	setWidth@str+1,strlen@s+1
  3379  0030FC  ECCF  F027         	call	_strlen	;wreg free
  3380  003100  C004  F010         	movff	?_strlen,setWidth@len
  3381  003104  C005  F011         	movff	?_strlen+1,setWidth@len+1
  3382  003108                     
  3383                           ;src/print/format.c: 406:     int widthDif;;src/print/format.c: 408:     widthDif = (*wi
      +                          dth) - len;
  3384  003108  C00A  FFD9         	movff	setWidth@width,fsr2l
  3385  00310C  C00B  FFDA         	movff	setWidth@width+1,fsr2h
  3386  003110  CFDE F00C          	movff	postinc2,??_setWidth
  3387  003114  CFDD F00D          	movff	postdec2,??_setWidth+1
  3388  003118  5010               	movf	setWidth@len^0,w,c
  3389  00311A  5C0C               	subwf	??_setWidth^0,w,c
  3390  00311C  6E0E               	movwf	setWidth@widthDif^0,c
  3391  00311E  5011               	movf	(setWidth@len+1)^0,w,c
  3392  003120  580D               	subwfb	(??_setWidth+1)^0,w,c
  3393  003122  6E0F               	movwf	(setWidth@widthDif+1)^0,c
  3394  003124                     
  3395                           ;src/print/format.c: 409:     if (widthDif > 0 && alingL == 1) {
  3396  003124  BE0F               	btfsc	(setWidth@widthDif+1)^0,7,c
  3397  003126  EF9D  F018         	goto	u5861
  3398  00312A  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3399  00312C  E108               	bnz	u5860
  3400  00312E  040E               	decf	setWidth@widthDif^0,w,c
  3401  003130  A0D8               	btfss	status,0,c
  3402  003132  EF9D  F018         	goto	u5861
  3403  003136  EF9F  F018         	goto	u5860
  3404  00313A                     u5861:
  3405  00313A  EFCA  F018         	goto	l5169
  3406  00313E                     u5860:
  3407  00313E  0450               	decf	_alingL^0,w,c
  3408  003140  A4D8               	btfss	status,2,c
  3409  003142  EFA5  F018         	goto	u5871
  3410  003146  EFA7  F018         	goto	u5870
  3411  00314A                     u5871:
  3412  00314A  EFCA  F018         	goto	l5169
  3413  00314E                     u5870:
  3414  00314E                     
  3415                           ;src/print/format.c: 410:         for(j=0; j < widthDif; j++) {
  3416  00314E  0E00               	movlw	0
  3417  003150  6E13               	movwf	(setWidth@j+1)^0,c
  3418  003152  0E00               	movlw	0
  3419  003154  6E12               	movwf	setWidth@j^0,c
  3420  003156  EFB9  F018         	goto	l5167
  3421  00315A                     l5161:
  3422                           
  3423                           ;src/print/format.c: 412:             str[len] =' ';
  3424  00315A  5010               	movf	setWidth@len^0,w,c
  3425  00315C  2408               	addwf	setWidth@str^0,w,c
  3426  00315E  6ED9               	movwf	fsr2l,c
  3427  003160  5011               	movf	(setWidth@len+1)^0,w,c
  3428  003162  2009               	addwfc	(setWidth@str+1)^0,w,c
  3429  003164  6EDA               	movwf	fsr2h,c
  3430  003166  0E20               	movlw	32
  3431  003168  6EDF               	movwf	indf2,c
  3432  00316A                     
  3433                           ;src/print/format.c: 413:             len++;
  3434  00316A  4A10               	infsnz	setWidth@len^0,f,c
  3435  00316C  2A11               	incf	(setWidth@len+1)^0,f,c
  3436  00316E                     
  3437                           ;src/print/format.c: 414:         }
  3438  00316E  4A12               	infsnz	setWidth@j^0,f,c
  3439  003170  2A13               	incf	(setWidth@j+1)^0,f,c
  3440  003172                     l5167:
  3441  003172  500E               	movf	setWidth@widthDif^0,w,c
  3442  003174  5C12               	subwf	setWidth@j^0,w,c
  3443  003176  5013               	movf	(setWidth@j+1)^0,w,c
  3444  003178  0A80               	xorlw	128
  3445  00317A  6E0C               	movwf	??_setWidth^0,c
  3446  00317C  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3447  00317E  0A80               	xorlw	128
  3448  003180  580C               	subwfb	??_setWidth^0,w,c
  3449  003182  A0D8               	btfss	status,0,c
  3450  003184  EFC6  F018         	goto	u5881
  3451  003188  EFC8  F018         	goto	u5880
  3452  00318C                     u5881:
  3453  00318C  EFAD  F018         	goto	l5161
  3454  003190                     u5880:
  3455  003190  EF8E  F019         	goto	l570
  3456  003194                     l5169:
  3457  003194  BE0F               	btfsc	(setWidth@widthDif+1)^0,7,c
  3458  003196  EFD5  F018         	goto	u5891
  3459  00319A  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3460  00319C  E108               	bnz	u5890
  3461  00319E  040E               	decf	setWidth@widthDif^0,w,c
  3462  0031A0  A0D8               	btfss	status,0,c
  3463  0031A2  EFD5  F018         	goto	u5891
  3464  0031A6  EFD7  F018         	goto	u5890
  3465  0031AA                     u5891:
  3466  0031AA  EF8E  F019         	goto	l570
  3467  0031AE                     u5890:
  3468  0031AE  5050               	movf	_alingL^0,w,c
  3469  0031B0  A4D8               	btfss	status,2,c
  3470  0031B2  EFDD  F018         	goto	u5901
  3471  0031B6  EFDF  F018         	goto	u5900
  3472  0031BA                     u5901:
  3473  0031BA  EF8E  F019         	goto	l570
  3474  0031BE                     u5900:
  3475  0031BE                     
  3476                           ;src/print/format.c: 417:         for(j = (*width)-1; j >= 0; j--) {
  3477  0031BE  C00A  FFD9         	movff	setWidth@width,fsr2l
  3478  0031C2  C00B  FFDA         	movff	setWidth@width+1,fsr2h
  3479  0031C6  CFDE F00C          	movff	postinc2,??_setWidth
  3480  0031CA  CFDD F00D          	movff	postdec2,??_setWidth+1
  3481  0031CE  0EFF               	movlw	255
  3482  0031D0  240C               	addwf	??_setWidth^0,w,c
  3483  0031D2  6E12               	movwf	setWidth@j^0,c
  3484  0031D4  0EFF               	movlw	255
  3485  0031D6  200D               	addwfc	(??_setWidth+1)^0,w,c
  3486  0031D8  6E13               	movwf	(setWidth@j+1)^0,c
  3487  0031DA                     l5175:
  3488  0031DA  BE13               	btfsc	(setWidth@j+1)^0,7,c
  3489  0031DC  EFF4  F018         	goto	u5910
  3490  0031E0  EFF2  F018         	goto	u5911
  3491  0031E4                     u5911:
  3492  0031E4  EFF6  F018         	goto	l5179
  3493  0031E8                     u5910:
  3494  0031E8  EF8E  F019         	goto	l570
  3495  0031EC                     l5179:
  3496                           
  3497                           ;src/print/format.c: 418:             len--;
  3498  0031EC  0610               	decf	setWidth@len^0,f,c
  3499  0031EE  A0D8               	btfss	status,0,c
  3500  0031F0  0611               	decf	(setWidth@len+1)^0,f,c
  3501  0031F2                     
  3502                           ;src/print/format.c: 419:             if (zeros == 1 && precInt == 0) {
  3503  0031F2  0451               	decf	_zeros^0,w,c
  3504  0031F4  A4D8               	btfss	status,2,c
  3505  0031F6  EFFF  F018         	goto	u5921
  3506  0031FA  EF01  F019         	goto	u5920
  3507  0031FE                     u5921:
  3508  0031FE  EF70  F019         	goto	l5201
  3509  003202                     u5920:
  3510  003202  504F               	movf	_precInt^0,w,c
  3511  003204  A4D8               	btfss	status,2,c
  3512  003206  EF07  F019         	goto	u5931
  3513  00320A  EF09  F019         	goto	u5930
  3514  00320E                     u5931:
  3515  00320E  EF70  F019         	goto	l5201
  3516  003212                     u5930:
  3517  003212                     
  3518                           ;src/print/format.c: 420:                 if (j >= widthDif) {
  3519  003212  500E               	movf	setWidth@widthDif^0,w,c
  3520  003214  5C12               	subwf	setWidth@j^0,w,c
  3521  003216  5013               	movf	(setWidth@j+1)^0,w,c
  3522  003218  0A80               	xorlw	128
  3523  00321A  6E0C               	movwf	??_setWidth^0,c
  3524  00321C  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3525  00321E  0A80               	xorlw	128
  3526  003220  580C               	subwfb	??_setWidth^0,w,c
  3527  003222  A0D8               	btfss	status,0,c
  3528  003224  EF16  F019         	goto	u5941
  3529  003228  EF18  F019         	goto	u5940
  3530  00322C                     u5941:
  3531  00322C  EF50  F019         	goto	l5195
  3532  003230                     u5940:
  3533  003230                     
  3534                           ;src/print/format.c: 421:                     if (str[len] == '+' || str[len] == '-')
  3535  003230  5010               	movf	setWidth@len^0,w,c
  3536  003232  2408               	addwf	setWidth@str^0,w,c
  3537  003234  6ED9               	movwf	fsr2l,c
  3538  003236  5011               	movf	(setWidth@len+1)^0,w,c
  3539  003238  2009               	addwfc	(setWidth@str+1)^0,w,c
  3540  00323A  6EDA               	movwf	fsr2h,c
  3541  00323C  0E2B               	movlw	43
  3542  00323E  18DE               	xorwf	postinc2,w,c
  3543  003240  B4D8               	btfsc	status,2,c
  3544  003242  EF25  F019         	goto	u5951
  3545  003246  EF27  F019         	goto	u5950
  3546  00324A                     u5951:
  3547  00324A  EF36  F019         	goto	l5191
  3548  00324E                     u5950:
  3549  00324E  5010               	movf	setWidth@len^0,w,c
  3550  003250  2408               	addwf	setWidth@str^0,w,c
  3551  003252  6ED9               	movwf	fsr2l,c
  3552  003254  5011               	movf	(setWidth@len+1)^0,w,c
  3553  003256  2009               	addwfc	(setWidth@str+1)^0,w,c
  3554  003258  6EDA               	movwf	fsr2h,c
  3555  00325A  0E2D               	movlw	45
  3556  00325C  18DE               	xorwf	postinc2,w,c
  3557  00325E  A4D8               	btfss	status,2,c
  3558  003260  EF34  F019         	goto	u5961
  3559  003264  EF36  F019         	goto	u5960
  3560  003268                     u5961:
  3561  003268  EF40  F019         	goto	l5193
  3562  00326C                     u5960:
  3563  00326C                     l5191:
  3564                           
  3565                           ;src/print/format.c: 422:                         str [j] = '0';
  3566  00326C  5012               	movf	setWidth@j^0,w,c
  3567  00326E  2408               	addwf	setWidth@str^0,w,c
  3568  003270  6ED9               	movwf	fsr2l,c
  3569  003272  5013               	movf	(setWidth@j+1)^0,w,c
  3570  003274  2009               	addwfc	(setWidth@str+1)^0,w,c
  3571  003276  6EDA               	movwf	fsr2h,c
  3572  003278  0E30               	movlw	48
  3573  00327A  6EDF               	movwf	indf2,c
  3574  00327C  EF89  F019         	goto	l5207
  3575  003280                     l5193:
  3576                           
  3577                           ;src/print/format.c: 424:                         str[j] = str[len];
  3578  003280  5010               	movf	setWidth@len^0,w,c
  3579  003282  2408               	addwf	setWidth@str^0,w,c
  3580  003284  6ED9               	movwf	fsr2l,c
  3581  003286  5011               	movf	(setWidth@len+1)^0,w,c
  3582  003288  2009               	addwfc	(setWidth@str+1)^0,w,c
  3583  00328A  6EDA               	movwf	fsr2h,c
  3584  00328C  5012               	movf	setWidth@j^0,w,c
  3585  00328E  2408               	addwf	setWidth@str^0,w,c
  3586  003290  6EE1               	movwf	fsr1l,c
  3587  003292  5013               	movf	(setWidth@j+1)^0,w,c
  3588  003294  2009               	addwfc	(setWidth@str+1)^0,w,c
  3589  003296  6EE2               	movwf	fsr1h,c
  3590  003298  CFDF FFE7          	movff	indf2,indf1
  3591  00329C  EF89  F019         	goto	l5207
  3592  0032A0                     l5195:
  3593                           
  3594                           ;src/print/format.c: 427:                     if (str[j] != '+' && str [j] != '-')
  3595  0032A0  5012               	movf	setWidth@j^0,w,c
  3596  0032A2  2408               	addwf	setWidth@str^0,w,c
  3597  0032A4  6ED9               	movwf	fsr2l,c
  3598  0032A6  5013               	movf	(setWidth@j+1)^0,w,c
  3599  0032A8  2009               	addwfc	(setWidth@str+1)^0,w,c
  3600  0032AA  6EDA               	movwf	fsr2h,c
  3601  0032AC  0E2B               	movlw	43
  3602  0032AE  18DE               	xorwf	postinc2,w,c
  3603  0032B0  B4D8               	btfsc	status,2,c
  3604  0032B2  EF5D  F019         	goto	u5971
  3605  0032B6  EF5F  F019         	goto	u5970
  3606  0032BA                     u5971:
  3607  0032BA  EF89  F019         	goto	l5207
  3608  0032BE                     u5970:
  3609  0032BE  5012               	movf	setWidth@j^0,w,c
  3610  0032C0  2408               	addwf	setWidth@str^0,w,c
  3611  0032C2  6ED9               	movwf	fsr2l,c
  3612  0032C4  5013               	movf	(setWidth@j+1)^0,w,c
  3613  0032C6  2009               	addwfc	(setWidth@str+1)^0,w,c
  3614  0032C8  6EDA               	movwf	fsr2h,c
  3615  0032CA  0E2D               	movlw	45
  3616  0032CC  18DE               	xorwf	postinc2,w,c
  3617  0032CE  B4D8               	btfsc	status,2,c
  3618  0032D0  EF6C  F019         	goto	u5981
  3619  0032D4  EF6E  F019         	goto	u5980
  3620  0032D8                     u5981:
  3621  0032D8  EF89  F019         	goto	l5207
  3622  0032DC                     u5980:
  3623  0032DC  EF36  F019         	goto	l5191
  3624  0032E0                     l5201:
  3625                           
  3626                           ;src/print/format.c: 432:                 if (j >= widthDif)
  3627  0032E0  500E               	movf	setWidth@widthDif^0,w,c
  3628  0032E2  5C12               	subwf	setWidth@j^0,w,c
  3629  0032E4  5013               	movf	(setWidth@j+1)^0,w,c
  3630  0032E6  0A80               	xorlw	128
  3631  0032E8  6E0C               	movwf	??_setWidth^0,c
  3632  0032EA  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3633  0032EC  0A80               	xorlw	128
  3634  0032EE  580C               	subwfb	??_setWidth^0,w,c
  3635  0032F0  A0D8               	btfss	status,0,c
  3636  0032F2  EF7D  F019         	goto	u5991
  3637  0032F6  EF7F  F019         	goto	u5990
  3638  0032FA                     u5991:
  3639  0032FA  EF81  F019         	goto	l5205
  3640  0032FE                     u5990:
  3641  0032FE  EF40  F019         	goto	l5193
  3642  003302                     l5205:
  3643                           
  3644                           ;src/print/format.c: 435:                     str[j] =' ';
  3645  003302  5012               	movf	setWidth@j^0,w,c
  3646  003304  2408               	addwf	setWidth@str^0,w,c
  3647  003306  6ED9               	movwf	fsr2l,c
  3648  003308  5013               	movf	(setWidth@j+1)^0,w,c
  3649  00330A  2009               	addwfc	(setWidth@str+1)^0,w,c
  3650  00330C  6EDA               	movwf	fsr2h,c
  3651  00330E  0E20               	movlw	32
  3652  003310  6EDF               	movwf	indf2,c
  3653  003312                     l5207:
  3654                           
  3655                           ;src/print/format.c: 437:         }
  3656  003312  0612               	decf	setWidth@j^0,f,c
  3657  003314  A0D8               	btfss	status,0,c
  3658  003316  0613               	decf	(setWidth@j+1)^0,f,c
  3659  003318  EFED  F018         	goto	l5175
  3660  00331C                     l570:
  3661  00331C  0012               	return		;funcret
  3662  00331E                     __end_of_setWidth:
  3663                           	opt callstack 0
  3664                           
  3665 ;; *************** function _precS *****************
  3666 ;; Defined at:
  3667 ;;		line 348 in file "src/print/format.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  str             2    7[COMRAM] PTR unsigned char 
  3670 ;;		 -> my_vprintf@buffer(64), 
  3671 ;;  precision       2    9[COMRAM] PTR int 
  3672 ;;		 -> my_vprintf@prec(2), 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  i               2   15[COMRAM] int 
  3675 ;;  len             2   13[COMRAM] int 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3685 ;;      Params:         4       0       0       0       0       0       0       0       0
  3686 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3687 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3688 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3689 ;;Total ram usage:       10 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    3
  3692 ;; This function calls:
  3693 ;;		_strlen
  3694 ;; This function is called by:
  3695 ;;		_my_vprintf
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text5
  3700  004AE2                     __ptext5:
  3701                           	opt callstack 0
  3702  004AE2                     _precS:
  3703                           	opt callstack 26
  3704  004AE2                     
  3705                           ;src/print/format.c: 349:     int i;;src/print/format.c: 350:     int len = strlen(str);
  3706  004AE2  C008  F004         	movff	precS@str,strlen@s
  3707  004AE6  C009  F005         	movff	precS@str+1,strlen@s+1
  3708  004AEA  ECCF  F027         	call	_strlen	;wreg free
  3709  004AEE  C004  F00E         	movff	?_strlen,precS@len
  3710  004AF2  C005  F00F         	movff	?_strlen+1,precS@len+1
  3711  004AF6                     
  3712                           ;src/print/format.c: 352:     if ((*precision) != -1) {
  3713  004AF6  C00A  FFD9         	movff	precS@precision,fsr2l
  3714  004AFA  C00B  FFDA         	movff	precS@precision+1,fsr2h
  3715  004AFE  28DE               	incf	postinc2,w,c
  3716  004B00  E108               	bnz	u5690
  3717  004B02  28DE               	incf	postinc2,w,c
  3718  004B04  B4D8               	btfsc	status,2,c
  3719  004B06  EF87  F025         	goto	u5691
  3720  004B0A  EF89  F025         	goto	u5690
  3721  004B0E                     u5691:
  3722  004B0E  EFAC  F025         	goto	l524
  3723  004B12                     u5690:
  3724  004B12                     
  3725                           ;src/print/format.c: 353:         for (i = (*precision); i < len;i++)
  3726  004B12  C00A  FFD9         	movff	precS@precision,fsr2l
  3727  004B16  C00B  FFDA         	movff	precS@precision+1,fsr2h
  3728  004B1A  CFDE F010          	movff	postinc2,precS@i
  3729  004B1E  CFDD F011          	movff	postdec2,precS@i+1
  3730  004B22  EF9D  F025         	goto	l5069
  3731  004B26                     l5065:
  3732                           
  3733                           ;src/print/format.c: 354:             str[i] = 0;
  3734  004B26  5010               	movf	precS@i^0,w,c
  3735  004B28  2408               	addwf	precS@str^0,w,c
  3736  004B2A  6ED9               	movwf	fsr2l,c
  3737  004B2C  5011               	movf	(precS@i+1)^0,w,c
  3738  004B2E  2009               	addwfc	(precS@str+1)^0,w,c
  3739  004B30  6EDA               	movwf	fsr2h,c
  3740  004B32  0E00               	movlw	0
  3741  004B34  6EDF               	movwf	indf2,c
  3742  004B36  4A10               	infsnz	precS@i^0,f,c
  3743  004B38  2A11               	incf	(precS@i+1)^0,f,c
  3744  004B3A                     l5069:
  3745  004B3A  500E               	movf	precS@len^0,w,c
  3746  004B3C  5C10               	subwf	precS@i^0,w,c
  3747  004B3E  5011               	movf	(precS@i+1)^0,w,c
  3748  004B40  0A80               	xorlw	128
  3749  004B42  6E0C               	movwf	??_precS^0,c
  3750  004B44  500F               	movf	(precS@len+1)^0,w,c
  3751  004B46  0A80               	xorlw	128
  3752  004B48  580C               	subwfb	??_precS^0,w,c
  3753  004B4A  A0D8               	btfss	status,0,c
  3754  004B4C  EFAA  F025         	goto	u5701
  3755  004B50  EFAC  F025         	goto	u5700
  3756  004B54                     u5701:
  3757  004B54  EF93  F025         	goto	l5065
  3758  004B58                     u5700:
  3759  004B58                     l524:
  3760  004B58  0012               	return		;funcret
  3761  004B5A                     __end_of_precS:
  3762                           	opt callstack 0
  3763                           
  3764 ;; *************** function _precI *****************
  3765 ;; Defined at:
  3766 ;;		line 323 in file "src/print/format.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  str             2    7[COMRAM] PTR unsigned char 
  3769 ;;		 -> my_vprintf@buffer(64), 
  3770 ;;  precision       2    9[COMRAM] PTR int 
  3771 ;;		 -> my_vprintf@prec(2), 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  i               2   19[COMRAM] int 
  3774 ;;  len             2   17[COMRAM] int 
  3775 ;;  j               2   15[COMRAM] int 
  3776 ;;  k               2   13[COMRAM] int 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3786 ;;      Params:         4       0       0       0       0       0       0       0       0
  3787 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3788 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3789 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3790 ;;Total ram usage:       14 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    3
  3793 ;; This function calls:
  3794 ;;		_strlen
  3795 ;; This function is called by:
  3796 ;;		_my_vprintf
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text6
  3801  003FCC                     __ptext6:
  3802                           	opt callstack 0
  3803  003FCC                     _precI:
  3804                           	opt callstack 26
  3805  003FCC                     
  3806                           ;src/print/format.c: 324:     int i, j, k;;src/print/format.c: 325:     int len = strlen
      +                          (str);
  3807  003FCC  C008  F004         	movff	precI@str,strlen@s
  3808  003FD0  C009  F005         	movff	precI@str+1,strlen@s+1
  3809  003FD4  ECCF  F027         	call	_strlen	;wreg free
  3810  003FD8  C004  F012         	movff	?_strlen,precI@len
  3811  003FDC  C005  F013         	movff	?_strlen+1,precI@len+1
  3812  003FE0                     
  3813                           ;src/print/format.c: 327:     if (*precision == -1)
  3814  003FE0  C00A  FFD9         	movff	precI@precision,fsr2l
  3815  003FE4  C00B  FFDA         	movff	precI@precision+1,fsr2h
  3816  003FE8  28DE               	incf	postinc2,w,c
  3817  003FEA  E106               	bnz	u5651
  3818  003FEC  28DE               	incf	postinc2,w,c
  3819  003FEE  A4D8               	btfss	status,2,c
  3820  003FF0  EFFC  F01F         	goto	u5651
  3821  003FF4  EFFE  F01F         	goto	u5650
  3822  003FF8                     u5651:
  3823  003FF8  EF08  F020         	goto	l5033
  3824  003FFC                     u5650:
  3825  003FFC                     
  3826                           ;src/print/format.c: 328:         (*precision) = 1;
  3827  003FFC  C00A  FFD9         	movff	precI@precision,fsr2l
  3828  004000  C00B  FFDA         	movff	precI@precision+1,fsr2h
  3829  004004  0E01               	movlw	1
  3830  004006  6EDE               	movwf	postinc2,c
  3831  004008  0E00               	movlw	0
  3832  00400A  6EDD               	movwf	postdec2,c
  3833  00400C  EF0A  F020         	goto	l5035
  3834  004010                     l5033:
  3835                           
  3836                           ;src/print/format.c: 330:         precInt = 1;
  3837  004010  0E01               	movlw	1
  3838  004012  6E4F               	movwf	_precInt^0,c
  3839  004014                     l5035:
  3840                           
  3841                           ;src/print/format.c: 332:     j = (*precision) - len;
  3842  004014  C00A  FFD9         	movff	precI@precision,fsr2l
  3843  004018  C00B  FFDA         	movff	precI@precision+1,fsr2h
  3844  00401C  CFDE F00C          	movff	postinc2,??_precI
  3845  004020  CFDD F00D          	movff	postdec2,??_precI+1
  3846  004024  5012               	movf	precI@len^0,w,c
  3847  004026  5C0C               	subwf	??_precI^0,w,c
  3848  004028  6E10               	movwf	precI@j^0,c
  3849  00402A  5013               	movf	(precI@len+1)^0,w,c
  3850  00402C  580D               	subwfb	(??_precI+1)^0,w,c
  3851  00402E  6E11               	movwf	(precI@j+1)^0,c
  3852  004030                     
  3853                           ;src/print/format.c: 333:     k = len;
  3854  004030  C012  F00E         	movff	precI@len,precI@k
  3855  004034  C013  F00F         	movff	precI@len+1,precI@k+1
  3856  004038                     
  3857                           ;src/print/format.c: 334:     if(j > 0) {
  3858  004038  BE11               	btfsc	(precI@j+1)^0,7,c
  3859  00403A  EF27  F020         	goto	u5661
  3860  00403E  5011               	movf	(precI@j+1)^0,w,c
  3861  004040  E108               	bnz	u5660
  3862  004042  0410               	decf	precI@j^0,w,c
  3863  004044  A0D8               	btfss	status,0,c
  3864  004046  EF27  F020         	goto	u5661
  3865  00404A  EF29  F020         	goto	u5660
  3866  00404E                     u5661:
  3867  00404E  EF6F  F020         	goto	l517
  3868  004052                     u5660:
  3869  004052                     
  3870                           ;src/print/format.c: 335:         for(i = (*precision)-1; i >= 0; i--) {
  3871  004052  C00A  FFD9         	movff	precI@precision,fsr2l
  3872  004056  C00B  FFDA         	movff	precI@precision+1,fsr2h
  3873  00405A  CFDE F00C          	movff	postinc2,??_precI
  3874  00405E  CFDD F00D          	movff	postdec2,??_precI+1
  3875  004062  0EFF               	movlw	255
  3876  004064  240C               	addwf	??_precI^0,w,c
  3877  004066  6E14               	movwf	precI@i^0,c
  3878  004068  0EFF               	movlw	255
  3879  00406A  200D               	addwfc	(??_precI+1)^0,w,c
  3880  00406C  6E15               	movwf	(precI@i+1)^0,c
  3881  00406E                     l5043:
  3882  00406E  BE15               	btfsc	(precI@i+1)^0,7,c
  3883  004070  EF3E  F020         	goto	u5670
  3884  004074  EF3C  F020         	goto	u5671
  3885  004078                     u5671:
  3886  004078  EF40  F020         	goto	l5047
  3887  00407C                     u5670:
  3888  00407C  EF6F  F020         	goto	l517
  3889  004080                     l5047:
  3890                           
  3891                           ;src/print/format.c: 336:             k--;
  3892  004080  060E               	decf	precI@k^0,f,c
  3893  004082  A0D8               	btfss	status,0,c
  3894  004084  060F               	decf	(precI@k+1)^0,f,c
  3895  004086                     
  3896                           ;src/print/format.c: 337:             if (i>=j)
  3897  004086  5010               	movf	precI@j^0,w,c
  3898  004088  5C14               	subwf	precI@i^0,w,c
  3899  00408A  5015               	movf	(precI@i+1)^0,w,c
  3900  00408C  0A80               	xorlw	128
  3901  00408E  6E0C               	movwf	??_precI^0,c
  3902  004090  5011               	movf	(precI@j+1)^0,w,c
  3903  004092  0A80               	xorlw	128
  3904  004094  580C               	subwfb	??_precI^0,w,c
  3905  004096  A0D8               	btfss	status,0,c
  3906  004098  EF50  F020         	goto	u5681
  3907  00409C  EF52  F020         	goto	u5680
  3908  0040A0                     u5681:
  3909  0040A0  EF62  F020         	goto	l5053
  3910  0040A4                     u5680:
  3911  0040A4                     
  3912                           ;src/print/format.c: 338:                 str[i] = str[k];
  3913  0040A4  500E               	movf	precI@k^0,w,c
  3914  0040A6  2408               	addwf	precI@str^0,w,c
  3915  0040A8  6ED9               	movwf	fsr2l,c
  3916  0040AA  500F               	movf	(precI@k+1)^0,w,c
  3917  0040AC  2009               	addwfc	(precI@str+1)^0,w,c
  3918  0040AE  6EDA               	movwf	fsr2h,c
  3919  0040B0  5014               	movf	precI@i^0,w,c
  3920  0040B2  2408               	addwf	precI@str^0,w,c
  3921  0040B4  6EE1               	movwf	fsr1l,c
  3922  0040B6  5015               	movf	(precI@i+1)^0,w,c
  3923  0040B8  2009               	addwfc	(precI@str+1)^0,w,c
  3924  0040BA  6EE2               	movwf	fsr1h,c
  3925  0040BC  CFDF FFE7          	movff	indf2,indf1
  3926  0040C0  EF6A  F020         	goto	l5055
  3927  0040C4                     l5053:
  3928                           
  3929                           ;src/print/format.c: 340:                 str[i] ='0';
  3930  0040C4  5014               	movf	precI@i^0,w,c
  3931  0040C6  2408               	addwf	precI@str^0,w,c
  3932  0040C8  6ED9               	movwf	fsr2l,c
  3933  0040CA  5015               	movf	(precI@i+1)^0,w,c
  3934  0040CC  2009               	addwfc	(precI@str+1)^0,w,c
  3935  0040CE  6EDA               	movwf	fsr2h,c
  3936  0040D0  0E30               	movlw	48
  3937  0040D2  6EDF               	movwf	indf2,c
  3938  0040D4                     l5055:
  3939                           
  3940                           ;src/print/format.c: 341:         }
  3941  0040D4  0614               	decf	precI@i^0,f,c
  3942  0040D6  A0D8               	btfss	status,0,c
  3943  0040D8  0615               	decf	(precI@i+1)^0,f,c
  3944  0040DA  EF37  F020         	goto	l5043
  3945  0040DE                     l517:
  3946  0040DE  0012               	return		;funcret
  3947  0040E0                     __end_of_precI:
  3948                           	opt callstack 0
  3949                           
  3950 ;; *************** function _precG *****************
  3951 ;; Defined at:
  3952 ;;		line 239 in file "src/print/format.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  str             2   30[COMRAM] PTR unsigned char 
  3955 ;;		 -> my_vprintf@buffer(64), 
  3956 ;;  precision       2   32[COMRAM] PTR int 
  3957 ;;		 -> my_vprintf@prec(2), 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  i               2   51[COMRAM] int 
  3960 ;;  k               2   49[COMRAM] int 
  3961 ;;  j               2   47[COMRAM] int 
  3962 ;;  len             2   45[COMRAM] int 
  3963 ;;  posE            2   43[COMRAM] int 
  3964 ;;  digS            2   41[COMRAM] int 
  3965 ;;  f               2   39[COMRAM] int 
  3966 ;;  p               2   37[COMRAM] int 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3976 ;;      Params:         4       0       0       0       0       0       0       0       0
  3977 ;;      Locals:        16       0       0       0       0       0       0       0       0
  3978 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3979 ;;      Totals:        23       0       0       0       0       0       0       0       0
  3980 ;;Total ram usage:       23 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    5
  3983 ;; This function calls:
  3984 ;;		_posc
  3985 ;;		_roundStr
  3986 ;;		_strlen
  3987 ;; This function is called by:
  3988 ;;		_my_vprintf
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text7
  3993  0013CA                     __ptext7:
  3994                           	opt callstack 0
  3995  0013CA                     _precG:
  3996                           	opt callstack 24
  3997  0013CA                     
  3998                           ;src/print/format.c: 240:     int i, j, k;;src/print/format.c: 241:     int len = strlen
      +                          (str);
  3999  0013CA  C01F  F004         	movff	precG@str,strlen@s
  4000  0013CE  C020  F005         	movff	precG@str+1,strlen@s+1
  4001  0013D2  ECCF  F027         	call	_strlen	;wreg free
  4002  0013D6  C004  F02E         	movff	?_strlen,precG@len
  4003  0013DA  C005  F02F         	movff	?_strlen+1,precG@len+1
  4004                           
  4005                           ;src/print/format.c: 242:     int posE = posc(str,'e');
  4006  0013DE  C01F  F008         	movff	precG@str,posc@str
  4007  0013E2  C020  F009         	movff	precG@str+1,posc@str+1
  4008  0013E6  0E65               	movlw	101
  4009  0013E8  6E0A               	movwf	posc@c^0,c
  4010  0013EA  ECE0  F025         	call	_posc	;wreg free
  4011  0013EE  C008  F02C         	movff	?_posc,precG@posE
  4012  0013F2  C009  F02D         	movff	?_posc+1,precG@posE+1
  4013                           
  4014                           ;src/print/format.c: 243:     int p = posc(str,'.');
  4015  0013F6  C01F  F008         	movff	precG@str,posc@str
  4016  0013FA  C020  F009         	movff	precG@str+1,posc@str+1
  4017  0013FE  0E2E               	movlw	46
  4018  001400  6E0A               	movwf	posc@c^0,c
  4019  001402  ECE0  F025         	call	_posc	;wreg free
  4020  001406  C008  F026         	movff	?_posc,precG@p
  4021  00140A  C009  F027         	movff	?_posc+1,precG@p+1
  4022  00140E                     
  4023                           ;src/print/format.c: 244:     int f = 0;
  4024  00140E  0E00               	movlw	0
  4025  001410  6E29               	movwf	(precG@f+1)^0,c
  4026  001412  0E00               	movlw	0
  4027  001414  6E28               	movwf	precG@f^0,c
  4028  001416                     
  4029                           ;src/print/format.c: 245:     int digS = 0;
  4030  001416  0E00               	movlw	0
  4031  001418  6E2B               	movwf	(precG@digS+1)^0,c
  4032  00141A  0E00               	movlw	0
  4033  00141C  6E2A               	movwf	precG@digS^0,c
  4034  00141E                     
  4035                           ;src/print/format.c: 247:     if ((*precision) == - 1)
  4036  00141E  C021  FFD9         	movff	precG@precision,fsr2l
  4037  001422  C022  FFDA         	movff	precG@precision+1,fsr2h
  4038  001426  28DE               	incf	postinc2,w,c
  4039  001428  E106               	bnz	u5351
  4040  00142A  28DE               	incf	postinc2,w,c
  4041  00142C  A4D8               	btfss	status,2,c
  4042  00142E  EF1B  F00A         	goto	u5351
  4043  001432  EF1D  F00A         	goto	u5350
  4044  001436                     u5351:
  4045  001436  EF25  F00A         	goto	l4911
  4046  00143A                     u5350:
  4047  00143A                     
  4048                           ;src/print/format.c: 248:         (*precision) = 6;
  4049  00143A  C021  FFD9         	movff	precG@precision,fsr2l
  4050  00143E  C022  FFDA         	movff	precG@precision+1,fsr2h
  4051  001442  0E06               	movlw	6
  4052  001444  6EDE               	movwf	postinc2,c
  4053  001446  0E00               	movlw	0
  4054  001448  6EDD               	movwf	postdec2,c
  4055  00144A                     l4911:
  4056                           
  4057                           ;src/print/format.c: 250:     k = (posE > 0)? posE : len;
  4058  00144A  BE2D               	btfsc	(precG@posE+1)^0,7,c
  4059  00144C  EF32  F00A         	goto	u5360
  4060  001450  502D               	movf	(precG@posE+1)^0,w,c
  4061  001452  E106               	bnz	u5361
  4062  001454  042C               	decf	precG@posE^0,w,c
  4063  001456  B0D8               	btfsc	status,0,c
  4064  001458  EF30  F00A         	goto	u5361
  4065  00145C  EF32  F00A         	goto	u5360
  4066  001460                     u5361:
  4067  001460  EF38  F00A         	goto	l461
  4068  001464                     u5360:
  4069  001464  C02E  F032         	movff	precG@len,precG@k
  4070  001468  C02F  F033         	movff	precG@len+1,precG@k+1
  4071  00146C  EF3C  F00A         	goto	l4915
  4072  001470                     l461:
  4073  001470  C02C  F032         	movff	precG@posE,precG@k
  4074  001474  C02D  F033         	movff	precG@posE+1,precG@k+1
  4075  001478                     l4915:
  4076                           
  4077                           ;src/print/format.c: 254:     for (i = 0; i <= len;i++) {
  4078  001478  0E00               	movlw	0
  4079  00147A  6E35               	movwf	(precG@i+1)^0,c
  4080  00147C  0E00               	movlw	0
  4081  00147E  6E34               	movwf	precG@i^0,c
  4082  001480  EF9A  F00A         	goto	l4937
  4083  001484                     l4917:
  4084                           
  4085                           ;src/print/format.c: 255:         if (str[i] >= 48 && str[i] <= 57) {
  4086  001484  5034               	movf	precG@i^0,w,c
  4087  001486  241F               	addwf	precG@str^0,w,c
  4088  001488  6ED9               	movwf	fsr2l,c
  4089  00148A  5035               	movf	(precG@i+1)^0,w,c
  4090  00148C  2020               	addwfc	(precG@str+1)^0,w,c
  4091  00148E  6EDA               	movwf	fsr2h,c
  4092  001490  0E2F               	movlw	47
  4093  001492  64DF               	cpfsgt	indf2,c
  4094  001494  EF4E  F00A         	goto	u5371
  4095  001498  EF50  F00A         	goto	u5370
  4096  00149C                     u5371:
  4097  00149C  EF87  F00A         	goto	l4931
  4098  0014A0                     u5370:
  4099  0014A0  5034               	movf	precG@i^0,w,c
  4100  0014A2  241F               	addwf	precG@str^0,w,c
  4101  0014A4  6ED9               	movwf	fsr2l,c
  4102  0014A6  5035               	movf	(precG@i+1)^0,w,c
  4103  0014A8  2020               	addwfc	(precG@str+1)^0,w,c
  4104  0014AA  6EDA               	movwf	fsr2h,c
  4105  0014AC  0E3A               	movlw	58
  4106  0014AE  60DF               	cpfslt	indf2,c
  4107  0014B0  EF5C  F00A         	goto	u5381
  4108  0014B4  EF5E  F00A         	goto	u5380
  4109  0014B8                     u5381:
  4110  0014B8  EF87  F00A         	goto	l4931
  4111  0014BC                     u5380:
  4112  0014BC                     
  4113                           ;src/print/format.c: 256:             if (!(str[i] == 48 && digS == 0)){
  4114  0014BC  5034               	movf	precG@i^0,w,c
  4115  0014BE  241F               	addwf	precG@str^0,w,c
  4116  0014C0  6ED9               	movwf	fsr2l,c
  4117  0014C2  5035               	movf	(precG@i+1)^0,w,c
  4118  0014C4  2020               	addwfc	(precG@str+1)^0,w,c
  4119  0014C6  6EDA               	movwf	fsr2h,c
  4120  0014C8  0E30               	movlw	48
  4121  0014CA  18DE               	xorwf	postinc2,w,c
  4122  0014CC  A4D8               	btfss	status,2,c
  4123  0014CE  EF6B  F00A         	goto	u5391
  4124  0014D2  EF6D  F00A         	goto	u5390
  4125  0014D6                     u5391:
  4126  0014D6  EF76  F00A         	goto	l4925
  4127  0014DA                     u5390:
  4128  0014DA  502A               	movf	precG@digS^0,w,c
  4129  0014DC  102B               	iorwf	(precG@digS+1)^0,w,c
  4130  0014DE  B4D8               	btfsc	status,2,c
  4131  0014E0  EF74  F00A         	goto	u5401
  4132  0014E4  EF76  F00A         	goto	u5400
  4133  0014E8                     u5401:
  4134  0014E8  EF98  F00A         	goto	l4935
  4135  0014EC                     u5400:
  4136  0014EC                     l4925:
  4137                           
  4138                           ;src/print/format.c: 257:                 digS++;
  4139  0014EC  4A2A               	infsnz	precG@digS^0,f,c
  4140  0014EE  2A2B               	incf	(precG@digS+1)^0,f,c
  4141  0014F0                     
  4142                           ;src/print/format.c: 258:                 if (digS == 1)
  4143  0014F0  042A               	decf	precG@digS^0,w,c
  4144  0014F2  102B               	iorwf	(precG@digS+1)^0,w,c
  4145  0014F4  A4D8               	btfss	status,2,c
  4146  0014F6  EF7F  F00A         	goto	u5411
  4147  0014FA  EF81  F00A         	goto	u5410
  4148  0014FE                     u5411:
  4149  0014FE  EF98  F00A         	goto	l4935
  4150  001502                     u5410:
  4151  001502                     
  4152                           ;src/print/format.c: 259:                     f = i;
  4153  001502  C034  F028         	movff	precG@i,precG@f
  4154  001506  C035  F029         	movff	precG@i+1,precG@f+1
  4155  00150A  EF98  F00A         	goto	l4935
  4156  00150E                     l4931:
  4157  00150E  5034               	movf	precG@i^0,w,c
  4158  001510  241F               	addwf	precG@str^0,w,c
  4159  001512  6ED9               	movwf	fsr2l,c
  4160  001514  5035               	movf	(precG@i+1)^0,w,c
  4161  001516  2020               	addwfc	(precG@str+1)^0,w,c
  4162  001518  6EDA               	movwf	fsr2h,c
  4163  00151A  0E65               	movlw	101
  4164  00151C  18DE               	xorwf	postinc2,w,c
  4165  00151E  A4D8               	btfss	status,2,c
  4166  001520  EF94  F00A         	goto	u5421
  4167  001524  EF96  F00A         	goto	u5420
  4168  001528                     u5421:
  4169  001528  EF98  F00A         	goto	l4935
  4170  00152C                     u5420:
  4171  00152C  EFA9  F00A         	goto	l4939
  4172  001530                     l4935:
  4173                           
  4174                           ;src/print/format.c: 264:     }
  4175  001530  4A34               	infsnz	precG@i^0,f,c
  4176  001532  2A35               	incf	(precG@i+1)^0,f,c
  4177  001534                     l4937:
  4178  001534  5034               	movf	precG@i^0,w,c
  4179  001536  5C2E               	subwf	precG@len^0,w,c
  4180  001538  502F               	movf	(precG@len+1)^0,w,c
  4181  00153A  0A80               	xorlw	128
  4182  00153C  6E23               	movwf	??_precG^0,c
  4183  00153E  5035               	movf	(precG@i+1)^0,w,c
  4184  001540  0A80               	xorlw	128
  4185  001542  5823               	subwfb	??_precG^0,w,c
  4186  001544  B0D8               	btfsc	status,0,c
  4187  001546  EFA7  F00A         	goto	u5431
  4188  00154A  EFA9  F00A         	goto	u5430
  4189  00154E                     u5431:
  4190  00154E  EF42  F00A         	goto	l4917
  4191  001552                     u5430:
  4192  001552                     l4939:
  4193                           
  4194                           ;src/print/format.c: 265:     for (i = k-1; i >= 0;i--) {
  4195  001552  0EFF               	movlw	255
  4196  001554  2432               	addwf	precG@k^0,w,c
  4197  001556  6E34               	movwf	precG@i^0,c
  4198  001558  0EFF               	movlw	255
  4199  00155A  2033               	addwfc	(precG@k+1)^0,w,c
  4200  00155C  6E35               	movwf	(precG@i+1)^0,c
  4201  00155E  BE35               	btfsc	(precG@i+1)^0,7,c
  4202  001560  EFB6  F00A         	goto	u5440
  4203  001564  EFB4  F00A         	goto	u5441
  4204  001568                     u5441:
  4205  001568  EFB8  F00A         	goto	l4943
  4206  00156C                     u5440:
  4207  00156C  EF03  F00B         	goto	l4957
  4208  001570                     l4943:
  4209                           
  4210                           ;src/print/format.c: 266:         if (str[i] == 48)
  4211  001570  5034               	movf	precG@i^0,w,c
  4212  001572  241F               	addwf	precG@str^0,w,c
  4213  001574  6ED9               	movwf	fsr2l,c
  4214  001576  5035               	movf	(precG@i+1)^0,w,c
  4215  001578  2020               	addwfc	(precG@str+1)^0,w,c
  4216  00157A  6EDA               	movwf	fsr2h,c
  4217  00157C  0E30               	movlw	48
  4218  00157E  18DE               	xorwf	postinc2,w,c
  4219  001580  A4D8               	btfss	status,2,c
  4220  001582  EFC5  F00A         	goto	u5451
  4221  001586  EFC7  F00A         	goto	u5450
  4222  00158A                     u5451:
  4223  00158A  EFCC  F00A         	goto	l4947
  4224  00158E                     u5450:
  4225  00158E                     
  4226                           ;src/print/format.c: 267:             digS--;
  4227  00158E  062A               	decf	precG@digS^0,f,c
  4228  001590  A0D8               	btfss	status,0,c
  4229  001592  062B               	decf	(precG@digS+1)^0,f,c
  4230  001594  EFF9  F00A         	goto	l4953
  4231  001598                     l4947:
  4232  001598  5034               	movf	precG@i^0,w,c
  4233  00159A  241F               	addwf	precG@str^0,w,c
  4234  00159C  6ED9               	movwf	fsr2l,c
  4235  00159E  5035               	movf	(precG@i+1)^0,w,c
  4236  0015A0  2020               	addwfc	(precG@str+1)^0,w,c
  4237  0015A2  6EDA               	movwf	fsr2h,c
  4238  0015A4  0E30               	movlw	48
  4239  0015A6  64DF               	cpfsgt	indf2,c
  4240  0015A8  EFD8  F00A         	goto	u5461
  4241  0015AC  EFDA  F00A         	goto	u5460
  4242  0015B0                     u5461:
  4243  0015B0  EFE8  F00A         	goto	l4951
  4244  0015B4                     u5460:
  4245  0015B4  5034               	movf	precG@i^0,w,c
  4246  0015B6  241F               	addwf	precG@str^0,w,c
  4247  0015B8  6ED9               	movwf	fsr2l,c
  4248  0015BA  5035               	movf	(precG@i+1)^0,w,c
  4249  0015BC  2020               	addwfc	(precG@str+1)^0,w,c
  4250  0015BE  6EDA               	movwf	fsr2h,c
  4251  0015C0  0E39               	movlw	57
  4252  0015C2  64DF               	cpfsgt	indf2,c
  4253  0015C4  EFE6  F00A         	goto	u5471
  4254  0015C8  EFE8  F00A         	goto	u5470
  4255  0015CC                     u5471:
  4256  0015CC  EF03  F00B         	goto	l4957
  4257  0015D0                     u5470:
  4258  0015D0                     l4951:
  4259  0015D0  5034               	movf	precG@i^0,w,c
  4260  0015D2  241F               	addwf	precG@str^0,w,c
  4261  0015D4  6ED9               	movwf	fsr2l,c
  4262  0015D6  5035               	movf	(precG@i+1)^0,w,c
  4263  0015D8  2020               	addwfc	(precG@str+1)^0,w,c
  4264  0015DA  6EDA               	movwf	fsr2h,c
  4265  0015DC  0E2E               	movlw	46
  4266  0015DE  18DE               	xorwf	postinc2,w,c
  4267  0015E0  A4D8               	btfss	status,2,c
  4268  0015E2  EFF5  F00A         	goto	u5481
  4269  0015E6  EFF7  F00A         	goto	u5480
  4270  0015EA                     u5481:
  4271  0015EA  EFF9  F00A         	goto	l4953
  4272  0015EE                     u5480:
  4273  0015EE  EF03  F00B         	goto	l4957
  4274  0015F2                     l4953:
  4275                           
  4276                           ;src/print/format.c: 270:     }
  4277  0015F2  0634               	decf	precG@i^0,f,c
  4278  0015F4  A0D8               	btfss	status,0,c
  4279  0015F6  0635               	decf	(precG@i+1)^0,f,c
  4280  0015F8  BE35               	btfsc	(precG@i+1)^0,7,c
  4281  0015FA  EF03  F00B         	goto	u5490
  4282  0015FE  EF01  F00B         	goto	u5491
  4283  001602                     u5491:
  4284  001602  EFB8  F00A         	goto	l4943
  4285  001606                     u5490:
  4286  001606                     l4957:
  4287                           
  4288                           ;src/print/format.c: 272:     if (digS > (*precision)) {
  4289  001606  C021  FFD9         	movff	precG@precision,fsr2l
  4290  00160A  C022  FFDA         	movff	precG@precision+1,fsr2h
  4291  00160E  502A               	movf	precG@digS^0,w,c
  4292  001610  5CDE               	subwf	postinc2,w,c
  4293  001612  50DE               	movf	postinc2,w,c
  4294  001614  0A80               	xorlw	128
  4295  001616  6E25               	movwf	(??_precG+2)^0,c
  4296  001618  502B               	movf	(precG@digS+1)^0,w,c
  4297  00161A  0A80               	xorlw	128
  4298  00161C  5825               	subwfb	(??_precG+2)^0,w,c
  4299  00161E  B0D8               	btfsc	status,0,c
  4300  001620  EF14  F00B         	goto	u5501
  4301  001624  EF16  F00B         	goto	u5500
  4302  001628                     u5501:
  4303  001628  EF90  F00C         	goto	l507
  4304  00162C                     u5500:
  4305  00162C                     
  4306                           ;src/print/format.c: 273:         i = f + (*precision);
  4307  00162C  C021  FFD9         	movff	precG@precision,fsr2l
  4308  001630  C022  FFDA         	movff	precG@precision+1,fsr2h
  4309  001634  CFDE F023          	movff	postinc2,??_precG
  4310  001638  CFDD F024          	movff	postdec2,??_precG+1
  4311  00163C  5028               	movf	precG@f^0,w,c
  4312  00163E  2423               	addwf	??_precG^0,w,c
  4313  001640  6E34               	movwf	precG@i^0,c
  4314  001642  5029               	movf	(precG@f+1)^0,w,c
  4315  001644  2024               	addwfc	(??_precG+1)^0,w,c
  4316  001646  6E35               	movwf	(precG@i+1)^0,c
  4317  001648                     
  4318                           ;src/print/format.c: 275:         if (f < p && i >= p)
  4319  001648  5026               	movf	precG@p^0,w,c
  4320  00164A  5C28               	subwf	precG@f^0,w,c
  4321  00164C  5029               	movf	(precG@f+1)^0,w,c
  4322  00164E  0A80               	xorlw	128
  4323  001650  6E23               	movwf	??_precG^0,c
  4324  001652  5027               	movf	(precG@p+1)^0,w,c
  4325  001654  0A80               	xorlw	128
  4326  001656  5823               	subwfb	??_precG^0,w,c
  4327  001658  B0D8               	btfsc	status,0,c
  4328  00165A  EF31  F00B         	goto	u5511
  4329  00165E  EF33  F00B         	goto	u5510
  4330  001662                     u5511:
  4331  001662  EF44  F00B         	goto	l4967
  4332  001666                     u5510:
  4333  001666  5026               	movf	precG@p^0,w,c
  4334  001668  5C34               	subwf	precG@i^0,w,c
  4335  00166A  5035               	movf	(precG@i+1)^0,w,c
  4336  00166C  0A80               	xorlw	128
  4337  00166E  6E23               	movwf	??_precG^0,c
  4338  001670  5027               	movf	(precG@p+1)^0,w,c
  4339  001672  0A80               	xorlw	128
  4340  001674  5823               	subwfb	??_precG^0,w,c
  4341  001676  A0D8               	btfss	status,0,c
  4342  001678  EF40  F00B         	goto	u5521
  4343  00167C  EF42  F00B         	goto	u5520
  4344  001680                     u5521:
  4345  001680  EF44  F00B         	goto	l4967
  4346  001684                     u5520:
  4347  001684                     
  4348                           ;src/print/format.c: 276:             i++;
  4349  001684  4A34               	infsnz	precG@i^0,f,c
  4350  001686  2A35               	incf	(precG@i+1)^0,f,c
  4351  001688                     l4967:
  4352                           
  4353                           ;src/print/format.c: 278:         j = k - i;
  4354  001688  5034               	movf	precG@i^0,w,c
  4355  00168A  5C32               	subwf	precG@k^0,w,c
  4356  00168C  6E30               	movwf	precG@j^0,c
  4357  00168E  5035               	movf	(precG@i+1)^0,w,c
  4358  001690  5833               	subwfb	(precG@k+1)^0,w,c
  4359  001692  6E31               	movwf	(precG@j+1)^0,c
  4360  001694                     
  4361                           ;src/print/format.c: 284:         if (j > 0) {
  4362  001694  BE31               	btfsc	(precG@j+1)^0,7,c
  4363  001696  EF55  F00B         	goto	u5531
  4364  00169A  5031               	movf	(precG@j+1)^0,w,c
  4365  00169C  E108               	bnz	u5530
  4366  00169E  0430               	decf	precG@j^0,w,c
  4367  0016A0  A0D8               	btfss	status,0,c
  4368  0016A2  EF55  F00B         	goto	u5531
  4369  0016A6  EF57  F00B         	goto	u5530
  4370  0016AA                     u5531:
  4371  0016AA  EFE2  F00B         	goto	l4995
  4372  0016AE                     u5530:
  4373  0016AE                     
  4374                           ;src/print/format.c: 286:             if (roundStr(str, posE, i) == 1) {
  4375  0016AE  C01F  F00E         	movff	precG@str,roundStr@decnum
  4376  0016B2  C020  F00F         	movff	precG@str+1,roundStr@decnum+1
  4377  0016B6  C02C  F010         	movff	precG@posE,roundStr@e
  4378  0016BA  C02D  F011         	movff	precG@posE+1,roundStr@e+1
  4379  0016BE  C034  F012         	movff	precG@i,roundStr@prn
  4380  0016C2  C035  F013         	movff	precG@i+1,roundStr@prn+1
  4381  0016C6  EC6C  F014         	call	_roundStr	;wreg free
  4382  0016CA  040E               	decf	?_roundStr^0,w,c
  4383  0016CC  100F               	iorwf	(?_roundStr+1)^0,w,c
  4384  0016CE  A4D8               	btfss	status,2,c
  4385  0016D0  EF6C  F00B         	goto	u5541
  4386  0016D4  EF6E  F00B         	goto	u5540
  4387  0016D8                     u5541:
  4388  0016D8  EFB7  F00B         	goto	l4987
  4389  0016DC                     u5540:
  4390  0016DC                     
  4391                           ;src/print/format.c: 287:                 for (k = 0; k <= strlen(str);i++) {
  4392  0016DC  0E00               	movlw	0
  4393  0016DE  6E33               	movwf	(precG@k+1)^0,c
  4394  0016E0  0E00               	movlw	0
  4395  0016E2  6E32               	movwf	precG@k^0,c
  4396  0016E4  EF98  F00B         	goto	l4983
  4397  0016E8                     l4975:
  4398                           
  4399                           ;src/print/format.c: 288:                     if (str[k] >= 49 && str[k] <= 57) {
  4400  0016E8  5032               	movf	precG@k^0,w,c
  4401  0016EA  241F               	addwf	precG@str^0,w,c
  4402  0016EC  6ED9               	movwf	fsr2l,c
  4403  0016EE  5033               	movf	(precG@k+1)^0,w,c
  4404  0016F0  2020               	addwfc	(precG@str+1)^0,w,c
  4405  0016F2  6EDA               	movwf	fsr2h,c
  4406  0016F4  0E30               	movlw	48
  4407  0016F6  64DF               	cpfsgt	indf2,c
  4408  0016F8  EF80  F00B         	goto	u5551
  4409  0016FC  EF82  F00B         	goto	u5550
  4410  001700                     u5551:
  4411  001700  EF96  F00B         	goto	l4981
  4412  001704                     u5550:
  4413  001704  5032               	movf	precG@k^0,w,c
  4414  001706  241F               	addwf	precG@str^0,w,c
  4415  001708  6ED9               	movwf	fsr2l,c
  4416  00170A  5033               	movf	(precG@k+1)^0,w,c
  4417  00170C  2020               	addwfc	(precG@str+1)^0,w,c
  4418  00170E  6EDA               	movwf	fsr2h,c
  4419  001710  0E3A               	movlw	58
  4420  001712  60DF               	cpfslt	indf2,c
  4421  001714  EF8E  F00B         	goto	u5561
  4422  001718  EF90  F00B         	goto	u5560
  4423  00171C                     u5561:
  4424  00171C  EF96  F00B         	goto	l4981
  4425  001720                     u5560:
  4426  001720                     
  4427                           ;src/print/format.c: 289:                             f = k;
  4428  001720  C032  F028         	movff	precG@k,precG@f
  4429  001724  C033  F029         	movff	precG@k+1,precG@f+1
  4430                           
  4431                           ;src/print/format.c: 290:                             break;
  4432  001728  EFA9  F00B         	goto	l4985
  4433  00172C                     l4981:
  4434                           
  4435                           ;src/print/format.c: 292:                 }
  4436  00172C  4A34               	infsnz	precG@i^0,f,c
  4437  00172E  2A35               	incf	(precG@i+1)^0,f,c
  4438  001730                     l4983:
  4439  001730  C01F  F004         	movff	precG@str,strlen@s
  4440  001734  C020  F005         	movff	precG@str+1,strlen@s+1
  4441  001738  ECCF  F027         	call	_strlen	;wreg free
  4442  00173C  5032               	movf	precG@k^0,w,c
  4443  00173E  5C04               	subwf	?_strlen^0,w,c
  4444  001740  5033               	movf	(precG@k+1)^0,w,c
  4445  001742  5805               	subwfb	(?_strlen+1)^0,w,c
  4446  001744  B0D8               	btfsc	status,0,c
  4447  001746  EFA7  F00B         	goto	u5571
  4448  00174A  EFA9  F00B         	goto	u5570
  4449  00174E                     u5571:
  4450  00174E  EF74  F00B         	goto	l4975
  4451  001752                     u5570:
  4452  001752                     l4985:
  4453                           
  4454                           ;src/print/format.c: 293:                 i = f + (*precision);
  4455  001752  C021  FFD9         	movff	precG@precision,fsr2l
  4456  001756  C022  FFDA         	movff	precG@precision+1,fsr2h
  4457  00175A  CFDE F023          	movff	postinc2,??_precG
  4458  00175E  CFDD F024          	movff	postdec2,??_precG+1
  4459  001762  5028               	movf	precG@f^0,w,c
  4460  001764  2423               	addwf	??_precG^0,w,c
  4461  001766  6E34               	movwf	precG@i^0,c
  4462  001768  5029               	movf	(precG@f+1)^0,w,c
  4463  00176A  2024               	addwfc	(??_precG+1)^0,w,c
  4464  00176C  6E35               	movwf	(precG@i+1)^0,c
  4465  00176E                     l4987:
  4466                           
  4467                           ;src/print/format.c: 295:             for (k = i; k < len; k++)
  4468  00176E  C034  F032         	movff	precG@i,precG@k
  4469  001772  C035  F033         	movff	precG@i+1,precG@k+1
  4470  001776  EFD3  F00B         	goto	l4993
  4471  00177A                     l4989:
  4472                           
  4473                           ;src/print/format.c: 296:                 str[k] = str[k+j];
  4474  00177A  5032               	movf	precG@k^0,w,c
  4475  00177C  241F               	addwf	precG@str^0,w,c
  4476  00177E  6E23               	movwf	??_precG^0,c
  4477  001780  5033               	movf	(precG@k+1)^0,w,c
  4478  001782  2020               	addwfc	(precG@str+1)^0,w,c
  4479  001784  6E24               	movwf	(??_precG+1)^0,c
  4480  001786  5030               	movf	precG@j^0,w,c
  4481  001788  2423               	addwf	??_precG^0,w,c
  4482  00178A  6ED9               	movwf	fsr2l,c
  4483  00178C  5031               	movf	(precG@j+1)^0,w,c
  4484  00178E  2024               	addwfc	(??_precG+1)^0,w,c
  4485  001790  6EDA               	movwf	fsr2h,c
  4486  001792  5032               	movf	precG@k^0,w,c
  4487  001794  241F               	addwf	precG@str^0,w,c
  4488  001796  6EE1               	movwf	fsr1l,c
  4489  001798  5033               	movf	(precG@k+1)^0,w,c
  4490  00179A  2020               	addwfc	(precG@str+1)^0,w,c
  4491  00179C  6EE2               	movwf	fsr1h,c
  4492  00179E  CFDF FFE7          	movff	indf2,indf1
  4493  0017A2  4A32               	infsnz	precG@k^0,f,c
  4494  0017A4  2A33               	incf	(precG@k+1)^0,f,c
  4495  0017A6                     l4993:
  4496  0017A6  502E               	movf	precG@len^0,w,c
  4497  0017A8  5C32               	subwf	precG@k^0,w,c
  4498  0017AA  5033               	movf	(precG@k+1)^0,w,c
  4499  0017AC  0A80               	xorlw	128
  4500  0017AE  6E23               	movwf	??_precG^0,c
  4501  0017B0  502F               	movf	(precG@len+1)^0,w,c
  4502  0017B2  0A80               	xorlw	128
  4503  0017B4  5823               	subwfb	??_precG^0,w,c
  4504  0017B6  A0D8               	btfss	status,0,c
  4505  0017B8  EFE0  F00B         	goto	u5581
  4506  0017BC  EFE2  F00B         	goto	u5580
  4507  0017C0                     u5581:
  4508  0017C0  EFBD  F00B         	goto	l4989
  4509  0017C4                     u5580:
  4510  0017C4                     l4995:
  4511                           
  4512                           ;src/print/format.c: 300:         if (numeral == 0) {
  4513  0017C4  504D               	movf	_numeral^0,w,c
  4514  0017C6  A4D8               	btfss	status,2,c
  4515  0017C8  EFE8  F00B         	goto	u5591
  4516  0017CC  EFEA  F00B         	goto	u5590
  4517  0017D0                     u5591:
  4518  0017D0  EF90  F00C         	goto	l507
  4519  0017D4                     u5590:
  4520  0017D4                     
  4521                           ;src/print/format.c: 301:             p = posc(str,'.');
  4522  0017D4  C01F  F008         	movff	precG@str,posc@str
  4523  0017D8  C020  F009         	movff	precG@str+1,posc@str+1
  4524  0017DC  0E2E               	movlw	46
  4525  0017DE  6E0A               	movwf	posc@c^0,c
  4526  0017E0  ECE0  F025         	call	_posc	;wreg free
  4527  0017E4  C008  F026         	movff	?_posc,precG@p
  4528  0017E8  C009  F027         	movff	?_posc+1,precG@p+1
  4529                           
  4530                           ;src/print/format.c: 302:             len = strlen(str);
  4531  0017EC  C01F  F004         	movff	precG@str,strlen@s
  4532  0017F0  C020  F005         	movff	precG@str+1,strlen@s+1
  4533  0017F4  ECCF  F027         	call	_strlen	;wreg free
  4534  0017F8  C004  F02E         	movff	?_strlen,precG@len
  4535  0017FC  C005  F02F         	movff	?_strlen+1,precG@len+1
  4536                           
  4537                           ;src/print/format.c: 303:             posE = posc(str,'e');
  4538  001800  C01F  F008         	movff	precG@str,posc@str
  4539  001804  C020  F009         	movff	precG@str+1,posc@str+1
  4540  001808  0E65               	movlw	101
  4541  00180A  6E0A               	movwf	posc@c^0,c
  4542  00180C  ECE0  F025         	call	_posc	;wreg free
  4543  001810  C008  F02C         	movff	?_posc,precG@posE
  4544  001814  C009  F02D         	movff	?_posc+1,precG@posE+1
  4545  001818                     
  4546                           ;src/print/format.c: 304:             k = (posE > 0)? posE : len;
  4547  001818  BE2D               	btfsc	(precG@posE+1)^0,7,c
  4548  00181A  EF19  F00C         	goto	u5600
  4549  00181E  502D               	movf	(precG@posE+1)^0,w,c
  4550  001820  E106               	bnz	u5601
  4551  001822  042C               	decf	precG@posE^0,w,c
  4552  001824  B0D8               	btfsc	status,0,c
  4553  001826  EF17  F00C         	goto	u5601
  4554  00182A  EF19  F00C         	goto	u5600
  4555  00182E                     u5601:
  4556  00182E  EF1F  F00C         	goto	l496
  4557  001832                     u5600:
  4558  001832  C02E  F032         	movff	precG@len,precG@k
  4559  001836  C02F  F033         	movff	precG@len+1,precG@k+1
  4560  00183A  EF23  F00C         	goto	l5003
  4561  00183E                     l496:
  4562  00183E  C02C  F032         	movff	precG@posE,precG@k
  4563  001842  C02D  F033         	movff	precG@posE+1,precG@k+1
  4564  001846                     l5003:
  4565                           
  4566                           ;src/print/format.c: 306:             for (j = k-1; j >= p; j--){
  4567  001846  0EFF               	movlw	255
  4568  001848  2432               	addwf	precG@k^0,w,c
  4569  00184A  6E30               	movwf	precG@j^0,c
  4570  00184C  0EFF               	movlw	255
  4571  00184E  2033               	addwfc	(precG@k+1)^0,w,c
  4572  001850  6E31               	movwf	(precG@j+1)^0,c
  4573  001852  EF81  F00C         	goto	l5025
  4574  001856                     l5005:
  4575                           
  4576                           ;src/print/format.c: 307:                 if (str[j] >= 49 && str[j] <= 57)
  4577  001856  5030               	movf	precG@j^0,w,c
  4578  001858  241F               	addwf	precG@str^0,w,c
  4579  00185A  6ED9               	movwf	fsr2l,c
  4580  00185C  5031               	movf	(precG@j+1)^0,w,c
  4581  00185E  2020               	addwfc	(precG@str+1)^0,w,c
  4582  001860  6EDA               	movwf	fsr2h,c
  4583  001862  0E30               	movlw	48
  4584  001864  64DF               	cpfsgt	indf2,c
  4585  001866  EF37  F00C         	goto	u5611
  4586  00186A  EF39  F00C         	goto	u5610
  4587  00186E                     u5611:
  4588  00186E  EF49  F00C         	goto	l5013
  4589  001872                     u5610:
  4590  001872  5030               	movf	precG@j^0,w,c
  4591  001874  241F               	addwf	precG@str^0,w,c
  4592  001876  6ED9               	movwf	fsr2l,c
  4593  001878  5031               	movf	(precG@j+1)^0,w,c
  4594  00187A  2020               	addwfc	(precG@str+1)^0,w,c
  4595  00187C  6EDA               	movwf	fsr2h,c
  4596  00187E  0E3A               	movlw	58
  4597  001880  60DF               	cpfslt	indf2,c
  4598  001882  EF45  F00C         	goto	u5621
  4599  001886  EF47  F00C         	goto	u5620
  4600  00188A                     u5621:
  4601  00188A  EF49  F00C         	goto	l5013
  4602  00188E                     u5620:
  4603  00188E  EF90  F00C         	goto	l507
  4604  001892                     l5013:
  4605                           
  4606                           ;src/print/format.c: 310:                     len = strlen(str);
  4607  001892  C01F  F004         	movff	precG@str,strlen@s
  4608  001896  C020  F005         	movff	precG@str+1,strlen@s+1
  4609  00189A  ECCF  F027         	call	_strlen	;wreg free
  4610  00189E  C004  F02E         	movff	?_strlen,precG@len
  4611  0018A2  C005  F02F         	movff	?_strlen+1,precG@len+1
  4612  0018A6                     
  4613                           ;src/print/format.c: 311:                     for(i = j; i <= len; i++) {
  4614  0018A6  C030  F034         	movff	precG@j,precG@i
  4615  0018AA  C031  F035         	movff	precG@j+1,precG@i+1
  4616  0018AE  EF6F  F00C         	goto	l5021
  4617  0018B2                     l5017:
  4618                           
  4619                           ;src/print/format.c: 312:                         str[i] = str[i+1];
  4620  0018B2  5034               	movf	precG@i^0,w,c
  4621  0018B4  241F               	addwf	precG@str^0,w,c
  4622  0018B6  6E23               	movwf	??_precG^0,c
  4623  0018B8  5035               	movf	(precG@i+1)^0,w,c
  4624  0018BA  2020               	addwfc	(precG@str+1)^0,w,c
  4625  0018BC  6E24               	movwf	(??_precG+1)^0,c
  4626  0018BE  0E01               	movlw	1
  4627  0018C0  2423               	addwf	??_precG^0,w,c
  4628  0018C2  6ED9               	movwf	fsr2l,c
  4629  0018C4  0E00               	movlw	0
  4630  0018C6  2024               	addwfc	(??_precG+1)^0,w,c
  4631  0018C8  6EDA               	movwf	fsr2h,c
  4632  0018CA  5034               	movf	precG@i^0,w,c
  4633  0018CC  241F               	addwf	precG@str^0,w,c
  4634  0018CE  6EE1               	movwf	fsr1l,c
  4635  0018D0  5035               	movf	(precG@i+1)^0,w,c
  4636  0018D2  2020               	addwfc	(precG@str+1)^0,w,c
  4637  0018D4  6EE2               	movwf	fsr1h,c
  4638  0018D6  CFDF FFE7          	movff	indf2,indf1
  4639  0018DA                     
  4640                           ;src/print/format.c: 313:                     }
  4641  0018DA  4A34               	infsnz	precG@i^0,f,c
  4642  0018DC  2A35               	incf	(precG@i+1)^0,f,c
  4643  0018DE                     l5021:
  4644  0018DE  5034               	movf	precG@i^0,w,c
  4645  0018E0  5C2E               	subwf	precG@len^0,w,c
  4646  0018E2  502F               	movf	(precG@len+1)^0,w,c
  4647  0018E4  0A80               	xorlw	128
  4648  0018E6  6E23               	movwf	??_precG^0,c
  4649  0018E8  5035               	movf	(precG@i+1)^0,w,c
  4650  0018EA  0A80               	xorlw	128
  4651  0018EC  5823               	subwfb	??_precG^0,w,c
  4652  0018EE  B0D8               	btfsc	status,0,c
  4653  0018F0  EF7C  F00C         	goto	u5631
  4654  0018F4  EF7E  F00C         	goto	u5630
  4655  0018F8                     u5631:
  4656  0018F8  EF59  F00C         	goto	l5017
  4657  0018FC                     u5630:
  4658  0018FC                     
  4659                           ;src/print/format.c: 315:             }
  4660  0018FC  0630               	decf	precG@j^0,f,c
  4661  0018FE  A0D8               	btfss	status,0,c
  4662  001900  0631               	decf	(precG@j+1)^0,f,c
  4663  001902                     l5025:
  4664  001902  5026               	movf	precG@p^0,w,c
  4665  001904  5C30               	subwf	precG@j^0,w,c
  4666  001906  5031               	movf	(precG@j+1)^0,w,c
  4667  001908  0A80               	xorlw	128
  4668  00190A  6E23               	movwf	??_precG^0,c
  4669  00190C  5027               	movf	(precG@p+1)^0,w,c
  4670  00190E  0A80               	xorlw	128
  4671  001910  5823               	subwfb	??_precG^0,w,c
  4672  001912  B0D8               	btfsc	status,0,c
  4673  001914  EF8E  F00C         	goto	u5641
  4674  001918  EF90  F00C         	goto	u5640
  4675  00191C                     u5641:
  4676  00191C  EF2B  F00C         	goto	l5005
  4677  001920                     u5640:
  4678  001920                     l507:
  4679  001920  0012               	return		;funcret
  4680  001922                     __end_of_precG:
  4681                           	opt callstack 0
  4682                           
  4683 ;; *************** function _precF *****************
  4684 ;; Defined at:
  4685 ;;		line 173 in file "src/print/format.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  str             2   30[COMRAM] PTR unsigned char 
  4688 ;;		 -> my_vprintf@buffer(64), 
  4689 ;;  precision       2   32[COMRAM] PTR int 
  4690 ;;		 -> my_vprintf@prec(2), 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  k               2   45[COMRAM] int 
  4693 ;;  len             2   43[COMRAM] int 
  4694 ;;  i               2   41[COMRAM] int 
  4695 ;;  p               2   39[COMRAM] int 
  4696 ;;  j               2   37[COMRAM] int 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4706 ;;      Params:         4       0       0       0       0       0       0       0       0
  4707 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4708 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4709 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4710 ;;Total ram usage:       17 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    5
  4713 ;; This function calls:
  4714 ;;		_posc
  4715 ;;		_roundStr
  4716 ;;		_searchc
  4717 ;;		_strlen
  4718 ;; This function is called by:
  4719 ;;		_my_vprintf
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text8
  4724  003528                     __ptext8:
  4725                           	opt callstack 0
  4726  003528                     _precF:
  4727                           	opt callstack 24
  4728  003528                     
  4729                           ;src/print/format.c: 174:     int i, j, k;;src/print/format.c: 175:     int len = strlen
      +                          (str);
  4730  003528  C01F  F004         	movff	precF@str,strlen@s
  4731  00352C  C020  F005         	movff	precF@str+1,strlen@s+1
  4732  003530  ECCF  F027         	call	_strlen	;wreg free
  4733  003534  C004  F02C         	movff	?_strlen,precF@len
  4734  003538  C005  F02D         	movff	?_strlen+1,precF@len+1
  4735                           
  4736                           ;src/print/format.c: 176:     int p = posc(str,'.');
  4737  00353C  C01F  F008         	movff	precF@str,posc@str
  4738  003540  C020  F009         	movff	precF@str+1,posc@str+1
  4739  003544  0E2E               	movlw	46
  4740  003546  6E0A               	movwf	posc@c^0,c
  4741  003548  ECE0  F025         	call	_posc	;wreg free
  4742  00354C  C008  F028         	movff	?_posc,precF@p
  4743  003550  C009  F029         	movff	?_posc+1,precF@p+1
  4744  003554                     
  4745                           ;src/print/format.c: 179:     if ((*precision) < 0)
  4746  003554  C021  FFD9         	movff	precF@precision,fsr2l
  4747  003558  C022  FFDA         	movff	precF@precision+1,fsr2h
  4748  00355C  0E01               	movlw	1
  4749  00355E  BEDB               	btfsc	plusw2,7,c
  4750  003560  EFB6  F01A         	goto	u5190
  4751  003564  EFB4  F01A         	goto	u5191
  4752  003568                     u5191:
  4753  003568  EFBE  F01A         	goto	l4827
  4754  00356C                     u5190:
  4755  00356C                     
  4756                           ;src/print/format.c: 180:         (*precision) = 4;
  4757  00356C  C021  FFD9         	movff	precF@precision,fsr2l
  4758  003570  C022  FFDA         	movff	precF@precision+1,fsr2h
  4759  003574  0E04               	movlw	4
  4760  003576  6EDE               	movwf	postinc2,c
  4761  003578  0E00               	movlw	0
  4762  00357A  6EDD               	movwf	postdec2,c
  4763  00357C                     l4827:
  4764                           
  4765                           ;src/print/format.c: 182:     i = p + (*precision) + 1;
  4766  00357C  C021  FFD9         	movff	precF@precision,fsr2l
  4767  003580  C022  FFDA         	movff	precF@precision+1,fsr2h
  4768  003584  CFDE F023          	movff	postinc2,??_precF
  4769  003588  CFDD F024          	movff	postdec2,??_precF+1
  4770  00358C  5028               	movf	precF@p^0,w,c
  4771  00358E  2623               	addwf	??_precF^0,f,c
  4772  003590  5029               	movf	(precF@p+1)^0,w,c
  4773  003592  2224               	addwfc	(??_precF+1)^0,f,c
  4774  003594  0E01               	movlw	1
  4775  003596  2423               	addwf	??_precF^0,w,c
  4776  003598  6E2A               	movwf	precF@i^0,c
  4777  00359A  0E00               	movlw	0
  4778  00359C  2024               	addwfc	(??_precF+1)^0,w,c
  4779  00359E  6E2B               	movwf	(precF@i+1)^0,c
  4780  0035A0                     
  4781                           ;src/print/format.c: 183:     j = len - i;
  4782  0035A0  502A               	movf	precF@i^0,w,c
  4783  0035A2  5C2C               	subwf	precF@len^0,w,c
  4784  0035A4  6E26               	movwf	precF@j^0,c
  4785  0035A6  502B               	movf	(precF@i+1)^0,w,c
  4786  0035A8  582D               	subwfb	(precF@len+1)^0,w,c
  4787  0035AA  6E27               	movwf	(precF@j+1)^0,c
  4788  0035AC                     
  4789                           ;src/print/format.c: 186:     if(j > 0) {
  4790  0035AC  BE27               	btfsc	(precF@j+1)^0,7,c
  4791  0035AE  EFE1  F01A         	goto	u5201
  4792  0035B2  5027               	movf	(precF@j+1)^0,w,c
  4793  0035B4  E108               	bnz	u5200
  4794  0035B6  0426               	decf	precF@j^0,w,c
  4795  0035B8  A0D8               	btfss	status,0,c
  4796  0035BA  EFE1  F01A         	goto	u5201
  4797  0035BE  EFE3  F01A         	goto	u5200
  4798  0035C2                     u5201:
  4799  0035C2  EF3E  F01B         	goto	l4847
  4800  0035C6                     u5200:
  4801  0035C6                     
  4802                           ;src/print/format.c: 187:         roundStr(str, -1, i);
  4803  0035C6  C01F  F00E         	movff	precF@str,roundStr@decnum
  4804  0035CA  C020  F00F         	movff	precF@str+1,roundStr@decnum+1
  4805  0035CE  0EFF               	movlw	255
  4806  0035D0  6E11               	movwf	(roundStr@e+1)^0,c
  4807  0035D2  6810               	setf	roundStr@e^0,c
  4808  0035D4  C02A  F012         	movff	precF@i,roundStr@prn
  4809  0035D8  C02B  F013         	movff	precF@i+1,roundStr@prn+1
  4810  0035DC  EC6C  F014         	call	_roundStr	;wreg free
  4811  0035E0                     
  4812                           ;src/print/format.c: 188:         i = ((*precision) == 0 && numeral == 0)? p : (p + (*pr
      +                          ecision) + 1);
  4813  0035E0  C021  FFD9         	movff	precF@precision,fsr2l
  4814  0035E4  C022  FFDA         	movff	precF@precision+1,fsr2h
  4815  0035E8  50DE               	movf	postinc2,w,c
  4816  0035EA  10DE               	iorwf	postinc2,w,c
  4817  0035EC  A4D8               	btfss	status,2,c
  4818  0035EE  EFFB  F01A         	goto	u5211
  4819  0035F2  EFFD  F01A         	goto	u5210
  4820  0035F6                     u5211:
  4821  0035F6  EF05  F01B         	goto	l4839
  4822  0035FA                     u5210:
  4823  0035FA  504D               	movf	_numeral^0,w,c
  4824  0035FC  B4D8               	btfsc	status,2,c
  4825  0035FE  EF03  F01B         	goto	u5221
  4826  003602  EF05  F01B         	goto	u5220
  4827  003606                     u5221:
  4828  003606  EF19  F01B         	goto	l427
  4829  00360A                     u5220:
  4830  00360A                     l4839:
  4831  00360A  C021  FFD9         	movff	precF@precision,fsr2l
  4832  00360E  C022  FFDA         	movff	precF@precision+1,fsr2h
  4833  003612  CFDE F023          	movff	postinc2,??_precF
  4834  003616  CFDD F024          	movff	postdec2,??_precF+1
  4835  00361A  5028               	movf	precF@p^0,w,c
  4836  00361C  2623               	addwf	??_precF^0,f,c
  4837  00361E  5029               	movf	(precF@p+1)^0,w,c
  4838  003620  2224               	addwfc	(??_precF+1)^0,f,c
  4839  003622  0E01               	movlw	1
  4840  003624  2423               	addwf	??_precF^0,w,c
  4841  003626  6E2A               	movwf	precF@i^0,c
  4842  003628  0E00               	movlw	0
  4843  00362A  2024               	addwfc	(??_precF+1)^0,w,c
  4844  00362C  6E2B               	movwf	(precF@i+1)^0,c
  4845  00362E  EF1D  F01B         	goto	l429
  4846  003632                     l427:
  4847  003632  C028  F02A         	movff	precF@p,precF@i
  4848  003636  C029  F02B         	movff	precF@p+1,precF@i+1
  4849  00363A                     l429:
  4850                           
  4851                           ;src/print/format.c: 189:         for (k = i; k < len; k++)
  4852  00363A  C02A  F02E         	movff	precF@i,precF@k
  4853  00363E  C02B  F02F         	movff	precF@i+1,precF@k+1
  4854  003642  EF2D  F01B         	goto	l4845
  4855  003646                     l4841:
  4856                           
  4857                           ;src/print/format.c: 190:             str[k] = 0;
  4858  003646  502E               	movf	precF@k^0,w,c
  4859  003648  241F               	addwf	precF@str^0,w,c
  4860  00364A  6ED9               	movwf	fsr2l,c
  4861  00364C  502F               	movf	(precF@k+1)^0,w,c
  4862  00364E  2020               	addwfc	(precF@str+1)^0,w,c
  4863  003650  6EDA               	movwf	fsr2h,c
  4864  003652  0E00               	movlw	0
  4865  003654  6EDF               	movwf	indf2,c
  4866  003656  4A2E               	infsnz	precF@k^0,f,c
  4867  003658  2A2F               	incf	(precF@k+1)^0,f,c
  4868  00365A                     l4845:
  4869  00365A  502C               	movf	precF@len^0,w,c
  4870  00365C  5C2E               	subwf	precF@k^0,w,c
  4871  00365E  502F               	movf	(precF@k+1)^0,w,c
  4872  003660  0A80               	xorlw	128
  4873  003662  6E23               	movwf	??_precF^0,c
  4874  003664  502D               	movf	(precF@len+1)^0,w,c
  4875  003666  0A80               	xorlw	128
  4876  003668  5823               	subwfb	??_precF^0,w,c
  4877  00366A  A0D8               	btfss	status,0,c
  4878  00366C  EF3A  F01B         	goto	u5231
  4879  003670  EF3C  F01B         	goto	u5230
  4880  003674                     u5231:
  4881  003674  EF23  F01B         	goto	l4841
  4882  003678                     u5230:
  4883  003678  EF7A  F01B         	goto	l440
  4884  00367C                     l4847:
  4885  00367C  BE27               	btfsc	(precF@j+1)^0,7,c
  4886  00367E  EF45  F01B         	goto	u5240
  4887  003682  EF43  F01B         	goto	u5241
  4888  003686                     u5241:
  4889  003686  EF7A  F01B         	goto	l440
  4890  00368A                     u5240:
  4891  00368A  C01F  F008         	movff	precF@str,searchc@str
  4892  00368E  C020  F009         	movff	precF@str+1,searchc@str+1
  4893  003692  0E2E               	movlw	46
  4894  003694  6E0A               	movwf	searchc@c^0,c
  4895  003696  EC3F  F026         	call	_searchc	;wreg free
  4896  00369A  0900               	iorlw	0
  4897  00369C  B4D8               	btfsc	status,2,c
  4898  00369E  EF53  F01B         	goto	u5251
  4899  0036A2  EF55  F01B         	goto	u5250
  4900  0036A6                     u5251:
  4901  0036A6  EF7A  F01B         	goto	l440
  4902  0036AA                     u5250:
  4903  0036AA                     
  4904                           ;src/print/format.c: 194:         for (k = len; k < len + (j * -1); k++)
  4905  0036AA  C02C  F02E         	movff	precF@len,precF@k
  4906  0036AE  C02D  F02F         	movff	precF@len+1,precF@k+1
  4907  0036B2  EF65  F01B         	goto	l4857
  4908  0036B6                     l4853:
  4909                           
  4910                           ;src/print/format.c: 195:             str[k] = '0';
  4911  0036B6  502E               	movf	precF@k^0,w,c
  4912  0036B8  241F               	addwf	precF@str^0,w,c
  4913  0036BA  6ED9               	movwf	fsr2l,c
  4914  0036BC  502F               	movf	(precF@k+1)^0,w,c
  4915  0036BE  2020               	addwfc	(precF@str+1)^0,w,c
  4916  0036C0  6EDA               	movwf	fsr2h,c
  4917  0036C2  0E30               	movlw	48
  4918  0036C4  6EDF               	movwf	indf2,c
  4919  0036C6  4A2E               	infsnz	precF@k^0,f,c
  4920  0036C8  2A2F               	incf	(precF@k+1)^0,f,c
  4921  0036CA                     l4857:
  4922  0036CA  5026               	movf	precF@j^0,w,c
  4923  0036CC  5C2C               	subwf	precF@len^0,w,c
  4924  0036CE  6E23               	movwf	??_precF^0,c
  4925  0036D0  5027               	movf	(precF@j+1)^0,w,c
  4926  0036D2  582D               	subwfb	(precF@len+1)^0,w,c
  4927  0036D4  6E24               	movwf	(??_precF+1)^0,c
  4928  0036D6  5023               	movf	??_precF^0,w,c
  4929  0036D8  5C2E               	subwf	precF@k^0,w,c
  4930  0036DA  502F               	movf	(precF@k+1)^0,w,c
  4931  0036DC  0A80               	xorlw	128
  4932  0036DE  6E25               	movwf	(??_precF+2)^0,c
  4933  0036E0  5024               	movf	(??_precF+1)^0,w,c
  4934  0036E2  0A80               	xorlw	128
  4935  0036E4  5825               	subwfb	(??_precF+2)^0,w,c
  4936  0036E6  A0D8               	btfss	status,0,c
  4937  0036E8  EF78  F01B         	goto	u5261
  4938  0036EC  EF7A  F01B         	goto	u5260
  4939  0036F0                     u5261:
  4940  0036F0  EF5B  F01B         	goto	l4853
  4941  0036F4                     u5260:
  4942  0036F4                     l440:
  4943  0036F4  0012               	return		;funcret
  4944  0036F6                     __end_of_precF:
  4945                           	opt callstack 0
  4946                           
  4947 ;; *************** function _precE *****************
  4948 ;; Defined at:
  4949 ;;		line 202 in file "src/print/format.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  str             2   30[COMRAM] PTR unsigned char 
  4952 ;;		 -> my_vprintf@buffer(64), 
  4953 ;;  precision       2   32[COMRAM] PTR int 
  4954 ;;		 -> my_vprintf@prec(2), 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  k               2   46[COMRAM] int 
  4957 ;;  j               2   44[COMRAM] int 
  4958 ;;  i               2   42[COMRAM] int 
  4959 ;;  posE            2   40[COMRAM] int 
  4960 ;;  len             2   38[COMRAM] int 
  4961 ;;  p               2   36[COMRAM] int 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4971 ;;      Params:         4       0       0       0       0       0       0       0       0
  4972 ;;      Locals:        12       0       0       0       0       0       0       0       0
  4973 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4974 ;;      Totals:        18       0       0       0       0       0       0       0       0
  4975 ;;Total ram usage:       18 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    5
  4978 ;; This function calls:
  4979 ;;		_posc
  4980 ;;		_roundStr
  4981 ;;		_strlen
  4982 ;; This function is called by:
  4983 ;;		_my_vprintf
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text9
  4988  00331E                     __ptext9:
  4989                           	opt callstack 0
  4990  00331E                     _precE:
  4991                           	opt callstack 24
  4992  00331E                     
  4993                           ;src/print/format.c: 203:     int i, j, k;;src/print/format.c: 204:     int len = strlen
      +                          (str);
  4994  00331E  C01F  F004         	movff	precE@str,strlen@s
  4995  003322  C020  F005         	movff	precE@str+1,strlen@s+1
  4996  003326  ECCF  F027         	call	_strlen	;wreg free
  4997  00332A  C004  F027         	movff	?_strlen,precE@len
  4998  00332E  C005  F028         	movff	?_strlen+1,precE@len+1
  4999                           
  5000                           ;src/print/format.c: 205:     int posE = posc(str,'e');
  5001  003332  C01F  F008         	movff	precE@str,posc@str
  5002  003336  C020  F009         	movff	precE@str+1,posc@str+1
  5003  00333A  0E65               	movlw	101
  5004  00333C  6E0A               	movwf	posc@c^0,c
  5005  00333E  ECE0  F025         	call	_posc	;wreg free
  5006  003342  C008  F029         	movff	?_posc,precE@posE
  5007  003346  C009  F02A         	movff	?_posc+1,precE@posE+1
  5008                           
  5009                           ;src/print/format.c: 206:     int p = posc(str,'.');
  5010  00334A  C01F  F008         	movff	precE@str,posc@str
  5011  00334E  C020  F009         	movff	precE@str+1,posc@str+1
  5012  003352  0E2E               	movlw	46
  5013  003354  6E0A               	movwf	posc@c^0,c
  5014  003356  ECE0  F025         	call	_posc	;wreg free
  5015  00335A  C008  F025         	movff	?_posc,precE@p
  5016  00335E  C009  F026         	movff	?_posc+1,precE@p+1
  5017  003362                     
  5018                           ;src/print/format.c: 209:     if ((*precision) < 0)
  5019  003362  C021  FFD9         	movff	precE@precision,fsr2l
  5020  003366  C022  FFDA         	movff	precE@precision+1,fsr2h
  5021  00336A  0E01               	movlw	1
  5022  00336C  BEDB               	btfsc	plusw2,7,c
  5023  00336E  EFBD  F019         	goto	u5270
  5024  003372  EFBB  F019         	goto	u5271
  5025  003376                     u5271:
  5026  003376  EFC5  F019         	goto	l4865
  5027  00337A                     u5270:
  5028  00337A                     
  5029                           ;src/print/format.c: 210:         (*precision) = 4;
  5030  00337A  C021  FFD9         	movff	precE@precision,fsr2l
  5031  00337E  C022  FFDA         	movff	precE@precision+1,fsr2h
  5032  003382  0E04               	movlw	4
  5033  003384  6EDE               	movwf	postinc2,c
  5034  003386  0E00               	movlw	0
  5035  003388  6EDD               	movwf	postdec2,c
  5036  00338A                     l4865:
  5037                           
  5038                           ;src/print/format.c: 212:     i = p + (*precision) + 1;
  5039  00338A  C021  FFD9         	movff	precE@precision,fsr2l
  5040  00338E  C022  FFDA         	movff	precE@precision+1,fsr2h
  5041  003392  CFDE F023          	movff	postinc2,??_precE
  5042  003396  CFDD F024          	movff	postdec2,??_precE+1
  5043  00339A  5025               	movf	precE@p^0,w,c
  5044  00339C  2623               	addwf	??_precE^0,f,c
  5045  00339E  5026               	movf	(precE@p+1)^0,w,c
  5046  0033A0  2224               	addwfc	(??_precE+1)^0,f,c
  5047  0033A2  0E01               	movlw	1
  5048  0033A4  2423               	addwf	??_precE^0,w,c
  5049  0033A6  6E2B               	movwf	precE@i^0,c
  5050  0033A8  0E00               	movlw	0
  5051  0033AA  2024               	addwfc	(??_precE+1)^0,w,c
  5052  0033AC  6E2C               	movwf	(precE@i+1)^0,c
  5053  0033AE                     
  5054                           ;src/print/format.c: 213:     j = posE - i;
  5055  0033AE  502B               	movf	precE@i^0,w,c
  5056  0033B0  5C29               	subwf	precE@posE^0,w,c
  5057  0033B2  6E2D               	movwf	precE@j^0,c
  5058  0033B4  502C               	movf	(precE@i+1)^0,w,c
  5059  0033B6  582A               	subwfb	(precE@posE+1)^0,w,c
  5060  0033B8  6E2E               	movwf	(precE@j+1)^0,c
  5061  0033BA                     
  5062                           ;src/print/format.c: 216:     if (j > 0) {
  5063  0033BA  BE2E               	btfsc	(precE@j+1)^0,7,c
  5064  0033BC  EFE8  F019         	goto	u5281
  5065  0033C0  502E               	movf	(precE@j+1)^0,w,c
  5066  0033C2  E108               	bnz	u5280
  5067  0033C4  042D               	decf	precE@j^0,w,c
  5068  0033C6  A0D8               	btfss	status,0,c
  5069  0033C8  EFE8  F019         	goto	u5281
  5070  0033CC  EFEA  F019         	goto	u5280
  5071  0033D0                     u5281:
  5072  0033D0  EF3F  F01A         	goto	l4887
  5073  0033D4                     u5280:
  5074  0033D4                     
  5075                           ;src/print/format.c: 217:         roundStr(str, posE, i);
  5076  0033D4  C01F  F00E         	movff	precE@str,roundStr@decnum
  5077  0033D8  C020  F00F         	movff	precE@str+1,roundStr@decnum+1
  5078  0033DC  C029  F010         	movff	precE@posE,roundStr@e
  5079  0033E0  C02A  F011         	movff	precE@posE+1,roundStr@e+1
  5080  0033E4  C02B  F012         	movff	precE@i,roundStr@prn
  5081  0033E8  C02C  F013         	movff	precE@i+1,roundStr@prn+1
  5082  0033EC  EC6C  F014         	call	_roundStr	;wreg free
  5083  0033F0                     
  5084                           ;src/print/format.c: 218:         if((*precision) == 0 && numeral == 0){
  5085  0033F0  C021  FFD9         	movff	precE@precision,fsr2l
  5086  0033F4  C022  FFDA         	movff	precE@precision+1,fsr2h
  5087  0033F8  50DE               	movf	postinc2,w,c
  5088  0033FA  10DE               	iorwf	postinc2,w,c
  5089  0033FC  A4D8               	btfss	status,2,c
  5090  0033FE  EF03  F01A         	goto	u5291
  5091  003402  EF05  F01A         	goto	u5290
  5092  003406                     u5291:
  5093  003406  EF12  F01A         	goto	l4879
  5094  00340A                     u5290:
  5095  00340A  504D               	movf	_numeral^0,w,c
  5096  00340C  A4D8               	btfss	status,2,c
  5097  00340E  EF0B  F01A         	goto	u5301
  5098  003412  EF0D  F01A         	goto	u5300
  5099  003416                     u5301:
  5100  003416  EF12  F01A         	goto	l4879
  5101  00341A                     u5300:
  5102  00341A                     
  5103                           ;src/print/format.c: 219:             i--;
  5104  00341A  062B               	decf	precE@i^0,f,c
  5105  00341C  A0D8               	btfss	status,0,c
  5106  00341E  062C               	decf	(precE@i+1)^0,f,c
  5107                           
  5108                           ;src/print/format.c: 220:             j++;
  5109  003420  4A2D               	infsnz	precE@j^0,f,c
  5110  003422  2A2E               	incf	(precE@j+1)^0,f,c
  5111  003424                     l4879:
  5112                           
  5113                           ;src/print/format.c: 222:         for (k = i; k < len; k++)
  5114  003424  C02B  F02F         	movff	precE@i,precE@k
  5115  003428  C02C  F030         	movff	precE@i+1,precE@k+1
  5116  00342C  EF2E  F01A         	goto	l4885
  5117  003430                     l4881:
  5118                           
  5119                           ;src/print/format.c: 223:             str[k] = str[k+j];
  5120  003430  502F               	movf	precE@k^0,w,c
  5121  003432  241F               	addwf	precE@str^0,w,c
  5122  003434  6E23               	movwf	??_precE^0,c
  5123  003436  5030               	movf	(precE@k+1)^0,w,c
  5124  003438  2020               	addwfc	(precE@str+1)^0,w,c
  5125  00343A  6E24               	movwf	(??_precE+1)^0,c
  5126  00343C  502D               	movf	precE@j^0,w,c
  5127  00343E  2423               	addwf	??_precE^0,w,c
  5128  003440  6ED9               	movwf	fsr2l,c
  5129  003442  502E               	movf	(precE@j+1)^0,w,c
  5130  003444  2024               	addwfc	(??_precE+1)^0,w,c
  5131  003446  6EDA               	movwf	fsr2h,c
  5132  003448  502F               	movf	precE@k^0,w,c
  5133  00344A  241F               	addwf	precE@str^0,w,c
  5134  00344C  6EE1               	movwf	fsr1l,c
  5135  00344E  5030               	movf	(precE@k+1)^0,w,c
  5136  003450  2020               	addwfc	(precE@str+1)^0,w,c
  5137  003452  6EE2               	movwf	fsr1h,c
  5138  003454  CFDF FFE7          	movff	indf2,indf1
  5139  003458  4A2F               	infsnz	precE@k^0,f,c
  5140  00345A  2A30               	incf	(precE@k+1)^0,f,c
  5141  00345C                     l4885:
  5142  00345C  5027               	movf	precE@len^0,w,c
  5143  00345E  5C2F               	subwf	precE@k^0,w,c
  5144  003460  5030               	movf	(precE@k+1)^0,w,c
  5145  003462  0A80               	xorlw	128
  5146  003464  6E23               	movwf	??_precE^0,c
  5147  003466  5028               	movf	(precE@len+1)^0,w,c
  5148  003468  0A80               	xorlw	128
  5149  00346A  5823               	subwfb	??_precE^0,w,c
  5150  00346C  A0D8               	btfss	status,0,c
  5151  00346E  EF3B  F01A         	goto	u5311
  5152  003472  EF3D  F01A         	goto	u5310
  5153  003476                     u5311:
  5154  003476  EF18  F01A         	goto	l4881
  5155  00347A                     u5310:
  5156  00347A  EF93  F01A         	goto	l456
  5157  00347E                     l4887:
  5158  00347E  BE2E               	btfsc	(precE@j+1)^0,7,c
  5159  003480  EF46  F01A         	goto	u5320
  5160  003484  EF44  F01A         	goto	u5321
  5161  003488                     u5321:
  5162  003488  EF93  F01A         	goto	l456
  5163  00348C                     u5320:
  5164  00348C                     
  5165                           ;src/print/format.c: 227:         for (k = len - 1 + (j * -1); k >= posE; k--) {
  5166  00348C  502D               	movf	precE@j^0,w,c
  5167  00348E  5C27               	subwf	precE@len^0,w,c
  5168  003490  6E23               	movwf	??_precE^0,c
  5169  003492  502E               	movf	(precE@j+1)^0,w,c
  5170  003494  5828               	subwfb	(precE@len+1)^0,w,c
  5171  003496  6E24               	movwf	(??_precE+1)^0,c
  5172  003498  0EFF               	movlw	255
  5173  00349A  2423               	addwf	??_precE^0,w,c
  5174  00349C  6E2F               	movwf	precE@k^0,c
  5175  00349E  0EFF               	movlw	255
  5176  0034A0  2024               	addwfc	(??_precE+1)^0,w,c
  5177  0034A2  6E30               	movwf	(precE@k+1)^0,c
  5178  0034A4  EF84  F01A         	goto	l4899
  5179  0034A8                     l4891:
  5180                           
  5181                           ;src/print/format.c: 228:             if (k >= i)
  5182  0034A8  502B               	movf	precE@i^0,w,c
  5183  0034AA  5C2F               	subwf	precE@k^0,w,c
  5184  0034AC  5030               	movf	(precE@k+1)^0,w,c
  5185  0034AE  0A80               	xorlw	128
  5186  0034B0  6E23               	movwf	??_precE^0,c
  5187  0034B2  502C               	movf	(precE@i+1)^0,w,c
  5188  0034B4  0A80               	xorlw	128
  5189  0034B6  5823               	subwfb	??_precE^0,w,c
  5190  0034B8  A0D8               	btfss	status,0,c
  5191  0034BA  EF61  F01A         	goto	u5331
  5192  0034BE  EF63  F01A         	goto	u5330
  5193  0034C2                     u5331:
  5194  0034C2  EF79  F01A         	goto	l4895
  5195  0034C6                     u5330:
  5196  0034C6                     
  5197                           ;src/print/format.c: 229:                 str[k] = str[k+j];
  5198  0034C6  502F               	movf	precE@k^0,w,c
  5199  0034C8  241F               	addwf	precE@str^0,w,c
  5200  0034CA  6E23               	movwf	??_precE^0,c
  5201  0034CC  5030               	movf	(precE@k+1)^0,w,c
  5202  0034CE  2020               	addwfc	(precE@str+1)^0,w,c
  5203  0034D0  6E24               	movwf	(??_precE+1)^0,c
  5204  0034D2  502D               	movf	precE@j^0,w,c
  5205  0034D4  2423               	addwf	??_precE^0,w,c
  5206  0034D6  6ED9               	movwf	fsr2l,c
  5207  0034D8  502E               	movf	(precE@j+1)^0,w,c
  5208  0034DA  2024               	addwfc	(??_precE+1)^0,w,c
  5209  0034DC  6EDA               	movwf	fsr2h,c
  5210  0034DE  502F               	movf	precE@k^0,w,c
  5211  0034E0  241F               	addwf	precE@str^0,w,c
  5212  0034E2  6EE1               	movwf	fsr1l,c
  5213  0034E4  5030               	movf	(precE@k+1)^0,w,c
  5214  0034E6  2020               	addwfc	(precE@str+1)^0,w,c
  5215  0034E8  6EE2               	movwf	fsr1h,c
  5216  0034EA  CFDF FFE7          	movff	indf2,indf1
  5217  0034EE  EF81  F01A         	goto	l4897
  5218  0034F2                     l4895:
  5219                           
  5220                           ;src/print/format.c: 231:                 str[k] = '0';
  5221  0034F2  502F               	movf	precE@k^0,w,c
  5222  0034F4  241F               	addwf	precE@str^0,w,c
  5223  0034F6  6ED9               	movwf	fsr2l,c
  5224  0034F8  5030               	movf	(precE@k+1)^0,w,c
  5225  0034FA  2020               	addwfc	(precE@str+1)^0,w,c
  5226  0034FC  6EDA               	movwf	fsr2h,c
  5227  0034FE  0E30               	movlw	48
  5228  003500  6EDF               	movwf	indf2,c
  5229  003502                     l4897:
  5230                           
  5231                           ;src/print/format.c: 232:         }
  5232  003502  062F               	decf	precE@k^0,f,c
  5233  003504  A0D8               	btfss	status,0,c
  5234  003506  0630               	decf	(precE@k+1)^0,f,c
  5235  003508                     l4899:
  5236  003508  5029               	movf	precE@posE^0,w,c
  5237  00350A  5C2F               	subwf	precE@k^0,w,c
  5238  00350C  5030               	movf	(precE@k+1)^0,w,c
  5239  00350E  0A80               	xorlw	128
  5240  003510  6E23               	movwf	??_precE^0,c
  5241  003512  502A               	movf	(precE@posE+1)^0,w,c
  5242  003514  0A80               	xorlw	128
  5243  003516  5823               	subwfb	??_precE^0,w,c
  5244  003518  B0D8               	btfsc	status,0,c
  5245  00351A  EF91  F01A         	goto	u5341
  5246  00351E  EF93  F01A         	goto	u5340
  5247  003522                     u5341:
  5248  003522  EF54  F01A         	goto	l4891
  5249  003526                     u5340:
  5250  003526                     l456:
  5251  003526  0012               	return		;funcret
  5252  003528                     __end_of_precE:
  5253                           	opt callstack 0
  5254                           
  5255 ;; *************** function _roundStr *****************
  5256 ;; Defined at:
  5257 ;;		line 38 in file "src/print/format.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  decnum          2   13[COMRAM] PTR unsigned char 
  5260 ;;		 -> my_vprintf@buffer(64), 
  5261 ;;  e               2   15[COMRAM] int 
  5262 ;;  prn             2   17[COMRAM] int 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  k               2   28[COMRAM] int 
  5265 ;;  i               2   26[COMRAM] int 
  5266 ;;  p               2   24[COMRAM] int 
  5267 ;;  len             2   22[COMRAM] int 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  2   13[COMRAM] int 
  5270 ;; Registers used:
  5271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5277 ;;      Params:         6       0       0       0       0       0       0       0       0
  5278 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5279 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5280 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5281 ;;Total ram usage:       17 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    4
  5284 ;; This function calls:
  5285 ;;		_posc
  5286 ;;		_strlen
  5287 ;; This function is called by:
  5288 ;;		_precF
  5289 ;;		_precE
  5290 ;;		_precG
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text10
  5295  0028D8                     __ptext10:
  5296                           	opt callstack 0
  5297  0028D8                     _roundStr:
  5298                           	opt callstack 24
  5299  0028D8                     
  5300                           ;src/print/format.c: 39:     int len = strlen(decnum);
  5301  0028D8  C00E  F004         	movff	roundStr@decnum,strlen@s
  5302  0028DC  C00F  F005         	movff	roundStr@decnum+1,strlen@s+1
  5303  0028E0  ECCF  F027         	call	_strlen	;wreg free
  5304  0028E4  C004  F017         	movff	?_strlen,roundStr@len
  5305  0028E8  C005  F018         	movff	?_strlen+1,roundStr@len+1
  5306                           
  5307                           ;src/print/format.c: 40:     int p = posc(decnum,'.');
  5308  0028EC  C00E  F008         	movff	roundStr@decnum,posc@str
  5309  0028F0  C00F  F009         	movff	roundStr@decnum+1,posc@str+1
  5310  0028F4  0E2E               	movlw	46
  5311  0028F6  6E0A               	movwf	posc@c^0,c
  5312  0028F8  ECE0  F025         	call	_posc	;wreg free
  5313  0028FC  C008  F019         	movff	?_posc,roundStr@p
  5314  002900  C009  F01A         	movff	?_posc+1,roundStr@p+1
  5315  002904                     
  5316                           ;src/print/format.c: 41:     int i, k;;src/print/format.c: 52:     for (k = prn - 1; k >
      +                          = 0; k--) {
  5317  002904  0EFF               	movlw	255
  5318  002906  2412               	addwf	roundStr@prn^0,w,c
  5319  002908  6E1D               	movwf	roundStr@k^0,c
  5320  00290A  0EFF               	movlw	255
  5321  00290C  2013               	addwfc	(roundStr@prn+1)^0,w,c
  5322  00290E  6E1E               	movwf	(roundStr@k+1)^0,c
  5323  002910                     l4395:
  5324  002910  BE1E               	btfsc	(roundStr@k+1)^0,7,c
  5325  002912  EF8F  F014         	goto	u4510
  5326  002916  EF8D  F014         	goto	u4511
  5327  00291A                     u4511:
  5328  00291A  EF91  F014         	goto	l4399
  5329  00291E                     u4510:
  5330  00291E  EF00  F015         	goto	l4419
  5331  002922                     l4399:
  5332                           
  5333                           ;src/print/format.c: 53:         if (decnum[k] < '9' && decnum[k] != '.') {
  5334  002922  501D               	movf	roundStr@k^0,w,c
  5335  002924  240E               	addwf	roundStr@decnum^0,w,c
  5336  002926  6ED9               	movwf	fsr2l,c
  5337  002928  501E               	movf	(roundStr@k+1)^0,w,c
  5338  00292A  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5339  00292C  6EDA               	movwf	fsr2h,c
  5340  00292E  0E39               	movlw	57
  5341  002930  60DF               	cpfslt	indf2,c
  5342  002932  EF9D  F014         	goto	u4521
  5343  002936  EF9F  F014         	goto	u4520
  5344  00293A                     u4521:
  5345  00293A  EFFB  F014         	goto	l4415
  5346  00293E                     u4520:
  5347  00293E  501D               	movf	roundStr@k^0,w,c
  5348  002940  240E               	addwf	roundStr@decnum^0,w,c
  5349  002942  6ED9               	movwf	fsr2l,c
  5350  002944  501E               	movf	(roundStr@k+1)^0,w,c
  5351  002946  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5352  002948  6EDA               	movwf	fsr2h,c
  5353  00294A  0E2E               	movlw	46
  5354  00294C  18DE               	xorwf	postinc2,w,c
  5355  00294E  B4D8               	btfsc	status,2,c
  5356  002950  EFAC  F014         	goto	u4531
  5357  002954  EFAE  F014         	goto	u4530
  5358  002958                     u4531:
  5359  002958  EFFB  F014         	goto	l4415
  5360  00295C                     u4530:
  5361  00295C                     
  5362                           ;src/print/format.c: 54:             if (decnum[prn] >= '5') {
  5363  00295C  5012               	movf	roundStr@prn^0,w,c
  5364  00295E  240E               	addwf	roundStr@decnum^0,w,c
  5365  002960  6ED9               	movwf	fsr2l,c
  5366  002962  5013               	movf	(roundStr@prn+1)^0,w,c
  5367  002964  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5368  002966  6EDA               	movwf	fsr2h,c
  5369  002968  0E34               	movlw	52
  5370  00296A  64DF               	cpfsgt	indf2,c
  5371  00296C  EFBA  F014         	goto	u4541
  5372  002970  EFBC  F014         	goto	u4540
  5373  002974                     u4541:
  5374  002974  EF00  F015         	goto	l4419
  5375  002978                     u4540:
  5376  002978                     
  5377                           ;src/print/format.c: 55:                 decnum[k]++;
  5378  002978  501D               	movf	roundStr@k^0,w,c
  5379  00297A  240E               	addwf	roundStr@decnum^0,w,c
  5380  00297C  6ED9               	movwf	fsr2l,c
  5381  00297E  501E               	movf	(roundStr@k+1)^0,w,c
  5382  002980  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5383  002982  6EDA               	movwf	fsr2h,c
  5384  002984  2ADF               	incf	indf2,f,c
  5385                           
  5386                           ;src/print/format.c: 56:                 while (k < prn) {
  5387  002986  EFEA  F014         	goto	l4413
  5388  00298A                     l4407:
  5389                           
  5390                           ;src/print/format.c: 57:                     if (decnum[k+1] != '.')
  5391  00298A  501D               	movf	roundStr@k^0,w,c
  5392  00298C  240E               	addwf	roundStr@decnum^0,w,c
  5393  00298E  6E14               	movwf	??_roundStr^0,c
  5394  002990  501E               	movf	(roundStr@k+1)^0,w,c
  5395  002992  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5396  002994  6E15               	movwf	(??_roundStr+1)^0,c
  5397  002996  0E01               	movlw	1
  5398  002998  2414               	addwf	??_roundStr^0,w,c
  5399  00299A  6ED9               	movwf	fsr2l,c
  5400  00299C  0E00               	movlw	0
  5401  00299E  2015               	addwfc	(??_roundStr+1)^0,w,c
  5402  0029A0  6EDA               	movwf	fsr2h,c
  5403  0029A2  0E2E               	movlw	46
  5404  0029A4  18DE               	xorwf	postinc2,w,c
  5405  0029A6  B4D8               	btfsc	status,2,c
  5406  0029A8  EFD8  F014         	goto	u4551
  5407  0029AC  EFDA  F014         	goto	u4550
  5408  0029B0                     u4551:
  5409  0029B0  EFE8  F014         	goto	l4411
  5410  0029B4                     u4550:
  5411  0029B4                     
  5412                           ;src/print/format.c: 58:                         decnum[k+1]='0';
  5413  0029B4  501D               	movf	roundStr@k^0,w,c
  5414  0029B6  240E               	addwf	roundStr@decnum^0,w,c
  5415  0029B8  6E14               	movwf	??_roundStr^0,c
  5416  0029BA  501E               	movf	(roundStr@k+1)^0,w,c
  5417  0029BC  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5418  0029BE  6E15               	movwf	(??_roundStr+1)^0,c
  5419  0029C0  0E01               	movlw	1
  5420  0029C2  2414               	addwf	??_roundStr^0,w,c
  5421  0029C4  6ED9               	movwf	fsr2l,c
  5422  0029C6  0E00               	movlw	0
  5423  0029C8  2015               	addwfc	(??_roundStr+1)^0,w,c
  5424  0029CA  6EDA               	movwf	fsr2h,c
  5425  0029CC  0E30               	movlw	48
  5426  0029CE  6EDF               	movwf	indf2,c
  5427  0029D0                     l4411:
  5428                           
  5429                           ;src/print/format.c: 59:                     k++;
  5430  0029D0  4A1D               	infsnz	roundStr@k^0,f,c
  5431  0029D2  2A1E               	incf	(roundStr@k+1)^0,f,c
  5432  0029D4                     l4413:
  5433                           
  5434                           ;src/print/format.c: 56:                 while (k < prn) {
  5435  0029D4  5012               	movf	roundStr@prn^0,w,c
  5436  0029D6  5C1D               	subwf	roundStr@k^0,w,c
  5437  0029D8  501E               	movf	(roundStr@k+1)^0,w,c
  5438  0029DA  0A80               	xorlw	128
  5439  0029DC  6E14               	movwf	??_roundStr^0,c
  5440  0029DE  5013               	movf	(roundStr@prn+1)^0,w,c
  5441  0029E0  0A80               	xorlw	128
  5442  0029E2  5814               	subwfb	??_roundStr^0,w,c
  5443  0029E4  A0D8               	btfss	status,0,c
  5444  0029E6  EFF7  F014         	goto	u4561
  5445  0029EA  EFF9  F014         	goto	u4560
  5446  0029EE                     u4561:
  5447  0029EE  EFC5  F014         	goto	l4407
  5448  0029F2                     u4560:
  5449  0029F2  EF00  F015         	goto	l4419
  5450  0029F6                     l4415:
  5451                           
  5452                           ;src/print/format.c: 64:     }
  5453  0029F6  061D               	decf	roundStr@k^0,f,c
  5454  0029F8  A0D8               	btfss	status,0,c
  5455  0029FA  061E               	decf	(roundStr@k+1)^0,f,c
  5456  0029FC  EF88  F014         	goto	l4395
  5457  002A00                     l4419:
  5458                           
  5459                           ;src/print/format.c: 67:     if (k == -1 && e == -1) {
  5460  002A00  281D               	incf	roundStr@k^0,w,c
  5461  002A02  E106               	bnz	u4571
  5462  002A04  281E               	incf	(roundStr@k+1)^0,w,c
  5463  002A06  A4D8               	btfss	status,2,c
  5464  002A08  EF08  F015         	goto	u4571
  5465  002A0C  EF0A  F015         	goto	u4570
  5466  002A10                     u4571:
  5467  002A10  EF92  F015         	goto	l4451
  5468  002A14                     u4570:
  5469  002A14  2810               	incf	roundStr@e^0,w,c
  5470  002A16  E106               	bnz	u4581
  5471  002A18  2811               	incf	(roundStr@e+1)^0,w,c
  5472  002A1A  A4D8               	btfss	status,2,c
  5473  002A1C  EF12  F015         	goto	u4581
  5474  002A20  EF14  F015         	goto	u4580
  5475  002A24                     u4581:
  5476  002A24  EF92  F015         	goto	l4451
  5477  002A28                     u4580:
  5478  002A28                     
  5479                           ;src/print/format.c: 68:         if (decnum[0] == '+' || decnum[0] == '-') {
  5480  002A28  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  5481  002A2C  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  5482  002A30  0E2B               	movlw	43
  5483  002A32  18DE               	xorwf	postinc2,w,c
  5484  002A34  B4D8               	btfsc	status,2,c
  5485  002A36  EF1F  F015         	goto	u4591
  5486  002A3A  EF21  F015         	goto	u4590
  5487  002A3E                     u4591:
  5488  002A3E  EF2E  F015         	goto	l4427
  5489  002A42                     u4590:
  5490  002A42  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  5491  002A46  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  5492  002A4A  0E2D               	movlw	45
  5493  002A4C  18DE               	xorwf	postinc2,w,c
  5494  002A4E  A4D8               	btfss	status,2,c
  5495  002A50  EF2C  F015         	goto	u4601
  5496  002A54  EF2E  F015         	goto	u4600
  5497  002A58                     u4601:
  5498  002A58  EF3C  F015         	goto	l4431
  5499  002A5C                     u4600:
  5500  002A5C                     l4427:
  5501                           
  5502                           ;src/print/format.c: 69:             decnum[1] = '1';
  5503  002A5C  EE20 F001          	lfsr	2,1
  5504  002A60  500E               	movf	roundStr@decnum^0,w,c
  5505  002A62  26D9               	addwf	fsr2l,f,c
  5506  002A64  500F               	movf	(roundStr@decnum+1)^0,w,c
  5507  002A66  22DA               	addwfc	fsr2h,f,c
  5508  002A68  0E31               	movlw	49
  5509  002A6A  6EDF               	movwf	indf2,c
  5510  002A6C                     
  5511                           ;src/print/format.c: 70:             i = 2;
  5512  002A6C  0E00               	movlw	0
  5513  002A6E  6E1C               	movwf	(roundStr@i+1)^0,c
  5514  002A70  0E02               	movlw	2
  5515  002A72  6E1B               	movwf	roundStr@i^0,c
  5516                           
  5517                           ;src/print/format.c: 71:         }
  5518  002A74  EF81  F015         	goto	l4449
  5519  002A78                     l4431:
  5520                           
  5521                           ;src/print/format.c: 73:             decnum[0] = '1';
  5522  002A78  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  5523  002A7C  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  5524  002A80  0E31               	movlw	49
  5525  002A82  6EDF               	movwf	indf2,c
  5526  002A84                     
  5527                           ;src/print/format.c: 74:             i = 1;
  5528  002A84  0E00               	movlw	0
  5529  002A86  6E1C               	movwf	(roundStr@i+1)^0,c
  5530  002A88  0E01               	movlw	1
  5531  002A8A  6E1B               	movwf	roundStr@i^0,c
  5532  002A8C  EF81  F015         	goto	l4449
  5533  002A90                     l4435:
  5534                           
  5535                           ;src/print/format.c: 77:             if (decnum[i] == '.') {
  5536  002A90  501B               	movf	roundStr@i^0,w,c
  5537  002A92  240E               	addwf	roundStr@decnum^0,w,c
  5538  002A94  6ED9               	movwf	fsr2l,c
  5539  002A96  501C               	movf	(roundStr@i+1)^0,w,c
  5540  002A98  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5541  002A9A  6EDA               	movwf	fsr2h,c
  5542  002A9C  0E2E               	movlw	46
  5543  002A9E  18DE               	xorwf	postinc2,w,c
  5544  002AA0  A4D8               	btfss	status,2,c
  5545  002AA2  EF55  F015         	goto	u4611
  5546  002AA6  EF57  F015         	goto	u4610
  5547  002AAA                     u4611:
  5548  002AAA  EF71  F015         	goto	l4441
  5549  002AAE                     u4610:
  5550  002AAE                     
  5551                           ;src/print/format.c: 78:                 decnum[i]='0';
  5552  002AAE  501B               	movf	roundStr@i^0,w,c
  5553  002AB0  240E               	addwf	roundStr@decnum^0,w,c
  5554  002AB2  6ED9               	movwf	fsr2l,c
  5555  002AB4  501C               	movf	(roundStr@i+1)^0,w,c
  5556  002AB6  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5557  002AB8  6EDA               	movwf	fsr2h,c
  5558  002ABA  0E30               	movlw	48
  5559  002ABC  6EDF               	movwf	indf2,c
  5560                           
  5561                           ;src/print/format.c: 79:                 decnum[i+1]='.';
  5562  002ABE  501B               	movf	roundStr@i^0,w,c
  5563  002AC0  240E               	addwf	roundStr@decnum^0,w,c
  5564  002AC2  6E14               	movwf	??_roundStr^0,c
  5565  002AC4  501C               	movf	(roundStr@i+1)^0,w,c
  5566  002AC6  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5567  002AC8  6E15               	movwf	(??_roundStr+1)^0,c
  5568  002ACA  0E01               	movlw	1
  5569  002ACC  2414               	addwf	??_roundStr^0,w,c
  5570  002ACE  6ED9               	movwf	fsr2l,c
  5571  002AD0  0E00               	movlw	0
  5572  002AD2  2015               	addwfc	(??_roundStr+1)^0,w,c
  5573  002AD4  6EDA               	movwf	fsr2h,c
  5574  002AD6  0E2E               	movlw	46
  5575  002AD8  6EDF               	movwf	indf2,c
  5576  002ADA                     
  5577                           ;src/print/format.c: 80:                 i++;
  5578  002ADA  4A1B               	infsnz	roundStr@i^0,f,c
  5579  002ADC  2A1C               	incf	(roundStr@i+1)^0,f,c
  5580                           
  5581                           ;src/print/format.c: 81:             }
  5582  002ADE  EF79  F015         	goto	l4443
  5583  002AE2                     l4441:
  5584                           
  5585                           ;src/print/format.c: 83:                 decnum[i]='0';
  5586  002AE2  501B               	movf	roundStr@i^0,w,c
  5587  002AE4  240E               	addwf	roundStr@decnum^0,w,c
  5588  002AE6  6ED9               	movwf	fsr2l,c
  5589  002AE8  501C               	movf	(roundStr@i+1)^0,w,c
  5590  002AEA  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5591  002AEC  6EDA               	movwf	fsr2h,c
  5592  002AEE  0E30               	movlw	48
  5593  002AF0  6EDF               	movwf	indf2,c
  5594  002AF2                     l4443:
  5595                           
  5596                           ;src/print/format.c: 84:             i++;
  5597  002AF2  4A1B               	infsnz	roundStr@i^0,f,c
  5598  002AF4  2A1C               	incf	(roundStr@i+1)^0,f,c
  5599  002AF6                     
  5600                           ;src/print/format.c: 85:             return 1;
  5601  002AF6  0E00               	movlw	0
  5602  002AF8  6E0F               	movwf	(?_roundStr+1)^0,c
  5603  002AFA  0E01               	movlw	1
  5604  002AFC  6E0E               	movwf	?_roundStr^0,c
  5605  002AFE  EFE6  F015         	goto	l383
  5606  002B02                     l4449:
  5607                           
  5608                           ;src/print/format.c: 76:         while (i < len) {
  5609  002B02  5017               	movf	roundStr@len^0,w,c
  5610  002B04  5C1B               	subwf	roundStr@i^0,w,c
  5611  002B06  501C               	movf	(roundStr@i+1)^0,w,c
  5612  002B08  0A80               	xorlw	128
  5613  002B0A  6E14               	movwf	??_roundStr^0,c
  5614  002B0C  5018               	movf	(roundStr@len+1)^0,w,c
  5615  002B0E  0A80               	xorlw	128
  5616  002B10  5814               	subwfb	??_roundStr^0,w,c
  5617  002B12  A0D8               	btfss	status,0,c
  5618  002B14  EF8E  F015         	goto	u4621
  5619  002B18  EF90  F015         	goto	u4620
  5620  002B1C                     u4621:
  5621  002B1C  EF48  F015         	goto	l4435
  5622  002B20                     u4620:
  5623  002B20  EFE2  F015         	goto	l4467
  5624  002B24                     l4451:
  5625  002B24  281D               	incf	roundStr@k^0,w,c
  5626  002B26  E106               	bnz	u4631
  5627  002B28  281E               	incf	(roundStr@k+1)^0,w,c
  5628  002B2A  A4D8               	btfss	status,2,c
  5629  002B2C  EF9A  F015         	goto	u4631
  5630  002B30  EF9C  F015         	goto	u4630
  5631  002B34                     u4631:
  5632  002B34  EFE2  F015         	goto	l4467
  5633  002B38                     u4630:
  5634  002B38  2810               	incf	roundStr@e^0,w,c
  5635  002B3A  E108               	bnz	u4640
  5636  002B3C  2811               	incf	(roundStr@e+1)^0,w,c
  5637  002B3E  B4D8               	btfsc	status,2,c
  5638  002B40  EFA4  F015         	goto	u4641
  5639  002B44  EFA6  F015         	goto	u4640
  5640  002B48                     u4641:
  5641  002B48  EFE2  F015         	goto	l4467
  5642  002B4C                     u4640:
  5643  002B4C                     
  5644                           ;src/print/format.c: 92:         decnum[p-1] = '1';
  5645  002B4C  5019               	movf	roundStr@p^0,w,c
  5646  002B4E  240E               	addwf	roundStr@decnum^0,w,c
  5647  002B50  6E14               	movwf	??_roundStr^0,c
  5648  002B52  501A               	movf	(roundStr@p+1)^0,w,c
  5649  002B54  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5650  002B56  6E15               	movwf	(??_roundStr+1)^0,c
  5651  002B58  0EFF               	movlw	255
  5652  002B5A  2414               	addwf	??_roundStr^0,w,c
  5653  002B5C  6ED9               	movwf	fsr2l,c
  5654  002B5E  0EFF               	movlw	255
  5655  002B60  2015               	addwfc	(??_roundStr+1)^0,w,c
  5656  002B62  6EDA               	movwf	fsr2h,c
  5657  002B64  0E31               	movlw	49
  5658  002B66  6EDF               	movwf	indf2,c
  5659  002B68                     
  5660                           ;src/print/format.c: 93:         for(i = p+1;i < e;i++)
  5661  002B68  0E01               	movlw	1
  5662  002B6A  2419               	addwf	roundStr@p^0,w,c
  5663  002B6C  6E1B               	movwf	roundStr@i^0,c
  5664  002B6E  0E00               	movlw	0
  5665  002B70  201A               	addwfc	(roundStr@p+1)^0,w,c
  5666  002B72  6E1C               	movwf	(roundStr@i+1)^0,c
  5667  002B74  EFC6  F015         	goto	l4463
  5668  002B78                     l4459:
  5669                           
  5670                           ;src/print/format.c: 94:             decnum[i] = '0';
  5671  002B78  501B               	movf	roundStr@i^0,w,c
  5672  002B7A  240E               	addwf	roundStr@decnum^0,w,c
  5673  002B7C  6ED9               	movwf	fsr2l,c
  5674  002B7E  501C               	movf	(roundStr@i+1)^0,w,c
  5675  002B80  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5676  002B82  6EDA               	movwf	fsr2h,c
  5677  002B84  0E30               	movlw	48
  5678  002B86  6EDF               	movwf	indf2,c
  5679  002B88  4A1B               	infsnz	roundStr@i^0,f,c
  5680  002B8A  2A1C               	incf	(roundStr@i+1)^0,f,c
  5681  002B8C                     l4463:
  5682  002B8C  5010               	movf	roundStr@e^0,w,c
  5683  002B8E  5C1B               	subwf	roundStr@i^0,w,c
  5684  002B90  501C               	movf	(roundStr@i+1)^0,w,c
  5685  002B92  0A80               	xorlw	128
  5686  002B94  6E14               	movwf	??_roundStr^0,c
  5687  002B96  5011               	movf	(roundStr@e+1)^0,w,c
  5688  002B98  0A80               	xorlw	128
  5689  002B9A  5814               	subwfb	??_roundStr^0,w,c
  5690  002B9C  A0D8               	btfss	status,0,c
  5691  002B9E  EFD3  F015         	goto	u4651
  5692  002BA2  EFD5  F015         	goto	u4650
  5693  002BA6                     u4651:
  5694  002BA6  EFBC  F015         	goto	l4459
  5695  002BAA                     u4650:
  5696  002BAA                     
  5697                           ;src/print/format.c: 95:         decnum[e+2]++;
  5698  002BAA  5010               	movf	roundStr@e^0,w,c
  5699  002BAC  240E               	addwf	roundStr@decnum^0,w,c
  5700  002BAE  6E14               	movwf	??_roundStr^0,c
  5701  002BB0  5011               	movf	(roundStr@e+1)^0,w,c
  5702  002BB2  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5703  002BB4  6E15               	movwf	(??_roundStr+1)^0,c
  5704  002BB6  0E02               	movlw	2
  5705  002BB8  2414               	addwf	??_roundStr^0,w,c
  5706  002BBA  6ED9               	movwf	fsr2l,c
  5707  002BBC  0E00               	movlw	0
  5708  002BBE  2015               	addwfc	(??_roundStr+1)^0,w,c
  5709  002BC0  6EDA               	movwf	fsr2h,c
  5710  002BC2  2ADF               	incf	indf2,f,c
  5711  002BC4                     l4467:
  5712                           
  5713                           ;src/print/format.c: 97:     return 0;
  5714  002BC4  0E00               	movlw	0
  5715  002BC6  6E0F               	movwf	(?_roundStr+1)^0,c
  5716  002BC8  0E00               	movlw	0
  5717  002BCA  6E0E               	movwf	?_roundStr^0,c
  5718  002BCC                     l383:
  5719  002BCC  0012               	return		;funcret
  5720  002BCE                     __end_of_roundStr:
  5721                           	opt callstack 0
  5722                           
  5723 ;; *************** function _getWP *****************
  5724 ;; Defined at:
  5725 ;;		line 125 in file "src/print/format.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  form            2   21[COMRAM] PTR unsigned char 
  5728 ;;		 -> my_vprintf@format(10), 
  5729 ;;  width           2   23[COMRAM] PTR int 
  5730 ;;		 -> my_vprintf@width(2), 
  5731 ;;  precision       2   25[COMRAM] PTR int 
  5732 ;;		 -> my_vprintf@prec(2), 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  width_str       5   34[COMRAM] unsigned char [5]
  5735 ;;  prec_str        5   29[COMRAM] unsigned char [5]
  5736 ;;  j               2   47[COMRAM] int 
  5737 ;;  p               2   45[COMRAM] int 
  5738 ;;  k               2   43[COMRAM] int 
  5739 ;;  i               2   41[COMRAM] int 
  5740 ;;  len             2   39[COMRAM] int 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      void 
  5743 ;; Registers used:
  5744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5750 ;;      Params:         6       0       0       0       0       0       0       0       0
  5751 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5752 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5753 ;;      Totals:        28       0       0       0       0       0       0       0       0
  5754 ;;Total ram usage:       28 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    4
  5757 ;; This function calls:
  5758 ;;		_atoui
  5759 ;;		_posc
  5760 ;;		_reverse
  5761 ;;		_searchc
  5762 ;;		_strlen
  5763 ;; This function is called by:
  5764 ;;		_my_vprintf
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text11
  5769  002EAE                     __ptext11:
  5770                           	opt callstack 0
  5771  002EAE                     _getWP:
  5772                           	opt callstack 25
  5773  002EAE                     
  5774                           ;src/print/format.c: 126:     int i, j, k;;src/print/format.c: 127:     int p;;src/print
      +                          /format.c: 128:     int len = strlen(form);
  5775  002EAE  C016  F004         	movff	getWP@form,strlen@s
  5776  002EB2  C017  F005         	movff	getWP@form+1,strlen@s+1
  5777  002EB6  ECCF  F027         	call	_strlen	;wreg free
  5778  002EBA  C004  F028         	movff	?_strlen,getWP@len
  5779  002EBE  C005  F029         	movff	?_strlen+1,getWP@len+1
  5780  002EC2                     
  5781                           ;src/print/format.c: 129:     char width_str[5] = "";
  5782  002EC2  EE20  F023         	lfsr	2,getWP@width_str
  5783  002EC6  0E04               	movlw	4
  5784  002EC8                     u5071:
  5785  002EC8  6ADE               	clrf	postinc2,c
  5786  002ECA  06E8               	decf	wreg,f,c
  5787  002ECC  E2FD               	bc	u5071
  5788  002ECE                     
  5789                           ;src/print/format.c: 130:     char prec_str[5] = "";
  5790  002ECE  EE20  F01E         	lfsr	2,getWP@prec_str
  5791  002ED2  0E04               	movlw	4
  5792  002ED4                     u5081:
  5793  002ED4  6ADE               	clrf	postinc2,c
  5794  002ED6  06E8               	decf	wreg,f,c
  5795  002ED8  E2FD               	bc	u5081
  5796  002EDA                     
  5797                           ;src/print/format.c: 132:     i = 0;
  5798  002EDA  0E00               	movlw	0
  5799  002EDC  6E2B               	movwf	(getWP@i+1)^0,c
  5800  002EDE  0E00               	movlw	0
  5801  002EE0  6E2A               	movwf	getWP@i^0,c
  5802  002EE2                     
  5803                           ;src/print/format.c: 133:     k = 0;
  5804  002EE2  0E00               	movlw	0
  5805  002EE4  6E2D               	movwf	(getWP@k+1)^0,c
  5806  002EE6  0E00               	movlw	0
  5807  002EE8  6E2C               	movwf	getWP@k^0,c
  5808  002EEA                     
  5809                           ;src/print/format.c: 134:     zeros = 0;
  5810  002EEA  0E00               	movlw	0
  5811  002EEC  6E51               	movwf	_zeros^0,c
  5812  002EEE                     
  5813                           ;src/print/format.c: 135:     precInt = 0;
  5814  002EEE  0E00               	movlw	0
  5815  002EF0  6E4F               	movwf	_precInt^0,c
  5816                           
  5817                           ;src/print/format.c: 137:     sig = searchc(form, '+');
  5818  002EF2  C016  F008         	movff	getWP@form,searchc@str
  5819  002EF6  C017  F009         	movff	getWP@form+1,searchc@str+1
  5820  002EFA  0E2B               	movlw	43
  5821  002EFC  6E0A               	movwf	searchc@c^0,c
  5822  002EFE  EC3F  F026         	call	_searchc	;wreg free
  5823  002F02  6E52               	movwf	_sig^0,c
  5824                           
  5825                           ;src/print/format.c: 138:     alingL = searchc(form, '-');
  5826  002F04  C016  F008         	movff	getWP@form,searchc@str
  5827  002F08  C017  F009         	movff	getWP@form+1,searchc@str+1
  5828  002F0C  0E2D               	movlw	45
  5829  002F0E  6E0A               	movwf	searchc@c^0,c
  5830  002F10  EC3F  F026         	call	_searchc	;wreg free
  5831  002F14  6E50               	movwf	_alingL^0,c
  5832                           
  5833                           ;src/print/format.c: 139:     space = searchc(form, ' ');
  5834  002F16  C016  F008         	movff	getWP@form,searchc@str
  5835  002F1A  C017  F009         	movff	getWP@form+1,searchc@str+1
  5836  002F1E  0E20               	movlw	32
  5837  002F20  6E0A               	movwf	searchc@c^0,c
  5838  002F22  EC3F  F026         	call	_searchc	;wreg free
  5839  002F26  6E4E               	movwf	_space^0,c
  5840                           
  5841                           ;src/print/format.c: 140:     numeral = searchc(form, '#');
  5842  002F28  C016  F008         	movff	getWP@form,searchc@str
  5843  002F2C  C017  F009         	movff	getWP@form+1,searchc@str+1
  5844  002F30  0E23               	movlw	35
  5845  002F32  6E0A               	movwf	searchc@c^0,c
  5846  002F34  EC3F  F026         	call	_searchc	;wreg free
  5847  002F38  6E4D               	movwf	_numeral^0,c
  5848                           
  5849                           ;src/print/format.c: 142:     p = posc(form, '.');
  5850  002F3A  C016  F008         	movff	getWP@form,posc@str
  5851  002F3E  C017  F009         	movff	getWP@form+1,posc@str+1
  5852  002F42  0E2E               	movlw	46
  5853  002F44  6E0A               	movwf	posc@c^0,c
  5854  002F46  ECE0  F025         	call	_posc	;wreg free
  5855  002F4A  C008  F02E         	movff	?_posc,getWP@p
  5856  002F4E  C009  F02F         	movff	?_posc+1,getWP@p+1
  5857  002F52                     
  5858                           ;src/print/format.c: 144:     for(j = 1; j < len; j++) {
  5859  002F52  0E00               	movlw	0
  5860  002F54  6E31               	movwf	(getWP@j+1)^0,c
  5861  002F56  0E01               	movlw	1
  5862  002F58  6E30               	movwf	getWP@j^0,c
  5863  002F5A  EF14  F018         	goto	l4801
  5864  002F5E                     l4781:
  5865                           
  5866                           ;src/print/format.c: 145:         if(form[j] >= '0' && form[j] <= '9') {
  5867  002F5E  5030               	movf	getWP@j^0,w,c
  5868  002F60  2416               	addwf	getWP@form^0,w,c
  5869  002F62  6ED9               	movwf	fsr2l,c
  5870  002F64  5031               	movf	(getWP@j+1)^0,w,c
  5871  002F66  2017               	addwfc	(getWP@form+1)^0,w,c
  5872  002F68  6EDA               	movwf	fsr2h,c
  5873  002F6A  0E2F               	movlw	47
  5874  002F6C  64DF               	cpfsgt	indf2,c
  5875  002F6E  EFBB  F017         	goto	u5091
  5876  002F72  EFBD  F017         	goto	u5090
  5877  002F76                     u5091:
  5878  002F76  EF12  F018         	goto	l4799
  5879  002F7A                     u5090:
  5880  002F7A  5030               	movf	getWP@j^0,w,c
  5881  002F7C  2416               	addwf	getWP@form^0,w,c
  5882  002F7E  6ED9               	movwf	fsr2l,c
  5883  002F80  5031               	movf	(getWP@j+1)^0,w,c
  5884  002F82  2017               	addwfc	(getWP@form+1)^0,w,c
  5885  002F84  6EDA               	movwf	fsr2h,c
  5886  002F86  0E3A               	movlw	58
  5887  002F88  60DF               	cpfslt	indf2,c
  5888  002F8A  EFC9  F017         	goto	u5101
  5889  002F8E  EFCB  F017         	goto	u5100
  5890  002F92                     u5101:
  5891  002F92  EF12  F018         	goto	l4799
  5892  002F96                     u5100:
  5893  002F96                     
  5894                           ;src/print/format.c: 146:             if ((j < p)|| (p < 0)) {
  5895  002F96  502E               	movf	getWP@p^0,w,c
  5896  002F98  5C30               	subwf	getWP@j^0,w,c
  5897  002F9A  5031               	movf	(getWP@j+1)^0,w,c
  5898  002F9C  0A80               	xorlw	128
  5899  002F9E  6E1C               	movwf	??_getWP^0,c
  5900  002FA0  502F               	movf	(getWP@p+1)^0,w,c
  5901  002FA2  0A80               	xorlw	128
  5902  002FA4  581C               	subwfb	??_getWP^0,w,c
  5903  002FA6  A0D8               	btfss	status,0,c
  5904  002FA8  EFD8  F017         	goto	u5111
  5905  002FAC  EFDA  F017         	goto	u5110
  5906  002FB0                     u5111:
  5907  002FB0  EFE1  F017         	goto	l4789
  5908  002FB4                     u5110:
  5909  002FB4  BE2F               	btfsc	(getWP@p+1)^0,7,c
  5910  002FB6  EFE1  F017         	goto	u5120
  5911  002FBA  EFDF  F017         	goto	u5121
  5912  002FBE                     u5121:
  5913  002FBE  EFF3  F017         	goto	l4793
  5914  002FC2                     u5120:
  5915  002FC2                     l4789:
  5916                           
  5917                           ;src/print/format.c: 147:                 width_str[i] = form[j];
  5918  002FC2  5030               	movf	getWP@j^0,w,c
  5919  002FC4  2416               	addwf	getWP@form^0,w,c
  5920  002FC6  6ED9               	movwf	fsr2l,c
  5921  002FC8  5031               	movf	(getWP@j+1)^0,w,c
  5922  002FCA  2017               	addwfc	(getWP@form+1)^0,w,c
  5923  002FCC  6EDA               	movwf	fsr2h,c
  5924  002FCE  0E23               	movlw	low getWP@width_str
  5925  002FD0  242A               	addwf	getWP@i^0,w,c
  5926  002FD2  6EE1               	movwf	fsr1l,c
  5927  002FD4  0E00               	movlw	high getWP@width_str
  5928  002FD6  202B               	addwfc	(getWP@i+1)^0,w,c
  5929  002FD8  6EE2               	movwf	fsr1h,c
  5930  002FDA  CFDF FFE7          	movff	indf2,indf1
  5931  002FDE                     
  5932                           ;src/print/format.c: 148:                 i++;
  5933  002FDE  4A2A               	infsnz	getWP@i^0,f,c
  5934  002FE0  2A2B               	incf	(getWP@i+1)^0,f,c
  5935                           
  5936                           ;src/print/format.c: 149:             }
  5937  002FE2  EF12  F018         	goto	l4799
  5938  002FE6                     l4793:
  5939  002FE6  5030               	movf	getWP@j^0,w,c
  5940  002FE8  5C2E               	subwf	getWP@p^0,w,c
  5941  002FEA  502F               	movf	(getWP@p+1)^0,w,c
  5942  002FEC  0A80               	xorlw	128
  5943  002FEE  6E1C               	movwf	??_getWP^0,c
  5944  002FF0  5031               	movf	(getWP@j+1)^0,w,c
  5945  002FF2  0A80               	xorlw	128
  5946  002FF4  581C               	subwfb	??_getWP^0,w,c
  5947  002FF6  B0D8               	btfsc	status,0,c
  5948  002FF8  EF00  F018         	goto	u5131
  5949  002FFC  EF02  F018         	goto	u5130
  5950  003000                     u5131:
  5951  003000  EF12  F018         	goto	l4799
  5952  003004                     u5130:
  5953  003004                     
  5954                           ;src/print/format.c: 151:                 prec_str[k] = form[j];
  5955  003004  5030               	movf	getWP@j^0,w,c
  5956  003006  2416               	addwf	getWP@form^0,w,c
  5957  003008  6ED9               	movwf	fsr2l,c
  5958  00300A  5031               	movf	(getWP@j+1)^0,w,c
  5959  00300C  2017               	addwfc	(getWP@form+1)^0,w,c
  5960  00300E  6EDA               	movwf	fsr2h,c
  5961  003010  0E1E               	movlw	low getWP@prec_str
  5962  003012  242C               	addwf	getWP@k^0,w,c
  5963  003014  6EE1               	movwf	fsr1l,c
  5964  003016  0E00               	movlw	high getWP@prec_str
  5965  003018  202D               	addwfc	(getWP@k+1)^0,w,c
  5966  00301A  6EE2               	movwf	fsr1h,c
  5967  00301C  CFDF FFE7          	movff	indf2,indf1
  5968  003020                     
  5969                           ;src/print/format.c: 152:                 k++;
  5970  003020  4A2C               	infsnz	getWP@k^0,f,c
  5971  003022  2A2D               	incf	(getWP@k+1)^0,f,c
  5972  003024                     l4799:
  5973                           
  5974                           ;src/print/format.c: 155:     }
  5975  003024  4A30               	infsnz	getWP@j^0,f,c
  5976  003026  2A31               	incf	(getWP@j+1)^0,f,c
  5977  003028                     l4801:
  5978  003028  5028               	movf	getWP@len^0,w,c
  5979  00302A  5C30               	subwf	getWP@j^0,w,c
  5980  00302C  5031               	movf	(getWP@j+1)^0,w,c
  5981  00302E  0A80               	xorlw	128
  5982  003030  6E1C               	movwf	??_getWP^0,c
  5983  003032  5029               	movf	(getWP@len+1)^0,w,c
  5984  003034  0A80               	xorlw	128
  5985  003036  581C               	subwfb	??_getWP^0,w,c
  5986  003038  A0D8               	btfss	status,0,c
  5987  00303A  EF21  F018         	goto	u5141
  5988  00303E  EF23  F018         	goto	u5140
  5989  003042                     u5141:
  5990  003042  EFAF  F017         	goto	l4781
  5991  003046                     u5140:
  5992  003046                     
  5993                           ;src/print/format.c: 157:     if(width_str[0] == '0')
  5994  003046  0E30               	movlw	48
  5995  003048  1823               	xorwf	getWP@width_str^0,w,c
  5996  00304A  A4D8               	btfss	status,2,c
  5997  00304C  EF2A  F018         	goto	u5151
  5998  003050  EF2C  F018         	goto	u5150
  5999  003054                     u5151:
  6000  003054  EF2E  F018         	goto	l4807
  6001  003058                     u5150:
  6002  003058                     
  6003                           ;src/print/format.c: 158:       zeros = 1;
  6004  003058  0E01               	movlw	1
  6005  00305A  6E51               	movwf	_zeros^0,c
  6006  00305C                     l4807:
  6007                           
  6008                           ;src/print/format.c: 160:     reverse(width_str);
  6009  00305C  0E23               	movlw	low getWP@width_str
  6010  00305E  6E12               	movwf	reverse@str^0,c
  6011  003060  0E00               	movlw	high getWP@width_str
  6012  003062  6E13               	movwf	(reverse@str+1)^0,c
  6013  003064  EC5E  F024         	call	_reverse	;wreg free
  6014  003068                     
  6015                           ;src/print/format.c: 161:     reverse(prec_str);
  6016  003068  0E1E               	movlw	low getWP@prec_str
  6017  00306A  6E12               	movwf	reverse@str^0,c
  6018  00306C  0E00               	movlw	high getWP@prec_str
  6019  00306E  6E13               	movwf	(reverse@str+1)^0,c
  6020  003070  EC5E  F024         	call	_reverse	;wreg free
  6021  003074                     
  6022                           ;src/print/format.c: 163:     if ((*width) == -1)
  6023  003074  C018  FFD9         	movff	getWP@width,fsr2l
  6024  003078  C019  FFDA         	movff	getWP@width+1,fsr2h
  6025  00307C  28DE               	incf	postinc2,w,c
  6026  00307E  E106               	bnz	u5161
  6027  003080  28DE               	incf	postinc2,w,c
  6028  003082  A4D8               	btfss	status,2,c
  6029  003084  EF46  F018         	goto	u5161
  6030  003088  EF48  F018         	goto	u5160
  6031  00308C                     u5161:
  6032  00308C  EF56  F018         	goto	l4815
  6033  003090                     u5160:
  6034  003090                     
  6035                           ;src/print/format.c: 164:         (*width) = atoui(width_str);
  6036  003090  0E23               	movlw	low getWP@width_str
  6037  003092  6E0A               	movwf	atoui@str^0,c
  6038  003094  0E00               	movlw	high getWP@width_str
  6039  003096  6E0B               	movwf	(atoui@str+1)^0,c
  6040  003098  ECE7  F022         	call	_atoui	;wreg free
  6041  00309C  C018  FFD9         	movff	getWP@width,fsr2l
  6042  0030A0  C019  FFDA         	movff	getWP@width+1,fsr2h
  6043  0030A4  C00A  FFDE         	movff	?_atoui,postinc2
  6044  0030A8  C00B  FFDD         	movff	?_atoui+1,postdec2
  6045  0030AC                     l4815:
  6046                           
  6047                           ;src/print/format.c: 166:     if (p >= 0 && (*precision) == -1)
  6048  0030AC  BE2F               	btfsc	(getWP@p+1)^0,7,c
  6049  0030AE  EF5B  F018         	goto	u5171
  6050  0030B2  EF5D  F018         	goto	u5170
  6051  0030B6                     u5171:
  6052  0030B6  EF79  F018         	goto	l421
  6053  0030BA                     u5170:
  6054  0030BA  C01A  FFD9         	movff	getWP@precision,fsr2l
  6055  0030BE  C01B  FFDA         	movff	getWP@precision+1,fsr2h
  6056  0030C2  28DE               	incf	postinc2,w,c
  6057  0030C4  E106               	bnz	u5181
  6058  0030C6  28DE               	incf	postinc2,w,c
  6059  0030C8  A4D8               	btfss	status,2,c
  6060  0030CA  EF69  F018         	goto	u5181
  6061  0030CE  EF6B  F018         	goto	u5180
  6062  0030D2                     u5181:
  6063  0030D2  EF79  F018         	goto	l421
  6064  0030D6                     u5180:
  6065  0030D6                     
  6066                           ;src/print/format.c: 167:         (*precision) = atoui(prec_str);
  6067  0030D6  0E1E               	movlw	low getWP@prec_str
  6068  0030D8  6E0A               	movwf	atoui@str^0,c
  6069  0030DA  0E00               	movlw	high getWP@prec_str
  6070  0030DC  6E0B               	movwf	(atoui@str+1)^0,c
  6071  0030DE  ECE7  F022         	call	_atoui	;wreg free
  6072  0030E2  C01A  FFD9         	movff	getWP@precision,fsr2l
  6073  0030E6  C01B  FFDA         	movff	getWP@precision+1,fsr2h
  6074  0030EA  C00A  FFDE         	movff	?_atoui,postinc2
  6075  0030EE  C00B  FFDD         	movff	?_atoui+1,postdec2
  6076  0030F2                     l421:
  6077  0030F2  0012               	return		;funcret
  6078  0030F4                     __end_of_getWP:
  6079                           	opt callstack 0
  6080                           
  6081 ;; *************** function _searchc *****************
  6082 ;; Defined at:
  6083 ;;		line 11 in file "src/print/format.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  str             2    7[COMRAM] PTR unsigned char 
  6086 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), 
  6087 ;;  c               1    9[COMRAM] unsigned char 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  a               2   11[COMRAM] int 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1    wreg      _Bool 
  6092 ;; Registers used:
  6093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6099 ;;      Params:         3       0       0       0       0       0       0       0       0
  6100 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6101 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6102 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6103 ;;Total ram usage:        6 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    3
  6106 ;; This function calls:
  6107 ;;		_strlen
  6108 ;; This function is called by:
  6109 ;;		_getWP
  6110 ;;		_precF
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text12
  6115  004C7E                     __ptext12:
  6116                           	opt callstack 0
  6117  004C7E                     _searchc:
  6118                           	opt callstack 25
  6119  004C7E                     
  6120                           ;src/print/format.c: 12:     int a;;src/print/format.c: 13:     for(a = 0; a < strlen(st
      +                          r); a++)
  6121  004C7E  0E00               	movlw	0
  6122  004C80  6E0D               	movwf	(searchc@a+1)^0,c
  6123  004C82  0E00               	movlw	0
  6124  004C84  6E0C               	movwf	searchc@a^0,c
  6125  004C86  EF59  F026         	goto	l4385
  6126  004C8A                     l4377:
  6127                           
  6128                           ;src/print/format.c: 14:     {;src/print/format.c: 15:         if (str[a]==c)
  6129  004C8A  500C               	movf	searchc@a^0,w,c
  6130  004C8C  2408               	addwf	searchc@str^0,w,c
  6131  004C8E  6ED9               	movwf	fsr2l,c
  6132  004C90  500D               	movf	(searchc@a+1)^0,w,c
  6133  004C92  2009               	addwfc	(searchc@str+1)^0,w,c
  6134  004C94  6EDA               	movwf	fsr2h,c
  6135  004C96  500A               	movf	searchc@c^0,w,c
  6136  004C98  18DE               	xorwf	postinc2,w,c
  6137  004C9A  A4D8               	btfss	status,2,c
  6138  004C9C  EF52  F026         	goto	u4491
  6139  004CA0  EF54  F026         	goto	u4490
  6140  004CA4                     u4491:
  6141  004CA4  EF57  F026         	goto	l4383
  6142  004CA8                     u4490:
  6143  004CA8                     
  6144                           ;src/print/format.c: 16:             return 1;
  6145  004CA8  0E01               	movlw	1
  6146  004CAA  EF6B  F026         	goto	l355
  6147  004CAE                     l4383:
  6148                           
  6149                           ;src/print/format.c: 17:     }
  6150  004CAE  4A0C               	infsnz	searchc@a^0,f,c
  6151  004CB0  2A0D               	incf	(searchc@a+1)^0,f,c
  6152  004CB2                     l4385:
  6153  004CB2  C008  F004         	movff	searchc@str,strlen@s
  6154  004CB6  C009  F005         	movff	searchc@str+1,strlen@s+1
  6155  004CBA  ECCF  F027         	call	_strlen	;wreg free
  6156  004CBE  5004               	movf	?_strlen^0,w,c
  6157  004CC0  5C0C               	subwf	searchc@a^0,w,c
  6158  004CC2  5005               	movf	(?_strlen+1)^0,w,c
  6159  004CC4  580D               	subwfb	(searchc@a+1)^0,w,c
  6160  004CC6  A0D8               	btfss	status,0,c
  6161  004CC8  EF68  F026         	goto	u4501
  6162  004CCC  EF6A  F026         	goto	u4500
  6163  004CD0                     u4501:
  6164  004CD0  EF45  F026         	goto	l4377
  6165  004CD4                     u4500:
  6166  004CD4                     
  6167                           ;src/print/format.c: 18:     return 0;
  6168  004CD4  0E00               	movlw	0
  6169  004CD6                     l355:
  6170  004CD6  0012               	return		;funcret
  6171  004CD8                     __end_of_searchc:
  6172                           	opt callstack 0
  6173                           
  6174 ;; *************** function _posc *****************
  6175 ;; Defined at:
  6176 ;;		line 24 in file "src/print/format.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  str             2    7[COMRAM] PTR unsigned char 
  6179 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), 
  6180 ;;  c               1    9[COMRAM] unsigned char 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  a               2   11[COMRAM] int 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  2    7[COMRAM] int 
  6185 ;; Registers used:
  6186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6192 ;;      Params:         3       0       0       0       0       0       0       0       0
  6193 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6194 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6195 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6196 ;;Total ram usage:        6 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    3
  6199 ;; This function calls:
  6200 ;;		_strlen
  6201 ;; This function is called by:
  6202 ;;		_roundStr
  6203 ;;		_getWP
  6204 ;;		_precF
  6205 ;;		_precE
  6206 ;;		_precG
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text13
  6211  004BC0                     __ptext13:
  6212                           	opt callstack 0
  6213  004BC0                     _posc:
  6214                           	opt callstack 24
  6215  004BC0                     
  6216                           ;src/print/format.c: 25:     int a;;src/print/format.c: 26:     for(a = 0; a < strlen(st
      +                          r); a++)
  6217  004BC0  0E00               	movlw	0
  6218  004BC2  6E0D               	movwf	(posc@a+1)^0,c
  6219  004BC4  0E00               	movlw	0
  6220  004BC6  6E0C               	movwf	posc@a^0,c
  6221  004BC8  EFFD  F025         	goto	l3777
  6222  004BCC                     l3771:
  6223                           
  6224                           ;src/print/format.c: 27:     {;src/print/format.c: 28:         if (str[a]==c)
  6225  004BCC  500C               	movf	posc@a^0,w,c
  6226  004BCE  2408               	addwf	posc@str^0,w,c
  6227  004BD0  6ED9               	movwf	fsr2l,c
  6228  004BD2  500D               	movf	(posc@a+1)^0,w,c
  6229  004BD4  2009               	addwfc	(posc@str+1)^0,w,c
  6230  004BD6  6EDA               	movwf	fsr2h,c
  6231  004BD8  500A               	movf	posc@c^0,w,c
  6232  004BDA  18DE               	xorwf	postinc2,w,c
  6233  004BDC  A4D8               	btfss	status,2,c
  6234  004BDE  EFF3  F025         	goto	u3461
  6235  004BE2  EFF5  F025         	goto	u3460
  6236  004BE6                     u3461:
  6237  004BE6  EFFB  F025         	goto	l3775
  6238  004BEA                     u3460:
  6239  004BEA                     
  6240                           ;src/print/format.c: 29:             return a;
  6241  004BEA  C00C  F008         	movff	posc@a,?_posc
  6242  004BEE  C00D  F009         	movff	posc@a+1,?_posc+1
  6243  004BF2  EF10  F026         	goto	l362
  6244  004BF6                     l3775:
  6245                           
  6246                           ;src/print/format.c: 30:     }
  6247  004BF6  4A0C               	infsnz	posc@a^0,f,c
  6248  004BF8  2A0D               	incf	(posc@a+1)^0,f,c
  6249  004BFA                     l3777:
  6250  004BFA  C008  F004         	movff	posc@str,strlen@s
  6251  004BFE  C009  F005         	movff	posc@str+1,strlen@s+1
  6252  004C02  ECCF  F027         	call	_strlen	;wreg free
  6253  004C06  5004               	movf	?_strlen^0,w,c
  6254  004C08  5C0C               	subwf	posc@a^0,w,c
  6255  004C0A  5005               	movf	(?_strlen+1)^0,w,c
  6256  004C0C  580D               	subwfb	(posc@a+1)^0,w,c
  6257  004C0E  A0D8               	btfss	status,0,c
  6258  004C10  EF0C  F026         	goto	u3471
  6259  004C14  EF0E  F026         	goto	u3470
  6260  004C18                     u3471:
  6261  004C18  EFE6  F025         	goto	l3771
  6262  004C1C                     u3470:
  6263  004C1C                     
  6264                           ;src/print/format.c: 31:     return -1;
  6265  004C1C  6808               	setf	?_posc^0,c
  6266  004C1E  6809               	setf	(?_posc+1)^0,c
  6267  004C20                     l362:
  6268  004C20  0012               	return		;funcret
  6269  004C22                     __end_of_posc:
  6270                           	opt callstack 0
  6271                           
  6272 ;; *************** function _atoui *****************
  6273 ;; Defined at:
  6274 ;;		line 57 in file "src/print/toString.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  str             2    9[COMRAM] PTR unsigned char 
  6277 ;;		 -> getWP@prec_str(5), getWP@width_str(5), 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  i               2   16[COMRAM] int 
  6280 ;;  vp              2   14[COMRAM] int 
  6281 ;;  num             2   12[COMRAM] int 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  2    9[COMRAM] int 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6291 ;;      Params:         2       0       0       0       0       0       0       0       0
  6292 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6293 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6294 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6295 ;;Total ram usage:        9 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    3
  6298 ;; This function calls:
  6299 ;;		___wmul
  6300 ;;		_strlen
  6301 ;; This function is called by:
  6302 ;;		_getWP
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text14
  6307  0045CE                     __ptext14:
  6308                           	opt callstack 0
  6309  0045CE                     _atoui:
  6310                           	opt callstack 25
  6311  0045CE                     
  6312                           ;src/print/toString.c: 58:     int i;;src/print/toString.c: 59:     int num = 0;
  6313  0045CE  0E00               	movlw	0
  6314  0045D0  6E0E               	movwf	(atoui@num+1)^0,c
  6315  0045D2  0E00               	movlw	0
  6316  0045D4  6E0D               	movwf	atoui@num^0,c
  6317                           
  6318                           ;src/print/toString.c: 60:     int vp = 1;
  6319  0045D6  0E00               	movlw	0
  6320  0045D8  6E10               	movwf	(atoui@vp+1)^0,c
  6321  0045DA  0E01               	movlw	1
  6322  0045DC  6E0F               	movwf	atoui@vp^0,c
  6323                           
  6324                           ;src/print/toString.c: 62:     for (i = 0; i < strlen(str); i++) {
  6325  0045DE  0E00               	movlw	0
  6326  0045E0  6E12               	movwf	(atoui@i+1)^0,c
  6327  0045E2  0E00               	movlw	0
  6328  0045E4  6E11               	movwf	atoui@i^0,c
  6329  0045E6  EF39  F023         	goto	l4483
  6330  0045EA                     l4473:
  6331                           
  6332                           ;src/print/toString.c: 63:         if(str[i] >= '0' && str[i] <= '9'){
  6333  0045EA  5011               	movf	atoui@i^0,w,c
  6334  0045EC  240A               	addwf	atoui@str^0,w,c
  6335  0045EE  6ED9               	movwf	fsr2l,c
  6336  0045F0  5012               	movf	(atoui@i+1)^0,w,c
  6337  0045F2  200B               	addwfc	(atoui@str+1)^0,w,c
  6338  0045F4  6EDA               	movwf	fsr2h,c
  6339  0045F6  0E2F               	movlw	47
  6340  0045F8  64DF               	cpfsgt	indf2,c
  6341  0045FA  EF01  F023         	goto	u4661
  6342  0045FE  EF03  F023         	goto	u4660
  6343  004602                     u4661:
  6344  004602  EF4A  F023         	goto	l715
  6345  004606                     u4660:
  6346  004606  5011               	movf	atoui@i^0,w,c
  6347  004608  240A               	addwf	atoui@str^0,w,c
  6348  00460A  6ED9               	movwf	fsr2l,c
  6349  00460C  5012               	movf	(atoui@i+1)^0,w,c
  6350  00460E  200B               	addwfc	(atoui@str+1)^0,w,c
  6351  004610  6EDA               	movwf	fsr2h,c
  6352  004612  0E3A               	movlw	58
  6353  004614  60DF               	cpfslt	indf2,c
  6354  004616  EF0F  F023         	goto	u4671
  6355  00461A  EF11  F023         	goto	u4670
  6356  00461E                     u4671:
  6357  00461E  EF4A  F023         	goto	l715
  6358  004622                     u4670:
  6359  004622                     
  6360                           ;src/print/toString.c: 64:             num += (str[i] - 48) * vp;
  6361  004622  5011               	movf	atoui@i^0,w,c
  6362  004624  240A               	addwf	atoui@str^0,w,c
  6363  004626  6ED9               	movwf	fsr2l,c
  6364  004628  5012               	movf	(atoui@i+1)^0,w,c
  6365  00462A  200B               	addwfc	(atoui@str+1)^0,w,c
  6366  00462C  6EDA               	movwf	fsr2h,c
  6367  00462E  50DF               	movf	indf2,w,c
  6368  004630  6E0C               	movwf	??_atoui^0,c
  6369  004632  0ED0               	movlw	208
  6370  004634  240C               	addwf	??_atoui^0,w,c
  6371  004636  6E04               	movwf	___wmul@multiplier^0,c
  6372  004638  6A05               	clrf	(___wmul@multiplier+1)^0,c
  6373  00463A  0EFF               	movlw	255
  6374  00463C  2205               	addwfc	(___wmul@multiplier+1)^0,f,c
  6375  00463E  C00F  F006         	movff	atoui@vp,___wmul@multiplicand
  6376  004642  C010  F007         	movff	atoui@vp+1,___wmul@multiplicand+1
  6377  004646  ECFD  F027         	call	___wmul	;wreg free
  6378  00464A  5004               	movf	?___wmul^0,w,c
  6379  00464C  260D               	addwf	atoui@num^0,f,c
  6380  00464E  5005               	movf	(?___wmul+1)^0,w,c
  6381  004650  220E               	addwfc	(atoui@num+1)^0,f,c
  6382  004652                     
  6383                           ;src/print/toString.c: 65:             vp *= 10;
  6384  004652  C00F  F004         	movff	atoui@vp,___wmul@multiplier
  6385  004656  C010  F005         	movff	atoui@vp+1,___wmul@multiplier+1
  6386  00465A  0E00               	movlw	0
  6387  00465C  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  6388  00465E  0E0A               	movlw	10
  6389  004660  6E06               	movwf	___wmul@multiplicand^0,c
  6390  004662  ECFD  F027         	call	___wmul	;wreg free
  6391  004666  C004  F00F         	movff	?___wmul,atoui@vp
  6392  00466A  C005  F010         	movff	?___wmul+1,atoui@vp+1
  6393  00466E                     
  6394                           ;src/print/toString.c: 69:     }
  6395  00466E  4A11               	infsnz	atoui@i^0,f,c
  6396  004670  2A12               	incf	(atoui@i+1)^0,f,c
  6397  004672                     l4483:
  6398  004672  C00A  F004         	movff	atoui@str,strlen@s
  6399  004676  C00B  F005         	movff	atoui@str+1,strlen@s+1
  6400  00467A  ECCF  F027         	call	_strlen	;wreg free
  6401  00467E  5004               	movf	?_strlen^0,w,c
  6402  004680  5C11               	subwf	atoui@i^0,w,c
  6403  004682  5005               	movf	(?_strlen+1)^0,w,c
  6404  004684  5812               	subwfb	(atoui@i+1)^0,w,c
  6405  004686  A0D8               	btfss	status,0,c
  6406  004688  EF48  F023         	goto	u4681
  6407  00468C  EF4A  F023         	goto	u4680
  6408  004690                     u4681:
  6409  004690  EFF5  F022         	goto	l4473
  6410  004694                     u4680:
  6411  004694                     l715:
  6412                           
  6413                           ;src/print/toString.c: 70:     return num;
  6414  004694  C00D  F00A         	movff	atoui@num,?_atoui
  6415  004698  C00E  F00B         	movff	atoui@num+1,?_atoui+1
  6416  00469C  0012               	return		;funcret
  6417  00469E                     __end_of_atoui:
  6418                           	opt callstack 0
  6419                           
  6420 ;; *************** function ___wmul *****************
  6421 ;; Defined at:
  6422 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  multiplier      2    3[COMRAM] unsigned int 
  6425 ;;  multiplicand    2    5[COMRAM] unsigned int 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  product         2    7[COMRAM] unsigned int 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  2    3[COMRAM] unsigned int 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0, prodl, prodh
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6437 ;;      Params:         4       0       0       0       0       0       0       0       0
  6438 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6440 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6441 ;;Total ram usage:        6 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    2
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_atoui
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text15
  6452  004FFA                     __ptext15:
  6453                           	opt callstack 0
  6454  004FFA                     ___wmul:
  6455                           	opt callstack 25
  6456  004FFA  5004               	movf	___wmul@multiplier^0,w,c
  6457  004FFC  0206               	mulwf	___wmul@multiplicand^0,c
  6458  004FFE  CFF3 F008          	movff	prodl,___wmul@product
  6459  005002  CFF4 F009          	movff	prodh,___wmul@product+1
  6460  005006  5004               	movf	___wmul@multiplier^0,w,c
  6461  005008  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  6462  00500A  50F3               	movf	243,w,c
  6463  00500C  2609               	addwf	(___wmul@product+1)^0,f,c
  6464  00500E  5005               	movf	(___wmul@multiplier+1)^0,w,c
  6465  005010  0206               	mulwf	___wmul@multiplicand^0,c
  6466  005012  50F3               	movf	243,w,c
  6467  005014  2609               	addwf	(___wmul@product+1)^0,f,c
  6468  005016  C008  F004         	movff	___wmul@product,?___wmul
  6469  00501A  C009  F005         	movff	___wmul@product+1,?___wmul+1
  6470  00501E  0012               	return		;funcret
  6471  005020                     __end_of___wmul:
  6472                           	opt callstack 0
  6473                           
  6474 ;; *************** function _ftoa_sci *****************
  6475 ;; Defined at:
  6476 ;;		line 97 in file "src/print/toString.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  buffer          2   68[BANK0 ] PTR unsigned char 
  6479 ;;		 -> my_vprintf@buffer(64), 
  6480 ;;  value           4   70[BANK0 ] PTR unsigned char 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  digit           2   43[COMRAM] int 
  6483 ;;  exponent        2   47[COMRAM] int 
  6484 ;;  i               2   45[COMRAM] int 
  6485 ;;  digit           2   41[COMRAM] int 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  2   68[BANK0 ] int 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6495 ;;      Params:         0       6       0       0       0       0       0       0       0
  6496 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6498 ;;      Totals:         8       6       0       0       0       0       0       0       0
  6499 ;;Total ram usage:       14 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    5
  6502 ;; This function calls:
  6503 ;;		___fleq
  6504 ;;		___flmul
  6505 ;;		___flneg
  6506 ;;		___flsub
  6507 ;;		___fltol
  6508 ;;		___xxtofl
  6509 ;;		_itoa
  6510 ;;		_normalize
  6511 ;; This function is called by:
  6512 ;;		_my_vprintf
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text16
  6517  002BCE                     __ptext16:
  6518                           	opt callstack 0
  6519  002BCE                     _ftoa_sci:
  6520                           	opt callstack 24
  6521  002BCE                     
  6522                           ;src/print/toString.c: 101:     static const int width = 6;;src/print/toString.c: 103:  
      +                             if (value == 0.0) {
  6523  002BCE  C0FA  F004         	movff	ftoa_sci@value,___fleq@ff1
  6524  002BD2  C0FB  F005         	movff	ftoa_sci@value+1,___fleq@ff1+1
  6525  002BD6  C0FC  F006         	movff	ftoa_sci@value+2,___fleq@ff1+2
  6526  002BDA  C0FD  F007         	movff	ftoa_sci@value+3,___fleq@ff1+3
  6527  002BDE  0E00               	movlw	0
  6528  002BE0  6E08               	movwf	___fleq@ff2^0,c
  6529  002BE2  0E00               	movlw	0
  6530  002BE4  6E09               	movwf	(___fleq@ff2+1)^0,c
  6531  002BE6  0E00               	movlw	0
  6532  002BE8  6E0A               	movwf	(___fleq@ff2+2)^0,c
  6533  002BEA  0E00               	movlw	0
  6534  002BEC  6E0B               	movwf	(___fleq@ff2+3)^0,c
  6535  002BEE  EC09  F024         	call	___fleq	;wreg free
  6536  002BF2  A0D8               	btfss	status,0,c
  6537  002BF4  EFFE  F015         	goto	u6081
  6538  002BF8  EF00  F016         	goto	u6080
  6539  002BFC                     u6081:
  6540  002BFC  EF15  F016         	goto	l5295
  6541  002C00                     u6080:
  6542  002C00                     
  6543                           ;src/print/toString.c: 104:         buffer[0] = '0';
  6544  002C00  C0F8  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6545  002C04  C0F9  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6546  002C08  0E30               	movlw	48
  6547  002C0A  6EDF               	movwf	indf2,c
  6548  002C0C                     
  6549                           ;src/print/toString.c: 105:         buffer[1] = '\0';
  6550  002C0C  0100               	movlb	0	; () banked
  6551  002C0E  EE20 F001          	lfsr	2,1
  6552  002C12  51F8               	movf	ftoa_sci@buffer& (0+255),w,b
  6553  002C14  26D9               	addwf	fsr2l,f,c
  6554  002C16  51F9               	movf	(ftoa_sci@buffer+1)& (0+255),w,b
  6555  002C18  22DA               	addwfc	fsr2h,f,c
  6556  002C1A  0E00               	movlw	0
  6557  002C1C  6EDF               	movwf	indf2,c
  6558  002C1E                     
  6559                           ; BSR set to: 0
  6560                           ;src/print/toString.c: 106:         return 0;
  6561  002C1E  0E00               	movlw	0
  6562  002C20  6FF9               	movwf	(?_ftoa_sci+1)& (0+255),b
  6563  002C22  0E00               	movlw	0
  6564  002C24  6FF8               	movwf	?_ftoa_sci& (0+255),b
  6565  002C26  EF56  F017         	goto	l731
  6566  002C2A                     l5295:
  6567                           
  6568                           ;src/print/toString.c: 109:     if (value < 0.0) {
  6569  002C2A  0100               	movlb	0	; () banked
  6570  002C2C  BFFD               	btfsc	(ftoa_sci@value+3)& (0+255),7,b
  6571  002C2E  EF1D  F016         	goto	u6090
  6572  002C32  EF1B  F016         	goto	u6091
  6573  002C36                     u6091:
  6574  002C36  EF2F  F016         	goto	l5299
  6575  002C3A                     u6090:
  6576  002C3A                     
  6577                           ; BSR set to: 0
  6578                           ;src/print/toString.c: 110:         value = -value;
  6579  002C3A  C0FA  F004         	movff	ftoa_sci@value,___flneg@f1
  6580  002C3E  C0FB  F005         	movff	ftoa_sci@value+1,___flneg@f1+1
  6581  002C42  C0FC  F006         	movff	ftoa_sci@value+2,___flneg@f1+2
  6582  002C46  C0FD  F007         	movff	ftoa_sci@value+3,___flneg@f1+3
  6583  002C4A  ECB3  F027         	call	___flneg	;wreg free
  6584  002C4E  C004  F0FA         	movff	?___flneg,ftoa_sci@value
  6585  002C52  C005  F0FB         	movff	?___flneg+1,ftoa_sci@value+1
  6586  002C56  C006  F0FC         	movff	?___flneg+2,ftoa_sci@value+2
  6587  002C5A  C007  F0FD         	movff	?___flneg+3,ftoa_sci@value+3
  6588  002C5E                     l5299:
  6589                           
  6590                           ;src/print/toString.c: 113:     exponent = normalize(&value);
  6591  002C5E  0EFA               	movlw	low ftoa_sci@value
  6592  002C60  6E1D               	movwf	normalize@val^0,c
  6593  002C62  0E00               	movlw	high ftoa_sci@value
  6594  002C64  6E1E               	movwf	(normalize@val+1)^0,c
  6595  002C66  EC56  F01F         	call	_normalize	;wreg free
  6596  002C6A  C01D  F030         	movff	?_normalize,ftoa_sci@exponent
  6597  002C6E  C01E  F031         	movff	?_normalize+1,ftoa_sci@exponent+1
  6598  002C72                     
  6599                           ;src/print/toString.c: 115:     int digit = value * 10.0;
  6600  002C72  0E00               	movlw	0
  6601  002C74  6E08               	movwf	___flmul@a^0,c
  6602  002C76  0E00               	movlw	0
  6603  002C78  6E09               	movwf	(___flmul@a+1)^0,c
  6604  002C7A  0E20               	movlw	32
  6605  002C7C  6E0A               	movwf	(___flmul@a+2)^0,c
  6606  002C7E  0E41               	movlw	65
  6607  002C80  6E0B               	movwf	(___flmul@a+3)^0,c
  6608  002C82  C0FA  F004         	movff	ftoa_sci@value,___flmul@b
  6609  002C86  C0FB  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  6610  002C8A  C0FC  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  6611  002C8E  C0FD  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  6612  002C92  ECF1  F00E         	call	___flmul	;wreg free
  6613  002C96  C004  F01D         	movff	?___flmul,___fltol@f1
  6614  002C9A  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  6615  002C9E  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  6616  002CA2  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  6617  002CA6  ECF6  F020         	call	___fltol	;wreg free
  6618  002CAA  C01D  F02A         	movff	?___fltol,ftoa_sci@digit
  6619  002CAE  C01E  F02B         	movff	?___fltol+1,ftoa_sci@digit+1
  6620  002CB2                     
  6621                           ;src/print/toString.c: 116:     *buffer++ = digit + '0';
  6622  002CB2  502A               	movf	ftoa_sci@digit^0,w,c
  6623  002CB4  0F30               	addlw	48
  6624  002CB6  C0F8  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6625  002CBA  C0F9  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6626  002CBE  6EDF               	movwf	indf2,c
  6627  002CC0  0100               	movlb	0	; () banked
  6628  002CC2  4BF8               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6629  002CC4  2BF9               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6630  002CC6                     
  6631                           ; BSR set to: 0
  6632                           ;src/print/toString.c: 117:     value = value * 10.0 - digit;
  6633  002CC6  0E00               	movlw	0
  6634  002CC8  6E08               	movwf	___flmul@a^0,c
  6635  002CCA  0E00               	movlw	0
  6636  002CCC  6E09               	movwf	(___flmul@a+1)^0,c
  6637  002CCE  0E20               	movlw	32
  6638  002CD0  6E0A               	movwf	(___flmul@a+2)^0,c
  6639  002CD2  0E41               	movlw	65
  6640  002CD4  6E0B               	movwf	(___flmul@a+3)^0,c
  6641  002CD6  C0FA  F004         	movff	ftoa_sci@value,___flmul@b
  6642  002CDA  C0FB  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  6643  002CDE  C0FC  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  6644  002CE2  C0FD  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  6645  002CE6  ECF1  F00E         	call	___flmul	;wreg free
  6646  002CEA  C004  F01D         	movff	?___flmul,___flsub@b
  6647  002CEE  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  6648  002CF2  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  6649  002CF6  C007  F020         	movff	?___flmul+3,___flsub@b+3
  6650  002CFA  C02A  F004         	movff	ftoa_sci@digit,___xxtofl@val
  6651  002CFE  C02B  F005         	movff	ftoa_sci@digit+1,___xxtofl@val+1
  6652  002D02  0E00               	movlw	0
  6653  002D04  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  6654  002D06  0EFF               	movlw	-1
  6655  002D08  6E06               	movwf	(___xxtofl@val+2)^0,c
  6656  002D0A  6E07               	movwf	(___xxtofl@val+3)^0,c
  6657  002D0C  0E01               	movlw	1
  6658  002D0E  EC57  F01C         	call	___xxtofl
  6659  002D12  C004  F021         	movff	?___xxtofl,___flsub@a
  6660  002D16  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  6661  002D1A  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  6662  002D1E  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  6663  002D22  EC0C  F027         	call	___flsub	;wreg free
  6664  002D26  C01D  F0FA         	movff	?___flsub,ftoa_sci@value
  6665  002D2A  C01E  F0FB         	movff	?___flsub+1,ftoa_sci@value+1
  6666  002D2E  C01F  F0FC         	movff	?___flsub+2,ftoa_sci@value+2
  6667  002D32  C020  F0FD         	movff	?___flsub+3,ftoa_sci@value+3
  6668  002D36                     
  6669                           ;src/print/toString.c: 118:     --exponent;
  6670  002D36  0630               	decf	ftoa_sci@exponent^0,f,c
  6671  002D38  A0D8               	btfss	status,0,c
  6672  002D3A  0631               	decf	(ftoa_sci@exponent+1)^0,f,c
  6673  002D3C                     
  6674                           ;src/print/toString.c: 120:     *buffer++ = '.';
  6675  002D3C  C0F8  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6676  002D40  C0F9  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6677  002D44  0E2E               	movlw	46
  6678  002D46  6EDF               	movwf	indf2,c
  6679  002D48  0100               	movlb	0	; () banked
  6680  002D4A  4BF8               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6681  002D4C  2BF9               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6682  002D4E                     
  6683                           ; BSR set to: 0
  6684                           ;src/print/toString.c: 121:     int i;;src/print/toString.c: 122:     for (i = 0; i < wi
      +                          dth; i++) {
  6685  002D4E  0E00               	movlw	0
  6686  002D50  6E2F               	movwf	(ftoa_sci@i+1)^0,c
  6687  002D52  0E00               	movlw	0
  6688  002D54  6E2E               	movwf	ftoa_sci@i^0,c
  6689  002D56                     l5321:
  6690                           
  6691                           ;src/print/toString.c: 123:         int digit = value * 10.0;
  6692  002D56  0E00               	movlw	0
  6693  002D58  6E08               	movwf	___flmul@a^0,c
  6694  002D5A  0E00               	movlw	0
  6695  002D5C  6E09               	movwf	(___flmul@a+1)^0,c
  6696  002D5E  0E20               	movlw	32
  6697  002D60  6E0A               	movwf	(___flmul@a+2)^0,c
  6698  002D62  0E41               	movlw	65
  6699  002D64  6E0B               	movwf	(___flmul@a+3)^0,c
  6700  002D66  C0FA  F004         	movff	ftoa_sci@value,___flmul@b
  6701  002D6A  C0FB  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  6702  002D6E  C0FC  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  6703  002D72  C0FD  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  6704  002D76  ECF1  F00E         	call	___flmul	;wreg free
  6705  002D7A  C004  F01D         	movff	?___flmul,___fltol@f1
  6706  002D7E  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  6707  002D82  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  6708  002D86  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  6709  002D8A  ECF6  F020         	call	___fltol	;wreg free
  6710  002D8E  C01D  F02C         	movff	?___fltol,ftoa_sci@digit_1655
  6711  002D92  C01E  F02D         	movff	?___fltol+1,ftoa_sci@digit_1655+1
  6712  002D96                     
  6713                           ;src/print/toString.c: 124:         *buffer++ = digit + '0';
  6714  002D96  502C               	movf	ftoa_sci@digit_1655^0,w,c
  6715  002D98  0F30               	addlw	48
  6716  002D9A  C0F8  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6717  002D9E  C0F9  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6718  002DA2  6EDF               	movwf	indf2,c
  6719  002DA4  0100               	movlb	0	; () banked
  6720  002DA6  4BF8               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6721  002DA8  2BF9               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6722  002DAA                     
  6723                           ; BSR set to: 0
  6724                           ;src/print/toString.c: 125:         value = value * 10.0 - digit;
  6725  002DAA  0E00               	movlw	0
  6726  002DAC  6E08               	movwf	___flmul@a^0,c
  6727  002DAE  0E00               	movlw	0
  6728  002DB0  6E09               	movwf	(___flmul@a+1)^0,c
  6729  002DB2  0E20               	movlw	32
  6730  002DB4  6E0A               	movwf	(___flmul@a+2)^0,c
  6731  002DB6  0E41               	movlw	65
  6732  002DB8  6E0B               	movwf	(___flmul@a+3)^0,c
  6733  002DBA  C0FA  F004         	movff	ftoa_sci@value,___flmul@b
  6734  002DBE  C0FB  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  6735  002DC2  C0FC  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  6736  002DC6  C0FD  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  6737  002DCA  ECF1  F00E         	call	___flmul	;wreg free
  6738  002DCE  C004  F01D         	movff	?___flmul,___flsub@b
  6739  002DD2  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  6740  002DD6  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  6741  002DDA  C007  F020         	movff	?___flmul+3,___flsub@b+3
  6742  002DDE  C02C  F004         	movff	ftoa_sci@digit_1655,___xxtofl@val
  6743  002DE2  C02D  F005         	movff	ftoa_sci@digit_1655+1,___xxtofl@val+1
  6744  002DE6  0E00               	movlw	0
  6745  002DE8  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  6746  002DEA  0EFF               	movlw	-1
  6747  002DEC  6E06               	movwf	(___xxtofl@val+2)^0,c
  6748  002DEE  6E07               	movwf	(___xxtofl@val+3)^0,c
  6749  002DF0  0E01               	movlw	1
  6750  002DF2  EC57  F01C         	call	___xxtofl
  6751  002DF6  C004  F021         	movff	?___xxtofl,___flsub@a
  6752  002DFA  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  6753  002DFE  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  6754  002E02  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  6755  002E06  EC0C  F027         	call	___flsub	;wreg free
  6756  002E0A  C01D  F0FA         	movff	?___flsub,ftoa_sci@value
  6757  002E0E  C01E  F0FB         	movff	?___flsub+1,ftoa_sci@value+1
  6758  002E12  C01F  F0FC         	movff	?___flsub+2,ftoa_sci@value+2
  6759  002E16  C020  F0FD         	movff	?___flsub+3,ftoa_sci@value+3
  6760  002E1A                     
  6761                           ;src/print/toString.c: 126:     }
  6762  002E1A  4A2E               	infsnz	ftoa_sci@i^0,f,c
  6763  002E1C  2A2F               	incf	(ftoa_sci@i+1)^0,f,c
  6764  002E1E  BE2F               	btfsc	(ftoa_sci@i+1)^0,7,c
  6765  002E20  EF1B  F017         	goto	u6101
  6766  002E24  502F               	movf	(ftoa_sci@i+1)^0,w,c
  6767  002E26  E109               	bnz	u6100
  6768  002E28  0E06               	movlw	6
  6769  002E2A  5C2E               	subwf	ftoa_sci@i^0,w,c
  6770  002E2C  A0D8               	btfss	status,0,c
  6771  002E2E  EF1B  F017         	goto	u6101
  6772  002E32  EF1D  F017         	goto	u6100
  6773  002E36                     u6101:
  6774  002E36  EFAB  F016         	goto	l5321
  6775  002E3A                     u6100:
  6776  002E3A                     
  6777                           ;src/print/toString.c: 128:     *buffer++ = 'e';
  6778  002E3A  C0F8  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6779  002E3E  C0F9  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6780  002E42  0E65               	movlw	101
  6781  002E44  6EDF               	movwf	indf2,c
  6782  002E46  0100               	movlb	0	; () banked
  6783  002E48  4BF8               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6784  002E4A  2BF9               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6785  002E4C                     
  6786                           ; BSR set to: 0
  6787                           ;src/print/toString.c: 129:     if (exponent >= 0)
  6788  002E4C  BE31               	btfsc	(ftoa_sci@exponent+1)^0,7,c
  6789  002E4E  EF2B  F017         	goto	u6111
  6790  002E52  EF2D  F017         	goto	u6110
  6791  002E56                     u6111:
  6792  002E56  EF37  F017         	goto	l5343
  6793  002E5A                     u6110:
  6794  002E5A                     
  6795                           ; BSR set to: 0
  6796                           ;src/print/toString.c: 130:         *buffer++ = '+';
  6797  002E5A  C0F8  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6798  002E5E  C0F9  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6799  002E62  0E2B               	movlw	43
  6800  002E64  6EDF               	movwf	indf2,c
  6801  002E66                     l5341:
  6802                           
  6803                           ; BSR set to: 0
  6804  002E66  4BF8               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6805  002E68  2BF9               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6806  002E6A  EF3F  F017         	goto	l5347
  6807  002E6E                     l5343:
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;src/print/toString.c: 132:         *buffer++ = '-';
  6811  002E6E  C0F8  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6812  002E72  C0F9  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6813  002E76  0E2D               	movlw	45
  6814  002E78  6EDF               	movwf	indf2,c
  6815  002E7A  EF33  F017         	goto	l5341
  6816  002E7E                     l5347:
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;src/print/toString.c: 133:     itoa(buffer, exponent, 10);
  6820  002E7E  C0F8  F016         	movff	ftoa_sci@buffer,itoa@str
  6821  002E82  C0F9  F017         	movff	ftoa_sci@buffer+1,itoa@str+1
  6822  002E86  C030  F018         	movff	ftoa_sci@exponent,itoa@num
  6823  002E8A  C031  F019         	movff	ftoa_sci@exponent+1,itoa@num+1
  6824  002E8E  0E00               	movlw	0
  6825  002E90  BE19               	btfsc	(itoa@num+1)^0,7,c
  6826  002E92  0EFF               	movlw	-1
  6827  002E94  6E1A               	movwf	(itoa@num+2)^0,c
  6828  002E96  6E1B               	movwf	(itoa@num+3)^0,c
  6829  002E98  0E00               	movlw	0
  6830  002E9A  6E1D               	movwf	(itoa@base_+1)^0,c
  6831  002E9C  0E0A               	movlw	10
  6832  002E9E  6E1C               	movwf	itoa@base_^0,c
  6833  002EA0  EC31  F01D         	call	_itoa	;wreg free
  6834  002EA4                     
  6835                           ;src/print/toString.c: 134:     return exponent;
  6836  002EA4  C030  F0F8         	movff	ftoa_sci@exponent,?_ftoa_sci
  6837  002EA8  C031  F0F9         	movff	ftoa_sci@exponent+1,?_ftoa_sci+1
  6838  002EAC                     l731:
  6839  002EAC  0012               	return		;funcret
  6840  002EAE                     __end_of_ftoa_sci:
  6841                           	opt callstack 0
  6842                           
  6843 ;; *************** function _itoa *****************
  6844 ;; Defined at:
  6845 ;;		line 22 in file "src/print/toString.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  str             2   21[COMRAM] PTR unsigned char 
  6848 ;;		 -> my_vprintf@buffer(64), 
  6849 ;;  num             4   23[COMRAM] long 
  6850 ;;  base_           2   27[COMRAM] int 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  rem             4   35[COMRAM] long 
  6853 ;;  i               2   39[COMRAM] int 
  6854 ;;  isNegative      2    0        int 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  2   21[COMRAM] PTR unsigned char 
  6857 ;; Registers used:
  6858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6864 ;;      Params:         8       0       0       0       0       0       0       0       0
  6865 ;;      Locals:        12       0       0       0       0       0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6867 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6868 ;;Total ram usage:       20 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    4
  6871 ;; This function calls:
  6872 ;;		___aldiv
  6873 ;;		___almod
  6874 ;;		_reverse
  6875 ;; This function is called by:
  6876 ;;		_my_vprintf
  6877 ;;		_ftoa_sci
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text17
  6882  003A62                     __ptext17:
  6883                           	opt callstack 0
  6884  003A62                     _itoa:
  6885                           	opt callstack 25
  6886  003A62                     
  6887                           ;src/print/toString.c: 23:     int i = 0;
  6888  003A62  0E00               	movlw	0
  6889  003A64  6E29               	movwf	(itoa@i+1)^0,c
  6890  003A66  0E00               	movlw	0
  6891  003A68  6E28               	movwf	itoa@i^0,c
  6892  003A6A                     
  6893                           ;src/print/toString.c: 27:     if (num == 0) {
  6894  003A6A  5018               	movf	itoa@num^0,w,c
  6895  003A6C  1019               	iorwf	(itoa@num+1)^0,w,c
  6896  003A6E  101A               	iorwf	(itoa@num+2)^0,w,c
  6897  003A70  101B               	iorwf	(itoa@num+3)^0,w,c
  6898  003A72  A4D8               	btfss	status,2,c
  6899  003A74  EF3E  F01D         	goto	u4691
  6900  003A78  EF40  F01D         	goto	u4690
  6901  003A7C                     u4691:
  6902  003A7C  EF52  F01D         	goto	l4497
  6903  003A80                     u4690:
  6904  003A80                     
  6905                           ;src/print/toString.c: 28:         str[i++] = '0';
  6906  003A80  C016  FFD9         	movff	itoa@str,fsr2l
  6907  003A84  C017  FFDA         	movff	itoa@str+1,fsr2h
  6908  003A88  0E30               	movlw	48
  6909  003A8A  6EDF               	movwf	indf2,c
  6910  003A8C  4A28               	infsnz	itoa@i^0,f,c
  6911  003A8E  2A29               	incf	(itoa@i+1)^0,f,c
  6912  003A90                     
  6913                           ;src/print/toString.c: 29:         str[i] = '\0';
  6914  003A90  5028               	movf	itoa@i^0,w,c
  6915  003A92  2416               	addwf	itoa@str^0,w,c
  6916  003A94  6ED9               	movwf	fsr2l,c
  6917  003A96  5029               	movf	(itoa@i+1)^0,w,c
  6918  003A98  2017               	addwfc	(itoa@str+1)^0,w,c
  6919  003A9A  6EDA               	movwf	fsr2h,c
  6920  003A9C  0E00               	movlw	0
  6921  003A9E  6EDF               	movwf	indf2,c
  6922  003AA0  EFF0  F01D         	goto	l700
  6923  003AA4                     l4497:
  6924                           
  6925                           ;src/print/toString.c: 34:     if (num < 0 && base_ == 10) {
  6926  003AA4  BE1B               	btfsc	(itoa@num+3)^0,7,c
  6927  003AA6  EF59  F01D         	goto	u4700
  6928  003AAA  EF57  F01D         	goto	u4701
  6929  003AAE                     u4701:
  6930  003AAE  EFD7  F01D         	goto	l4519
  6931  003AB2                     u4700:
  6932  003AB2  0E0A               	movlw	10
  6933  003AB4  181C               	xorwf	itoa@base_^0,w,c
  6934  003AB6  101D               	iorwf	(itoa@base_+1)^0,w,c
  6935  003AB8  A4D8               	btfss	status,2,c
  6936  003ABA  EF61  F01D         	goto	u4711
  6937  003ABE  EF63  F01D         	goto	u4710
  6938  003AC2                     u4711:
  6939  003AC2  EFD7  F01D         	goto	l4519
  6940  003AC6                     u4710:
  6941  003AC6                     
  6942                           ;src/print/toString.c: 36:         num = -num;
  6943  003AC6  1E1B               	comf	(itoa@num+3)^0,f,c
  6944  003AC8  1E1A               	comf	(itoa@num+2)^0,f,c
  6945  003ACA  1E19               	comf	(itoa@num+1)^0,f,c
  6946  003ACC  6C18               	negf	itoa@num^0,c
  6947  003ACE  0E00               	movlw	0
  6948  003AD0  2219               	addwfc	(itoa@num+1)^0,f,c
  6949  003AD2  221A               	addwfc	(itoa@num+2)^0,f,c
  6950  003AD4  221B               	addwfc	(itoa@num+3)^0,f,c
  6951  003AD6  EFD7  F01D         	goto	l4519
  6952  003ADA                     l4505:
  6953                           
  6954                           ;src/print/toString.c: 41:         long rem = num % base_;
  6955  003ADA  C018  F004         	movff	itoa@num,___almod@dividend
  6956  003ADE  C019  F005         	movff	itoa@num+1,___almod@dividend+1
  6957  003AE2  C01A  F006         	movff	itoa@num+2,___almod@dividend+2
  6958  003AE6  C01B  F007         	movff	itoa@num+3,___almod@dividend+3
  6959  003AEA  C01C  F008         	movff	itoa@base_,___almod@divisor
  6960  003AEE  C01D  F009         	movff	itoa@base_+1,___almod@divisor+1
  6961  003AF2  0E00               	movlw	0
  6962  003AF4  BE09               	btfsc	(___almod@divisor+1)^0,7,c
  6963  003AF6  0EFF               	movlw	-1
  6964  003AF8  6E0A               	movwf	(___almod@divisor+2)^0,c
  6965  003AFA  6E0B               	movwf	(___almod@divisor+3)^0,c
  6966  003AFC  EC71  F022         	call	___almod	;wreg free
  6967  003B00  C004  F024         	movff	?___almod,itoa@rem
  6968  003B04  C005  F025         	movff	?___almod+1,itoa@rem+1
  6969  003B08  C006  F026         	movff	?___almod+2,itoa@rem+2
  6970  003B0C  C007  F027         	movff	?___almod+3,itoa@rem+3
  6971  003B10                     
  6972                           ;src/print/toString.c: 42:         str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';
  6973  003B10  BE27               	btfsc	(itoa@rem+3)^0,7,c
  6974  003B12  EF98  F01D         	goto	u4720
  6975  003B16  5027               	movf	(itoa@rem+3)^0,w,c
  6976  003B18  1026               	iorwf	(itoa@rem+2)^0,w,c
  6977  003B1A  1025               	iorwf	(itoa@rem+1)^0,w,c
  6978  003B1C  E107               	bnz	u4721
  6979  003B1E  0E0A               	movlw	10
  6980  003B20  5C24               	subwf	itoa@rem^0,w,c
  6981  003B22  B0D8               	btfsc	status,0,c
  6982  003B24  EF96  F01D         	goto	u4721
  6983  003B28  EF98  F01D         	goto	u4720
  6984  003B2C                     u4721:
  6985  003B2C  EFA6  F01D         	goto	l4511
  6986  003B30                     u4720:
  6987  003B30  0E30               	movlw	48
  6988  003B32  2424               	addwf	itoa@rem^0,w,c
  6989  003B34  6E20               	movwf	_itoa$1637^0,c
  6990  003B36  0E00               	movlw	0
  6991  003B38  2025               	addwfc	(itoa@rem+1)^0,w,c
  6992  003B3A  6E21               	movwf	(_itoa$1637+1)^0,c
  6993  003B3C  0E00               	movlw	0
  6994  003B3E  2026               	addwfc	(itoa@rem+2)^0,w,c
  6995  003B40  6E22               	movwf	(_itoa$1637+2)^0,c
  6996  003B42  0E00               	movlw	0
  6997  003B44  2027               	addwfc	(itoa@rem+3)^0,w,c
  6998  003B46  6E23               	movwf	(_itoa$1637+3)^0,c
  6999  003B48  EFB2  F01D         	goto	l4513
  7000  003B4C                     l4511:
  7001  003B4C  0E57               	movlw	87
  7002  003B4E  2424               	addwf	itoa@rem^0,w,c
  7003  003B50  6E20               	movwf	_itoa$1637^0,c
  7004  003B52  0E00               	movlw	0
  7005  003B54  2025               	addwfc	(itoa@rem+1)^0,w,c
  7006  003B56  6E21               	movwf	(_itoa$1637+1)^0,c
  7007  003B58  0E00               	movlw	0
  7008  003B5A  2026               	addwfc	(itoa@rem+2)^0,w,c
  7009  003B5C  6E22               	movwf	(_itoa$1637+2)^0,c
  7010  003B5E  0E00               	movlw	0
  7011  003B60  2027               	addwfc	(itoa@rem+3)^0,w,c
  7012  003B62  6E23               	movwf	(_itoa$1637+3)^0,c
  7013  003B64                     l4513:
  7014  003B64  5028               	movf	itoa@i^0,w,c
  7015  003B66  2416               	addwf	itoa@str^0,w,c
  7016  003B68  6ED9               	movwf	fsr2l,c
  7017  003B6A  5029               	movf	(itoa@i+1)^0,w,c
  7018  003B6C  2017               	addwfc	(itoa@str+1)^0,w,c
  7019  003B6E  6EDA               	movwf	fsr2h,c
  7020  003B70  C020  FFDF         	movff	_itoa$1637,indf2
  7021  003B74  4A28               	infsnz	itoa@i^0,f,c
  7022  003B76  2A29               	incf	(itoa@i+1)^0,f,c
  7023  003B78                     
  7024                           ;src/print/toString.c: 43:         num = num/base_;
  7025  003B78  C018  F004         	movff	itoa@num,___aldiv@dividend
  7026  003B7C  C019  F005         	movff	itoa@num+1,___aldiv@dividend+1
  7027  003B80  C01A  F006         	movff	itoa@num+2,___aldiv@dividend+2
  7028  003B84  C01B  F007         	movff	itoa@num+3,___aldiv@dividend+3
  7029  003B88  C01C  F008         	movff	itoa@base_,___aldiv@divisor
  7030  003B8C  C01D  F009         	movff	itoa@base_+1,___aldiv@divisor+1
  7031  003B90  0E00               	movlw	0
  7032  003B92  BE09               	btfsc	(___aldiv@divisor+1)^0,7,c
  7033  003B94  0EFF               	movlw	-1
  7034  003B96  6E0A               	movwf	(___aldiv@divisor+2)^0,c
  7035  003B98  6E0B               	movwf	(___aldiv@divisor+3)^0,c
  7036  003B9A  EC70  F020         	call	___aldiv	;wreg free
  7037  003B9E  C004  F018         	movff	?___aldiv,itoa@num
  7038  003BA2  C005  F019         	movff	?___aldiv+1,itoa@num+1
  7039  003BA6  C006  F01A         	movff	?___aldiv+2,itoa@num+2
  7040  003BAA  C007  F01B         	movff	?___aldiv+3,itoa@num+3
  7041  003BAE                     l4519:
  7042                           
  7043                           ;src/print/toString.c: 40:     while (num != 0) {
  7044  003BAE  5018               	movf	itoa@num^0,w,c
  7045  003BB0  1019               	iorwf	(itoa@num+1)^0,w,c
  7046  003BB2  101A               	iorwf	(itoa@num+2)^0,w,c
  7047  003BB4  101B               	iorwf	(itoa@num+3)^0,w,c
  7048  003BB6  A4D8               	btfss	status,2,c
  7049  003BB8  EFE0  F01D         	goto	u4731
  7050  003BBC  EFE2  F01D         	goto	u4730
  7051  003BC0                     u4731:
  7052  003BC0  EF6D  F01D         	goto	l4505
  7053  003BC4                     u4730:
  7054  003BC4                     
  7055                           ;src/print/toString.c: 46:     str[i] = '\0';
  7056  003BC4  5028               	movf	itoa@i^0,w,c
  7057  003BC6  2416               	addwf	itoa@str^0,w,c
  7058  003BC8  6ED9               	movwf	fsr2l,c
  7059  003BCA  5029               	movf	(itoa@i+1)^0,w,c
  7060  003BCC  2017               	addwfc	(itoa@str+1)^0,w,c
  7061  003BCE  6EDA               	movwf	fsr2h,c
  7062  003BD0  0E00               	movlw	0
  7063  003BD2  6EDF               	movwf	indf2,c
  7064  003BD4                     
  7065                           ;src/print/toString.c: 49:     reverse(str);
  7066  003BD4  C016  F012         	movff	itoa@str,reverse@str
  7067  003BD8  C017  F013         	movff	itoa@str+1,reverse@str+1
  7068  003BDC  EC5E  F024         	call	_reverse	;wreg free
  7069  003BE0                     l700:
  7070  003BE0  0012               	return		;funcret
  7071  003BE2                     __end_of_itoa:
  7072                           	opt callstack 0
  7073                           
  7074 ;; *************** function _reverse *****************
  7075 ;; Defined at:
  7076 ;;		line 8 in file "src/print/toString.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  str             2   17[COMRAM] PTR unsigned char 
  7079 ;;		 -> my_vprintf@buffer(64), getWP@prec_str(5), getWP@width_str(5), 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  auxstr         64    0[BANK0 ] unsigned char [64]
  7082 ;;  i               2   66[BANK0 ] int 
  7083 ;;  j               2   64[BANK0 ] int 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  1    wreg      void 
  7086 ;; Registers used:
  7087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7093 ;;      Params:         2       0       0       0       0       0       0       0       0
  7094 ;;      Locals:         0      68       0       0       0       0       0       0       0
  7095 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7096 ;;      Totals:         4      68       0       0       0       0       0       0       0
  7097 ;;Total ram usage:       72 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    3
  7100 ;; This function calls:
  7101 ;;		_strcpy
  7102 ;;		_strlen
  7103 ;; This function is called by:
  7104 ;;		_getWP
  7105 ;;		_itoa
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           	psect	text18
  7110  0048BC                     __ptext18:
  7111                           	opt callstack 0
  7112  0048BC                     _reverse:
  7113                           	opt callstack 25
  7114  0048BC                     
  7115                           ;src/print/toString.c: 9:     int i;;src/print/toString.c: 10:     int j = strlen(str) -
      +                          1;
  7116  0048BC  C012  F004         	movff	reverse@str,strlen@s
  7117  0048C0  C013  F005         	movff	reverse@str+1,strlen@s+1
  7118  0048C4  ECCF  F027         	call	_strlen	;wreg free
  7119  0048C8  0EFF               	movlw	255
  7120  0048CA  2404               	addwf	?_strlen^0,w,c
  7121  0048CC  0100               	movlb	0	; () banked
  7122  0048CE  6FF4               	movwf	reverse@j& (0+255),b
  7123  0048D0  0EFF               	movlw	255
  7124  0048D2  2005               	addwfc	(?_strlen+1)^0,w,c
  7125  0048D4  6FF5               	movwf	(reverse@j+1)& (0+255),b
  7126  0048D6                     
  7127                           ; BSR set to: 0
  7128                           ;src/print/toString.c: 11:     char auxstr[64] = " ";
  7129  0048D6  EE22  F080         	lfsr	2,reverse@F192
  7130  0048DA  EE10  F0B4         	lfsr	1,reverse@auxstr
  7131  0048DE  0E3F               	movlw	63
  7132  0048E0                     u3481:
  7133  0048E0  CFDB FFE3          	movff	plusw2,plusw1
  7134  0048E4  06E8               	decf	wreg,f,c
  7135  0048E6  E2FC               	bc	u3481
  7136  0048E8                     
  7137                           ; BSR set to: 0
  7138                           ;src/print/toString.c: 13:     for(i = 0; i <= j;i++)
  7139  0048E8  0E00               	movlw	0
  7140  0048EA  6FF7               	movwf	(reverse@i+1)& (0+255),b
  7141  0048EC  0E00               	movlw	0
  7142  0048EE  6FF6               	movwf	reverse@i& (0+255),b
  7143  0048F0  EF90  F024         	goto	l3789
  7144  0048F4                     l3785:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;src/print/toString.c: 14:          auxstr[i] = str[j-i];
  7148  0048F4  51F6               	movf	reverse@i& (0+255),w,b
  7149  0048F6  5C12               	subwf	reverse@str^0,w,c
  7150  0048F8  6E14               	movwf	??_reverse^0,c
  7151  0048FA  51F7               	movf	(reverse@i+1)& (0+255),w,b
  7152  0048FC  5813               	subwfb	(reverse@str+1)^0,w,c
  7153  0048FE  6E15               	movwf	(??_reverse+1)^0,c
  7154  004900  51F4               	movf	reverse@j& (0+255),w,b
  7155  004902  2414               	addwf	??_reverse^0,w,c
  7156  004904  6ED9               	movwf	fsr2l,c
  7157  004906  51F5               	movf	(reverse@j+1)& (0+255),w,b
  7158  004908  2015               	addwfc	(??_reverse+1)^0,w,c
  7159  00490A  6EDA               	movwf	fsr2h,c
  7160  00490C  0EB4               	movlw	low reverse@auxstr
  7161  00490E  25F6               	addwf	reverse@i& (0+255),w,b
  7162  004910  6EE1               	movwf	fsr1l,c
  7163  004912  0E00               	movlw	high reverse@auxstr
  7164  004914  21F7               	addwfc	(reverse@i+1)& (0+255),w,b
  7165  004916  6EE2               	movwf	fsr1h,c
  7166  004918  CFDF FFE7          	movff	indf2,indf1
  7167  00491C                     
  7168                           ; BSR set to: 0
  7169  00491C  4BF6               	infsnz	reverse@i& (0+255),f,b
  7170  00491E  2BF7               	incf	(reverse@i+1)& (0+255),f,b
  7171  004920                     l3789:
  7172                           
  7173                           ; BSR set to: 0
  7174  004920  51F6               	movf	reverse@i& (0+255),w,b
  7175  004922  5DF4               	subwf	reverse@j& (0+255),w,b
  7176  004924  51F5               	movf	(reverse@j+1)& (0+255),w,b
  7177  004926  0A80               	xorlw	128
  7178  004928  6E14               	movwf	??_reverse^0,c
  7179  00492A  51F7               	movf	(reverse@i+1)& (0+255),w,b
  7180  00492C  0A80               	xorlw	128
  7181  00492E  5814               	subwfb	??_reverse^0,w,c
  7182  004930  B0D8               	btfsc	status,0,c
  7183  004932  EF9D  F024         	goto	u3491
  7184  004936  EF9F  F024         	goto	u3490
  7185  00493A                     u3491:
  7186  00493A  EF7A  F024         	goto	l3785
  7187  00493E                     u3490:
  7188  00493E                     
  7189                           ; BSR set to: 0
  7190                           ;src/print/toString.c: 16:     strcpy(str, auxstr);
  7191  00493E  C012  F008         	movff	reverse@str,strcpy@dest
  7192  004942  C013  F009         	movff	reverse@str+1,strcpy@dest+1
  7193  004946  0EB4               	movlw	low reverse@auxstr
  7194  004948  6E0A               	movwf	strcpy@src^0,c
  7195  00494A  0E00               	movlw	high reverse@auxstr
  7196  00494C  6E0B               	movwf	(strcpy@src+1)^0,c
  7197  00494E  EC11  F026         	call	_strcpy	;wreg free
  7198  004952  0012               	return		;funcret
  7199  004954                     __end_of_reverse:
  7200                           	opt callstack 0
  7201                           
  7202 ;; *************** function _strcpy *****************
  7203 ;; Defined at:
  7204 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  dest            2    7[COMRAM] PTR unsigned char 
  7207 ;;		 -> my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), getWP@width_str(5), 
  7208 ;;  src             2    9[COMRAM] PTR const unsigned char 
  7209 ;;		 -> reverse@auxstr(64), STR_5(2), STR_4(2), my_vprintf@buffer(64), 
  7210 ;;		 -> my_vprintf@ch(2), my_vprintf@char_temp(2), 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  d               2   15[COMRAM] PTR unsigned char 
  7213 ;;		 -> my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), getWP@width_str(5), 
  7214 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7215 ;;		 -> reverse@auxstr(64), STR_5(2), STR_4(2), my_vprintf@buffer(64), 
  7216 ;;		 -> my_vprintf@ch(2), my_vprintf@char_temp(2), 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  2    7[COMRAM] PTR unsigned char 
  7219 ;; Registers used:
  7220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7226 ;;      Params:         4       0       0       0       0       0       0       0       0
  7227 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7228 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7229 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7230 ;;Total ram usage:       10 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    2
  7233 ;; This function calls:
  7234 ;;		Nothing
  7235 ;; This function is called by:
  7236 ;;		_my_vprintf
  7237 ;;		_reverse
  7238 ;;		_strcat
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text19
  7243  004C22                     __ptext19:
  7244                           	opt callstack 0
  7245  004C22                     _strcpy:
  7246                           	opt callstack 27
  7247  004C22  C00A  F00E         	movff	strcpy@src,strcpy@s
  7248  004C26  C00B  F00F         	movff	strcpy@src+1,strcpy@s+1
  7249  004C2A  C008  F010         	movff	strcpy@dest,strcpy@d
  7250  004C2E  C009  F011         	movff	strcpy@dest+1,strcpy@d+1
  7251  004C32                     l3767:
  7252  004C32  500E               	movf	strcpy@s^0,w,c
  7253  004C34  6E0C               	movwf	??_strcpy^0,c
  7254  004C36  500F               	movf	(strcpy@s+1)^0,w,c
  7255  004C38  6E0D               	movwf	(??_strcpy+1)^0,c
  7256  004C3A  4A0E               	infsnz	strcpy@s^0,f,c
  7257  004C3C  2A0F               	incf	(strcpy@s+1)^0,f,c
  7258  004C3E  C00C  FFF6         	movff	??_strcpy,tblptrl
  7259  004C42  C00D  FFF7         	movff	??_strcpy+1,tblptrh
  7260  004C46  6AF8               	clrf	tblptru,c
  7261  004C48  C010  FFD9         	movff	strcpy@d,fsr2l
  7262  004C4C  C011  FFDA         	movff	strcpy@d+1,fsr2h
  7263  004C50  4A10               	infsnz	strcpy@d^0,f,c
  7264  004C52  2A11               	incf	(strcpy@d+1)^0,f,c
  7265  004C54  0E07               	movlw	(high __ramtop+-1)
  7266  004C56  64F7               	cpfsgt	tblptrh,c
  7267  004C58  D003               	bra	u3447
  7268  004C5A  0008               	tblrd		*
  7269  004C5C  50F5               	movf	tablat,w,c
  7270  004C5E  D005               	bra	u3440
  7271  004C60                     u3447:
  7272  004C60  CFF6 FFE1          	movff	tblptrl,fsr1l
  7273  004C64  CFF7 FFE2          	movff	tblptrh,fsr1h
  7274  004C68  50E7               	movf	indf1,w,c
  7275  004C6A                     u3440:
  7276  004C6A  6EDF               	movwf	indf2,c
  7277  004C6C  50DF               	movf	indf2,w,c
  7278  004C6E  A4D8               	btfss	status,2,c
  7279  004C70  EF3C  F026         	goto	u3451
  7280  004C74  EF3E  F026         	goto	u3450
  7281  004C78                     u3451:
  7282  004C78  EF19  F026         	goto	l3767
  7283  004C7C                     u3450:
  7284  004C7C  0012               	return		;funcret
  7285  004C7E                     __end_of_strcpy:
  7286                           	opt callstack 0
  7287                           
  7288 ;; *************** function ___almod *****************
  7289 ;; Defined at:
  7290 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  dividend        4    3[COMRAM] long 
  7293 ;;  divisor         4    7[COMRAM] long 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  sign            1   12[COMRAM] unsigned char 
  7296 ;;  counter         1   11[COMRAM] unsigned char 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  4    3[COMRAM] long 
  7299 ;; Registers used:
  7300 ;;		wreg, status,2, status,0
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7306 ;;      Params:         8       0       0       0       0       0       0       0       0
  7307 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7309 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7310 ;;Total ram usage:       10 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; Hardware stack levels required when called:    2
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		_itoa
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text20
  7321  0044E2                     __ptext20:
  7322                           	opt callstack 0
  7323  0044E2                     ___almod:
  7324                           	opt callstack 26
  7325  0044E2  0E00               	movlw	0
  7326  0044E4  6E0D               	movwf	___almod@sign^0,c
  7327  0044E6  BE07               	btfsc	(___almod@dividend+3)^0,7,c
  7328  0044E8  EF7A  F022         	goto	u3560
  7329  0044EC  EF78  F022         	goto	u3561
  7330  0044F0                     u3561:
  7331  0044F0  EF84  F022         	goto	l3851
  7332  0044F4                     u3560:
  7333  0044F4  1E07               	comf	(___almod@dividend+3)^0,f,c
  7334  0044F6  1E06               	comf	(___almod@dividend+2)^0,f,c
  7335  0044F8  1E05               	comf	(___almod@dividend+1)^0,f,c
  7336  0044FA  6C04               	negf	___almod@dividend^0,c
  7337  0044FC  0E00               	movlw	0
  7338  0044FE  2205               	addwfc	(___almod@dividend+1)^0,f,c
  7339  004500  2206               	addwfc	(___almod@dividend+2)^0,f,c
  7340  004502  2207               	addwfc	(___almod@dividend+3)^0,f,c
  7341  004504  0E01               	movlw	1
  7342  004506  6E0D               	movwf	___almod@sign^0,c
  7343  004508                     l3851:
  7344  004508  BE0B               	btfsc	(___almod@divisor+3)^0,7,c
  7345  00450A  EF8B  F022         	goto	u3570
  7346  00450E  EF89  F022         	goto	u3571
  7347  004512                     u3571:
  7348  004512  EF93  F022         	goto	l3855
  7349  004516                     u3570:
  7350  004516  1E0B               	comf	(___almod@divisor+3)^0,f,c
  7351  004518  1E0A               	comf	(___almod@divisor+2)^0,f,c
  7352  00451A  1E09               	comf	(___almod@divisor+1)^0,f,c
  7353  00451C  6C08               	negf	___almod@divisor^0,c
  7354  00451E  0E00               	movlw	0
  7355  004520  2209               	addwfc	(___almod@divisor+1)^0,f,c
  7356  004522  220A               	addwfc	(___almod@divisor+2)^0,f,c
  7357  004524  220B               	addwfc	(___almod@divisor+3)^0,f,c
  7358  004526                     l3855:
  7359  004526  5008               	movf	___almod@divisor^0,w,c
  7360  004528  1009               	iorwf	(___almod@divisor+1)^0,w,c
  7361  00452A  100A               	iorwf	(___almod@divisor+2)^0,w,c
  7362  00452C  100B               	iorwf	(___almod@divisor+3)^0,w,c
  7363  00452E  B4D8               	btfsc	status,2,c
  7364  004530  EF9C  F022         	goto	u3581
  7365  004534  EF9E  F022         	goto	u3580
  7366  004538                     u3581:
  7367  004538  EFCE  F022         	goto	l3871
  7368  00453C                     u3580:
  7369  00453C  0E01               	movlw	1
  7370  00453E  6E0C               	movwf	___almod@counter^0,c
  7371  004540  EFA8  F022         	goto	l3861
  7372  004544                     l3859:
  7373  004544  90D8               	bcf	status,0,c
  7374  004546  3608               	rlcf	___almod@divisor^0,f,c
  7375  004548  3609               	rlcf	(___almod@divisor+1)^0,f,c
  7376  00454A  360A               	rlcf	(___almod@divisor+2)^0,f,c
  7377  00454C  360B               	rlcf	(___almod@divisor+3)^0,f,c
  7378  00454E  2A0C               	incf	___almod@counter^0,f,c
  7379  004550                     l3861:
  7380  004550  AE0B               	btfss	(___almod@divisor+3)^0,7,c
  7381  004552  EFAD  F022         	goto	u3591
  7382  004556  EFAF  F022         	goto	u3590
  7383  00455A                     u3591:
  7384  00455A  EFA2  F022         	goto	l3859
  7385  00455E                     u3590:
  7386  00455E                     l3863:
  7387  00455E  5008               	movf	___almod@divisor^0,w,c
  7388  004560  5C04               	subwf	___almod@dividend^0,w,c
  7389  004562  5009               	movf	(___almod@divisor+1)^0,w,c
  7390  004564  5805               	subwfb	(___almod@dividend+1)^0,w,c
  7391  004566  500A               	movf	(___almod@divisor+2)^0,w,c
  7392  004568  5806               	subwfb	(___almod@dividend+2)^0,w,c
  7393  00456A  500B               	movf	(___almod@divisor+3)^0,w,c
  7394  00456C  5807               	subwfb	(___almod@dividend+3)^0,w,c
  7395  00456E  A0D8               	btfss	status,0,c
  7396  004570  EFBC  F022         	goto	u3601
  7397  004574  EFBE  F022         	goto	u3600
  7398  004578                     u3601:
  7399  004578  EFC6  F022         	goto	l3867
  7400  00457C                     u3600:
  7401  00457C  5008               	movf	___almod@divisor^0,w,c
  7402  00457E  5E04               	subwf	___almod@dividend^0,f,c
  7403  004580  5009               	movf	(___almod@divisor+1)^0,w,c
  7404  004582  5A05               	subwfb	(___almod@dividend+1)^0,f,c
  7405  004584  500A               	movf	(___almod@divisor+2)^0,w,c
  7406  004586  5A06               	subwfb	(___almod@dividend+2)^0,f,c
  7407  004588  500B               	movf	(___almod@divisor+3)^0,w,c
  7408  00458A  5A07               	subwfb	(___almod@dividend+3)^0,f,c
  7409  00458C                     l3867:
  7410  00458C  90D8               	bcf	status,0,c
  7411  00458E  320B               	rrcf	(___almod@divisor+3)^0,f,c
  7412  004590  320A               	rrcf	(___almod@divisor+2)^0,f,c
  7413  004592  3209               	rrcf	(___almod@divisor+1)^0,f,c
  7414  004594  3208               	rrcf	___almod@divisor^0,f,c
  7415  004596  2E0C               	decfsz	___almod@counter^0,f,c
  7416  004598  EFAF  F022         	goto	l3863
  7417  00459C                     l3871:
  7418  00459C  500D               	movf	___almod@sign^0,w,c
  7419  00459E  B4D8               	btfsc	status,2,c
  7420  0045A0  EFD4  F022         	goto	u3611
  7421  0045A4  EFD6  F022         	goto	u3610
  7422  0045A8                     u3611:
  7423  0045A8  EFDE  F022         	goto	l3875
  7424  0045AC                     u3610:
  7425  0045AC  1E07               	comf	(___almod@dividend+3)^0,f,c
  7426  0045AE  1E06               	comf	(___almod@dividend+2)^0,f,c
  7427  0045B0  1E05               	comf	(___almod@dividend+1)^0,f,c
  7428  0045B2  6C04               	negf	___almod@dividend^0,c
  7429  0045B4  0E00               	movlw	0
  7430  0045B6  2205               	addwfc	(___almod@dividend+1)^0,f,c
  7431  0045B8  2206               	addwfc	(___almod@dividend+2)^0,f,c
  7432  0045BA  2207               	addwfc	(___almod@dividend+3)^0,f,c
  7433  0045BC                     l3875:
  7434  0045BC  C004  F004         	movff	___almod@dividend,?___almod
  7435  0045C0  C005  F005         	movff	___almod@dividend+1,?___almod+1
  7436  0045C4  C006  F006         	movff	___almod@dividend+2,?___almod+2
  7437  0045C8  C007  F007         	movff	___almod@dividend+3,?___almod+3
  7438  0045CC  0012               	return		;funcret
  7439  0045CE                     __end_of___almod:
  7440                           	opt callstack 0
  7441                           
  7442 ;; *************** function _ftoa *****************
  7443 ;; Defined at:
  7444 ;;		line 140 in file "src/print/toString.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  buffer          2   38[COMRAM] PTR unsigned char 
  7447 ;;		 -> my_vprintf@buffer(64), 
  7448 ;;  value           4   40[COMRAM] PTR unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  digit           2   46[COMRAM] int 
  7451 ;;  digit           2   44[COMRAM] int 
  7452 ;;  places          2   50[COMRAM] int 
  7453 ;;  exponent        2   48[COMRAM] int 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  1    wreg      void 
  7456 ;; Registers used:
  7457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7463 ;;      Params:         6       0       0       0       0       0       0       0       0
  7464 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7466 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7467 ;;Total ram usage:       14 bytes
  7468 ;; Hardware stack levels used:    1
  7469 ;; Hardware stack levels required when called:    4
  7470 ;; This function calls:
  7471 ;;		___fleq
  7472 ;;		___flmul
  7473 ;;		___flneg
  7474 ;;		___flsub
  7475 ;;		___fltol
  7476 ;;		___xxtofl
  7477 ;;		_normalize
  7478 ;; This function is called by:
  7479 ;;		_my_vprintf
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text21
  7484  0025A6                     __ptext21:
  7485                           	opt callstack 0
  7486  0025A6                     _ftoa:
  7487                           	opt callstack 25
  7488  0025A6                     
  7489                           ;src/print/toString.c: 145:     int places = 0;
  7490  0025A6  0E00               	movlw	0
  7491  0025A8  6E34               	movwf	(ftoa@places+1)^0,c
  7492  0025AA  0E00               	movlw	0
  7493  0025AC  6E33               	movwf	ftoa@places^0,c
  7494  0025AE                     
  7495                           ;src/print/toString.c: 146:     static const int width = 7;;src/print/toString.c: 148:  
      +                             if (value == 0.0) {
  7496  0025AE  C029  F004         	movff	ftoa@value,___fleq@ff1
  7497  0025B2  C02A  F005         	movff	ftoa@value+1,___fleq@ff1+1
  7498  0025B6  C02B  F006         	movff	ftoa@value+2,___fleq@ff1+2
  7499  0025BA  C02C  F007         	movff	ftoa@value+3,___fleq@ff1+3
  7500  0025BE  0E00               	movlw	0
  7501  0025C0  6E08               	movwf	___fleq@ff2^0,c
  7502  0025C2  0E00               	movlw	0
  7503  0025C4  6E09               	movwf	(___fleq@ff2+1)^0,c
  7504  0025C6  0E00               	movlw	0
  7505  0025C8  6E0A               	movwf	(___fleq@ff2+2)^0,c
  7506  0025CA  0E00               	movlw	0
  7507  0025CC  6E0B               	movwf	(___fleq@ff2+3)^0,c
  7508  0025CE  EC09  F024         	call	___fleq	;wreg free
  7509  0025D2  A0D8               	btfss	status,0,c
  7510  0025D4  EFEE  F012         	goto	u6001
  7511  0025D8  EFF0  F012         	goto	u6000
  7512  0025DC                     u6001:
  7513  0025DC  EF10  F013         	goto	l5225
  7514  0025E0                     u6000:
  7515  0025E0                     
  7516                           ;src/print/toString.c: 149:         buffer[0] = '0';
  7517  0025E0  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7518  0025E4  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7519  0025E8  0E30               	movlw	48
  7520  0025EA  6EDF               	movwf	indf2,c
  7521  0025EC                     
  7522                           ;src/print/toString.c: 150:         buffer[1] = '.';
  7523  0025EC  EE20 F001          	lfsr	2,1
  7524  0025F0  5027               	movf	ftoa@buffer^0,w,c
  7525  0025F2  26D9               	addwf	fsr2l,f,c
  7526  0025F4  5028               	movf	(ftoa@buffer+1)^0,w,c
  7527  0025F6  22DA               	addwfc	fsr2h,f,c
  7528  0025F8  0E2E               	movlw	46
  7529  0025FA  6EDF               	movwf	indf2,c
  7530  0025FC                     
  7531                           ;src/print/toString.c: 151:         buffer[2] = '0';
  7532  0025FC  EE20 F002          	lfsr	2,2
  7533  002600  5027               	movf	ftoa@buffer^0,w,c
  7534  002602  26D9               	addwf	fsr2l,f,c
  7535  002604  5028               	movf	(ftoa@buffer+1)^0,w,c
  7536  002606  22DA               	addwfc	fsr2h,f,c
  7537  002608  0E30               	movlw	48
  7538  00260A  6EDF               	movwf	indf2,c
  7539  00260C                     
  7540                           ;src/print/toString.c: 152:         buffer[3] = '\0';
  7541  00260C  EE20 F003          	lfsr	2,3
  7542  002610  5027               	movf	ftoa@buffer^0,w,c
  7543  002612  26D9               	addwf	fsr2l,f,c
  7544  002614  5028               	movf	(ftoa@buffer+1)^0,w,c
  7545  002616  22DA               	addwfc	fsr2h,f,c
  7546  002618  0E00               	movlw	0
  7547  00261A  6EDF               	movwf	indf2,c
  7548  00261C  EF6B  F014         	goto	l742
  7549  002620                     l5225:
  7550                           
  7551                           ;src/print/toString.c: 156:     if (value < 0.0) {
  7552  002620  BE2C               	btfsc	(ftoa@value+3)^0,7,c
  7553  002622  EF17  F013         	goto	u6010
  7554  002626  EF15  F013         	goto	u6011
  7555  00262A                     u6011:
  7556  00262A  EF29  F013         	goto	l5229
  7557  00262E                     u6010:
  7558  00262E                     
  7559                           ;src/print/toString.c: 157:         value = -value;
  7560  00262E  C029  F004         	movff	ftoa@value,___flneg@f1
  7561  002632  C02A  F005         	movff	ftoa@value+1,___flneg@f1+1
  7562  002636  C02B  F006         	movff	ftoa@value+2,___flneg@f1+2
  7563  00263A  C02C  F007         	movff	ftoa@value+3,___flneg@f1+3
  7564  00263E  ECB3  F027         	call	___flneg	;wreg free
  7565  002642  C004  F029         	movff	?___flneg,ftoa@value
  7566  002646  C005  F02A         	movff	?___flneg+1,ftoa@value+1
  7567  00264A  C006  F02B         	movff	?___flneg+2,ftoa@value+2
  7568  00264E  C007  F02C         	movff	?___flneg+3,ftoa@value+3
  7569  002652                     l5229:
  7570                           
  7571                           ;src/print/toString.c: 160:     exponent = normalize(&value);
  7572  002652  0E29               	movlw	low ftoa@value
  7573  002654  6E1D               	movwf	normalize@val^0,c
  7574  002656  0E00               	movlw	high ftoa@value
  7575  002658  6E1E               	movwf	(normalize@val+1)^0,c
  7576  00265A  EC56  F01F         	call	_normalize	;wreg free
  7577  00265E  C01D  F031         	movff	?_normalize,ftoa@exponent
  7578  002662  C01E  F032         	movff	?_normalize+1,ftoa@exponent+1
  7579                           
  7580                           ;src/print/toString.c: 162:     while (exponent > 0) {
  7581  002666  EF9B  F013         	goto	l5243
  7582  00266A                     l5231:
  7583                           
  7584                           ;src/print/toString.c: 163:         int digit = value * 10;
  7585  00266A  0E00               	movlw	0
  7586  00266C  6E08               	movwf	___flmul@a^0,c
  7587  00266E  0E00               	movlw	0
  7588  002670  6E09               	movwf	(___flmul@a+1)^0,c
  7589  002672  0E20               	movlw	32
  7590  002674  6E0A               	movwf	(___flmul@a+2)^0,c
  7591  002676  0E41               	movlw	65
  7592  002678  6E0B               	movwf	(___flmul@a+3)^0,c
  7593  00267A  C029  F004         	movff	ftoa@value,___flmul@b
  7594  00267E  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  7595  002682  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  7596  002686  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  7597  00268A  ECF1  F00E         	call	___flmul	;wreg free
  7598  00268E  C004  F01D         	movff	?___flmul,___fltol@f1
  7599  002692  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  7600  002696  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  7601  00269A  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  7602  00269E  ECF6  F020         	call	___fltol	;wreg free
  7603  0026A2  C01D  F02D         	movff	?___fltol,ftoa@digit
  7604  0026A6  C01E  F02E         	movff	?___fltol+1,ftoa@digit+1
  7605  0026AA                     
  7606                           ;src/print/toString.c: 164:         *buffer++ = digit + '0';
  7607  0026AA  502D               	movf	ftoa@digit^0,w,c
  7608  0026AC  0F30               	addlw	48
  7609  0026AE  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7610  0026B2  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7611  0026B6  6EDF               	movwf	indf2,c
  7612  0026B8  4A27               	infsnz	ftoa@buffer^0,f,c
  7613  0026BA  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7614  0026BC                     
  7615                           ;src/print/toString.c: 165:         value = value * 10 - digit;
  7616  0026BC  0E00               	movlw	0
  7617  0026BE  6E08               	movwf	___flmul@a^0,c
  7618  0026C0  0E00               	movlw	0
  7619  0026C2  6E09               	movwf	(___flmul@a+1)^0,c
  7620  0026C4  0E20               	movlw	32
  7621  0026C6  6E0A               	movwf	(___flmul@a+2)^0,c
  7622  0026C8  0E41               	movlw	65
  7623  0026CA  6E0B               	movwf	(___flmul@a+3)^0,c
  7624  0026CC  C029  F004         	movff	ftoa@value,___flmul@b
  7625  0026D0  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  7626  0026D4  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  7627  0026D8  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  7628  0026DC  ECF1  F00E         	call	___flmul	;wreg free
  7629  0026E0  C004  F01D         	movff	?___flmul,___flsub@b
  7630  0026E4  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  7631  0026E8  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  7632  0026EC  C007  F020         	movff	?___flmul+3,___flsub@b+3
  7633  0026F0  C02D  F004         	movff	ftoa@digit,___xxtofl@val
  7634  0026F4  C02E  F005         	movff	ftoa@digit+1,___xxtofl@val+1
  7635  0026F8  0E00               	movlw	0
  7636  0026FA  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  7637  0026FC  0EFF               	movlw	-1
  7638  0026FE  6E06               	movwf	(___xxtofl@val+2)^0,c
  7639  002700  6E07               	movwf	(___xxtofl@val+3)^0,c
  7640  002702  0E01               	movlw	1
  7641  002704  EC57  F01C         	call	___xxtofl
  7642  002708  C004  F021         	movff	?___xxtofl,___flsub@a
  7643  00270C  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  7644  002710  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  7645  002714  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  7646  002718  EC0C  F027         	call	___flsub	;wreg free
  7647  00271C  C01D  F029         	movff	?___flsub,ftoa@value
  7648  002720  C01E  F02A         	movff	?___flsub+1,ftoa@value+1
  7649  002724  C01F  F02B         	movff	?___flsub+2,ftoa@value+2
  7650  002728  C020  F02C         	movff	?___flsub+3,ftoa@value+3
  7651  00272C                     
  7652                           ;src/print/toString.c: 166:         ++places;
  7653  00272C  4A33               	infsnz	ftoa@places^0,f,c
  7654  00272E  2A34               	incf	(ftoa@places+1)^0,f,c
  7655  002730                     
  7656                           ;src/print/toString.c: 167:         --exponent;
  7657  002730  0631               	decf	ftoa@exponent^0,f,c
  7658  002732  A0D8               	btfss	status,0,c
  7659  002734  0632               	decf	(ftoa@exponent+1)^0,f,c
  7660  002736                     l5243:
  7661                           
  7662                           ;src/print/toString.c: 162:     while (exponent > 0) {
  7663  002736  BE32               	btfsc	(ftoa@exponent+1)^0,7,c
  7664  002738  EFA8  F013         	goto	u6020
  7665  00273C  5032               	movf	(ftoa@exponent+1)^0,w,c
  7666  00273E  E106               	bnz	u6021
  7667  002740  0431               	decf	ftoa@exponent^0,w,c
  7668  002742  B0D8               	btfsc	status,0,c
  7669  002744  EFA6  F013         	goto	u6021
  7670  002748  EFA8  F013         	goto	u6020
  7671  00274C                     u6021:
  7672  00274C  EF35  F013         	goto	l5231
  7673  002750                     u6020:
  7674  002750                     
  7675                           ;src/print/toString.c: 170:     if (places == 0)
  7676  002750  5033               	movf	ftoa@places^0,w,c
  7677  002752  1034               	iorwf	(ftoa@places+1)^0,w,c
  7678  002754  A4D8               	btfss	status,2,c
  7679  002756  EFAF  F013         	goto	u6031
  7680  00275A  EFB1  F013         	goto	u6030
  7681  00275E                     u6031:
  7682  00275E  EFB9  F013         	goto	l5251
  7683  002762                     u6030:
  7684  002762                     
  7685                           ;src/print/toString.c: 171:         *buffer++ = '0';
  7686  002762  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7687  002766  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7688  00276A  0E30               	movlw	48
  7689  00276C  6EDF               	movwf	indf2,c
  7690  00276E  4A27               	infsnz	ftoa@buffer^0,f,c
  7691  002770  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7692  002772                     l5251:
  7693                           
  7694                           ;src/print/toString.c: 172:     if (places < width)
  7695  002772  BE34               	btfsc	(ftoa@places+1)^0,7,c
  7696  002774  EFC7  F013         	goto	u6040
  7697  002778  5034               	movf	(ftoa@places+1)^0,w,c
  7698  00277A  E107               	bnz	u6041
  7699  00277C  0E07               	movlw	7
  7700  00277E  5C33               	subwf	ftoa@places^0,w,c
  7701  002780  B0D8               	btfsc	status,0,c
  7702  002782  EFC5  F013         	goto	u6041
  7703  002786  EFC7  F013         	goto	u6040
  7704  00278A                     u6041:
  7705  00278A  EFDD  F013         	goto	l5265
  7706  00278E                     u6040:
  7707  00278E                     
  7708                           ;src/print/toString.c: 173:         *buffer++ = '.';
  7709  00278E  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7710  002792  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7711  002796  0E2E               	movlw	46
  7712  002798  6EDF               	movwf	indf2,c
  7713  00279A  4A27               	infsnz	ftoa@buffer^0,f,c
  7714  00279C  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7715  00279E  EFDD  F013         	goto	l5265
  7716  0027A2                     l5257:
  7717                           
  7718                           ;src/print/toString.c: 176:         *buffer++ = '0';
  7719  0027A2  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7720  0027A6  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7721  0027AA  0E30               	movlw	48
  7722  0027AC  6EDF               	movwf	indf2,c
  7723  0027AE  4A27               	infsnz	ftoa@buffer^0,f,c
  7724  0027B0  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7725  0027B2                     
  7726                           ;src/print/toString.c: 177:         ++exponent;
  7727  0027B2  4A31               	infsnz	ftoa@exponent^0,f,c
  7728  0027B4  2A32               	incf	(ftoa@exponent+1)^0,f,c
  7729  0027B6                     
  7730                           ;src/print/toString.c: 178:         ++places;
  7731  0027B6  4A33               	infsnz	ftoa@places^0,f,c
  7732  0027B8  2A34               	incf	(ftoa@places+1)^0,f,c
  7733  0027BA                     l5265:
  7734                           
  7735                           ;src/print/toString.c: 175:     while ((exponent < 0) && (places < width)) {
  7736  0027BA  BE32               	btfsc	(ftoa@exponent+1)^0,7,c
  7737  0027BC  EFE4  F013         	goto	u6050
  7738  0027C0  EFE2  F013         	goto	u6051
  7739  0027C4                     u6051:
  7740  0027C4  EF57  F014         	goto	l5279
  7741  0027C8                     u6050:
  7742  0027C8  BE34               	btfsc	(ftoa@places+1)^0,7,c
  7743  0027CA  EFF0  F013         	goto	u6061
  7744  0027CE  5034               	movf	(ftoa@places+1)^0,w,c
  7745  0027D0  E109               	bnz	u6060
  7746  0027D2  0E07               	movlw	7
  7747  0027D4  5C33               	subwf	ftoa@places^0,w,c
  7748  0027D6  A0D8               	btfss	status,0,c
  7749  0027D8  EFF0  F013         	goto	u6061
  7750  0027DC  EFF2  F013         	goto	u6060
  7751  0027E0                     u6061:
  7752  0027E0  EFD1  F013         	goto	l5257
  7753  0027E4                     u6060:
  7754  0027E4  EF57  F014         	goto	l5279
  7755  0027E8                     l5269:
  7756                           
  7757                           ;src/print/toString.c: 182:         int digit = value * 10.0;
  7758  0027E8  0E00               	movlw	0
  7759  0027EA  6E08               	movwf	___flmul@a^0,c
  7760  0027EC  0E00               	movlw	0
  7761  0027EE  6E09               	movwf	(___flmul@a+1)^0,c
  7762  0027F0  0E20               	movlw	32
  7763  0027F2  6E0A               	movwf	(___flmul@a+2)^0,c
  7764  0027F4  0E41               	movlw	65
  7765  0027F6  6E0B               	movwf	(___flmul@a+3)^0,c
  7766  0027F8  C029  F004         	movff	ftoa@value,___flmul@b
  7767  0027FC  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  7768  002800  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  7769  002804  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  7770  002808  ECF1  F00E         	call	___flmul	;wreg free
  7771  00280C  C004  F01D         	movff	?___flmul,___fltol@f1
  7772  002810  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  7773  002814  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  7774  002818  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  7775  00281C  ECF6  F020         	call	___fltol	;wreg free
  7776  002820  C01D  F02F         	movff	?___fltol,ftoa@digit_1663
  7777  002824  C01E  F030         	movff	?___fltol+1,ftoa@digit_1663+1
  7778  002828                     
  7779                           ;src/print/toString.c: 183:         *buffer++ = digit + '0';
  7780  002828  502F               	movf	ftoa@digit_1663^0,w,c
  7781  00282A  0F30               	addlw	48
  7782  00282C  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7783  002830  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7784  002834  6EDF               	movwf	indf2,c
  7785  002836  4A27               	infsnz	ftoa@buffer^0,f,c
  7786  002838  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7787  00283A                     
  7788                           ;src/print/toString.c: 184:         value = value * 10.0 - digit;
  7789  00283A  0E00               	movlw	0
  7790  00283C  6E08               	movwf	___flmul@a^0,c
  7791  00283E  0E00               	movlw	0
  7792  002840  6E09               	movwf	(___flmul@a+1)^0,c
  7793  002842  0E20               	movlw	32
  7794  002844  6E0A               	movwf	(___flmul@a+2)^0,c
  7795  002846  0E41               	movlw	65
  7796  002848  6E0B               	movwf	(___flmul@a+3)^0,c
  7797  00284A  C029  F004         	movff	ftoa@value,___flmul@b
  7798  00284E  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  7799  002852  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  7800  002856  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  7801  00285A  ECF1  F00E         	call	___flmul	;wreg free
  7802  00285E  C004  F01D         	movff	?___flmul,___flsub@b
  7803  002862  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  7804  002866  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  7805  00286A  C007  F020         	movff	?___flmul+3,___flsub@b+3
  7806  00286E  C02F  F004         	movff	ftoa@digit_1663,___xxtofl@val
  7807  002872  C030  F005         	movff	ftoa@digit_1663+1,___xxtofl@val+1
  7808  002876  0E00               	movlw	0
  7809  002878  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  7810  00287A  0EFF               	movlw	-1
  7811  00287C  6E06               	movwf	(___xxtofl@val+2)^0,c
  7812  00287E  6E07               	movwf	(___xxtofl@val+3)^0,c
  7813  002880  0E01               	movlw	1
  7814  002882  EC57  F01C         	call	___xxtofl
  7815  002886  C004  F021         	movff	?___xxtofl,___flsub@a
  7816  00288A  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  7817  00288E  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  7818  002892  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  7819  002896  EC0C  F027         	call	___flsub	;wreg free
  7820  00289A  C01D  F029         	movff	?___flsub,ftoa@value
  7821  00289E  C01E  F02A         	movff	?___flsub+1,ftoa@value+1
  7822  0028A2  C01F  F02B         	movff	?___flsub+2,ftoa@value+2
  7823  0028A6  C020  F02C         	movff	?___flsub+3,ftoa@value+3
  7824  0028AA                     
  7825                           ;src/print/toString.c: 185:         ++places;
  7826  0028AA  4A33               	infsnz	ftoa@places^0,f,c
  7827  0028AC  2A34               	incf	(ftoa@places+1)^0,f,c
  7828  0028AE                     l5279:
  7829                           
  7830                           ;src/print/toString.c: 181:     while (places < width) {
  7831  0028AE  BE34               	btfsc	(ftoa@places+1)^0,7,c
  7832  0028B0  EF63  F014         	goto	u6071
  7833  0028B4  5034               	movf	(ftoa@places+1)^0,w,c
  7834  0028B6  E109               	bnz	u6070
  7835  0028B8  0E07               	movlw	7
  7836  0028BA  5C33               	subwf	ftoa@places^0,w,c
  7837  0028BC  A0D8               	btfss	status,0,c
  7838  0028BE  EF63  F014         	goto	u6071
  7839  0028C2  EF65  F014         	goto	u6070
  7840  0028C6                     u6071:
  7841  0028C6  EFF4  F013         	goto	l5269
  7842  0028CA                     u6070:
  7843  0028CA                     
  7844                           ;src/print/toString.c: 187:     *buffer = '\0';
  7845  0028CA  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7846  0028CE  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7847  0028D2  0E00               	movlw	0
  7848  0028D4  6EDF               	movwf	indf2,c
  7849  0028D6                     l742:
  7850  0028D6  0012               	return		;funcret
  7851  0028D8                     __end_of_ftoa:
  7852                           	opt callstack 0
  7853                           
  7854 ;; *************** function _normalize *****************
  7855 ;; Defined at:
  7856 ;;		line 76 in file "src/print/toString.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  val             2   28[COMRAM] PTR 
  7859 ;;		 -> ftoa@value(4), ftoa_sci@value(4), 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  value           4   32[COMRAM] PTR 
  7862 ;;  exponent        2   30[COMRAM] int 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  2   28[COMRAM] int 
  7865 ;; Registers used:
  7866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7872 ;;      Params:         2       0       0       0       0       0       0       0       0
  7873 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7875 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7876 ;;Total ram usage:        8 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    3
  7879 ;; This function calls:
  7880 ;;		___fldiv
  7881 ;;		___flge
  7882 ;;		___flmul
  7883 ;; This function is called by:
  7884 ;;		_ftoa_sci
  7885 ;;		_ftoa
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text22
  7890  003EAC                     __ptext22:
  7891                           	opt callstack 0
  7892  003EAC                     _normalize:
  7893                           	opt callstack 25
  7894  003EAC                     
  7895                           ;src/print/toString.c: 77:     int exponent = 0;
  7896  003EAC  0E00               	movlw	0
  7897  003EAE  6E20               	movwf	(normalize@exponent+1)^0,c
  7898  003EB0  0E00               	movlw	0
  7899  003EB2  6E1F               	movwf	normalize@exponent^0,c
  7900  003EB4                     
  7901                           ;src/print/toString.c: 78:     double value = *val;
  7902  003EB4  C01D  FFD9         	movff	normalize@val,fsr2l
  7903  003EB8  C01E  FFDA         	movff	normalize@val+1,fsr2h
  7904  003EBC  CFDE F021          	movff	postinc2,normalize@value
  7905  003EC0  CFDE F022          	movff	postinc2,normalize@value+1
  7906  003EC4  CFDE F023          	movff	postinc2,normalize@value+2
  7907  003EC8  CFDE F024          	movff	postinc2,normalize@value+3
  7908                           
  7909                           ;src/print/toString.c: 80:     while (value >= 1.0) {
  7910  003ECC  EF84  F01F         	goto	l4535
  7911  003ED0                     l4531:
  7912                           
  7913                           ;src/print/toString.c: 81:         value /= 10.0;
  7914  003ED0  C021  F004         	movff	normalize@value,___fldiv@b
  7915  003ED4  C022  F005         	movff	normalize@value+1,___fldiv@b+1
  7916  003ED8  C023  F006         	movff	normalize@value+2,___fldiv@b+2
  7917  003EDC  C024  F007         	movff	normalize@value+3,___fldiv@b+3
  7918  003EE0  0E00               	movlw	0
  7919  003EE2  6E08               	movwf	___fldiv@a^0,c
  7920  003EE4  0E00               	movlw	0
  7921  003EE6  6E09               	movwf	(___fldiv@a+1)^0,c
  7922  003EE8  0E20               	movlw	32
  7923  003EEA  6E0A               	movwf	(___fldiv@a+2)^0,c
  7924  003EEC  0E41               	movlw	65
  7925  003EEE  6E0B               	movwf	(___fldiv@a+3)^0,c
  7926  003EF0  EC06  F011         	call	___fldiv	;wreg free
  7927  003EF4  C004  F021         	movff	?___fldiv,normalize@value
  7928  003EF8  C005  F022         	movff	?___fldiv+1,normalize@value+1
  7929  003EFC  C006  F023         	movff	?___fldiv+2,normalize@value+2
  7930  003F00  C007  F024         	movff	?___fldiv+3,normalize@value+3
  7931  003F04                     
  7932                           ;src/print/toString.c: 82:         ++exponent;
  7933  003F04  4A1F               	infsnz	normalize@exponent^0,f,c
  7934  003F06  2A20               	incf	(normalize@exponent+1)^0,f,c
  7935  003F08                     l4535:
  7936                           
  7937                           ;src/print/toString.c: 80:     while (value >= 1.0) {
  7938  003F08  C021  F004         	movff	normalize@value,___flge@ff1
  7939  003F0C  C022  F005         	movff	normalize@value+1,___flge@ff1+1
  7940  003F10  C023  F006         	movff	normalize@value+2,___flge@ff1+2
  7941  003F14  C024  F007         	movff	normalize@value+3,___flge@ff1+3
  7942  003F18  0E00               	movlw	0
  7943  003F1A  6E08               	movwf	___flge@ff2^0,c
  7944  003F1C  0E00               	movlw	0
  7945  003F1E  6E09               	movwf	(___flge@ff2+1)^0,c
  7946  003F20  0E80               	movlw	128
  7947  003F22  6E0A               	movwf	(___flge@ff2+2)^0,c
  7948  003F24  0E3F               	movlw	63
  7949  003F26  6E0B               	movwf	(___flge@ff2+3)^0,c
  7950  003F28  EC79  F021         	call	___flge	;wreg free
  7951  003F2C  B0D8               	btfsc	status,0,c
  7952  003F2E  EF9B  F01F         	goto	u4741
  7953  003F32  EF9D  F01F         	goto	u4740
  7954  003F36                     u4741:
  7955  003F36  EF68  F01F         	goto	l4531
  7956  003F3A                     u4740:
  7957  003F3A  EFBC  F01F         	goto	l4541
  7958  003F3E                     l4537:
  7959                           
  7960                           ;src/print/toString.c: 86:         value *= 10.0;
  7961  003F3E  C021  F004         	movff	normalize@value,___flmul@b
  7962  003F42  C022  F005         	movff	normalize@value+1,___flmul@b+1
  7963  003F46  C023  F006         	movff	normalize@value+2,___flmul@b+2
  7964  003F4A  C024  F007         	movff	normalize@value+3,___flmul@b+3
  7965  003F4E  0E00               	movlw	0
  7966  003F50  6E08               	movwf	___flmul@a^0,c
  7967  003F52  0E00               	movlw	0
  7968  003F54  6E09               	movwf	(___flmul@a+1)^0,c
  7969  003F56  0E20               	movlw	32
  7970  003F58  6E0A               	movwf	(___flmul@a+2)^0,c
  7971  003F5A  0E41               	movlw	65
  7972  003F5C  6E0B               	movwf	(___flmul@a+3)^0,c
  7973  003F5E  ECF1  F00E         	call	___flmul	;wreg free
  7974  003F62  C004  F021         	movff	?___flmul,normalize@value
  7975  003F66  C005  F022         	movff	?___flmul+1,normalize@value+1
  7976  003F6A  C006  F023         	movff	?___flmul+2,normalize@value+2
  7977  003F6E  C007  F024         	movff	?___flmul+3,normalize@value+3
  7978  003F72                     
  7979                           ;src/print/toString.c: 87:         --exponent;
  7980  003F72  061F               	decf	normalize@exponent^0,f,c
  7981  003F74  A0D8               	btfss	status,0,c
  7982  003F76  0620               	decf	(normalize@exponent+1)^0,f,c
  7983  003F78                     l4541:
  7984                           
  7985                           ;src/print/toString.c: 85:     while (value < 0.1) {
  7986  003F78  C021  F004         	movff	normalize@value,___flge@ff1
  7987  003F7C  C022  F005         	movff	normalize@value+1,___flge@ff1+1
  7988  003F80  C023  F006         	movff	normalize@value+2,___flge@ff1+2
  7989  003F84  C024  F007         	movff	normalize@value+3,___flge@ff1+3
  7990  003F88  0ECD               	movlw	205
  7991  003F8A  6E08               	movwf	___flge@ff2^0,c
  7992  003F8C  0ECC               	movlw	204
  7993  003F8E  6E09               	movwf	(___flge@ff2+1)^0,c
  7994  003F90  0ECC               	movlw	204
  7995  003F92  6E0A               	movwf	(___flge@ff2+2)^0,c
  7996  003F94  0E3D               	movlw	61
  7997  003F96  6E0B               	movwf	(___flge@ff2+3)^0,c
  7998  003F98  EC79  F021         	call	___flge	;wreg free
  7999  003F9C  A0D8               	btfss	status,0,c
  8000  003F9E  EFD3  F01F         	goto	u4751
  8001  003FA2  EFD5  F01F         	goto	u4750
  8002  003FA6                     u4751:
  8003  003FA6  EF9F  F01F         	goto	l4537
  8004  003FAA                     u4750:
  8005  003FAA                     
  8006                           ;src/print/toString.c: 89:     *val = value;
  8007  003FAA  C01D  FFD9         	movff	normalize@val,fsr2l
  8008  003FAE  C01E  FFDA         	movff	normalize@val+1,fsr2h
  8009  003FB2  C021  FFDE         	movff	normalize@value,postinc2
  8010  003FB6  C022  FFDE         	movff	normalize@value+1,postinc2
  8011  003FBA  C023  FFDE         	movff	normalize@value+2,postinc2
  8012  003FBE  C024  FFDE         	movff	normalize@value+3,postinc2
  8013  003FC2                     
  8014                           ;src/print/toString.c: 91:     return exponent;
  8015  003FC2  C01F  F01D         	movff	normalize@exponent,?_normalize
  8016  003FC6  C020  F01E         	movff	normalize@exponent+1,?_normalize+1
  8017  003FCA  0012               	return		;funcret
  8018  003FCC                     __end_of_normalize:
  8019                           	opt callstack 0
  8020                           
  8021 ;; *************** function ___flmul *****************
  8022 ;; Defined at:
  8023 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;  b               4    3[COMRAM] int 
  8026 ;;  a               4    7[COMRAM] int 
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;  prod            4   22[COMRAM] struct .
  8029 ;;  grs             4   16[COMRAM] unsigned long 
  8030 ;;  temp            2   26[COMRAM] struct .
  8031 ;;  bexp            1   21[COMRAM] unsigned char 
  8032 ;;  aexp            1   20[COMRAM] unsigned char 
  8033 ;;  sign            1   15[COMRAM] unsigned char 
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  4    3[COMRAM] unsigned char 
  8036 ;; Registers used:
  8037 ;;		wreg, status,2, status,0, prodl, prodh
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8043 ;;      Params:         8       0       0       0       0       0       0       0       0
  8044 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8045 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8046 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8047 ;;Total ram usage:       25 bytes
  8048 ;; Hardware stack levels used:    1
  8049 ;; Hardware stack levels required when called:    2
  8050 ;; This function calls:
  8051 ;;		Nothing
  8052 ;; This function is called by:
  8053 ;;		_normalize
  8054 ;;		_ftoa_sci
  8055 ;;		_ftoa
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text23
  8060  001DE2                     __ptext23:
  8061                           	opt callstack 0
  8062  001DE2                     ___flmul:
  8063                           	opt callstack 25
  8064  001DE2  5007               	movf	(___flmul@b+3)^0,w,c
  8065  001DE4  0B80               	andlw	128
  8066  001DE6  6E10               	movwf	___flmul@sign^0,c
  8067  001DE8  5007               	movf	(___flmul@b+3)^0,w,c
  8068  001DEA  2407               	addwf	(___flmul@b+3)^0,w,c
  8069  001DEC  6E16               	movwf	___flmul@bexp^0,c
  8070  001DEE  AE06               	btfss	(___flmul@b+2)^0,7,c
  8071  001DF0  EFFC  F00E         	goto	u4241
  8072  001DF4  EFFE  F00E         	goto	u4240
  8073  001DF8                     u4241:
  8074  001DF8  EFFF  F00E         	goto	l4225
  8075  001DFC                     u4240:
  8076  001DFC  8016               	bsf	___flmul@bexp^0,0,c
  8077  001DFE                     l4225:
  8078  001DFE  5016               	movf	___flmul@bexp^0,w,c
  8079  001E00  B4D8               	btfsc	status,2,c
  8080  001E02  EF05  F00F         	goto	u4251
  8081  001E06  EF07  F00F         	goto	u4250
  8082  001E0A                     u4251:
  8083  001E0A  EF1A  F00F         	goto	l4233
  8084  001E0E                     u4250:
  8085  001E0E  2816               	incf	___flmul@bexp^0,w,c
  8086  001E10  A4D8               	btfss	status,2,c
  8087  001E12  EF0D  F00F         	goto	u4261
  8088  001E16  EF0F  F00F         	goto	u4260
  8089  001E1A                     u4261:
  8090  001E1A  EF17  F00F         	goto	l4231
  8091  001E1E                     u4260:
  8092  001E1E  0E00               	movlw	0
  8093  001E20  6E04               	movwf	___flmul@b^0,c
  8094  001E22  0E00               	movlw	0
  8095  001E24  6E05               	movwf	(___flmul@b+1)^0,c
  8096  001E26  0E00               	movlw	0
  8097  001E28  6E06               	movwf	(___flmul@b+2)^0,c
  8098  001E2A  0E00               	movlw	0
  8099  001E2C  6E07               	movwf	(___flmul@b+3)^0,c
  8100  001E2E                     l4231:
  8101  001E2E  8E06               	bsf	(___flmul@b+2)^0,7,c
  8102  001E30  EF22  F00F         	goto	l4235
  8103  001E34                     l4233:
  8104  001E34  0E00               	movlw	0
  8105  001E36  6E04               	movwf	___flmul@b^0,c
  8106  001E38  0E00               	movlw	0
  8107  001E3A  6E05               	movwf	(___flmul@b+1)^0,c
  8108  001E3C  0E00               	movlw	0
  8109  001E3E  6E06               	movwf	(___flmul@b+2)^0,c
  8110  001E40  0E00               	movlw	0
  8111  001E42  6E07               	movwf	(___flmul@b+3)^0,c
  8112  001E44                     l4235:
  8113  001E44  500B               	movf	(___flmul@a+3)^0,w,c
  8114  001E46  0B80               	andlw	128
  8115  001E48  1A10               	xorwf	___flmul@sign^0,f,c
  8116  001E4A  500B               	movf	(___flmul@a+3)^0,w,c
  8117  001E4C  240B               	addwf	(___flmul@a+3)^0,w,c
  8118  001E4E  6E15               	movwf	___flmul@aexp^0,c
  8119  001E50  AE0A               	btfss	(___flmul@a+2)^0,7,c
  8120  001E52  EF2D  F00F         	goto	u4271
  8121  001E56  EF2F  F00F         	goto	u4270
  8122  001E5A                     u4271:
  8123  001E5A  EF30  F00F         	goto	l4243
  8124  001E5E                     u4270:
  8125  001E5E  8015               	bsf	___flmul@aexp^0,0,c
  8126  001E60                     l4243:
  8127  001E60  5015               	movf	___flmul@aexp^0,w,c
  8128  001E62  B4D8               	btfsc	status,2,c
  8129  001E64  EF36  F00F         	goto	u4281
  8130  001E68  EF38  F00F         	goto	u4280
  8131  001E6C                     u4281:
  8132  001E6C  EF4B  F00F         	goto	l4251
  8133  001E70                     u4280:
  8134  001E70  2815               	incf	___flmul@aexp^0,w,c
  8135  001E72  A4D8               	btfss	status,2,c
  8136  001E74  EF3E  F00F         	goto	u4291
  8137  001E78  EF40  F00F         	goto	u4290
  8138  001E7C                     u4291:
  8139  001E7C  EF48  F00F         	goto	l4249
  8140  001E80                     u4290:
  8141  001E80  0E00               	movlw	0
  8142  001E82  6E08               	movwf	___flmul@a^0,c
  8143  001E84  0E00               	movlw	0
  8144  001E86  6E09               	movwf	(___flmul@a+1)^0,c
  8145  001E88  0E00               	movlw	0
  8146  001E8A  6E0A               	movwf	(___flmul@a+2)^0,c
  8147  001E8C  0E00               	movlw	0
  8148  001E8E  6E0B               	movwf	(___flmul@a+3)^0,c
  8149  001E90                     l4249:
  8150  001E90  8E0A               	bsf	(___flmul@a+2)^0,7,c
  8151  001E92  EF53  F00F         	goto	l1373
  8152  001E96                     l4251:
  8153  001E96  0E00               	movlw	0
  8154  001E98  6E08               	movwf	___flmul@a^0,c
  8155  001E9A  0E00               	movlw	0
  8156  001E9C  6E09               	movwf	(___flmul@a+1)^0,c
  8157  001E9E  0E00               	movlw	0
  8158  001EA0  6E0A               	movwf	(___flmul@a+2)^0,c
  8159  001EA2  0E00               	movlw	0
  8160  001EA4  6E0B               	movwf	(___flmul@a+3)^0,c
  8161  001EA6                     l1373:
  8162  001EA6  5015               	movf	___flmul@aexp^0,w,c
  8163  001EA8  B4D8               	btfsc	status,2,c
  8164  001EAA  EF59  F00F         	goto	u4301
  8165  001EAE  EF5B  F00F         	goto	u4300
  8166  001EB2                     u4301:
  8167  001EB2  EF63  F00F         	goto	l4255
  8168  001EB6                     u4300:
  8169  001EB6  5016               	movf	___flmul@bexp^0,w,c
  8170  001EB8  A4D8               	btfss	status,2,c
  8171  001EBA  EF61  F00F         	goto	u4311
  8172  001EBE  EF63  F00F         	goto	u4310
  8173  001EC2                     u4311:
  8174  001EC2  EF6D  F00F         	goto	l4259
  8175  001EC6                     u4310:
  8176  001EC6                     l4255:
  8177  001EC6  0E00               	movlw	0
  8178  001EC8  6E04               	movwf	?___flmul^0,c
  8179  001ECA  0E00               	movlw	0
  8180  001ECC  6E05               	movwf	(?___flmul+1)^0,c
  8181  001ECE  0E00               	movlw	0
  8182  001ED0  6E06               	movwf	(?___flmul+2)^0,c
  8183  001ED2  0E00               	movlw	0
  8184  001ED4  6E07               	movwf	(?___flmul+3)^0,c
  8185  001ED6  EF05  F011         	goto	l1377
  8186  001EDA                     l4259:
  8187  001EDA  500A               	movf	(___flmul@a+2)^0,w,c
  8188  001EDC  0204               	mulwf	___flmul@b^0,c
  8189  001EDE  CFF3 F01B          	movff	prodl,___flmul@temp
  8190  001EE2  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8191  001EE6  501B               	movf	___flmul@temp^0,w,c
  8192  001EE8  6E11               	movwf	___flmul@grs^0,c
  8193  001EEA  6A12               	clrf	(___flmul@grs+1)^0,c
  8194  001EEC  6A13               	clrf	(___flmul@grs+2)^0,c
  8195  001EEE  6A14               	clrf	(___flmul@grs+3)^0,c
  8196  001EF0  501C               	movf	(___flmul@temp+1)^0,w,c
  8197  001EF2  6E17               	movwf	___flmul@prod^0,c
  8198  001EF4  6A18               	clrf	(___flmul@prod+1)^0,c
  8199  001EF6  6A19               	clrf	(___flmul@prod+2)^0,c
  8200  001EF8  6A1A               	clrf	(___flmul@prod+3)^0,c
  8201  001EFA  5009               	movf	(___flmul@a+1)^0,w,c
  8202  001EFC  0205               	mulwf	(___flmul@b+1)^0,c
  8203  001EFE  CFF3 F01B          	movff	prodl,___flmul@temp
  8204  001F02  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8205  001F06  501B               	movf	___flmul@temp^0,w,c
  8206  001F08  2611               	addwf	___flmul@grs^0,f,c
  8207  001F0A  0E00               	movlw	0
  8208  001F0C  2212               	addwfc	(___flmul@grs+1)^0,f,c
  8209  001F0E  2213               	addwfc	(___flmul@grs+2)^0,f,c
  8210  001F10  2214               	addwfc	(___flmul@grs+3)^0,f,c
  8211  001F12  501C               	movf	(___flmul@temp+1)^0,w,c
  8212  001F14  2617               	addwf	___flmul@prod^0,f,c
  8213  001F16  0E00               	movlw	0
  8214  001F18  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8215  001F1A  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8216  001F1C  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8217  001F1E  5008               	movf	___flmul@a^0,w,c
  8218  001F20  0206               	mulwf	(___flmul@b+2)^0,c
  8219  001F22  CFF3 F01B          	movff	prodl,___flmul@temp
  8220  001F26  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8221  001F2A  501B               	movf	___flmul@temp^0,w,c
  8222  001F2C  2611               	addwf	___flmul@grs^0,f,c
  8223  001F2E  0E00               	movlw	0
  8224  001F30  2212               	addwfc	(___flmul@grs+1)^0,f,c
  8225  001F32  2213               	addwfc	(___flmul@grs+2)^0,f,c
  8226  001F34  2214               	addwfc	(___flmul@grs+3)^0,f,c
  8227  001F36  501C               	movf	(___flmul@temp+1)^0,w,c
  8228  001F38  2617               	addwf	___flmul@prod^0,f,c
  8229  001F3A  0E00               	movlw	0
  8230  001F3C  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8231  001F3E  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8232  001F40  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8233  001F42  C013  F014         	movff	___flmul@grs+2,___flmul@grs+3
  8234  001F46  C012  F013         	movff	___flmul@grs+1,___flmul@grs+2
  8235  001F4A  C011  F012         	movff	___flmul@grs,___flmul@grs+1
  8236  001F4E  6A11               	clrf	___flmul@grs^0,c
  8237  001F50  5008               	movf	___flmul@a^0,w,c
  8238  001F52  0205               	mulwf	(___flmul@b+1)^0,c
  8239  001F54  CFF3 F01B          	movff	prodl,___flmul@temp
  8240  001F58  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8241  001F5C  501B               	movf	___flmul@temp^0,w,c
  8242  001F5E  2611               	addwf	___flmul@grs^0,f,c
  8243  001F60  501C               	movf	(___flmul@temp+1)^0,w,c
  8244  001F62  2212               	addwfc	(___flmul@grs+1)^0,f,c
  8245  001F64  0E00               	movlw	0
  8246  001F66  2213               	addwfc	(___flmul@grs+2)^0,f,c
  8247  001F68  0E00               	movlw	0
  8248  001F6A  2214               	addwfc	(___flmul@grs+3)^0,f,c
  8249  001F6C  5009               	movf	(___flmul@a+1)^0,w,c
  8250  001F6E  0204               	mulwf	___flmul@b^0,c
  8251  001F70  CFF3 F01B          	movff	prodl,___flmul@temp
  8252  001F74  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8253  001F78  501B               	movf	___flmul@temp^0,w,c
  8254  001F7A  2611               	addwf	___flmul@grs^0,f,c
  8255  001F7C  501C               	movf	(___flmul@temp+1)^0,w,c
  8256  001F7E  2212               	addwfc	(___flmul@grs+1)^0,f,c
  8257  001F80  0E00               	movlw	0
  8258  001F82  2213               	addwfc	(___flmul@grs+2)^0,f,c
  8259  001F84  0E00               	movlw	0
  8260  001F86  2214               	addwfc	(___flmul@grs+3)^0,f,c
  8261  001F88  C013  F014         	movff	___flmul@grs+2,___flmul@grs+3
  8262  001F8C  C012  F013         	movff	___flmul@grs+1,___flmul@grs+2
  8263  001F90  C011  F012         	movff	___flmul@grs,___flmul@grs+1
  8264  001F94  6A11               	clrf	___flmul@grs^0,c
  8265  001F96  5008               	movf	___flmul@a^0,w,c
  8266  001F98  0204               	mulwf	___flmul@b^0,c
  8267  001F9A  CFF3 F01B          	movff	prodl,___flmul@temp
  8268  001F9E  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8269  001FA2  501B               	movf	___flmul@temp^0,w,c
  8270  001FA4  2611               	addwf	___flmul@grs^0,f,c
  8271  001FA6  501C               	movf	(___flmul@temp+1)^0,w,c
  8272  001FA8  2212               	addwfc	(___flmul@grs+1)^0,f,c
  8273  001FAA  0E00               	movlw	0
  8274  001FAC  2213               	addwfc	(___flmul@grs+2)^0,f,c
  8275  001FAE  0E00               	movlw	0
  8276  001FB0  2214               	addwfc	(___flmul@grs+3)^0,f,c
  8277  001FB2  500A               	movf	(___flmul@a+2)^0,w,c
  8278  001FB4  0205               	mulwf	(___flmul@b+1)^0,c
  8279  001FB6  CFF3 F01B          	movff	prodl,___flmul@temp
  8280  001FBA  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8281  001FBE  501B               	movf	___flmul@temp^0,w,c
  8282  001FC0  2617               	addwf	___flmul@prod^0,f,c
  8283  001FC2  501C               	movf	(___flmul@temp+1)^0,w,c
  8284  001FC4  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8285  001FC6  0E00               	movlw	0
  8286  001FC8  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8287  001FCA  0E00               	movlw	0
  8288  001FCC  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8289  001FCE  5009               	movf	(___flmul@a+1)^0,w,c
  8290  001FD0  0206               	mulwf	(___flmul@b+2)^0,c
  8291  001FD2  CFF3 F01B          	movff	prodl,___flmul@temp
  8292  001FD6  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8293  001FDA  501B               	movf	___flmul@temp^0,w,c
  8294  001FDC  2617               	addwf	___flmul@prod^0,f,c
  8295  001FDE  501C               	movf	(___flmul@temp+1)^0,w,c
  8296  001FE0  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8297  001FE2  0E00               	movlw	0
  8298  001FE4  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8299  001FE6  0E00               	movlw	0
  8300  001FE8  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8301  001FEA  500A               	movf	(___flmul@a+2)^0,w,c
  8302  001FEC  0206               	mulwf	(___flmul@b+2)^0,c
  8303  001FEE  CFF3 F01B          	movff	prodl,___flmul@temp
  8304  001FF2  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8305  001FF6  501B               	movf	___flmul@temp^0,w,c
  8306  001FF8  6E0C               	movwf	??___flmul^0,c
  8307  001FFA  501C               	movf	(___flmul@temp+1)^0,w,c
  8308  001FFC  6E0D               	movwf	(??___flmul+1)^0,c
  8309  001FFE  6A0E               	clrf	(??___flmul+2)^0,c
  8310  002000  6A0F               	clrf	(??___flmul+3)^0,c
  8311  002002  C00E  F00F         	movff	??___flmul+2,??___flmul+3
  8312  002006  C00D  F00E         	movff	??___flmul+1,??___flmul+2
  8313  00200A  C00C  F00D         	movff	??___flmul,??___flmul+1
  8314  00200E  6A0C               	clrf	??___flmul^0,c
  8315  002010  500C               	movf	??___flmul^0,w,c
  8316  002012  2617               	addwf	___flmul@prod^0,f,c
  8317  002014  500D               	movf	(??___flmul+1)^0,w,c
  8318  002016  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8319  002018  500E               	movf	(??___flmul+2)^0,w,c
  8320  00201A  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8321  00201C  500F               	movf	(??___flmul+3)^0,w,c
  8322  00201E  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8323  002020  C011  F00C         	movff	___flmul@grs,??___flmul
  8324  002024  C012  F00D         	movff	___flmul@grs+1,??___flmul+1
  8325  002028  C013  F00E         	movff	___flmul@grs+2,??___flmul+2
  8326  00202C  C014  F00F         	movff	___flmul@grs+3,??___flmul+3
  8327  002030  0E19               	movlw	25
  8328  002032  EF20  F010         	goto	u4320
  8329  002036                     u4325:
  8330  002036  90D8               	bcf	status,0,c
  8331  002038  320F               	rrcf	(??___flmul+3)^0,f,c
  8332  00203A  320E               	rrcf	(??___flmul+2)^0,f,c
  8333  00203C  320D               	rrcf	(??___flmul+1)^0,f,c
  8334  00203E  320C               	rrcf	??___flmul^0,f,c
  8335  002040                     u4320:
  8336  002040  2EE8               	decfsz	wreg,f,c
  8337  002042  EF1B  F010         	goto	u4325
  8338  002046  500C               	movf	??___flmul^0,w,c
  8339  002048  2617               	addwf	___flmul@prod^0,f,c
  8340  00204A  500D               	movf	(??___flmul+1)^0,w,c
  8341  00204C  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8342  00204E  500E               	movf	(??___flmul+2)^0,w,c
  8343  002050  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8344  002052  500F               	movf	(??___flmul+3)^0,w,c
  8345  002054  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8346  002056  C013  F014         	movff	___flmul@grs+2,___flmul@grs+3
  8347  00205A  C012  F013         	movff	___flmul@grs+1,___flmul@grs+2
  8348  00205E  C011  F012         	movff	___flmul@grs,___flmul@grs+1
  8349  002062  6A11               	clrf	___flmul@grs^0,c
  8350  002064  5015               	movf	___flmul@aexp^0,w,c
  8351  002066  C016  F00C         	movff	___flmul@bexp,??___flmul
  8352  00206A  6A0D               	clrf	(??___flmul+1)^0,c
  8353  00206C  260C               	addwf	??___flmul^0,f,c
  8354  00206E  0E00               	movlw	0
  8355  002070  220D               	addwfc	(??___flmul+1)^0,f,c
  8356  002072  0E82               	movlw	130
  8357  002074  240C               	addwf	??___flmul^0,w,c
  8358  002076  6E1B               	movwf	___flmul@temp^0,c
  8359  002078  0EFF               	movlw	255
  8360  00207A  200D               	addwfc	(??___flmul+1)^0,w,c
  8361  00207C  6E1C               	movwf	(___flmul@temp+1)^0,c
  8362  00207E  EF56  F010         	goto	l4307
  8363  002082                     l4301:
  8364  002082  90D8               	bcf	status,0,c
  8365  002084  3617               	rlcf	___flmul@prod^0,f,c
  8366  002086  3618               	rlcf	(___flmul@prod+1)^0,f,c
  8367  002088  3619               	rlcf	(___flmul@prod+2)^0,f,c
  8368  00208A  361A               	rlcf	(___flmul@prod+3)^0,f,c
  8369  00208C  AE14               	btfss	(___flmul@grs+3)^0,7,c
  8370  00208E  EF4B  F010         	goto	u4331
  8371  002092  EF4D  F010         	goto	u4330
  8372  002096                     u4331:
  8373  002096  EF4E  F010         	goto	l1380
  8374  00209A                     u4330:
  8375  00209A  8017               	bsf	___flmul@prod^0,0,c
  8376  00209C                     l1380:
  8377  00209C  90D8               	bcf	status,0,c
  8378  00209E  3611               	rlcf	___flmul@grs^0,f,c
  8379  0020A0  3612               	rlcf	(___flmul@grs+1)^0,f,c
  8380  0020A2  3613               	rlcf	(___flmul@grs+2)^0,f,c
  8381  0020A4  3614               	rlcf	(___flmul@grs+3)^0,f,c
  8382  0020A6  061B               	decf	___flmul@temp^0,f,c
  8383  0020A8  A0D8               	btfss	status,0,c
  8384  0020AA  061C               	decf	(___flmul@temp+1)^0,f,c
  8385  0020AC                     l4307:
  8386  0020AC  AE19               	btfss	(___flmul@prod+2)^0,7,c
  8387  0020AE  EF5B  F010         	goto	u4341
  8388  0020B2  EF5D  F010         	goto	u4340
  8389  0020B6                     u4341:
  8390  0020B6  EF41  F010         	goto	l4301
  8391  0020BA                     u4340:
  8392  0020BA  0E00               	movlw	0
  8393  0020BC  6E15               	movwf	___flmul@aexp^0,c
  8394  0020BE  AE14               	btfss	(___flmul@grs+3)^0,7,c
  8395  0020C0  EF64  F010         	goto	u4351
  8396  0020C4  EF66  F010         	goto	u4350
  8397  0020C8                     u4351:
  8398  0020C8  EF8A  F010         	goto	l1382
  8399  0020CC                     u4350:
  8400  0020CC  0EFF               	movlw	255
  8401  0020CE  1411               	andwf	___flmul@grs^0,w,c
  8402  0020D0  6E0C               	movwf	??___flmul^0,c
  8403  0020D2  0EFF               	movlw	255
  8404  0020D4  1412               	andwf	(___flmul@grs+1)^0,w,c
  8405  0020D6  6E0D               	movwf	(??___flmul+1)^0,c
  8406  0020D8  0EFF               	movlw	255
  8407  0020DA  1413               	andwf	(___flmul@grs+2)^0,w,c
  8408  0020DC  6E0E               	movwf	(??___flmul+2)^0,c
  8409  0020DE  0E7F               	movlw	127
  8410  0020E0  1414               	andwf	(___flmul@grs+3)^0,w,c
  8411  0020E2  6E0F               	movwf	(??___flmul+3)^0,c
  8412  0020E4  500C               	movf	??___flmul^0,w,c
  8413  0020E6  100D               	iorwf	(??___flmul+1)^0,w,c
  8414  0020E8  100E               	iorwf	(??___flmul+2)^0,w,c
  8415  0020EA  100F               	iorwf	(??___flmul+3)^0,w,c
  8416  0020EC  B4D8               	btfsc	status,2,c
  8417  0020EE  EF7B  F010         	goto	u4361
  8418  0020F2  EF7D  F010         	goto	u4360
  8419  0020F6                     u4361:
  8420  0020F6  EF81  F010         	goto	l1383
  8421  0020FA                     u4360:
  8422  0020FA                     l4315:
  8423  0020FA  0E01               	movlw	1
  8424  0020FC  6E15               	movwf	___flmul@aexp^0,c
  8425  0020FE  EF8A  F010         	goto	l1382
  8426  002102                     l1383:
  8427  002102  A017               	btfss	___flmul@prod^0,0,c
  8428  002104  EF86  F010         	goto	u4371
  8429  002108  EF88  F010         	goto	u4370
  8430  00210C                     u4371:
  8431  00210C  EF8A  F010         	goto	l1382
  8432  002110                     u4370:
  8433  002110  EF7D  F010         	goto	l4315
  8434  002114                     l1382:
  8435  002114  5015               	movf	___flmul@aexp^0,w,c
  8436  002116  B4D8               	btfsc	status,2,c
  8437  002118  EF90  F010         	goto	u4381
  8438  00211C  EF92  F010         	goto	u4380
  8439  002120                     u4381:
  8440  002120  EFB6  F010         	goto	l4327
  8441  002124                     u4380:
  8442  002124  0E01               	movlw	1
  8443  002126  2617               	addwf	___flmul@prod^0,f,c
  8444  002128  0E00               	movlw	0
  8445  00212A  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8446  00212C  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8447  00212E  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8448  002130  A01A               	btfss	(___flmul@prod+3)^0,0,c
  8449  002132  EF9D  F010         	goto	u4391
  8450  002136  EF9F  F010         	goto	u4390
  8451  00213A                     u4391:
  8452  00213A  EFB6  F010         	goto	l4327
  8453  00213E                     u4390:
  8454  00213E  C017  F00C         	movff	___flmul@prod,??___flmul
  8455  002142  C018  F00D         	movff	___flmul@prod+1,??___flmul+1
  8456  002146  C019  F00E         	movff	___flmul@prod+2,??___flmul+2
  8457  00214A  C01A  F00F         	movff	___flmul@prod+3,??___flmul+3
  8458  00214E  340F               	rlcf	(??___flmul+3)^0,w,c
  8459  002150  320F               	rrcf	(??___flmul+3)^0,f,c
  8460  002152  320E               	rrcf	(??___flmul+2)^0,f,c
  8461  002154  320D               	rrcf	(??___flmul+1)^0,f,c
  8462  002156  320C               	rrcf	??___flmul^0,f,c
  8463  002158  C00C  F017         	movff	??___flmul,___flmul@prod
  8464  00215C  C00D  F018         	movff	??___flmul+1,___flmul@prod+1
  8465  002160  C00E  F019         	movff	??___flmul+2,___flmul@prod+2
  8466  002164  C00F  F01A         	movff	??___flmul+3,___flmul@prod+3
  8467  002168  4A1B               	infsnz	___flmul@temp^0,f,c
  8468  00216A  2A1C               	incf	(___flmul@temp+1)^0,f,c
  8469  00216C                     l4327:
  8470  00216C  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  8471  00216E  EFC1  F010         	goto	u4401
  8472  002172  501C               	movf	(___flmul@temp+1)^0,w,c
  8473  002174  E108               	bnz	u4400
  8474  002176  281B               	incf	___flmul@temp^0,w,c
  8475  002178  A0D8               	btfss	status,0,c
  8476  00217A  EFC1  F010         	goto	u4401
  8477  00217E  EFC3  F010         	goto	u4400
  8478  002182                     u4401:
  8479  002182  EFCD  F010         	goto	l4331
  8480  002186                     u4400:
  8481  002186  0E00               	movlw	0
  8482  002188  6E17               	movwf	___flmul@prod^0,c
  8483  00218A  0E00               	movlw	0
  8484  00218C  6E18               	movwf	(___flmul@prod+1)^0,c
  8485  00218E  0E80               	movlw	128
  8486  002190  6E19               	movwf	(___flmul@prod+2)^0,c
  8487  002192  0E7F               	movlw	127
  8488  002194  6E1A               	movwf	(___flmul@prod+3)^0,c
  8489  002196  EFFB  F010         	goto	l4343
  8490  00219A                     l4331:
  8491  00219A  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  8492  00219C  EFDA  F010         	goto	u4410
  8493  0021A0  501C               	movf	(___flmul@temp+1)^0,w,c
  8494  0021A2  E106               	bnz	u4411
  8495  0021A4  041B               	decf	___flmul@temp^0,w,c
  8496  0021A6  B0D8               	btfsc	status,0,c
  8497  0021A8  EFD8  F010         	goto	u4411
  8498  0021AC  EFDA  F010         	goto	u4410
  8499  0021B0                     u4411:
  8500  0021B0  EFE6  F010         	goto	l1390
  8501  0021B4                     u4410:
  8502  0021B4  0E00               	movlw	0
  8503  0021B6  6E17               	movwf	___flmul@prod^0,c
  8504  0021B8  0E00               	movlw	0
  8505  0021BA  6E18               	movwf	(___flmul@prod+1)^0,c
  8506  0021BC  0E00               	movlw	0
  8507  0021BE  6E19               	movwf	(___flmul@prod+2)^0,c
  8508  0021C0  0E00               	movlw	0
  8509  0021C2  6E1A               	movwf	(___flmul@prod+3)^0,c
  8510  0021C4  0E00               	movlw	0
  8511  0021C6  6E10               	movwf	___flmul@sign^0,c
  8512  0021C8  EFFB  F010         	goto	l4343
  8513  0021CC                     l1390:
  8514  0021CC  C01B  F016         	movff	___flmul@temp,___flmul@bexp
  8515  0021D0  0EFF               	movlw	255
  8516  0021D2  1617               	andwf	___flmul@prod^0,f,c
  8517  0021D4  0EFF               	movlw	255
  8518  0021D6  1618               	andwf	(___flmul@prod+1)^0,f,c
  8519  0021D8  0E7F               	movlw	127
  8520  0021DA  1619               	andwf	(___flmul@prod+2)^0,f,c
  8521  0021DC  0E00               	movlw	0
  8522  0021DE  161A               	andwf	(___flmul@prod+3)^0,f,c
  8523  0021E0  A016               	btfss	___flmul@bexp^0,0,c
  8524  0021E2  EFF5  F010         	goto	u4421
  8525  0021E6  EFF7  F010         	goto	u4420
  8526  0021EA                     u4421:
  8527  0021EA  EFF8  F010         	goto	l4341
  8528  0021EE                     u4420:
  8529  0021EE  8E19               	bsf	(___flmul@prod+2)^0,7,c
  8530  0021F0                     l4341:
  8531  0021F0  90D8               	bcf	status,0,c
  8532  0021F2  3016               	rrcf	___flmul@bexp^0,w,c
  8533  0021F4  6E1A               	movwf	(___flmul@prod+3)^0,c
  8534  0021F6                     l4343:
  8535  0021F6  5010               	movf	___flmul@sign^0,w,c
  8536  0021F8  121A               	iorwf	(___flmul@prod+3)^0,f,c
  8537  0021FA  C017  F004         	movff	___flmul@prod,?___flmul
  8538  0021FE  C018  F005         	movff	___flmul@prod+1,?___flmul+1
  8539  002202  C019  F006         	movff	___flmul@prod+2,?___flmul+2
  8540  002206  C01A  F007         	movff	___flmul@prod+3,?___flmul+3
  8541  00220A                     l1377:
  8542  00220A  0012               	return		;funcret
  8543  00220C                     __end_of___flmul:
  8544                           	opt callstack 0
  8545                           
  8546 ;; *************** function ___fldiv *****************
  8547 ;; Defined at:
  8548 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;  b               4    3[COMRAM] unsigned char 
  8551 ;;  a               4    7[COMRAM] unsigned char 
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;  grs             4   22[COMRAM] unsigned long 
  8554 ;;  rem             4   15[COMRAM] unsigned long 
  8555 ;;  new_exp         2   20[COMRAM] short 
  8556 ;;  aexp            1   27[COMRAM] unsigned char 
  8557 ;;  bexp            1   26[COMRAM] unsigned char 
  8558 ;;  sign            1   19[COMRAM] unsigned char 
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  4    3[COMRAM] unsigned char 
  8561 ;; Registers used:
  8562 ;;		wreg, status,2, status,0
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8568 ;;      Params:         8       0       0       0       0       0       0       0       0
  8569 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8570 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8571 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8572 ;;Total ram usage:       25 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; Hardware stack levels required when called:    2
  8575 ;; This function calls:
  8576 ;;		Nothing
  8577 ;; This function is called by:
  8578 ;;		_normalize
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text24
  8583  00220C                     __ptext24:
  8584                           	opt callstack 0
  8585  00220C                     ___fldiv:
  8586                           	opt callstack 25
  8587  00220C  5007               	movf	(___fldiv@b+3)^0,w,c
  8588  00220E  0B80               	andlw	128
  8589  002210  6E14               	movwf	___fldiv@sign^0,c
  8590  002212  5007               	movf	(___fldiv@b+3)^0,w,c
  8591  002214  2407               	addwf	(___fldiv@b+3)^0,w,c
  8592  002216  6E1B               	movwf	___fldiv@bexp^0,c
  8593  002218  AE06               	btfss	(___fldiv@b+2)^0,7,c
  8594  00221A  EF11  F011         	goto	u4011
  8595  00221E  EF13  F011         	goto	u4010
  8596  002222                     u4011:
  8597  002222  EF14  F011         	goto	l4087
  8598  002226                     u4010:
  8599  002226  801B               	bsf	___fldiv@bexp^0,0,c
  8600  002228                     l4087:
  8601  002228  501B               	movf	___fldiv@bexp^0,w,c
  8602  00222A  B4D8               	btfsc	status,2,c
  8603  00222C  EF1A  F011         	goto	u4021
  8604  002230  EF1C  F011         	goto	u4020
  8605  002234                     u4021:
  8606  002234  EF31  F011         	goto	l4097
  8607  002238                     u4020:
  8608  002238  281B               	incf	___fldiv@bexp^0,w,c
  8609  00223A  A4D8               	btfss	status,2,c
  8610  00223C  EF22  F011         	goto	u4031
  8611  002240  EF24  F011         	goto	u4030
  8612  002244                     u4031:
  8613  002244  EF2C  F011         	goto	l4093
  8614  002248                     u4030:
  8615  002248  0E00               	movlw	0
  8616  00224A  6E04               	movwf	___fldiv@b^0,c
  8617  00224C  0E00               	movlw	0
  8618  00224E  6E05               	movwf	(___fldiv@b+1)^0,c
  8619  002250  0E00               	movlw	0
  8620  002252  6E06               	movwf	(___fldiv@b+2)^0,c
  8621  002254  0E00               	movlw	0
  8622  002256  6E07               	movwf	(___fldiv@b+3)^0,c
  8623  002258                     l4093:
  8624  002258  8E06               	bsf	(___fldiv@b+2)^0,7,c
  8625  00225A  0E00               	movlw	0
  8626  00225C  6E07               	movwf	(___fldiv@b+3)^0,c
  8627  00225E  EF39  F011         	goto	l4099
  8628  002262                     l4097:
  8629  002262  0E00               	movlw	0
  8630  002264  6E04               	movwf	___fldiv@b^0,c
  8631  002266  0E00               	movlw	0
  8632  002268  6E05               	movwf	(___fldiv@b+1)^0,c
  8633  00226A  0E00               	movlw	0
  8634  00226C  6E06               	movwf	(___fldiv@b+2)^0,c
  8635  00226E  0E00               	movlw	0
  8636  002270  6E07               	movwf	(___fldiv@b+3)^0,c
  8637  002272                     l4099:
  8638  002272  500B               	movf	(___fldiv@a+3)^0,w,c
  8639  002274  0B80               	andlw	128
  8640  002276  1A14               	xorwf	___fldiv@sign^0,f,c
  8641  002278  500B               	movf	(___fldiv@a+3)^0,w,c
  8642  00227A  240B               	addwf	(___fldiv@a+3)^0,w,c
  8643  00227C  6E1C               	movwf	___fldiv@aexp^0,c
  8644  00227E  AE0A               	btfss	(___fldiv@a+2)^0,7,c
  8645  002280  EF44  F011         	goto	u4041
  8646  002284  EF46  F011         	goto	u4040
  8647  002288                     u4041:
  8648  002288  EF47  F011         	goto	l4107
  8649  00228C                     u4040:
  8650  00228C  801C               	bsf	___fldiv@aexp^0,0,c
  8651  00228E                     l4107:
  8652  00228E  501C               	movf	___fldiv@aexp^0,w,c
  8653  002290  B4D8               	btfsc	status,2,c
  8654  002292  EF4D  F011         	goto	u4051
  8655  002296  EF4F  F011         	goto	u4050
  8656  00229A                     u4051:
  8657  00229A  EF64  F011         	goto	l4117
  8658  00229E                     u4050:
  8659  00229E  281C               	incf	___fldiv@aexp^0,w,c
  8660  0022A0  A4D8               	btfss	status,2,c
  8661  0022A2  EF55  F011         	goto	u4061
  8662  0022A6  EF57  F011         	goto	u4060
  8663  0022AA                     u4061:
  8664  0022AA  EF5F  F011         	goto	l4113
  8665  0022AE                     u4060:
  8666  0022AE  0E00               	movlw	0
  8667  0022B0  6E08               	movwf	___fldiv@a^0,c
  8668  0022B2  0E00               	movlw	0
  8669  0022B4  6E09               	movwf	(___fldiv@a+1)^0,c
  8670  0022B6  0E00               	movlw	0
  8671  0022B8  6E0A               	movwf	(___fldiv@a+2)^0,c
  8672  0022BA  0E00               	movlw	0
  8673  0022BC  6E0B               	movwf	(___fldiv@a+3)^0,c
  8674  0022BE                     l4113:
  8675  0022BE  8E0A               	bsf	(___fldiv@a+2)^0,7,c
  8676  0022C0  0E00               	movlw	0
  8677  0022C2  6E0B               	movwf	(___fldiv@a+3)^0,c
  8678  0022C4  EF6C  F011         	goto	l4119
  8679  0022C8                     l4117:
  8680  0022C8  0E00               	movlw	0
  8681  0022CA  6E08               	movwf	___fldiv@a^0,c
  8682  0022CC  0E00               	movlw	0
  8683  0022CE  6E09               	movwf	(___fldiv@a+1)^0,c
  8684  0022D0  0E00               	movlw	0
  8685  0022D2  6E0A               	movwf	(___fldiv@a+2)^0,c
  8686  0022D4  0E00               	movlw	0
  8687  0022D6  6E0B               	movwf	(___fldiv@a+3)^0,c
  8688  0022D8                     l4119:
  8689  0022D8  5008               	movf	___fldiv@a^0,w,c
  8690  0022DA  1009               	iorwf	(___fldiv@a+1)^0,w,c
  8691  0022DC  100A               	iorwf	(___fldiv@a+2)^0,w,c
  8692  0022DE  100B               	iorwf	(___fldiv@a+3)^0,w,c
  8693  0022E0  A4D8               	btfss	status,2,c
  8694  0022E2  EF75  F011         	goto	u4071
  8695  0022E6  EF77  F011         	goto	u4070
  8696  0022EA                     u4071:
  8697  0022EA  EF8F  F011         	goto	l4131
  8698  0022EE                     u4070:
  8699  0022EE  0E00               	movlw	0
  8700  0022F0  6E04               	movwf	___fldiv@b^0,c
  8701  0022F2  0E00               	movlw	0
  8702  0022F4  6E05               	movwf	(___fldiv@b+1)^0,c
  8703  0022F6  0E00               	movlw	0
  8704  0022F8  6E06               	movwf	(___fldiv@b+2)^0,c
  8705  0022FA  0E00               	movlw	0
  8706  0022FC  6E07               	movwf	(___fldiv@b+3)^0,c
  8707  0022FE  0E80               	movlw	128
  8708  002300  1206               	iorwf	(___fldiv@b+2)^0,f,c
  8709  002302  0E7F               	movlw	127
  8710  002304  1207               	iorwf	(___fldiv@b+3)^0,f,c
  8711  002306                     l4125:
  8712  002306  5014               	movf	___fldiv@sign^0,w,c
  8713  002308  1207               	iorwf	(___fldiv@b+3)^0,f,c
  8714  00230A  C004  F004         	movff	___fldiv@b,?___fldiv
  8715  00230E  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
  8716  002312  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
  8717  002316  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
  8718  00231A  EFD2  F012         	goto	l1341
  8719  00231E                     l4131:
  8720  00231E  501B               	movf	___fldiv@bexp^0,w,c
  8721  002320  A4D8               	btfss	status,2,c
  8722  002322  EF95  F011         	goto	u4081
  8723  002326  EF97  F011         	goto	u4080
  8724  00232A                     u4081:
  8725  00232A  EFA1  F011         	goto	l4139
  8726  00232E                     u4080:
  8727  00232E  0E00               	movlw	0
  8728  002330  6E04               	movwf	?___fldiv^0,c
  8729  002332  0E00               	movlw	0
  8730  002334  6E05               	movwf	(?___fldiv+1)^0,c
  8731  002336  0E00               	movlw	0
  8732  002338  6E06               	movwf	(?___fldiv+2)^0,c
  8733  00233A  0E00               	movlw	0
  8734  00233C  6E07               	movwf	(?___fldiv+3)^0,c
  8735  00233E  EFD2  F012         	goto	l1341
  8736  002342                     l4139:
  8737  002342  501C               	movf	___fldiv@aexp^0,w,c
  8738  002344  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
  8739  002348  6A0D               	clrf	(??___fldiv+1)^0,c
  8740  00234A  5E0C               	subwf	??___fldiv^0,f,c
  8741  00234C  0E00               	movlw	0
  8742  00234E  5A0D               	subwfb	(??___fldiv+1)^0,f,c
  8743  002350  0E7F               	movlw	127
  8744  002352  240C               	addwf	??___fldiv^0,w,c
  8745  002354  6E15               	movwf	___fldiv@new_exp^0,c
  8746  002356  0E00               	movlw	0
  8747  002358  200D               	addwfc	(??___fldiv+1)^0,w,c
  8748  00235A  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  8749  00235C  C004  F010         	movff	___fldiv@b,___fldiv@rem
  8750  002360  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
  8751  002364  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
  8752  002368  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
  8753  00236C  0E00               	movlw	0
  8754  00236E  6E04               	movwf	___fldiv@b^0,c
  8755  002370  0E00               	movlw	0
  8756  002372  6E05               	movwf	(___fldiv@b+1)^0,c
  8757  002374  0E00               	movlw	0
  8758  002376  6E06               	movwf	(___fldiv@b+2)^0,c
  8759  002378  0E00               	movlw	0
  8760  00237A  6E07               	movwf	(___fldiv@b+3)^0,c
  8761  00237C  0E00               	movlw	0
  8762  00237E  6E17               	movwf	___fldiv@grs^0,c
  8763  002380  0E00               	movlw	0
  8764  002382  6E18               	movwf	(___fldiv@grs+1)^0,c
  8765  002384  0E00               	movlw	0
  8766  002386  6E19               	movwf	(___fldiv@grs+2)^0,c
  8767  002388  0E00               	movlw	0
  8768  00238A  6E1A               	movwf	(___fldiv@grs+3)^0,c
  8769  00238C  0E00               	movlw	0
  8770  00238E  6E1C               	movwf	___fldiv@aexp^0,c
  8771  002390  EF02  F012         	goto	l1343
  8772  002394                     l4149:
  8773  002394  501C               	movf	___fldiv@aexp^0,w,c
  8774  002396  B4D8               	btfsc	status,2,c
  8775  002398  EFD0  F011         	goto	u4091
  8776  00239C  EFD2  F011         	goto	u4090
  8777  0023A0                     u4091:
  8778  0023A0  EFE9  F011         	goto	l4157
  8779  0023A4                     u4090:
  8780  0023A4  90D8               	bcf	status,0,c
  8781  0023A6  3610               	rlcf	___fldiv@rem^0,f,c
  8782  0023A8  3611               	rlcf	(___fldiv@rem+1)^0,f,c
  8783  0023AA  3612               	rlcf	(___fldiv@rem+2)^0,f,c
  8784  0023AC  3613               	rlcf	(___fldiv@rem+3)^0,f,c
  8785  0023AE  90D8               	bcf	status,0,c
  8786  0023B0  3604               	rlcf	___fldiv@b^0,f,c
  8787  0023B2  3605               	rlcf	(___fldiv@b+1)^0,f,c
  8788  0023B4  3606               	rlcf	(___fldiv@b+2)^0,f,c
  8789  0023B6  3607               	rlcf	(___fldiv@b+3)^0,f,c
  8790  0023B8  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  8791  0023BA  EFE1  F011         	goto	u4101
  8792  0023BE  EFE3  F011         	goto	u4100
  8793  0023C2                     u4101:
  8794  0023C2  EFE4  F011         	goto	l1346
  8795  0023C6                     u4100:
  8796  0023C6  8004               	bsf	___fldiv@b^0,0,c
  8797  0023C8                     l1346:
  8798  0023C8  90D8               	bcf	status,0,c
  8799  0023CA  3617               	rlcf	___fldiv@grs^0,f,c
  8800  0023CC  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  8801  0023CE  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  8802  0023D0  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  8803  0023D2                     l4157:
  8804  0023D2  5008               	movf	___fldiv@a^0,w,c
  8805  0023D4  5C10               	subwf	___fldiv@rem^0,w,c
  8806  0023D6  5009               	movf	(___fldiv@a+1)^0,w,c
  8807  0023D8  5811               	subwfb	(___fldiv@rem+1)^0,w,c
  8808  0023DA  500A               	movf	(___fldiv@a+2)^0,w,c
  8809  0023DC  5812               	subwfb	(___fldiv@rem+2)^0,w,c
  8810  0023DE  500B               	movf	(___fldiv@a+3)^0,w,c
  8811  0023E0  5813               	subwfb	(___fldiv@rem+3)^0,w,c
  8812  0023E2  A0D8               	btfss	status,0,c
  8813  0023E4  EFF6  F011         	goto	u4111
  8814  0023E8  EFF8  F011         	goto	u4110
  8815  0023EC                     u4111:
  8816  0023EC  EF01  F012         	goto	l4163
  8817  0023F0                     u4110:
  8818  0023F0  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
  8819  0023F2  5008               	movf	___fldiv@a^0,w,c
  8820  0023F4  5E10               	subwf	___fldiv@rem^0,f,c
  8821  0023F6  5009               	movf	(___fldiv@a+1)^0,w,c
  8822  0023F8  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
  8823  0023FA  500A               	movf	(___fldiv@a+2)^0,w,c
  8824  0023FC  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
  8825  0023FE  500B               	movf	(___fldiv@a+3)^0,w,c
  8826  002400  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
  8827  002402                     l4163:
  8828  002402  2A1C               	incf	___fldiv@aexp^0,f,c
  8829  002404                     l1343:
  8830  002404  0E19               	movlw	25
  8831  002406  641C               	cpfsgt	___fldiv@aexp^0,c
  8832  002408  EF08  F012         	goto	u4121
  8833  00240C  EF0A  F012         	goto	u4120
  8834  002410                     u4121:
  8835  002410  EFCA  F011         	goto	l4149
  8836  002414                     u4120:
  8837  002414  5010               	movf	___fldiv@rem^0,w,c
  8838  002416  1011               	iorwf	(___fldiv@rem+1)^0,w,c
  8839  002418  1012               	iorwf	(___fldiv@rem+2)^0,w,c
  8840  00241A  1013               	iorwf	(___fldiv@rem+3)^0,w,c
  8841  00241C  B4D8               	btfsc	status,2,c
  8842  00241E  EF13  F012         	goto	u4131
  8843  002422  EF15  F012         	goto	u4130
  8844  002426                     u4131:
  8845  002426  EF2D  F012         	goto	l4175
  8846  00242A                     u4130:
  8847  00242A  8017               	bsf	___fldiv@grs^0,0,c
  8848  00242C  EF2D  F012         	goto	l4175
  8849  002430                     l4169:
  8850  002430  90D8               	bcf	status,0,c
  8851  002432  3604               	rlcf	___fldiv@b^0,f,c
  8852  002434  3605               	rlcf	(___fldiv@b+1)^0,f,c
  8853  002436  3606               	rlcf	(___fldiv@b+2)^0,f,c
  8854  002438  3607               	rlcf	(___fldiv@b+3)^0,f,c
  8855  00243A  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  8856  00243C  EF22  F012         	goto	u4141
  8857  002440  EF24  F012         	goto	u4140
  8858  002444                     u4141:
  8859  002444  EF25  F012         	goto	l1352
  8860  002448                     u4140:
  8861  002448  8004               	bsf	___fldiv@b^0,0,c
  8862  00244A                     l1352:
  8863  00244A  90D8               	bcf	status,0,c
  8864  00244C  3617               	rlcf	___fldiv@grs^0,f,c
  8865  00244E  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  8866  002450  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  8867  002452  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  8868  002454  0615               	decf	___fldiv@new_exp^0,f,c
  8869  002456  A0D8               	btfss	status,0,c
  8870  002458  0616               	decf	(___fldiv@new_exp+1)^0,f,c
  8871  00245A                     l4175:
  8872  00245A  AE06               	btfss	(___fldiv@b+2)^0,7,c
  8873  00245C  EF32  F012         	goto	u4151
  8874  002460  EF34  F012         	goto	u4150
  8875  002464                     u4151:
  8876  002464  EF18  F012         	goto	l4169
  8877  002468                     u4150:
  8878  002468  0E00               	movlw	0
  8879  00246A  6E1C               	movwf	___fldiv@aexp^0,c
  8880  00246C  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  8881  00246E  EF3B  F012         	goto	u4161
  8882  002472  EF3D  F012         	goto	u4160
  8883  002476                     u4161:
  8884  002476  EF61  F012         	goto	l1354
  8885  00247A                     u4160:
  8886  00247A  0EFF               	movlw	255
  8887  00247C  1417               	andwf	___fldiv@grs^0,w,c
  8888  00247E  6E0C               	movwf	??___fldiv^0,c
  8889  002480  0EFF               	movlw	255
  8890  002482  1418               	andwf	(___fldiv@grs+1)^0,w,c
  8891  002484  6E0D               	movwf	(??___fldiv+1)^0,c
  8892  002486  0EFF               	movlw	255
  8893  002488  1419               	andwf	(___fldiv@grs+2)^0,w,c
  8894  00248A  6E0E               	movwf	(??___fldiv+2)^0,c
  8895  00248C  0E7F               	movlw	127
  8896  00248E  141A               	andwf	(___fldiv@grs+3)^0,w,c
  8897  002490  6E0F               	movwf	(??___fldiv+3)^0,c
  8898  002492  500C               	movf	??___fldiv^0,w,c
  8899  002494  100D               	iorwf	(??___fldiv+1)^0,w,c
  8900  002496  100E               	iorwf	(??___fldiv+2)^0,w,c
  8901  002498  100F               	iorwf	(??___fldiv+3)^0,w,c
  8902  00249A  B4D8               	btfsc	status,2,c
  8903  00249C  EF52  F012         	goto	u4171
  8904  0024A0  EF54  F012         	goto	u4170
  8905  0024A4                     u4171:
  8906  0024A4  EF58  F012         	goto	l1355
  8907  0024A8                     u4170:
  8908  0024A8                     l4183:
  8909  0024A8  0E01               	movlw	1
  8910  0024AA  6E1C               	movwf	___fldiv@aexp^0,c
  8911  0024AC  EF61  F012         	goto	l1354
  8912  0024B0                     l1355:
  8913  0024B0  A004               	btfss	___fldiv@b^0,0,c
  8914  0024B2  EF5D  F012         	goto	u4181
  8915  0024B6  EF5F  F012         	goto	u4180
  8916  0024BA                     u4181:
  8917  0024BA  EF61  F012         	goto	l1354
  8918  0024BE                     u4180:
  8919  0024BE  EF54  F012         	goto	l4183
  8920  0024C2                     l1354:
  8921  0024C2  501C               	movf	___fldiv@aexp^0,w,c
  8922  0024C4  B4D8               	btfsc	status,2,c
  8923  0024C6  EF67  F012         	goto	u4191
  8924  0024CA  EF69  F012         	goto	u4190
  8925  0024CE                     u4191:
  8926  0024CE  EF8D  F012         	goto	l4195
  8927  0024D2                     u4190:
  8928  0024D2  0E01               	movlw	1
  8929  0024D4  2604               	addwf	___fldiv@b^0,f,c
  8930  0024D6  0E00               	movlw	0
  8931  0024D8  2205               	addwfc	(___fldiv@b+1)^0,f,c
  8932  0024DA  2206               	addwfc	(___fldiv@b+2)^0,f,c
  8933  0024DC  2207               	addwfc	(___fldiv@b+3)^0,f,c
  8934  0024DE  A007               	btfss	(___fldiv@b+3)^0,0,c
  8935  0024E0  EF74  F012         	goto	u4201
  8936  0024E4  EF76  F012         	goto	u4200
  8937  0024E8                     u4201:
  8938  0024E8  EF8D  F012         	goto	l4195
  8939  0024EC                     u4200:
  8940  0024EC  C004  F00C         	movff	___fldiv@b,??___fldiv
  8941  0024F0  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
  8942  0024F4  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
  8943  0024F8  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
  8944  0024FC  340F               	rlcf	(??___fldiv+3)^0,w,c
  8945  0024FE  320F               	rrcf	(??___fldiv+3)^0,f,c
  8946  002500  320E               	rrcf	(??___fldiv+2)^0,f,c
  8947  002502  320D               	rrcf	(??___fldiv+1)^0,f,c
  8948  002504  320C               	rrcf	??___fldiv^0,f,c
  8949  002506  C00C  F004         	movff	??___fldiv,___fldiv@b
  8950  00250A  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
  8951  00250E  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
  8952  002512  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
  8953  002516  4A15               	infsnz	___fldiv@new_exp^0,f,c
  8954  002518  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
  8955  00251A                     l4195:
  8956  00251A  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8957  00251C  EF98  F012         	goto	u4211
  8958  002520  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  8959  002522  E108               	bnz	u4210
  8960  002524  2815               	incf	___fldiv@new_exp^0,w,c
  8961  002526  A0D8               	btfss	status,0,c
  8962  002528  EF98  F012         	goto	u4211
  8963  00252C  EF9A  F012         	goto	u4210
  8964  002530                     u4211:
  8965  002530  EFA5  F012         	goto	l4199
  8966  002534                     u4210:
  8967  002534  0E00               	movlw	0
  8968  002536  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  8969  002538  6815               	setf	___fldiv@new_exp^0,c
  8970  00253A  0E00               	movlw	0
  8971  00253C  6E04               	movwf	___fldiv@b^0,c
  8972  00253E  0E00               	movlw	0
  8973  002540  6E05               	movwf	(___fldiv@b+1)^0,c
  8974  002542  0E00               	movlw	0
  8975  002544  6E06               	movwf	(___fldiv@b+2)^0,c
  8976  002546  0E00               	movlw	0
  8977  002548  6E07               	movwf	(___fldiv@b+3)^0,c
  8978  00254A                     l4199:
  8979  00254A  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8980  00254C  EFB2  F012         	goto	u4220
  8981  002550  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  8982  002552  E106               	bnz	u4221
  8983  002554  0415               	decf	___fldiv@new_exp^0,w,c
  8984  002556  B0D8               	btfsc	status,0,c
  8985  002558  EFB0  F012         	goto	u4221
  8986  00255C  EFB2  F012         	goto	u4220
  8987  002560                     u4221:
  8988  002560  EFC0  F012         	goto	l4203
  8989  002564                     u4220:
  8990  002564  0E00               	movlw	0
  8991  002566  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  8992  002568  0E00               	movlw	0
  8993  00256A  6E15               	movwf	___fldiv@new_exp^0,c
  8994  00256C  0E00               	movlw	0
  8995  00256E  6E04               	movwf	___fldiv@b^0,c
  8996  002570  0E00               	movlw	0
  8997  002572  6E05               	movwf	(___fldiv@b+1)^0,c
  8998  002574  0E00               	movlw	0
  8999  002576  6E06               	movwf	(___fldiv@b+2)^0,c
  9000  002578  0E00               	movlw	0
  9001  00257A  6E07               	movwf	(___fldiv@b+3)^0,c
  9002  00257C  0E00               	movlw	0
  9003  00257E  6E14               	movwf	___fldiv@sign^0,c
  9004  002580                     l4203:
  9005  002580  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
  9006  002584  A01B               	btfss	___fldiv@bexp^0,0,c
  9007  002586  EFC7  F012         	goto	u4231
  9008  00258A  EFC9  F012         	goto	u4230
  9009  00258E                     u4231:
  9010  00258E  EFCC  F012         	goto	l4209
  9011  002592                     u4230:
  9012  002592  8E06               	bsf	(___fldiv@b+2)^0,7,c
  9013  002594  EFCD  F012         	goto	l4211
  9014  002598                     l4209:
  9015  002598  9E06               	bcf	(___fldiv@b+2)^0,7,c
  9016  00259A                     l4211:
  9017  00259A  90D8               	bcf	status,0,c
  9018  00259C  301B               	rrcf	___fldiv@bexp^0,w,c
  9019  00259E  6E07               	movwf	(___fldiv@b+3)^0,c
  9020  0025A0  EF83  F011         	goto	l4125
  9021  0025A4                     l1341:
  9022  0025A4  0012               	return		;funcret
  9023  0025A6                     __end_of___fldiv:
  9024                           	opt callstack 0
  9025                           
  9026 ;; *************** function ___xxtofl *****************
  9027 ;; Defined at:
  9028 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  sign            1    wreg     unsigned char 
  9031 ;;  val             4    3[COMRAM] long 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  sign            1   11[COMRAM] unsigned char 
  9034 ;;  arg             4   13[COMRAM] unsigned long 
  9035 ;;  exp             1   12[COMRAM] unsigned char 
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  4    3[COMRAM] unsigned char 
  9038 ;; Registers used:
  9039 ;;		wreg, status,2, status,0
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9045 ;;      Params:         4       0       0       0       0       0       0       0       0
  9046 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9047 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9048 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9049 ;;Total ram usage:       14 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:    2
  9052 ;; This function calls:
  9053 ;;		Nothing
  9054 ;; This function is called by:
  9055 ;;		_my_vprintf
  9056 ;;		_ftoa_sci
  9057 ;;		_ftoa
  9058 ;; This function uses a non-reentrant model
  9059 ;;
  9060                           
  9061                           	psect	text25
  9062  0038AE                     __ptext25:
  9063                           	opt callstack 0
  9064  0038AE                     ___xxtofl:
  9065                           	opt callstack 26
  9066                           
  9067                           ;incstack = 0
  9068                           ;___xxtofl@sign stored from wreg
  9069  0038AE  6E0C               	movwf	___xxtofl@sign^0,c
  9070  0038B0  500C               	movf	___xxtofl@sign^0,w,c
  9071  0038B2  B4D8               	btfsc	status,2,c
  9072  0038B4  EF5E  F01C         	goto	u4871
  9073  0038B8  EF60  F01C         	goto	u4870
  9074  0038BC                     u4871:
  9075  0038BC  EF82  F01C         	goto	l1414
  9076  0038C0                     u4870:
  9077  0038C0  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  9078  0038C2  EF67  F01C         	goto	u4880
  9079  0038C6  EF65  F01C         	goto	u4881
  9080  0038CA                     u4881:
  9081  0038CA  EF82  F01C         	goto	l1414
  9082  0038CE                     u4880:
  9083  0038CE  C004  F008         	movff	___xxtofl@val,??___xxtofl
  9084  0038D2  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  9085  0038D6  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  9086  0038DA  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  9087  0038DE  1E08               	comf	??___xxtofl^0,f,c
  9088  0038E0  1E09               	comf	(??___xxtofl+1)^0,f,c
  9089  0038E2  1E0A               	comf	(??___xxtofl+2)^0,f,c
  9090  0038E4  1E0B               	comf	(??___xxtofl+3)^0,f,c
  9091  0038E6  2A08               	incf	??___xxtofl^0,f,c
  9092  0038E8  0E00               	movlw	0
  9093  0038EA  2209               	addwfc	(??___xxtofl+1)^0,f,c
  9094  0038EC  220A               	addwfc	(??___xxtofl+2)^0,f,c
  9095  0038EE  220B               	addwfc	(??___xxtofl+3)^0,f,c
  9096  0038F0  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  9097  0038F4  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  9098  0038F8  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  9099  0038FC  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  9100  003900  EF8A  F01C         	goto	l4629
  9101  003904                     l1414:
  9102  003904  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  9103  003908  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9104  00390C  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9105  003910  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9106  003914                     l4629:
  9107  003914  5004               	movf	___xxtofl@val^0,w,c
  9108  003916  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  9109  003918  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  9110  00391A  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  9111  00391C  A4D8               	btfss	status,2,c
  9112  00391E  EF93  F01C         	goto	u4891
  9113  003922  EF95  F01C         	goto	u4890
  9114  003926                     u4891:
  9115  003926  EF9F  F01C         	goto	l4635
  9116  00392A                     u4890:
  9117  00392A  0E00               	movlw	0
  9118  00392C  6E04               	movwf	?___xxtofl^0,c
  9119  00392E  0E00               	movlw	0
  9120  003930  6E05               	movwf	(?___xxtofl+1)^0,c
  9121  003932  0E00               	movlw	0
  9122  003934  6E06               	movwf	(?___xxtofl+2)^0,c
  9123  003936  0E00               	movlw	0
  9124  003938  6E07               	movwf	(?___xxtofl+3)^0,c
  9125  00393A  EF30  F01D         	goto	l1417
  9126  00393E                     l4635:
  9127  00393E  0E96               	movlw	150
  9128  003940  6E0D               	movwf	___xxtofl@exp^0,c
  9129  003942  EFA9  F01C         	goto	l4639
  9130  003946                     l4637:
  9131  003946  2A0D               	incf	___xxtofl@exp^0,f,c
  9132  003948  90D8               	bcf	status,0,c
  9133  00394A  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  9134  00394C  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  9135  00394E  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  9136  003950  320E               	rrcf	___xxtofl@arg^0,f,c
  9137  003952                     l4639:
  9138  003952  0E00               	movlw	0
  9139  003954  140E               	andwf	___xxtofl@arg^0,w,c
  9140  003956  6E08               	movwf	??___xxtofl^0,c
  9141  003958  0E00               	movlw	0
  9142  00395A  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  9143  00395C  6E09               	movwf	(??___xxtofl+1)^0,c
  9144  00395E  0E00               	movlw	0
  9145  003960  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  9146  003962  6E0A               	movwf	(??___xxtofl+2)^0,c
  9147  003964  0EFE               	movlw	254
  9148  003966  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  9149  003968  6E0B               	movwf	(??___xxtofl+3)^0,c
  9150  00396A  5008               	movf	??___xxtofl^0,w,c
  9151  00396C  1009               	iorwf	(??___xxtofl+1)^0,w,c
  9152  00396E  100A               	iorwf	(??___xxtofl+2)^0,w,c
  9153  003970  100B               	iorwf	(??___xxtofl+3)^0,w,c
  9154  003972  A4D8               	btfss	status,2,c
  9155  003974  EFBE  F01C         	goto	u4901
  9156  003978  EFC0  F01C         	goto	u4900
  9157  00397C                     u4901:
  9158  00397C  EFA3  F01C         	goto	l4637
  9159  003980                     u4900:
  9160  003980  EFCE  F01C         	goto	l1421
  9161  003984                     l4641:
  9162  003984  2A0D               	incf	___xxtofl@exp^0,f,c
  9163  003986  0E01               	movlw	1
  9164  003988  260E               	addwf	___xxtofl@arg^0,f,c
  9165  00398A  0E00               	movlw	0
  9166  00398C  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  9167  00398E  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  9168  003990  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  9169  003992  90D8               	bcf	status,0,c
  9170  003994  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  9171  003996  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  9172  003998  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  9173  00399A  320E               	rrcf	___xxtofl@arg^0,f,c
  9174  00399C                     l1421:
  9175  00399C  0E00               	movlw	0
  9176  00399E  140E               	andwf	___xxtofl@arg^0,w,c
  9177  0039A0  6E08               	movwf	??___xxtofl^0,c
  9178  0039A2  0E00               	movlw	0
  9179  0039A4  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  9180  0039A6  6E09               	movwf	(??___xxtofl+1)^0,c
  9181  0039A8  0E00               	movlw	0
  9182  0039AA  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  9183  0039AC  6E0A               	movwf	(??___xxtofl+2)^0,c
  9184  0039AE  0EFF               	movlw	255
  9185  0039B0  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  9186  0039B2  6E0B               	movwf	(??___xxtofl+3)^0,c
  9187  0039B4  5008               	movf	??___xxtofl^0,w,c
  9188  0039B6  1009               	iorwf	(??___xxtofl+1)^0,w,c
  9189  0039B8  100A               	iorwf	(??___xxtofl+2)^0,w,c
  9190  0039BA  100B               	iorwf	(??___xxtofl+3)^0,w,c
  9191  0039BC  A4D8               	btfss	status,2,c
  9192  0039BE  EFE3  F01C         	goto	u4911
  9193  0039C2  EFE5  F01C         	goto	u4910
  9194  0039C6                     u4911:
  9195  0039C6  EFC2  F01C         	goto	l4641
  9196  0039CA                     u4910:
  9197  0039CA  EFED  F01C         	goto	l4649
  9198  0039CE                     l4647:
  9199  0039CE  060D               	decf	___xxtofl@exp^0,f,c
  9200  0039D0  90D8               	bcf	status,0,c
  9201  0039D2  360E               	rlcf	___xxtofl@arg^0,f,c
  9202  0039D4  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  9203  0039D6  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  9204  0039D8  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  9205  0039DA                     l4649:
  9206  0039DA  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  9207  0039DC  EFF2  F01C         	goto	u4921
  9208  0039E0  EFF4  F01C         	goto	u4920
  9209  0039E4                     u4921:
  9210  0039E4  EFFC  F01C         	goto	l1428
  9211  0039E8                     u4920:
  9212  0039E8  0E02               	movlw	2
  9213  0039EA  600D               	cpfslt	___xxtofl@exp^0,c
  9214  0039EC  EFFA  F01C         	goto	u4931
  9215  0039F0  EFFC  F01C         	goto	u4930
  9216  0039F4                     u4931:
  9217  0039F4  EFE7  F01C         	goto	l4647
  9218  0039F8                     u4930:
  9219  0039F8                     l1428:
  9220  0039F8  B00D               	btfsc	___xxtofl@exp^0,0,c
  9221  0039FA  EF01  F01D         	goto	u4941
  9222  0039FE  EF03  F01D         	goto	u4940
  9223  003A02                     u4941:
  9224  003A02  EF04  F01D         	goto	l4655
  9225  003A06                     u4940:
  9226  003A06  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  9227  003A08                     l4655:
  9228  003A08  90D8               	bcf	status,0,c
  9229  003A0A  320D               	rrcf	___xxtofl@exp^0,f,c
  9230  003A0C  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  9231  003A10  6A09               	clrf	(??___xxtofl+1)^0,c
  9232  003A12  6A0A               	clrf	(??___xxtofl+2)^0,c
  9233  003A14  6A0B               	clrf	(??___xxtofl+3)^0,c
  9234  003A16  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  9235  003A1A  6A0A               	clrf	(??___xxtofl+2)^0,c
  9236  003A1C  6A09               	clrf	(??___xxtofl+1)^0,c
  9237  003A1E  6A08               	clrf	??___xxtofl^0,c
  9238  003A20  5008               	movf	??___xxtofl^0,w,c
  9239  003A22  120E               	iorwf	___xxtofl@arg^0,f,c
  9240  003A24  5009               	movf	(??___xxtofl+1)^0,w,c
  9241  003A26  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  9242  003A28  500A               	movf	(??___xxtofl+2)^0,w,c
  9243  003A2A  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  9244  003A2C  500B               	movf	(??___xxtofl+3)^0,w,c
  9245  003A2E  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  9246  003A30  500C               	movf	___xxtofl@sign^0,w,c
  9247  003A32  B4D8               	btfsc	status,2,c
  9248  003A34  EF1E  F01D         	goto	u4951
  9249  003A38  EF20  F01D         	goto	u4950
  9250  003A3C                     u4951:
  9251  003A3C  EF28  F01D         	goto	l4665
  9252  003A40                     u4950:
  9253  003A40  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  9254  003A42  EF27  F01D         	goto	u4960
  9255  003A46  EF25  F01D         	goto	u4961
  9256  003A4A                     u4961:
  9257  003A4A  EF28  F01D         	goto	l4665
  9258  003A4E                     u4960:
  9259  003A4E  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  9260  003A50                     l4665:
  9261  003A50  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  9262  003A54  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  9263  003A58  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  9264  003A5C  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  9265  003A60                     l1417:
  9266  003A60  0012               	return		;funcret
  9267  003A62                     __end_of___xxtofl:
  9268                           	opt callstack 0
  9269                           
  9270 ;; *************** function ___fltol *****************
  9271 ;; Defined at:
  9272 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;  f1              4   28[COMRAM] unsigned char 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;  exp1            1   37[COMRAM] unsigned char 
  9277 ;;  sign1           1   36[COMRAM] unsigned char 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  4   28[COMRAM] long 
  9280 ;; Registers used:
  9281 ;;		wreg, status,2, status,0
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9287 ;;      Params:         4       0       0       0       0       0       0       0       0
  9288 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9289 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9290 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9291 ;;Total ram usage:       10 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    2
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_ftoa_sci
  9298 ;;		_ftoa
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text26
  9303  0041EC                     __ptext26:
  9304                           	opt callstack 0
  9305  0041EC                     ___fltol:
  9306                           	opt callstack 26
  9307  0041EC  341F               	rlcf	(___fltol@f1+2)^0,w,c
  9308  0041EE  3420               	rlcf	(___fltol@f1+3)^0,w,c
  9309  0041F0  6E26               	movwf	___fltol@exp1^0,c
  9310  0041F2  5026               	movf	___fltol@exp1^0,w,c
  9311  0041F4  A4D8               	btfss	status,2,c
  9312  0041F6  EFFF  F020         	goto	u4801
  9313  0041FA  EF01  F021         	goto	u4800
  9314  0041FE                     u4801:
  9315  0041FE  EF0B  F021         	goto	l4585
  9316  004202                     u4800:
  9317  004202                     l4581:
  9318  004202  0E00               	movlw	0
  9319  004204  6E1D               	movwf	?___fltol^0,c
  9320  004206  0E00               	movlw	0
  9321  004208  6E1E               	movwf	(?___fltol+1)^0,c
  9322  00420A  0E00               	movlw	0
  9323  00420C  6E1F               	movwf	(?___fltol+2)^0,c
  9324  00420E  0E00               	movlw	0
  9325  004210  6E20               	movwf	(?___fltol+3)^0,c
  9326  004212  EF78  F021         	goto	l1056
  9327  004216                     l4585:
  9328  004216  C01D  F021         	movff	___fltol@f1,??___fltol
  9329  00421A  C01E  F022         	movff	___fltol@f1+1,??___fltol+1
  9330  00421E  C01F  F023         	movff	___fltol@f1+2,??___fltol+2
  9331  004222  C020  F024         	movff	___fltol@f1+3,??___fltol+3
  9332  004226  0E20               	movlw	32
  9333  004228  EF1B  F021         	goto	u4810
  9334  00422C                     u4815:
  9335  00422C  90D8               	bcf	status,0,c
  9336  00422E  3224               	rrcf	(??___fltol+3)^0,f,c
  9337  004230  3223               	rrcf	(??___fltol+2)^0,f,c
  9338  004232  3222               	rrcf	(??___fltol+1)^0,f,c
  9339  004234  3221               	rrcf	??___fltol^0,f,c
  9340  004236                     u4810:
  9341  004236  2EE8               	decfsz	wreg,f,c
  9342  004238  EF16  F021         	goto	u4815
  9343  00423C  5021               	movf	??___fltol^0,w,c
  9344  00423E  6E25               	movwf	___fltol@sign1^0,c
  9345  004240  8E1F               	bsf	(___fltol@f1+2)^0,7,c
  9346  004242  0EFF               	movlw	255
  9347  004244  161D               	andwf	___fltol@f1^0,f,c
  9348  004246  0EFF               	movlw	255
  9349  004248  161E               	andwf	(___fltol@f1+1)^0,f,c
  9350  00424A  0EFF               	movlw	255
  9351  00424C  161F               	andwf	(___fltol@f1+2)^0,f,c
  9352  00424E  0E00               	movlw	0
  9353  004250  1620               	andwf	(___fltol@f1+3)^0,f,c
  9354  004252  0E96               	movlw	150
  9355  004254  5E26               	subwf	___fltol@exp1^0,f,c
  9356  004256  BE26               	btfsc	___fltol@exp1^0,7,c
  9357  004258  EF32  F021         	goto	u4820
  9358  00425C  EF30  F021         	goto	u4821
  9359  004260                     u4821:
  9360  004260  EF48  F021         	goto	l4605
  9361  004264                     u4820:
  9362  004264  5026               	movf	___fltol@exp1^0,w,c
  9363  004266  0A80               	xorlw	128
  9364  004268  0F97               	addlw	151
  9365  00426A  B0D8               	btfsc	status,0,c
  9366  00426C  EF3A  F021         	goto	u4831
  9367  004270  EF3C  F021         	goto	u4830
  9368  004274                     u4831:
  9369  004274  EF3E  F021         	goto	l4601
  9370  004278                     u4830:
  9371  004278  EF01  F021         	goto	l4581
  9372  00427C                     l4601:
  9373  00427C  90D8               	bcf	status,0,c
  9374  00427E  3220               	rrcf	(___fltol@f1+3)^0,f,c
  9375  004280  321F               	rrcf	(___fltol@f1+2)^0,f,c
  9376  004282  321E               	rrcf	(___fltol@f1+1)^0,f,c
  9377  004284  321D               	rrcf	___fltol@f1^0,f,c
  9378  004286  3E26               	incfsz	___fltol@exp1^0,f,c
  9379  004288  EF3E  F021         	goto	l4601
  9380  00428C  EF60  F021         	goto	l4615
  9381  004290                     l4605:
  9382  004290  0E1F               	movlw	31
  9383  004292  6426               	cpfsgt	___fltol@exp1^0,c
  9384  004294  EF4E  F021         	goto	u4841
  9385  004298  EF50  F021         	goto	u4840
  9386  00429C                     u4841:
  9387  00429C  EF58  F021         	goto	l4613
  9388  0042A0                     u4840:
  9389  0042A0  EF01  F021         	goto	l4581
  9390  0042A4                     l4611:
  9391  0042A4  90D8               	bcf	status,0,c
  9392  0042A6  361D               	rlcf	___fltol@f1^0,f,c
  9393  0042A8  361E               	rlcf	(___fltol@f1+1)^0,f,c
  9394  0042AA  361F               	rlcf	(___fltol@f1+2)^0,f,c
  9395  0042AC  3620               	rlcf	(___fltol@f1+3)^0,f,c
  9396  0042AE  0626               	decf	___fltol@exp1^0,f,c
  9397  0042B0                     l4613:
  9398  0042B0  5026               	movf	___fltol@exp1^0,w,c
  9399  0042B2  A4D8               	btfss	status,2,c
  9400  0042B4  EF5E  F021         	goto	u4851
  9401  0042B8  EF60  F021         	goto	u4850
  9402  0042BC                     u4851:
  9403  0042BC  EF52  F021         	goto	l4611
  9404  0042C0                     u4850:
  9405  0042C0                     l4615:
  9406  0042C0  5025               	movf	___fltol@sign1^0,w,c
  9407  0042C2  B4D8               	btfsc	status,2,c
  9408  0042C4  EF66  F021         	goto	u4861
  9409  0042C8  EF68  F021         	goto	u4860
  9410  0042CC                     u4861:
  9411  0042CC  EF70  F021         	goto	l4619
  9412  0042D0                     u4860:
  9413  0042D0  1E20               	comf	(___fltol@f1+3)^0,f,c
  9414  0042D2  1E1F               	comf	(___fltol@f1+2)^0,f,c
  9415  0042D4  1E1E               	comf	(___fltol@f1+1)^0,f,c
  9416  0042D6  6C1D               	negf	___fltol@f1^0,c
  9417  0042D8  0E00               	movlw	0
  9418  0042DA  221E               	addwfc	(___fltol@f1+1)^0,f,c
  9419  0042DC  221F               	addwfc	(___fltol@f1+2)^0,f,c
  9420  0042DE  2220               	addwfc	(___fltol@f1+3)^0,f,c
  9421  0042E0                     l4619:
  9422  0042E0  C01D  F01D         	movff	___fltol@f1,?___fltol
  9423  0042E4  C01E  F01E         	movff	___fltol@f1+1,?___fltol+1
  9424  0042E8  C01F  F01F         	movff	___fltol@f1+2,?___fltol+2
  9425  0042EC  C020  F020         	movff	___fltol@f1+3,?___fltol+3
  9426  0042F0                     l1056:
  9427  0042F0  0012               	return		;funcret
  9428  0042F2                     __end_of___fltol:
  9429                           	opt callstack 0
  9430                           
  9431 ;; *************** function ___flsub *****************
  9432 ;; Defined at:
  9433 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  b               4   28[COMRAM] long 
  9436 ;;  a               4   32[COMRAM] long 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  4   28[COMRAM] long 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0, cstack
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9448 ;;      Params:         8       0       0       0       0       0       0       0       0
  9449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9451 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9452 ;;Total ram usage:        8 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    3
  9455 ;; This function calls:
  9456 ;;		___fladd
  9457 ;; This function is called by:
  9458 ;;		_ftoa_sci
  9459 ;;		_ftoa
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text27
  9464  004E18                     __ptext27:
  9465                           	opt callstack 0
  9466  004E18                     ___flsub:
  9467                           	opt callstack 25
  9468  004E18  0E00               	movlw	0
  9469  004E1A  1A21               	xorwf	___flsub@a^0,f,c
  9470  004E1C  0E00               	movlw	0
  9471  004E1E  1A22               	xorwf	(___flsub@a+1)^0,f,c
  9472  004E20  0E00               	movlw	0
  9473  004E22  1A23               	xorwf	(___flsub@a+2)^0,f,c
  9474  004E24  0E80               	movlw	128
  9475  004E26  1A24               	xorwf	(___flsub@a+3)^0,f,c
  9476  004E28  C01D  F004         	movff	___flsub@b,___fladd@b
  9477  004E2C  C01E  F005         	movff	___flsub@b+1,___fladd@b+1
  9478  004E30  C01F  F006         	movff	___flsub@b+2,___fladd@b+2
  9479  004E34  C020  F007         	movff	___flsub@b+3,___fladd@b+3
  9480  004E38  C021  F008         	movff	___flsub@a,___fladd@a
  9481  004E3C  C022  F009         	movff	___flsub@a+1,___fladd@a+1
  9482  004E40  C023  F00A         	movff	___flsub@a+2,___fladd@a+2
  9483  004E44  C024  F00B         	movff	___flsub@a+3,___fladd@a+3
  9484  004E48  EC91  F00C         	call	___fladd	;wreg free
  9485  004E4C  C004  F01D         	movff	?___fladd,?___flsub
  9486  004E50  C005  F01E         	movff	?___fladd+1,?___flsub+1
  9487  004E54  C006  F01F         	movff	?___fladd+2,?___flsub+2
  9488  004E58  C007  F020         	movff	?___fladd+3,?___flsub+3
  9489  004E5C  0012               	return		;funcret
  9490  004E5E                     __end_of___flsub:
  9491                           	opt callstack 0
  9492                           
  9493 ;; *************** function ___fladd *****************
  9494 ;; Defined at:
  9495 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  b               4    3[COMRAM] long 
  9498 ;;  a               4    7[COMRAM] long 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;  grs             1   18[COMRAM] unsigned char 
  9501 ;;  bexp            1   17[COMRAM] unsigned char 
  9502 ;;  aexp            1   16[COMRAM] unsigned char 
  9503 ;;  signs           1   15[COMRAM] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  4    3[COMRAM] unsigned char 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9513 ;;      Params:         8       0       0       0       0       0       0       0       0
  9514 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9515 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9516 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9517 ;;Total ram usage:       16 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    2
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		___flsub
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           	psect	text28
  9528  001922                     __ptext28:
  9529                           	opt callstack 0
  9530  001922                     ___fladd:
  9531                           	opt callstack 25
  9532  001922  5007               	movf	(___fladd@b+3)^0,w,c
  9533  001924  0B80               	andlw	128
  9534  001926  6E10               	movwf	___fladd@signs^0,c
  9535  001928  5007               	movf	(___fladd@b+3)^0,w,c
  9536  00192A  2407               	addwf	(___fladd@b+3)^0,w,c
  9537  00192C  6E12               	movwf	___fladd@bexp^0,c
  9538  00192E  AE06               	btfss	(___fladd@b+2)^0,7,c
  9539  001930  EF9C  F00C         	goto	u3621
  9540  001934  EF9E  F00C         	goto	u3620
  9541  001938                     u3621:
  9542  001938  EF9F  F00C         	goto	l3885
  9543  00193C                     u3620:
  9544  00193C  8012               	bsf	___fladd@bexp^0,0,c
  9545  00193E                     l3885:
  9546  00193E  5012               	movf	___fladd@bexp^0,w,c
  9547  001940  B4D8               	btfsc	status,2,c
  9548  001942  EFA5  F00C         	goto	u3631
  9549  001946  EFA7  F00C         	goto	u3630
  9550  00194A                     u3631:
  9551  00194A  EFBC  F00C         	goto	l3895
  9552  00194E                     u3630:
  9553  00194E  2812               	incf	___fladd@bexp^0,w,c
  9554  001950  A4D8               	btfss	status,2,c
  9555  001952  EFAD  F00C         	goto	u3641
  9556  001956  EFAF  F00C         	goto	u3640
  9557  00195A                     u3641:
  9558  00195A  EFB7  F00C         	goto	l3891
  9559  00195E                     u3640:
  9560  00195E  0E00               	movlw	0
  9561  001960  6E04               	movwf	___fladd@b^0,c
  9562  001962  0E00               	movlw	0
  9563  001964  6E05               	movwf	(___fladd@b+1)^0,c
  9564  001966  0E00               	movlw	0
  9565  001968  6E06               	movwf	(___fladd@b+2)^0,c
  9566  00196A  0E00               	movlw	0
  9567  00196C  6E07               	movwf	(___fladd@b+3)^0,c
  9568  00196E                     l3891:
  9569  00196E  8E06               	bsf	(___fladd@b+2)^0,7,c
  9570  001970  0E00               	movlw	0
  9571  001972  6E07               	movwf	(___fladd@b+3)^0,c
  9572  001974  EFC4  F00C         	goto	l3897
  9573  001978                     l3895:
  9574  001978  0E00               	movlw	0
  9575  00197A  6E04               	movwf	___fladd@b^0,c
  9576  00197C  0E00               	movlw	0
  9577  00197E  6E05               	movwf	(___fladd@b+1)^0,c
  9578  001980  0E00               	movlw	0
  9579  001982  6E06               	movwf	(___fladd@b+2)^0,c
  9580  001984  0E00               	movlw	0
  9581  001986  6E07               	movwf	(___fladd@b+3)^0,c
  9582  001988                     l3897:
  9583  001988  500B               	movf	(___fladd@a+3)^0,w,c
  9584  00198A  0B80               	andlw	128
  9585  00198C  6E11               	movwf	___fladd@aexp^0,c
  9586  00198E  5010               	movf	___fladd@signs^0,w,c
  9587  001990  1811               	xorwf	___fladd@aexp^0,w,c
  9588  001992  B4D8               	btfsc	status,2,c
  9589  001994  EFCE  F00C         	goto	u3651
  9590  001998  EFD0  F00C         	goto	u3650
  9591  00199C                     u3651:
  9592  00199C  EFD1  F00C         	goto	l3903
  9593  0019A0                     u3650:
  9594  0019A0  8C10               	bsf	___fladd@signs^0,6,c
  9595  0019A2                     l3903:
  9596  0019A2  500B               	movf	(___fladd@a+3)^0,w,c
  9597  0019A4  240B               	addwf	(___fladd@a+3)^0,w,c
  9598  0019A6  6E11               	movwf	___fladd@aexp^0,c
  9599  0019A8  AE0A               	btfss	(___fladd@a+2)^0,7,c
  9600  0019AA  EFD9  F00C         	goto	u3661
  9601  0019AE  EFDB  F00C         	goto	u3660
  9602  0019B2                     u3661:
  9603  0019B2  EFDC  F00C         	goto	l3909
  9604  0019B6                     u3660:
  9605  0019B6  8011               	bsf	___fladd@aexp^0,0,c
  9606  0019B8                     l3909:
  9607  0019B8  5011               	movf	___fladd@aexp^0,w,c
  9608  0019BA  B4D8               	btfsc	status,2,c
  9609  0019BC  EFE2  F00C         	goto	u3671
  9610  0019C0  EFE4  F00C         	goto	u3670
  9611  0019C4                     u3671:
  9612  0019C4  EFF9  F00C         	goto	l3919
  9613  0019C8                     u3670:
  9614  0019C8  2811               	incf	___fladd@aexp^0,w,c
  9615  0019CA  A4D8               	btfss	status,2,c
  9616  0019CC  EFEA  F00C         	goto	u3681
  9617  0019D0  EFEC  F00C         	goto	u3680
  9618  0019D4                     u3681:
  9619  0019D4  EFF4  F00C         	goto	l3915
  9620  0019D8                     u3680:
  9621  0019D8  0E00               	movlw	0
  9622  0019DA  6E08               	movwf	___fladd@a^0,c
  9623  0019DC  0E00               	movlw	0
  9624  0019DE  6E09               	movwf	(___fladd@a+1)^0,c
  9625  0019E0  0E00               	movlw	0
  9626  0019E2  6E0A               	movwf	(___fladd@a+2)^0,c
  9627  0019E4  0E00               	movlw	0
  9628  0019E6  6E0B               	movwf	(___fladd@a+3)^0,c
  9629  0019E8                     l3915:
  9630  0019E8  8E0A               	bsf	(___fladd@a+2)^0,7,c
  9631  0019EA  0E00               	movlw	0
  9632  0019EC  6E0B               	movwf	(___fladd@a+3)^0,c
  9633  0019EE  EF01  F00D         	goto	l3921
  9634  0019F2                     l3919:
  9635  0019F2  0E00               	movlw	0
  9636  0019F4  6E08               	movwf	___fladd@a^0,c
  9637  0019F6  0E00               	movlw	0
  9638  0019F8  6E09               	movwf	(___fladd@a+1)^0,c
  9639  0019FA  0E00               	movlw	0
  9640  0019FC  6E0A               	movwf	(___fladd@a+2)^0,c
  9641  0019FE  0E00               	movlw	0
  9642  001A00  6E0B               	movwf	(___fladd@a+3)^0,c
  9643  001A02                     l3921:
  9644  001A02  5012               	movf	___fladd@bexp^0,w,c
  9645  001A04  5C11               	subwf	___fladd@aexp^0,w,c
  9646  001A06  B0D8               	btfsc	status,0,c
  9647  001A08  EF08  F00D         	goto	u3691
  9648  001A0C  EF0A  F00D         	goto	u3690
  9649  001A10                     u3691:
  9650  001A10  EF31  F00D         	goto	l3957
  9651  001A14                     u3690:
  9652  001A14  AC10               	btfss	___fladd@signs^0,6,c
  9653  001A16  EF0F  F00D         	goto	u3701
  9654  001A1A  EF11  F00D         	goto	u3700
  9655  001A1E                     u3701:
  9656  001A1E  EF13  F00D         	goto	l3927
  9657  001A22                     u3700:
  9658  001A22  0E80               	movlw	128
  9659  001A24  1A10               	xorwf	___fladd@signs^0,f,c
  9660  001A26                     l3927:
  9661  001A26  C012  F013         	movff	___fladd@bexp,___fladd@grs
  9662  001A2A  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  9663  001A2E  C013  F011         	movff	___fladd@grs,___fladd@aexp
  9664  001A32  C004  F013         	movff	___fladd@b,___fladd@grs
  9665  001A36  C008  F004         	movff	___fladd@a,___fladd@b
  9666  001A3A  C013  F008         	movff	___fladd@grs,___fladd@a
  9667  001A3E  C005  F013         	movff	___fladd@b+1,___fladd@grs
  9668  001A42  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  9669  001A46  C013  F009         	movff	___fladd@grs,___fladd@a+1
  9670  001A4A  C006  F013         	movff	___fladd@b+2,___fladd@grs
  9671  001A4E  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  9672  001A52  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  9673  001A56  C007  F013         	movff	___fladd@b+3,___fladd@grs
  9674  001A5A  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  9675  001A5E  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  9676  001A62                     l3957:
  9677  001A62  0E00               	movlw	0
  9678  001A64  6E13               	movwf	___fladd@grs^0,c
  9679  001A66  5012               	movf	___fladd@bexp^0,w,c
  9680  001A68  C011  F00C         	movff	___fladd@aexp,??___fladd
  9681  001A6C  6A0D               	clrf	(??___fladd+1)^0,c
  9682  001A6E  5E0C               	subwf	??___fladd^0,f,c
  9683  001A70  0E00               	movlw	0
  9684  001A72  5A0D               	subwfb	(??___fladd+1)^0,f,c
  9685  001A74  BE0D               	btfsc	(??___fladd+1)^0,7,c
  9686  001A76  EF46  F00D         	goto	u3711
  9687  001A7A  500D               	movf	(??___fladd+1)^0,w,c
  9688  001A7C  E109               	bnz	u3710
  9689  001A7E  0E1A               	movlw	26
  9690  001A80  5C0C               	subwf	??___fladd^0,w,c
  9691  001A82  A0D8               	btfss	status,0,c
  9692  001A84  EF46  F00D         	goto	u3711
  9693  001A88  EF48  F00D         	goto	u3710
  9694  001A8C                     u3711:
  9695  001A8C  EF7F  F00D         	goto	l1288
  9696  001A90                     u3710:
  9697  001A90  5004               	movf	___fladd@b^0,w,c
  9698  001A92  1005               	iorwf	(___fladd@b+1)^0,w,c
  9699  001A94  1006               	iorwf	(___fladd@b+2)^0,w,c
  9700  001A96  1007               	iorwf	(___fladd@b+3)^0,w,c
  9701  001A98  A4D8               	btfss	status,2,c
  9702  001A9A  EF51  F00D         	goto	u3721
  9703  001A9E  EF54  F00D         	goto	u3720
  9704  001AA2                     u3721:
  9705  001AA2  0E01               	movlw	1
  9706  001AA4  EF55  F00D         	goto	u3730
  9707  001AA8                     u3720:
  9708  001AA8  0E00               	movlw	0
  9709  001AAA                     u3730:
  9710  001AAA  6E13               	movwf	___fladd@grs^0,c
  9711  001AAC  0E00               	movlw	0
  9712  001AAE  6E04               	movwf	___fladd@b^0,c
  9713  001AB0  0E00               	movlw	0
  9714  001AB2  6E05               	movwf	(___fladd@b+1)^0,c
  9715  001AB4  0E00               	movlw	0
  9716  001AB6  6E06               	movwf	(___fladd@b+2)^0,c
  9717  001AB8  0E00               	movlw	0
  9718  001ABA  6E07               	movwf	(___fladd@b+3)^0,c
  9719  001ABC  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  9720  001AC0  EF88  F00D         	goto	l1287
  9721  001AC4                     l1289:
  9722  001AC4  A013               	btfss	___fladd@grs^0,0,c
  9723  001AC6  EF67  F00D         	goto	u3741
  9724  001ACA  EF69  F00D         	goto	u3740
  9725  001ACE                     u3741:
  9726  001ACE  EF6F  F00D         	goto	l3969
  9727  001AD2                     u3740:
  9728  001AD2  90D8               	bcf	status,0,c
  9729  001AD4  3013               	rrcf	___fladd@grs^0,w,c
  9730  001AD6  0901               	iorlw	1
  9731  001AD8  6E13               	movwf	___fladd@grs^0,c
  9732  001ADA  EF71  F00D         	goto	l3971
  9733  001ADE                     l3969:
  9734  001ADE  90D8               	bcf	status,0,c
  9735  001AE0  3213               	rrcf	___fladd@grs^0,f,c
  9736  001AE2                     l3971:
  9737  001AE2  A004               	btfss	___fladd@b^0,0,c
  9738  001AE4  EF76  F00D         	goto	u3751
  9739  001AE8  EF78  F00D         	goto	u3750
  9740  001AEC                     u3751:
  9741  001AEC  EF79  F00D         	goto	l3975
  9742  001AF0                     u3750:
  9743  001AF0  8E13               	bsf	___fladd@grs^0,7,c
  9744  001AF2                     l3975:
  9745  001AF2  3407               	rlcf	(___fladd@b+3)^0,w,c
  9746  001AF4  3207               	rrcf	(___fladd@b+3)^0,f,c
  9747  001AF6  3206               	rrcf	(___fladd@b+2)^0,f,c
  9748  001AF8  3205               	rrcf	(___fladd@b+1)^0,f,c
  9749  001AFA  3204               	rrcf	___fladd@b^0,f,c
  9750  001AFC  2A12               	incf	___fladd@bexp^0,f,c
  9751  001AFE                     l1288:
  9752  001AFE  5011               	movf	___fladd@aexp^0,w,c
  9753  001B00  5C12               	subwf	___fladd@bexp^0,w,c
  9754  001B02  A0D8               	btfss	status,0,c
  9755  001B04  EF86  F00D         	goto	u3761
  9756  001B08  EF88  F00D         	goto	u3760
  9757  001B0C                     u3761:
  9758  001B0C  EF62  F00D         	goto	l1289
  9759  001B10                     u3760:
  9760  001B10                     l1287:
  9761  001B10  BC10               	btfsc	___fladd@signs^0,6,c
  9762  001B12  EF8D  F00D         	goto	u3771
  9763  001B16  EF8F  F00D         	goto	u3770
  9764  001B1A                     u3771:
  9765  001B1A  EFCF  F00D         	goto	l4003
  9766  001B1E                     u3770:
  9767  001B1E  5012               	movf	___fladd@bexp^0,w,c
  9768  001B20  A4D8               	btfss	status,2,c
  9769  001B22  EF95  F00D         	goto	u3781
  9770  001B26  EF97  F00D         	goto	u3780
  9771  001B2A                     u3781:
  9772  001B2A  EFA1  F00D         	goto	l3985
  9773  001B2E                     u3780:
  9774  001B2E  0E00               	movlw	0
  9775  001B30  6E04               	movwf	?___fladd^0,c
  9776  001B32  0E00               	movlw	0
  9777  001B34  6E05               	movwf	(?___fladd+1)^0,c
  9778  001B36  0E00               	movlw	0
  9779  001B38  6E06               	movwf	(?___fladd+2)^0,c
  9780  001B3A  0E00               	movlw	0
  9781  001B3C  6E07               	movwf	(?___fladd+3)^0,c
  9782  001B3E  EFF0  F00E         	goto	l1296
  9783  001B42                     l3985:
  9784  001B42  5008               	movf	___fladd@a^0,w,c
  9785  001B44  2604               	addwf	___fladd@b^0,f,c
  9786  001B46  5009               	movf	(___fladd@a+1)^0,w,c
  9787  001B48  2205               	addwfc	(___fladd@b+1)^0,f,c
  9788  001B4A  500A               	movf	(___fladd@a+2)^0,w,c
  9789  001B4C  2206               	addwfc	(___fladd@b+2)^0,f,c
  9790  001B4E  500B               	movf	(___fladd@a+3)^0,w,c
  9791  001B50  2207               	addwfc	(___fladd@b+3)^0,f,c
  9792  001B52  A007               	btfss	(___fladd@b+3)^0,0,c
  9793  001B54  EFAE  F00D         	goto	u3791
  9794  001B58  EFB0  F00D         	goto	u3790
  9795  001B5C                     u3791:
  9796  001B5C  EF5C  F00E         	goto	l4039
  9797  001B60                     u3790:
  9798  001B60  A013               	btfss	___fladd@grs^0,0,c
  9799  001B62  EFB5  F00D         	goto	u3801
  9800  001B66  EFB7  F00D         	goto	u3800
  9801  001B6A                     u3801:
  9802  001B6A  EFBD  F00D         	goto	l3993
  9803  001B6E                     u3800:
  9804  001B6E  90D8               	bcf	status,0,c
  9805  001B70  3013               	rrcf	___fladd@grs^0,w,c
  9806  001B72  0901               	iorlw	1
  9807  001B74  6E13               	movwf	___fladd@grs^0,c
  9808  001B76  EFBF  F00D         	goto	l3995
  9809  001B7A                     l3993:
  9810  001B7A  90D8               	bcf	status,0,c
  9811  001B7C  3213               	rrcf	___fladd@grs^0,f,c
  9812  001B7E                     l3995:
  9813  001B7E  A004               	btfss	___fladd@b^0,0,c
  9814  001B80  EFC4  F00D         	goto	u3811
  9815  001B84  EFC6  F00D         	goto	u3810
  9816  001B88                     u3811:
  9817  001B88  EFC7  F00D         	goto	l3999
  9818  001B8C                     u3810:
  9819  001B8C  8E13               	bsf	___fladd@grs^0,7,c
  9820  001B8E                     l3999:
  9821  001B8E  3407               	rlcf	(___fladd@b+3)^0,w,c
  9822  001B90  3207               	rrcf	(___fladd@b+3)^0,f,c
  9823  001B92  3206               	rrcf	(___fladd@b+2)^0,f,c
  9824  001B94  3205               	rrcf	(___fladd@b+1)^0,f,c
  9825  001B96  3204               	rrcf	___fladd@b^0,f,c
  9826  001B98  2A12               	incf	___fladd@bexp^0,f,c
  9827  001B9A  EF5C  F00E         	goto	l4039
  9828  001B9E                     l4003:
  9829  001B9E  5008               	movf	___fladd@a^0,w,c
  9830  001BA0  5C04               	subwf	___fladd@b^0,w,c
  9831  001BA2  5009               	movf	(___fladd@a+1)^0,w,c
  9832  001BA4  5805               	subwfb	(___fladd@b+1)^0,w,c
  9833  001BA6  500A               	movf	(___fladd@a+2)^0,w,c
  9834  001BA8  5806               	subwfb	(___fladd@b+2)^0,w,c
  9835  001BAA  5007               	movf	(___fladd@b+3)^0,w,c
  9836  001BAC  0A80               	xorlw	128
  9837  001BAE  6E0C               	movwf	??___fladd^0,c
  9838  001BB0  500B               	movf	(___fladd@a+3)^0,w,c
  9839  001BB2  0A80               	xorlw	128
  9840  001BB4  580C               	subwfb	??___fladd^0,w,c
  9841  001BB6  B0D8               	btfsc	status,0,c
  9842  001BB8  EFE0  F00D         	goto	u3821
  9843  001BBC  EFE2  F00D         	goto	u3820
  9844  001BC0                     u3821:
  9845  001BC0  EF0D  F00E         	goto	l4013
  9846  001BC4                     u3820:
  9847  001BC4  5004               	movf	___fladd@b^0,w,c
  9848  001BC6  5C08               	subwf	___fladd@a^0,w,c
  9849  001BC8  6E0C               	movwf	??___fladd^0,c
  9850  001BCA  5005               	movf	(___fladd@b+1)^0,w,c
  9851  001BCC  5809               	subwfb	(___fladd@a+1)^0,w,c
  9852  001BCE  6E0D               	movwf	(??___fladd+1)^0,c
  9853  001BD0  5006               	movf	(___fladd@b+2)^0,w,c
  9854  001BD2  580A               	subwfb	(___fladd@a+2)^0,w,c
  9855  001BD4  6E0E               	movwf	(??___fladd+2)^0,c
  9856  001BD6  5007               	movf	(___fladd@b+3)^0,w,c
  9857  001BD8  580B               	subwfb	(___fladd@a+3)^0,w,c
  9858  001BDA  6E0F               	movwf	(??___fladd+3)^0,c
  9859  001BDC  0EFF               	movlw	255
  9860  001BDE  240C               	addwf	??___fladd^0,w,c
  9861  001BE0  6E04               	movwf	___fladd@b^0,c
  9862  001BE2  0EFF               	movlw	255
  9863  001BE4  200D               	addwfc	(??___fladd+1)^0,w,c
  9864  001BE6  6E05               	movwf	(___fladd@b+1)^0,c
  9865  001BE8  0EFF               	movlw	255
  9866  001BEA  200E               	addwfc	(??___fladd+2)^0,w,c
  9867  001BEC  6E06               	movwf	(___fladd@b+2)^0,c
  9868  001BEE  0EFF               	movlw	255
  9869  001BF0  200F               	addwfc	(??___fladd+3)^0,w,c
  9870  001BF2  6E07               	movwf	(___fladd@b+3)^0,c
  9871  001BF4  0E80               	movlw	128
  9872  001BF6  1A10               	xorwf	___fladd@signs^0,f,c
  9873  001BF8  6C13               	negf	___fladd@grs^0,c
  9874  001BFA  5013               	movf	___fladd@grs^0,w,c
  9875  001BFC  A4D8               	btfss	status,2,c
  9876  001BFE  EF03  F00E         	goto	u3831
  9877  001C02  EF05  F00E         	goto	u3830
  9878  001C06                     u3831:
  9879  001C06  EF15  F00E         	goto	l1304
  9880  001C0A                     u3830:
  9881  001C0A  0E01               	movlw	1
  9882  001C0C  2604               	addwf	___fladd@b^0,f,c
  9883  001C0E  0E00               	movlw	0
  9884  001C10  2205               	addwfc	(___fladd@b+1)^0,f,c
  9885  001C12  2206               	addwfc	(___fladd@b+2)^0,f,c
  9886  001C14  2207               	addwfc	(___fladd@b+3)^0,f,c
  9887  001C16  EF15  F00E         	goto	l1304
  9888  001C1A                     l4013:
  9889  001C1A  5008               	movf	___fladd@a^0,w,c
  9890  001C1C  5E04               	subwf	___fladd@b^0,f,c
  9891  001C1E  5009               	movf	(___fladd@a+1)^0,w,c
  9892  001C20  5A05               	subwfb	(___fladd@b+1)^0,f,c
  9893  001C22  500A               	movf	(___fladd@a+2)^0,w,c
  9894  001C24  5A06               	subwfb	(___fladd@b+2)^0,f,c
  9895  001C26  500B               	movf	(___fladd@a+3)^0,w,c
  9896  001C28  5A07               	subwfb	(___fladd@b+3)^0,f,c
  9897  001C2A                     l1304:
  9898  001C2A  5004               	movf	___fladd@b^0,w,c
  9899  001C2C  1005               	iorwf	(___fladd@b+1)^0,w,c
  9900  001C2E  1006               	iorwf	(___fladd@b+2)^0,w,c
  9901  001C30  1007               	iorwf	(___fladd@b+3)^0,w,c
  9902  001C32  A4D8               	btfss	status,2,c
  9903  001C34  EF1E  F00E         	goto	u3841
  9904  001C38  EF20  F00E         	goto	u3840
  9905  001C3C                     u3841:
  9906  001C3C  EF55  F00E         	goto	l4037
  9907  001C40                     u3840:
  9908  001C40  5013               	movf	___fladd@grs^0,w,c
  9909  001C42  A4D8               	btfss	status,2,c
  9910  001C44  EF26  F00E         	goto	u3851
  9911  001C48  EF28  F00E         	goto	u3850
  9912  001C4C                     u3851:
  9913  001C4C  EF55  F00E         	goto	l4037
  9914  001C50                     u3850:
  9915  001C50  0E00               	movlw	0
  9916  001C52  6E04               	movwf	?___fladd^0,c
  9917  001C54  0E00               	movlw	0
  9918  001C56  6E05               	movwf	(?___fladd+1)^0,c
  9919  001C58  0E00               	movlw	0
  9920  001C5A  6E06               	movwf	(?___fladd+2)^0,c
  9921  001C5C  0E00               	movlw	0
  9922  001C5E  6E07               	movwf	(?___fladd+3)^0,c
  9923  001C60  EFF0  F00E         	goto	l1296
  9924  001C64                     l4021:
  9925  001C64  90D8               	bcf	status,0,c
  9926  001C66  3604               	rlcf	___fladd@b^0,f,c
  9927  001C68  3605               	rlcf	(___fladd@b+1)^0,f,c
  9928  001C6A  3606               	rlcf	(___fladd@b+2)^0,f,c
  9929  001C6C  3607               	rlcf	(___fladd@b+3)^0,f,c
  9930  001C6E  AE13               	btfss	___fladd@grs^0,7,c
  9931  001C70  EF3C  F00E         	goto	u3861
  9932  001C74  EF3E  F00E         	goto	u3860
  9933  001C78                     u3861:
  9934  001C78  EF3F  F00E         	goto	l4027
  9935  001C7C                     u3860:
  9936  001C7C  8004               	bsf	___fladd@b^0,0,c
  9937  001C7E                     l4027:
  9938  001C7E  A013               	btfss	___fladd@grs^0,0,c
  9939  001C80  EF44  F00E         	goto	u3871
  9940  001C84  EF46  F00E         	goto	u3870
  9941  001C88                     u3871:
  9942  001C88  EF4A  F00E         	goto	l4031
  9943  001C8C                     u3870:
  9944  001C8C  80D8               	bsf	status,0,c
  9945  001C8E  3613               	rlcf	___fladd@grs^0,f,c
  9946  001C90  EF4C  F00E         	goto	l4033
  9947  001C94                     l4031:
  9948  001C94  90D8               	bcf	status,0,c
  9949  001C96  3613               	rlcf	___fladd@grs^0,f,c
  9950  001C98                     l4033:
  9951  001C98  5012               	movf	___fladd@bexp^0,w,c
  9952  001C9A  B4D8               	btfsc	status,2,c
  9953  001C9C  EF52  F00E         	goto	u3881
  9954  001CA0  EF54  F00E         	goto	u3880
  9955  001CA4                     u3881:
  9956  001CA4  EF55  F00E         	goto	l4037
  9957  001CA8                     u3880:
  9958  001CA8  0612               	decf	___fladd@bexp^0,f,c
  9959  001CAA                     l4037:
  9960  001CAA  AE06               	btfss	(___fladd@b+2)^0,7,c
  9961  001CAC  EF5A  F00E         	goto	u3891
  9962  001CB0  EF5C  F00E         	goto	u3890
  9963  001CB4                     u3891:
  9964  001CB4  EF32  F00E         	goto	l4021
  9965  001CB8                     u3890:
  9966  001CB8                     l4039:
  9967  001CB8  0E00               	movlw	0
  9968  001CBA  6E11               	movwf	___fladd@aexp^0,c
  9969  001CBC  AE13               	btfss	___fladd@grs^0,7,c
  9970  001CBE  EF63  F00E         	goto	u3901
  9971  001CC2  EF65  F00E         	goto	u3900
  9972  001CC6                     u3901:
  9973  001CC6  EF7D  F00E         	goto	l1313
  9974  001CCA                     u3900:
  9975  001CCA  C013  F00C         	movff	___fladd@grs,??___fladd
  9976  001CCE  0E7F               	movlw	127
  9977  001CD0  160C               	andwf	??___fladd^0,f,c
  9978  001CD2  B4D8               	btfsc	status,2,c
  9979  001CD4  EF6E  F00E         	goto	u3911
  9980  001CD8  EF70  F00E         	goto	u3910
  9981  001CDC                     u3911:
  9982  001CDC  EF74  F00E         	goto	l1314
  9983  001CE0                     u3910:
  9984  001CE0                     l4045:
  9985  001CE0  0E01               	movlw	1
  9986  001CE2  6E11               	movwf	___fladd@aexp^0,c
  9987  001CE4  EF7D  F00E         	goto	l1313
  9988  001CE8                     l1314:
  9989  001CE8  A004               	btfss	___fladd@b^0,0,c
  9990  001CEA  EF79  F00E         	goto	u3921
  9991  001CEE  EF7B  F00E         	goto	u3920
  9992  001CF2                     u3921:
  9993  001CF2  EF7D  F00E         	goto	l1313
  9994  001CF6                     u3920:
  9995  001CF6  EF70  F00E         	goto	l4045
  9996  001CFA                     l1313:
  9997  001CFA  5011               	movf	___fladd@aexp^0,w,c
  9998  001CFC  B4D8               	btfsc	status,2,c
  9999  001CFE  EF83  F00E         	goto	u3931
 10000  001D02  EF85  F00E         	goto	u3930
 10001  001D06                     u3931:
 10002  001D06  EFB0  F00E         	goto	l4057
 10003  001D0A                     u3930:
 10004  001D0A  0E01               	movlw	1
 10005  001D0C  2604               	addwf	___fladd@b^0,f,c
 10006  001D0E  0E00               	movlw	0
 10007  001D10  2205               	addwfc	(___fladd@b+1)^0,f,c
 10008  001D12  2206               	addwfc	(___fladd@b+2)^0,f,c
 10009  001D14  2207               	addwfc	(___fladd@b+3)^0,f,c
 10010  001D16  A007               	btfss	(___fladd@b+3)^0,0,c
 10011  001D18  EF90  F00E         	goto	u3941
 10012  001D1C  EF92  F00E         	goto	u3940
 10013  001D20                     u3941:
 10014  001D20  EFB0  F00E         	goto	l4057
 10015  001D24                     u3940:
 10016  001D24  C004  F00C         	movff	___fladd@b,??___fladd
 10017  001D28  C005  F00D         	movff	___fladd@b+1,??___fladd+1
 10018  001D2C  C006  F00E         	movff	___fladd@b+2,??___fladd+2
 10019  001D30  C007  F00F         	movff	___fladd@b+3,??___fladd+3
 10020  001D34  340F               	rlcf	(??___fladd+3)^0,w,c
 10021  001D36  320F               	rrcf	(??___fladd+3)^0,f,c
 10022  001D38  320E               	rrcf	(??___fladd+2)^0,f,c
 10023  001D3A  320D               	rrcf	(??___fladd+1)^0,f,c
 10024  001D3C  320C               	rrcf	??___fladd^0,f,c
 10025  001D3E  C00C  F004         	movff	??___fladd,___fladd@b
 10026  001D42  C00D  F005         	movff	??___fladd+1,___fladd@b+1
 10027  001D46  C00E  F006         	movff	??___fladd+2,___fladd@b+2
 10028  001D4A  C00F  F007         	movff	??___fladd+3,___fladd@b+3
 10029  001D4E  2812               	incf	___fladd@bexp^0,w,c
 10030  001D50  B4D8               	btfsc	status,2,c
 10031  001D52  EFAD  F00E         	goto	u3951
 10032  001D56  EFAF  F00E         	goto	u3950
 10033  001D5A                     u3951:
 10034  001D5A  EFB0  F00E         	goto	l4057
 10035  001D5E                     u3950:
 10036  001D5E  2A12               	incf	___fladd@bexp^0,f,c
 10037  001D60                     l4057:
 10038  001D60  2812               	incf	___fladd@bexp^0,w,c
 10039  001D62  B4D8               	btfsc	status,2,c
 10040  001D64  EFB6  F00E         	goto	u3961
 10041  001D68  EFB8  F00E         	goto	u3960
 10042  001D6C                     u3961:
 10043  001D6C  EFC0  F00E         	goto	l4061
 10044  001D70                     u3960:
 10045  001D70  5012               	movf	___fladd@bexp^0,w,c
 10046  001D72  A4D8               	btfss	status,2,c
 10047  001D74  EFBE  F00E         	goto	u3971
 10048  001D78  EFC0  F00E         	goto	u3970
 10049  001D7C                     u3971:
 10050  001D7C  EFD2  F00E         	goto	l4065
 10051  001D80                     u3970:
 10052  001D80                     l4061:
 10053  001D80  0E00               	movlw	0
 10054  001D82  6E04               	movwf	___fladd@b^0,c
 10055  001D84  0E00               	movlw	0
 10056  001D86  6E05               	movwf	(___fladd@b+1)^0,c
 10057  001D88  0E00               	movlw	0
 10058  001D8A  6E06               	movwf	(___fladd@b+2)^0,c
 10059  001D8C  0E00               	movlw	0
 10060  001D8E  6E07               	movwf	(___fladd@b+3)^0,c
 10061  001D90  5012               	movf	___fladd@bexp^0,w,c
 10062  001D92  A4D8               	btfss	status,2,c
 10063  001D94  EFCE  F00E         	goto	u3981
 10064  001D98  EFD0  F00E         	goto	u3980
 10065  001D9C                     u3981:
 10066  001D9C  EFD2  F00E         	goto	l4065
 10067  001DA0                     u3980:
 10068  001DA0  0E00               	movlw	0
 10069  001DA2  6E10               	movwf	___fladd@signs^0,c
 10070  001DA4                     l4065:
 10071  001DA4  A012               	btfss	___fladd@bexp^0,0,c
 10072  001DA6  EFD7  F00E         	goto	u3991
 10073  001DAA  EFD9  F00E         	goto	u3990
 10074  001DAE                     u3991:
 10075  001DAE  EFDC  F00E         	goto	l4069
 10076  001DB2                     u3990:
 10077  001DB2  8E06               	bsf	(___fladd@b+2)^0,7,c
 10078  001DB4  EFDD  F00E         	goto	l4071
 10079  001DB8                     l4069:
 10080  001DB8  9E06               	bcf	(___fladd@b+2)^0,7,c
 10081  001DBA                     l4071:
 10082  001DBA  90D8               	bcf	status,0,c
 10083  001DBC  3012               	rrcf	___fladd@bexp^0,w,c
 10084  001DBE  6E07               	movwf	(___fladd@b+3)^0,c
 10085  001DC0  AE10               	btfss	___fladd@signs^0,7,c
 10086  001DC2  EFE5  F00E         	goto	u4001
 10087  001DC6  EFE7  F00E         	goto	u4000
 10088  001DCA                     u4001:
 10089  001DCA  EFE8  F00E         	goto	l4077
 10090  001DCE                     u4000:
 10091  001DCE  8E07               	bsf	(___fladd@b+3)^0,7,c
 10092  001DD0                     l4077:
 10093  001DD0  C004  F004         	movff	___fladd@b,?___fladd
 10094  001DD4  C005  F005         	movff	___fladd@b+1,?___fladd+1
 10095  001DD8  C006  F006         	movff	___fladd@b+2,?___fladd+2
 10096  001DDC  C007  F007         	movff	___fladd@b+3,?___fladd+3
 10097  001DE0                     l1296:
 10098  001DE0  0012               	return		;funcret
 10099  001DE2                     __end_of___fladd:
 10100                           	opt callstack 0
 10101                           
 10102 ;; *************** function ___flneg *****************
 10103 ;; Defined at:
 10104 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  f1              4    3[COMRAM] unsigned char 
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;		None
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  4    3[COMRAM] unsigned char 
 10111 ;; Registers used:
 10112 ;;		wreg, status,2, status,0
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10118 ;;      Params:         4       0       0       0       0       0       0       0       0
 10119 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10120 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10121 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10122 ;;Total ram usage:        4 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    2
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_ftoa_sci
 10129 ;;		_ftoa
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text29
 10134  004F66                     __ptext29:
 10135                           	opt callstack 0
 10136  004F66                     ___flneg:
 10137                           	opt callstack 26
 10138  004F66  5004               	movf	___flneg@f1^0,w,c
 10139  004F68  1005               	iorwf	(___flneg@f1+1)^0,w,c
 10140  004F6A  1006               	iorwf	(___flneg@f1+2)^0,w,c
 10141  004F6C  1007               	iorwf	(___flneg@f1+3)^0,w,c
 10142  004F6E  B4D8               	btfsc	status,2,c
 10143  004F70  EFBC  F027         	goto	u4791
 10144  004F74  EFBE  F027         	goto	u4790
 10145  004F78                     u4791:
 10146  004F78  EFC6  F027         	goto	l4575
 10147  004F7C                     u4790:
 10148  004F7C  0E00               	movlw	0
 10149  004F7E  1A04               	xorwf	___flneg@f1^0,f,c
 10150  004F80  0E00               	movlw	0
 10151  004F82  1A05               	xorwf	(___flneg@f1+1)^0,f,c
 10152  004F84  0E00               	movlw	0
 10153  004F86  1A06               	xorwf	(___flneg@f1+2)^0,f,c
 10154  004F88  0E80               	movlw	128
 10155  004F8A  1A07               	xorwf	(___flneg@f1+3)^0,f,c
 10156  004F8C                     l4575:
 10157  004F8C  C004  F004         	movff	___flneg@f1,?___flneg
 10158  004F90  C005  F005         	movff	___flneg@f1+1,?___flneg+1
 10159  004F94  C006  F006         	movff	___flneg@f1+2,?___flneg+2
 10160  004F98  C007  F007         	movff	___flneg@f1+3,?___flneg+3
 10161  004F9C  0012               	return		;funcret
 10162  004F9E                     __end_of___flneg:
 10163                           	opt callstack 0
 10164                           
 10165 ;; *************** function ___fleq *****************
 10166 ;; Defined at:
 10167 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  ff1             4    3[COMRAM] unsigned char 
 10170 ;;  ff2             4    7[COMRAM] unsigned char 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;		None
 10173 ;; Return value:  Size  Location     Type
 10174 ;;		None               void
 10175 ;; Registers used:
 10176 ;;		wreg, status,2, status,0
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10182 ;;      Params:         8       0       0       0       0       0       0       0       0
 10183 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10184 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10185 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10186 ;;Total ram usage:       12 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:    2
 10189 ;; This function calls:
 10190 ;;		Nothing
 10191 ;; This function is called by:
 10192 ;;		_ftoa_sci
 10193 ;;		_ftoa
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           	psect	text30
 10198  004812                     __ptext30:
 10199                           	opt callstack 0
 10200  004812                     ___fleq:
 10201                           	opt callstack 26
 10202  004812  0E00               	movlw	0
 10203  004814  1404               	andwf	___fleq@ff1^0,w,c
 10204  004816  6E0C               	movwf	??___fleq^0,c
 10205  004818  0E00               	movlw	0
 10206  00481A  1405               	andwf	(___fleq@ff1+1)^0,w,c
 10207  00481C  6E0D               	movwf	(??___fleq+1)^0,c
 10208  00481E  0E80               	movlw	128
 10209  004820  1406               	andwf	(___fleq@ff1+2)^0,w,c
 10210  004822  6E0E               	movwf	(??___fleq+2)^0,c
 10211  004824  0E7F               	movlw	127
 10212  004826  1407               	andwf	(___fleq@ff1+3)^0,w,c
 10213  004828  6E0F               	movwf	(??___fleq+3)^0,c
 10214  00482A  500C               	movf	??___fleq^0,w,c
 10215  00482C  100D               	iorwf	(??___fleq+1)^0,w,c
 10216  00482E  100E               	iorwf	(??___fleq+2)^0,w,c
 10217  004830  100F               	iorwf	(??___fleq+3)^0,w,c
 10218  004832  A4D8               	btfss	status,2,c
 10219  004834  EF1E  F024         	goto	u4761
 10220  004838  EF20  F024         	goto	u4760
 10221  00483C                     u4761:
 10222  00483C  EF28  F024         	goto	l4559
 10223  004840                     u4760:
 10224  004840  0E00               	movlw	0
 10225  004842  6E04               	movwf	___fleq@ff1^0,c
 10226  004844  0E00               	movlw	0
 10227  004846  6E05               	movwf	(___fleq@ff1+1)^0,c
 10228  004848  0E00               	movlw	0
 10229  00484A  6E06               	movwf	(___fleq@ff1+2)^0,c
 10230  00484C  0E00               	movlw	0
 10231  00484E  6E07               	movwf	(___fleq@ff1+3)^0,c
 10232  004850                     l4559:
 10233  004850  0E00               	movlw	0
 10234  004852  1408               	andwf	___fleq@ff2^0,w,c
 10235  004854  6E0C               	movwf	??___fleq^0,c
 10236  004856  0E00               	movlw	0
 10237  004858  1409               	andwf	(___fleq@ff2+1)^0,w,c
 10238  00485A  6E0D               	movwf	(??___fleq+1)^0,c
 10239  00485C  0E80               	movlw	128
 10240  00485E  140A               	andwf	(___fleq@ff2+2)^0,w,c
 10241  004860  6E0E               	movwf	(??___fleq+2)^0,c
 10242  004862  0E7F               	movlw	127
 10243  004864  140B               	andwf	(___fleq@ff2+3)^0,w,c
 10244  004866  6E0F               	movwf	(??___fleq+3)^0,c
 10245  004868  500C               	movf	??___fleq^0,w,c
 10246  00486A  100D               	iorwf	(??___fleq+1)^0,w,c
 10247  00486C  100E               	iorwf	(??___fleq+2)^0,w,c
 10248  00486E  100F               	iorwf	(??___fleq+3)^0,w,c
 10249  004870  A4D8               	btfss	status,2,c
 10250  004872  EF3D  F024         	goto	u4771
 10251  004876  EF3F  F024         	goto	u4770
 10252  00487A                     u4771:
 10253  00487A  EF47  F024         	goto	l4563
 10254  00487E                     u4770:
 10255  00487E  0E00               	movlw	0
 10256  004880  6E08               	movwf	___fleq@ff2^0,c
 10257  004882  0E00               	movlw	0
 10258  004884  6E09               	movwf	(___fleq@ff2+1)^0,c
 10259  004886  0E00               	movlw	0
 10260  004888  6E0A               	movwf	(___fleq@ff2+2)^0,c
 10261  00488A  0E00               	movlw	0
 10262  00488C  6E0B               	movwf	(___fleq@ff2+3)^0,c
 10263  00488E                     l4563:
 10264  00488E  5008               	movf	___fleq@ff2^0,w,c
 10265  004890  1804               	xorwf	___fleq@ff1^0,w,c
 10266  004892  E10F               	bnz	u4780
 10267  004894  5009               	movf	(___fleq@ff2+1)^0,w,c
 10268  004896  1805               	xorwf	(___fleq@ff1+1)^0,w,c
 10269  004898  E10C               	bnz	u4780
 10270  00489A  500A               	movf	(___fleq@ff2+2)^0,w,c
 10271  00489C  1806               	xorwf	(___fleq@ff1+2)^0,w,c
 10272  00489E  E109               	bnz	u4780
 10273  0048A0  500B               	movf	(___fleq@ff2+3)^0,w,c
 10274  0048A2  1807               	xorwf	(___fleq@ff1+3)^0,w,c
 10275  0048A4  B4D8               	btfsc	status,2,c
 10276  0048A6  EF57  F024         	goto	u4781
 10277  0048AA  EF59  F024         	goto	u4780
 10278  0048AE                     u4781:
 10279  0048AE  EF5C  F024         	goto	l4567
 10280  0048B2                     u4780:
 10281  0048B2  90D8               	bcf	status,0,c
 10282  0048B4  EF5D  F024         	goto	l1018
 10283  0048B8                     l4567:
 10284  0048B8  80D8               	bsf	status,0,c
 10285  0048BA                     l1018:
 10286  0048BA  0012               	return		;funcret
 10287  0048BC                     __end_of___fleq:
 10288                           	opt callstack 0
 10289                           
 10290 ;; *************** function _cleanS *****************
 10291 ;; Defined at:
 10292 ;;		line 115 in file "src/print/format.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;  str             2    7[COMRAM] PTR unsigned char 
 10295 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), 
 10296 ;; Auto vars:     Size  Location     Type
 10297 ;;  i               2   12[COMRAM] int 
 10298 ;;  len             2   10[COMRAM] int 
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  1    wreg      void 
 10301 ;; Registers used:
 10302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10308 ;;      Params:         2       0       0       0       0       0       0       0       0
 10309 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10310 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10311 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10312 ;;Total ram usage:        7 bytes
 10313 ;; Hardware stack levels used:    1
 10314 ;; Hardware stack levels required when called:    3
 10315 ;; This function calls:
 10316 ;;		_strlen
 10317 ;; This function is called by:
 10318 ;;		_my_vprintf
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           
 10322                           	psect	text31
 10323  004D2C                     __ptext31:
 10324                           	opt callstack 0
 10325  004D2C                     _cleanS:
 10326                           	opt callstack 26
 10327  004D2C                     
 10328                           ;src/print/format.c: 116:     int i,len;;src/print/format.c: 117:     len = strlen(str);
 10329  004D2C  C008  F004         	movff	cleanS@str,strlen@s
 10330  004D30  C009  F005         	movff	cleanS@str+1,strlen@s+1
 10331  004D34  ECCF  F027         	call	_strlen	;wreg free
 10332  004D38  C004  F00B         	movff	?_strlen,cleanS@len
 10333  004D3C  C005  F00C         	movff	?_strlen+1,cleanS@len+1
 10334  004D40                     
 10335                           ;src/print/format.c: 118:     for(i=0;i<len;i++)
 10336  004D40  0E00               	movlw	0
 10337  004D42  6E0E               	movwf	(cleanS@i+1)^0,c
 10338  004D44  0E00               	movlw	0
 10339  004D46  6E0D               	movwf	cleanS@i^0,c
 10340  004D48  EFB0  F026         	goto	l4763
 10341  004D4C                     l4759:
 10342                           
 10343                           ;src/print/format.c: 119:         str[i] = 0;
 10344  004D4C  500D               	movf	cleanS@i^0,w,c
 10345  004D4E  2408               	addwf	cleanS@str^0,w,c
 10346  004D50  6ED9               	movwf	fsr2l,c
 10347  004D52  500E               	movf	(cleanS@i+1)^0,w,c
 10348  004D54  2009               	addwfc	(cleanS@str+1)^0,w,c
 10349  004D56  6EDA               	movwf	fsr2h,c
 10350  004D58  0E00               	movlw	0
 10351  004D5A  6EDF               	movwf	indf2,c
 10352  004D5C  4A0D               	infsnz	cleanS@i^0,f,c
 10353  004D5E  2A0E               	incf	(cleanS@i+1)^0,f,c
 10354  004D60                     l4763:
 10355  004D60  500B               	movf	cleanS@len^0,w,c
 10356  004D62  5C0D               	subwf	cleanS@i^0,w,c
 10357  004D64  500E               	movf	(cleanS@i+1)^0,w,c
 10358  004D66  0A80               	xorlw	128
 10359  004D68  6E0A               	movwf	??_cleanS^0,c
 10360  004D6A  500C               	movf	(cleanS@len+1)^0,w,c
 10361  004D6C  0A80               	xorlw	128
 10362  004D6E  580A               	subwfb	??_cleanS^0,w,c
 10363  004D70  A0D8               	btfss	status,0,c
 10364  004D72  EFBD  F026         	goto	u5061
 10365  004D76  EFBF  F026         	goto	u5060
 10366  004D7A                     u5061:
 10367  004D7A  EFA6  F026         	goto	l4759
 10368  004D7E                     u5060:
 10369  004D7E  0012               	return		;funcret
 10370  004D80                     __end_of_cleanS:
 10371                           	opt callstack 0
 10372                           
 10373 ;; *************** function _addSig *****************
 10374 ;; Defined at:
 10375 ;;		line 361 in file "src/print/format.c"
 10376 ;; Parameters:    Size  Location     Type
 10377 ;;  numS            2   17[COMRAM] PTR unsigned char 
 10378 ;;		 -> my_vprintf@buffer(64), 
 10379 ;;  num             4   19[COMRAM] PTR unsigned char 
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;  k               2   27[COMRAM] int 
 10382 ;;  len             2   25[COMRAM] int 
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10392 ;;      Params:         6       0       0       0       0       0       0       0       0
 10393 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10394 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10395 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10396 ;;Total ram usage:       12 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    3
 10399 ;; This function calls:
 10400 ;;		___flge
 10401 ;;		_strlen
 10402 ;; This function is called by:
 10403 ;;		_my_vprintf
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text32
 10408  003D5A                     __ptext32:
 10409                           	opt callstack 0
 10410  003D5A                     _addSig:
 10411                           	opt callstack 26
 10412  003D5A                     
 10413                           ;src/print/format.c: 362:     int k;;src/print/format.c: 363:     int len = strlen(numS)
      +                          ;
 10414  003D5A  C012  F004         	movff	addSig@numS,strlen@s
 10415  003D5E  C013  F005         	movff	addSig@numS+1,strlen@s+1
 10416  003D62  ECCF  F027         	call	_strlen	;wreg free
 10417  003D66  C004  F01A         	movff	?_strlen,addSig@len
 10418  003D6A  C005  F01B         	movff	?_strlen+1,addSig@len+1
 10419  003D6E                     
 10420                           ;src/print/format.c: 365:     if(sig==1 || num < 0.0) {
 10421  003D6E  0452               	decf	_sig^0,w,c
 10422  003D70  B4D8               	btfsc	status,2,c
 10423  003D72  EFBD  F01E         	goto	u5711
 10424  003D76  EFBF  F01E         	goto	u5710
 10425  003D7A                     u5711:
 10426  003D7A  EFC6  F01E         	goto	l529
 10427  003D7E                     u5710:
 10428  003D7E  BE17               	btfsc	(addSig@num+3)^0,7,c
 10429  003D80  EFC6  F01E         	goto	u5720
 10430  003D84  EFC4  F01E         	goto	u5721
 10431  003D88                     u5721:
 10432  003D88  EF1B  F01F         	goto	l5093
 10433  003D8C                     u5720:
 10434  003D8C                     l529:
 10435                           
 10436                           ;src/print/format.c: 366:         for(k = len;k > 0;k--)
 10437  003D8C  C01A  F01C         	movff	addSig@len,addSig@k
 10438  003D90  C01B  F01D         	movff	addSig@len+1,addSig@k+1
 10439  003D94                     l5077:
 10440  003D94  BE1D               	btfsc	(addSig@k+1)^0,7,c
 10441  003D96  EFD7  F01E         	goto	u5730
 10442  003D9A  501D               	movf	(addSig@k+1)^0,w,c
 10443  003D9C  E106               	bnz	u5731
 10444  003D9E  041C               	decf	addSig@k^0,w,c
 10445  003DA0  B0D8               	btfsc	status,0,c
 10446  003DA2  EFD5  F01E         	goto	u5731
 10447  003DA6  EFD7  F01E         	goto	u5730
 10448  003DAA                     u5731:
 10449  003DAA  EFD9  F01E         	goto	l5081
 10450  003DAE                     u5730:
 10451  003DAE  EFF2  F01E         	goto	l5087
 10452  003DB2                     l5081:
 10453                           
 10454                           ;src/print/format.c: 367:             numS[k]=numS[k-1];
 10455  003DB2  501C               	movf	addSig@k^0,w,c
 10456  003DB4  2412               	addwf	addSig@numS^0,w,c
 10457  003DB6  6E18               	movwf	??_addSig^0,c
 10458  003DB8  501D               	movf	(addSig@k+1)^0,w,c
 10459  003DBA  2013               	addwfc	(addSig@numS+1)^0,w,c
 10460  003DBC  6E19               	movwf	(??_addSig+1)^0,c
 10461  003DBE  0EFF               	movlw	255
 10462  003DC0  2418               	addwf	??_addSig^0,w,c
 10463  003DC2  6ED9               	movwf	fsr2l,c
 10464  003DC4  0EFF               	movlw	255
 10465  003DC6  2019               	addwfc	(??_addSig+1)^0,w,c
 10466  003DC8  6EDA               	movwf	fsr2h,c
 10467  003DCA  501C               	movf	addSig@k^0,w,c
 10468  003DCC  2412               	addwf	addSig@numS^0,w,c
 10469  003DCE  6EE1               	movwf	fsr1l,c
 10470  003DD0  501D               	movf	(addSig@k+1)^0,w,c
 10471  003DD2  2013               	addwfc	(addSig@numS+1)^0,w,c
 10472  003DD4  6EE2               	movwf	fsr1h,c
 10473  003DD6  CFDF FFE7          	movff	indf2,indf1
 10474  003DDA  061C               	decf	addSig@k^0,f,c
 10475  003DDC  A0D8               	btfss	status,0,c
 10476  003DDE  061D               	decf	(addSig@k+1)^0,f,c
 10477  003DE0  EFCA  F01E         	goto	l5077
 10478  003DE4                     l5087:
 10479                           
 10480                           ;src/print/format.c: 368:         if (num > 0)
 10481  003DE4  0E00               	movlw	0
 10482  003DE6  6E04               	movwf	___flge@ff1^0,c
 10483  003DE8  0E00               	movlw	0
 10484  003DEA  6E05               	movwf	(___flge@ff1+1)^0,c
 10485  003DEC  0E00               	movlw	0
 10486  003DEE  6E06               	movwf	(___flge@ff1+2)^0,c
 10487  003DF0  0E00               	movlw	0
 10488  003DF2  6E07               	movwf	(___flge@ff1+3)^0,c
 10489  003DF4  C014  F008         	movff	addSig@num,___flge@ff2
 10490  003DF8  C015  F009         	movff	addSig@num+1,___flge@ff2+1
 10491  003DFC  C016  F00A         	movff	addSig@num+2,___flge@ff2+2
 10492  003E00  C017  F00B         	movff	addSig@num+3,___flge@ff2+3
 10493  003E04  EC79  F021         	call	___flge	;wreg free
 10494  003E08  B0D8               	btfsc	status,0,c
 10495  003E0A  EF09  F01F         	goto	u5741
 10496  003E0E  EF0B  F01F         	goto	u5740
 10497  003E12                     u5741:
 10498  003E12  EF13  F01F         	goto	l5091
 10499  003E16                     u5740:
 10500  003E16                     
 10501                           ;src/print/format.c: 369:             numS[0]= '+';
 10502  003E16  C012  FFD9         	movff	addSig@numS,fsr2l
 10503  003E1A  C013  FFDA         	movff	addSig@numS+1,fsr2h
 10504  003E1E  0E2B               	movlw	43
 10505  003E20  6EDF               	movwf	indf2,c
 10506  003E22  EF55  F01F         	goto	l538
 10507  003E26                     l5091:
 10508                           
 10509                           ;src/print/format.c: 371:             numS[0]= '-';
 10510  003E26  C012  FFD9         	movff	addSig@numS,fsr2l
 10511  003E2A  C013  FFDA         	movff	addSig@numS+1,fsr2h
 10512  003E2E  0E2D               	movlw	45
 10513  003E30  6EDF               	movwf	indf2,c
 10514  003E32  EF55  F01F         	goto	l538
 10515  003E36                     l5093:
 10516  003E36  044E               	decf	_space^0,w,c
 10517  003E38  A4D8               	btfss	status,2,c
 10518  003E3A  EF21  F01F         	goto	u5751
 10519  003E3E  EF23  F01F         	goto	u5750
 10520  003E42                     u5751:
 10521  003E42  EF55  F01F         	goto	l538
 10522  003E46                     u5750:
 10523  003E46                     
 10524                           ;src/print/format.c: 374:         for(k = len;k > 0;k--)
 10525  003E46  C01A  F01C         	movff	addSig@len,addSig@k
 10526  003E4A  C01B  F01D         	movff	addSig@len+1,addSig@k+1
 10527  003E4E                     l5097:
 10528  003E4E  BE1D               	btfsc	(addSig@k+1)^0,7,c
 10529  003E50  EF34  F01F         	goto	u5760
 10530  003E54  501D               	movf	(addSig@k+1)^0,w,c
 10531  003E56  E106               	bnz	u5761
 10532  003E58  041C               	decf	addSig@k^0,w,c
 10533  003E5A  B0D8               	btfsc	status,0,c
 10534  003E5C  EF32  F01F         	goto	u5761
 10535  003E60  EF34  F01F         	goto	u5760
 10536  003E64                     u5761:
 10537  003E64  EF36  F01F         	goto	l5101
 10538  003E68                     u5760:
 10539  003E68  EF4F  F01F         	goto	l5107
 10540  003E6C                     l5101:
 10541                           
 10542                           ;src/print/format.c: 375:             numS[k]=numS[k-1];
 10543  003E6C  501C               	movf	addSig@k^0,w,c
 10544  003E6E  2412               	addwf	addSig@numS^0,w,c
 10545  003E70  6E18               	movwf	??_addSig^0,c
 10546  003E72  501D               	movf	(addSig@k+1)^0,w,c
 10547  003E74  2013               	addwfc	(addSig@numS+1)^0,w,c
 10548  003E76  6E19               	movwf	(??_addSig+1)^0,c
 10549  003E78  0EFF               	movlw	255
 10550  003E7A  2418               	addwf	??_addSig^0,w,c
 10551  003E7C  6ED9               	movwf	fsr2l,c
 10552  003E7E  0EFF               	movlw	255
 10553  003E80  2019               	addwfc	(??_addSig+1)^0,w,c
 10554  003E82  6EDA               	movwf	fsr2h,c
 10555  003E84  501C               	movf	addSig@k^0,w,c
 10556  003E86  2412               	addwf	addSig@numS^0,w,c
 10557  003E88  6EE1               	movwf	fsr1l,c
 10558  003E8A  501D               	movf	(addSig@k+1)^0,w,c
 10559  003E8C  2013               	addwfc	(addSig@numS+1)^0,w,c
 10560  003E8E  6EE2               	movwf	fsr1h,c
 10561  003E90  CFDF FFE7          	movff	indf2,indf1
 10562  003E94  061C               	decf	addSig@k^0,f,c
 10563  003E96  A0D8               	btfss	status,0,c
 10564  003E98  061D               	decf	(addSig@k+1)^0,f,c
 10565  003E9A  EF27  F01F         	goto	l5097
 10566  003E9E                     l5107:
 10567                           
 10568                           ;src/print/format.c: 376:         numS[0]= ' ';
 10569  003E9E  C012  FFD9         	movff	addSig@numS,fsr2l
 10570  003EA2  C013  FFDA         	movff	addSig@numS+1,fsr2h
 10571  003EA6  0E20               	movlw	32
 10572  003EA8  6EDF               	movwf	indf2,c
 10573  003EAA                     l538:
 10574  003EAA  0012               	return		;funcret
 10575  003EAC                     __end_of_addSig:
 10576                           	opt callstack 0
 10577                           
 10578 ;; *************** function ___flge *****************
 10579 ;; Defined at:
 10580 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;  ff1             4    3[COMRAM] void 
 10583 ;;  ff2             4    7[COMRAM] void 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;		None
 10586 ;; Return value:  Size  Location     Type
 10587 ;;		None               void
 10588 ;; Registers used:
 10589 ;;		wreg, status,2, status,0
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10595 ;;      Params:         8       0       0       0       0       0       0       0       0
 10596 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10597 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10598 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10599 ;;Total ram usage:       12 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    2
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_addSig
 10606 ;;		_normalize
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text33
 10611  0042F2                     __ptext33:
 10612                           	opt callstack 0
 10613  0042F2                     ___flge:
 10614                           	opt callstack 25
 10615  0042F2  0E00               	movlw	0
 10616  0042F4  1404               	andwf	___flge@ff1^0,w,c
 10617  0042F6  6E0C               	movwf	??___flge^0,c
 10618  0042F8  0E00               	movlw	0
 10619  0042FA  1405               	andwf	(___flge@ff1+1)^0,w,c
 10620  0042FC  6E0D               	movwf	(??___flge+1)^0,c
 10621  0042FE  0E80               	movlw	128
 10622  004300  1406               	andwf	(___flge@ff1+2)^0,w,c
 10623  004302  6E0E               	movwf	(??___flge+2)^0,c
 10624  004304  0E7F               	movlw	127
 10625  004306  1407               	andwf	(___flge@ff1+3)^0,w,c
 10626  004308  6E0F               	movwf	(??___flge+3)^0,c
 10627  00430A  500C               	movf	??___flge^0,w,c
 10628  00430C  100D               	iorwf	(??___flge+1)^0,w,c
 10629  00430E  100E               	iorwf	(??___flge+2)^0,w,c
 10630  004310  100F               	iorwf	(??___flge+3)^0,w,c
 10631  004312  A4D8               	btfss	status,2,c
 10632  004314  EF8E  F021         	goto	u4431
 10633  004318  EF90  F021         	goto	u4430
 10634  00431C                     u4431:
 10635  00431C  EF98  F021         	goto	l4353
 10636  004320                     u4430:
 10637  004320  0E00               	movlw	0
 10638  004322  6E04               	movwf	___flge@ff1^0,c
 10639  004324  0E00               	movlw	0
 10640  004326  6E05               	movwf	(___flge@ff1+1)^0,c
 10641  004328  0E00               	movlw	0
 10642  00432A  6E06               	movwf	(___flge@ff1+2)^0,c
 10643  00432C  0E00               	movlw	0
 10644  00432E  6E07               	movwf	(___flge@ff1+3)^0,c
 10645  004330                     l4353:
 10646  004330  0E00               	movlw	0
 10647  004332  1408               	andwf	___flge@ff2^0,w,c
 10648  004334  6E0C               	movwf	??___flge^0,c
 10649  004336  0E00               	movlw	0
 10650  004338  1409               	andwf	(___flge@ff2+1)^0,w,c
 10651  00433A  6E0D               	movwf	(??___flge+1)^0,c
 10652  00433C  0E80               	movlw	128
 10653  00433E  140A               	andwf	(___flge@ff2+2)^0,w,c
 10654  004340  6E0E               	movwf	(??___flge+2)^0,c
 10655  004342  0E7F               	movlw	127
 10656  004344  140B               	andwf	(___flge@ff2+3)^0,w,c
 10657  004346  6E0F               	movwf	(??___flge+3)^0,c
 10658  004348  500C               	movf	??___flge^0,w,c
 10659  00434A  100D               	iorwf	(??___flge+1)^0,w,c
 10660  00434C  100E               	iorwf	(??___flge+2)^0,w,c
 10661  00434E  100F               	iorwf	(??___flge+3)^0,w,c
 10662  004350  A4D8               	btfss	status,2,c
 10663  004352  EFAD  F021         	goto	u4441
 10664  004356  EFAF  F021         	goto	u4440
 10665  00435A                     u4441:
 10666  00435A  EFB7  F021         	goto	l4357
 10667  00435E                     u4440:
 10668  00435E  0E00               	movlw	0
 10669  004360  6E08               	movwf	___flge@ff2^0,c
 10670  004362  0E00               	movlw	0
 10671  004364  6E09               	movwf	(___flge@ff2+1)^0,c
 10672  004366  0E00               	movlw	0
 10673  004368  6E0A               	movwf	(___flge@ff2+2)^0,c
 10674  00436A  0E00               	movlw	0
 10675  00436C  6E0B               	movwf	(___flge@ff2+3)^0,c
 10676  00436E                     l4357:
 10677  00436E  AE07               	btfss	(___flge@ff1+3)^0,7,c
 10678  004370  EFBC  F021         	goto	u4451
 10679  004374  EFBE  F021         	goto	u4450
 10680  004378                     u4451:
 10681  004378  EFC7  F021         	goto	l4361
 10682  00437C                     u4450:
 10683  00437C  6C04               	negf	___flge@ff1^0,c
 10684  00437E  1E05               	comf	(___flge@ff1+1)^0,f,c
 10685  004380  B0D8               	btfsc	status,0,c
 10686  004382  2A05               	incf	(___flge@ff1+1)^0,f,c
 10687  004384  1E06               	comf	(___flge@ff1+2)^0,f,c
 10688  004386  B0D8               	btfsc	status,0,c
 10689  004388  2A06               	incf	(___flge@ff1+2)^0,f,c
 10690  00438A  0E80               	movlw	128
 10691  00438C  5607               	subfwb	(___flge@ff1+3)^0,f,c
 10692  00438E                     l4361:
 10693  00438E  AE0B               	btfss	(___flge@ff2+3)^0,7,c
 10694  004390  EFCC  F021         	goto	u4461
 10695  004394  EFCE  F021         	goto	u4460
 10696  004398                     u4461:
 10697  004398  EFD7  F021         	goto	l1024
 10698  00439C                     u4460:
 10699  00439C  6C08               	negf	___flge@ff2^0,c
 10700  00439E  1E09               	comf	(___flge@ff2+1)^0,f,c
 10701  0043A0  B0D8               	btfsc	status,0,c
 10702  0043A2  2A09               	incf	(___flge@ff2+1)^0,f,c
 10703  0043A4  1E0A               	comf	(___flge@ff2+2)^0,f,c
 10704  0043A6  B0D8               	btfsc	status,0,c
 10705  0043A8  2A0A               	incf	(___flge@ff2+2)^0,f,c
 10706  0043AA  0E80               	movlw	128
 10707  0043AC  560B               	subfwb	(___flge@ff2+3)^0,f,c
 10708  0043AE                     l1024:
 10709  0043AE  0E00               	movlw	0
 10710  0043B0  1A04               	xorwf	___flge@ff1^0,f,c
 10711  0043B2  0E00               	movlw	0
 10712  0043B4  1A05               	xorwf	(___flge@ff1+1)^0,f,c
 10713  0043B6  0E00               	movlw	0
 10714  0043B8  1A06               	xorwf	(___flge@ff1+2)^0,f,c
 10715  0043BA  0E80               	movlw	128
 10716  0043BC  1A07               	xorwf	(___flge@ff1+3)^0,f,c
 10717  0043BE  0E00               	movlw	0
 10718  0043C0  1A08               	xorwf	___flge@ff2^0,f,c
 10719  0043C2  0E00               	movlw	0
 10720  0043C4  1A09               	xorwf	(___flge@ff2+1)^0,f,c
 10721  0043C6  0E00               	movlw	0
 10722  0043C8  1A0A               	xorwf	(___flge@ff2+2)^0,f,c
 10723  0043CA  0E80               	movlw	128
 10724  0043CC  1A0B               	xorwf	(___flge@ff2+3)^0,f,c
 10725  0043CE  5008               	movf	___flge@ff2^0,w,c
 10726  0043D0  5C04               	subwf	___flge@ff1^0,w,c
 10727  0043D2  5009               	movf	(___flge@ff2+1)^0,w,c
 10728  0043D4  5805               	subwfb	(___flge@ff1+1)^0,w,c
 10729  0043D6  500A               	movf	(___flge@ff2+2)^0,w,c
 10730  0043D8  5806               	subwfb	(___flge@ff1+2)^0,w,c
 10731  0043DA  500B               	movf	(___flge@ff2+3)^0,w,c
 10732  0043DC  5807               	subwfb	(___flge@ff1+3)^0,w,c
 10733  0043DE  B0D8               	btfsc	status,0,c
 10734  0043E0  EFF4  F021         	goto	u4471
 10735  0043E4  EFF6  F021         	goto	u4470
 10736  0043E8                     u4471:
 10737  0043E8  EFF9  F021         	goto	l4367
 10738  0043EC                     u4470:
 10739  0043EC  90D8               	bcf	status,0,c
 10740  0043EE  EFFA  F021         	goto	l1029
 10741  0043F2                     l4367:
 10742  0043F2  80D8               	bsf	status,0,c
 10743  0043F4                     l1029:
 10744  0043F4  0012               	return		;funcret
 10745  0043F6                     __end_of___flge:
 10746                           	opt callstack 0
 10747                           
 10748 ;; *************** function _addOx *****************
 10749 ;; Defined at:
 10750 ;;		line 383 in file "src/print/format.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;  hoS             2    7[COMRAM] PTR unsigned char 
 10753 ;;		 -> my_vprintf@buffer(64), 
 10754 ;;  num             2    9[COMRAM] int 
 10755 ;;  type            1   11[COMRAM] unsigned char 
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;  k               2   16[COMRAM] int 
 10758 ;;  len             2   14[COMRAM] int 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10768 ;;      Params:         5       0       0       0       0       0       0       0       0
 10769 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10770 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10771 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10772 ;;Total ram usage:       11 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:    3
 10775 ;; This function calls:
 10776 ;;		_strlen
 10777 ;; This function is called by:
 10778 ;;		_my_vprintf
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           	psect	text34
 10783  003BE2                     __ptext34:
 10784                           	opt callstack 0
 10785  003BE2                     _addOx:
 10786                           	opt callstack 26
 10787  003BE2                     
 10788                           ;src/print/format.c: 384:     int k;;src/print/format.c: 385:     int len = strlen(hoS);
 10789  003BE2  C008  F004         	movff	addOx@hoS,strlen@s
 10790  003BE6  C009  F005         	movff	addOx@hoS+1,strlen@s+1
 10791  003BEA  ECCF  F027         	call	_strlen	;wreg free
 10792  003BEE  C004  F00F         	movff	?_strlen,addOx@len
 10793  003BF2  C005  F010         	movff	?_strlen+1,addOx@len+1
 10794  003BF6                     
 10795                           ;src/print/format.c: 387:     if(numeral == 1 && num != 0 && type=='x') {
 10796  003BF6  044D               	decf	_numeral^0,w,c
 10797  003BF8  A4D8               	btfss	status,2,c
 10798  003BFA  EF01  F01E         	goto	u5771
 10799  003BFE  EF03  F01E         	goto	u5770
 10800  003C02                     u5771:
 10801  003C02  EF60  F01E         	goto	l5131
 10802  003C06                     u5770:
 10803  003C06  500A               	movf	addOx@num^0,w,c
 10804  003C08  100B               	iorwf	(addOx@num+1)^0,w,c
 10805  003C0A  B4D8               	btfsc	status,2,c
 10806  003C0C  EF0A  F01E         	goto	u5781
 10807  003C10  EF0C  F01E         	goto	u5780
 10808  003C14                     u5781:
 10809  003C14  EF60  F01E         	goto	l5131
 10810  003C18                     u5780:
 10811  003C18  0E78               	movlw	120
 10812  003C1A  180C               	xorwf	addOx@type^0,w,c
 10813  003C1C  A4D8               	btfss	status,2,c
 10814  003C1E  EF13  F01E         	goto	u5791
 10815  003C22  EF15  F01E         	goto	u5790
 10816  003C26                     u5791:
 10817  003C26  EF60  F01E         	goto	l5131
 10818  003C2A                     u5790:
 10819  003C2A                     
 10820                           ;src/print/format.c: 388:         for(k = len+1;k > 1;k--)
 10821  003C2A  0E01               	movlw	1
 10822  003C2C  240F               	addwf	addOx@len^0,w,c
 10823  003C2E  6E11               	movwf	addOx@k^0,c
 10824  003C30  0E00               	movlw	0
 10825  003C32  2010               	addwfc	(addOx@len+1)^0,w,c
 10826  003C34  6E12               	movwf	(addOx@k+1)^0,c
 10827  003C36  BE12               	btfsc	(addOx@k+1)^0,7,c
 10828  003C38  EF29  F01E         	goto	u5800
 10829  003C3C  5012               	movf	(addOx@k+1)^0,w,c
 10830  003C3E  E107               	bnz	u5801
 10831  003C40  0E02               	movlw	2
 10832  003C42  5C11               	subwf	addOx@k^0,w,c
 10833  003C44  B0D8               	btfsc	status,0,c
 10834  003C46  EF27  F01E         	goto	u5801
 10835  003C4A  EF29  F01E         	goto	u5800
 10836  003C4E                     u5801:
 10837  003C4E  EF2B  F01E         	goto	l5121
 10838  003C52                     u5800:
 10839  003C52  EF50  F01E         	goto	l5127
 10840  003C56                     l5121:
 10841                           
 10842                           ;src/print/format.c: 389:             hoS[k]=hoS[k-2];
 10843  003C56  5011               	movf	addOx@k^0,w,c
 10844  003C58  2408               	addwf	addOx@hoS^0,w,c
 10845  003C5A  6E0D               	movwf	??_addOx^0,c
 10846  003C5C  5012               	movf	(addOx@k+1)^0,w,c
 10847  003C5E  2009               	addwfc	(addOx@hoS+1)^0,w,c
 10848  003C60  6E0E               	movwf	(??_addOx+1)^0,c
 10849  003C62  0EFE               	movlw	254
 10850  003C64  240D               	addwf	??_addOx^0,w,c
 10851  003C66  6ED9               	movwf	fsr2l,c
 10852  003C68  0EFF               	movlw	255
 10853  003C6A  200E               	addwfc	(??_addOx+1)^0,w,c
 10854  003C6C  6EDA               	movwf	fsr2h,c
 10855  003C6E  5011               	movf	addOx@k^0,w,c
 10856  003C70  2408               	addwf	addOx@hoS^0,w,c
 10857  003C72  6EE1               	movwf	fsr1l,c
 10858  003C74  5012               	movf	(addOx@k+1)^0,w,c
 10859  003C76  2009               	addwfc	(addOx@hoS+1)^0,w,c
 10860  003C78  6EE2               	movwf	fsr1h,c
 10861  003C7A  CFDF FFE7          	movff	indf2,indf1
 10862  003C7E  0611               	decf	addOx@k^0,f,c
 10863  003C80  A0D8               	btfss	status,0,c
 10864  003C82  0612               	decf	(addOx@k+1)^0,f,c
 10865  003C84  BE12               	btfsc	(addOx@k+1)^0,7,c
 10866  003C86  EF50  F01E         	goto	u5810
 10867  003C8A  5012               	movf	(addOx@k+1)^0,w,c
 10868  003C8C  E107               	bnz	u5811
 10869  003C8E  0E02               	movlw	2
 10870  003C90  5C11               	subwf	addOx@k^0,w,c
 10871  003C92  B0D8               	btfsc	status,0,c
 10872  003C94  EF4E  F01E         	goto	u5811
 10873  003C98  EF50  F01E         	goto	u5810
 10874  003C9C                     u5811:
 10875  003C9C  EF2B  F01E         	goto	l5121
 10876  003CA0                     u5810:
 10877  003CA0                     l5127:
 10878                           
 10879                           ;src/print/format.c: 390:         hoS[0]= '0';
 10880  003CA0  C008  FFD9         	movff	addOx@hoS,fsr2l
 10881  003CA4  C009  FFDA         	movff	addOx@hoS+1,fsr2h
 10882  003CA8  0E30               	movlw	48
 10883  003CAA  6EDF               	movwf	indf2,c
 10884  003CAC                     
 10885                           ;src/print/format.c: 391:         hoS[1]= 'x';
 10886  003CAC  EE20 F001          	lfsr	2,1
 10887  003CB0  5008               	movf	addOx@hoS^0,w,c
 10888  003CB2  26D9               	addwf	fsr2l,f,c
 10889  003CB4  5009               	movf	(addOx@hoS+1)^0,w,c
 10890  003CB6  22DA               	addwfc	fsr2h,f,c
 10891  003CB8  0E78               	movlw	120
 10892  003CBA  6EDF               	movwf	indf2,c
 10893                           
 10894                           ;src/print/format.c: 392:     }
 10895  003CBC  EFAC  F01E         	goto	l548
 10896  003CC0                     l5131:
 10897  003CC0  044D               	decf	_numeral^0,w,c
 10898  003CC2  A4D8               	btfss	status,2,c
 10899  003CC4  EF66  F01E         	goto	u5821
 10900  003CC8  EF68  F01E         	goto	u5820
 10901  003CCC                     u5821:
 10902  003CCC  EFAC  F01E         	goto	l548
 10903  003CD0                     u5820:
 10904  003CD0  500A               	movf	addOx@num^0,w,c
 10905  003CD2  100B               	iorwf	(addOx@num+1)^0,w,c
 10906  003CD4  B4D8               	btfsc	status,2,c
 10907  003CD6  EF6F  F01E         	goto	u5831
 10908  003CDA  EF71  F01E         	goto	u5830
 10909  003CDE                     u5831:
 10910  003CDE  EFAC  F01E         	goto	l548
 10911  003CE2                     u5830:
 10912  003CE2  0E6F               	movlw	111
 10913  003CE4  180C               	xorwf	addOx@type^0,w,c
 10914  003CE6  A4D8               	btfss	status,2,c
 10915  003CE8  EF78  F01E         	goto	u5841
 10916  003CEC  EF7A  F01E         	goto	u5840
 10917  003CF0                     u5841:
 10918  003CF0  EFAC  F01E         	goto	l548
 10919  003CF4                     u5840:
 10920  003CF4                     
 10921                           ;src/print/format.c: 394:         for(k = len;k > 0;k--)
 10922  003CF4  C00F  F011         	movff	addOx@len,addOx@k
 10923  003CF8  C010  F012         	movff	addOx@len+1,addOx@k+1
 10924  003CFC                     l5139:
 10925  003CFC  BE12               	btfsc	(addOx@k+1)^0,7,c
 10926  003CFE  EF8B  F01E         	goto	u5850
 10927  003D02  5012               	movf	(addOx@k+1)^0,w,c
 10928  003D04  E106               	bnz	u5851
 10929  003D06  0411               	decf	addOx@k^0,w,c
 10930  003D08  B0D8               	btfsc	status,0,c
 10931  003D0A  EF89  F01E         	goto	u5851
 10932  003D0E  EF8B  F01E         	goto	u5850
 10933  003D12                     u5851:
 10934  003D12  EF8D  F01E         	goto	l5143
 10935  003D16                     u5850:
 10936  003D16  EFA6  F01E         	goto	l5149
 10937  003D1A                     l5143:
 10938                           
 10939                           ;src/print/format.c: 395:             hoS[k]=hoS[k-1];
 10940  003D1A  5011               	movf	addOx@k^0,w,c
 10941  003D1C  2408               	addwf	addOx@hoS^0,w,c
 10942  003D1E  6E0D               	movwf	??_addOx^0,c
 10943  003D20  5012               	movf	(addOx@k+1)^0,w,c
 10944  003D22  2009               	addwfc	(addOx@hoS+1)^0,w,c
 10945  003D24  6E0E               	movwf	(??_addOx+1)^0,c
 10946  003D26  0EFF               	movlw	255
 10947  003D28  240D               	addwf	??_addOx^0,w,c
 10948  003D2A  6ED9               	movwf	fsr2l,c
 10949  003D2C  0EFF               	movlw	255
 10950  003D2E  200E               	addwfc	(??_addOx+1)^0,w,c
 10951  003D30  6EDA               	movwf	fsr2h,c
 10952  003D32  5011               	movf	addOx@k^0,w,c
 10953  003D34  2408               	addwf	addOx@hoS^0,w,c
 10954  003D36  6EE1               	movwf	fsr1l,c
 10955  003D38  5012               	movf	(addOx@k+1)^0,w,c
 10956  003D3A  2009               	addwfc	(addOx@hoS+1)^0,w,c
 10957  003D3C  6EE2               	movwf	fsr1h,c
 10958  003D3E  CFDF FFE7          	movff	indf2,indf1
 10959  003D42  0611               	decf	addOx@k^0,f,c
 10960  003D44  A0D8               	btfss	status,0,c
 10961  003D46  0612               	decf	(addOx@k+1)^0,f,c
 10962  003D48  EF7E  F01E         	goto	l5139
 10963  003D4C                     l5149:
 10964                           
 10965                           ;src/print/format.c: 396:         hoS[0]= '0';
 10966  003D4C  C008  FFD9         	movff	addOx@hoS,fsr2l
 10967  003D50  C009  FFDA         	movff	addOx@hoS+1,fsr2h
 10968  003D54  0E30               	movlw	48
 10969  003D56  6EDF               	movwf	indf2,c
 10970  003D58                     l548:
 10971  003D58  0012               	return		;funcret
 10972  003D5A                     __end_of_addOx:
 10973                           	opt callstack 0
 10974                           
 10975 ;; *************** function _SERIAL_Write *****************
 10976 ;; Defined at:
 10977 ;;		line 33 in file "src/serial.c"
 10978 ;; Parameters:    Size  Location     Type
 10979 ;;  str             2    7[COMRAM] PTR unsigned char 
 10980 ;;		 -> my_vprintf@string(128), 
 10981 ;; Auto vars:     Size  Location     Type
 10982 ;;  i               2    9[COMRAM] int 
 10983 ;; Return value:  Size  Location     Type
 10984 ;;                  1    wreg      void 
 10985 ;; Registers used:
 10986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10987 ;; Tracked objects:
 10988 ;;		On entry : 0/0
 10989 ;;		On exit  : 0/0
 10990 ;;		Unchanged: 0/0
 10991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10992 ;;      Params:         2       0       0       0       0       0       0       0       0
 10993 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10995 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10996 ;;Total ram usage:        4 bytes
 10997 ;; Hardware stack levels used:    1
 10998 ;; Hardware stack levels required when called:    3
 10999 ;; This function calls:
 11000 ;;		_SERIAL_WriteChar
 11001 ;;		_strlen
 11002 ;; This function is called by:
 11003 ;;		_my_vprintf
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007                           	psect	text35
 11008  004E5E                     __ptext35:
 11009                           	opt callstack 0
 11010  004E5E                     _SERIAL_Write:
 11011                           	opt callstack 26
 11012  004E5E                     
 11013                           ;src/serial.c: 34:     int i;;src/serial.c: 35:     for (i = 0; i < strlen(str); i++)
 11014  004E5E  0E00               	movlw	0
 11015  004E60  6E0B               	movwf	(SERIAL_Write@i+1)^0,c
 11016  004E62  0E00               	movlw	0
 11017  004E64  6E0A               	movwf	SERIAL_Write@i^0,c
 11018  004E66  EF40  F027         	goto	l4701
 11019  004E6A                     l4697:
 11020                           
 11021                           ;src/serial.c: 36:     {;src/serial.c: 37:         SERIAL_WriteChar(str[i]);
 11022  004E6A  500A               	movf	SERIAL_Write@i^0,w,c
 11023  004E6C  2408               	addwf	SERIAL_Write@str^0,w,c
 11024  004E6E  6ED9               	movwf	fsr2l,c
 11025  004E70  500B               	movf	(SERIAL_Write@i+1)^0,w,c
 11026  004E72  2009               	addwfc	(SERIAL_Write@str+1)^0,w,c
 11027  004E74  6EDA               	movwf	fsr2h,c
 11028  004E76  50DF               	movf	indf2,w,c
 11029  004E78  EC10  F028         	call	_SERIAL_WriteChar
 11030  004E7C                     
 11031                           ;src/serial.c: 38:     }
 11032  004E7C  4A0A               	infsnz	SERIAL_Write@i^0,f,c
 11033  004E7E  2A0B               	incf	(SERIAL_Write@i+1)^0,f,c
 11034  004E80                     l4701:
 11035  004E80  C008  F004         	movff	SERIAL_Write@str,strlen@s
 11036  004E84  C009  F005         	movff	SERIAL_Write@str+1,strlen@s+1
 11037  004E88  ECCF  F027         	call	_strlen	;wreg free
 11038  004E8C  5004               	movf	?_strlen^0,w,c
 11039  004E8E  5C0A               	subwf	SERIAL_Write@i^0,w,c
 11040  004E90  5005               	movf	(?_strlen+1)^0,w,c
 11041  004E92  580B               	subwfb	(SERIAL_Write@i+1)^0,w,c
 11042  004E94  A0D8               	btfss	status,0,c
 11043  004E96  EF4F  F027         	goto	u4971
 11044  004E9A  EF51  F027         	goto	u4970
 11045  004E9E                     u4971:
 11046  004E9E  EF35  F027         	goto	l4697
 11047  004EA2                     u4970:
 11048  004EA2  0012               	return		;funcret
 11049  004EA4                     __end_of_SERIAL_Write:
 11050                           	opt callstack 0
 11051                           
 11052 ;; *************** function _strlen *****************
 11053 ;; Defined at:
 11054 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 11055 ;; Parameters:    Size  Location     Type
 11056 ;;  s               2    3[COMRAM] PTR const unsigned char 
 11057 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), 
 11058 ;;		 -> getWP@width_str(5), 
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;  a               2    5[COMRAM] PTR const unsigned char 
 11061 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), 
 11062 ;;		 -> getWP@width_str(5), 
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  2    3[COMRAM] unsigned int 
 11065 ;; Registers used:
 11066 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11072 ;;      Params:         2       0       0       0       0       0       0       0       0
 11073 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11075 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11076 ;;Total ram usage:        4 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:    2
 11079 ;; This function calls:
 11080 ;;		Nothing
 11081 ;; This function is called by:
 11082 ;;		_SERIAL_Write
 11083 ;;		_searchc
 11084 ;;		_posc
 11085 ;;		_roundStr
 11086 ;;		_upperCL
 11087 ;;		_cleanS
 11088 ;;		_getWP
 11089 ;;		_precF
 11090 ;;		_precE
 11091 ;;		_precG
 11092 ;;		_precI
 11093 ;;		_precS
 11094 ;;		_addSig
 11095 ;;		_addOx
 11096 ;;		_setWidth
 11097 ;;		_my_vprintf
 11098 ;;		_reverse
 11099 ;;		_atoui
 11100 ;;		_strcat
 11101 ;;		_SERIAL_WriteLine
 11102 ;; This function uses a non-reentrant model
 11103 ;;
 11104                           
 11105                           	psect	text36
 11106  004F9E                     __ptext36:
 11107                           	opt callstack 0
 11108  004F9E                     _strlen:
 11109                           	opt callstack 26
 11110  004F9E  C004  F006         	movff	strlen@s,strlen@a
 11111  004FA2  C005  F007         	movff	strlen@s+1,strlen@a+1
 11112  004FA6  EFD7  F027         	goto	l3759
 11113  004FAA                     l3757:
 11114  004FAA  4A04               	infsnz	strlen@s^0,f,c
 11115  004FAC  2A05               	incf	(strlen@s+1)^0,f,c
 11116  004FAE                     l3759:
 11117  004FAE  C004  FFD9         	movff	strlen@s,fsr2l
 11118  004FB2  C005  FFDA         	movff	strlen@s+1,fsr2h
 11119  004FB6  50DF               	movf	indf2,w,c
 11120  004FB8  A4D8               	btfss	status,2,c
 11121  004FBA  EFE1  F027         	goto	u3431
 11122  004FBE  EFE3  F027         	goto	u3430
 11123  004FC2                     u3431:
 11124  004FC2  EFD5  F027         	goto	l3757
 11125  004FC6                     u3430:
 11126  004FC6  5006               	movf	strlen@a^0,w,c
 11127  004FC8  5C04               	subwf	strlen@s^0,w,c
 11128  004FCA  6E04               	movwf	?_strlen^0,c
 11129  004FCC  5007               	movf	(strlen@a+1)^0,w,c
 11130  004FCE  5805               	subwfb	(strlen@s+1)^0,w,c
 11131  004FD0  6E05               	movwf	(?_strlen+1)^0,c
 11132  004FD2  0012               	return		;funcret
 11133  004FD4                     __end_of_strlen:
 11134                           	opt callstack 0
 11135                           
 11136 ;; *************** function _SERIAL_WriteChar *****************
 11137 ;; Defined at:
 11138 ;;		line 28 in file "src/serial.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  data            1    wreg     unsigned char 
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;  data            1    3[COMRAM] unsigned char 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11152 ;;      Params:         0       0       0       0       0       0       0       0       0
 11153 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11155 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11156 ;;Total ram usage:        1 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:    2
 11159 ;; This function calls:
 11160 ;;		Nothing
 11161 ;; This function is called by:
 11162 ;;		_SERIAL_Write
 11163 ;;		_SERIAL_WriteLine
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text37
 11168  005020                     __ptext37:
 11169                           	opt callstack 0
 11170  005020                     _SERIAL_WriteChar:
 11171                           	opt callstack 26
 11172                           
 11173                           ;incstack = 0
 11174                           ;SERIAL_WriteChar@data stored from wreg
 11175  005020  6E04               	movwf	SERIAL_WriteChar@data^0,c
 11176  005022                     l73:
 11177  005022  A2AC               	btfss	172,1,c	;volatile
 11178  005024  EF16  F028         	goto	u4481
 11179  005028  EF18  F028         	goto	u4480
 11180  00502C                     u4481:
 11181  00502C  EF11  F028         	goto	l73
 11182  005030                     u4480:
 11183  005030                     
 11184                           ;src/serial.c: 30:     TXREG = data;
 11185  005030  C004  FFAD         	movff	SERIAL_WriteChar@data,4013	;volatile
 11186  005034  0012               	return		;funcret
 11187  005036                     __end_of_SERIAL_WriteChar:
 11188                           	opt callstack 0
 11189                           
 11190 ;; *************** function _SYSTEM_Init *****************
 11191 ;; Defined at:
 11192 ;;		line 63 in file "src/system.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;		None
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;		None
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  1    wreg      void 
 11199 ;; Registers used:
 11200 ;;		wreg, status,2, status,0, cstack
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11206 ;;      Params:         0       0       0       0       0       0       0       0       0
 11207 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11208 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11209 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11210 ;;Total ram usage:        0 bytes
 11211 ;; Hardware stack levels used:    1
 11212 ;; Hardware stack levels required when called:    4
 11213 ;; This function calls:
 11214 ;;		_BLED_Enable
 11215 ;;		_INTERRUPT_Init
 11216 ;;		_INTERRUPT_Rb
 11217 ;;		_INTERRUPT_Tmr0
 11218 ;;		_KBD_Init
 11219 ;;		_SERIAL_Init
 11220 ;;		_TIMER0_Int
 11221 ;;		_TIMER0_SetPs
 11222 ;; This function is called by:
 11223 ;;		_main
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227                           	psect	text38
 11228  004D80                     __ptext38:
 11229                           	opt callstack 0
 11230  004D80                     _SYSTEM_Init:
 11231                           	opt callstack 26
 11232  004D80  EC1B  F028         	call	_KBD_Init	;wreg free
 11233  004D84  EC23  F028         	call	_INTERRUPT_Init	;wreg free
 11234  004D88  EC2A  F028         	call	_INTERRUPT_Rb	;wreg free
 11235  004D8C  0E00               	movlw	0
 11236  004D8E  6E04               	movwf	TIMER0_Int@t0_cs^0,c
 11237  004D90  0E00               	movlw	0
 11238  004D92  6E05               	movwf	TIMER0_Int@t0_se^0,c
 11239  004D94  0E00               	movlw	0
 11240  004D96  6E06               	movwf	TIMER0_Int@t0_psa^0,c
 11241  004D98  0E00               	movlw	0
 11242  004D9A  EC93  F027         	call	_TIMER0_Int
 11243  004D9E  0E06               	movlw	6
 11244  004DA0  ECB0  F023         	call	_TIMER0_SetPs
 11245  004DA4  EC27  F028         	call	_INTERRUPT_Tmr0	;wreg free
 11246  004DA8  0E00               	movlw	0
 11247  004DAA  ECE7  F026         	call	_BLED_Enable
 11248  004DAE  0E01               	movlw	1
 11249  004DB0  ECE7  F026         	call	_BLED_Enable
 11250  004DB4  0E80               	movlw	128
 11251  004DB6  6E12               	movwf	SERIAL_Init@BAUD^0,c
 11252  004DB8  0E25               	movlw	37
 11253  004DBA  6E13               	movwf	(SERIAL_Init@BAUD+1)^0,c
 11254  004DBC  0E00               	movlw	0
 11255  004DBE  6E14               	movwf	(SERIAL_Init@BAUD+2)^0,c
 11256  004DC0  0E00               	movlw	0
 11257  004DC2  6E15               	movwf	(SERIAL_Init@BAUD+3)^0,c
 11258  004DC4  ECEF  F024         	call	_SERIAL_Init	;wreg free
 11259  004DC8  9095               	bcf	149,0,c	;volatile
 11260  004DCA  9095               	bcf	149,0,c	;volatile
 11261  004DCC  0012               	return		;funcret
 11262  004DCE                     __end_of_SYSTEM_Init:
 11263                           	opt callstack 0
 11264                           
 11265 ;; *************** function _TIMER0_SetPs *****************
 11266 ;; Defined at:
 11267 ;;		line 14 in file "src/timer.c"
 11268 ;; Parameters:    Size  Location     Type
 11269 ;;  prescale        1    wreg     enum E3190
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;  prescale        1    5[COMRAM] enum E3190
 11272 ;; Return value:  Size  Location     Type
 11273 ;;                  1    wreg      void 
 11274 ;; Registers used:
 11275 ;;		wreg, status,2, status,0
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/0
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11281 ;;      Params:         0       0       0       0       0       0       0       0       0
 11282 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11283 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11284 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11285 ;;Total ram usage:        3 bytes
 11286 ;; Hardware stack levels used:    1
 11287 ;; Hardware stack levels required when called:    2
 11288 ;; This function calls:
 11289 ;;		Nothing
 11290 ;; This function is called by:
 11291 ;;		_SYSTEM_Init
 11292 ;; This function uses a non-reentrant model
 11293 ;;
 11294                           
 11295                           	psect	text39
 11296  004760                     __ptext39:
 11297                           	opt callstack 0
 11298  004760                     _TIMER0_SetPs:
 11299                           	opt callstack 27
 11300                           
 11301                           ;incstack = 0
 11302                           ;TIMER0_SetPs@prescale stored from wreg
 11303  004760  6E06               	movwf	TIMER0_SetPs@prescale^0,c
 11304  004762                     
 11305                           ;src/timer.c: 14: void TIMER0_SetPs(PRESCALE prescale);src/timer.c: 15: {;src/timer.c: 1
      +                          6:     switch (prescale)
 11306  004762  EFDB  F023         	goto	l4727
 11307  004766                     l307:
 11308                           
 11309                           ;src/timer.c: 19:             T0CONbits.T0PS0 = 0;
 11310  004766  90D5               	bcf	213,0,c	;volatile
 11311                           
 11312                           ;src/timer.c: 20:             T0CONbits.T0PS1 = 0;
 11313  004768  92D5               	bcf	213,1,c	;volatile
 11314                           
 11315                           ;src/timer.c: 21:             T0CONbits.T0PS2 = 0;
 11316  00476A  94D5               	bcf	213,2,c	;volatile
 11317                           
 11318                           ;src/timer.c: 22:             break;
 11319  00476C  EF08  F024         	goto	l316
 11320  004770                     l309:
 11321                           
 11322                           ;src/timer.c: 24:             T0CONbits.T0PS0 = 1;
 11323  004770  80D5               	bsf	213,0,c	;volatile
 11324                           
 11325                           ;src/timer.c: 25:             T0CONbits.T0PS1 = 0;
 11326  004772  92D5               	bcf	213,1,c	;volatile
 11327                           
 11328                           ;src/timer.c: 26:             T0CONbits.T0PS2 = 0;
 11329  004774  94D5               	bcf	213,2,c	;volatile
 11330                           
 11331                           ;src/timer.c: 27:             break;
 11332  004776  EF08  F024         	goto	l316
 11333  00477A                     l310:
 11334                           
 11335                           ;src/timer.c: 29:             T0CONbits.T0PS0 = 0;
 11336  00477A  90D5               	bcf	213,0,c	;volatile
 11337                           
 11338                           ;src/timer.c: 30:             T0CONbits.T0PS1 = 1;
 11339  00477C  82D5               	bsf	213,1,c	;volatile
 11340                           
 11341                           ;src/timer.c: 31:             T0CONbits.T0PS2 = 0;
 11342  00477E  94D5               	bcf	213,2,c	;volatile
 11343                           
 11344                           ;src/timer.c: 32:             break;
 11345  004780  EF08  F024         	goto	l316
 11346  004784                     l311:
 11347                           
 11348                           ;src/timer.c: 34:             T0CONbits.T0PS0 = 1;
 11349  004784  80D5               	bsf	213,0,c	;volatile
 11350                           
 11351                           ;src/timer.c: 35:             T0CONbits.T0PS1 = 1;
 11352  004786  82D5               	bsf	213,1,c	;volatile
 11353                           
 11354                           ;src/timer.c: 36:             T0CONbits.T0PS2 = 0;
 11355  004788  94D5               	bcf	213,2,c	;volatile
 11356                           
 11357                           ;src/timer.c: 37:             break;
 11358  00478A  EF08  F024         	goto	l316
 11359  00478E                     l312:
 11360                           
 11361                           ;src/timer.c: 39:             T0CONbits.T0PS0 = 0;
 11362  00478E  90D5               	bcf	213,0,c	;volatile
 11363                           
 11364                           ;src/timer.c: 40:             T0CONbits.T0PS1 = 0;
 11365  004790  92D5               	bcf	213,1,c	;volatile
 11366                           
 11367                           ;src/timer.c: 41:             T0CONbits.T0PS2 = 1;
 11368  004792  84D5               	bsf	213,2,c	;volatile
 11369                           
 11370                           ;src/timer.c: 42:             break;
 11371  004794  EF08  F024         	goto	l316
 11372  004798                     l313:
 11373                           
 11374                           ;src/timer.c: 44:             T0CONbits.T0PS0 = 1;
 11375  004798  80D5               	bsf	213,0,c	;volatile
 11376                           
 11377                           ;src/timer.c: 45:             T0CONbits.T0PS1 = 0;
 11378  00479A  92D5               	bcf	213,1,c	;volatile
 11379                           
 11380                           ;src/timer.c: 46:             T0CONbits.T0PS2 = 1;
 11381  00479C  84D5               	bsf	213,2,c	;volatile
 11382                           
 11383                           ;src/timer.c: 47:             break;
 11384  00479E  EF08  F024         	goto	l316
 11385  0047A2                     l314:
 11386                           
 11387                           ;src/timer.c: 49:             T0CONbits.T0PS0 = 0;
 11388  0047A2  90D5               	bcf	213,0,c	;volatile
 11389                           
 11390                           ;src/timer.c: 50:             T0CONbits.T0PS1 = 1;
 11391  0047A4  82D5               	bsf	213,1,c	;volatile
 11392                           
 11393                           ;src/timer.c: 51:             T0CONbits.T0PS2 = 1;
 11394  0047A6  84D5               	bsf	213,2,c	;volatile
 11395                           
 11396                           ;src/timer.c: 52:             break;
 11397  0047A8  EF08  F024         	goto	l316
 11398  0047AC                     l315:
 11399                           
 11400                           ;src/timer.c: 54:             T0CONbits.T0PS0 = 1;
 11401  0047AC  80D5               	bsf	213,0,c	;volatile
 11402                           
 11403                           ;src/timer.c: 55:             T0CONbits.T0PS1 = 1;
 11404  0047AE  82D5               	bsf	213,1,c	;volatile
 11405                           
 11406                           ;src/timer.c: 56:             T0CONbits.T0PS2 = 1;
 11407  0047B0  84D5               	bsf	213,2,c	;volatile
 11408                           
 11409                           ;src/timer.c: 57:     }
 11410  0047B2  EF08  F024         	goto	l316
 11411  0047B6                     l4727:
 11412  0047B6  5006               	movf	TIMER0_SetPs@prescale^0,w,c
 11413  0047B8  6E04               	movwf	??_TIMER0_SetPs^0,c
 11414  0047BA  6A05               	clrf	(??_TIMER0_SetPs+1)^0,c
 11415                           
 11416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11417                           ; Switch size 1, requested type "simple"
 11418                           ; Number of cases is 1, Range of values is 0 to 0
 11419                           ; switch strategies available:
 11420                           ; Name         Instructions Cycles
 11421                           ; simple_byte            4     3 (average)
 11422                           ;	Chosen strategy is simple_byte
 11423  0047BC  5005               	movf	(??_TIMER0_SetPs+1)^0,w,c
 11424  0047BE  0A00               	xorlw	0	; case 0
 11425  0047C0  B4D8               	btfsc	status,2,c
 11426  0047C2  EFE5  F023         	goto	l5941
 11427  0047C6  EF08  F024         	goto	l316
 11428  0047CA                     l5941:
 11429                           
 11430                           ; Switch size 1, requested type "simple"
 11431                           ; Number of cases is 8, Range of values is 0 to 7
 11432                           ; switch strategies available:
 11433                           ; Name         Instructions Cycles
 11434                           ; simple_byte           25    13 (average)
 11435                           ;	Chosen strategy is simple_byte
 11436  0047CA  5004               	movf	??_TIMER0_SetPs^0,w,c
 11437  0047CC  0A00               	xorlw	0	; case 0
 11438  0047CE  B4D8               	btfsc	status,2,c
 11439  0047D0  EFB3  F023         	goto	l307
 11440  0047D4  0A01               	xorlw	1	; case 1
 11441  0047D6  B4D8               	btfsc	status,2,c
 11442  0047D8  EFB8  F023         	goto	l309
 11443  0047DC  0A03               	xorlw	3	; case 2
 11444  0047DE  B4D8               	btfsc	status,2,c
 11445  0047E0  EFBD  F023         	goto	l310
 11446  0047E4  0A01               	xorlw	1	; case 3
 11447  0047E6  B4D8               	btfsc	status,2,c
 11448  0047E8  EFC2  F023         	goto	l311
 11449  0047EC  0A07               	xorlw	7	; case 4
 11450  0047EE  B4D8               	btfsc	status,2,c
 11451  0047F0  EFC7  F023         	goto	l312
 11452  0047F4  0A01               	xorlw	1	; case 5
 11453  0047F6  B4D8               	btfsc	status,2,c
 11454  0047F8  EFCC  F023         	goto	l313
 11455  0047FC  0A03               	xorlw	3	; case 6
 11456  0047FE  B4D8               	btfsc	status,2,c
 11457  004800  EFD1  F023         	goto	l314
 11458  004804  0A01               	xorlw	1	; case 7
 11459  004806  B4D8               	btfsc	status,2,c
 11460  004808  EFD6  F023         	goto	l315
 11461  00480C  EF08  F024         	goto	l316
 11462  004810                     l316:
 11463  004810  0012               	return		;funcret
 11464  004812                     __end_of_TIMER0_SetPs:
 11465                           	opt callstack 0
 11466                           
 11467 ;; *************** function _TIMER0_Int *****************
 11468 ;; Defined at:
 11469 ;;		line 3 in file "src/timer.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;  t0_8b           1    wreg     _Bool 
 11472 ;;  t0_cs           1    3[COMRAM] _Bool 
 11473 ;;  t0_se           1    4[COMRAM] _Bool 
 11474 ;;  t0_psa          1    5[COMRAM] _Bool 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  t0_8b           1    6[COMRAM] _Bool 
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		wreg, status,2
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11486 ;;      Params:         3       0       0       0       0       0       0       0       0
 11487 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11488 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11489 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11490 ;;Total ram usage:        4 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; Hardware stack levels required when called:    2
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_SYSTEM_Init
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           	psect	text40
 11501  004F26                     __ptext40:
 11502                           	opt callstack 0
 11503  004F26                     _TIMER0_Int:
 11504                           	opt callstack 27
 11505                           
 11506                           ;incstack = 0
 11507                           ;TIMER0_Int@t0_8b stored from wreg
 11508  004F26  6E07               	movwf	TIMER0_Int@t0_8b^0,c
 11509  004F28                     
 11510                           ;src/timer.c: 3: void TIMER0_Int(_Bool t0_8b, _Bool t0_cs, _Bool t0_se, _Bool t0_psa);sr
      +                          c/timer.c: 4: {;src/timer.c: 5:     T0CONbits.TMR0ON = 1;
 11511  004F28  8ED5               	bsf	213,7,c	;volatile
 11512  004F2A                     
 11513                           ;src/timer.c: 6:     T0CONbits.T08BIT = t0_8b;
 11514  004F2A  B007               	btfsc	TIMER0_Int@t0_8b^0,0,c
 11515  004F2C  D002               	bra	u4985
 11516  004F2E  9CD5               	bcf	213,6,c	;volatile
 11517  004F30  D001               	bra	u4986
 11518  004F32                     u4985:
 11519  004F32  8CD5               	bsf	213,6,c	;volatile
 11520  004F34                     u4986:
 11521  004F34                     
 11522                           ;src/timer.c: 7:     T0CONbits.T0CS = t0_cs;
 11523  004F34  B004               	btfsc	TIMER0_Int@t0_cs^0,0,c
 11524  004F36  D002               	bra	u4995
 11525  004F38  9AD5               	bcf	213,5,c	;volatile
 11526  004F3A  D001               	bra	u4996
 11527  004F3C                     u4995:
 11528  004F3C  8AD5               	bsf	213,5,c	;volatile
 11529  004F3E                     u4996:
 11530  004F3E                     
 11531                           ;src/timer.c: 8:     T0CONbits.T0SE = t0_se;
 11532  004F3E  B005               	btfsc	TIMER0_Int@t0_se^0,0,c
 11533  004F40  D002               	bra	u5005
 11534  004F42  98D5               	bcf	213,4,c	;volatile
 11535  004F44  D001               	bra	u5006
 11536  004F46                     u5005:
 11537  004F46  88D5               	bsf	213,4,c	;volatile
 11538  004F48                     u5006:
 11539  004F48                     
 11540                           ;src/timer.c: 9:     T0CONbits.PSA = t0_psa;
 11541  004F48  B006               	btfsc	TIMER0_Int@t0_psa^0,0,c
 11542  004F4A  D002               	bra	u5015
 11543  004F4C  96D5               	bcf	213,3,c	;volatile
 11544  004F4E  D001               	bra	u5016
 11545  004F50                     u5015:
 11546  004F50  86D5               	bsf	213,3,c	;volatile
 11547  004F52                     u5016:
 11548  004F52                     
 11549                           ;src/timer.c: 10:     if (t0_cs)
 11550  004F52  5004               	movf	TIMER0_Int@t0_cs^0,w,c
 11551  004F54  B4D8               	btfsc	status,2,c
 11552  004F56  EFAF  F027         	goto	u5021
 11553  004F5A  EFB1  F027         	goto	u5020
 11554  004F5E                     u5021:
 11555  004F5E  EFB2  F027         	goto	l303
 11556  004F62                     u5020:
 11557  004F62                     
 11558                           ;src/timer.c: 11:         TRISAbits.RA4 = 1;
 11559  004F62  8892               	bsf	146,4,c	;volatile
 11560  004F64                     l303:
 11561  004F64  0012               	return		;funcret
 11562  004F66                     __end_of_TIMER0_Int:
 11563                           	opt callstack 0
 11564                           
 11565 ;; *************** function _SERIAL_Init *****************
 11566 ;; Defined at:
 11567 ;;		line 3 in file "src/serial.c"
 11568 ;; Parameters:    Size  Location     Type
 11569 ;;  BAUD            4   17[COMRAM] long 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;  baudrate        2   25[COMRAM] unsigned short 
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		wreg, status,2, status,0, cstack
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11581 ;;      Params:         4       0       0       0       0       0       0       0       0
 11582 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11583 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11584 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11585 ;;Total ram usage:       10 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; Hardware stack levels required when called:    3
 11588 ;; This function calls:
 11589 ;;		___aldiv
 11590 ;; This function is called by:
 11591 ;;		_SYSTEM_Init
 11592 ;; This function uses a non-reentrant model
 11593 ;;
 11594                           
 11595                           	psect	text41
 11596  0049DE                     __ptext41:
 11597                           	opt callstack 0
 11598  0049DE                     _SERIAL_Init:
 11599                           	opt callstack 26
 11600  0049DE                     
 11601                           ;src/serial.c: 3: void SERIAL_Init(long BAUD);src/serial.c: 4: {;src/serial.c: 6:     ui
      +                          nt16_t baudrate = (((48000000/BAUD)/4)-1);
 11602  0049DE  C012  F008         	movff	SERIAL_Init@BAUD,___aldiv@divisor
 11603  0049E2  C013  F009         	movff	SERIAL_Init@BAUD+1,___aldiv@divisor+1
 11604  0049E6  C014  F00A         	movff	SERIAL_Init@BAUD+2,___aldiv@divisor+2
 11605  0049EA  C015  F00B         	movff	SERIAL_Init@BAUD+3,___aldiv@divisor+3
 11606  0049EE  0E00               	movlw	0
 11607  0049F0  6E04               	movwf	___aldiv@dividend^0,c
 11608  0049F2  0E6C               	movlw	108
 11609  0049F4  6E05               	movwf	(___aldiv@dividend+1)^0,c
 11610  0049F6  0EDC               	movlw	220
 11611  0049F8  6E06               	movwf	(___aldiv@dividend+2)^0,c
 11612  0049FA  0E02               	movlw	2
 11613  0049FC  6E07               	movwf	(___aldiv@dividend+3)^0,c
 11614  0049FE  EC70  F020         	call	___aldiv	;wreg free
 11615  004A02  C004  F016         	movff	?___aldiv,_SERIAL_Init$2374
 11616  004A06  C005  F017         	movff	?___aldiv+1,_SERIAL_Init$2374+1
 11617  004A0A  C006  F018         	movff	?___aldiv+2,_SERIAL_Init$2374+2
 11618  004A0E  C007  F019         	movff	?___aldiv+3,_SERIAL_Init$2374+3
 11619                           
 11620                           ;src/serial.c: 3: void SERIAL_Init(long BAUD);src/serial.c: 4: {;src/serial.c: 6:     ui
      +                          nt16_t baudrate = (((48000000/BAUD)/4)-1);
 11621  004A12  C016  F004         	movff	_SERIAL_Init$2374,___aldiv@dividend
 11622  004A16  C017  F005         	movff	_SERIAL_Init$2374+1,___aldiv@dividend+1
 11623  004A1A  C018  F006         	movff	_SERIAL_Init$2374+2,___aldiv@dividend+2
 11624  004A1E  C019  F007         	movff	_SERIAL_Init$2374+3,___aldiv@dividend+3
 11625  004A22  0E04               	movlw	4
 11626  004A24  6E08               	movwf	___aldiv@divisor^0,c
 11627  004A26  0E00               	movlw	0
 11628  004A28  6E09               	movwf	(___aldiv@divisor+1)^0,c
 11629  004A2A  0E00               	movlw	0
 11630  004A2C  6E0A               	movwf	(___aldiv@divisor+2)^0,c
 11631  004A2E  0E00               	movlw	0
 11632  004A30  6E0B               	movwf	(___aldiv@divisor+3)^0,c
 11633  004A32  EC70  F020         	call	___aldiv	;wreg free
 11634  004A36  0EFF               	movlw	255
 11635  004A38  2404               	addwf	?___aldiv^0,w,c
 11636  004A3A  6E1A               	movwf	SERIAL_Init@baudrate^0,c
 11637  004A3C  0EFF               	movlw	255
 11638  004A3E  2005               	addwfc	(?___aldiv+1)^0,w,c
 11639  004A40  6E1B               	movwf	(SERIAL_Init@baudrate+1)^0,c
 11640  004A42                     
 11641                           ;src/serial.c: 8:     TRISCbits.RC6 = 1;
 11642  004A42  8C94               	bsf	148,6,c	;volatile
 11643  004A44                     
 11644                           ;src/serial.c: 9:     TRISCbits.RC7 = 1;
 11645  004A44  8E94               	bsf	148,7,c	;volatile
 11646  004A46                     
 11647                           ;src/serial.c: 12:     RCSTAbits.SPEN = 1;
 11648  004A46  8EAB               	bsf	171,7,c	;volatile
 11649  004A48                     
 11650                           ;src/serial.c: 13:     TXSTAbits.SYNC = 0;
 11651  004A48  98AC               	bcf	172,4,c	;volatile
 11652  004A4A                     
 11653                           ;src/serial.c: 14:     TXSTAbits.BRGH = 1;
 11654  004A4A  84AC               	bsf	172,2,c	;volatile
 11655  004A4C                     
 11656                           ;src/serial.c: 15:     BAUDCONbits.BRG16 = 1;
 11657  004A4C  86B8               	bsf	184,3,c	;volatile
 11658  004A4E                     
 11659                           ;src/serial.c: 16:     SPBRGH = baudrate >> 8;
 11660  004A4E  501B               	movf	(SERIAL_Init@baudrate+1)^0,w,c
 11661  004A50  6EB0               	movwf	176,c	;volatile
 11662  004A52                     
 11663                           ;src/serial.c: 17:     SPBRG = baudrate;
 11664  004A52  C01A  FFAF         	movff	SERIAL_Init@baudrate,4015	;volatile
 11665  004A56                     
 11666                           ;src/serial.c: 20:     TXSTAbits.TX9 = 0;
 11667  004A56  9CAC               	bcf	172,6,c	;volatile
 11668  004A58                     
 11669                           ;src/serial.c: 21:     TXSTAbits.TXEN = 1;
 11670  004A58  8AAC               	bsf	172,5,c	;volatile
 11671  004A5A                     
 11672                           ;src/serial.c: 24:     RCSTAbits.RC9 = 0;
 11673  004A5A  9CAB               	bcf	171,6,c	;volatile
 11674  004A5C                     
 11675                           ;src/serial.c: 25:     RCSTAbits.CREN = 1;
 11676  004A5C  88AB               	bsf	171,4,c	;volatile
 11677  004A5E  0012               	return		;funcret
 11678  004A60                     __end_of_SERIAL_Init:
 11679                           	opt callstack 0
 11680                           
 11681 ;; *************** function ___aldiv *****************
 11682 ;; Defined at:
 11683 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;  dividend        4    3[COMRAM] long 
 11686 ;;  divisor         4    7[COMRAM] long 
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;  quotient        4   13[COMRAM] long 
 11689 ;;  sign            1   12[COMRAM] unsigned char 
 11690 ;;  counter         1   11[COMRAM] unsigned char 
 11691 ;; Return value:  Size  Location     Type
 11692 ;;                  4    3[COMRAM] long 
 11693 ;; Registers used:
 11694 ;;		wreg, status,2, status,0
 11695 ;; Tracked objects:
 11696 ;;		On entry : 0/0
 11697 ;;		On exit  : 0/0
 11698 ;;		Unchanged: 0/0
 11699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11700 ;;      Params:         8       0       0       0       0       0       0       0       0
 11701 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11702 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11703 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11704 ;;Total ram usage:       14 bytes
 11705 ;; Hardware stack levels used:    1
 11706 ;; Hardware stack levels required when called:    2
 11707 ;; This function calls:
 11708 ;;		Nothing
 11709 ;; This function is called by:
 11710 ;;		_SERIAL_Init
 11711 ;;		_itoa
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text42
 11716  0040E0                     __ptext42:
 11717                           	opt callstack 0
 11718  0040E0                     ___aldiv:
 11719                           	opt callstack 26
 11720  0040E0  0E00               	movlw	0
 11721  0040E2  6E0D               	movwf	___aldiv@sign^0,c
 11722  0040E4  BE0B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11723  0040E6  EF79  F020         	goto	u3500
 11724  0040EA  EF77  F020         	goto	u3501
 11725  0040EE                     u3501:
 11726  0040EE  EF83  F020         	goto	l3807
 11727  0040F2                     u3500:
 11728  0040F2  1E0B               	comf	(___aldiv@divisor+3)^0,f,c
 11729  0040F4  1E0A               	comf	(___aldiv@divisor+2)^0,f,c
 11730  0040F6  1E09               	comf	(___aldiv@divisor+1)^0,f,c
 11731  0040F8  6C08               	negf	___aldiv@divisor^0,c
 11732  0040FA  0E00               	movlw	0
 11733  0040FC  2209               	addwfc	(___aldiv@divisor+1)^0,f,c
 11734  0040FE  220A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11735  004100  220B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11736  004102  0E01               	movlw	1
 11737  004104  6E0D               	movwf	___aldiv@sign^0,c
 11738  004106                     l3807:
 11739  004106  BE07               	btfsc	(___aldiv@dividend+3)^0,7,c
 11740  004108  EF8A  F020         	goto	u3510
 11741  00410C  EF88  F020         	goto	u3511
 11742  004110                     u3511:
 11743  004110  EF94  F020         	goto	l3813
 11744  004114                     u3510:
 11745  004114  1E07               	comf	(___aldiv@dividend+3)^0,f,c
 11746  004116  1E06               	comf	(___aldiv@dividend+2)^0,f,c
 11747  004118  1E05               	comf	(___aldiv@dividend+1)^0,f,c
 11748  00411A  6C04               	negf	___aldiv@dividend^0,c
 11749  00411C  0E00               	movlw	0
 11750  00411E  2205               	addwfc	(___aldiv@dividend+1)^0,f,c
 11751  004120  2206               	addwfc	(___aldiv@dividend+2)^0,f,c
 11752  004122  2207               	addwfc	(___aldiv@dividend+3)^0,f,c
 11753  004124  0E01               	movlw	1
 11754  004126  1A0D               	xorwf	___aldiv@sign^0,f,c
 11755  004128                     l3813:
 11756  004128  0E00               	movlw	0
 11757  00412A  6E0E               	movwf	___aldiv@quotient^0,c
 11758  00412C  0E00               	movlw	0
 11759  00412E  6E0F               	movwf	(___aldiv@quotient+1)^0,c
 11760  004130  0E00               	movlw	0
 11761  004132  6E10               	movwf	(___aldiv@quotient+2)^0,c
 11762  004134  0E00               	movlw	0
 11763  004136  6E11               	movwf	(___aldiv@quotient+3)^0,c
 11764  004138  5008               	movf	___aldiv@divisor^0,w,c
 11765  00413A  1009               	iorwf	(___aldiv@divisor+1)^0,w,c
 11766  00413C  100A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11767  00413E  100B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11768  004140  B4D8               	btfsc	status,2,c
 11769  004142  EFA5  F020         	goto	u3521
 11770  004146  EFA7  F020         	goto	u3520
 11771  00414A                     u3521:
 11772  00414A  EFDD  F020         	goto	l3835
 11773  00414E                     u3520:
 11774  00414E  0E01               	movlw	1
 11775  004150  6E0C               	movwf	___aldiv@counter^0,c
 11776  004152  EFB1  F020         	goto	l3821
 11777  004156                     l3819:
 11778  004156  90D8               	bcf	status,0,c
 11779  004158  3608               	rlcf	___aldiv@divisor^0,f,c
 11780  00415A  3609               	rlcf	(___aldiv@divisor+1)^0,f,c
 11781  00415C  360A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11782  00415E  360B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11783  004160  2A0C               	incf	___aldiv@counter^0,f,c
 11784  004162                     l3821:
 11785  004162  AE0B               	btfss	(___aldiv@divisor+3)^0,7,c
 11786  004164  EFB6  F020         	goto	u3531
 11787  004168  EFB8  F020         	goto	u3530
 11788  00416C                     u3531:
 11789  00416C  EFAB  F020         	goto	l3819
 11790  004170                     u3530:
 11791  004170                     l3823:
 11792  004170  90D8               	bcf	status,0,c
 11793  004172  360E               	rlcf	___aldiv@quotient^0,f,c
 11794  004174  360F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11795  004176  3610               	rlcf	(___aldiv@quotient+2)^0,f,c
 11796  004178  3611               	rlcf	(___aldiv@quotient+3)^0,f,c
 11797  00417A  5008               	movf	___aldiv@divisor^0,w,c
 11798  00417C  5C04               	subwf	___aldiv@dividend^0,w,c
 11799  00417E  5009               	movf	(___aldiv@divisor+1)^0,w,c
 11800  004180  5805               	subwfb	(___aldiv@dividend+1)^0,w,c
 11801  004182  500A               	movf	(___aldiv@divisor+2)^0,w,c
 11802  004184  5806               	subwfb	(___aldiv@dividend+2)^0,w,c
 11803  004186  500B               	movf	(___aldiv@divisor+3)^0,w,c
 11804  004188  5807               	subwfb	(___aldiv@dividend+3)^0,w,c
 11805  00418A  A0D8               	btfss	status,0,c
 11806  00418C  EFCA  F020         	goto	u3541
 11807  004190  EFCC  F020         	goto	u3540
 11808  004194                     u3541:
 11809  004194  EFD5  F020         	goto	l3831
 11810  004198                     u3540:
 11811  004198  5008               	movf	___aldiv@divisor^0,w,c
 11812  00419A  5E04               	subwf	___aldiv@dividend^0,f,c
 11813  00419C  5009               	movf	(___aldiv@divisor+1)^0,w,c
 11814  00419E  5A05               	subwfb	(___aldiv@dividend+1)^0,f,c
 11815  0041A0  500A               	movf	(___aldiv@divisor+2)^0,w,c
 11816  0041A2  5A06               	subwfb	(___aldiv@dividend+2)^0,f,c
 11817  0041A4  500B               	movf	(___aldiv@divisor+3)^0,w,c
 11818  0041A6  5A07               	subwfb	(___aldiv@dividend+3)^0,f,c
 11819  0041A8  800E               	bsf	___aldiv@quotient^0,0,c
 11820  0041AA                     l3831:
 11821  0041AA  90D8               	bcf	status,0,c
 11822  0041AC  320B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11823  0041AE  320A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11824  0041B0  3209               	rrcf	(___aldiv@divisor+1)^0,f,c
 11825  0041B2  3208               	rrcf	___aldiv@divisor^0,f,c
 11826  0041B4  2E0C               	decfsz	___aldiv@counter^0,f,c
 11827  0041B6  EFB8  F020         	goto	l3823
 11828  0041BA                     l3835:
 11829  0041BA  500D               	movf	___aldiv@sign^0,w,c
 11830  0041BC  B4D8               	btfsc	status,2,c
 11831  0041BE  EFE3  F020         	goto	u3551
 11832  0041C2  EFE5  F020         	goto	u3550
 11833  0041C6                     u3551:
 11834  0041C6  EFED  F020         	goto	l3839
 11835  0041CA                     u3550:
 11836  0041CA  1E11               	comf	(___aldiv@quotient+3)^0,f,c
 11837  0041CC  1E10               	comf	(___aldiv@quotient+2)^0,f,c
 11838  0041CE  1E0F               	comf	(___aldiv@quotient+1)^0,f,c
 11839  0041D0  6C0E               	negf	___aldiv@quotient^0,c
 11840  0041D2  0E00               	movlw	0
 11841  0041D4  220F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11842  0041D6  2210               	addwfc	(___aldiv@quotient+2)^0,f,c
 11843  0041D8  2211               	addwfc	(___aldiv@quotient+3)^0,f,c
 11844  0041DA                     l3839:
 11845  0041DA  C00E  F004         	movff	___aldiv@quotient,?___aldiv
 11846  0041DE  C00F  F005         	movff	___aldiv@quotient+1,?___aldiv+1
 11847  0041E2  C010  F006         	movff	___aldiv@quotient+2,?___aldiv+2
 11848  0041E6  C011  F007         	movff	___aldiv@quotient+3,?___aldiv+3
 11849  0041EA  0012               	return		;funcret
 11850  0041EC                     __end_of___aldiv:
 11851                           	opt callstack 0
 11852                           
 11853 ;; *************** function _KBD_Init *****************
 11854 ;; Defined at:
 11855 ;;		line 13 in file "src/kbd.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;		None
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;		None
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  1    wreg      void 
 11862 ;; Registers used:
 11863 ;;		wreg, status,2
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11869 ;;      Params:         0       0       0       0       0       0       0       0       0
 11870 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11871 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11872 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11873 ;;Total ram usage:        0 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:    2
 11876 ;; This function calls:
 11877 ;;		Nothing
 11878 ;; This function is called by:
 11879 ;;		_SYSTEM_Init
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text43
 11884  005036                     __ptext43:
 11885                           	opt callstack 0
 11886  005036                     _KBD_Init:
 11887                           	opt callstack 27
 11888  005036                     
 11889                           ;src/kbd.c: 15:     PORTB = 0x00;
 11890  005036  0E00               	movlw	0
 11891  005038  6E81               	movwf	129,c	;volatile
 11892                           
 11893                           ;src/kbd.c: 16:     TRISB = 0XF0;
 11894  00503A  0EF0               	movlw	240
 11895  00503C  6E93               	movwf	147,c	;volatile
 11896                           
 11897                           ;src/kbd.c: 17:     LATB = 0x00;
 11898  00503E  0E00               	movlw	0
 11899  005040  6E8A               	movwf	138,c	;volatile
 11900  005042                     
 11901                           ;src/kbd.c: 18:     INTCON2bits.RBPU = 0;
 11902  005042  9EF1               	bcf	241,7,c	;volatile
 11903  005044  0012               	return		;funcret
 11904  005046                     __end_of_KBD_Init:
 11905                           	opt callstack 0
 11906                           
 11907 ;; *************** function _INTERRUPT_Tmr0 *****************
 11908 ;; Defined at:
 11909 ;;		line 44 in file "src/interrupts.c"
 11910 ;; Parameters:    Size  Location     Type
 11911 ;;		None
 11912 ;; Auto vars:     Size  Location     Type
 11913 ;;		None
 11914 ;; Return value:  Size  Location     Type
 11915 ;;                  1    wreg      void 
 11916 ;; Registers used:
 11917 ;;		None
 11918 ;; Tracked objects:
 11919 ;;		On entry : 0/0
 11920 ;;		On exit  : 0/0
 11921 ;;		Unchanged: 0/0
 11922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11923 ;;      Params:         0       0       0       0       0       0       0       0       0
 11924 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11925 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11926 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11927 ;;Total ram usage:        0 bytes
 11928 ;; Hardware stack levels used:    1
 11929 ;; Hardware stack levels required when called:    2
 11930 ;; This function calls:
 11931 ;;		Nothing
 11932 ;; This function is called by:
 11933 ;;		_SYSTEM_Init
 11934 ;; This function uses a non-reentrant model
 11935 ;;
 11936                           
 11937                           	psect	text44
 11938  00504E                     __ptext44:
 11939                           	opt callstack 0
 11940  00504E                     _INTERRUPT_Tmr0:
 11941                           	opt callstack 27
 11942  00504E                     
 11943                           ;src/interrupts.c: 46:  INTCONbits.TMR0IE = 1;
 11944  00504E  8AF2               	bsf	242,5,c	;volatile
 11945                           
 11946                           ;src/interrupts.c: 47:  INTCONbits.TMR0IF = 0;
 11947  005050  94F2               	bcf	242,2,c	;volatile
 11948  005052  0012               	return		;funcret
 11949  005054                     __end_of_INTERRUPT_Tmr0:
 11950                           	opt callstack 0
 11951                           
 11952 ;; *************** function _INTERRUPT_Rb *****************
 11953 ;; Defined at:
 11954 ;;		line 37 in file "src/interrupts.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;		None
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;		None
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      void 
 11961 ;; Registers used:
 11962 ;;		None
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11968 ;;      Params:         0       0       0       0       0       0       0       0       0
 11969 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11970 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11971 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11972 ;;Total ram usage:        0 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; Hardware stack levels required when called:    2
 11975 ;; This function calls:
 11976 ;;		Nothing
 11977 ;; This function is called by:
 11978 ;;		_SYSTEM_Init
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           	psect	text45
 11983  005054                     __ptext45:
 11984                           	opt callstack 0
 11985  005054                     _INTERRUPT_Rb:
 11986                           	opt callstack 27
 11987  005054                     
 11988                           ;src/interrupts.c: 39:  INTCONbits.RBIE = 1;
 11989  005054  86F2               	bsf	242,3,c	;volatile
 11990                           
 11991                           ;src/interrupts.c: 40:  INTCONbits.RBIF = 0;
 11992  005056  90F2               	bcf	242,0,c	;volatile
 11993  005058  0012               	return		;funcret
 11994  00505A                     __end_of_INTERRUPT_Rb:
 11995                           	opt callstack 0
 11996                           
 11997 ;; *************** function _INTERRUPT_Init *****************
 11998 ;; Defined at:
 11999 ;;		line 3 in file "src/interrupts.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;		None
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;		None
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      void 
 12006 ;; Registers used:
 12007 ;;		None
 12008 ;; Tracked objects:
 12009 ;;		On entry : 0/0
 12010 ;;		On exit  : 0/0
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12013 ;;      Params:         0       0       0       0       0       0       0       0       0
 12014 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12015 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12016 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12017 ;;Total ram usage:        0 bytes
 12018 ;; Hardware stack levels used:    1
 12019 ;; Hardware stack levels required when called:    2
 12020 ;; This function calls:
 12021 ;;		Nothing
 12022 ;; This function is called by:
 12023 ;;		_SYSTEM_Init
 12024 ;; This function uses a non-reentrant model
 12025 ;;
 12026                           
 12027                           	psect	text46
 12028  005046                     __ptext46:
 12029                           	opt callstack 0
 12030  005046                     _INTERRUPT_Init:
 12031                           	opt callstack 27
 12032  005046                     
 12033                           ;src/interrupts.c: 5:  RCONbits.IPEN = 0;
 12034  005046  9ED0               	bcf	208,7,c	;volatile
 12035                           
 12036                           ;src/interrupts.c: 7:     INTCONbits.GIEH = 1;
 12037  005048  8EF2               	bsf	242,7,c	;volatile
 12038                           
 12039                           ;src/interrupts.c: 8:     INTCONbits.GIEL = 1;
 12040  00504A  8CF2               	bsf	242,6,c	;volatile
 12041  00504C  0012               	return		;funcret
 12042  00504E                     __end_of_INTERRUPT_Init:
 12043                           	opt callstack 0
 12044                           
 12045 ;; *************** function _BLED_Enable *****************
 12046 ;; Defined at:
 12047 ;;		line 79 in file "src/leds.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;  biled           1    wreg     enum E3166
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  biled           1    5[COMRAM] enum E3166
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      void 
 12054 ;; Registers used:
 12055 ;;		wreg, status,2, status,0
 12056 ;; Tracked objects:
 12057 ;;		On entry : 0/0
 12058 ;;		On exit  : 0/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12061 ;;      Params:         0       0       0       0       0       0       0       0       0
 12062 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12063 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12064 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12065 ;;Total ram usage:        3 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:    2
 12068 ;; This function calls:
 12069 ;;		Nothing
 12070 ;; This function is called by:
 12071 ;;		_SYSTEM_Init
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075                           	psect	text47
 12076  004DCE                     __ptext47:
 12077                           	opt callstack 0
 12078  004DCE                     _BLED_Enable:
 12079                           	opt callstack 27
 12080                           
 12081                           ;incstack = 0
 12082                           ;BLED_Enable@biled stored from wreg
 12083  004DCE  6E06               	movwf	BLED_Enable@biled^0,c
 12084  004DD0                     
 12085                           ;src/leds.c: 79: void BLED_Enable(BILED biled);src/leds.c: 80: {;src/leds.c: 81:     swi
      +                          tch (biled)
 12086  004DD0  EFF6  F026         	goto	l4737
 12087  004DD4                     l272:
 12088                           
 12089                           ;src/leds.c: 84:             TRISEbits.RE1 = 0;
 12090  004DD4  9296               	bcf	150,1,c	;volatile
 12091                           
 12092                           ;src/leds.c: 85:             TRISEbits.RE0 = 0;
 12093  004DD6  9096               	bcf	150,0,c	;volatile
 12094                           
 12095                           ;src/leds.c: 86:             LATEbits.LATE1 = 0;
 12096  004DD8  928D               	bcf	141,1,c	;volatile
 12097                           
 12098                           ;src/leds.c: 87:             LATEbits.LATE0 = 0;
 12099  004DDA  908D               	bcf	141,0,c	;volatile
 12100                           
 12101                           ;src/leds.c: 88:             break;
 12102  004DDC  EF0B  F027         	goto	l275
 12103  004DE0                     l274:
 12104                           
 12105                           ;src/leds.c: 90:             TRISCbits.RC2 = 0;
 12106  004DE0  9494               	bcf	148,2,c	;volatile
 12107                           
 12108                           ;src/leds.c: 91:             TRISCbits.RC1 = 0;
 12109  004DE2  9294               	bcf	148,1,c	;volatile
 12110                           
 12111                           ;src/leds.c: 92:             LATCbits.LATC2 = 0;
 12112  004DE4  948B               	bcf	139,2,c	;volatile
 12113                           
 12114                           ;src/leds.c: 93:             LATCbits.LATC1 = 0;
 12115  004DE6  928B               	bcf	139,1,c	;volatile
 12116                           
 12117                           ;src/leds.c: 94:     }
 12118  004DE8  EF0B  F027         	goto	l275
 12119  004DEC                     l4737:
 12120  004DEC  5006               	movf	BLED_Enable@biled^0,w,c
 12121  004DEE  6E04               	movwf	??_BLED_Enable^0,c
 12122  004DF0  6A05               	clrf	(??_BLED_Enable+1)^0,c
 12123                           
 12124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12125                           ; Switch size 1, requested type "simple"
 12126                           ; Number of cases is 1, Range of values is 0 to 0
 12127                           ; switch strategies available:
 12128                           ; Name         Instructions Cycles
 12129                           ; simple_byte            4     3 (average)
 12130                           ;	Chosen strategy is simple_byte
 12131  004DF2  5005               	movf	(??_BLED_Enable+1)^0,w,c
 12132  004DF4  0A00               	xorlw	0	; case 0
 12133  004DF6  B4D8               	btfsc	status,2,c
 12134  004DF8  EF00  F027         	goto	l5943
 12135  004DFC  EF0B  F027         	goto	l275
 12136  004E00                     l5943:
 12137                           
 12138                           ; Switch size 1, requested type "simple"
 12139                           ; Number of cases is 2, Range of values is 0 to 1
 12140                           ; switch strategies available:
 12141                           ; Name         Instructions Cycles
 12142                           ; simple_byte            7     4 (average)
 12143                           ;	Chosen strategy is simple_byte
 12144  004E00  5004               	movf	??_BLED_Enable^0,w,c
 12145  004E02  0A00               	xorlw	0	; case 0
 12146  004E04  B4D8               	btfsc	status,2,c
 12147  004E06  EFEA  F026         	goto	l272
 12148  004E0A  0A01               	xorlw	1	; case 1
 12149  004E0C  B4D8               	btfsc	status,2,c
 12150  004E0E  EFF0  F026         	goto	l274
 12151  004E12  EF0B  F027         	goto	l275
 12152  004E16                     l275:
 12153  004E16  0012               	return		;funcret
 12154  004E18                     __end_of_BLED_Enable:
 12155                           	opt callstack 0
 12156                           
 12157 ;; *************** function _KBD_GetChar *****************
 12158 ;; Defined at:
 12159 ;;		line 21 in file "src/kbd.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;		None
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;  col             2   10[COMRAM] int 
 12164 ;;  row             2    8[COMRAM] int 
 12165 ;;  key             1    7[COMRAM] unsigned char 
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1    wreg      unsigned char 
 12168 ;; Registers used:
 12169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12175 ;;      Params:         0       0       0       0       0       0       0       0       0
 12176 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12177 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12178 ;;      Totals:         9       0       0       0       0       0       0       0       0
 12179 ;;Total ram usage:        9 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:    2
 12182 ;; This function calls:
 12183 ;;		Nothing
 12184 ;; This function is called by:
 12185 ;;		_main
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           	psect	text48
 12190  0036F6                     __ptext48:
 12191                           	opt callstack 0
 12192  0036F6                     _KBD_GetChar:
 12193                           	opt callstack 28
 12194  0036F6                     
 12195                           ;src/kbd.c: 24:     int row = 0, col = 0;
 12196  0036F6  0E00               	movlw	0
 12197  0036F8  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12198  0036FA  0E00               	movlw	0
 12199  0036FC  6E09               	movwf	KBD_GetChar@row^0,c
 12200  0036FE  0E00               	movlw	0
 12201  003700  6E0C               	movwf	(KBD_GetChar@col+1)^0,c
 12202  003702  0E00               	movlw	0
 12203  003704  6E0B               	movwf	KBD_GetChar@col^0,c
 12204                           
 12205                           ;src/kbd.c: 25:     reqKey = 1;
 12206  003706  0E01               	movlw	1
 12207  003708  6E54               	movwf	_reqKey^0,c
 12208  00370A                     l5703:
 12209  00370A  5054               	movf	_reqKey^0,w,c
 12210  00370C  A4D8               	btfss	status,2,c
 12211  00370E  EF8B  F01B         	goto	u6491
 12212  003712  EF8D  F01B         	goto	u6490
 12213  003716                     u6491:
 12214  003716  EF85  F01B         	goto	l5703
 12215  00371A                     u6490:
 12216  00371A                     
 12217                           ;src/kbd.c: 27:     for(col = 0; col <= 3; col++)
 12218  00371A  0E00               	movlw	0
 12219  00371C  6E0C               	movwf	(KBD_GetChar@col+1)^0,c
 12220  00371E  0E00               	movlw	0
 12221  003720  6E0B               	movwf	KBD_GetChar@col^0,c
 12222  003722                     l5711:
 12223                           
 12224                           ;src/kbd.c: 28:     {;src/kbd.c: 29:         LATBbits.LATB3 = col == 0? 0:1;
 12225  003722  500B               	movf	KBD_GetChar@col^0,w,c
 12226  003724  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12227  003726  A4D8               	btfss	status,2,c
 12228  003728  EF98  F01B         	goto	u6501
 12229  00372C  EF9C  F01B         	goto	u6500
 12230  003730                     u6501:
 12231  003730  6A04               	clrf	??_KBD_GetChar^0,c
 12232  003732  2A04               	incf	??_KBD_GetChar^0,f,c
 12233  003734  EF9D  F01B         	goto	u6518
 12234  003738                     u6500:
 12235  003738  6A04               	clrf	??_KBD_GetChar^0,c
 12236  00373A                     u6518:
 12237  00373A  4604               	rlncf	??_KBD_GetChar^0,f,c
 12238  00373C  4604               	rlncf	??_KBD_GetChar^0,f,c
 12239  00373E  4604               	rlncf	??_KBD_GetChar^0,f,c
 12240  003740  508A               	movf	138,w,c	;volatile
 12241  003742  1804               	xorwf	??_KBD_GetChar^0,w,c
 12242  003744  0BF7               	andlw	-9
 12243  003746  1804               	xorwf	??_KBD_GetChar^0,w,c
 12244  003748  6E8A               	movwf	138,c	;volatile
 12245                           
 12246                           ;src/kbd.c: 30:         LATBbits.LATB2 = col == 1? 0:1;
 12247  00374A  040B               	decf	KBD_GetChar@col^0,w,c
 12248  00374C  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12249  00374E  A4D8               	btfss	status,2,c
 12250  003750  EFAC  F01B         	goto	u6521
 12251  003754  EFB0  F01B         	goto	u6520
 12252  003758                     u6521:
 12253  003758  6A04               	clrf	??_KBD_GetChar^0,c
 12254  00375A  2A04               	incf	??_KBD_GetChar^0,f,c
 12255  00375C  EFB1  F01B         	goto	u6538
 12256  003760                     u6520:
 12257  003760  6A04               	clrf	??_KBD_GetChar^0,c
 12258  003762                     u6538:
 12259  003762  4604               	rlncf	??_KBD_GetChar^0,f,c
 12260  003764  4604               	rlncf	??_KBD_GetChar^0,f,c
 12261  003766  508A               	movf	138,w,c	;volatile
 12262  003768  1804               	xorwf	??_KBD_GetChar^0,w,c
 12263  00376A  0BFB               	andlw	-5
 12264  00376C  1804               	xorwf	??_KBD_GetChar^0,w,c
 12265  00376E  6E8A               	movwf	138,c	;volatile
 12266                           
 12267                           ;src/kbd.c: 31:         LATBbits.LATB1 = col == 2? 0:1;
 12268  003770  0E02               	movlw	2
 12269  003772  180B               	xorwf	KBD_GetChar@col^0,w,c
 12270  003774  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12271  003776  A4D8               	btfss	status,2,c
 12272  003778  EFC0  F01B         	goto	u6541
 12273  00377C  EFC4  F01B         	goto	u6540
 12274  003780                     u6541:
 12275  003780  6A04               	clrf	??_KBD_GetChar^0,c
 12276  003782  2A04               	incf	??_KBD_GetChar^0,f,c
 12277  003784  EFC5  F01B         	goto	u6558
 12278  003788                     u6540:
 12279  003788  6A04               	clrf	??_KBD_GetChar^0,c
 12280  00378A                     u6558:
 12281  00378A  4604               	rlncf	??_KBD_GetChar^0,f,c
 12282  00378C  508A               	movf	138,w,c	;volatile
 12283  00378E  1804               	xorwf	??_KBD_GetChar^0,w,c
 12284  003790  0BFD               	andlw	-3
 12285  003792  1804               	xorwf	??_KBD_GetChar^0,w,c
 12286  003794  6E8A               	movwf	138,c	;volatile
 12287                           
 12288                           ;src/kbd.c: 32:         LATBbits.LATB0 = col == 3? 0:1;
 12289  003796  0E03               	movlw	3
 12290  003798  180B               	xorwf	KBD_GetChar@col^0,w,c
 12291  00379A  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12292  00379C  A4D8               	btfss	status,2,c
 12293  00379E  EFD3  F01B         	goto	u6561
 12294  0037A2  EFD7  F01B         	goto	u6560
 12295  0037A6                     u6561:
 12296  0037A6  6A04               	clrf	??_KBD_GetChar^0,c
 12297  0037A8  2A04               	incf	??_KBD_GetChar^0,f,c
 12298  0037AA  EFD8  F01B         	goto	u6578
 12299  0037AE                     u6560:
 12300  0037AE  6A04               	clrf	??_KBD_GetChar^0,c
 12301  0037B0                     u6578:
 12302  0037B0  508A               	movf	138,w,c	;volatile
 12303  0037B2  1804               	xorwf	??_KBD_GetChar^0,w,c
 12304  0037B4  0BFE               	andlw	-2
 12305  0037B6  1804               	xorwf	??_KBD_GetChar^0,w,c
 12306  0037B8  6E8A               	movwf	138,c	;volatile
 12307  0037BA                     
 12308                           ;src/kbd.c: 33:         _delay((unsigned long)((10)*(48000000/4000.0)));
 12309  0037BA  0E9C               	movlw	156
 12310  0037BC  6E04               	movwf	??_KBD_GetChar^0,c
 12311  0037BE  0ED7               	movlw	215
 12312  0037C0                     u6757:
 12313  0037C0  2EE8               	decfsz	wreg,f,c
 12314  0037C2  D7FE               	bra	u6757
 12315  0037C4  2E04               	decfsz	??_KBD_GetChar^0,f,c
 12316  0037C6  D7FC               	bra	u6757
 12317  0037C8  F000               	nop	
 12318  0037CA                     
 12319                           ;src/kbd.c: 35:         if(!PORTBbits.RB7)
 12320  0037CA  BE81               	btfsc	129,7,c	;volatile
 12321  0037CC  EFEA  F01B         	goto	u6581
 12322  0037D0  EFEC  F01B         	goto	u6580
 12323  0037D4                     u6581:
 12324  0037D4  EFF2  F01B         	goto	l190
 12325  0037D8                     u6580:
 12326  0037D8                     
 12327                           ;src/kbd.c: 36:         {;src/kbd.c: 37:             row = 0;
 12328  0037D8  0E00               	movlw	0
 12329  0037DA  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12330  0037DC  0E00               	movlw	0
 12331  0037DE  6E09               	movwf	KBD_GetChar@row^0,c
 12332                           
 12333                           ;src/kbd.c: 38:             break;
 12334  0037E0  EF37  F01C         	goto	l5739
 12335  0037E4                     l190:
 12336  0037E4  BC81               	btfsc	129,6,c	;volatile
 12337  0037E6  EFF7  F01B         	goto	u6591
 12338  0037EA  EFF9  F01B         	goto	u6590
 12339  0037EE                     u6591:
 12340  0037EE  EFFF  F01B         	goto	l192
 12341  0037F2                     u6590:
 12342  0037F2                     
 12343                           ;src/kbd.c: 41:         {;src/kbd.c: 42:             row = 1;
 12344  0037F2  0E00               	movlw	0
 12345  0037F4  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12346  0037F6  0E01               	movlw	1
 12347  0037F8  6E09               	movwf	KBD_GetChar@row^0,c
 12348                           
 12349                           ;src/kbd.c: 43:             break;
 12350  0037FA  EF37  F01C         	goto	l5739
 12351  0037FE                     l192:
 12352  0037FE  BA81               	btfsc	129,5,c	;volatile
 12353  003800  EF04  F01C         	goto	u6601
 12354  003804  EF06  F01C         	goto	u6600
 12355  003808                     u6601:
 12356  003808  EF0C  F01C         	goto	l194
 12357  00380C                     u6600:
 12358  00380C                     
 12359                           ;src/kbd.c: 46:         {;src/kbd.c: 47:             row = 2;
 12360  00380C  0E00               	movlw	0
 12361  00380E  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12362  003810  0E02               	movlw	2
 12363  003812  6E09               	movwf	KBD_GetChar@row^0,c
 12364                           
 12365                           ;src/kbd.c: 48:             break;
 12366  003814  EF37  F01C         	goto	l5739
 12367  003818                     l194:
 12368  003818  B881               	btfsc	129,4,c	;volatile
 12369  00381A  EF11  F01C         	goto	u6611
 12370  00381E  EF13  F01C         	goto	u6610
 12371  003822                     u6611:
 12372  003822  EF19  F01C         	goto	l193
 12373  003826                     u6610:
 12374  003826                     
 12375                           ;src/kbd.c: 51:         {;src/kbd.c: 52:             row = 3;
 12376  003826  0E00               	movlw	0
 12377  003828  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12378  00382A  0E03               	movlw	3
 12379  00382C  6E09               	movwf	KBD_GetChar@row^0,c
 12380                           
 12381                           ;src/kbd.c: 53:             break;
 12382  00382E  EF37  F01C         	goto	l5739
 12383  003832                     l193:
 12384  003832                     
 12385                           ;src/kbd.c: 55:         if (col == 3)
 12386  003832  0E03               	movlw	3
 12387  003834  180B               	xorwf	KBD_GetChar@col^0,w,c
 12388  003836  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12389  003838  A4D8               	btfss	status,2,c
 12390  00383A  EF21  F01C         	goto	u6621
 12391  00383E  EF23  F01C         	goto	u6620
 12392  003842                     u6621:
 12393  003842  EF27  F01C         	goto	l5735
 12394  003846                     u6620:
 12395  003846                     
 12396                           ;src/kbd.c: 56:             row = 4;
 12397  003846  0E00               	movlw	0
 12398  003848  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12399  00384A  0E04               	movlw	4
 12400  00384C  6E09               	movwf	KBD_GetChar@row^0,c
 12401  00384E                     l5735:
 12402                           
 12403                           ;src/kbd.c: 57:     }
 12404  00384E  4A0B               	infsnz	KBD_GetChar@col^0,f,c
 12405  003850  2A0C               	incf	(KBD_GetChar@col+1)^0,f,c
 12406  003852  BE0C               	btfsc	(KBD_GetChar@col+1)^0,7,c
 12407  003854  EF35  F01C         	goto	u6631
 12408  003858  500C               	movf	(KBD_GetChar@col+1)^0,w,c
 12409  00385A  E109               	bnz	u6630
 12410  00385C  0E04               	movlw	4
 12411  00385E  5C0B               	subwf	KBD_GetChar@col^0,w,c
 12412  003860  A0D8               	btfss	status,0,c
 12413  003862  EF35  F01C         	goto	u6631
 12414  003866  EF37  F01C         	goto	u6630
 12415  00386A                     u6631:
 12416  00386A  EF91  F01B         	goto	l5711
 12417  00386E                     u6630:
 12418  00386E                     l5739:
 12419                           
 12420                           ;src/kbd.c: 58:     key = keyPad[row][col];
 12421  00386E  C009  F004         	movff	KBD_GetChar@row,??_KBD_GetChar
 12422  003872  C00A  F005         	movff	KBD_GetChar@row+1,??_KBD_GetChar+1
 12423  003876  90D8               	bcf	status,0,c
 12424  003878  3604               	rlcf	??_KBD_GetChar^0,f,c
 12425  00387A  3605               	rlcf	(??_KBD_GetChar+1)^0,f,c
 12426  00387C  90D8               	bcf	status,0,c
 12427  00387E  3604               	rlcf	??_KBD_GetChar^0,f,c
 12428  003880  3605               	rlcf	(??_KBD_GetChar+1)^0,f,c
 12429  003882  0EA0               	movlw	low _keyPad
 12430  003884  6E06               	movwf	(??_KBD_GetChar+2)^0,c
 12431  003886  0E00               	movlw	high _keyPad
 12432  003888  6E07               	movwf	(??_KBD_GetChar+3)^0,c
 12433  00388A  5004               	movf	??_KBD_GetChar^0,w,c
 12434  00388C  2606               	addwf	(??_KBD_GetChar+2)^0,f,c
 12435  00388E  5005               	movf	(??_KBD_GetChar+1)^0,w,c
 12436  003890  2207               	addwfc	(??_KBD_GetChar+3)^0,f,c
 12437  003892  500B               	movf	KBD_GetChar@col^0,w,c
 12438  003894  2406               	addwf	(??_KBD_GetChar+2)^0,w,c
 12439  003896  6ED9               	movwf	fsr2l,c
 12440  003898  500C               	movf	(KBD_GetChar@col+1)^0,w,c
 12441  00389A  2007               	addwfc	(??_KBD_GetChar+3)^0,w,c
 12442  00389C  6EDA               	movwf	fsr2h,c
 12443  00389E  50DF               	movf	indf2,w,c
 12444  0038A0  6E08               	movwf	KBD_GetChar@key^0,c
 12445  0038A2                     
 12446                           ;src/kbd.c: 60:     LATBbits.LATB3 = 0;
 12447  0038A2  968A               	bcf	138,3,c	;volatile
 12448  0038A4                     
 12449                           ;src/kbd.c: 61:     LATBbits.LATB2 = 0;
 12450  0038A4  948A               	bcf	138,2,c	;volatile
 12451  0038A6                     
 12452                           ;src/kbd.c: 62:     LATBbits.LATB1 = 0;
 12453  0038A6  928A               	bcf	138,1,c	;volatile
 12454  0038A8                     
 12455                           ;src/kbd.c: 63:     LATBbits.LATB0 = 0;
 12456  0038A8  908A               	bcf	138,0,c	;volatile
 12457  0038AA                     
 12458                           ;src/kbd.c: 64:     return key;
 12459  0038AA  5008               	movf	KBD_GetChar@key^0,w,c
 12460  0038AC  0012               	return		;funcret
 12461  0038AE                     __end_of_KBD_GetChar:
 12462                           	opt callstack 0
 12463                           
 12464 ;; *************** function _BLED_Color *****************
 12465 ;; Defined at:
 12466 ;;		line 97 in file "src/leds.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;  biled           1    wreg     enum E3166
 12469 ;;  green           1    3[COMRAM] _Bool 
 12470 ;;  red             1    4[COMRAM] _Bool 
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;  biled           1    7[COMRAM] enum E3166
 12473 ;; Return value:  Size  Location     Type
 12474 ;;                  1    wreg      void 
 12475 ;; Registers used:
 12476 ;;		wreg, status,2, status,0
 12477 ;; Tracked objects:
 12478 ;;		On entry : 0/0
 12479 ;;		On exit  : 0/0
 12480 ;;		Unchanged: 0/0
 12481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12482 ;;      Params:         2       0       0       0       0       0       0       0       0
 12483 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12484 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12485 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12486 ;;Total ram usage:        5 bytes
 12487 ;; Hardware stack levels used:    1
 12488 ;; Hardware stack levels required when called:    2
 12489 ;; This function calls:
 12490 ;;		Nothing
 12491 ;; This function is called by:
 12492 ;;		_main
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496                           	psect	text49
 12497  00469E                     __ptext49:
 12498                           	opt callstack 0
 12499  00469E                     _BLED_Color:
 12500                           	opt callstack 28
 12501                           
 12502                           ;incstack = 0
 12503                           ;BLED_Color@biled stored from wreg
 12504  00469E  6E08               	movwf	BLED_Color@biled^0,c
 12505  0046A0                     
 12506                           ;src/leds.c: 97: void BLED_Color(BILED biled, _Bool green, _Bool red);src/leds.c: 98: {;
      +                          src/leds.c: 99:     switch (biled)
 12507  0046A0  EF9A  F023         	goto	l5391
 12508  0046A4                     l5387:
 12509                           
 12510                           ;src/leds.c: 102:             LATEbits.LATE1 = (green? 1 : 0);
 12511  0046A4  5004               	movf	BLED_Color@green^0,w,c
 12512  0046A6  A4D8               	btfss	status,2,c
 12513  0046A8  EF58  F023         	goto	u6121
 12514  0046AC  EF5C  F023         	goto	u6120
 12515  0046B0                     u6121:
 12516  0046B0  6A06               	clrf	??_BLED_Color^0,c
 12517  0046B2  2A06               	incf	??_BLED_Color^0,f,c
 12518  0046B4  EF5D  F023         	goto	u6138
 12519  0046B8                     u6120:
 12520  0046B8  6A06               	clrf	??_BLED_Color^0,c
 12521  0046BA                     u6138:
 12522  0046BA  4606               	rlncf	??_BLED_Color^0,f,c
 12523  0046BC  508D               	movf	141,w,c	;volatile
 12524  0046BE  1806               	xorwf	??_BLED_Color^0,w,c
 12525  0046C0  0BFD               	andlw	-3
 12526  0046C2  1806               	xorwf	??_BLED_Color^0,w,c
 12527  0046C4  6E8D               	movwf	141,c	;volatile
 12528                           
 12529                           ;src/leds.c: 103:             LATEbits.LATE0 = (red? 1 : 0);
 12530  0046C6  5005               	movf	BLED_Color@red^0,w,c
 12531  0046C8  A4D8               	btfss	status,2,c
 12532  0046CA  EF69  F023         	goto	u6141
 12533  0046CE  EF6D  F023         	goto	u6140
 12534  0046D2                     u6141:
 12535  0046D2  6A06               	clrf	??_BLED_Color^0,c
 12536  0046D4  2A06               	incf	??_BLED_Color^0,f,c
 12537  0046D6  EF6E  F023         	goto	u6158
 12538  0046DA                     u6140:
 12539  0046DA  6A06               	clrf	??_BLED_Color^0,c
 12540  0046DC                     u6158:
 12541  0046DC  508D               	movf	141,w,c	;volatile
 12542  0046DE  1806               	xorwf	??_BLED_Color^0,w,c
 12543  0046E0  0BFE               	andlw	-2
 12544  0046E2  1806               	xorwf	??_BLED_Color^0,w,c
 12545  0046E4  6E8D               	movwf	141,c	;volatile
 12546                           
 12547                           ;src/leds.c: 104:             break;
 12548  0046E6  EFAF  F023         	goto	l282
 12549  0046EA                     l5389:
 12550                           
 12551                           ;src/leds.c: 106:             LATCbits.LATC2 = (green? 1 : 0);
 12552  0046EA  5004               	movf	BLED_Color@green^0,w,c
 12553  0046EC  A4D8               	btfss	status,2,c
 12554  0046EE  EF7B  F023         	goto	u6161
 12555  0046F2  EF7F  F023         	goto	u6160
 12556  0046F6                     u6161:
 12557  0046F6  6A06               	clrf	??_BLED_Color^0,c
 12558  0046F8  2A06               	incf	??_BLED_Color^0,f,c
 12559  0046FA  EF80  F023         	goto	u6178
 12560  0046FE                     u6160:
 12561  0046FE  6A06               	clrf	??_BLED_Color^0,c
 12562  004700                     u6178:
 12563  004700  4606               	rlncf	??_BLED_Color^0,f,c
 12564  004702  4606               	rlncf	??_BLED_Color^0,f,c
 12565  004704  508B               	movf	139,w,c	;volatile
 12566  004706  1806               	xorwf	??_BLED_Color^0,w,c
 12567  004708  0BFB               	andlw	-5
 12568  00470A  1806               	xorwf	??_BLED_Color^0,w,c
 12569  00470C  6E8B               	movwf	139,c	;volatile
 12570                           
 12571                           ;src/leds.c: 107:             LATCbits.LATC1 = (red? 1 : 0);
 12572  00470E  5005               	movf	BLED_Color@red^0,w,c
 12573  004710  A4D8               	btfss	status,2,c
 12574  004712  EF8D  F023         	goto	u6181
 12575  004716  EF91  F023         	goto	u6180
 12576  00471A                     u6181:
 12577  00471A  6A06               	clrf	??_BLED_Color^0,c
 12578  00471C  2A06               	incf	??_BLED_Color^0,f,c
 12579  00471E  EF92  F023         	goto	u6198
 12580  004722                     u6180:
 12581  004722  6A06               	clrf	??_BLED_Color^0,c
 12582  004724                     u6198:
 12583  004724  4606               	rlncf	??_BLED_Color^0,f,c
 12584  004726  508B               	movf	139,w,c	;volatile
 12585  004728  1806               	xorwf	??_BLED_Color^0,w,c
 12586  00472A  0BFD               	andlw	-3
 12587  00472C  1806               	xorwf	??_BLED_Color^0,w,c
 12588  00472E  6E8B               	movwf	139,c	;volatile
 12589                           
 12590                           ;src/leds.c: 108:     }
 12591  004730  EFAF  F023         	goto	l282
 12592  004734                     l5391:
 12593  004734  5008               	movf	BLED_Color@biled^0,w,c
 12594  004736  6E06               	movwf	??_BLED_Color^0,c
 12595  004738  6A07               	clrf	(??_BLED_Color+1)^0,c
 12596                           
 12597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12598                           ; Switch size 1, requested type "simple"
 12599                           ; Number of cases is 1, Range of values is 0 to 0
 12600                           ; switch strategies available:
 12601                           ; Name         Instructions Cycles
 12602                           ; simple_byte            4     3 (average)
 12603                           ;	Chosen strategy is simple_byte
 12604  00473A  5007               	movf	(??_BLED_Color+1)^0,w,c
 12605  00473C  0A00               	xorlw	0	; case 0
 12606  00473E  B4D8               	btfsc	status,2,c
 12607  004740  EFA4  F023         	goto	l5945
 12608  004744  EFAF  F023         	goto	l282
 12609  004748                     l5945:
 12610                           
 12611                           ; Switch size 1, requested type "simple"
 12612                           ; Number of cases is 2, Range of values is 0 to 1
 12613                           ; switch strategies available:
 12614                           ; Name         Instructions Cycles
 12615                           ; simple_byte            7     4 (average)
 12616                           ;	Chosen strategy is simple_byte
 12617  004748  5006               	movf	??_BLED_Color^0,w,c
 12618  00474A  0A00               	xorlw	0	; case 0
 12619  00474C  B4D8               	btfsc	status,2,c
 12620  00474E  EF52  F023         	goto	l5387
 12621  004752  0A01               	xorlw	1	; case 1
 12622  004754  B4D8               	btfsc	status,2,c
 12623  004756  EF75  F023         	goto	l5389
 12624  00475A  EFAF  F023         	goto	l282
 12625  00475E                     l282:
 12626  00475E  0012               	return		;funcret
 12627  004760                     __end_of_BLED_Color:
 12628                           	opt callstack 0
 12629                           
 12630 ;; *************** function _Interrupts *****************
 12631 ;; Defined at:
 12632 ;;		line 15 in file "src/main.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;		None
 12635 ;; Auto vars:     Size  Location     Type
 12636 ;;		None
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  1    wreg      void 
 12639 ;; Registers used:
 12640 ;;		wreg, status,2, status,0, cstack
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12646 ;;      Params:         0       0       0       0       0       0       0       0       0
 12647 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12649 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12650 ;;Total ram usage:        0 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; Hardware stack levels required when called:    1
 12653 ;; This function calls:
 12654 ;;		_BLED_Toggle
 12655 ;; This function is called by:
 12656 ;;		Interrupt level 2
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660                           	psect	intcode
 12661  000008                     __pintcode:
 12662                           	opt callstack 0
 12663  000008                     _Interrupts:
 12664                           	opt callstack 24
 12665                           
 12666                           ;incstack = 0
 12667  000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12668  00000A  ED30  F025         	call	int_func,f	;refresh shadow registers
 12669                           
 12670                           	psect	intcode_body
 12671  004A60                     __pintcode_body:
 12672                           	opt callstack 24
 12673  004A60                     int_func:
 12674                           	opt callstack 24
 12675  004A60  0006               	pop		; remove dummy address from shadow register refresh
 12676  004A62                     
 12677                           ;src/main.c: 17:     if (INTCONbits.TMR0IF)
 12678  004A62  A4F2               	btfss	242,2,c	;volatile
 12679  004A64  EF36  F025         	goto	i2u664_41
 12680  004A68  EF38  F025         	goto	i2u664_40
 12681  004A6C                     i2u664_41:
 12682  004A6C  EF50  F025         	goto	i2l5767
 12683  004A70                     i2u664_40:
 12684  004A70                     
 12685                           ;src/main.c: 18:     {;src/main.c: 19:         (TMR0H = 0x48);
 12686  004A70  0E48               	movlw	72
 12687  004A72  6ED7               	movwf	215,c	;volatile
 12688                           
 12689                           ;src/main.c: 20:         (TMR0L = 0xE5);
 12690  004A74  0EE5               	movlw	229
 12691  004A76  6ED6               	movwf	214,c	;volatile
 12692  004A78                     
 12693                           ;src/main.c: 21:         count++;
 12694  004A78  4A4B               	infsnz	_count^0,f,c
 12695  004A7A  2A4C               	incf	(_count+1)^0,f,c
 12696  004A7C                     
 12697                           ;src/main.c: 22:         if(count == 2)
 12698  004A7C  0E02               	movlw	2
 12699  004A7E  184B               	xorwf	_count^0,w,c
 12700  004A80  104C               	iorwf	(_count+1)^0,w,c
 12701  004A82  A4D8               	btfss	status,2,c
 12702  004A84  EF46  F025         	goto	i2u665_41
 12703  004A88  EF48  F025         	goto	i2u665_40
 12704  004A8C                     i2u665_41:
 12705  004A8C  EF4F  F025         	goto	i2l5765
 12706  004A90                     i2u665_40:
 12707  004A90                     
 12708                           ;src/main.c: 23:         {;src/main.c: 24:             BLED_Toggle(BL1);
 12709  004A90  0E00               	movlw	0
 12710  004A92  EC52  F027         	call	_BLED_Toggle
 12711  004A96                     
 12712                           ;src/main.c: 25:             count = 0;
 12713  004A96  0E00               	movlw	0
 12714  004A98  6E4C               	movwf	(_count+1)^0,c
 12715  004A9A  0E00               	movlw	0
 12716  004A9C  6E4B               	movwf	_count^0,c
 12717  004A9E                     i2l5765:
 12718                           
 12719                           ;src/main.c: 27:         INTCONbits.TMR0IF = 0;
 12720  004A9E  94F2               	bcf	242,2,c	;volatile
 12721  004AA0                     i2l5767:
 12722                           
 12723                           ;src/main.c: 29:     if (INTCONbits.RBIF)
 12724  004AA0  A0F2               	btfss	242,0,c	;volatile
 12725  004AA2  EF55  F025         	goto	i2u666_41
 12726  004AA6  EF57  F025         	goto	i2u666_40
 12727  004AAA                     i2u666_41:
 12728  004AAA  EF6F  F025         	goto	i2l37
 12729  004AAE                     i2u666_40:
 12730  004AAE                     
 12731                           ;src/main.c: 30:     {;src/main.c: 31:         INTCONbits.RBIF = 0;
 12732  004AAE  90F2               	bcf	242,0,c	;volatile
 12733  004AB0                     
 12734                           ;src/main.c: 32:         x = (PORTB & 0xF0)>> 4;
 12735  004AB0  3881               	swapf	129,w,c	;volatile
 12736  004AB2  0B0F               	andlw	15
 12737  004AB4  0B0F               	andlw	15
 12738  004AB6  6E53               	movwf	_x^0,c
 12739  004AB8                     
 12740                           ;src/main.c: 33:         if((reqKey) && (x != 15))
 12741  004AB8  5054               	movf	_reqKey^0,w,c
 12742  004ABA  B4D8               	btfsc	status,2,c
 12743  004ABC  EF62  F025         	goto	i2u667_41
 12744  004AC0  EF64  F025         	goto	i2u667_40
 12745  004AC4                     i2u667_41:
 12746  004AC4  EF6F  F025         	goto	i2l37
 12747  004AC8                     i2u667_40:
 12748  004AC8  0E0F               	movlw	15
 12749  004ACA  1853               	xorwf	_x^0,w,c
 12750  004ACC  B4D8               	btfsc	status,2,c
 12751  004ACE  EF6B  F025         	goto	i2u668_41
 12752  004AD2  EF6D  F025         	goto	i2u668_40
 12753  004AD6                     i2u668_41:
 12754  004AD6  EF6F  F025         	goto	i2l37
 12755  004ADA                     i2u668_40:
 12756  004ADA                     
 12757                           ;src/main.c: 34:             reqKey = 0;
 12758  004ADA  0E00               	movlw	0
 12759  004ADC  6E54               	movwf	_reqKey^0,c
 12760  004ADE                     i2l37:
 12761  004ADE  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12762  004AE0  0011               	retfie		f
 12763  004AE2                     __end_of_Interrupts:
 12764                           	opt callstack 0
 12765                           
 12766 ;; *************** function _BLED_Toggle *****************
 12767 ;; Defined at:
 12768 ;;		line 111 in file "src/leds.c"
 12769 ;; Parameters:    Size  Location     Type
 12770 ;;  biled           1    wreg     enum E3166
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;  biled           1    2[COMRAM] enum E3166
 12773 ;; Return value:  Size  Location     Type
 12774 ;;                  1    wreg      void 
 12775 ;; Registers used:
 12776 ;;		wreg, status,2, status,0
 12777 ;; Tracked objects:
 12778 ;;		On entry : 0/0
 12779 ;;		On exit  : 0/0
 12780 ;;		Unchanged: 0/0
 12781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12782 ;;      Params:         0       0       0       0       0       0       0       0       0
 12783 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12784 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12785 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12786 ;;Total ram usage:        3 bytes
 12787 ;; Hardware stack levels used:    1
 12788 ;; This function calls:
 12789 ;;		Nothing
 12790 ;; This function is called by:
 12791 ;;		_Interrupts
 12792 ;; This function uses a non-reentrant model
 12793 ;;
 12794                           
 12795                           	psect	text51
 12796  004EA4                     __ptext51:
 12797                           	opt callstack 0
 12798  004EA4                     _BLED_Toggle:
 12799                           	opt callstack 24
 12800                           
 12801                           ;incstack = 0
 12802                           ;BLED_Toggle@biled stored from wreg
 12803  004EA4  6E03               	movwf	BLED_Toggle@biled^0,c
 12804  004EA6                     
 12805                           ;src/leds.c: 111: void BLED_Toggle(BILED biled);src/leds.c: 112: {;src/leds.c: 113:     
      +                          switch (biled)
 12806  004EA6  EF5D  F027         	goto	i2l5359
 12807  004EAA                     i2l286:
 12808                           
 12809                           ;src/leds.c: 116:             LATEbits.LATE1 ^= 1;
 12810  004EAA  728D               	btg	141,1,c	;volatile
 12811                           
 12812                           ;src/leds.c: 117:             LATEbits.LATE0 ^= 1;
 12813  004EAC  708D               	btg	141,0,c	;volatile
 12814                           
 12815                           ;src/leds.c: 118:             break;
 12816  004EAE  EF72  F027         	goto	i2l289
 12817  004EB2                     i2l288:
 12818                           
 12819                           ;src/leds.c: 120:             LATCbits.LATC2 ^= 1;
 12820  004EB2  748B               	btg	139,2,c	;volatile
 12821                           
 12822                           ;src/leds.c: 121:             LATCbits.LATC1 ^= 1;
 12823  004EB4  728B               	btg	139,1,c	;volatile
 12824                           
 12825                           ;src/leds.c: 122:     }
 12826  004EB6  EF72  F027         	goto	i2l289
 12827  004EBA                     i2l5359:
 12828  004EBA  5003               	movf	BLED_Toggle@biled^0,w,c
 12829  004EBC  6E01               	movwf	??_BLED_Toggle^0,c
 12830  004EBE  6A02               	clrf	(??_BLED_Toggle+1)^0,c
 12831                           
 12832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12833                           ; Switch size 1, requested type "simple"
 12834                           ; Number of cases is 1, Range of values is 0 to 0
 12835                           ; switch strategies available:
 12836                           ; Name         Instructions Cycles
 12837                           ; simple_byte            4     3 (average)
 12838                           ;	Chosen strategy is simple_byte
 12839  004EC0  5002               	movf	(??_BLED_Toggle+1)^0,w,c
 12840  004EC2  0A00               	xorlw	0	; case 0
 12841  004EC4  B4D8               	btfsc	status,2,c
 12842  004EC6  EF67  F027         	goto	i2l5947
 12843  004ECA  EF72  F027         	goto	i2l289
 12844  004ECE                     i2l5947:
 12845                           
 12846                           ; Switch size 1, requested type "simple"
 12847                           ; Number of cases is 2, Range of values is 0 to 1
 12848                           ; switch strategies available:
 12849                           ; Name         Instructions Cycles
 12850                           ; simple_byte            7     4 (average)
 12851                           ;	Chosen strategy is simple_byte
 12852  004ECE  5001               	movf	??_BLED_Toggle^0,w,c
 12853  004ED0  0A00               	xorlw	0	; case 0
 12854  004ED2  B4D8               	btfsc	status,2,c
 12855  004ED4  EF55  F027         	goto	i2l286
 12856  004ED8  0A01               	xorlw	1	; case 1
 12857  004EDA  B4D8               	btfsc	status,2,c
 12858  004EDC  EF59  F027         	goto	i2l288
 12859  004EE0  EF72  F027         	goto	i2l289
 12860  004EE4                     i2l289:
 12861  004EE4  0012               	return		;funcret
 12862  004EE6                     __end_of_BLED_Toggle:
 12863                           	opt callstack 0
 12864                           
 12865                           	psect	rparam
 12866  0000                     
 12867                           	psect	temp
 12868  000055                     btemp:
 12869                           	opt callstack 0
 12870  000055                     	ds	1
 12871  0000                     int$flags	set	btemp
 12872  0000                     wtemp8	set	btemp+1
 12873  0000                     ttemp5	set	btemp+1
 12874  0000                     ttemp6	set	btemp+4
 12875  0000                     ttemp7	set	btemp+8
 12876                           tosu	equ	0xFFF
 12877                           tosh	equ	0xFFE
 12878                           tosl	equ	0xFFD
 12879                           stkptr	equ	0xFFC
 12880                           pclatu	equ	0xFFB
 12881                           pclath	equ	0xFFA
 12882                           pcl	equ	0xFF9
 12883                           tblptru	equ	0xFF8
 12884                           tblptrh	equ	0xFF7
 12885                           tblptrl	equ	0xFF6
 12886                           tablat	equ	0xFF5
 12887                           prodh	equ	0xFF4
 12888                           prodl	equ	0xFF3
 12889                           indf0	equ	0xFEF
 12890                           postinc0	equ	0xFEE
 12891                           postdec0	equ	0xFED
 12892                           preinc0	equ	0xFEC
 12893                           plusw0	equ	0xFEB
 12894                           fsr0h	equ	0xFEA
 12895                           fsr0l	equ	0xFE9
 12896                           wreg	equ	0xFE8
 12897                           indf1	equ	0xFE7
 12898                           postinc1	equ	0xFE6
 12899                           postdec1	equ	0xFE5
 12900                           preinc1	equ	0xFE4
 12901                           plusw1	equ	0xFE3
 12902                           fsr1h	equ	0xFE2
 12903                           fsr1l	equ	0xFE1
 12904                           bsr	equ	0xFE0
 12905                           indf2	equ	0xFDF
 12906                           postinc2	equ	0xFDE
 12907                           postdec2	equ	0xFDD
 12908                           preinc2	equ	0xFDC
 12909                           plusw2	equ	0xFDB
 12910                           fsr2h	equ	0xFDA
 12911                           fsr2l	equ	0xFD9
 12912                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    19
    Data        148
    BSS         152
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      84
    BANK0           160     74     158
    BANK1           256    234     234
    BANK2           256      0     192
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> my_vprintf@format(BANK1[10]), my_vprintf@buffer(BANK1[64]), my_vprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> my_vprintf@format(BANK1[10]), my_vprintf@buffer(BANK1[64]), my_vprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@buffer(BANK1[64]), my_vprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@buffer(BANK1[64]), my_vprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 64
		 -> reverse@auxstr(BANK0[64]), STR_5(CODE[2]), STR_4(CODE[2]), my_vprintf@buffer(BANK1[64]), 
		 -> my_vprintf@ch(BANK1[2]), my_vprintf@char_temp(BANK1[2]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> reverse@auxstr(BANK0[64]), STR_5(CODE[2]), STR_4(CODE[2]), my_vprintf@buffer(BANK1[64]), 
		 -> my_vprintf@ch(BANK1[2]), my_vprintf@char_temp(BANK1[2]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), my_vprintf@ch(BANK1[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@string(BANK1[128]), 

    ftoa@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    ftoa_sci@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    normalize@val	PTR  size(2) Largest target is 4
		 -> ftoa@value(COMRAM[4]), ftoa_sci@value(BANK0[4]), 

    atoui@str	PTR unsigned char  size(2) Largest target is 5
		 -> getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    itoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    reverse@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@string(BANK1[128]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    my_vprintf@string_temp	PTR unsigned char  size(2) Largest target is 0

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@buffer(BANK1[64]), my_vprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    my_vprintf@sformat	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_3(CODE[31]), STR_2(CODE[29]), STR_1(CODE[13]), 

    my_vprintf@valist	PTR void [1] size(2) Largest target is 2
		 -> ?_my_vprintf(COMRAM[2]), 

    setWidth@width	PTR int  size(2) Largest target is 2
		 -> my_vprintf@width(BANK1[2]), 

    setWidth@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    addOx@hoS	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    addSig@numS	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    precS@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK1[2]), 

    precS@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    precI@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK1[2]), 

    precI@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    precG@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK1[2]), 

    precG@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    precE@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK1[2]), 

    precE@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    precF@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK1[2]), 

    precF@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    getWP@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK1[2]), 

    getWP@width	PTR int  size(2) Largest target is 2
		 -> my_vprintf@width(BANK1[2]), 

    getWP@form	PTR unsigned char  size(2) Largest target is 10
		 -> my_vprintf@format(BANK1[10]), 

    cleanS@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@format(BANK1[10]), my_vprintf@buffer(BANK1[64]), 

    upperCL@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    roundStr@decnum	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK1[64]), 

    posc@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@format(BANK1[10]), my_vprintf@buffer(BANK1[64]), 

    searchc@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@format(BANK1[10]), my_vprintf@buffer(BANK1[64]), 

    SERIAL_Write@str	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@string(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main->_my_vprintf
    _my_vprintf->_precG
    _upperCL->_strlen
    _strcat->_strcpy
    _setWidth->_strlen
    _precS->_strlen
    _precI->_strlen
    _precG->_roundStr
    _precF->_roundStr
    _precE->_roundStr
    _roundStr->_posc
    _getWP->_reverse
    _searchc->_strlen
    _posc->_strlen
    _atoui->___wmul
    _ftoa_sci->_itoa
    _itoa->_reverse
    _reverse->_strcpy
    _strcpy->_strlen
    _ftoa->___fltol
    _normalize->___fldiv
    _normalize->___flmul
    ___fltol->___flmul
    ___flsub->___flmul
    _cleanS->_strlen
    _addSig->___xxtofl
    _addOx->_strlen
    _SERIAL_Write->_strlen
    _SYSTEM_Init->_SERIAL_Init
    _SERIAL_Init->___aldiv

Critical Paths under _Interrupts in COMRAM

    _Interrupts->_BLED_Toggle

Critical Paths under _main in BANK0

    _my_vprintf->_ftoa_sci
    _getWP->_reverse
    _itoa->_reverse

Critical Paths under _Interrupts in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_my_vprintf

Critical Paths under _Interrupts in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupts in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupts in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupts in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupts in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupts in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupts in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  140016
                                             57 COMRAM     3     3      0
                         _BLED_Color
                        _KBD_GetChar
                        _SYSTEM_Init
                         _my_vprintf
 ---------------------------------------------------------------------------------
 (1) _my_vprintf                                         238   236      2  137718
                                             53 COMRAM     4     2      2
                                              0 BANK1    234   234      0
                       _SERIAL_Write
                           ___xxtofl
                              _addOx
                             _addSig
                             _cleanS
                               _ftoa
                           _ftoa_sci
                              _getWP
                               _itoa
                              _precE
                              _precF
                              _precG
                              _precI
                              _precS
                           _setWidth
                             _strcat
                             _strcpy
                             _strlen
                            _upperCL
 ---------------------------------------------------------------------------------
 (2) _upperCL                                              5     3      2    2440
                                              7 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    3374
                                             17 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _setWidth                                            12     8      4    2986
                                              7 COMRAM    12     8      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precS                                               10     6      4    2299
                                              7 COMRAM    10     6      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precI                                               14    10      4    3304
                                              7 COMRAM    14    10      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precG                                               23    19      4   14856
                                             30 COMRAM    23    19      4
                               _posc
                           _roundStr
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precF                                               17    13      4   16311
                                             30 COMRAM    17    13      4
                               _posc
                           _roundStr
                            _searchc
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precE                                               18    14      4   13778
                                             30 COMRAM    18    14      4
                               _posc
                           _roundStr
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _roundStr                                            17    11      6    7189
                                             13 COMRAM    17    11      6
                               _posc
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _getWP                                               28    22      6   15676
                                             21 COMRAM    28    22      6
                              _atoui
                               _posc
                            _reverse
                            _searchc
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _searchc                                              6     3      3    2862
                                              7 COMRAM     6     3      3
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _posc                                                 6     3      3    3492
                                              7 COMRAM     6     3      3
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _atoui                                                9     7      2    2853
                                              9 COMRAM     9     7      2
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     463
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ftoa_sci                                            14     8      6   21748
                                             41 COMRAM     8     8      0
                                             68 BANK0      6     0      6
                             ___fleq
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _itoa
                          _normalize
 ---------------------------------------------------------------------------------
 (2) _itoa                                                20    12      8    6759
                                             21 COMRAM    20    12      8
                            ___aldiv
                            ___almod
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                             72    70      2    3453
                                             17 COMRAM     4     2      2
                                              0 BANK0     68    68      0
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                              10     6      4    1008
                                              7 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     448
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                14     8      6   14579
                                             38 COMRAM    14     8      6
                             ___fleq
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _normalize
 ---------------------------------------------------------------------------------
 (3) _normalize                                            8     6      2    5331
                                             28 COMRAM     8     6      2
                            ___fldiv
                             ___flge
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2960
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1399
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     778
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             28 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3041
                                             28 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2262
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     646
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _cleanS                                               7     5      2    2255
                                              7 COMRAM     7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _addSig                                              12     6      6    4137
                                             17 COMRAM    12     6      6
                             ___flge
                           ___xxtofl (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     638
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _addOx                                               11     6      5    3163
                                              7 COMRAM    11     6      5
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SERIAL_Write                                         4     2      2    2178
                                              7 COMRAM     4     2      2
                   _SERIAL_WriteChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1990
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SERIAL_WriteChar                                     1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Init                                          0     0      0    1304
                        _BLED_Enable
                     _INTERRUPT_Init
                       _INTERRUPT_Rb
                     _INTERRUPT_Tmr0
                           _KBD_Init
                        _SERIAL_Init
                         _TIMER0_Int
                       _TIMER0_SetPs
 ---------------------------------------------------------------------------------
 (2) _TIMER0_SetPs                                         3     3      0      22
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_Int                                           4     1      3     338
                                              3 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _SERIAL_Init                                         10     6      4     922
                                             17 COMRAM    10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     756
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _KBD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Tmr0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Rb                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BLED_Enable                                          3     3      0      22
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _KBD_GetChar                                          9     9      0     231
                                              3 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _BLED_Color                                           5     3      2     718
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Interrupts                                           0     0      0      22
                        _BLED_Toggle
 ---------------------------------------------------------------------------------
 (7) _BLED_Toggle                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BLED_Color
   _KBD_GetChar
   _SYSTEM_Init
     _BLED_Enable
     _INTERRUPT_Init
     _INTERRUPT_Rb
     _INTERRUPT_Tmr0
     _KBD_Init
     _SERIAL_Init
       ___aldiv
     _TIMER0_Int
     _TIMER0_SetPs
   _my_vprintf
     _SERIAL_Write
       _SERIAL_WriteChar
       _strlen
     ___xxtofl
     _addOx
       _strlen
     _addSig
       ___flge
       ___xxtofl (ARG)
       _strlen (ARG)
     _cleanS
       _strlen
     _ftoa
       ___fleq
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
       ___xxtofl
       _normalize
         ___fldiv
         ___flge
         ___flmul
     _ftoa_sci
       ___fleq
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
       ___xxtofl
       _itoa
         ___aldiv
         ___almod
         _reverse
           _strcpy
             _strlen (ARG)
           _strlen
       _normalize
         ___fldiv
         ___flge
         ___flmul
     _getWP
       _atoui
         ___wmul
         _strlen
       _posc
         _strlen
       _reverse
         _strcpy
           _strlen (ARG)
         _strlen
       _searchc
         _strlen
       _strlen
     _itoa
       ___aldiv
       ___almod
       _reverse
         _strcpy
           _strlen (ARG)
         _strlen
     _precE
       _posc
         _strlen
       _roundStr
         _posc
           _strlen
         _strlen
       _strlen
     _precF
       _posc
         _strlen
       _roundStr
         _posc
           _strlen
         _strlen
       _searchc
         _strlen
       _strlen
     _precG
       _posc
         _strlen
       _roundStr
         _posc
           _strlen
         _strlen
       _strlen
     _precI
       _strlen
     _precS
       _strlen
     _setWidth
       _strlen
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strcpy
       _strlen (ARG)
     _strlen
     _upperCL
       _strlen

 _Interrupts (ROOT)
   _BLED_Toggle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     EA      EA       7       91.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4A      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      54       1       89.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     29C      20        0.0%
DATA                 0      0     29C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Aug 27 20:35:24 2020

             ___fldiv@aexp 001C               ___fldiv@bexp 001B                          _x 0053  
             ___fldiv@sign 0014                         l70 4A5E                         l73 5022  
                       l82 4EA2                         l76 5034                __CFG_BOR$ON 000000  
      ___wmul@multiplicand 0006                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000                        l310 477A                        l143 504C  
                      l303 4F64                        l311 4784                        l312 478E  
                      l128 4DCC                        l313 4798                        l314 47A2  
                      l402 4D7E                        l155 5058                        l315 47AC  
                      l307 4766                        l316 4810                        l309 4770  
                      l421 30F2                        l190 37E4                        l158 5052  
                      l182 5044                        l192 37FE                        l272 4DD4  
                      l440 36F4                        l193 3832                        l282 475E  
                      l194 3818                        l274 4DE0                        l362 4C20  
                      l275 4E16                        l363 4C1C                        l355 4CD6  
                      l427 3632                        l507 1920                        l700 3BE0  
                      l524 4B58                        l429 363A                        l461 1470  
                      l517 40DE                        l198 38AC                        l383 2BCC  
                      l456 3526                        l529 3D8C                        l538 3EAA  
                      l570 331C                        l731 2EAC                        l715 4694  
                      l635 0A64                        l548 3D58                        l716 469C  
                      l396 49DC                        l725 3FCA                        l661 1040  
                      l742 28D6                        l671 11CA                        l496 183E  
                      l851 45CC                        l684 13C8                        l838 41EA  
                      l759 501E                        l696 4952               __CFG_CPB$OFF 000000  
             my_vprintf@ch 01D0                        _sig 0052           TIMER0_Int@t0_psa 0006  
                      wreg 000FE8               ___flmul@aexp 0015               ___flmul@bexp 0016  
             ___flmul@sign 0010               ___flmul@temp 001B               ___flmul@prod 0017  
             __CFG_LVP$OFF 000000        __size_of_BLED_Color 00C2               ___fltol@exp1 0026  
             __CFG_WDT$OFF 000000                       l1024 43AE                       l1033 4F9C  
                     l1018 48BA                       l1029 43F4                       l1304 1C2A  
                     l1056 42F0                       l1313 1CFA                       l1314 1CE8  
                     l1421 399C                       l1341 25A4                       l1414 3904  
                     l1343 2404                       l1352 244A                       l4001 1B98  
                     l1329 4E5C                       l1417 3A60                       l1354 24C2  
                     l1346 23C8                       l4011 1C0A                       l4003 1B9E  
                     l1355 24B0                       l1443 4C7C                       l1428 39F8  
                     l1380 209C                       l4021 1C64                       l4005 1BC4  
                     l4013 1C1A                       l4101 2278                       l1373 1EA6  
                     l1437 4FF8                       l1390 21CC                       l1382 2114  
                     l4031 1C94                       l4023 1C6E                       l4015 1C40  
                     l4007 1BF8                       l1287 1B10                       l4111 22AE  
                     l4103 227E                       l1383 2102                       l1296 1DE0  
                     l1288 1AFE                       l1449 4FD2                       l4041 1CBC  
                     l4033 1C98                       l4025 1C7C                       l4017 1C50  
                     l4009 1BFA                       l1289 1AC4                       l4201 2564  
                     l4121 22EE                       l4113 22BE                       l4105 228C  
                     l1377 220A                       l5001 1832                       l4051 1D16  
                     l4043 1CCA                       l4035 1CA8                       l4027 1C7E  
                     l4211 259A                       l4203 2580                       l4123 22FE  
                     l4131 231E                       l4115 22C0                       l4107 228E  
                     l5003 1846                       l5101 3E6C                       l4061 1D80  
                     l4053 1D24                       l4045 1CE0                       l4029 1C8C  
                     l4037 1CAA                       l4205 2584                       l4141 235C  
                     l4133 232E                       l4125 2306                       l4109 229E  
                     l4117 22C8                       l4301 2082                       l4221 1DEE  
                     l5021 18DE                       l5013 1892                       l5005 1856  
                     l5111 3BF6                       l5103 3E94                       l4071 1DBA  
                     l4063 1DA0                       l4055 1D5E                       l4039 1CB8  
                     l4207 2592                       l4151 23A4                       l4143 236C  
                     l4135 232E                       l4127 230A                       l4119 22D8  
                     l4311 20BE                       l4303 208C                       l4231 1E2E  
                     l4223 1DFC                       l5023 18FC                       l5015 18A6  
                     l5007 1872                       l5031 3FFC                       l5121 3C56  
                     l5113 3C06                       l4073 1DC0                       l4065 1DA4  
                     l4049 1D0A                       l4057 1D60                       l4209 2598  
                     l4161 23F2                       l4153 23B8                       l4145 237C  
                     l4081 220C                       l4321 2130                       l4313 20CC  
                     l4305 209A                       l4241 1E5E                       l4233 1E34  
                     l4225 1DFE                       l4401 293E                       l5017 18B2  
                     l5025 1902                       l5041 4052                       l5033 4010  
                     l5201 32E0                       l5123 3C7E                       l5115 3C18  
                     l5131 3CC0                       l5107 3E9E                       l4075 1DCE  
                     l4067 1DB2                       l4059 1D70                       l4171 243A  
                     l4163 2402                       l4155 23C6                       l4147 238C  
                     l4139 2342                       l4091 2248                       l4083 2218  
                     l4331 219A                       l4323 213E                       l4315 20FA  
                     l4307 20AC                       l4251 1E96                       l4243 1E60  
                     l4235 1E44                       l4227 1E0E                       l4219 1DE2  
                     l5211 25A6                       l4411 29D0                       l4403 295C  
                     l5019 18DA                       l5051 40A4                       l5043 406E  
                     l5035 4014                       l5027 3FCC                       l5133 3CD0  
                     l5125 3C84                       l5117 3C2A                       l5109 3BE2  
                     l4077 1DD0                       l4069 1DB8                       l4181 247A  
                     l4173 2448                       l4165 2414                       l4157 23D2  
                     l4149 2394                       l4093 2258                       l4085 2226  
                     l4341 21F0                       l4333 21B4                       l4325 2168  
                     l4309 20BA                       l4261 1EE6                       l4253 1EB6  
                     l4245 1E70                       l4237 1E4A                       l4229 1E1E  
                     l5221 260C                       l5213 25AE                       l4501 3AC6  
                     l5301 2C72                       l4421 2A14                       l4413 29D4  
                     l4405 2978                       l5053 40C4                       l5037 4030  
                     l5029 3FE0                       l5061 4AF6                       l5205 3302  
                     l5143 3D1A                       l5135 3CE2                       l5127 3CA0  
                     l4351 4320                       l5071 3D5A                       l4191 24EC  
                     l4183 24A8                       l4167 242A                       l4175 245A  
                     l4159 23F0                       l4095 225A                       l4087 2228  
                     l4335 21D0                       l4343 21F6                       l4319 2124  
                     l4327 216C                       l4271 1F36                       l4263 1EF0  
                     l4255 1EC6                       l4247 1E80                       l4239 1E50  
                     l5231 266A                       l5215 25E0                       l4511 3B4C  
                     l4503 3AC6                       l5311 2D3C                       l5303 2CB2  
                     l4431 2A78                       l4423 2A28                       l4407 298A  
                     l4415 29F6                       l5055 40D4                       l5047 4080  
                     l5039 4038                       l5063 4B12                       l5207 3312  
                     l5151 30F4                       l3801 40E4                       l5145 3D42  
                     l5137 3CF4                       l5129 3CAC                       l4361 438E  
                     l4353 4330                       l5081 3DB2                       l5073 3D6E  
                     l4601 427C                       l4193 2516                       l4177 2468  
                     l4169 2430                       l4089 2238                       l4097 2262  
                     l4345 21FA                       l4337 21E0                       l4329 2186  
                     l4281 1F78                       l4273 1F42                       l4265 1F06  
                     l4249 1E90                       l5241 2730                       l5233 26AA  
                     l5217 25EC                       l5225 2620                       l4521 3BC4  
                     l4513 3B64                       l4505 3ADA                       l5321 2D56  
                     l5313 2D48                       l5305 2CC0                       l4441 2AE2  
                     l4433 2A84                       l4425 2A42                       l4409 29B4  
                     l5049 4086                       l5065 4B26                       l5161 315A  
                     l5153 3108                       l5401 0878                       l3811 4124  
                     l3803 40F2                       l4371 5022                       l5139 3CFC  
                     l4363 439C                       l4355 435E                       l5091 3E26  
                     l5083 3DDA                       l5075 3D7E                       l4611 42A4  
                     l4603 4286                       l4187 24D2                       l4195 251A  
                     l4179 246C                       l4099 2272                       l4339 21EE  
                     l4291 1FDA                       l4283 1F88                       l4275 1F50  
                     l4267 1F12                       l4259 1EDA                       l4531 3ED0  
                     l5251 2772                       l5235 26B8                       l5243 2736  
                     l5227 262E                       l5219 25FC                       l4523 3BD4  
                     l4515 3B74                       l4507 3B10                       l5331 2E1E  
                     l5323 2D96                       l5315 2D4E                       l5307 2CC6  
                     l4443 2AF2                       l4435 2A90                       l4427 2A5C  
                     l4451 2B24                       l4419 2A00                       l5067 4B36  
                     l5059 4AE2                       l5171 31AE                       l5163 316A  
                     l5155 3124                       l5411 0890                       l5403 0880  
                     l3821 4162                       l3813 4128                       l3805 4102  
                     l4373 5030                       l4701 4E80                       l5149 3D4C  
                     l4365 43EC                       l4357 436E                       l4349 42F2  
                     l5077 3D94                       l5093 3E36                       l3901 19A0  
                     l4613 42B0                       l4605 4290                       l4197 2534  
                     l4189 24DE                       l4293 1FF6                       l4285 1FA2  
                     l4277 1F5C                       l4269 1F2A                       l4541 3F78  
                     l4533 3F04                       l5261 27B2                       l5253 278E  
                     l5245 2750                       l5237 26BC                       l5229 2652  
                     l4517 3B78                       l4509 3B30                       l5341 2E66  
                     l5333 2E3A                       l5325 2DA4                       l5309 2D36  
                     l4461 2B88                       l4453 2B38                       l4445 2AF6  
                     l4437 2AAE                       l4429 2A6C                       l5069 4B3A  
                     l5181 31F2                       l5173 31BE                       l5165 316E  
                     l5157 313E                       l5501 0B78                       l5421 08DE  
                     l5413 08A2                       l5405 0880                       l4703 5036  
                     l3831 41AA                       l3823 4170                       l3815 4138  
                     l3807 4106                       l4711 4F28                       l4367 43F2  
                     l4359 437C                       l5095 3E46                       l5087 3DE4  
                     l3911 19C8                       l3903 19A2                       l4551 4E28  
                     l4615 42C0                       l4631 392A                       l4623 38B0  
                     l4199 254A                       l4295 2020                       l4287 1FB2  
                     l4279 1F6C                       l4543 3FAA                       l4535 3F08  
                     l4527 3EAC                       l5271 2828                       l5263 27B6  
                     l5255 279A                       l5247 2762                       l5239 272C  
                     l4519 3BAE                       l5343 2E6E                       l5335 2E46  
                     l5327 2DAA                       l4471 45CE                       l4383 4CAE  
                     l4375 4C7E                       l4463 2B8C                       l4455 2B4C  
                     l4439 2ADA                       l4391 28D8                       l5191 326C  
                     l5183 3202                       l5175 31DA                       l5167 3172  
                     l5159 314E                       l5511 0C02                       l5503 0B88  
                     l5431 0914                       l5423 08E2                       l5415 08AE  
                     l5407 0880                       l4705 5042                       l3833 41B4  
                     l3825 417A                       l3817 414E                       l3809 4114  
                     l4721 4F52                       l4713 4F2A                       l3761 4FC6  
                     l5097 3E4E                       l5089 3E16                       l4561 487E  
                     l3921 1A02                       l3913 19D8                       l3905 19A8  
                     l4617 42D0                       l4641 3984                       l4625 38C0  
                     l4297 2056                       l4289 1FCE                       l4545 3FC2  
                     l4537 3F3E                       l4529 3EB4                       l5281 28CA  
                     l5273 2836                       l5257 27A2                       l5265 27BA  
                     l5249 276E                       l5337 2E4C                       l5329 2E1A  
                     l4481 466E                       l4473 45EA                       l4377 4C8A  
                     l4385 4CB2                       l4801 3028                       l4465 2BAA  
                     l4457 2B68                       l4449 2B02                       l4393 2904  
                     l5193 3280                       l5185 3212                       l5169 3194  
                     l5353 4FD4                       l5601 0FCC                       l5521 0C8C  
                     l5513 0C12                       l5505 0B90                       l5441 0970  
                     l5433 0918                       l5425 08E6                       l5417 08C0  
                     l5409 0888                       l4707 5046                       l3827 4198  
                     l3819 4156                       l3835 41BA                       l4723 4F62  
                     l4715 4F34                       l5371 4D9E                       l3755 4F9E  
                     l4563 488E                       l4555 4812                       l4571 4F66  
                     l3931 1A2E                       l3923 1A14                       l3915 19E8  
                     l3907 19B6                       l4619 42E0                       l4651 39E8  
                     l4643 3986                       l4635 393E                       l4627 38CE  
                     l4299 2064                       l4539 3F72                       l5275 283A  
                     l5267 27C8                       l5259 27AE                       l3851 4508  
                     l3843 44E2                       l4491 3A8C                       l5347 2E7E  
                     l5339 2E5A                       l5291 2C1E                       l5283 2BCE  
                     l4475 4606                       l4483 4672                       l3771 4BCC  
                     l4387 4CD4                       l4379 4CA8                       l4811 3074  
                     l4803 3046                       l4459 2B78                       l4467 2BC4  
                     l4395 2910                       l5187 3230                       l5195 32A0  
                     l5179 31EC                       l5611 1020                       l5603 0FD6  
                     l5531 0CEC                       l5523 0C9C                       l5515 0C1A  
                     l5507 0BB6                       l5451 0996                       l5443 0978  
                     l5435 0920                       l5427 08EE                       l5419 08D8  
                     l5701 36F6                       l4709 5054                       l4733 504E  
                     l3837 41CA                       l3829 41A8                       l4717 4F3E  
                     l4725 4762                       l5381 4DC8                       l5373 4DA4  
                     l5365 4D80                       l3757 4FAA                       l4565 48B2  
                     l4557 4840                       l4573 4F7C                       l3941 1A42  
                     l3933 1A32                       l3925 1A22                       l3917 19EA  
                     l3909 19B8                       l4549 4E18                       l4581 4202  
                     l4661 3A40                       l4653 3A06                       l4645 3992  
                     l4637 3946                       l4629 3914                       l5277 28AA  
                     l5269 27E8                       l3861 4550                       l3853 4516  
                     l3845 44E6                       l3765 4C22                       l3781 48D6  
                     l4493 3A90                       l4485 3A62                       l5349 2EA4  
                     l5285 2BCE                       l4477 4622                       l3773 4BEA  
                     l4813 3090                       l4805 3058                       l4821 3528  
                     l4901 13CA                       l5197 32BE                       l5189 324E  
                     l5621 1084                       l5613 103C                       l5605 0FE2  
                     l5541 0D56                       l5533 0CF4                       l5525 0CA4  
                     l5517 0C40                       l5509 0BCA                       l5461 09F6  
                     l5453 09AA                       l5429 08FA                       l5391 4734  
                     l5711 3722                       l5703 370A                       l4735 4DD0  
                     l3839 41DA                       l4671 4A42                       l4719 4F48  
                     l4727 47B6                       l5383 4DCA                       l5375 4DA8  
                     l5367 4D84                       l3759 4FAE                       l4567 48B8  
                     l4559 4850                       l4575 4F8C                       l3951 1A56  
                     l3943 1A46                       l3935 1A36                       l3927 1A26  
                     l3919 19F2                       l4591 4252                       l4663 3A4E  
                     l4655 3A08                       l4647 39CE                       l4639 3952  
                     l5279 28AE                       l3863 455E                       l3871 459C  
                     l3855 4526                       l3847 44F4                       l3767 4C32  
                     l3791 493E                       l3783 48E8                       l4487 3A6A  
                     l5287 2C00                       l5295 2C2A                       l4479 4652  
                     l3775 4BF6                       l4815 30AC                       l4807 305C  
                     l4399 2922                       l4831 35AC                       l4823 3554  
                     l4911 144A                       l4903 140E                       l4751 49B6  
                     l4743 4954                       l5631 10F4                       l5623 10A0  
                     l5615 1044                       l5551 0DC4                       l5543 0D66  
                     l5535 0D1A                       l5527 0CC4                       l5519 0C54  
                     l5471 0A60                       l5463 0A14                       l5455 09C8  
                     l5447 0980                       l5439 0940                       l5385 46A0  
                     l5721 37F2                       l5713 37BA                       l5705 371A  
                     l4737 4DEC                       l4681 4A4C                       l4673 4A44  
                     l5377 4DAE                       l5369 4D88                       l4761 4D5C  
                     l3961 1A90                       l3953 1A5A                       l3945 1A4A  
                     l3937 1A3A                       l3929 1A2A                       l3881 192E  
                     l4593 4256                       l4585 4216                       l4665 3A50  
                     l4657 3A0C                       l4649 39DA                       l3873 45AC  
                     l3865 457C                       l3857 453C                       l3849 4504  
                     l3785 48F4                       l4489 3A80                       l4497 3AA4  
                     l5297 2C3A                       l5289 2C0C                       l3793 4FFA  
                     l3777 4BFA                       l3769 4BC0                       l4817 30BA  
                     l4809 3068                       l4841 3646                       l4833 35C6  
                     l4825 356C                       l4921 14BC                       l4913 1464  
                     l4905 1416                       l4745 4960                       l4753 49BA  
                     l5641 1160                       l5633 110C                       l5625 10BE  
                     l5617 1068                       l5609 1004                       l5561 0E32  
                     l5553 0DD4                       l5545 0D6E                       l5537 0D2E  
                     l5529 0CDC                       l5481 0AC8                       l5465 0A26  
                     l5457 09DA                       l5473 0A68                       l5449 0984  
                     l5801 4484                       l5387 46A4                       l5731 3832  
                     l5715 37CA                       l4691 4A5A                       l4683 4A4E  
                     l4675 4A46                       l5379 4DB4                       l4763 4D60  
                     l4755 4D2C                       l3971 1AE2                       l3963 1AAC  
                     l3955 1A5E                       l3947 1A4E                       l3939 1A3E  
                     l3891 196E                       l3883 193C                       l4595 4264  
                     l4587 4240                       l4579 41EC                       l4659 3A30  
                     l3875 45BC                       l3867 458C                       l3859 4544  
                     l3787 491C                       l3779 48BC                       l4499 3AB2  
                     l5299 2C5E                       l3795 5016                       l4819 30D6  
                     l4771 2EDA                       l4851 36AA                       l4843 3656  
                     l4835 35E0                       l4827 357C                       l4923 14DA  
                     l4931 150E                       l4915 1478                       l4907 141E  
                     l4747 497C                       l5651 11C6                       l5643 116C  
                     l5635 1114                       l5627 10DC                       l5619 107C  
                     l5571 0EA2                       l5563 0E4A                       l5555 0DDC  
                     l5547 0D94                       l5539 0D46                       l5491 0B1C  
                     l5483 0AE4                       l5475 0A86                       l5467 0A36  
                     l5459 09EA                       l5811 44B4                       l5803 4486  
                     l5389 46EA                       l5741 38A2                       l5733 3846  
                     l5725 380C                       l5717 37D8                       l4693 4A5C  
                     l4685 4A52                       l4677 4A48                       l4669 49DE  
                     l4757 4D40                       l3981 1B2E                       l3973 1AF0  
                     l3965 1ABC                       l3949 1A52                       l3957 1A62  
                     l3893 1970                       l3885 193E                       l4589 4242  
                     l3869 4596                       l3789 4920                       l4781 2F5E  
                     l4773 2EE2                       l4765 2EAE                       l4861 3362  
                     l4853 36B6                       l4845 365A                       l4837 35FA  
                     l4829 35A0                       l4925 14EC                       l4917 1484  
                     l4909 143A                       l4749 4998                       l5661 122A  
                     l5653 11CE                       l5637 113A                       l5581 0EF8  
                     l5573 0EBA                       l5565 0E52                       l5557 0E02  
                     l5549 0DA8                       l5493 0B34                       l5485 0AF0  
                     l5477 0AA2                       l5469 0A42                       l5397 0862  
                     l5813 44C0                       l5805 4488                       l5743 38A4  
                     l5735 384E                       l3799 40E0                       l4687 4A56  
                     l4679 4A4A                       l4695 4E5E                       l4759 4D4C  
                     l3991 1B6E                       l3975 1AF2                       l3967 1AD2  
                     l3959 1A66                       l3887 194E                       l3895 1978  
                     l3879 1922                       l4791 2FDE                       l4783 2F7A  
                     l4775 2EEA                       l4767 2EC2                       l4871 33D4  
                     l4863 337A                       l4855 36C6                       l4839 360A  
                     l4847 367C                       l4951 15D0                       l4943 1570  
                     l4927 14F0                       l4935 1530                       l4919 14A0  
                     l5671 127E                       l5663 1248                       l5655 11F2  
                     l5647 118E                       l5639 1156                       l5583 0F10  
                     l5575 0EC2                       l5567 0E6E                       l5559 0E16  
                     l5495 0B44                       l5487 0B08                       l5479 0AC0  
                     l5399 086C                       l5815 44C2                       l5807 449A  
                     l5745 38A6                       l5737 3852                       l5729 3826  
                     l4689 4A58                       l4697 4E6A                       l3993 1B7A  
                     l3985 1B42                       l3977 1AFC                       l3969 1ADE  
                     l3897 1988                       l3889 195E                       l4793 2FE6  
                     l4785 2F96                       l4777 2EEE                       l4769 2ECE  
                     l4881 3430                       l4873 33F0                       l4865 338A  
                     l4857 36CA                       l4849 368A                       l4961 1648  
                     l4953 15F2                       l4945 158E                       l4929 1502  
                     l4937 1534                       l5681 1366                       l5673 1296  
                     l5665 1266                       l5657 1206                       l5649 11AA  
                     l5593 0F6A                       l5585 0F18                       l5577 0EE0  
                     l5569 0E82                       l5497 0B4C                       l5489 0B14  
                     l5809 449E                       l5817 44C4                       l5747 38A8  
                     l5739 386E                       l4699 4E7C                       l3995 1B7E  
                     l3987 1B52                       l3979 1B1E                       l3899 198E  
                     l4795 3004                       l4787 2FB4                       l4779 2F52  
                     l4891 34A8                       l4883 3458                       l4875 340A  
                     l4867 33AE                       l4859 331E                       l4971 16AE  
                     l4963 1666                       l4955 15F8                       l4947 1598  
                     l4939 1552                       l5659 120E                       l5595 0F82  
                     l5587 0F36                       l5499 0B60                       l5675 12A0  
                     l5683 1380                       l5749 38AA                       l5941 47CA  
                     l3997 1B8C                       l3989 1B60                       l4797 3020  
                     l4789 2FC2                       l4893 34C6                       l4885 345C  
                     l4877 341A                       l4869 33BA                       l4981 172C  
                     l4973 16DC                       l4965 1684                       l4949 15B4  
                     l4957 1606                       l5685 1394                       l5597 0F8A  
                     l5589 0F4A                       l5677 133E                       l5781 43FA  
                     l5943 4E00                       l3999 1B8E                       l4799 3024  
                     l4895 34F2                       l4879 3424                       l4887 347E  
                     l4991 17A2                       l4975 16E8                       l4983 1730  
                     l4967 1688                       l4959 162C                       l5679 1352  
                     l5599 0FB0                       l5687 139A                       l5791 443E  
                     l5783 43FE                       l5945 4748                       l4897 3502  
                     l4889 348C                       l4993 17A6                       l4985 1752  
                     l4977 1704                       l4969 1694                       l5689 13BC  
                     l5793 444C                       l5785 441E                       l4899 3508  
                     l4979 1720                       l4987 176E                       l4995 17C4  
                     l5939 12C0                       l5795 445E                       l5787 442A  
                     l5779 43F6                       l4997 17D4                       l4989 177A  
                     l5797 4462                       l5789 4438                       l4999 1818  
                     l5799 4478                       STR_1 0850                       STR_2 0833  
                     STR_3 0814                       STR_4 085F                       STR_5 085D  
                     _LATB 000F8A                       u4000 1DCE                       u4001 1DCA  
                     u4010 2226                       u4011 2222                       u4100 23C6  
                     u4020 2238                       u4101 23C2                       u4021 2234  
                     u4110 23F0                       u4030 2248                       u4111 23EC  
                     u4031 2244                       u4200 24EC                       u4120 2414  
                     u4040 228C                       u4201 24E8                       u4121 2410  
                     u4041 2288                       u4210 2534                       u4130 242A  
                     u4050 229E                       u4211 2530                       u4131 2426  
                     u4051 229A                       u3500 40F2                       u5020 4F62  
                     u4220 2564                       u4140 2448                       u4060 22AE  
                     u4300 1EB6                       u5100 2F96                       u3501 40EE  
                     u5021 4F5E                       u5005 4F46                       u4221 2560  
                     u4141 2444                       u4061 22AA                       u4301 1EB2  
                     u5101 2F92                       u3510 4114                       u5006 4F48  
                     u3430 4FC6                       u4230 2592                       u4150 2468  
                     u4070 22EE                       u4310 1EC6                       u5110 2FB4  
                     u5030 497C                       u3511 4110                       u5015 4F50  
                     u3431 4FC2                       u4231 258E                       u4151 2464  
                     u4071 22EA                       u4311 1EC2                       u5111 2FB0  
                     u5031 4978                       u3520 414E                       u5016 4F52  
                     u4160 247A                       u4080 232E                       u4400 2186  
                     u4320 2040                       u4240 1DFC                       u6000 25E0  
                     u3600 457C                       u3440 4C6A                       u5120 2FC2  
                     u5200 35C6                       u5040 4998                       u3521 414A  
                     u4161 2476                       u4081 232A                       u4401 2182  
                     u4241 1DF8                       u6001 25DC                       u3601 4578  
                     u5121 2FBE                       u5201 35C2                       u5041 4994  
                     u3530 4170                       u4170 24A8                       u4090 23A4  
                     u4410 21B4                       u4330 209A                       u4250 1E0E  
                     u6010 262E                       u3610 45AC                       u3450 4C7C  
                     u5130 3004                       u5210 35FA                       u5050 49DC  
                     u3531 416C                       u4171 24A4                       u4091 23A0  
                     u4411 21B0                       u4331 2096                       u4251 1E0A  
                     u6011 262A                       u3611 45A8                       u3451 4C78  
                     u5131 3000                       u5211 35F6                       u5051 49D8  
                     u3540 4198                       u5060 4D7E                       u3700 1A22  
                     u3620 193C                       u4180 24BE                       u4420 21EE  
                     u4340 20BA                       u4260 1E1E                       u6020 2750  
                     u6100 2E3A                       u3460 4BEA                       u4500 4CD4  
                     u5140 3046                       u5300 341A                       u5220 360A  
                     u3541 4194                       u5061 4D7A                       u3701 1A1E  
                     u3621 1938                       u4181 24BA                       u4421 21EA  
                     u4341 20B6                       u4325 2036                       u4261 1E1A  
                     u6021 274C                       u6101 2E36                       u3461 4BE6  
                     u4501 4CD0                       u5141 3042                       u5301 3416  
                     u5221 3606                       u3550 41CA                       u4430 4320  
                     u3710 1A90                       u3630 194E                       u4190 24D2  
                     u4350 20CC                       u4270 1E5E                       u6030 2762  
                     u6110 2E5A                       u3470 4C1C                       u5150 3058  
                     u4510 291E                       u5310 347A                       u5230 3678  
                     u3551 41C6                       u4431 431C                       u3711 1A8C  
                     u3631 194A                       u4191 24CE                       u4351 20C8  
                     u4271 1E5A                       u6031 275E                       u3447 4C60  
                     u6111 2E56                       u3471 4C18                       u5151 3054  
                     u5071 2EC8                       u4511 291A                       u5311 3476  
                     u5231 3674                       u6120 46B8                       u4440 435E  
                     u3800 1B6E                       u3720 1AA8                       u3640 195E  
                     u4360 20FA                       u4280 1E70                       u6040 278E  
                     u3560 44F4                       u5160 3090                       u4600 2A5C  
                     u4520 293E                       u5320 348C                       u5240 368A  
                     u5400 14EC                       u6121 46B0                       u4441 435A  
                     u3801 1B6A                       u3721 1AA2                       u3641 195A  
                     u4361 20F6                       u4281 1E6C                       u6041 278A  
                     u3561 44F0                       u3481 48E0                       u5161 308C  
                     u5081 2ED4                       u4601 2A58                       u4521 293A  
                     u5321 3488                       u5241 3686                       u5401 14E8  
                     u6201 0872                       u4450 437C                       u3810 1B8C  
                     u3730 1AAA                       u3650 19A0                       u4370 2110  
                     u4290 1E80                       u6050 27C8                       u3570 4516  
                     u3490 493E                       u5170 30BA                       u5090 2F7A  
                     u4610 2AAE                       u4530 295C                       u5330 34C6  
                     u5250 36AA                       u5410 1502                       u4451 4378  
                     u3811 1B88                       u3651 199C                       u4371 210C  
                     u4291 1E7C                       u6051 27C4                       u3571 4512  
                     u3491 493A                       u5171 30B6                       u5091 2F76  
                     u4611 2AAA                       u4531 2958                       u5331 34C2  
                     u5251 36A6                       u5411 14FE                       u6211 089A  
                     u6140 46DA                       u4460 439C                       u3900 1CCA  
                     u3820 1BC4                       u3740 1AD2                       u3660 19B6  
                     u4380 2124                       u6060 27E4                       u3580 453C  
                     u4700 3AB2                       u5180 30D6                       u4620 2B20  
                     u4540 2978                       u5340 3526                       u5260 36F4  
                     u5500 162C                       u5420 152C                       u6300 0A60  
                     u6220 08C0                       u6141 46D2                       u4461 4398  
                     u3901 1CC6                       u3821 1BC0                       u3741 1ACE  
                     u3661 19B2                       u4381 2120                       u6061 27E0  
                     u3581 4538                       u4701 3AAE                       u5181 30D2  
                     u4621 2B1C                       u4541 2974                       u5341 3522  
                     u5261 36F0                       u5501 1628                       u5421 1528  
                     u6301 0A5C                       u6221 08BC                       u4470 43EC  
                     u3910 1CE0                       u3830 1C0A                       u3750 1AF0  
                     u3670 19C8                       u4390 213E                       u6070 28CA  
                     u3590 455E                       u4710 3AC6                       u4630 2B38  
                     u4550 29B4                       u5270 337A                       u5190 356C  
                     u5510 1666                       u5430 1552                       u5350 143A  
                     u6310 0A86                       u6230 093C                       u4471 43E8  
                     u3911 1CDC                       u3831 1C06                       u3751 1AEC  
                     u3671 19C4                       u4391 213A                       u6071 28C6  
                     u3591 455A                       u4711 3AC2                       u4631 2B34  
                     u4551 29B0                       u5271 3376                       u5191 3568  
                     u5511 1662                       u5431 154E                       u5351 1436  
                     u6311 0A82                       u6231 0938                       u6160 46FE  
                     u4480 5030                       u3920 1CF6                       u3840 1C40  
                     u3760 1B10                       u3680 19D8                       u4800 4202  
                     u4720 3B30                       u6080 2C00                       u4640 2B4C  
                     u4560 29F2                       u5280 33D4                       u5600 1832  
                     u5520 1684                       u5440 156C                       u5360 1464  
                     u6400 10BE                       u6320 0AC0                       u6240 0970  
                     u6161 46F6                       u4481 502C                       u3921 1CF2  
                     u3841 1C3C                       u3761 1B0C                       u3681 19D4  
                     u4801 41FE                       u4721 3B2C                       u6081 2BFC  
                     u4641 2B48                       u4561 29EE                       u5281 33D0  
                     u5601 182E                       u5521 1680                       u5441 1568  
                     u5361 1460                       u6401 10BA                       u6321 0ABC  
                     u6241 096C                       u6138 46BA                       u3930 1D0A  
                     u3850 1C50                       u3770 1B1E                       u3690 1A14  
                     u4810 4236                       u4730 3BC4                       u6090 2C3A  
                     u4490 4CA8                       u4650 2BAA                       u4570 2A14  
                     u5290 340A                       u5610 1872                       u5530 16AE  
                     u5450 158E                       u5370 14A0                       u6410 118A  
                     u6330 0AE4                       u6250 0996                       u3931 1D06  
                     u3851 1C4C                       u3771 1B1A                       u3691 1A10  
                     u4731 3BC0                       u6091 2C36                       u4491 4CA4  
                     u4651 2BA6                       u4571 2A10                       u5291 3406  
                     u5611 186E                       u5531 16AA                       u5451 158A  
                     u5371 149C                       u6411 1186                       u6331 0AE0  
                     u6251 0992                       u6180 4722                       u6500 3738  
                     u3940 1D24                       u3860 1C7C                       u3780 1B2E  
                     u4820 4264                       u4900 3980                       u4740 3F3A  
                     u4660 4606                       u4580 2A28                       u5620 188E  
                     u5540 16DC                       u5460 15B4                       u5380 14BC  
                     u5700 4B58                       u6420 11AA                       u6340 1000  
                     u6260 09C8                       u6181 471A                       u6501 3730  
                     u3941 1D20                       u3861 1C78                       u3781 1B2A  
                     u4821 4260                       u4901 397C                       u4741 3F36  
                     u4661 4602                       u4581 2A24                       u5621 188A  
                     u5541 16D8                       u5461 15B0                       u5381 14B8  
                     u5701 4B54                       u6421 11A6                       u6341 0FFC  
                     u6261 09C4                       u6158 46DC                       u5710 3D7E  
                     u3950 1D5E                       u3870 1C8C                       u3790 1B60  
                     u4830 4278                       u4910 39CA                       u4750 3FAA  
                     u4670 4622                       u4590 2A42                       u5630 18FC  
                     u5550 1704                       u5470 15D0                       u5390 14DA  
                     u6430 11C6                       u6350 1020                       u6270 09DA  
                     u5711 3D7A                       u3951 1D5A                       u3871 1C88  
                     u3791 1B5C                       u4831 4274                       u4815 422C  
                     u4911 39C6                       u4751 3FA6                       u4671 461E  
                     u4591 2A3E                       u5631 18F8                       u5551 1700  
                     u5471 15CC                       u5391 14D6                       u6431 11C2  
                     u6351 101C                       u6271 09D6                       u6600 380C  
                     u6520 3760                       u5800 3C52                       u5720 3D8C  
                     u4760 4840                       u3960 1D70                       u3880 1CA8  
                     u4840 42A0                       u4920 39E8                       u4680 4694  
                     u5640 1920                       u5560 1720                       u5480 15EE  
                     u6440 11F2                       u6360 103C                       u6280 0A14  
                     u6601 3808                       u6521 3758                       u5801 3C4E  
                     u5721 3D88                       u4761 483C                       u3961 1D6C  
                     u3881 1CA4                       u4841 429C                       u4921 39E4  
                     u4681 4690                       u5641 191C                       u5561 171C  
                     u5481 15EA                       u6441 11EE                       u6361 1038  
                     u6281 0A10                       u6178 4700                       u6610 3826  
                     u5810 3CA0                       u5730 3DAE                       u4770 487E  
                     u3970 1D80                       u3890 1CB8                       u4850 42C0  
                     u4930 39F8                       u4690 3A80                       u5570 1752  
                     u5490 1606                       u5650 3FFC                       u6450 1206  
                     u6370 1068                       u6290 0A26                       u6611 3822  
                     u5811 3C9C                       u5731 3DAA                       u4771 487A  
                     u3971 1D7C                       u3891 1CB4                       u4851 42BC  
                     u4931 39F4                       u4691 3A7C                       u5571 174E  
                     u5491 1602                       u5651 3FF8                       u6451 1202  
                     u6371 1064                       u6291 0A22                       u6620 3846  
                     u6540 3788                       u5820 3CD0                       u5740 3E16  
                     u4780 48B2                       u3980 1DA0                       u4860 42D0  
                     u4940 3A06                       u5580 17C4                       u5660 4052  
                     u5900 31BE                       u6460 122A                       u6380 107C  
                     u6700 449A                       i2l37 4ADE                       u6621 3842  
                     u6541 3780                       u5821 3CCC                       u5741 3E12  
                     u4781 48AE                       u3981 1D9C                       u4861 42CC  
                     u4941 3A02                       u5581 17C0                       u5661 404E  
                     u5901 31BA                       u6461 1226                       u6381 1078  
                     u6701 4496                       u6198 4724                       u6630 386E  
                     u6518 373A                       u5830 3CE2                       u5750 3E46  
                     u4790 4F7C                       u3990 1DB2                       u4950 3A40  
                     u4870 38C0                       u5590 17D4                       u5670 407C  
                     u5910 31E8                       u6470 1248                       u6390 10A0  
                     u6631 386A                       u5831 3CDE                       u5751 3E42  
                     u4791 4F78                       u3991 1DAE                       u4951 3A3C  
                     u4871 38BC                       u5591 17D0                       u5671 4078  
                     u5911 31E4                       u6471 1244                       u6391 109C  
                     u6560 37AE                       u5840 3CF4                       u5760 3E68  
                     u4960 3A4E                       u4880 38CE                       u5680 40A4  
                     u5920 3202                       u6480 13BC                       u6561 37A6  
                     u5841 3CF0                       u5761 3E64                       u4961 3A4A  
                     u4881 38CA                       u5681 40A0                       u5921 31FE  
                     u6481 13B8                       u6538 3762                       u6490 371A  
                     u4970 4EA2                       u5850 3D16                       u5770 3C06  
                     u4890 392A                       u5690 4B12                       u5930 3212  
                     u6491 3716                       u4971 4E9E                       u5851 3D12  
                     u5771 3C02                       u4891 3926                       u5691 4B0E  
                     u5931 320E                       u6580 37D8                       u5780 3C18  
                     u5940 3230                       u5860 313E                       u6581 37D4  
                     u5781 3C14                       u5941 322C                       u5861 313A  
                     u6590 37F2                       u6558 378A                       u5790 3C2A  
                     u5950 324E                       u5870 314E                       u6591 37EE  
                     u5791 3C26                       u5951 324A                       u5871 314A  
                     u6727 446C                       u5960 326C                       u5880 3190  
                     u4985 4F32                       u5961 3268                       u5881 318C  
                     u6737 44A8                       u6578 37B0                       u4986 4F34  
                     u5970 32BE                       u5890 31AE                       u6690 445E  
                     u4995 4F3C                       u5971 32BA                       u5891 31AA  
                     u6747 44CE                       u6691 445A                       u4996 4F3E  
                     u5980 32DC                       u6757 37C0                       u5981 32D8  
                     u5990 32FE                       u5991 32FA                       _main 43F6  
                     _ftoa 25A6                       _itoa 3A62                       _posc 4BC0  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0055                       prodh 000FF4                       prodl 000FF3  
                     start 000E              __CFG_IESO$OFF 000000            ___fldiv@new_exp 0015  
    my_vprintf@double_temp 01E2                _SYSTEM_Init 4D80              __CFG_MCLRE$ON 000000  
             ___param_bank 000000        my_vprintf@uint_temp 01D2           __end_of_KBD_Init 5046  
              ?_TIMER0_Int 0004       __size_of_BLED_Enable 004A              __CFG_PLLDIV$5 000000  
            ___fltol@sign1 0025            __end_of___aldiv 41EC            __end_of___almod 45CE  
          __end_of___fladd 1DE2                      ?_main 0001                      ?_ftoa 0027  
          __end_of___fldiv 25A6                      ?_itoa 0016            __end_of___flneg 4F9E  
          __end_of___flmul 220C                      ?_posc 0008            __end_of___flsub 4E5E  
          __end_of___fltol 42F2       __size_of_BLED_Toggle 0042                      i2l286 4EAA  
                    i2l288 4EB2                      i2l289 4EE4                      _RCREG 000FAE  
                    _TMR0H 000FD7                      _TMR1H 000FCF                      _TMR0L 000FD6  
                    _TMR1L 000FCE                      _SPBRG 000FAF                      _PORTB 000F81  
            __CFG_USBDIV$2 000000                      _TRISB 000F93             my_vprintf@expA 01D6  
                    _TXREG 000FAD             my_vprintf@prec 01E8              __CFG_PWRT$OFF 000000  
           my_vprintf@tipo 0801              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000                      _addOx 3BE2  
           __CFG_EBTRB$OFF 000000                      _getWP 2EAE                      _atoui 45CE  
                    _count 004B                      _precE 331E                      _precF 3528  
                    _precG 13CA                      _precI 3FCC                      _precS 4AE2  
            ?_INTERRUPT_Rb 0001                      _space 004E                      main@c 003C  
          __end_of_searchc 4CD8    __size_of_INTERRUPT_Init 0008                      _zeros 0051  
  __size_of_INTERRUPT_Tmr0 0006                      itoa@i 0028                      tablat 000FF5  
          __end_of_reverse 4954                      posc@a 000C                      posc@c 000A  
                    plusw1 000FE3                      plusw2 000FDB                      ttemp5 0056  
                    ttemp6 0059                      ttemp7 005D              BLED_Color@red 0005  
                    status 000FD8            __end_of_upperCL 49DE                      wtemp8 0056  
             ?_SERIAL_Init 0012            __initialization 4B5A               __end_of_main 44E2  
             __end_of_ftoa 28D8               __end_of_itoa 3BE2               __end_of_posc 4C22  
     SERIAL_WriteChar@data 0004                     ??_main 003A                     ??_ftoa 002D  
                   ??_itoa 001E                     ??_posc 000B     __end_ofmy_vprintf@tipo 0810  
            __activetblptr 000002           ftoa_sci@exponent 0030                 _Interrupts 0008  
          my_vprintf@F3502 0200            my_vprintf@F3510 0049            my_vprintf@F3514 0047  
          my_vprintf@F3517 0060                     ?_addOx 0008                     ?_getWP 0016  
           ??_INTERRUPT_Rb 0004                     ?_atoui 000A                     ?_precE 001F  
                   ?_precF 001F                     ?_precG 001F                     ?_precI 0008  
                   ?_precS 0008                     i2l5357 4EA6                     i2l5359 4EBA  
                   i2l5761 4A90                     i2l5753 4A62                     i2l5771 4AB0  
                   i2l5763 4A96                     i2l5755 4A70                     i2l5773 4AB8  
                   i2l5765 4A9E                     i2l5757 4A78                     i2l5775 4AC8  
                   i2l5759 4A7C                     i2l5767 4AA0                     i2l5777 4ADA  
                   i2l5769 4AAE                     i2l5947 4ECE        __size_of_TIMER0_Int 0040  
                   _SPBRGH 000FB0           __end_of___xxtofl 3A62            my_vprintf@error 01D4  
     __size_of_KBD_GetChar 01B8             __CFG_VREGEN$ON 000000            my_vprintf@width 01DA  
           __CFG_XINST$OFF 000000             getWP@precision 001A               ??_BLED_Color 0006  
                   ___flge 42F2                     ___fleq 4812                     _addSig 3D5A  
            SERIAL_Write@i 000A                  ??___aldiv 000C                  ??___almod 000C  
                   addOx@k 0011                  ??___fladd 000C                     ___wmul 4FFA  
                ??___fldiv 000C                  ??___flneg 0008             __CFG_STVREN$ON 000000  
                ??___flmul 000C                  ??___flsub 0025                  ??___fltol 0021  
                   _alingL 0050                     _cleanS 4D2C                     _keyPad 00A0  
         __end_of_ftoa_sci 2EAE                     _reqKey 0054                     clear_0 4BA0  
                   clear_1 4BAC                     getWP@i 002A                     getWP@j 0030  
                   getWP@k 002C                     getWP@p 002E             getWP@width_str 0023  
                   _strcat 4FD4                     _strcpy 4C22                     _strlen 4F9E  
                   atoui@i 0011           __end_of_setWidth 331E                     precE@i 002B  
                   precE@j 002D                     precE@k 002F                     precF@i 002A  
                   precG@f 0028                     precF@j 0026                     precF@k 002E  
                   precE@p 0025                     precG@i 0034                     precG@j 0030  
                   precG@k 0032                     precF@p 0028                     precG@p 0026  
                   precI@i 0014                     precI@j 0010                     precI@k 000E  
                   precS@i 0010                  ??_searchc 000B               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_reverse 0014           __end_of_roundStr 2BCE                  ??_upperCL 000A  
        ?_SERIAL_WriteChar 0001         __end_of_BLED_Color 4760                 ___flge@ff1 0004  
               ___flge@ff2 0008               ___xxtofl@arg 000E               ___xxtofl@exp 000D  
             ___xxtofl@val 0004                 ___fleq@ff1 0004                 ___fleq@ff2 0008  
                ?_KBD_Init 0001         ??_SERIAL_WriteChar 0004                 __accesstop 0060  
  __end_of__initialization 4BB2            __CFG_PBADEN$OFF 000000                 ___flneg@f1 0004  
            ___rparam_used 000001                 ___fltol@f1 001D               ftoa@exponent 0031  
            ?_SERIAL_Write 0008             __pcstackCOMRAM 0001               __pidataBANK0 4CD8  
             __pidataBANK2 4EE6              __end_of_addOx 3D5A              __end_of_getWP 30F4  
            __end_of_atoui 469E              __end_of_precE 3528              __end_of_precF 36F6  
            __end_of_precG 1922              __end_of_precI 40E0              __end_of_precS 4B5A  
              ?_Interrupts 0001                 addSig@numS 0012      __end_offtoa_sci@width 0814  
                  ??_addOx 000D                    ??_getWP 001C                    ??_atoui 000C  
                  ??_precE 0023                    ??_precF 0023                    ??_precG 0023  
                  ??_precI 000C                    ??_precS 000C             _INTERRUPT_Init 5046  
           _INTERRUPT_Tmr0 504E              ?_TIMER0_SetPs 0001                 __pbssBANK2 0200  
               ??_KBD_Init 0004             ??_SERIAL_Write 000A               ?_SYSTEM_Init 0001  
                  ?___flge 0004                    ?___fleq 0004                    ?_addSig 0012  
                  ?___wmul 0004       __size_of_SERIAL_Init 0082                    ?_cleanS 0008  
     __end_of_INTERRUPT_Rb 505A               ??_TIMER0_Int 0007                    ?_strcat 0012  
                  ?_strcpy 0008                    ?_strlen 0004         __size_of_normalize 0120  
                ?___xxtofl 0004      my_vprintf@string_temp 01CE     __end_of_INTERRUPT_Init 504E  
   __end_of_INTERRUPT_Tmr0 5054             ??_TIMER0_SetPs 0004           my_vprintf@buffer 018E  
         my_vprintf@format 0184           my_vprintf@length 0180           my_vprintf@valist 01E6  
                ?_ftoa_sci 00F8         __end_of_TIMER0_Int 4F66           my_vprintf@string 0100  
              setWidth@len 0010                setWidth@str 0008                    __Hparam 0000  
                ?_setWidth 0008                    __Lparam 0000              ??_BLED_Enable 0004  
      __size_of_Interrupts 4ADA                    ___aldiv 40E0            __size_of___flge 0104  
          __size_of___fleq 00AA                    ___almod 44E2                    ___fladd 1922  
          __size_of_addSig 0152                    ___fldiv 220C                    ___flneg 4F66  
                  ___flmul 1DE2                    ___flsub 4E18                    ___fltol 41EC  
          __size_of___wmul 0026            __size_of_cleanS 0054                  ?_roundStr 000E  
             __psmallconst 0800              ??_BLED_Toggle 0001                    addSig@k 001C  
                  __pcinit 4B5A                    __ramtop 0800                    __ptext0 43F6  
                  __ptext1 0862                    __ptext2 4954                    __ptext3 4FD4  
                  __ptext4 30F4                    __ptext5 4AE2                    __ptext6 3FCC  
                  __ptext7 13CA                    __ptext8 3528                    __ptext9 331E  
                _T0CONbits 000FD5            __size_of_strcat 0026            __size_of_strcpy 005C  
          __size_of_strlen 0036                  _T1CONbits 000FCD                 ??___xxtofl 0008  
                  cleanS@i 000D                    _searchc 4C7E           ___aldiv@dividend 0004  
                  _precInt 004F            ?_INTERRUPT_Init 0001                    _reverse 48BC  
          ?_INTERRUPT_Tmr0 0001                    _numeral 004D                    _upperCL 4954  
           __pintcode_body 4A60                    atoui@vp 000F       end_of_initialization 4BB2  
              reverse@F192 0280                 getWP@width 0018                 ??_ftoa_sci 002A  
                  itoa@rem 0024                    itoa@num 0018           BLED_Toggle@biled 0003  
            __Lmediumconst 0000                    itoa@str 0016                    int_func 4A60  
        __end_of_normalize 3FCC                 ??_setWidth 000C                    posc@str 0008  
                _RCSTAbits 000FAB           ___aldiv@quotient 000E                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc2 000FDE  
          BLED_Color@biled 0008            BLED_Color@green 0004                 ??_roundStr 0014  
                  strcpy@d 0010                    strlen@a 0006                    strcpy@s 000E  
                  strlen@s 0004                  _PORTBbits 000F81                 _my_vprintf 0862  
      __end_of_BLED_Enable 4E18                ___fladd@grs 0013        __end_of_BLED_Toggle 4EE6  
            ___xxtofl@sign 000C       __end_of_SERIAL_Write 4EA4                  _TRISAbits 000F92  
                _TRISBbits 000F93                  _TRISCbits 000F94                  _TRISDbits 000F95  
                _TRISEbits 000F96                ___fldiv@grs 0017                ___fldiv@rem 0010  
        __end_offtoa@width 0812            TIMER0_Int@t0_8b 0007                my_vprintf@i 01E0  
              my_vprintf@j 01DC                my_vprintf@x 01D8              ??_KBD_GetChar 0004  
          TIMER0_Int@t0_cs 0004            TIMER0_Int@t0_se 0005         ftoa_sci@digit_1655 002C  
              ___flmul@grs 0011         my_vprintf@int_temp 01DE          normalize@exponent 001F  
                _TXSTAbits 000FAC          __size_of_KBD_Init 0010      __size_of_INTERRUPT_Rb 0006  
           ftoa_sci@buffer 00F8  __size_of_SERIAL_WriteChar 0016       __size_of_SYSTEM_Init 004E  
           __end_of___flge 43F6             __end_of___fleq 48BC             __end_of_addSig 3EAC  
     __end_of_TIMER0_SetPs 4812             __end_of___wmul 5020       TIMER0_SetPs@prescale 0006  
              _BAUDCONbits 000FB8             __end_of_cleanS 4D80             __end_of_strcat 4FFA  
               ftoa@buffer 0027             __end_of_strcpy 4C7E             __end_of_strlen 4FD4  
      start_initialization 4B5A               ??_Interrupts 0004                 ftoa@places 0033  
            setWidth@width 000A               _INTERRUPT_Rb 5054           setWidth@widthDif 000E  
      __end_of_KBD_GetChar 38AE              getWP@prec_str 001E                   ??___flge 000C  
                 ??___fleq 000C                   ??_addSig 0018             precE@precision 0021  
              _BLED_Enable 4DCE         __end_of_Interrupts 4AE2                   ??___wmul 0008  
              roundStr@len 0017                   ??_cleanS 000A                roundStr@prn 0012  
              __pdataBANK0 0060                __pdataBANK2 0280           __CFG_LPT1OSC$OFF 000000  
              _BLED_Toggle 4EA4                ?_my_vprintf 0036                   ??_strcat 0016  
           precF@precision 0021                   ??_strcpy 000C                   ??_strlen 0006  
                ___fladd@a 0008                  ___fladd@b 0004                  ___fldiv@a 0008  
                ___fldiv@b 0004                  ___flmul@a 0008                  ___flmul@b 0004  
              __pbssCOMRAM 003D                  ___flsub@a 0021                  ___flsub@b 001D  
            __pcstackBANK0 00B4              __pcstackBANK1 0100             precG@precision 0021  
        __size_of___xxtofl 01B4           _SERIAL_Init$2374 0016                  addSig@len 001A  
                addSig@num 0014                  addOx@type 000C          __size_of_ftoa_sci 02E0  
            ??_SERIAL_Init 0016                 searchc@str 0008                  __pintcode 0008  
           precI@precision 000A                   ?___aldiv 0004                   ?___almod 0004  
                 ?___fladd 0004                   ?___fldiv 0004                   ?___flneg 0004  
        __size_of_setWidth 022A                   ?___flmul 0004                   ?___flsub 001D  
                 ?___fltol 001D           ___almod@dividend 0004      __size_of_SERIAL_Write 0046  
         ??_INTERRUPT_Init 0004                  _itoa$1637 0020           ??_INTERRUPT_Tmr0 0004  
        __size_of_roundStr 02F6             normalize@value 0021                __smallconst 0800  
                 ?_searchc 0008                   ?_reverse 0012             __size_of_addOx 0178  
           __size_of_getWP 0246                   ?_upperCL 0008             __size_of_atoui 00D0  
           __size_of_precE 020A             __size_of_precF 01CE             __size_of_precG 0558  
           __size_of_precI 0114             __size_of_precS 0078                  getWP@F271 003D  
                getWP@F269 0042                  cleanS@len 000B                  cleanS@str 0008  
              _KBD_GetChar 36F6                   _KBD_Init 5036            ___aldiv@divisor 0008  
          ___aldiv@counter 000C             ___wmul@product 0008                   _LATBbits 000F8A  
                 _LATCbits 000F8B                   _LATDbits 000F8C                   _LATEbits 000F8D  
      __size_of_my_vprintf 0B68                  getWP@form 0016                   _PIE1bits 000F9D  
               reverse@str 0012      __size_of_TIMER0_SetPs 00B2                   _PIR1bits 000F9E  
             _SERIAL_Write 4E5E                   i2u664_40 4A70                   i2u664_41 4A6C  
                 i2u665_40 4A90                   i2u665_41 4A8C                   i2u666_40 4AAE  
                 i2u666_41 4AAA                   i2u667_40 4AC8                   i2u667_41 4AC4  
                 i2u668_40 4ADA                   i2u668_41 4AD6            SERIAL_Init@BAUD 0012  
                 _RCONbits 000FD0           _SERIAL_WriteChar 5020           __CFG_WDTPS$32768 000000  
                _normalize 3EAC        __end_of_SERIAL_Init 4A60          ___wmul@multiplier 0004  
        my_vprintf@sformat 0036              ftoa_sci@digit 002A              ftoa_sci@value 00FA  
            ftoa_sci@width 0812                _INTCON2bits 000FF1                _INTCON3bits 000FF0  
                copy_data0 4B6E                  copy_data1 4B8E               _TIMER0_SetPs 4760  
                ftoa@digit 002D                  ftoa@value 0029                  ftoa@width 0810  
                 __Hrparam 0000                  ftoa_sci@i 002E                   __Lrparam 0000  
               _BLED_Color 469E                 ?_normalize 001D                  itoa@base_ 001C  
         __size_of___aldiv 010C           __size_of___almod 00EC           __size_of___fladd 04C0  
         __size_of___fldiv 039A           __size_of___flneg 0038           __size_of___flmul 042A  
         __size_of___flsub 0046           __size_of___fltol 0106                 upperCL@str 0008  
          SERIAL_Write@str 0008                   addOx@hoS 0008                   addOx@len 000F  
                 addOx@num 000A              reverse@auxstr 00B4                   ___xxtofl 38AE  
               strcat@dest 0012                  precG@digS 002A                  precE@posE 0029  
                precG@posE 002C           __size_of_searchc 005A                   __ptext10 28D8  
                 __ptext11 2EAE                   __ptext20 44E2                   __ptext12 4C7E  
                 __ptext21 25A6                   __ptext13 4BC0                   __ptext30 4812  
                 __ptext22 3EAC                   __ptext14 45CE                   __ptext31 4D2C  
                 __ptext23 1DE2                   __ptext15 4FFA                   __ptext40 4F26  
                 __ptext32 3D5A                   __ptext24 220C                   __ptext16 2BCE  
                 __ptext41 49DE                   __ptext33 42F2                   __ptext25 38AE  
                 __ptext17 3A62                   __ptext42 40E0                   __ptext34 3BE2  
                 __ptext26 41EC                   __ptext18 48BC                   __ptext51 4EA4  
                 __ptext43 5036                   __ptext35 4E5E                   __ptext27 4E18  
                 __ptext19 4C22                   __ptext44 504E                   __ptext36 4F9E  
                 __ptext28 1922                   __ptext45 5054                   __ptext37 5020  
                 __ptext29 4F66                   __ptext46 5046                   __ptext38 4D80  
                 __ptext47 4DCE                   __ptext39 4760                   __ptext48 36F6  
                 __ptext49 469E           __size_of_reverse 0098             precS@precision 000A  
          ___almod@divisor 0008           __size_of_upperCL 008A            ___almod@counter 000C  
               strcpy@dest 0008                  setWidth@j 0012                   _ftoa_sci 2BCE  
            __size_of_main 00EC              __size_of_ftoa 0332              __size_of_itoa 0180  
            __size_of_posc 0062           BLED_Enable@biled 0006             roundStr@decnum 000E  
                 getWP@len 0028              ??_SYSTEM_Init 001C                   _setWidth 30F4  
              _SERIAL_Init 49DE               ?_BLED_Enable 0001                   int$flags 0055  
                 _roundStr 28D8               ?_BLED_Toggle 0001               ??_my_vprintf 0038  
                 atoui@num 000D                   atoui@str 000A      __CFG_CPUDIV$OSC1_PLL2 000000  
               _INTCONbits 000FF2                  roundStr@e 0010                  roundStr@i 001B  
                roundStr@k 001D                  roundStr@p 0019        SERIAL_Init@baudrate 001A  
                 intlevel2 0000                   precE@len 0027                   searchc@a 000C  
                 searchc@c 000A                  strcat@src 0014                   precF@len 002C  
                 precG@len 002E                   precE@str 001F                   precI@len 0012  
                 precF@str 001F                   precG@str 001F                   precI@str 0008  
                 precS@len 000E                   precS@str 0008               normalize@val 001D  
                strcpy@src 000A         __end_of_my_vprintf 13CA                   reverse@i 00F6  
                 reverse@j 00F4                ?_BLED_Color 0004                ??_normalize 001F  
           ftoa@digit_1663 002F                 _TIMER0_Int 4F26        __end_of_SYSTEM_Init 4DCE  
                 upperCL@i 000B               ___aldiv@sign 000D   __end_of_SERIAL_WriteChar 5036  
           KBD_GetChar@col 000B              ___fladd@signs 0010             KBD_GetChar@key 0008  
           KBD_GetChar@row 0009         __CFG_FOSC$HSPLL_HS 000000               ?_KBD_GetChar 0001  
             ___almod@sign 000D        my_vprintf@char_temp 0182               ___fladd@aexp 0011  
             ___fladd@bexp 0012  
