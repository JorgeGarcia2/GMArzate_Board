

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Sep 14 19:17:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    94                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    95                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    96  0000                     
    97                           ; Version 2.10
    98                           ; Generated 31/07/2019 GMT
    99                           ; 
   100                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F4550 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	idataBANK0
   133  00543A                     __pidataBANK0:
   134                           	opt callstack 0
   135                           
   136                           ;initializer for _keyPad
   137  00543A  31                 	db	49
   138  00543B  32                 	db	50
   139  00543C  33                 	db	51
   140  00543D  41                 	db	65
   141  00543E  34                 	db	52
   142  00543F  35                 	db	53
   143  005440  36                 	db	54
   144  005441  42                 	db	66
   145  005442  37                 	db	55
   146  005443  38                 	db	56
   147  005444  39                 	db	57
   148  005445  43                 	db	67
   149  005446  2A                 	db	42
   150  005447  30                 	db	48
   151  005448  23                 	db	35
   152  005449  44                 	db	68
   153  00544A  00                 	db	0
   154  00544B  00                 	db	0
   155  00544C  00                 	db	0
   156  00544D  00                 	db	0
   157                           
   158                           	psect	idataBANK2
   159  005120                     __pidataBANK2:
   160                           	opt callstack 0
   161                           
   162                           ;initializer for reverse@F192
   163  005120  20                 	db	32
   164  005121  00                 	db	0
   165  005122  00                 	db	0
   166  005123  00                 	db	0
   167  005124  00                 	db	0
   168  005125  00                 	db	0
   169  005126  00                 	db	0
   170  005127  00                 	db	0
   171  005128  00                 	db	0
   172  005129  00                 	db	0
   173  00512A  00                 	db	0
   174  00512B  00                 	db	0
   175  00512C  00                 	db	0
   176  00512D  00                 	db	0
   177  00512E  00                 	db	0
   178  00512F  00                 	db	0
   179  005130  00                 	db	0
   180  005131  00                 	db	0
   181  005132  00                 	db	0
   182  005133  00                 	db	0
   183  005134  00                 	db	0
   184  005135  00                 	db	0
   185  005136  00                 	db	0
   186  005137  00                 	db	0
   187  005138  00                 	db	0
   188  005139  00                 	db	0
   189  00513A  00                 	db	0
   190  00513B  00                 	db	0
   191  00513C  00                 	db	0
   192  00513D  00                 	db	0
   193  00513E  00                 	db	0
   194  00513F  00                 	db	0
   195  005140  00                 	db	0
   196  005141  00                 	db	0
   197  005142  00                 	db	0
   198  005143  00                 	db	0
   199  005144  00                 	db	0
   200  005145  00                 	db	0
   201  005146  00                 	db	0
   202  005147  00                 	db	0
   203  005148  00                 	db	0
   204  005149  00                 	db	0
   205  00514A  00                 	db	0
   206  00514B  00                 	db	0
   207  00514C  00                 	db	0
   208  00514D  00                 	db	0
   209  00514E  00                 	db	0
   210  00514F  00                 	db	0
   211  005150  00                 	db	0
   212  005151  00                 	db	0
   213  005152  00                 	db	0
   214  005153  00                 	db	0
   215  005154  00                 	db	0
   216  005155  00                 	db	0
   217  005156  00                 	db	0
   218  005157  00                 	db	0
   219  005158  00                 	db	0
   220  005159  00                 	db	0
   221  00515A  00                 	db	0
   222  00515B  00                 	db	0
   223  00515C  00                 	db	0
   224  00515D  00                 	db	0
   225  00515E  00                 	db	0
   226  00515F  00                 	db	0
   227                           
   228                           	psect	mediumconst
   229  007E88                     __pmediumconst:
   230                           	opt callstack 0
   231  007E88  00                 	db	0
   232  007E89                     my_vsprintf@tipo:
   233                           	opt callstack 0
   234  007E89  25                 	db	37
   235  007E8A  63                 	db	99
   236  007E8B  73                 	db	115
   237  007E8C  64                 	db	100
   238  007E8D  69                 	db	105
   239  007E8E  78                 	db	120
   240  007E8F  58                 	db	88
   241  007E90  6F                 	db	111
   242  007E91  75                 	db	117
   243  007E92  66                 	db	102
   244  007E93  67                 	db	103
   245  007E94  47                 	db	71
   246  007E95  65                 	db	101
   247  007E96  45                 	db	69
   248  007E97  6E                 	db	110
   249  007E98                     __end_ofmy_vsprintf@tipo:
   250                           	opt callstack 0
   251  007E98  0000               	dw	0
   252  007E9A  4B00               	dw	19200
   253  007E9C                     __end_of_toint:
   254                           	opt callstack 0
   255  007E9C  0007               	dw	7
   256  007E9E                     __end_offtoa@width:
   257                           	opt callstack 0
   258  007E9E  0006               	dw	6
   259  007EA0                     __end_offtoa_sci@width:
   260                           	opt callstack 0
   261  0000                     _PORTCbits	set	3970
   262  0000                     _LATD	set	3980
   263  0000                     _LATDbits	set	3980
   264  0000                     _TRISD	set	3989
   265  0000                     _TMR1H	set	4047
   266  0000                     _T1CONbits	set	4045
   267  0000                     _TMR1L	set	4046
   268  0000                     _TMR0H	set	4055
   269  0000                     _TRISAbits	set	3986
   270  0000                     _T0CONbits	set	4053
   271  0000                     _LATEbits	set	3981
   272  0000                     _TRISEbits	set	3990
   273  0000                     _PORTBbits	set	3969
   274  0000                     _LATB	set	3978
   275  0000                     _TRISB	set	3987
   276  0000                     _PORTB	set	3969
   277  0000                     _PIE1bits	set	3997
   278  0000                     _INTCON3bits	set	4080
   279  0000                     _INTCON2bits	set	4081
   280  0000                     _TRISBbits	set	3987
   281  0000                     _RCONbits	set	4048
   282  0000                     _RCREG	set	4014
   283  0000                     _PIR1bits	set	3998
   284  0000                     _TXREG	set	4013
   285  0000                     _SPBRG	set	4015
   286  0000                     _SPBRGH	set	4016
   287  0000                     _BAUDCONbits	set	4024
   288  0000                     _TXSTAbits	set	4012
   289  0000                     _RCSTAbits	set	4011
   290  0000                     _TRISCbits	set	3988
   291  0000                     _LATBbits	set	3978
   292  0000                     _LATCbits	set	3979
   293  0000                     _INTCONbits	set	4082
   294  007EA0                     STR_14:
   295  007EA0  0A                 	db	10
   296  007EA1  54                 	db	84	;'T'
   297  007EA2  65                 	db	101	;'e'
   298  007EA3  6D                 	db	109	;'m'
   299  007EA4  70                 	db	112	;'p'
   300  007EA5  65                 	db	101	;'e'
   301  007EA6  72                 	db	114	;'r'
   302  007EA7  61                 	db	97	;'a'
   303  007EA8  74                 	db	116	;'t'
   304  007EA9  75                 	db	117	;'u'
   305  007EAA  72                 	db	114	;'r'
   306  007EAB  65                 	db	101	;'e'
   307  007EAC  3A                 	db	58	;':'
   308  007EAD  20                 	db	32
   309  007EAE  25                 	db	37
   310  007EAF  2E                 	db	46
   311  007EB0  31                 	db	49	;'1'
   312  007EB1  66                 	db	102	;'f'
   313  007EB2  20                 	db	32
   314  007EB3  C2                 	db	-62
   315  007EB4  B0                 	db	-80
   316  007EB5  43                 	db	67	;'C'
   317  007EB6  0A                 	db	10
   318  007EB7  52                 	db	82	;'R'
   319  007EB8  65                 	db	101	;'e'
   320  007EB9  6C                 	db	108	;'l'
   321  007EBA  61                 	db	97	;'a'
   322  007EBB  74                 	db	116	;'t'
   323  007EBC  69                 	db	105	;'i'
   324  007EBD  76                 	db	118	;'v'
   325  007EBE  65                 	db	101	;'e'
   326  007EBF  20                 	db	32
   327  007EC0  48                 	db	72	;'H'
   328  007EC1  75                 	db	117	;'u'
   329  007EC2  6D                 	db	109	;'m'
   330  007EC3  65                 	db	101	;'e'
   331  007EC4  64                 	db	100	;'d'
   332  007EC5  69                 	db	105	;'i'
   333  007EC6  74                 	db	116	;'t'
   334  007EC7  79                 	db	121	;'y'
   335  007EC8  3A                 	db	58	;':'
   336  007EC9  20                 	db	32
   337  007ECA  25                 	db	37
   338  007ECB  2E                 	db	46
   339  007ECC  31                 	db	49	;'1'
   340  007ECD  66                 	db	102	;'f'
   341  007ECE  20                 	db	32
   342  007ECF  25                 	db	37
   343  007ED0  25                 	db	37
   344  007ED1  0A                 	db	10
   345  007ED2  00                 	db	0
   346  007ED3                     STR_13:
   347  007ED3  0D                 	db	13
   348  007ED4  54                 	db	84	;'T'
   349  007ED5  65                 	db	101	;'e'
   350  007ED6  6D                 	db	109	;'m'
   351  007ED7  70                 	db	112	;'p'
   352  007ED8  3A                 	db	58	;':'
   353  007ED9  20                 	db	32
   354  007EDA  25                 	db	37
   355  007EDB  2E                 	db	46
   356  007EDC  31                 	db	49	;'1'
   357  007EDD  66                 	db	102	;'f'
   358  007EDE  20                 	db	32
   359  007EDF  43                 	db	67	;'C'
   360  007EE0  0A                 	db	10
   361  007EE1  0D                 	db	13
   362  007EE2  52                 	db	82	;'R'
   363  007EE3  65                 	db	101	;'e'
   364  007EE4  6C                 	db	108	;'l'
   365  007EE5  20                 	db	32
   366  007EE6  48                 	db	72	;'H'
   367  007EE7  75                 	db	117	;'u'
   368  007EE8  6D                 	db	109	;'m'
   369  007EE9  3A                 	db	58	;':'
   370  007EEA  20                 	db	32
   371  007EEB  25                 	db	37
   372  007EEC  2E                 	db	46
   373  007EED  31                 	db	49	;'1'
   374  007EEE  66                 	db	102	;'f'
   375  007EEF  25                 	db	37
   376  007EF0  25                 	db	37
   377  007EF1  00                 	db	0
   378  007EF2  0A                 	db	10
   379  007EF3  47                 	db	71	;'G'
   380  007EF4  69                 	db	105	;'i'
   381  007EF5  72                 	db	114	;'r'
   382  007EF6  6F                 	db	111	;'o'
   383  007EF7  20                 	db	32
   384  007EF8  44                 	db	68	;'D'
   385  007EF9  65                 	db	101	;'e'
   386  007EFA  72                 	db	114	;'r'
   387  007EFB  65                 	db	101	;'e'
   388  007EFC  63                 	db	99	;'c'
   389  007EFD  68                 	db	104	;'h'
   390  007EFE  61                 	db	97	;'a'
   391  007EFF  20                 	db	32
   392  007F00  25                 	db	37
   393  007F01  73                 	db	115	;'s'
   394  007F02  20                 	db	32
   395  007F03  25                 	db	37
   396  007F04  64                 	db	100	;'d'
   397  007F05  20                 	db	32
   398  007F06  25                 	db	37
   399  007F07  2E                 	db	46
   400  007F08  32                 	db	50	;'2'
   401  007F09  66                 	db	102	;'f'
   402  007F0A  2E                 	db	46
   403  007F0B  2D                 	db	45
   404  007F0C  2E                 	db	46
   405  007F0D  00                 	db	0
   406  007F0E  0D                 	db	13
   407  007F0F  47                 	db	71	;'G'
   408  007F10  69                 	db	105	;'i'
   409  007F11  72                 	db	114	;'r'
   410  007F12  6F                 	db	111	;'o'
   411  007F13  20                 	db	32
   412  007F14  49                 	db	73	;'I'
   413  007F15  7A                 	db	122	;'z'
   414  007F16  71                 	db	113	;'q'
   415  007F17  75                 	db	117	;'u'
   416  007F18  69                 	db	105	;'i'
   417  007F19  65                 	db	101	;'e'
   418  007F1A  72                 	db	114	;'r'
   419  007F1B  64                 	db	100	;'d'
   420  007F1C  61                 	db	97	;'a'
   421  007F1D  20                 	db	32
   422  007F1E  0A                 	db	10
   423  007F1F  0D                 	db	13
   424  007F20  25                 	db	37
   425  007F21  2E                 	db	46
   426  007F22  32                 	db	50	;'2'
   427  007F23  66                 	db	102	;'f'
   428  007F24  20                 	db	32
   429  007F25  2E                 	db	46
   430  007F26  2D                 	db	45
   431  007F27  2E                 	db	46
   432  007F28  00                 	db	0
   433  007F29  0D                 	db	13
   434  007F2A  4D                 	db	77	;'M'
   435  007F2B  6F                 	db	111	;'o'
   436  007F2C  74                 	db	116	;'t'
   437  007F2D  6F                 	db	111	;'o'
   438  007F2E  72                 	db	114	;'r'
   439  007F2F  20                 	db	32
   440  007F30  64                 	db	100	;'d'
   441  007F31  65                 	db	101	;'e'
   442  007F32  74                 	db	116	;'t'
   443  007F33  65                 	db	101	;'e'
   444  007F34  6E                 	db	110	;'n'
   445  007F35  69                 	db	105	;'i'
   446  007F36  64                 	db	100	;'d'
   447  007F37  6F                 	db	111	;'o'
   448  007F38  20                 	db	32
   449  007F39  0A                 	db	10
   450  007F3A  0D                 	db	13
   451  007F3B  25                 	db	37
   452  007F3C  45                 	db	69	;'E'
   453  007F3D  20                 	db	32
   454  007F3E  2E                 	db	46
   455  007F3F  2D                 	db	45
   456  007F40  2E                 	db	46
   457  007F41  00                 	db	0
   458  007F42  0A                 	db	10
   459  007F43  4D                 	db	77	;'M'
   460  007F44  6F                 	db	111	;'o'
   461  007F45  74                 	db	116	;'t'
   462  007F46  6F                 	db	111	;'o'
   463  007F47  72                 	db	114	;'r'
   464  007F48  20                 	db	32
   465  007F49  64                 	db	100	;'d'
   466  007F4A  65                 	db	101	;'e'
   467  007F4B  74                 	db	116	;'t'
   468  007F4C  65                 	db	101	;'e'
   469  007F4D  6E                 	db	110	;'n'
   470  007F4E  69                 	db	105	;'i'
   471  007F4F  64                 	db	100	;'d'
   472  007F50  6F                 	db	111	;'o'
   473  007F51  20                 	db	32
   474  007F52  25                 	db	37
   475  007F53  45                 	db	69	;'E'
   476  007F54  20                 	db	32
   477  007F55  2E                 	db	46
   478  007F56  2D                 	db	45
   479  007F57  2E                 	db	46
   480  007F58  00                 	db	0
   481  007F59  0A                 	db	10
   482  007F5A  47                 	db	71	;'G'
   483  007F5B  69                 	db	105	;'i'
   484  007F5C  72                 	db	114	;'r'
   485  007F5D  6F                 	db	111	;'o'
   486  007F5E  20                 	db	32
   487  007F5F  49                 	db	73	;'I'
   488  007F60  7A                 	db	122	;'z'
   489  007F61  71                 	db	113	;'q'
   490  007F62  75                 	db	117	;'u'
   491  007F63  69                 	db	105	;'i'
   492  007F64  65                 	db	101	;'e'
   493  007F65  72                 	db	114	;'r'
   494  007F66  64                 	db	100	;'d'
   495  007F67  61                 	db	97	;'a'
   496  007F68  20                 	db	32
   497  007F69  25                 	db	37
   498  007F6A  66                 	db	102	;'f'
   499  007F6B  20                 	db	32
   500  007F6C  2E                 	db	46
   501  007F6D  2D                 	db	45
   502  007F6E  2E                 	db	46
   503  007F6F  00                 	db	0
   504  007F70  0D                 	db	13
   505  007F71  47                 	db	71	;'G'
   506  007F72  69                 	db	105	;'i'
   507  007F73  72                 	db	114	;'r'
   508  007F74  6F                 	db	111	;'o'
   509  007F75  20                 	db	32
   510  007F76  44                 	db	68	;'D'
   511  007F77  65                 	db	101	;'e'
   512  007F78  72                 	db	114	;'r'
   513  007F79  65                 	db	101	;'e'
   514  007F7A  63                 	db	99	;'c'
   515  007F7B  68                 	db	104	;'h'
   516  007F7C  61                 	db	97	;'a'
   517  007F7D  20                 	db	32
   518  007F7E  0A                 	db	10
   519  007F7F  0D                 	db	13
   520  007F80  25                 	db	37
   521  007F81  69                 	db	105	;'i'
   522  007F82  20                 	db	32
   523  007F83  2E                 	db	46
   524  007F84  2D                 	db	45
   525  007F85  2E                 	db	46
   526  007F86  00                 	db	0
   527  007F87                     STR_18:
   528  007F87  42                 	db	66	;'B'
   529  007F88  49                 	db	73	;'I'
   530  007F89  45                 	db	69	;'E'
   531  007F8A  4E                 	db	78	;'N'
   532  007F8B  56                 	db	86	;'V'
   533  007F8C  45                 	db	69	;'E'
   534  007F8D  4E                 	db	78	;'N'
   535  007F8E  49                 	db	73	;'I'
   536  007F8F  44                 	db	68	;'D'
   537  007F90  4F                 	db	79	;'O'
   538  007F91  20                 	db	32
   539  007F92  3A                 	db	58	;':'
   540  007F93  29                 	db	41
   541  007F94  0A                 	db	10
   542  007F95  0A                 	db	10
   543  007F96  00                 	db	0
   544  007F97                     STR_17:
   545  007F97  0D                 	db	13
   546  007F98  42                 	db	66	;'B'
   547  007F99  49                 	db	73	;'I'
   548  007F9A  45                 	db	69	;'E'
   549  007F9B  4E                 	db	78	;'N'
   550  007F9C  56                 	db	86	;'V'
   551  007F9D  45                 	db	69	;'E'
   552  007F9E  4E                 	db	78	;'N'
   553  007F9F  49                 	db	73	;'I'
   554  007FA0  44                 	db	68	;'D'
   555  007FA1  4F                 	db	79	;'O'
   556  007FA2  20                 	db	32
   557  007FA3  3A                 	db	58	;':'
   558  007FA4  29                 	db	41
   559  007FA5  00                 	db	0
   560  007FA6  0A                 	db	10
   561  007FA7  54                 	db	84	;'T'
   562  007FA8  65                 	db	101	;'e'
   563  007FA9  63                 	db	99	;'c'
   564  007FAA  6C                 	db	108	;'l'
   565  007FAB  61                 	db	97	;'a'
   566  007FAC  3A                 	db	58	;':'
   567  007FAD  20                 	db	32
   568  007FAE  25                 	db	37
   569  007FAF  63                 	db	99	;'c'
   570  007FB0  20                 	db	32
   571  007FB1  2E                 	db	46
   572  007FB2  2D                 	db	45
   573  007FB3  2E                 	db	46
   574  007FB4  00                 	db	0
   575  007FB5  0D                 	db	13
   576  007FB6  54                 	db	84	;'T'
   577  007FB7  65                 	db	101	;'e'
   578  007FB8  63                 	db	99	;'c'
   579  007FB9  6C                 	db	108	;'l'
   580  007FBA  61                 	db	97	;'a'
   581  007FBB  3A                 	db	58	;':'
   582  007FBC  20                 	db	32
   583  007FBD  25                 	db	37
   584  007FBE  63                 	db	99	;'c'
   585  007FBF  20                 	db	32
   586  007FC0  2E                 	db	46
   587  007FC1  2D                 	db	45
   588  007FC2  2E                 	db	46
   589  007FC3  00                 	db	0
   590  007FC4  0A                 	db	10
   591  007FC5  43                 	db	67	;'C'
   592  007FC6  6F                 	db	111	;'o'
   593  007FC7  75                 	db	117	;'u'
   594  007FC8  6E                 	db	110	;'n'
   595  007FC9  74                 	db	116	;'t'
   596  007FCA  20                 	db	32
   597  007FCB  3D                 	db	61	;'='
   598  007FCC  20                 	db	32
   599  007FCD  25                 	db	37
   600  007FCE  64                 	db	100	;'d'
   601  007FCF  20                 	db	32
   602  007FD0  0A                 	db	10
   603  007FD1  00                 	db	0
   604  007FD2  0D                 	db	13
   605  007FD3  43                 	db	67	;'C'
   606  007FD4  6F                 	db	111	;'o'
   607  007FD5  75                 	db	117	;'u'
   608  007FD6  6E                 	db	110	;'n'
   609  007FD7  74                 	db	116	;'t'
   610  007FD8  20                 	db	32
   611  007FD9  3D                 	db	61	;'='
   612  007FDA  20                 	db	32
   613  007FDB  25                 	db	37
   614  007FDC  64                 	db	100	;'d'
   615  007FDD  20                 	db	32
   616  007FDE  0A                 	db	10
   617  007FDF  00                 	db	0
   618  007FE0                     STR_16:
   619  007FE0  0A                 	db	10
   620  007FE1  45                 	db	69	;'E'
   621  007FE2  52                 	db	82	;'R'
   622  007FE3  52                 	db	82	;'R'
   623  007FE4  4F                 	db	79	;'O'
   624  007FE5  52                 	db	82	;'R'
   625  007FE6  0A                 	db	10
   626  007FE7  00                 	db	0
   627  007FE8  0D                 	db	13
   628  007FE9  50                 	db	80	;'P'
   629  007FEA  43                 	db	67	;'C'
   630  007FEB  3A                 	db	58	;':'
   631  007FEC  20                 	db	32
   632  007FED  25                 	db	37
   633  007FEE  73                 	db	115	;'s'
   634  007FEF  00                 	db	0
   635  007FF0                     STR_15:
   636  007FF0  0D                 	db	13
   637  007FF1  45                 	db	69	;'E'
   638  007FF2  52                 	db	82	;'R'
   639  007FF3  52                 	db	82	;'R'
   640  007FF4  4F                 	db	79	;'O'
   641  007FF5  52                 	db	82	;'R'
   642  007FF6  00                 	db	0
   643  007FF7  4F                 	db	79	;'O'
   644  007FF8  6B                 	db	107	;'k'
   645  007FF9  61                 	db	97	;'a'
   646  007FFA  79                 	db	121	;'y'
   647  007FFB  00                 	db	0
   648  007FFC                     STR_20:
   649  007FFC  20                 	db	32
   650  007FFD  00                 	db	0
   651  0000                     
   652                           ; #config settings
   653  007FFE  00                 	db	0	; dummy byte at the end
   654  0000                     
   655                           	psect	cinit
   656  004C40                     __pcinit:
   657                           	opt callstack 0
   658  004C40                     start_initialization:
   659                           	opt callstack 0
   660  004C40                     __initialization:
   661                           	opt callstack 0
   662                           
   663                           ; Initialize objects allocated to BANK2 (64 bytes)
   664                           ; load TBLPTR registers with __pidataBANK2
   665  004C40  0E20               	movlw	low __pidataBANK2
   666  004C42  6EF6               	movwf	tblptrl,c
   667  004C44  0E51               	movlw	high __pidataBANK2
   668  004C46  6EF7               	movwf	tblptrh,c
   669  004C48  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   670  004C4A  6EF8               	movwf	tblptru,c
   671  004C4C  EE02  F084         	lfsr	0,__pdataBANK2
   672  004C50  EE10 F040          	lfsr	1,64
   673  004C54                     copy_data0:
   674  004C54  0009               	tblrd		*+
   675  004C56  CFF5 FFEE          	movff	tablat,postinc0
   676  004C5A  50E5               	movf	postdec1,w,c
   677  004C5C  50E1               	movf	fsr1l,w,c
   678  004C5E  E1FA               	bnz	copy_data0
   679                           
   680                           ; Initialize objects allocated to BANK0 (20 bytes)
   681                           ; load TBLPTR registers with __pidataBANK0
   682  004C60  0E3A               	movlw	low __pidataBANK0
   683  004C62  6EF6               	movwf	tblptrl,c
   684  004C64  0E54               	movlw	high __pidataBANK0
   685  004C66  6EF7               	movwf	tblptrh,c
   686  004C68  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   687  004C6A  6EF8               	movwf	tblptru,c
   688  004C6C  EE00  F0EB         	lfsr	0,__pdataBANK0
   689  004C70  EE10 F014          	lfsr	1,20
   690  004C74                     copy_data1:
   691  004C74  0009               	tblrd		*+
   692  004C76  CFF5 FFEE          	movff	tablat,postinc0
   693  004C7A  50E5               	movf	postdec1,w,c
   694  004C7C  50E1               	movf	fsr1l,w,c
   695  004C7E  E1FA               	bnz	copy_data1
   696                           
   697                           ; Clear objects allocated to BANK3 (192 bytes)
   698  004C80  EE03  F000         	lfsr	0,__pbssBANK3
   699  004C84  0EC0               	movlw	192
   700  004C86                     clear_0:
   701  004C86  6AEE               	clrf	postinc0,c
   702  004C88  06E8               	decf	wreg,f,c
   703  004C8A  E1FD               	bnz	clear_0
   704                           
   705                           ; Clear objects allocated to BANK2 (32 bytes)
   706  004C8C  EE02  F0C4         	lfsr	0,__pbssBANK2
   707  004C90  0E20               	movlw	32
   708  004C92                     clear_1:
   709  004C92  6AEE               	clrf	postinc0,c
   710  004C94  06E8               	decf	wreg,f,c
   711  004C96  E1FD               	bnz	clear_1
   712                           
   713                           ; Clear objects allocated to BANK0 (41 bytes)
   714  004C98  EE00  F0C2         	lfsr	0,__pbssBANK0
   715  004C9C  0E29               	movlw	41
   716  004C9E                     clear_2:
   717  004C9E  6AEE               	clrf	postinc0,c
   718  004CA0  06E8               	decf	wreg,f,c
   719  004CA2  E1FD               	bnz	clear_2
   720                           
   721                           ; Clear objects allocated to COMRAM (3 bytes)
   722  004CA4  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   723  004CA6  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   724  004CA8  6A59               	clrf	__pbssCOMRAM& (0+255),c
   725  004CAA                     end_of_initialization:
   726                           	opt callstack 0
   727  004CAA                     __end_of__initialization:
   728                           	opt callstack 0
   729  004CAA  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   730  004CAC  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   731  004CAE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   732  004CB0  6EF8               	movwf	tblptru,c
   733  004CB2  0100               	movlb	0
   734  004CB4  EF9B  F025         	goto	_main	;jump to C main() function
   735                           
   736                           	psect	bssCOMRAM
   737  000059                     __pbssCOMRAM:
   738                           	opt callstack 0
   739  000059                     _lcd_r:
   740                           	opt callstack 0
   741  000059                     	ds	1
   742  00005A                     _numeral:
   743                           	opt callstack 0
   744  00005A                     	ds	1
   745  00005B                     _alingL:
   746                           	opt callstack 0
   747  00005B                     	ds	1
   748                           
   749                           	psect	bssBANK0
   750  0000C2                     __pbssBANK0:
   751                           	opt callstack 0
   752  0000C2                     	ds	5
   753  0000C7                     	ds	5
   754  0000CC                     	ds	5
   755  0000D1                     roundf@F525:
   756                           	opt callstack 0
   757  0000D1                     	ds	4
   758  0000D5                     _dht_humidity:
   759                           	opt callstack 0
   760  0000D5                     	ds	4
   761  0000D9                     _dht_temp:
   762                           	opt callstack 0
   763  0000D9                     	ds	4
   764  0000DD                     _lcd_c:
   765                           	opt callstack 0
   766  0000DD                     	ds	2
   767  0000DF                     	ds	2
   768  0000E1                     	ds	2
   769  0000E3                     _count:
   770                           	opt callstack 0
   771  0000E3                     	ds	2
   772  0000E5                     _space:
   773                           	opt callstack 0
   774  0000E5                     	ds	1
   775  0000E6                     _precInt:
   776                           	opt callstack 0
   777  0000E6                     	ds	1
   778  0000E7                     _zeros:
   779                           	opt callstack 0
   780  0000E7                     	ds	1
   781  0000E8                     _sig:
   782                           	opt callstack 0
   783  0000E8                     	ds	1
   784  0000E9                     _PS_TMR1:
   785                           	opt callstack 0
   786  0000E9                     	ds	1
   787  0000EA                     _PS_TMR0:
   788                           	opt callstack 0
   789  0000EA                     	ds	1
   790                           
   791                           	psect	dataBANK0
   792  0000EB                     __pdataBANK0:
   793                           	opt callstack 0
   794  0000EB                     _keyPad:
   795                           	opt callstack 0
   796  0000EB                     	ds	20
   797                           
   798                           	psect	bssBANK2
   799  0002C4                     __pbssBANK2:
   800                           	opt callstack 0
   801  0002C4                     	ds	32
   802                           
   803                           	psect	dataBANK2
   804  000284                     __pdataBANK2:
   805                           	opt callstack 0
   806  000284                     reverse@F192:
   807                           	opt callstack 0
   808  000284                     	ds	64
   809                           
   810                           	psect	bssBANK3
   811  000300                     __pbssBANK3:
   812                           	opt callstack 0
   813  000300                     	ds	128
   814  000380                     	ds	64
   815                           
   816                           	psect	cstackBANK2
   817  000200                     __pcstackBANK2:
   818                           	opt callstack 0
   819  000200                     SERIAL_Printf@strout:
   820                           	opt callstack 0
   821  000200                     LCD_Printf@strout:
   822                           	opt callstack 0
   823                           
   824                           ; 128 bytes @ 0x0
   825  000200                     	ds	130
   826  000282                     SERIAL_Printf@ap:
   827                           	opt callstack 0
   828  000282                     LCD_Printf@ap:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0x82
   832  000282                     	ds	2
   833                           
   834                           	psect	cstackBANK1
   835  000100                     __pcstackBANK1:
   836                           	opt callstack 0
   837  000100                     my_vsprintf@string:
   838                           	opt callstack 0
   839                           
   840                           ; 128 bytes @ 0x0
   841  000100                     	ds	128
   842  000180                     my_vsprintf@char_temp:
   843                           	opt callstack 0
   844                           
   845                           ; 2 bytes @ 0x80
   846  000180                     	ds	2
   847  000182                     my_vsprintf@format:
   848                           	opt callstack 0
   849                           
   850                           ; 10 bytes @ 0x82
   851  000182                     	ds	10
   852  00018C                     my_vsprintf@string_temp:
   853                           	opt callstack 0
   854                           
   855                           ; 2 bytes @ 0x8C
   856  00018C                     	ds	2
   857  00018E                     my_vsprintf@buffer:
   858                           	opt callstack 0
   859                           
   860                           ; 64 bytes @ 0x8E
   861  00018E                     	ds	64
   862  0001CE                     my_vsprintf@ch:
   863                           	opt callstack 0
   864                           
   865                           ; 2 bytes @ 0xCE
   866  0001CE                     	ds	2
   867  0001D0                     my_vsprintf@uint_temp:
   868                           	opt callstack 0
   869                           
   870                           ; 2 bytes @ 0xD0
   871  0001D0                     	ds	2
   872  0001D2                     my_vsprintf@length:
   873                           	opt callstack 0
   874                           
   875                           ; 2 bytes @ 0xD2
   876  0001D2                     	ds	2
   877  0001D4                     my_vsprintf@expA:
   878                           	opt callstack 0
   879                           
   880                           ; 2 bytes @ 0xD4
   881  0001D4                     	ds	2
   882  0001D6                     my_vsprintf@error:
   883                           	opt callstack 0
   884                           
   885                           ; 2 bytes @ 0xD6
   886  0001D6                     	ds	2
   887  0001D8                     my_vsprintf@x:
   888                           	opt callstack 0
   889                           
   890                           ; 2 bytes @ 0xD8
   891  0001D8                     	ds	2
   892  0001DA                     my_vsprintf@width:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0xDA
   896  0001DA                     	ds	2
   897  0001DC                     my_vsprintf@j:
   898                           	opt callstack 0
   899                           
   900                           ; 2 bytes @ 0xDC
   901  0001DC                     	ds	2
   902  0001DE                     my_vsprintf@int_temp:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0xDE
   906  0001DE                     	ds	2
   907  0001E0                     my_vsprintf@double_temp:
   908                           	opt callstack 0
   909                           
   910                           ; 4 bytes @ 0xE0
   911  0001E0                     	ds	4
   912  0001E4                     my_vsprintf@i:
   913                           	opt callstack 0
   914                           
   915                           ; 2 bytes @ 0xE4
   916  0001E4                     	ds	2
   917  0001E6                     my_vsprintf@prec:
   918                           	opt callstack 0
   919                           
   920                           ; 2 bytes @ 0xE6
   921  0001E6                     	ds	2
   922  0001E8                     ?_LCD_Printf:
   923                           	opt callstack 0
   924  0001E8                     ?_SERIAL_Printf:
   925                           	opt callstack 0
   926  0001E8                     SERIAL_Printf@fmt:
   927                           	opt callstack 0
   928  0001E8                     LCD_Printf@fmt:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0xE8
   932  0001E8                     	ds	10
   933  0001F2                     ??_dtll_task:
   934                           
   935                           ; 1 bytes @ 0xF2
   936  0001F2                     	ds	2
   937  0001F4                     dtll_task@temperature:
   938                           	opt callstack 0
   939                           
   940                           ; 4 bytes @ 0xF4
   941  0001F4                     	ds	4
   942  0001F8                     dtll_task@relativeHum:
   943                           	opt callstack 0
   944                           
   945                           ; 4 bytes @ 0xF8
   946  0001F8                     	ds	4
   947  0001FC                     ??_main:
   948                           
   949                           ; 1 bytes @ 0xFC
   950  0001FC                     	ds	2
   951                           
   952                           	psect	cstackBANK0
   953  000060                     __pcstackBANK0:
   954                           	opt callstack 0
   955  000060                     ___flmul@sign:
   956                           	opt callstack 0
   957  000060                     reverse@auxstr:
   958                           	opt callstack 0
   959                           
   960                           ; 64 bytes @ 0x0
   961  000060                     	ds	1
   962  000061                     ___flmul@aexp:
   963                           	opt callstack 0
   964                           
   965                           ; 1 bytes @ 0x1
   966  000061                     	ds	1
   967  000062                     ___flmul@grs:
   968                           	opt callstack 0
   969                           
   970                           ; 4 bytes @ 0x2
   971  000062                     	ds	4
   972  000066                     ___flmul@bexp:
   973                           	opt callstack 0
   974                           
   975                           ; 1 bytes @ 0x6
   976  000066                     	ds	1
   977  000067                     ___flmul@prod:
   978                           	opt callstack 0
   979                           
   980                           ; 4 bytes @ 0x7
   981  000067                     	ds	4
   982  00006B                     ___flmul@temp:
   983                           	opt callstack 0
   984                           
   985                           ; 2 bytes @ 0xB
   986  00006B                     	ds	2
   987  00006D                     ?___flsub:
   988                           	opt callstack 0
   989  00006D                     normalize@exponent:
   990                           	opt callstack 0
   991  00006D                     ___flsub@b:
   992                           	opt callstack 0
   993                           
   994                           ; 4 bytes @ 0xD
   995  00006D                     	ds	2
   996  00006F                     normalize@value:
   997                           	opt callstack 0
   998                           
   999                           ; 4 bytes @ 0xF
  1000  00006F                     	ds	2
  1001  000071                     ___flsub@a:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x11
  1005  000071                     	ds	4
  1006  000075                     ?_roundf:
  1007                           	opt callstack 0
  1008  000075                     roundf@x:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x15
  1012  000075                     	ds	4
  1013  000079                     _roundf$2752:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x19
  1017  000079                     	ds	4
  1018  00007D                     roundf@e:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x1D
  1022  00007D                     	ds	2
  1023  00007F                     _roundf$2751:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x1F
  1027  00007F                     	ds	4
  1028  000083                     roundf@u:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x23
  1032  000083                     	ds	4
  1033  000087                     roundf@y:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x27
  1037  000087                     	ds	4
  1038  00008B                     ?___fltol:
  1039                           	opt callstack 0
  1040  00008B                     ___fltol@f1:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x2B
  1044  00008B                     	ds	4
  1045  00008F                     ??___fltol:
  1046                           
  1047                           ; 1 bytes @ 0x2F
  1048  00008F                     	ds	4
  1049  000093                     ?_lroundf:
  1050                           	opt callstack 0
  1051  000093                     ftoa@buffer:
  1052                           	opt callstack 0
  1053  000093                     lroundf@x:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x33
  1057  000093                     	ds	2
  1058  000095                     ftoa@value:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x35
  1062  000095                     	ds	2
  1063  000097                     TIMER0_SetReg@val:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x37
  1067  000097                     	ds	2
  1068  000099                     ftoa@digit:
  1069                           	opt callstack 0
  1070  000099                     TIMER0_SetTime@time:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x39
  1074  000099                     	ds	2
  1075  00009B                     ftoa@digit_1719:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x3B
  1079  00009B                     	ds	2
  1080  00009D                     ftoa@exponent:
  1081                           	opt callstack 0
  1082  00009D                     TIMER0_SetTime@tmax:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x3D
  1086  00009D                     	ds	2
  1087  00009F                     ftoa@places:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x3F
  1091  00009F                     	ds	1
  1092  0000A0                     reverse@j:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x40
  1096  0000A0                     	ds	1
  1097  0000A1                     TIMER0_SetTime@tmin:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x41
  1101  0000A1                     	ds	1
  1102  0000A2                     reverse@i:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x42
  1106  0000A2                     	ds	2
  1107  0000A4                     getWP@form:
  1108                           	opt callstack 0
  1109  0000A4                     itoa@str:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x44
  1113  0000A4                     	ds	1
  1114  0000A5                     _TIMER0_SetTime$2748:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 4 bytes @ 0x45
  1118  0000A5                     	ds	1
  1119  0000A6                     getWP@width:
  1120                           	opt callstack 0
  1121  0000A6                     itoa@num:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x46
  1125  0000A6                     	ds	2
  1126  0000A8                     getWP@precision:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x48
  1130  0000A8                     	ds	1
  1131  0000A9                     _TIMER0_SetTime$2749:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x49
  1135  0000A9                     	ds	1
  1136  0000AA                     itoa@base_:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x4A
  1140  0000AA                     	ds	2
  1141  0000AC                     ?_ftoa_sci:
  1142                           	opt callstack 0
  1143  0000AC                     ftoa_sci@buffer:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x4C
  1147  0000AC                     	ds	1
  1148  0000AD                     _TIMER0_SetTime$2750:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x4D
  1152  0000AD                     	ds	1
  1153  0000AE                     ftoa_sci@value:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x4E
  1157  0000AE                     	ds	3
  1158  0000B1                     _TIMER0_SetTime$1449:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x51
  1162  0000B1                     	ds	1
  1163  0000B2                     ftoa_sci@digit:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x52
  1167  0000B2                     	ds	2
  1168  0000B4                     ftoa_sci@digit_1711:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x54
  1172  0000B4                     	ds	1
  1173  0000B5                     TIMER0_SetTime@e:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x55
  1177  0000B5                     	ds	1
  1178  0000B6                     ftoa_sci@i:
  1179                           	opt callstack 0
  1180  0000B6                     TIMER0_SetTime@MC:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x56
  1184  0000B6                     	ds	2
  1185  0000B8                     ftoa_sci@exponent:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x58
  1189  0000B8                     	ds	2
  1190  0000BA                     ?_my_vsprintf:
  1191                           	opt callstack 0
  1192  0000BA                     my_vsprintf@str:
  1193                           	opt callstack 0
  1194  0000BA                     TIMER0_SetTime@CT:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x5A
  1198  0000BA                     	ds	2
  1199  0000BC                     my_vsprintf@sformat:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x5C
  1203  0000BC                     	ds	2
  1204  0000BE                     my_vsprintf@valist:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x5E
  1208  0000BE                     	ds	2
  1209  0000C0                     ??_my_vsprintf:
  1210                           
  1211                           ; 1 bytes @ 0x60
  1212  0000C0                     	ds	2
  1213                           
  1214                           	psect	cstackCOMRAM
  1215  000001                     __pcstackCOMRAM:
  1216                           	opt callstack 0
  1217  000001                     ??_BLED_Toggle:
  1218  000001                     
  1219                           ; 1 bytes @ 0x0
  1220  000001                     	ds	2
  1221  000003                     BLED_Toggle@biled:
  1222                           	opt callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x2
  1225  000003                     	ds	1
  1226  000004                     ??_TIMER0_SetPs:
  1227  000004                     ??_BLED_Enable:
  1228  000004                     ??_LED_Enable:
  1229  000004                     ??_LCD_Lat:
  1230  000004                     ?_strlen:
  1231                           	opt callstack 0
  1232  000004                     ?_DHT11_Wait4Resp:
  1233                           	opt callstack 0
  1234  000004                     ?___wmul:
  1235                           	opt callstack 0
  1236  000004                     ?_DHT11_GetTemp:
  1237                           	opt callstack 0
  1238  000004                     ?_DHT11_GetRHum:
  1239                           	opt callstack 0
  1240  000004                     ?___aldiv:
  1241                           	opt callstack 0
  1242  000004                     ?___almod:
  1243                           	opt callstack 0
  1244  000004                     ?___flneg:
  1245                           	opt callstack 0
  1246  000004                     SERIAL_WriteChar@data:
  1247                           	opt callstack 0
  1248  000004                     BLED_Color@green:
  1249                           	opt callstack 0
  1250  000004                     TIMER0_Int@t0_cs:
  1251                           	opt callstack 0
  1252  000004                     DHT11_Wait4Resp@timeout_10us:
  1253                           	opt callstack 0
  1254  000004                     ___wmul@multiplier:
  1255                           	opt callstack 0
  1256  000004                     strlen@s:
  1257                           	opt callstack 0
  1258  000004                     ___aldiv@dividend:
  1259                           	opt callstack 0
  1260  000004                     ___almod@dividend:
  1261                           	opt callstack 0
  1262  000004                     ___fleq@ff1:
  1263                           	opt callstack 0
  1264  000004                     ___flge@ff1:
  1265                           	opt callstack 0
  1266  000004                     ___flneg@f1:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x3
  1270  000004                     	ds	1
  1271  000005                     BLED_Color@red:
  1272                           	opt callstack 0
  1273  000005                     TIMER0_Int@t0_se:
  1274                           	opt callstack 0
  1275  000005                     LCD_SendNibble@data:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x4
  1279  000005                     	ds	1
  1280  000006                     ??_BLED_Color:
  1281  000006                     LED_Enable@led:
  1282                           	opt callstack 0
  1283  000006                     BLED_Enable@biled:
  1284                           	opt callstack 0
  1285  000006                     TIMER0_Int@t0_psa:
  1286                           	opt callstack 0
  1287  000006                     TIMER0_SetPs@prescale:
  1288                           	opt callstack 0
  1289  000006                     LCD_SendCmd@fbyte:
  1290                           	opt callstack 0
  1291  000006                     LCD_WriteByte@wData:
  1292                           	opt callstack 0
  1293  000006                     DHT11_Wait4Resp@HtoL:
  1294                           	opt callstack 0
  1295  000006                     ___wmul@multiplicand:
  1296                           	opt callstack 0
  1297  000006                     strlen@a:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x5
  1301  000006                     	ds	1
  1302  000007                     TIMER0_Int@t0_8b:
  1303                           	opt callstack 0
  1304  000007                     LCD_SendCmd@data:
  1305                           	opt callstack 0
  1306  000007                     DHT11_Wait4Resp@retryTimeout:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x6
  1310  000007                     	ds	1
  1311  000008                     ??_LCD_CLS:
  1312  000008                     ??_LCD_Init:
  1313  000008                     ?_posc:
  1314                           	opt callstack 0
  1315  000008                     BLED_Color@biled:
  1316                           	opt callstack 0
  1317  000008                     LCD_DisplayCtrl@curOn:
  1318                           	opt callstack 0
  1319  000008                     LCD_SetRowCol@col:
  1320                           	opt callstack 0
  1321  000008                     SERIAL_Write@str:
  1322                           	opt callstack 0
  1323  000008                     searchc@str:
  1324                           	opt callstack 0
  1325  000008                     posc@str:
  1326                           	opt callstack 0
  1327  000008                     upperCL@str:
  1328                           	opt callstack 0
  1329  000008                     cleanS@str:
  1330                           	opt callstack 0
  1331  000008                     precI@str:
  1332                           	opt callstack 0
  1333  000008                     precS@str:
  1334                           	opt callstack 0
  1335  000008                     addOx@hoS:
  1336                           	opt callstack 0
  1337  000008                     setWidth@str:
  1338                           	opt callstack 0
  1339  000008                     ___wmul@product:
  1340                           	opt callstack 0
  1341  000008                     strcpy@dest:
  1342                           	opt callstack 0
  1343  000008                     ___aldiv@divisor:
  1344                           	opt callstack 0
  1345  000008                     ___almod@divisor:
  1346                           	opt callstack 0
  1347  000008                     ___fleq@ff2:
  1348                           	opt callstack 0
  1349  000008                     ___flge@ff2:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 4 bytes @ 0x7
  1353  000008                     	ds	1
  1354  000009                     ??_LCD_SetRowCol:
  1355  000009                     LCD_DisplayCtrl@curBlink:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x8
  1359  000009                     	ds	1
  1360  00000A                     ??_cleanS:
  1361  00000A                     ?_atoui:
  1362                           	opt callstack 0
  1363  00000A                     searchc@c:
  1364                           	opt callstack 0
  1365  00000A                     posc@c:
  1366                           	opt callstack 0
  1367  00000A                     LCD_DisplayCtrl@disOn:
  1368                           	opt callstack 0
  1369  00000A                     SERIAL_Write@i:
  1370                           	opt callstack 0
  1371  00000A                     precI@precision:
  1372                           	opt callstack 0
  1373  00000A                     precS@precision:
  1374                           	opt callstack 0
  1375  00000A                     addOx@num:
  1376                           	opt callstack 0
  1377  00000A                     setWidth@width:
  1378                           	opt callstack 0
  1379  00000A                     atoui@str:
  1380                           	opt callstack 0
  1381  00000A                     strcpy@src:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x9
  1385  00000A                     	ds	1
  1386  00000B                     LCD_DisplayCtrl@cmd:
  1387                           	opt callstack 0
  1388  00000B                     upperCL@i:
  1389                           	opt callstack 0
  1390  00000B                     cleanS@len:
  1391                           	opt callstack 0
  1392  00000B                     LCD_SetRowCol@cmd:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0xA
  1396  00000B                     	ds	1
  1397  00000C                     ??_atoui:
  1398  00000C                     ??_strcpy:
  1399  00000C                     ??_precI:
  1400  00000C                     ??_precS:
  1401  00000C                     ??_setWidth:
  1402  00000C                     ??___fleq:
  1403  00000C                     ??___flge:
  1404  00000C                     addOx@type:
  1405                           	opt callstack 0
  1406  00000C                     ___aldiv@counter:
  1407                           	opt callstack 0
  1408  00000C                     ___almod@counter:
  1409                           	opt callstack 0
  1410  00000C                     searchc@a:
  1411                           	opt callstack 0
  1412  00000C                     posc@a:
  1413                           	opt callstack 0
  1414                           
  1415                           ; 2 bytes @ 0xB
  1416  00000C                     	ds	1
  1417  00000D                     ??_addOx:
  1418  00000D                     LCD_SetRowCol@row:
  1419                           	opt callstack 0
  1420  00000D                     ___aldiv@sign:
  1421                           	opt callstack 0
  1422  00000D                     ___almod@sign:
  1423                           	opt callstack 0
  1424  00000D                     cleanS@i:
  1425                           	opt callstack 0
  1426  00000D                     atoui@num:
  1427                           	opt callstack 0
  1428                           
  1429                           ; 2 bytes @ 0xC
  1430  00000D                     	ds	1
  1431  00000E                     ?_roundStr:
  1432                           	opt callstack 0
  1433  00000E                     LCD_WriteChar@wData:
  1434                           	opt callstack 0
  1435  00000E                     roundStr@decnum:
  1436                           	opt callstack 0
  1437  00000E                     precI@k:
  1438                           	opt callstack 0
  1439  00000E                     precS@len:
  1440                           	opt callstack 0
  1441  00000E                     setWidth@widthDif:
  1442                           	opt callstack 0
  1443  00000E                     strcpy@s:
  1444                           	opt callstack 0
  1445  00000E                     ___aldiv@quotient:
  1446                           	opt callstack 0
  1447                           
  1448                           ; 4 bytes @ 0xD
  1449  00000E                     	ds	1
  1450  00000F                     addOx@len:
  1451                           	opt callstack 0
  1452  00000F                     atoui@vp:
  1453                           	opt callstack 0
  1454  00000F                     LCD_Write@str:
  1455                           	opt callstack 0
  1456                           
  1457                           ; 2 bytes @ 0xE
  1458  00000F                     	ds	1
  1459  000010                     ?___xxtofl:
  1460                           	opt callstack 0
  1461  000010                     roundStr@e:
  1462                           	opt callstack 0
  1463  000010                     precI@j:
  1464                           	opt callstack 0
  1465  000010                     precS@i:
  1466                           	opt callstack 0
  1467  000010                     setWidth@len:
  1468                           	opt callstack 0
  1469  000010                     strcpy@d:
  1470                           	opt callstack 0
  1471  000010                     ___xxtofl@val:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 4 bytes @ 0xF
  1475  000010                     	ds	1
  1476  000011                     ??_LCD_Write:
  1477  000011                     addOx@k:
  1478                           	opt callstack 0
  1479  000011                     atoui@i:
  1480                           	opt callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x10
  1483  000011                     	ds	1
  1484  000012                     roundStr@prn:
  1485                           	opt callstack 0
  1486  000012                     precI@len:
  1487                           	opt callstack 0
  1488  000012                     setWidth@j:
  1489                           	opt callstack 0
  1490  000012                     reverse@str:
  1491                           	opt callstack 0
  1492  000012                     strcat@dest:
  1493                           	opt callstack 0
  1494  000012                     SERIAL_Init@BAUD:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 4 bytes @ 0x11
  1498  000012                     	ds	1
  1499  000013                     LCD_Write@i:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x12
  1503  000013                     	ds	1
  1504  000014                     ??_reverse:
  1505  000014                     ??_roundStr:
  1506  000014                     ??___xxtofl:
  1507  000014                     precI@i:
  1508                           	opt callstack 0
  1509  000014                     strcat@src:
  1510                           	opt callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x13
  1513  000014                     	ds	2
  1514  000016                     ??_getWP:
  1515  000016                     _SERIAL_Init$2747:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 4 bytes @ 0x15
  1519  000016                     	ds	1
  1520  000017                     roundStr@len:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x16
  1524  000017                     	ds	1
  1525  000018                     ___xxtofl@sign:
  1526                           	opt callstack 0
  1527  000018                     _itoa$1693:
  1528                           	opt callstack 0
  1529  000018                     getWP@prec_str:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 5 bytes @ 0x17
  1533  000018                     	ds	1
  1534  000019                     ___xxtofl@exp:
  1535                           	opt callstack 0
  1536  000019                     roundStr@p:
  1537                           	opt callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x18
  1540  000019                     	ds	1
  1541  00001A                     SERIAL_Init@baudrate:
  1542                           	opt callstack 0
  1543  00001A                     ___xxtofl@arg:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 4 bytes @ 0x19
  1547  00001A                     	ds	1
  1548  00001B                     roundStr@i:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x1A
  1552  00001B                     	ds	1
  1553  00001C                     itoa@rem:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x1B
  1557  00001C                     	ds	1
  1558  00001D                     roundStr@k:
  1559                           	opt callstack 0
  1560  00001D                     getWP@width_str:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 5 bytes @ 0x1C
  1564  00001D                     	ds	1
  1565  00001E                     ?___fldiv:
  1566                           	opt callstack 0
  1567  00001E                     addSig@numS:
  1568                           	opt callstack 0
  1569  00001E                     ___fldiv@b:
  1570                           	opt callstack 0
  1571                           
  1572                           ; 4 bytes @ 0x1D
  1573  00001E                     	ds	1
  1574  00001F                     precF@str:
  1575                           	opt callstack 0
  1576  00001F                     precE@str:
  1577                           	opt callstack 0
  1578  00001F                     precG@str:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x1E
  1582  00001F                     	ds	1
  1583  000020                     itoa@i:
  1584                           	opt callstack 0
  1585  000020                     addSig@num:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 4 bytes @ 0x1F
  1589  000020                     	ds	1
  1590  000021                     precF@precision:
  1591                           	opt callstack 0
  1592  000021                     precE@precision:
  1593                           	opt callstack 0
  1594  000021                     precG@precision:
  1595                           	opt callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x20
  1598  000021                     	ds	1
  1599  000022                     getWP@len:
  1600                           	opt callstack 0
  1601  000022                     ___fldiv@a:
  1602                           	opt callstack 0
  1603                           
  1604                           ; 4 bytes @ 0x21
  1605  000022                     	ds	1
  1606  000023                     ??_precF:
  1607  000023                     ??_precE:
  1608  000023                     ??_precG:
  1609                           
  1610                           ; 1 bytes @ 0x22
  1611  000023                     	ds	1
  1612  000024                     ??_addSig:
  1613  000024                     getWP@i:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 2 bytes @ 0x23
  1617  000024                     	ds	1
  1618  000025                     precE@p:
  1619                           	opt callstack 0
  1620                           
  1621                           ; 2 bytes @ 0x24
  1622  000025                     	ds	1
  1623  000026                     ??___fldiv:
  1624  000026                     getWP@k:
  1625                           	opt callstack 0
  1626  000026                     precF@j:
  1627                           	opt callstack 0
  1628  000026                     precG@p:
  1629                           	opt callstack 0
  1630  000026                     addSig@len:
  1631                           	opt callstack 0
  1632                           
  1633                           ; 2 bytes @ 0x25
  1634  000026                     	ds	1
  1635  000027                     precE@len:
  1636                           	opt callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x26
  1639  000027                     	ds	1
  1640  000028                     getWP@p:
  1641                           	opt callstack 0
  1642  000028                     precF@p:
  1643                           	opt callstack 0
  1644  000028                     precG@f:
  1645                           	opt callstack 0
  1646  000028                     addSig@k:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x27
  1650  000028                     	ds	1
  1651  000029                     precE@posE:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x28
  1655  000029                     	ds	1
  1656  00002A                     getWP@j:
  1657                           	opt callstack 0
  1658  00002A                     precF@i:
  1659                           	opt callstack 0
  1660  00002A                     precG@digS:
  1661                           	opt callstack 0
  1662  00002A                     ___fldiv@rem:
  1663                           	opt callstack 0
  1664                           
  1665                           ; 4 bytes @ 0x29
  1666  00002A                     	ds	1
  1667  00002B                     precE@i:
  1668                           	opt callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x2A
  1671  00002B                     	ds	1
  1672  00002C                     precF@len:
  1673                           	opt callstack 0
  1674  00002C                     precG@posE:
  1675                           	opt callstack 0
  1676                           
  1677                           ; 2 bytes @ 0x2B
  1678  00002C                     	ds	1
  1679  00002D                     precE@j:
  1680                           	opt callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x2C
  1683  00002D                     	ds	1
  1684  00002E                     ___fldiv@sign:
  1685                           	opt callstack 0
  1686  00002E                     precF@k:
  1687                           	opt callstack 0
  1688  00002E                     precG@len:
  1689                           	opt callstack 0
  1690                           
  1691                           ; 2 bytes @ 0x2D
  1692  00002E                     	ds	1
  1693  00002F                     precE@k:
  1694                           	opt callstack 0
  1695  00002F                     ___fldiv@new_exp:
  1696                           	opt callstack 0
  1697                           
  1698                           ; 2 bytes @ 0x2E
  1699  00002F                     	ds	1
  1700  000030                     precG@j:
  1701                           	opt callstack 0
  1702                           
  1703                           ; 2 bytes @ 0x2F
  1704  000030                     	ds	1
  1705  000031                     ___fldiv@grs:
  1706                           	opt callstack 0
  1707                           
  1708                           ; 4 bytes @ 0x30
  1709  000031                     	ds	1
  1710  000032                     precG@k:
  1711                           	opt callstack 0
  1712                           
  1713                           ; 2 bytes @ 0x31
  1714  000032                     	ds	2
  1715  000034                     precG@i:
  1716                           	opt callstack 0
  1717                           
  1718                           ; 2 bytes @ 0x33
  1719  000034                     	ds	1
  1720  000035                     ___fldiv@bexp:
  1721                           	opt callstack 0
  1722                           
  1723                           ; 1 bytes @ 0x34
  1724  000035                     	ds	1
  1725  000036                     ___fldiv@aexp:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 1 bytes @ 0x35
  1729  000036                     	ds	1
  1730  000037                     ?___fladd:
  1731                           	opt callstack 0
  1732  000037                     ___fladd@b:
  1733                           	opt callstack 0
  1734                           
  1735                           ; 4 bytes @ 0x36
  1736  000037                     	ds	4
  1737  00003B                     ___fladd@a:
  1738                           	opt callstack 0
  1739                           
  1740                           ; 4 bytes @ 0x3A
  1741  00003B                     	ds	4
  1742  00003F                     ??___fladd:
  1743                           
  1744                           ; 1 bytes @ 0x3E
  1745  00003F                     	ds	4
  1746  000043                     ___fladd@signs:
  1747                           	opt callstack 0
  1748                           
  1749                           ; 1 bytes @ 0x42
  1750  000043                     	ds	1
  1751  000044                     ___fladd@aexp:
  1752                           	opt callstack 0
  1753                           
  1754                           ; 1 bytes @ 0x43
  1755  000044                     	ds	1
  1756  000045                     ___fladd@bexp:
  1757                           	opt callstack 0
  1758                           
  1759                           ; 1 bytes @ 0x44
  1760  000045                     	ds	1
  1761  000046                     ___fladd@grs:
  1762                           	opt callstack 0
  1763                           
  1764                           ; 1 bytes @ 0x45
  1765  000046                     	ds	1
  1766  000047                     ??_DHT11_MReq:
  1767  000047                     ?___flmul:
  1768                           	opt callstack 0
  1769  000047                     ___flmul@b:
  1770                           	opt callstack 0
  1771                           
  1772                           ; 4 bytes @ 0x46
  1773  000047                     	ds	2
  1774  000049                     DHT11_MReq@checksum:
  1775                           	opt callstack 0
  1776                           
  1777                           ; 1 bytes @ 0x48
  1778  000049                     	ds	1
  1779  00004A                     DHT11_MReq@voltLen:
  1780                           	opt callstack 0
  1781                           
  1782                           ; 2 bytes @ 0x49
  1783  00004A                     	ds	1
  1784  00004B                     ___flmul@a:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 4 bytes @ 0x4A
  1788  00004B                     	ds	1
  1789  00004C                     DHT11_MReq@data:
  1790                           	opt callstack 0
  1791                           
  1792                           ; 5 bytes @ 0x4B
  1793  00004C                     	ds	3
  1794  00004F                     ??___flmul:
  1795                           
  1796                           ; 1 bytes @ 0x4E
  1797  00004F                     	ds	2
  1798  000051                     DHT11_MReq@error:
  1799                           	opt callstack 0
  1800                           
  1801                           ; 1 bytes @ 0x50
  1802  000051                     	ds	1
  1803  000052                     DHT11_MReq@i:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 2 bytes @ 0x51
  1807  000052                     	ds	1
  1808  000053                     ??_roundf:
  1809  000053                     ?_normalize:
  1810                           	opt callstack 0
  1811  000053                     normalize@val:
  1812                           	opt callstack 0
  1813                           
  1814                           ; 2 bytes @ 0x52
  1815  000053                     	ds	1
  1816  000054                     DHT11_MReq@j:
  1817                           	opt callstack 0
  1818                           
  1819                           ; 2 bytes @ 0x53
  1820  000054                     	ds	1
  1821  000055                     
  1822                           ; 1 bytes @ 0x54
  1823  000055                     	ds	2
  1824  000057                     ___fltol@sign1:
  1825                           	opt callstack 0
  1826                           
  1827                           ; 1 bytes @ 0x56
  1828  000057                     	ds	1
  1829  000058                     ___fltol@exp1:
  1830                           	opt callstack 0
  1831                           
  1832                           ; 1 bytes @ 0x57
  1833  000058                     	ds	1
  1834  000059                     
  1835                           ; 1 bytes @ 0x58
  1836 ;;
  1837 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1838 ;;
  1839 ;; *************** function _main *****************
  1840 ;; Defined at:
  1841 ;;		line 128 in file "src/main.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1857 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1858 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1859 ;;Total ram usage:        2 bytes
  1860 ;; Hardware stack levels required when called:   10
  1861 ;; This function calls:
  1862 ;;		_BLED_Color
  1863 ;;		_LCD_DisplayCtrl
  1864 ;;		_LCD_Printf
  1865 ;;		_SERIAL_Printf
  1866 ;;		_SYSTEM_Init
  1867 ;;		_TIMER0_SetTime
  1868 ;;		_dtll_task
  1869 ;; This function is called by:
  1870 ;;		Startup code after reset
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text0
  1875  004B36                     __ptext0:
  1876                           	opt callstack 0
  1877  004B36                     _main:
  1878                           	opt callstack 21
  1879  004B36                     
  1880                           ;src/main.c: 130:     SYSTEM_Init();
  1881  004B36  EC89  F027         	call	_SYSTEM_Init	;wreg free
  1882  004B3A                     
  1883                           ;src/main.c: 132:     LATBbits.LATB4 = TIMER0_SetTime(100);
  1884  004B3A  0E00               	movlw	0
  1885  004B3C  0100               	movlb	0	; () banked
  1886  004B3E  6F99               	movwf	TIMER0_SetTime@time& (0+255),b
  1887  004B40  0E00               	movlw	0
  1888  004B42  6F9A               	movwf	(TIMER0_SetTime@time+1)& (0+255),b
  1889  004B44  0EC8               	movlw	200
  1890  004B46  6F9B               	movwf	(TIMER0_SetTime@time+2)& (0+255),b
  1891  004B48  0E42               	movlw	66
  1892  004B4A  6F9C               	movwf	(TIMER0_SetTime@time+3)& (0+255),b
  1893  004B4C  ECAB  F015         	call	_TIMER0_SetTime	;wreg free
  1894  004B50  0101               	movlb	1	; () banked
  1895  004B52  6FFC               	movwf	??_main& (0+255),b
  1896  004B54  3BFC               	swapf	??_main& (0+255),f,b
  1897  004B56  508A               	movf	138,w,c	;volatile
  1898  004B58  19FC               	xorwf	??_main& (0+255),w,b
  1899  004B5A  0BEF               	andlw	-17
  1900  004B5C  19FC               	xorwf	??_main& (0+255),w,b
  1901  004B5E  6E8A               	movwf	138,c	;volatile
  1902  004B60                     
  1903                           ; BSR set to: 1
  1904                           ;src/main.c: 133:     BLED_Color(BL1,0,0);
  1905  004B60  0E00               	movlw	0
  1906  004B62  6E04               	movwf	BLED_Color@green^0,c
  1907  004B64  0E00               	movlw	0
  1908  004B66  6E05               	movwf	BLED_Color@red^0,c
  1909  004B68  0E00               	movlw	0
  1910  004B6A  EC56  F023         	call	_BLED_Color
  1911  004B6E                     
  1912                           ;src/main.c: 136:     LCD_DisplayCtrl(1,0,0);
  1913  004B6E  0E00               	movlw	0
  1914  004B70  6E08               	movwf	LCD_DisplayCtrl@curOn^0,c
  1915  004B72  0E00               	movlw	0
  1916  004B74  6E09               	movwf	LCD_DisplayCtrl@curBlink^0,c
  1917  004B76  0E01               	movlw	1
  1918  004B78  ECE9  F029         	call	_LCD_DisplayCtrl
  1919  004B7C                     
  1920                           ;src/main.c: 137:     LCD_Printf("\rBIENVENIDO :)");
  1921  004B7C  0E97               	movlw	low STR_17
  1922  004B7E  0101               	movlb	1	; () banked
  1923  004B80  6FE8               	movwf	LCD_Printf@fmt& (0+255),b
  1924  004B82  0E7F               	movlw	high STR_17
  1925  004B84  6FE9               	movwf	(LCD_Printf@fmt+1)& (0+255),b
  1926  004B86  EC63  F029         	call	_LCD_Printf	;wreg free
  1927  004B8A                     
  1928                           ;src/main.c: 138:     SERIAL_Printf("BIENVENIDO :)\n\n");
  1929  004B8A  0E87               	movlw	low STR_18
  1930  004B8C  0101               	movlb	1	; () banked
  1931  004B8E  6FE8               	movwf	SERIAL_Printf@fmt& (0+255),b
  1932  004B90  0E7F               	movlw	high STR_18
  1933  004B92  6FE9               	movwf	(SERIAL_Printf@fmt+1)& (0+255),b
  1934  004B94  EC48  F029         	call	_SERIAL_Printf	;wreg free
  1935  004B98                     
  1936                           ;src/main.c: 139:     _delay((unsigned long)((1000)*(48000000/4000.0)));
  1937  004B98  0E3D               	movlw	61
  1938  004B9A  0101               	movlb	1	; () banked
  1939  004B9C  6FFD               	movwf	(??_main+1)& (0+255),b
  1940  004B9E  0EE1               	movlw	225
  1941  004BA0  6FFC               	movwf	??_main& (0+255),b
  1942  004BA2  0E3F               	movlw	63
  1943  004BA4                     u10647:
  1944  004BA4  2EE8               	decfsz	wreg,f,c
  1945  004BA6  D7FE               	bra	u10647
  1946  004BA8  2FFC               	decfsz	??_main& (0+255),f,b
  1947  004BAA  D7FC               	bra	u10647
  1948  004BAC  2FFD               	decfsz	(??_main+1)& (0+255),f,b
  1949  004BAE  D7FA               	bra	u10647
  1950  004BB0  D000               	nop2	
  1951  004BB2                     l9238:
  1952                           
  1953                           ;src/main.c: 142:     {;src/main.c: 143:         dtll_task();
  1954  004BB2  EC80  F022         	call	_dtll_task	;wreg free
  1955  004BB6  EFD9  F025         	goto	l9238
  1956  004BBA  EF07  F000         	goto	start
  1957  004BBE                     __end_of_main:
  1958                           	opt callstack 0
  1959                           
  1960 ;; *************** function _dtll_task *****************
  1961 ;; Defined at:
  1962 ;;		line 105 in file "src/main.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  relativeHum     4  248[BANK1 ] float 
  1967 ;;  temperature     4  244[BANK1 ] float 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0
  1978 ;;      Locals:         0       0       8       0       0       0       0       0       0
  1979 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1980 ;;      Totals:         0       0      10       0       0       0       0       0       0
  1981 ;;Total ram usage:       10 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    9
  1984 ;; This function calls:
  1985 ;;		_DHT11_GetRHum
  1986 ;;		_DHT11_GetTemp
  1987 ;;		_DHT11_MReq
  1988 ;;		_LCD_CLS
  1989 ;;		_LCD_Printf
  1990 ;;		_SERIAL_Printf
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text1
  1997  004500                     __ptext1:
  1998                           	opt callstack 0
  1999  004500                     _dtll_task:
  2000                           	opt callstack 21
  2001  004500                     
  2002                           ;src/main.c: 107:     float temperature;;src/main.c: 108:     float relativeHum;;src/mai
      +                          n.c: 110:     if(DHT11_MReq() == 0)
  2003  004500  EC05  F017         	call	_DHT11_MReq	;wreg free
  2004  004504  0900               	iorlw	0
  2005  004506  A4D8               	btfss	status,2,c
  2006  004508  EF88  F022         	goto	u10561
  2007  00450C  EF8A  F022         	goto	u10560
  2008  004510                     u10561:
  2009  004510  EFD0  F022         	goto	l9078
  2010  004514                     u10560:
  2011  004514                     
  2012                           ;src/main.c: 111:     {;src/main.c: 112:         temperature = DHT11_GetTemp();
  2013  004514  EC27  F02A         	call	_DHT11_GetTemp	;wreg free
  2014  004518  C004  F1F4         	movff	?_DHT11_GetTemp,dtll_task@temperature
  2015  00451C  C005  F1F5         	movff	?_DHT11_GetTemp+1,dtll_task@temperature+1
  2016  004520  C006  F1F6         	movff	?_DHT11_GetTemp+2,dtll_task@temperature+2
  2017  004524  C007  F1F7         	movff	?_DHT11_GetTemp+3,dtll_task@temperature+3
  2018                           
  2019                           ;src/main.c: 113:         relativeHum = DHT11_GetRHum();
  2020  004528  EC30  F02A         	call	_DHT11_GetRHum	;wreg free
  2021  00452C  C004  F1F8         	movff	?_DHT11_GetRHum,dtll_task@relativeHum
  2022  004530  C005  F1F9         	movff	?_DHT11_GetRHum+1,dtll_task@relativeHum+1
  2023  004534  C006  F1FA         	movff	?_DHT11_GetRHum+2,dtll_task@relativeHum+2
  2024  004538  C007  F1FB         	movff	?_DHT11_GetRHum+3,dtll_task@relativeHum+3
  2025  00453C                     
  2026                           ;src/main.c: 114:         LCD_CLS();
  2027  00453C  EC99  F029         	call	_LCD_CLS	;wreg free
  2028  004540                     
  2029                           ;src/main.c: 115:         LCD_Printf("\rTemp: %.1f C\n\rRel Hum: %.1f%%", temperature, r
      +                          elativeHum);
  2030  004540  0ED3               	movlw	low STR_13
  2031  004542  0101               	movlb	1	; () banked
  2032  004544  6FE8               	movwf	LCD_Printf@fmt& (0+255),b
  2033  004546  0E7E               	movlw	high STR_13
  2034  004548  6FE9               	movwf	(LCD_Printf@fmt+1)& (0+255),b
  2035  00454A  C1F4  F1EA         	movff	dtll_task@temperature,?_LCD_Printf+2
  2036  00454E  C1F5  F1EB         	movff	dtll_task@temperature+1,?_LCD_Printf+3
  2037  004552  C1F6  F1EC         	movff	dtll_task@temperature+2,?_LCD_Printf+4
  2038  004556  C1F7  F1ED         	movff	dtll_task@temperature+3,?_LCD_Printf+5
  2039  00455A  C1F8  F1EE         	movff	dtll_task@relativeHum,?_LCD_Printf+6
  2040  00455E  C1F9  F1EF         	movff	dtll_task@relativeHum+1,?_LCD_Printf+7
  2041  004562  C1FA  F1F0         	movff	dtll_task@relativeHum+2,?_LCD_Printf+8
  2042  004566  C1FB  F1F1         	movff	dtll_task@relativeHum+3,?_LCD_Printf+9
  2043  00456A  EC63  F029         	call	_LCD_Printf	;wreg free
  2044  00456E                     
  2045                           ;src/main.c: 116:         SERIAL_Printf("\nTemperature: %.1f Â°C\nRelative Humedity: %.1
      +                          f %%\n", temperature, relativeHum);
  2046  00456E  0EA0               	movlw	low STR_14
  2047  004570  0101               	movlb	1	; () banked
  2048  004572  6FE8               	movwf	SERIAL_Printf@fmt& (0+255),b
  2049  004574  0E7E               	movlw	high STR_14
  2050  004576  6FE9               	movwf	(SERIAL_Printf@fmt+1)& (0+255),b
  2051  004578  C1F4  F1EA         	movff	dtll_task@temperature,?_SERIAL_Printf+2
  2052  00457C  C1F5  F1EB         	movff	dtll_task@temperature+1,?_SERIAL_Printf+3
  2053  004580  C1F6  F1EC         	movff	dtll_task@temperature+2,?_SERIAL_Printf+4
  2054  004584  C1F7  F1ED         	movff	dtll_task@temperature+3,?_SERIAL_Printf+5
  2055  004588  C1F8  F1EE         	movff	dtll_task@relativeHum,?_SERIAL_Printf+6
  2056  00458C  C1F9  F1EF         	movff	dtll_task@relativeHum+1,?_SERIAL_Printf+7
  2057  004590  C1FA  F1F0         	movff	dtll_task@relativeHum+2,?_SERIAL_Printf+8
  2058  004594  C1FB  F1F1         	movff	dtll_task@relativeHum+3,?_SERIAL_Printf+9
  2059  004598  EC48  F029         	call	_SERIAL_Printf	;wreg free
  2060                           
  2061                           ;src/main.c: 117:     }
  2062  00459C  EFE0  F022         	goto	l9084
  2063  0045A0                     l9078:
  2064                           
  2065                           ;src/main.c: 119:     {;src/main.c: 120:         LCD_CLS();
  2066  0045A0  EC99  F029         	call	_LCD_CLS	;wreg free
  2067  0045A4                     
  2068                           ;src/main.c: 121:         LCD_Printf("\rERROR");
  2069  0045A4  0EF0               	movlw	low STR_15
  2070  0045A6  0101               	movlb	1	; () banked
  2071  0045A8  6FE8               	movwf	LCD_Printf@fmt& (0+255),b
  2072  0045AA  0E7F               	movlw	high STR_15
  2073  0045AC  6FE9               	movwf	(LCD_Printf@fmt+1)& (0+255),b
  2074  0045AE  EC63  F029         	call	_LCD_Printf	;wreg free
  2075  0045B2                     
  2076                           ;src/main.c: 122:         SERIAL_Printf("\nERROR\n");
  2077  0045B2  0EE0               	movlw	low STR_16
  2078  0045B4  0101               	movlb	1	; () banked
  2079  0045B6  6FE8               	movwf	SERIAL_Printf@fmt& (0+255),b
  2080  0045B8  0E7F               	movlw	high STR_16
  2081  0045BA  6FE9               	movwf	(SERIAL_Printf@fmt+1)& (0+255),b
  2082  0045BC  EC48  F029         	call	_SERIAL_Printf	;wreg free
  2083  0045C0                     l9084:
  2084                           
  2085                           ;src/main.c: 125:     _delay((unsigned long)((2000)*(48000000/4000.0)));
  2086  0045C0  0E7A               	movlw	122
  2087  0045C2  0101               	movlb	1	; () banked
  2088  0045C4  6FF3               	movwf	(??_dtll_task+1)& (0+255),b
  2089  0045C6  0EC1               	movlw	193
  2090  0045C8  6FF2               	movwf	??_dtll_task& (0+255),b
  2091  0045CA  0E81               	movlw	129
  2092  0045CC                     u10657:
  2093  0045CC  2EE8               	decfsz	wreg,f,c
  2094  0045CE  D7FE               	bra	u10657
  2095  0045D0  2FF2               	decfsz	??_dtll_task& (0+255),f,b
  2096  0045D2  D7FC               	bra	u10657
  2097  0045D4  2FF3               	decfsz	(??_dtll_task+1)& (0+255),f,b
  2098  0045D6  D7FA               	bra	u10657
  2099  0045D8  D000               	nop2	
  2100  0045DA  0012               	return		;funcret
  2101  0045DC                     __end_of_dtll_task:
  2102                           	opt callstack 0
  2103                           
  2104 ;; *************** function _SERIAL_Printf *****************
  2105 ;; Defined at:
  2106 ;;		line 90 in file "src/serial.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  fmt             2  232[BANK1 ] PTR const unsigned char 
  2109 ;;		 -> STR_18(16), STR_16(8), STR_14(51), STR_12(15), 
  2110 ;;		 -> STR_10(23), STR_8(23), STR_5(28), STR_3(14), 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  strout        128    0[BANK2 ] unsigned char [128]
  2113 ;;  ap              2  130[BANK2 ] PTR void [1]
  2114 ;;		 -> ?_LCD_Printf(2), ?_SERIAL_Printf(2), 
  2115 ;;  ret             2    0        int 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  2  232[BANK1 ] int 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2125 ;;      Params:         0       0      10       0       0       0       0       0       0
  2126 ;;      Locals:         0       0       0     132       0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2128 ;;      Totals:         0       0      10     132       0       0       0       0       0
  2129 ;;Total ram usage:      142 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    7
  2132 ;; This function calls:
  2133 ;;		_SERIAL_Write
  2134 ;;		_my_vsprintf
  2135 ;; This function is called by:
  2136 ;;		_dtll_task
  2137 ;;		_main
  2138 ;;		_testMath_task
  2139 ;;		_KBDSerial_task
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text2
  2144  005290                     __ptext2:
  2145                           	opt callstack 0
  2146  005290                     _SERIAL_Printf:
  2147                           	opt callstack 22
  2148  005290                     
  2149                           ;src/serial.c: 90: int SERIAL_Printf(const char *restrict fmt, ...);src/serial.c: 91: {;
      +                          src/serial.c: 92:     char strout[128];;src/serial.c: 93:     int ret;;src/serial.c: 94:
      +                               va_list ap;;src/serial.c: 95:     *ap = __va_start();
  2150  005290  0EEA               	movlw	low (?_SERIAL_Printf+2)
  2151  005292  0102               	movlb	2	; () banked
  2152  005294  6F82               	movwf	SERIAL_Printf@ap& (0+255),b
  2153  005296  0E01               	movlw	high (?_SERIAL_Printf+2)
  2154  005298  6F83               	movwf	(SERIAL_Printf@ap+1)& (0+255),b
  2155  00529A                     
  2156                           ; BSR set to: 2
  2157  00529A  0E00               	movlw	low SERIAL_Printf@strout
  2158  00529C  0100               	movlb	0	; () banked
  2159  00529E  6FBA               	movwf	my_vsprintf@str& (0+255),b
  2160  0052A0  0E02               	movlw	high SERIAL_Printf@strout
  2161  0052A2  6FBB               	movwf	(my_vsprintf@str+1)& (0+255),b
  2162  0052A4  C1E8  F0BC         	movff	SERIAL_Printf@fmt,my_vsprintf@sformat
  2163  0052A8  C1E9  F0BD         	movff	SERIAL_Printf@fmt+1,my_vsprintf@sformat+1
  2164  0052AC  0E82               	movlw	low SERIAL_Printf@ap
  2165  0052AE  6FBE               	movwf	my_vsprintf@valist& (0+255),b
  2166  0052B0  0E02               	movlw	high SERIAL_Printf@ap
  2167  0052B2  6FBF               	movwf	(my_vsprintf@valist+1)& (0+255),b
  2168  0052B4  EC09  F000         	call	_my_vsprintf	;wreg free
  2169  0052B8                     
  2170                           ;src/serial.c: 98:     SERIAL_Write(strout);
  2171  0052B8  0E00               	movlw	low SERIAL_Printf@strout
  2172  0052BA  6E08               	movwf	SERIAL_Write@str^0,c
  2173  0052BC  0E02               	movlw	high SERIAL_Printf@strout
  2174  0052BE  6E09               	movwf	(SERIAL_Write@str+1)^0,c
  2175  0052C0  EC4C  F028         	call	_SERIAL_Write	;wreg free
  2176  0052C4  0012               	return		;funcret
  2177  0052C6                     __end_of_SERIAL_Printf:
  2178                           	opt callstack 0
  2179                           
  2180 ;; *************** function _SERIAL_Write *****************
  2181 ;; Defined at:
  2182 ;;		line 33 in file "src/serial.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  str             2    7[COMRAM] PTR unsigned char 
  2185 ;;		 -> SERIAL_Printf@strout(128), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  i               2    9[COMRAM] int 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2197 ;;      Params:         2       0       0       0       0       0       0       0       0
  2198 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2200 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2201 ;;Total ram usage:        4 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    3
  2204 ;; This function calls:
  2205 ;;		_SERIAL_WriteChar
  2206 ;;		_strlen
  2207 ;; This function is called by:
  2208 ;;		_SERIAL_Printf
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text3
  2213  005098                     __ptext3:
  2214                           	opt callstack 0
  2215  005098                     _SERIAL_Write:
  2216                           	opt callstack 25
  2217  005098                     
  2218                           ;src/serial.c: 34:     int i;;src/serial.c: 35:     for (i = 0; i < strlen(str); i++)
  2219  005098  0E00               	movlw	0
  2220  00509A  6E0B               	movwf	(SERIAL_Write@i+1)^0,c
  2221  00509C  0E00               	movlw	0
  2222  00509E  6E0A               	movwf	SERIAL_Write@i^0,c
  2223  0050A0  EF5D  F028         	goto	l8564
  2224  0050A4                     l8560:
  2225                           
  2226                           ;src/serial.c: 36:     {;src/serial.c: 37:         SERIAL_WriteChar(str[i]);
  2227  0050A4  500A               	movf	SERIAL_Write@i^0,w,c
  2228  0050A6  2408               	addwf	SERIAL_Write@str^0,w,c
  2229  0050A8  6ED9               	movwf	fsr2l,c
  2230  0050AA  500B               	movf	(SERIAL_Write@i+1)^0,w,c
  2231  0050AC  2009               	addwfc	(SERIAL_Write@str+1)^0,w,c
  2232  0050AE  6EDA               	movwf	fsr2h,c
  2233  0050B0  50DF               	movf	indf2,w,c
  2234  0050B2  EC07  F02A         	call	_SERIAL_WriteChar
  2235  0050B6                     
  2236                           ;src/serial.c: 38:     }
  2237  0050B6  4A0A               	infsnz	SERIAL_Write@i^0,f,c
  2238  0050B8  2A0B               	incf	(SERIAL_Write@i+1)^0,f,c
  2239  0050BA                     l8564:
  2240  0050BA  C008  F004         	movff	SERIAL_Write@str,strlen@s
  2241  0050BE  C009  F005         	movff	SERIAL_Write@str+1,strlen@s+1
  2242  0050C2  EC7E  F029         	call	_strlen	;wreg free
  2243  0050C6  5004               	movf	?_strlen^0,w,c
  2244  0050C8  5C0A               	subwf	SERIAL_Write@i^0,w,c
  2245  0050CA  5005               	movf	(?_strlen+1)^0,w,c
  2246  0050CC  580B               	subwfb	(SERIAL_Write@i+1)^0,w,c
  2247  0050CE  A0D8               	btfss	status,0,c
  2248  0050D0  EF6C  F028         	goto	u10031
  2249  0050D4  EF6E  F028         	goto	u10030
  2250  0050D8                     u10031:
  2251  0050D8  EF52  F028         	goto	l8560
  2252  0050DC                     u10030:
  2253  0050DC  0012               	return		;funcret
  2254  0050DE                     __end_of_SERIAL_Write:
  2255                           	opt callstack 0
  2256                           
  2257 ;; *************** function _SERIAL_WriteChar *****************
  2258 ;; Defined at:
  2259 ;;		line 28 in file "src/serial.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  data            1    wreg     unsigned char 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  data            1    3[COMRAM] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        1 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    2
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_SERIAL_Write
  2284 ;;		_SERIAL_WriteLine
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text4
  2289  00540E                     __ptext4:
  2290                           	opt callstack 0
  2291  00540E                     _SERIAL_WriteChar:
  2292                           	opt callstack 25
  2293                           
  2294                           ;incstack = 0
  2295                           ;SERIAL_WriteChar@data stored from wreg
  2296  00540E  6E04               	movwf	SERIAL_WriteChar@data^0,c
  2297  005410                     l111:
  2298  005410  A2AC               	btfss	172,1,c	;volatile
  2299  005412  EF0D  F02A         	goto	u8921
  2300  005416  EF0F  F02A         	goto	u8920
  2301  00541A                     u8921:
  2302  00541A  EF08  F02A         	goto	l111
  2303  00541E                     u8920:
  2304  00541E                     
  2305                           ;src/serial.c: 30:     TXREG = data;
  2306  00541E  C004  FFAD         	movff	SERIAL_WriteChar@data,4013	;volatile
  2307  005422  0012               	return		;funcret
  2308  005424                     __end_of_SERIAL_WriteChar:
  2309                           	opt callstack 0
  2310                           
  2311 ;; *************** function _LCD_Printf *****************
  2312 ;; Defined at:
  2313 ;;		line 174 in file "src/lcd.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  fmt             2  232[BANK1 ] PTR const unsigned char 
  2316 ;;		 -> STR_17(15), STR_15(7), STR_13(31), STR_11(15), 
  2317 ;;		 -> STR_9(25), STR_7(27), STR_4(23), STR_2(14), 
  2318 ;;		 -> STR_1(8), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  strout        128    0[BANK2 ] unsigned char [128]
  2321 ;;  ap              2  130[BANK2 ] PTR void [1]
  2322 ;;		 -> ?_LCD_Printf(2), ?_SERIAL_Printf(2), 
  2323 ;;  ret             2    0        int 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  2  232[BANK1 ] int 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2333 ;;      Params:         0       0      10       0       0       0       0       0       0
  2334 ;;      Locals:         0       0       0     132       0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2336 ;;      Totals:         0       0      10     132       0       0       0       0       0
  2337 ;;Total ram usage:      142 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    8
  2340 ;; This function calls:
  2341 ;;		_LCD_Write
  2342 ;;		_my_vsprintf
  2343 ;; This function is called by:
  2344 ;;		_dtll_task
  2345 ;;		_main
  2346 ;;		_SerialLCD_task
  2347 ;;		_testMath_task
  2348 ;;		_KBDSerial_task
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text5
  2353  0052C6                     __ptext5:
  2354                           	opt callstack 0
  2355  0052C6                     _LCD_Printf:
  2356                           	opt callstack 21
  2357  0052C6                     
  2358                           ;src/lcd.c: 174: int LCD_Printf(const char *restrict fmt, ...);src/lcd.c: 175: {;src/lcd
      +                          .c: 176:     char strout[128];;src/lcd.c: 177:     int ret;;src/lcd.c: 178:     va_list 
      +                          ap;;src/lcd.c: 179:     *ap = __va_start();
  2359  0052C6  0EEA               	movlw	low (?_LCD_Printf+2)
  2360  0052C8  0102               	movlb	2	; () banked
  2361  0052CA  6F82               	movwf	LCD_Printf@ap& (0+255),b
  2362  0052CC  0E01               	movlw	high (?_LCD_Printf+2)
  2363  0052CE  6F83               	movwf	(LCD_Printf@ap+1)& (0+255),b
  2364  0052D0                     
  2365                           ; BSR set to: 2
  2366  0052D0  0E00               	movlw	low LCD_Printf@strout
  2367  0052D2  0100               	movlb	0	; () banked
  2368  0052D4  6FBA               	movwf	my_vsprintf@str& (0+255),b
  2369  0052D6  0E02               	movlw	high LCD_Printf@strout
  2370  0052D8  6FBB               	movwf	(my_vsprintf@str+1)& (0+255),b
  2371  0052DA  C1E8  F0BC         	movff	LCD_Printf@fmt,my_vsprintf@sformat
  2372  0052DE  C1E9  F0BD         	movff	LCD_Printf@fmt+1,my_vsprintf@sformat+1
  2373  0052E2  0E82               	movlw	low LCD_Printf@ap
  2374  0052E4  6FBE               	movwf	my_vsprintf@valist& (0+255),b
  2375  0052E6  0E02               	movlw	high LCD_Printf@ap
  2376  0052E8  6FBF               	movwf	(my_vsprintf@valist+1)& (0+255),b
  2377  0052EA  EC09  F000         	call	_my_vsprintf	;wreg free
  2378  0052EE                     
  2379                           ;src/lcd.c: 181:     LCD_Write(strout);
  2380  0052EE  0E00               	movlw	low LCD_Printf@strout
  2381  0052F0  6E0F               	movwf	LCD_Write@str^0,c
  2382  0052F2  0E02               	movlw	high LCD_Printf@strout
  2383  0052F4  6E10               	movwf	(LCD_Write@str+1)^0,c
  2384  0052F6  ECBA  F024         	call	_LCD_Write	;wreg free
  2385  0052FA  0012               	return		;funcret
  2386  0052FC                     __end_of_LCD_Printf:
  2387                           	opt callstack 0
  2388                           
  2389 ;; *************** function _my_vsprintf *****************
  2390 ;; Defined at:
  2391 ;;		line 8 in file "src/print/my_print.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  str             2   90[BANK0 ] PTR unsigned char 
  2394 ;;		 -> LCD_Printf@strout(128), SERIAL_Printf@strout(128), 
  2395 ;;  sformat         2   92[BANK0 ] PTR const unsigned char 
  2396 ;;		 -> STR_18(16), STR_17(15), STR_16(8), STR_15(7), 
  2397 ;;		 -> STR_14(51), STR_13(31), STR_12(15), STR_11(15), 
  2398 ;;		 -> STR_10(23), STR_9(25), STR_8(23), STR_7(27), 
  2399 ;;		 -> STR_5(28), STR_4(23), STR_3(14), STR_2(14), 
  2400 ;;		 -> STR_1(8), 
  2401 ;;  valist          2   94[BANK0 ] PTR PTR void 
  2402 ;;		 -> LCD_Printf@ap(2), SERIAL_Printf@ap(2), 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  string        128    0[BANK1 ] unsigned char [128]
  2405 ;;  buffer         64  142[BANK1 ] unsigned char [64]
  2406 ;;  format         10  130[BANK1 ] unsigned char [10]
  2407 ;;  double_temp     4  224[BANK1 ] unsigned char [10]
  2408 ;;  prec            2  230[BANK1 ] int 
  2409 ;;  i               2  228[BANK1 ] int 
  2410 ;;  int_temp        2  222[BANK1 ] int 
  2411 ;;  j               2  220[BANK1 ] int 
  2412 ;;  width           2  218[BANK1 ] int 
  2413 ;;  x               2  216[BANK1 ] int 
  2414 ;;  ch              2  206[BANK1 ] unsigned char [2]
  2415 ;;  error           2  214[BANK1 ] int 
  2416 ;;  expA            2  212[BANK1 ] int 
  2417 ;;  char_temp       2  128[BANK1 ] unsigned char [2]
  2418 ;;  length          2  210[BANK1 ] int 
  2419 ;;  uint_temp       2  208[BANK1 ] unsigned short 
  2420 ;;  string_temp     2  140[BANK1 ] PTR unsigned char 
  2421 ;;		 -> ?_LCD_Printf(2), ?_SERIAL_Printf(2), STR_6(5), SerialLCD_task@txt(32), 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  2   90[BANK0 ] int 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2431 ;;      Params:         0       6       0       0       0       0       0       0       0
  2432 ;;      Locals:         0       0     232       0       0       0       0       0       0
  2433 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2434 ;;      Totals:         0       8     232       0       0       0       0       0       0
  2435 ;;Total ram usage:      240 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    6
  2438 ;; This function calls:
  2439 ;;		___xxtofl
  2440 ;;		_addOx
  2441 ;;		_addSig
  2442 ;;		_cleanS
  2443 ;;		_ftoa
  2444 ;;		_ftoa_sci
  2445 ;;		_getWP
  2446 ;;		_itoa
  2447 ;;		_precE
  2448 ;;		_precF
  2449 ;;		_precG
  2450 ;;		_precI
  2451 ;;		_precS
  2452 ;;		_setWidth
  2453 ;;		_strcat
  2454 ;;		_strcpy
  2455 ;;		_strlen
  2456 ;;		_upperCL
  2457 ;; This function is called by:
  2458 ;;		_SERIAL_Printf
  2459 ;;		_LCD_Printf
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text6
  2464  000012                     __ptext6:
  2465                           	opt callstack 0
  2466  000012                     _my_vsprintf:
  2467                           	opt callstack 22
  2468  000012                     
  2469                           ;src/print/my_print.c: 8: int my_vsprintf(char *restrict str, const char *restrict sform
      +                          at, va_list valist);src/print/my_print.c: 9: {;src/print/my_print.c: 10:  const char tip
      +                          o[]= {'%','c','s','d','i','x','X','o','u','f','g','G','e','E','n'};;src/print/my_print.c
      +                          : 11:  char string[128] = "";
  2470  000012  EE21  F000         	lfsr	2,my_vsprintf@string
  2471  000016  0E7F               	movlw	127
  2472  000018                     u10041:
  2473  000018  6ADE               	clrf	postinc2,c
  2474  00001A  06E8               	decf	wreg,f,c
  2475  00001C  E2FD               	bc	u10041
  2476  00001E                     
  2477                           ;src/print/my_print.c: 12:  int length = 0;
  2478  00001E  0E00               	movlw	0
  2479  000020  0101               	movlb	1	; () banked
  2480  000022  6FD3               	movwf	(my_vsprintf@length+1)& (0+255),b
  2481  000024  0E00               	movlw	0
  2482  000026  6FD2               	movwf	my_vsprintf@length& (0+255),b
  2483  000028                     
  2484                           ; BSR set to: 1
  2485                           ;src/print/my_print.c: 15:  int i, j, x;;src/print/my_print.c: 16:  char char_temp[2] = 
      +                          {0,0};
  2486  000028  0E00               	movlw	0
  2487  00002A  6F81               	movwf	(my_vsprintf@char_temp+1)& (0+255),b
  2488  00002C  0E00               	movlw	0
  2489  00002E  6F80               	movwf	my_vsprintf@char_temp& (0+255),b
  2490  000030                     
  2491                           ; BSR set to: 1
  2492                           ;src/print/my_print.c: 17:  char *string_temp;;src/print/my_print.c: 18:  double double_
      +                          temp;;src/print/my_print.c: 19:  char ch[2]={0,0};
  2493  000030  0E00               	movlw	0
  2494  000032  6FCF               	movwf	(my_vsprintf@ch+1)& (0+255),b
  2495  000034  0E00               	movlw	0
  2496  000036  6FCE               	movwf	my_vsprintf@ch& (0+255),b
  2497  000038                     
  2498                           ; BSR set to: 1
  2499                           ;src/print/my_print.c: 20:  char format[10];;src/print/my_print.c: 21:  char buffer[64] 
      +                          = "";
  2500  000038  EE21  F08E         	lfsr	2,my_vsprintf@buffer
  2501  00003C  0E3F               	movlw	63
  2502  00003E                     u10051:
  2503  00003E  6ADE               	clrf	postinc2,c
  2504  000040  06E8               	decf	wreg,f,c
  2505  000042  E2FD               	bc	u10051
  2506                           
  2507                           ;src/print/my_print.c: 22:  int expA;;src/print/my_print.c: 23:  int prec;;src/print/my_
      +                          print.c: 24:  int width;;src/print/my_print.c: 25:  int error = 0;
  2508  000044  0E00               	movlw	0
  2509  000046  6FD7               	movwf	(my_vsprintf@error+1)& (0+255),b
  2510  000048  0E00               	movlw	0
  2511  00004A  6FD6               	movwf	my_vsprintf@error& (0+255),b
  2512                           
  2513                           ;src/print/my_print.c: 31:  while ( (ch[0] = *sformat++)) {
  2514  00004C  EF27  F006         	goto	l8822
  2515  000050                     l8580:
  2516                           
  2517                           ; BSR set to: 1
  2518                           ;src/print/my_print.c: 32:   if ( '%' == ch[0] ) {
  2519  000050  0E25               	movlw	37
  2520  000052  19CE               	xorwf	my_vsprintf@ch& (0+255),w,b
  2521  000054  A4D8               	btfss	status,2,c
  2522  000056  EF2F  F000         	goto	u10061
  2523  00005A  EF31  F000         	goto	u10060
  2524  00005E                     u10061:
  2525  00005E  EF1A  F006         	goto	l8818
  2526  000062                     u10060:
  2527  000062                     
  2528                           ; BSR set to: 1
  2529                           ;src/print/my_print.c: 33:    cleanS(buffer);
  2530  000062  0E8E               	movlw	low my_vsprintf@buffer
  2531  000064  6E08               	movwf	cleanS@str^0,c
  2532  000066  0E01               	movlw	high my_vsprintf@buffer
  2533  000068  6E09               	movwf	(cleanS@str+1)^0,c
  2534  00006A  ECB4  F027         	call	_cleanS	;wreg free
  2535                           
  2536                           ;src/print/my_print.c: 34:    cleanS(format);
  2537  00006E  0E82               	movlw	low my_vsprintf@format
  2538  000070  6E08               	movwf	cleanS@str^0,c
  2539  000072  0E01               	movlw	high my_vsprintf@format
  2540  000074  6E09               	movwf	(cleanS@str+1)^0,c
  2541  000076  ECB4  F027         	call	_cleanS	;wreg free
  2542  00007A                     
  2543                           ;src/print/my_print.c: 35:    width = -1;
  2544  00007A  0101               	movlb	1	; () banked
  2545  00007C  69DA               	setf	my_vsprintf@width& (0+255),b
  2546  00007E  69DB               	setf	(my_vsprintf@width+1)& (0+255),b
  2547  000080                     
  2548                           ; BSR set to: 1
  2549                           ;src/print/my_print.c: 36:    prec = -1;
  2550  000080  69E6               	setf	my_vsprintf@prec& (0+255),b
  2551  000082  69E7               	setf	(my_vsprintf@prec+1)& (0+255),b
  2552  000084                     
  2553                           ; BSR set to: 1
  2554                           ;src/print/my_print.c: 38:    format[0]='%';
  2555  000084  0E25               	movlw	37
  2556  000086  6F82               	movwf	my_vsprintf@format& (0+255),b
  2557  000088                     
  2558                           ; BSR set to: 1
  2559                           ;src/print/my_print.c: 39:    x = 0;
  2560  000088  0E00               	movlw	0
  2561  00008A  6FD9               	movwf	(my_vsprintf@x+1)& (0+255),b
  2562  00008C  0E00               	movlw	0
  2563  00008E  6FD8               	movwf	my_vsprintf@x& (0+255),b
  2564  000090                     
  2565                           ; BSR set to: 1
  2566                           ;src/print/my_print.c: 40:    i = 1;
  2567  000090  0E00               	movlw	0
  2568  000092  6FE5               	movwf	(my_vsprintf@i+1)& (0+255),b
  2569  000094  0E01               	movlw	1
  2570  000096  6FE4               	movwf	my_vsprintf@i& (0+255),b
  2571                           
  2572                           ;src/print/my_print.c: 42:    while (x==0) {
  2573  000098  EF99  F000         	goto	l8614
  2574  00009C                     l8594:
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;src/print/my_print.c: 43:      format[i] = *sformat++;
  2578  00009C  C0BC  FFF6         	movff	my_vsprintf@sformat,tblptrl
  2579  0000A0  C0BD  FFF7         	movff	my_vsprintf@sformat+1,tblptrh
  2580  0000A4                     	if	0	;tblptru may be non-zero
  2581  0000A4                     	endif
  2582  0000A4                     	if	0	;tblptru may be non-zero
  2583  0000A4                     	endif
  2584  0000A4  0E82               	movlw	low my_vsprintf@format
  2585  0000A6  25E4               	addwf	my_vsprintf@i& (0+255),w,b
  2586  0000A8  6ED9               	movwf	fsr2l,c
  2587  0000AA  0E01               	movlw	high my_vsprintf@format
  2588  0000AC  21E5               	addwfc	(my_vsprintf@i+1)& (0+255),w,b
  2589  0000AE  6EDA               	movwf	fsr2h,c
  2590  0000B0  0008               	tblrd		*
  2591  0000B2  CFF5 FFDF          	movff	tablat,indf2
  2592  0000B6                     
  2593                           ; BSR set to: 1
  2594  0000B6  0100               	movlb	0	; () banked
  2595  0000B8  4BBC               	infsnz	my_vsprintf@sformat& (0+255),f,b
  2596  0000BA  2BBD               	incf	(my_vsprintf@sformat+1)& (0+255),f,b
  2597  0000BC                     
  2598                           ; BSR set to: 0
  2599                           ;src/print/my_print.c: 44:      for(j = 0; j < 15; j++) {
  2600  0000BC  0E00               	movlw	0
  2601  0000BE  0101               	movlb	1	; () banked
  2602  0000C0  6FDD               	movwf	(my_vsprintf@j+1)& (0+255),b
  2603  0000C2  0E00               	movlw	0
  2604  0000C4  6FDC               	movwf	my_vsprintf@j& (0+255),b
  2605  0000C6                     l8600:
  2606                           
  2607                           ; BSR set to: 1
  2608  0000C6  BFDD               	btfsc	(my_vsprintf@j+1)& (0+255),7,b
  2609  0000C8  EF6F  F000         	goto	u10071
  2610  0000CC  51DD               	movf	(my_vsprintf@j+1)& (0+255),w,b
  2611  0000CE  E109               	bnz	u10070
  2612  0000D0  0E0F               	movlw	15
  2613  0000D2  5DDC               	subwf	my_vsprintf@j& (0+255),w,b
  2614  0000D4  A0D8               	btfss	status,0,c
  2615  0000D6  EF6F  F000         	goto	u10071
  2616  0000DA  EF71  F000         	goto	u10070
  2617  0000DE                     u10071:
  2618  0000DE  EF73  F000         	goto	l8604
  2619  0000E2                     u10070:
  2620  0000E2  EF97  F000         	goto	l8612
  2621  0000E6                     l8604:
  2622                           
  2623                           ; BSR set to: 1
  2624                           ;src/print/my_print.c: 45:         if (format[i] == tipo[j])
  2625  0000E6  0E82               	movlw	low my_vsprintf@format
  2626  0000E8  25E4               	addwf	my_vsprintf@i& (0+255),w,b
  2627  0000EA  6ED9               	movwf	fsr2l,c
  2628  0000EC  0E01               	movlw	high my_vsprintf@format
  2629  0000EE  21E5               	addwfc	(my_vsprintf@i+1)& (0+255),w,b
  2630  0000F0  6EDA               	movwf	fsr2h,c
  2631  0000F2  50DF               	movf	indf2,w,c
  2632  0000F4  0100               	movlb	0	; () banked
  2633  0000F6  6FC0               	movwf	??_my_vsprintf& (0+255),b
  2634  0000F8  0E89               	movlw	low my_vsprintf@tipo
  2635  0000FA  0101               	movlb	1	; () banked
  2636  0000FC  25DC               	addwf	my_vsprintf@j& (0+255),w,b
  2637  0000FE  6EF6               	movwf	tblptrl,c
  2638  000100  0E7E               	movlw	high my_vsprintf@tipo
  2639  000102  21DD               	addwfc	(my_vsprintf@j+1)& (0+255),w,b
  2640  000104  6EF7               	movwf	tblptrh,c
  2641  000106                     	if	0	;There are less than 3 active tblptr bytes
  2642  000106                     	endif
  2643  000106  0008               	tblrd		*
  2644  000108  50F5               	movf	tablat,w,c
  2645  00010A  0100               	movlb	0	; () banked
  2646  00010C  19C0               	xorwf	??_my_vsprintf& (0+255),w,b
  2647  00010E  A4D8               	btfss	status,2,c
  2648  000110  EF8C  F000         	goto	u10081
  2649  000114  EF8E  F000         	goto	u10080
  2650  000118                     u10081:
  2651  000118  EF92  F000         	goto	l8608
  2652  00011C                     u10080:
  2653  00011C                     
  2654                           ; BSR set to: 0
  2655                           ;src/print/my_print.c: 46:       x = i;
  2656  00011C  C1E4  F1D8         	movff	my_vsprintf@i,my_vsprintf@x
  2657  000120  C1E5  F1D9         	movff	my_vsprintf@i+1,my_vsprintf@x+1
  2658  000124                     l8608:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;src/print/my_print.c: 47:      }
  2662  000124  0101               	movlb	1	; () banked
  2663  000126  4BDC               	infsnz	my_vsprintf@j& (0+255),f,b
  2664  000128  2BDD               	incf	(my_vsprintf@j+1)& (0+255),f,b
  2665  00012A  EF63  F000         	goto	l8600
  2666  00012E                     l8612:
  2667                           
  2668                           ; BSR set to: 1
  2669                           ;src/print/my_print.c: 48:      i++;
  2670  00012E  4BE4               	infsnz	my_vsprintf@i& (0+255),f,b
  2671  000130  2BE5               	incf	(my_vsprintf@i+1)& (0+255),f,b
  2672  000132                     l8614:
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;src/print/my_print.c: 42:    while (x==0) {
  2676  000132  51D8               	movf	my_vsprintf@x& (0+255),w,b
  2677  000134  11D9               	iorwf	(my_vsprintf@x+1)& (0+255),w,b
  2678  000136  B4D8               	btfsc	status,2,c
  2679  000138  EFA0  F000         	goto	u10091
  2680  00013C  EFA2  F000         	goto	u10090
  2681  000140                     u10091:
  2682  000140  EF4E  F000         	goto	l8594
  2683  000144                     u10090:
  2684  000144                     
  2685                           ; BSR set to: 1
  2686                           ;src/print/my_print.c: 52:    i=0;
  2687  000144  0E00               	movlw	0
  2688  000146  6FE5               	movwf	(my_vsprintf@i+1)& (0+255),b
  2689  000148  0E00               	movlw	0
  2690  00014A  6FE4               	movwf	my_vsprintf@i& (0+255),b
  2691                           
  2692                           ;src/print/my_print.c: 53:    for (j=0; j < x; j++) {
  2693  00014C  0E00               	movlw	0
  2694  00014E  6FDD               	movwf	(my_vsprintf@j+1)& (0+255),b
  2695  000150  0E00               	movlw	0
  2696  000152  6FDC               	movwf	my_vsprintf@j& (0+255),b
  2697  000154  EF1C  F001         	goto	l8634
  2698  000158                     l8618:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;src/print/my_print.c: 54:     if(format[j]=='*' && i==0)
  2702  000158  0E82               	movlw	low my_vsprintf@format
  2703  00015A  0101               	movlb	1	; () banked
  2704  00015C  25DC               	addwf	my_vsprintf@j& (0+255),w,b
  2705  00015E  6ED9               	movwf	fsr2l,c
  2706  000160  0E01               	movlw	high my_vsprintf@format
  2707  000162  21DD               	addwfc	(my_vsprintf@j+1)& (0+255),w,b
  2708  000164  6EDA               	movwf	fsr2h,c
  2709  000166  0E2A               	movlw	42
  2710  000168  18DE               	xorwf	postinc2,w,c
  2711  00016A  A4D8               	btfss	status,2,c
  2712  00016C  EFBA  F000         	goto	u10101
  2713  000170  EFBC  F000         	goto	u10100
  2714  000174                     u10101:
  2715  000174  EFDB  F000         	goto	l8624
  2716  000178                     u10100:
  2717  000178                     
  2718                           ; BSR set to: 1
  2719  000178  51E4               	movf	my_vsprintf@i& (0+255),w,b
  2720  00017A  11E5               	iorwf	(my_vsprintf@i+1)& (0+255),w,b
  2721  00017C  A4D8               	btfss	status,2,c
  2722  00017E  EFC3  F000         	goto	u10111
  2723  000182  EFC5  F000         	goto	u10110
  2724  000186                     u10111:
  2725  000186  EFDB  F000         	goto	l8624
  2726  00018A                     u10110:
  2727  00018A                     
  2728                           ; BSR set to: 1
  2729                           ;src/print/my_print.c: 55:      width = (*(int *)__va_arg(*(int **)valist, (int)0));
  2730  00018A  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  2731  00018E  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  2732  000192  CFDF F0C0          	movff	indf2,??_my_vsprintf
  2733  000196  0E02               	movlw	2
  2734  000198  26DE               	addwf	postinc2,f,c
  2735  00019A  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  2736  00019E  0E00               	movlw	0
  2737  0001A0  22DD               	addwfc	postdec2,f,c
  2738  0001A2  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  2739  0001A6  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  2740  0001AA  CFDE F1DA          	movff	postinc2,my_vsprintf@width
  2741  0001AE  CFDD F1DB          	movff	postdec2,my_vsprintf@width+1
  2742  0001B2  EF1A  F001         	goto	l700
  2743  0001B6                     l8624:
  2744                           
  2745                           ; BSR set to: 1
  2746  0001B6  0E82               	movlw	low my_vsprintf@format
  2747  0001B8  25DC               	addwf	my_vsprintf@j& (0+255),w,b
  2748  0001BA  6ED9               	movwf	fsr2l,c
  2749  0001BC  0E01               	movlw	high my_vsprintf@format
  2750  0001BE  21DD               	addwfc	(my_vsprintf@j+1)& (0+255),w,b
  2751  0001C0  6EDA               	movwf	fsr2h,c
  2752  0001C2  0E2A               	movlw	42
  2753  0001C4  18DE               	xorwf	postinc2,w,c
  2754  0001C6  A4D8               	btfss	status,2,c
  2755  0001C8  EFE8  F000         	goto	u10121
  2756  0001CC  EFEA  F000         	goto	u10120
  2757  0001D0                     u10121:
  2758  0001D0  EF09  F001         	goto	l8630
  2759  0001D4                     u10120:
  2760  0001D4                     
  2761                           ; BSR set to: 1
  2762  0001D4  05E4               	decf	my_vsprintf@i& (0+255),w,b
  2763  0001D6  11E5               	iorwf	(my_vsprintf@i+1)& (0+255),w,b
  2764  0001D8  A4D8               	btfss	status,2,c
  2765  0001DA  EFF1  F000         	goto	u10131
  2766  0001DE  EFF3  F000         	goto	u10130
  2767  0001E2                     u10131:
  2768  0001E2  EF09  F001         	goto	l8630
  2769  0001E6                     u10130:
  2770  0001E6                     
  2771                           ; BSR set to: 1
  2772                           ;src/print/my_print.c: 57:      prec = (*(int *)__va_arg(*(int **)valist, (int)0));
  2773  0001E6  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  2774  0001EA  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  2775  0001EE  CFDF F0C0          	movff	indf2,??_my_vsprintf
  2776  0001F2  0E02               	movlw	2
  2777  0001F4  26DE               	addwf	postinc2,f,c
  2778  0001F6  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  2779  0001FA  0E00               	movlw	0
  2780  0001FC  22DD               	addwfc	postdec2,f,c
  2781  0001FE  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  2782  000202  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  2783  000206  CFDE F1E6          	movff	postinc2,my_vsprintf@prec
  2784  00020A  CFDD F1E7          	movff	postdec2,my_vsprintf@prec+1
  2785  00020E  EF1A  F001         	goto	l700
  2786  000212                     l8630:
  2787                           
  2788                           ; BSR set to: 1
  2789  000212  0E82               	movlw	low my_vsprintf@format
  2790  000214  25DC               	addwf	my_vsprintf@j& (0+255),w,b
  2791  000216  6ED9               	movwf	fsr2l,c
  2792  000218  0E01               	movlw	high my_vsprintf@format
  2793  00021A  21DD               	addwfc	(my_vsprintf@j+1)& (0+255),w,b
  2794  00021C  6EDA               	movwf	fsr2h,c
  2795  00021E  0E2E               	movlw	46
  2796  000220  18DE               	xorwf	postinc2,w,c
  2797  000222  A4D8               	btfss	status,2,c
  2798  000224  EF16  F001         	goto	u10141
  2799  000228  EF18  F001         	goto	u10140
  2800  00022C                     u10141:
  2801  00022C  EF1A  F001         	goto	l700
  2802  000230                     u10140:
  2803  000230                     
  2804                           ; BSR set to: 1
  2805                           ;src/print/my_print.c: 59:      i++;
  2806  000230  4BE4               	infsnz	my_vsprintf@i& (0+255),f,b
  2807  000232  2BE5               	incf	(my_vsprintf@i+1)& (0+255),f,b
  2808  000234                     l700:
  2809                           
  2810                           ; BSR set to: 1
  2811                           ;src/print/my_print.c: 60:    }
  2812  000234  4BDC               	infsnz	my_vsprintf@j& (0+255),f,b
  2813  000236  2BDD               	incf	(my_vsprintf@j+1)& (0+255),f,b
  2814  000238                     l8634:
  2815                           
  2816                           ; BSR set to: 1
  2817  000238  51D8               	movf	my_vsprintf@x& (0+255),w,b
  2818  00023A  5DDC               	subwf	my_vsprintf@j& (0+255),w,b
  2819  00023C  51DD               	movf	(my_vsprintf@j+1)& (0+255),w,b
  2820  00023E  0A80               	xorlw	128
  2821  000240  0100               	movlb	0	; () banked
  2822  000242  6FC0               	movwf	??_my_vsprintf& (0+255),b
  2823  000244  0101               	movlb	1	; () banked
  2824  000246  51D9               	movf	(my_vsprintf@x+1)& (0+255),w,b
  2825  000248  0A80               	xorlw	128
  2826  00024A  0100               	movlb	0	; () banked
  2827  00024C  59C0               	subwfb	??_my_vsprintf& (0+255),w,b
  2828  00024E  A0D8               	btfss	status,0,c
  2829  000250  EF2C  F001         	goto	u10151
  2830  000254  EF2E  F001         	goto	u10150
  2831  000258                     u10151:
  2832  000258  EFAC  F000         	goto	l8618
  2833  00025C                     u10150:
  2834  00025C                     
  2835                           ; BSR set to: 0
  2836                           ;src/print/my_print.c: 62:    getWP(format, &width, &prec);
  2837  00025C  0E82               	movlw	low my_vsprintf@format
  2838  00025E  6FA4               	movwf	getWP@form& (0+255),b
  2839  000260  0E01               	movlw	high my_vsprintf@format
  2840  000262  6FA5               	movwf	(getWP@form+1)& (0+255),b
  2841  000264  0EDA               	movlw	low my_vsprintf@width
  2842  000266  6FA6               	movwf	getWP@width& (0+255),b
  2843  000268  0E01               	movlw	high my_vsprintf@width
  2844  00026A  6FA7               	movwf	(getWP@width+1)& (0+255),b
  2845  00026C  0EE6               	movlw	low my_vsprintf@prec
  2846  00026E  6FA8               	movwf	getWP@precision& (0+255),b
  2847  000270  0E01               	movlw	high my_vsprintf@prec
  2848  000272  6FA9               	movwf	(getWP@precision+1)& (0+255),b
  2849  000274  EC33  F018         	call	_getWP	;wreg free
  2850  000278                     
  2851                           ;src/print/my_print.c: 65:    if (width >= 64)
  2852  000278  0101               	movlb	1	; () banked
  2853  00027A  BFDB               	btfsc	(my_vsprintf@width+1)& (0+255),7,b
  2854  00027C  EF49  F001         	goto	u10161
  2855  000280  51DB               	movf	(my_vsprintf@width+1)& (0+255),w,b
  2856  000282  E109               	bnz	u10160
  2857  000284  0E40               	movlw	64
  2858  000286  5DDA               	subwf	my_vsprintf@width& (0+255),w,b
  2859  000288  A0D8               	btfss	status,0,c
  2860  00028A  EF49  F001         	goto	u10161
  2861  00028E  EF4B  F001         	goto	u10160
  2862  000292                     u10161:
  2863  000292  EF4F  F001         	goto	l8642
  2864  000296                     u10160:
  2865  000296                     
  2866                           ; BSR set to: 1
  2867                           ;src/print/my_print.c: 66:     width = 0;
  2868  000296  0E00               	movlw	0
  2869  000298  6FDB               	movwf	(my_vsprintf@width+1)& (0+255),b
  2870  00029A  0E00               	movlw	0
  2871  00029C  6FDA               	movwf	my_vsprintf@width& (0+255),b
  2872  00029E                     l8642:
  2873                           
  2874                           ; BSR set to: 1
  2875                           ;src/print/my_print.c: 67:    if (prec >= 64)
  2876  00029E  BFE7               	btfsc	(my_vsprintf@prec+1)& (0+255),7,b
  2877  0002A0  EF5B  F001         	goto	u10171
  2878  0002A4  51E7               	movf	(my_vsprintf@prec+1)& (0+255),w,b
  2879  0002A6  E109               	bnz	u10170
  2880  0002A8  0E40               	movlw	64
  2881  0002AA  5DE6               	subwf	my_vsprintf@prec& (0+255),w,b
  2882  0002AC  A0D8               	btfss	status,0,c
  2883  0002AE  EF5B  F001         	goto	u10171
  2884  0002B2  EF5D  F001         	goto	u10170
  2885  0002B6                     u10171:
  2886  0002B6  EFA9  F005         	goto	l8810
  2887  0002BA                     u10170:
  2888  0002BA                     
  2889                           ; BSR set to: 1
  2890                           ;src/print/my_print.c: 68:     prec = 0;
  2891  0002BA  0E00               	movlw	0
  2892  0002BC  6FE7               	movwf	(my_vsprintf@prec+1)& (0+255),b
  2893  0002BE  0E00               	movlw	0
  2894  0002C0  6FE6               	movwf	my_vsprintf@prec& (0+255),b
  2895  0002C2  EFA9  F005         	goto	l8810
  2896  0002C6                     l8646:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;src/print/my_print.c: 72:      strcpy(buffer, "%");
  2900  0002C6  0E8E               	movlw	low my_vsprintf@buffer
  2901  0002C8  6E08               	movwf	strcpy@dest^0,c
  2902  0002CA  0E01               	movlw	high my_vsprintf@buffer
  2903  0002CC  6E09               	movwf	(strcpy@dest+1)^0,c
  2904  0002CE  0EF0               	movlw	low (STR_13+29)
  2905  0002D0  6E0A               	movwf	strcpy@src^0,c
  2906  0002D2  0E7E               	movlw	high (STR_13+29)
  2907  0002D4  6E0B               	movwf	(strcpy@src+1)^0,c
  2908  0002D6  EC2E  F027         	call	_strcpy	;wreg free
  2909                           
  2910                           ;src/print/my_print.c: 73:      break;
  2911  0002DA  EFF9  F005         	goto	l8812
  2912  0002DE                     l8648:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;src/print/my_print.c: 75:      char_temp[0] = (*(char *)__va_arg(*(char **)valist, (cha
      +                          r)0));
  2916  0002DE  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  2917  0002E2  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  2918  0002E6  CFDF F0C0          	movff	indf2,??_my_vsprintf
  2919  0002EA  0E02               	movlw	2
  2920  0002EC  26DE               	addwf	postinc2,f,c
  2921  0002EE  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  2922  0002F2  0E00               	movlw	0
  2923  0002F4  22DD               	addwfc	postdec2,f,c
  2924  0002F6  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  2925  0002FA  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  2926  0002FE  50DF               	movf	indf2,w,c
  2927  000300  0101               	movlb	1	; () banked
  2928  000302  6F80               	movwf	my_vsprintf@char_temp& (0+255),b
  2929  000304                     
  2930                           ; BSR set to: 1
  2931                           ;src/print/my_print.c: 76:      strcpy(buffer, char_temp);
  2932  000304  0E8E               	movlw	low my_vsprintf@buffer
  2933  000306  6E08               	movwf	strcpy@dest^0,c
  2934  000308  0E01               	movlw	high my_vsprintf@buffer
  2935  00030A  6E09               	movwf	(strcpy@dest+1)^0,c
  2936  00030C  0E80               	movlw	low my_vsprintf@char_temp
  2937  00030E  6E0A               	movwf	strcpy@src^0,c
  2938  000310  0E01               	movlw	high my_vsprintf@char_temp
  2939  000312  6E0B               	movwf	(strcpy@src+1)^0,c
  2940  000314  EC2E  F027         	call	_strcpy	;wreg free
  2941                           
  2942                           ;src/print/my_print.c: 77:      break;
  2943  000318  EFF9  F005         	goto	l8812
  2944  00031C                     l8652:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;src/print/my_print.c: 79:      string_temp = (*(char * *)__va_arg(*(char * **)valist, (
      +                          char *)0));
  2948  00031C  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  2949  000320  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  2950  000324  CFDF F0C0          	movff	indf2,??_my_vsprintf
  2951  000328  0E02               	movlw	2
  2952  00032A  26DE               	addwf	postinc2,f,c
  2953  00032C  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  2954  000330  0E00               	movlw	0
  2955  000332  22DD               	addwfc	postdec2,f,c
  2956  000334  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  2957  000338  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  2958  00033C  CFDE F18C          	movff	postinc2,my_vsprintf@string_temp
  2959  000340  CFDD F18D          	movff	postdec2,my_vsprintf@string_temp+1
  2960  000344                     
  2961                           ; BSR set to: 0
  2962                           ;src/print/my_print.c: 80:      strcpy(buffer, string_temp);
  2963  000344  0E8E               	movlw	low my_vsprintf@buffer
  2964  000346  6E08               	movwf	strcpy@dest^0,c
  2965  000348  0E01               	movlw	high my_vsprintf@buffer
  2966  00034A  6E09               	movwf	(strcpy@dest+1)^0,c
  2967  00034C  C18C  F00A         	movff	my_vsprintf@string_temp,strcpy@src
  2968  000350  C18D  F00B         	movff	my_vsprintf@string_temp+1,strcpy@src+1
  2969  000354  EC2E  F027         	call	_strcpy	;wreg free
  2970  000358                     
  2971                           ;src/print/my_print.c: 81:      precS(buffer, &prec);
  2972  000358  0E8E               	movlw	low my_vsprintf@buffer
  2973  00035A  6E08               	movwf	precS@str^0,c
  2974  00035C  0E01               	movlw	high my_vsprintf@buffer
  2975  00035E  6E09               	movwf	(precS@str+1)^0,c
  2976  000360  0EE6               	movlw	low my_vsprintf@prec
  2977  000362  6E0A               	movwf	precS@precision^0,c
  2978  000364  0E01               	movlw	high my_vsprintf@prec
  2979  000366  6E0B               	movwf	(precS@precision+1)^0,c
  2980  000368  EC5C  F026         	call	_precS	;wreg free
  2981                           
  2982                           ;src/print/my_print.c: 82:      break;
  2983  00036C  EFF9  F005         	goto	l8812
  2984  000370                     l8658:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;src/print/my_print.c: 84:      int_temp = (*(int *)__va_arg(*(int **)valist, (int)0));
  2988  000370  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  2989  000374  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  2990  000378  CFDF F0C0          	movff	indf2,??_my_vsprintf
  2991  00037C  0E02               	movlw	2
  2992  00037E  26DE               	addwf	postinc2,f,c
  2993  000380  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  2994  000384  0E00               	movlw	0
  2995  000386  22DD               	addwfc	postdec2,f,c
  2996  000388  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  2997  00038C  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  2998  000390  CFDE F1DE          	movff	postinc2,my_vsprintf@int_temp
  2999  000394  CFDD F1DF          	movff	postdec2,my_vsprintf@int_temp+1
  3000  000398                     
  3001                           ; BSR set to: 0
  3002                           ;src/print/my_print.c: 85:      itoa(buffer, int_temp, 10);
  3003  000398  0E8E               	movlw	low my_vsprintf@buffer
  3004  00039A  6FA4               	movwf	itoa@str& (0+255),b
  3005  00039C  0E01               	movlw	high my_vsprintf@buffer
  3006  00039E  6FA5               	movwf	(itoa@str+1)& (0+255),b
  3007  0003A0  C1DE  F0A6         	movff	my_vsprintf@int_temp,itoa@num
  3008  0003A4  C1DF  F0A7         	movff	my_vsprintf@int_temp+1,itoa@num+1
  3009  0003A8  0E00               	movlw	0
  3010  0003AA  BFA7               	btfsc	(itoa@num+1)& (0+255),7,b
  3011  0003AC  0EFF               	movlw	-1
  3012  0003AE  6FA8               	movwf	(itoa@num+2)& (0+255),b
  3013  0003B0  6FA9               	movwf	(itoa@num+3)& (0+255),b
  3014  0003B2  0E00               	movlw	0
  3015  0003B4  6FAB               	movwf	(itoa@base_+1)& (0+255),b
  3016  0003B6  0E0A               	movlw	10
  3017  0003B8  6FAA               	movwf	itoa@base_& (0+255),b
  3018  0003BA  EC37  F01D         	call	_itoa	;wreg free
  3019  0003BE                     
  3020                           ;src/print/my_print.c: 86:      precI(buffer, &prec);
  3021  0003BE  0E8E               	movlw	low my_vsprintf@buffer
  3022  0003C0  6E08               	movwf	precI@str^0,c
  3023  0003C2  0E01               	movlw	high my_vsprintf@buffer
  3024  0003C4  6E09               	movwf	(precI@str+1)^0,c
  3025  0003C6  0EE6               	movlw	low my_vsprintf@prec
  3026  0003C8  6E0A               	movwf	precI@precision^0,c
  3027  0003CA  0E01               	movlw	high my_vsprintf@prec
  3028  0003CC  6E0B               	movwf	(precI@precision+1)^0,c
  3029  0003CE  ECF3  F01F         	call	_precI	;wreg free
  3030  0003D2                     
  3031                           ;src/print/my_print.c: 87:      addSig(buffer, (double)int_temp);
  3032  0003D2  0E8E               	movlw	low my_vsprintf@buffer
  3033  0003D4  6E1E               	movwf	addSig@numS^0,c
  3034  0003D6  0E01               	movlw	high my_vsprintf@buffer
  3035  0003D8  6E1F               	movwf	(addSig@numS+1)^0,c
  3036  0003DA  C1DE  F010         	movff	my_vsprintf@int_temp,___xxtofl@val
  3037  0003DE  C1DF  F011         	movff	my_vsprintf@int_temp+1,___xxtofl@val+1
  3038  0003E2  0E00               	movlw	0
  3039  0003E4  BE11               	btfsc	(___xxtofl@val+1)^0,7,c
  3040  0003E6  0EFF               	movlw	-1
  3041  0003E8  6E12               	movwf	(___xxtofl@val+2)^0,c
  3042  0003EA  6E13               	movwf	(___xxtofl@val+3)^0,c
  3043  0003EC  0E01               	movlw	1
  3044  0003EE  EC5D  F01C         	call	___xxtofl
  3045  0003F2  C010  F020         	movff	?___xxtofl,addSig@num
  3046  0003F6  C011  F021         	movff	?___xxtofl+1,addSig@num+1
  3047  0003FA  C012  F022         	movff	?___xxtofl+2,addSig@num+2
  3048  0003FE  C013  F023         	movff	?___xxtofl+3,addSig@num+3
  3049  000402  ECB6  F01E         	call	_addSig	;wreg free
  3050                           
  3051                           ;src/print/my_print.c: 88:      break;
  3052  000406  EFF9  F005         	goto	l8812
  3053  00040A                     l8666:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;src/print/my_print.c: 90:      int_temp = (*(int *)__va_arg(*(int **)valist, (int)0));
  3057  00040A  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3058  00040E  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3059  000412  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3060  000416  0E02               	movlw	2
  3061  000418  26DE               	addwf	postinc2,f,c
  3062  00041A  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3063  00041E  0E00               	movlw	0
  3064  000420  22DD               	addwfc	postdec2,f,c
  3065  000422  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3066  000426  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3067  00042A  CFDE F1DE          	movff	postinc2,my_vsprintf@int_temp
  3068  00042E  CFDD F1DF          	movff	postdec2,my_vsprintf@int_temp+1
  3069  000432                     
  3070                           ; BSR set to: 0
  3071                           ;src/print/my_print.c: 91:      itoa(buffer, int_temp, 10);
  3072  000432  0E8E               	movlw	low my_vsprintf@buffer
  3073  000434  6FA4               	movwf	itoa@str& (0+255),b
  3074  000436  0E01               	movlw	high my_vsprintf@buffer
  3075  000438  6FA5               	movwf	(itoa@str+1)& (0+255),b
  3076  00043A  C1DE  F0A6         	movff	my_vsprintf@int_temp,itoa@num
  3077  00043E  C1DF  F0A7         	movff	my_vsprintf@int_temp+1,itoa@num+1
  3078  000442  0E00               	movlw	0
  3079  000444  BFA7               	btfsc	(itoa@num+1)& (0+255),7,b
  3080  000446  0EFF               	movlw	-1
  3081  000448  6FA8               	movwf	(itoa@num+2)& (0+255),b
  3082  00044A  6FA9               	movwf	(itoa@num+3)& (0+255),b
  3083  00044C  0E00               	movlw	0
  3084  00044E  6FAB               	movwf	(itoa@base_+1)& (0+255),b
  3085  000450  0E0A               	movlw	10
  3086  000452  6FAA               	movwf	itoa@base_& (0+255),b
  3087  000454  EC37  F01D         	call	_itoa	;wreg free
  3088  000458                     
  3089                           ;src/print/my_print.c: 92:      precI(buffer, &prec);
  3090  000458  0E8E               	movlw	low my_vsprintf@buffer
  3091  00045A  6E08               	movwf	precI@str^0,c
  3092  00045C  0E01               	movlw	high my_vsprintf@buffer
  3093  00045E  6E09               	movwf	(precI@str+1)^0,c
  3094  000460  0EE6               	movlw	low my_vsprintf@prec
  3095  000462  6E0A               	movwf	precI@precision^0,c
  3096  000464  0E01               	movlw	high my_vsprintf@prec
  3097  000466  6E0B               	movwf	(precI@precision+1)^0,c
  3098  000468  ECF3  F01F         	call	_precI	;wreg free
  3099  00046C                     
  3100                           ;src/print/my_print.c: 93:      addSig(buffer, (double)int_temp);
  3101  00046C  0E8E               	movlw	low my_vsprintf@buffer
  3102  00046E  6E1E               	movwf	addSig@numS^0,c
  3103  000470  0E01               	movlw	high my_vsprintf@buffer
  3104  000472  6E1F               	movwf	(addSig@numS+1)^0,c
  3105  000474  C1DE  F010         	movff	my_vsprintf@int_temp,___xxtofl@val
  3106  000478  C1DF  F011         	movff	my_vsprintf@int_temp+1,___xxtofl@val+1
  3107  00047C  0E00               	movlw	0
  3108  00047E  BE11               	btfsc	(___xxtofl@val+1)^0,7,c
  3109  000480  0EFF               	movlw	-1
  3110  000482  6E12               	movwf	(___xxtofl@val+2)^0,c
  3111  000484  6E13               	movwf	(___xxtofl@val+3)^0,c
  3112  000486  0E01               	movlw	1
  3113  000488  EC5D  F01C         	call	___xxtofl
  3114  00048C  C010  F020         	movff	?___xxtofl,addSig@num
  3115  000490  C011  F021         	movff	?___xxtofl+1,addSig@num+1
  3116  000494  C012  F022         	movff	?___xxtofl+2,addSig@num+2
  3117  000498  C013  F023         	movff	?___xxtofl+3,addSig@num+3
  3118  00049C  ECB6  F01E         	call	_addSig	;wreg free
  3119                           
  3120                           ;src/print/my_print.c: 94:      break;
  3121  0004A0  EFF9  F005         	goto	l8812
  3122  0004A4                     l8674:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;src/print/my_print.c: 96:      uint_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  3126  0004A4  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3127  0004A8  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3128  0004AC  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3129  0004B0  0E02               	movlw	2
  3130  0004B2  26DE               	addwf	postinc2,f,c
  3131  0004B4  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3132  0004B8  0E00               	movlw	0
  3133  0004BA  22DD               	addwfc	postdec2,f,c
  3134  0004BC  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3135  0004C0  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3136  0004C4  CFDE F1D0          	movff	postinc2,my_vsprintf@uint_temp
  3137  0004C8  CFDD F1D1          	movff	postdec2,my_vsprintf@uint_temp+1
  3138  0004CC                     
  3139                           ; BSR set to: 0
  3140                           ;src/print/my_print.c: 97:      itoa(buffer, uint_temp, 10);
  3141  0004CC  0E8E               	movlw	low my_vsprintf@buffer
  3142  0004CE  6FA4               	movwf	itoa@str& (0+255),b
  3143  0004D0  0E01               	movlw	high my_vsprintf@buffer
  3144  0004D2  6FA5               	movwf	(itoa@str+1)& (0+255),b
  3145  0004D4  C1D0  F0A6         	movff	my_vsprintf@uint_temp,itoa@num
  3146  0004D8  C1D1  F0A7         	movff	my_vsprintf@uint_temp+1,itoa@num+1
  3147  0004DC  6BA8               	clrf	(itoa@num+2)& (0+255),b
  3148  0004DE  6BA9               	clrf	(itoa@num+3)& (0+255),b
  3149  0004E0  0E00               	movlw	0
  3150  0004E2  6FAB               	movwf	(itoa@base_+1)& (0+255),b
  3151  0004E4  0E0A               	movlw	10
  3152  0004E6  6FAA               	movwf	itoa@base_& (0+255),b
  3153  0004E8  EC37  F01D         	call	_itoa	;wreg free
  3154  0004EC                     
  3155                           ;src/print/my_print.c: 98:      precI(buffer, &prec);
  3156  0004EC  0E8E               	movlw	low my_vsprintf@buffer
  3157  0004EE  6E08               	movwf	precI@str^0,c
  3158  0004F0  0E01               	movlw	high my_vsprintf@buffer
  3159  0004F2  6E09               	movwf	(precI@str+1)^0,c
  3160  0004F4  0EE6               	movlw	low my_vsprintf@prec
  3161  0004F6  6E0A               	movwf	precI@precision^0,c
  3162  0004F8  0E01               	movlw	high my_vsprintf@prec
  3163  0004FA  6E0B               	movwf	(precI@precision+1)^0,c
  3164  0004FC  ECF3  F01F         	call	_precI	;wreg free
  3165                           
  3166                           ;src/print/my_print.c: 99:      break;
  3167  000500  EFF9  F005         	goto	l8812
  3168  000504                     l8680:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;src/print/my_print.c: 101:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  3172  000504  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3173  000508  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3174  00050C  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3175  000510  0E02               	movlw	2
  3176  000512  26DE               	addwf	postinc2,f,c
  3177  000514  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3178  000518  0E00               	movlw	0
  3179  00051A  22DD               	addwfc	postdec2,f,c
  3180  00051C  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3181  000520  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3182  000524  CFDE F1DE          	movff	postinc2,my_vsprintf@int_temp
  3183  000528  CFDD F1DF          	movff	postdec2,my_vsprintf@int_temp+1
  3184  00052C                     
  3185                           ; BSR set to: 0
  3186                           ;src/print/my_print.c: 102:      itoa(buffer, int_temp, 16);
  3187  00052C  0E8E               	movlw	low my_vsprintf@buffer
  3188  00052E  6FA4               	movwf	itoa@str& (0+255),b
  3189  000530  0E01               	movlw	high my_vsprintf@buffer
  3190  000532  6FA5               	movwf	(itoa@str+1)& (0+255),b
  3191  000534  C1DE  F0A6         	movff	my_vsprintf@int_temp,itoa@num
  3192  000538  C1DF  F0A7         	movff	my_vsprintf@int_temp+1,itoa@num+1
  3193  00053C  0E00               	movlw	0
  3194  00053E  BFA7               	btfsc	(itoa@num+1)& (0+255),7,b
  3195  000540  0EFF               	movlw	-1
  3196  000542  6FA8               	movwf	(itoa@num+2)& (0+255),b
  3197  000544  6FA9               	movwf	(itoa@num+3)& (0+255),b
  3198  000546  0E00               	movlw	0
  3199  000548  6FAB               	movwf	(itoa@base_+1)& (0+255),b
  3200  00054A  0E10               	movlw	16
  3201  00054C  6FAA               	movwf	itoa@base_& (0+255),b
  3202  00054E  EC37  F01D         	call	_itoa	;wreg free
  3203  000552                     
  3204                           ;src/print/my_print.c: 103:      precI(buffer, &prec);
  3205  000552  0E8E               	movlw	low my_vsprintf@buffer
  3206  000554  6E08               	movwf	precI@str^0,c
  3207  000556  0E01               	movlw	high my_vsprintf@buffer
  3208  000558  6E09               	movwf	(precI@str+1)^0,c
  3209  00055A  0EE6               	movlw	low my_vsprintf@prec
  3210  00055C  6E0A               	movwf	precI@precision^0,c
  3211  00055E  0E01               	movlw	high my_vsprintf@prec
  3212  000560  6E0B               	movwf	(precI@precision+1)^0,c
  3213  000562  ECF3  F01F         	call	_precI	;wreg free
  3214  000566                     
  3215                           ;src/print/my_print.c: 104:      addOx(buffer, int_temp,'x');
  3216  000566  0E8E               	movlw	low my_vsprintf@buffer
  3217  000568  6E08               	movwf	addOx@hoS^0,c
  3218  00056A  0E01               	movlw	high my_vsprintf@buffer
  3219  00056C  6E09               	movwf	(addOx@hoS+1)^0,c
  3220  00056E  C1DE  F00A         	movff	my_vsprintf@int_temp,addOx@num
  3221  000572  C1DF  F00B         	movff	my_vsprintf@int_temp+1,addOx@num+1
  3222  000576  0E78               	movlw	120
  3223  000578  6E0C               	movwf	addOx@type^0,c
  3224  00057A  ECFA  F01D         	call	_addOx	;wreg free
  3225  00057E                     l8688:
  3226                           
  3227                           ;src/print/my_print.c: 105:      upperCL(buffer);
  3228  00057E  0E8E               	movlw	low my_vsprintf@buffer
  3229  000580  6E08               	movwf	upperCL@str^0,c
  3230  000582  0E01               	movlw	high my_vsprintf@buffer
  3231  000584  6E09               	movwf	(upperCL@str+1)^0,c
  3232  000586  EC56  F025         	call	_upperCL	;wreg free
  3233                           
  3234                           ;src/print/my_print.c: 107:      break;
  3235  00058A  EFF9  F005         	goto	l8812
  3236  00058E                     l8690:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;src/print/my_print.c: 109:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  3240  00058E  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3241  000592  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3242  000596  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3243  00059A  0E02               	movlw	2
  3244  00059C  26DE               	addwf	postinc2,f,c
  3245  00059E  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3246  0005A2  0E00               	movlw	0
  3247  0005A4  22DD               	addwfc	postdec2,f,c
  3248  0005A6  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3249  0005AA  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3250  0005AE  CFDE F1DE          	movff	postinc2,my_vsprintf@int_temp
  3251  0005B2  CFDD F1DF          	movff	postdec2,my_vsprintf@int_temp+1
  3252  0005B6                     
  3253                           ; BSR set to: 0
  3254                           ;src/print/my_print.c: 110:      itoa(buffer, int_temp, 16);
  3255  0005B6  0E8E               	movlw	low my_vsprintf@buffer
  3256  0005B8  6FA4               	movwf	itoa@str& (0+255),b
  3257  0005BA  0E01               	movlw	high my_vsprintf@buffer
  3258  0005BC  6FA5               	movwf	(itoa@str+1)& (0+255),b
  3259  0005BE  C1DE  F0A6         	movff	my_vsprintf@int_temp,itoa@num
  3260  0005C2  C1DF  F0A7         	movff	my_vsprintf@int_temp+1,itoa@num+1
  3261  0005C6  0E00               	movlw	0
  3262  0005C8  BFA7               	btfsc	(itoa@num+1)& (0+255),7,b
  3263  0005CA  0EFF               	movlw	-1
  3264  0005CC  6FA8               	movwf	(itoa@num+2)& (0+255),b
  3265  0005CE  6FA9               	movwf	(itoa@num+3)& (0+255),b
  3266  0005D0  0E00               	movlw	0
  3267  0005D2  6FAB               	movwf	(itoa@base_+1)& (0+255),b
  3268  0005D4  0E10               	movlw	16
  3269  0005D6  6FAA               	movwf	itoa@base_& (0+255),b
  3270  0005D8  EC37  F01D         	call	_itoa	;wreg free
  3271  0005DC                     
  3272                           ;src/print/my_print.c: 111:      precI(buffer, &prec);
  3273  0005DC  0E8E               	movlw	low my_vsprintf@buffer
  3274  0005DE  6E08               	movwf	precI@str^0,c
  3275  0005E0  0E01               	movlw	high my_vsprintf@buffer
  3276  0005E2  6E09               	movwf	(precI@str+1)^0,c
  3277  0005E4  0EE6               	movlw	low my_vsprintf@prec
  3278  0005E6  6E0A               	movwf	precI@precision^0,c
  3279  0005E8  0E01               	movlw	high my_vsprintf@prec
  3280  0005EA  6E0B               	movwf	(precI@precision+1)^0,c
  3281  0005EC  ECF3  F01F         	call	_precI	;wreg free
  3282  0005F0                     
  3283                           ;src/print/my_print.c: 112:      addOx(buffer, int_temp,'x');
  3284  0005F0  0E8E               	movlw	low my_vsprintf@buffer
  3285  0005F2  6E08               	movwf	addOx@hoS^0,c
  3286  0005F4  0E01               	movlw	high my_vsprintf@buffer
  3287  0005F6  6E09               	movwf	(addOx@hoS+1)^0,c
  3288  0005F8  C1DE  F00A         	movff	my_vsprintf@int_temp,addOx@num
  3289  0005FC  C1DF  F00B         	movff	my_vsprintf@int_temp+1,addOx@num+1
  3290  000600  0E78               	movlw	120
  3291  000602  6E0C               	movwf	addOx@type^0,c
  3292  000604  ECFA  F01D         	call	_addOx	;wreg free
  3293                           
  3294                           ;src/print/my_print.c: 113:      break;
  3295  000608  EFF9  F005         	goto	l8812
  3296  00060C                     l8698:
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;src/print/my_print.c: 115:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  3300  00060C  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3301  000610  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3302  000614  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3303  000618  0E02               	movlw	2
  3304  00061A  26DE               	addwf	postinc2,f,c
  3305  00061C  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3306  000620  0E00               	movlw	0
  3307  000622  22DD               	addwfc	postdec2,f,c
  3308  000624  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3309  000628  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3310  00062C  CFDE F1DE          	movff	postinc2,my_vsprintf@int_temp
  3311  000630  CFDD F1DF          	movff	postdec2,my_vsprintf@int_temp+1
  3312  000634                     
  3313                           ; BSR set to: 0
  3314                           ;src/print/my_print.c: 116:      itoa(buffer, int_temp, 8);
  3315  000634  0E8E               	movlw	low my_vsprintf@buffer
  3316  000636  6FA4               	movwf	itoa@str& (0+255),b
  3317  000638  0E01               	movlw	high my_vsprintf@buffer
  3318  00063A  6FA5               	movwf	(itoa@str+1)& (0+255),b
  3319  00063C  C1DE  F0A6         	movff	my_vsprintf@int_temp,itoa@num
  3320  000640  C1DF  F0A7         	movff	my_vsprintf@int_temp+1,itoa@num+1
  3321  000644  0E00               	movlw	0
  3322  000646  BFA7               	btfsc	(itoa@num+1)& (0+255),7,b
  3323  000648  0EFF               	movlw	-1
  3324  00064A  6FA8               	movwf	(itoa@num+2)& (0+255),b
  3325  00064C  6FA9               	movwf	(itoa@num+3)& (0+255),b
  3326  00064E  0E00               	movlw	0
  3327  000650  6FAB               	movwf	(itoa@base_+1)& (0+255),b
  3328  000652  0E08               	movlw	8
  3329  000654  6FAA               	movwf	itoa@base_& (0+255),b
  3330  000656  EC37  F01D         	call	_itoa	;wreg free
  3331  00065A                     
  3332                           ;src/print/my_print.c: 117:      precI(buffer, &prec);
  3333  00065A  0E8E               	movlw	low my_vsprintf@buffer
  3334  00065C  6E08               	movwf	precI@str^0,c
  3335  00065E  0E01               	movlw	high my_vsprintf@buffer
  3336  000660  6E09               	movwf	(precI@str+1)^0,c
  3337  000662  0EE6               	movlw	low my_vsprintf@prec
  3338  000664  6E0A               	movwf	precI@precision^0,c
  3339  000666  0E01               	movlw	high my_vsprintf@prec
  3340  000668  6E0B               	movwf	(precI@precision+1)^0,c
  3341  00066A  ECF3  F01F         	call	_precI	;wreg free
  3342  00066E                     
  3343                           ;src/print/my_print.c: 118:      addOx(buffer, int_temp,'o');
  3344  00066E  0E8E               	movlw	low my_vsprintf@buffer
  3345  000670  6E08               	movwf	addOx@hoS^0,c
  3346  000672  0E01               	movlw	high my_vsprintf@buffer
  3347  000674  6E09               	movwf	(addOx@hoS+1)^0,c
  3348  000676  C1DE  F00A         	movff	my_vsprintf@int_temp,addOx@num
  3349  00067A  C1DF  F00B         	movff	my_vsprintf@int_temp+1,addOx@num+1
  3350  00067E  0E6F               	movlw	111
  3351  000680  6E0C               	movwf	addOx@type^0,c
  3352  000682  ECFA  F01D         	call	_addOx	;wreg free
  3353                           
  3354                           ;src/print/my_print.c: 119:      break;
  3355  000686  EFF9  F005         	goto	l8812
  3356  00068A                     l8706:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;src/print/my_print.c: 121:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  3360  00068A  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3361  00068E  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3362  000692  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3363  000696  0E04               	movlw	4
  3364  000698  26DE               	addwf	postinc2,f,c
  3365  00069A  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3366  00069E  0E00               	movlw	0
  3367  0006A0  22DD               	addwfc	postdec2,f,c
  3368  0006A2  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3369  0006A6  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3370  0006AA  CFDE F1E0          	movff	postinc2,my_vsprintf@double_temp
  3371  0006AE  CFDE F1E1          	movff	postinc2,my_vsprintf@double_temp+1
  3372  0006B2  CFDE F1E2          	movff	postinc2,my_vsprintf@double_temp+2
  3373  0006B6  CFDE F1E3          	movff	postinc2,my_vsprintf@double_temp+3
  3374  0006BA                     
  3375                           ; BSR set to: 0
  3376                           ;src/print/my_print.c: 122:      ftoa(buffer, double_temp);
  3377  0006BA  0E8E               	movlw	low my_vsprintf@buffer
  3378  0006BC  6F93               	movwf	ftoa@buffer& (0+255),b
  3379  0006BE  0E01               	movlw	high my_vsprintf@buffer
  3380  0006C0  6F94               	movwf	(ftoa@buffer+1)& (0+255),b
  3381  0006C2  C1E0  F095         	movff	my_vsprintf@double_temp,ftoa@value
  3382  0006C6  C1E1  F096         	movff	my_vsprintf@double_temp+1,ftoa@value+1
  3383  0006CA  C1E2  F097         	movff	my_vsprintf@double_temp+2,ftoa@value+2
  3384  0006CE  C1E3  F098         	movff	my_vsprintf@double_temp+3,ftoa@value+3
  3385  0006D2  EC1F  F011         	call	_ftoa	;wreg free
  3386  0006D6                     
  3387                           ;src/print/my_print.c: 123:      precF(buffer, &prec);
  3388  0006D6  0E8E               	movlw	low my_vsprintf@buffer
  3389  0006D8  6E1F               	movwf	precF@str^0,c
  3390  0006DA  0E01               	movlw	high my_vsprintf@buffer
  3391  0006DC  6E20               	movwf	(precF@str+1)^0,c
  3392  0006DE  0EE6               	movlw	low my_vsprintf@prec
  3393  0006E0  6E21               	movwf	precF@precision^0,c
  3394  0006E2  0E01               	movlw	high my_vsprintf@prec
  3395  0006E4  6E22               	movwf	(precF@precision+1)^0,c
  3396  0006E6  EC76  F01B         	call	_precF	;wreg free
  3397  0006EA                     l8712:
  3398                           
  3399                           ;src/print/my_print.c: 124:      addSig(buffer, double_temp);
  3400  0006EA  0E8E               	movlw	low my_vsprintf@buffer
  3401  0006EC  6E1E               	movwf	addSig@numS^0,c
  3402  0006EE  0E01               	movlw	high my_vsprintf@buffer
  3403  0006F0  6E1F               	movwf	(addSig@numS+1)^0,c
  3404  0006F2  C1E0  F020         	movff	my_vsprintf@double_temp,addSig@num
  3405  0006F6  C1E1  F021         	movff	my_vsprintf@double_temp+1,addSig@num+1
  3406  0006FA  C1E2  F022         	movff	my_vsprintf@double_temp+2,addSig@num+2
  3407  0006FE  C1E3  F023         	movff	my_vsprintf@double_temp+3,addSig@num+3
  3408  000702  ECB6  F01E         	call	_addSig	;wreg free
  3409                           
  3410                           ;src/print/my_print.c: 125:      break;
  3411  000706  EFF9  F005         	goto	l8812
  3412  00070A                     l8714:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;src/print/my_print.c: 127:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  3416  00070A  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3417  00070E  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3418  000712  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3419  000716  0E04               	movlw	4
  3420  000718  26DE               	addwf	postinc2,f,c
  3421  00071A  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3422  00071E  0E00               	movlw	0
  3423  000720  22DD               	addwfc	postdec2,f,c
  3424  000722  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3425  000726  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3426  00072A  CFDE F1E0          	movff	postinc2,my_vsprintf@double_temp
  3427  00072E  CFDE F1E1          	movff	postinc2,my_vsprintf@double_temp+1
  3428  000732  CFDE F1E2          	movff	postinc2,my_vsprintf@double_temp+2
  3429  000736  CFDE F1E3          	movff	postinc2,my_vsprintf@double_temp+3
  3430  00073A                     
  3431                           ; BSR set to: 0
  3432                           ;src/print/my_print.c: 128:      ftoa_sci(buffer, double_temp);
  3433  00073A  0E8E               	movlw	low my_vsprintf@buffer
  3434  00073C  6FAC               	movwf	ftoa_sci@buffer& (0+255),b
  3435  00073E  0E01               	movlw	high my_vsprintf@buffer
  3436  000740  6FAD               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3437  000742  C1E0  F0AE         	movff	my_vsprintf@double_temp,ftoa_sci@value
  3438  000746  C1E1  F0AF         	movff	my_vsprintf@double_temp+1,ftoa_sci@value+1
  3439  00074A  C1E2  F0B0         	movff	my_vsprintf@double_temp+2,ftoa_sci@value+2
  3440  00074E  C1E3  F0B1         	movff	my_vsprintf@double_temp+3,ftoa_sci@value+3
  3441  000752  EC3B  F014         	call	_ftoa_sci	;wreg free
  3442  000756                     
  3443                           ;src/print/my_print.c: 129:      precE(buffer, &prec);
  3444  000756  0E8E               	movlw	low my_vsprintf@buffer
  3445  000758  6E1F               	movwf	precE@str^0,c
  3446  00075A  0E01               	movlw	high my_vsprintf@buffer
  3447  00075C  6E20               	movwf	(precE@str+1)^0,c
  3448  00075E  0EE6               	movlw	low my_vsprintf@prec
  3449  000760  6E21               	movwf	precE@precision^0,c
  3450  000762  0E01               	movlw	high my_vsprintf@prec
  3451  000764  6E22               	movwf	(precE@precision+1)^0,c
  3452  000766  EC71  F01A         	call	_precE	;wreg free
  3453  00076A  EF75  F003         	goto	l8712
  3454  00076E                     l8722:
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;src/print/my_print.c: 133:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  3458  00076E  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3459  000772  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3460  000776  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3461  00077A  0E04               	movlw	4
  3462  00077C  26DE               	addwf	postinc2,f,c
  3463  00077E  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3464  000782  0E00               	movlw	0
  3465  000784  22DD               	addwfc	postdec2,f,c
  3466  000786  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3467  00078A  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3468  00078E  CFDE F1E0          	movff	postinc2,my_vsprintf@double_temp
  3469  000792  CFDE F1E1          	movff	postinc2,my_vsprintf@double_temp+1
  3470  000796  CFDE F1E2          	movff	postinc2,my_vsprintf@double_temp+2
  3471  00079A  CFDE F1E3          	movff	postinc2,my_vsprintf@double_temp+3
  3472  00079E                     
  3473                           ; BSR set to: 0
  3474                           ;src/print/my_print.c: 134:      ftoa_sci(buffer, double_temp);
  3475  00079E  0E8E               	movlw	low my_vsprintf@buffer
  3476  0007A0  6FAC               	movwf	ftoa_sci@buffer& (0+255),b
  3477  0007A2  0E01               	movlw	high my_vsprintf@buffer
  3478  0007A4  6FAD               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3479  0007A6  C1E0  F0AE         	movff	my_vsprintf@double_temp,ftoa_sci@value
  3480  0007AA  C1E1  F0AF         	movff	my_vsprintf@double_temp+1,ftoa_sci@value+1
  3481  0007AE  C1E2  F0B0         	movff	my_vsprintf@double_temp+2,ftoa_sci@value+2
  3482  0007B2  C1E3  F0B1         	movff	my_vsprintf@double_temp+3,ftoa_sci@value+3
  3483  0007B6  EC3B  F014         	call	_ftoa_sci	;wreg free
  3484  0007BA                     
  3485                           ;src/print/my_print.c: 135:      precE(buffer, &prec);
  3486  0007BA  0E8E               	movlw	low my_vsprintf@buffer
  3487  0007BC  6E1F               	movwf	precE@str^0,c
  3488  0007BE  0E01               	movlw	high my_vsprintf@buffer
  3489  0007C0  6E20               	movwf	(precE@str+1)^0,c
  3490  0007C2  0EE6               	movlw	low my_vsprintf@prec
  3491  0007C4  6E21               	movwf	precE@precision^0,c
  3492  0007C6  0E01               	movlw	high my_vsprintf@prec
  3493  0007C8  6E22               	movwf	(precE@precision+1)^0,c
  3494  0007CA  EC71  F01A         	call	_precE	;wreg free
  3495  0007CE                     l8728:
  3496                           
  3497                           ;src/print/my_print.c: 136:      addSig(buffer, double_temp);
  3498  0007CE  0E8E               	movlw	low my_vsprintf@buffer
  3499  0007D0  6E1E               	movwf	addSig@numS^0,c
  3500  0007D2  0E01               	movlw	high my_vsprintf@buffer
  3501  0007D4  6E1F               	movwf	(addSig@numS+1)^0,c
  3502  0007D6  C1E0  F020         	movff	my_vsprintf@double_temp,addSig@num
  3503  0007DA  C1E1  F021         	movff	my_vsprintf@double_temp+1,addSig@num+1
  3504  0007DE  C1E2  F022         	movff	my_vsprintf@double_temp+2,addSig@num+2
  3505  0007E2  C1E3  F023         	movff	my_vsprintf@double_temp+3,addSig@num+3
  3506  0007E6  ECB6  F01E         	call	_addSig	;wreg free
  3507  0007EA  EFBF  F002         	goto	l8688
  3508  0007EE                     l8732:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;src/print/my_print.c: 140:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  3512  0007EE  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3513  0007F2  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3514  0007F6  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3515  0007FA  0E04               	movlw	4
  3516  0007FC  26DE               	addwf	postinc2,f,c
  3517  0007FE  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3518  000802  0E00               	movlw	0
  3519  000804  22DD               	addwfc	postdec2,f,c
  3520  000806  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3521  00080A  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3522  00080E  CFDE F1E0          	movff	postinc2,my_vsprintf@double_temp
  3523  000812  CFDE F1E1          	movff	postinc2,my_vsprintf@double_temp+1
  3524  000816  CFDE F1E2          	movff	postinc2,my_vsprintf@double_temp+2
  3525  00081A  CFDE F1E3          	movff	postinc2,my_vsprintf@double_temp+3
  3526  00081E                     
  3527                           ; BSR set to: 0
  3528                           ;src/print/my_print.c: 141:      expA = ftoa_sci(buffer, double_temp);
  3529  00081E  0E8E               	movlw	low my_vsprintf@buffer
  3530  000820  6FAC               	movwf	ftoa_sci@buffer& (0+255),b
  3531  000822  0E01               	movlw	high my_vsprintf@buffer
  3532  000824  6FAD               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3533  000826  C1E0  F0AE         	movff	my_vsprintf@double_temp,ftoa_sci@value
  3534  00082A  C1E1  F0AF         	movff	my_vsprintf@double_temp+1,ftoa_sci@value+1
  3535  00082E  C1E2  F0B0         	movff	my_vsprintf@double_temp+2,ftoa_sci@value+2
  3536  000832  C1E3  F0B1         	movff	my_vsprintf@double_temp+3,ftoa_sci@value+3
  3537  000836  EC3B  F014         	call	_ftoa_sci	;wreg free
  3538  00083A  C0AC  F1D4         	movff	?_ftoa_sci,my_vsprintf@expA
  3539  00083E  C0AD  F1D5         	movff	?_ftoa_sci+1,my_vsprintf@expA+1
  3540  000842                     
  3541                           ;src/print/my_print.c: 142:      ftoa(buffer, double_temp);
  3542  000842  0E8E               	movlw	low my_vsprintf@buffer
  3543  000844  0100               	movlb	0	; () banked
  3544  000846  6F93               	movwf	ftoa@buffer& (0+255),b
  3545  000848  0E01               	movlw	high my_vsprintf@buffer
  3546  00084A  6F94               	movwf	(ftoa@buffer+1)& (0+255),b
  3547  00084C  C1E0  F095         	movff	my_vsprintf@double_temp,ftoa@value
  3548  000850  C1E1  F096         	movff	my_vsprintf@double_temp+1,ftoa@value+1
  3549  000854  C1E2  F097         	movff	my_vsprintf@double_temp+2,ftoa@value+2
  3550  000858  C1E3  F098         	movff	my_vsprintf@double_temp+3,ftoa@value+3
  3551  00085C  EC1F  F011         	call	_ftoa	;wreg free
  3552  000860                     
  3553                           ;src/print/my_print.c: 143:      j=0;
  3554  000860  0E00               	movlw	0
  3555  000862  0101               	movlb	1	; () banked
  3556  000864  6FDD               	movwf	(my_vsprintf@j+1)& (0+255),b
  3557  000866  0E00               	movlw	0
  3558  000868  6FDC               	movwf	my_vsprintf@j& (0+255),b
  3559  00086A                     
  3560                           ; BSR set to: 1
  3561                           ;src/print/my_print.c: 144:      for (i=0;i<strlen(buffer);i++)
  3562  00086A  0E00               	movlw	0
  3563  00086C  6FE5               	movwf	(my_vsprintf@i+1)& (0+255),b
  3564  00086E  0E00               	movlw	0
  3565  000870  6FE4               	movwf	my_vsprintf@i& (0+255),b
  3566  000872  EF6C  F004         	goto	l8752
  3567  000876                     l8742:
  3568                           
  3569                           ; BSR set to: 1
  3570                           ;src/print/my_print.c: 145:      {;src/print/my_print.c: 146:       if (buffer[i]=='.')
  3571  000876  0E8E               	movlw	low my_vsprintf@buffer
  3572  000878  25E4               	addwf	my_vsprintf@i& (0+255),w,b
  3573  00087A  6ED9               	movwf	fsr2l,c
  3574  00087C  0E01               	movlw	high my_vsprintf@buffer
  3575  00087E  21E5               	addwfc	(my_vsprintf@i+1)& (0+255),w,b
  3576  000880  6EDA               	movwf	fsr2h,c
  3577  000882  0E2E               	movlw	46
  3578  000884  18DE               	xorwf	postinc2,w,c
  3579  000886  A4D8               	btfss	status,2,c
  3580  000888  EF48  F004         	goto	u10181
  3581  00088C  EF4A  F004         	goto	u10180
  3582  000890                     u10181:
  3583  000890  EF4C  F004         	goto	l8746
  3584  000894                     u10180:
  3585  000894  EF7E  F004         	goto	l8754
  3586  000898                     l8746:
  3587                           
  3588                           ; BSR set to: 1
  3589                           ;src/print/my_print.c: 149:       if (buffer[i]>=48 && buffer[i]<=57)
  3590  000898  0E8E               	movlw	low my_vsprintf@buffer
  3591  00089A  25E4               	addwf	my_vsprintf@i& (0+255),w,b
  3592  00089C  6ED9               	movwf	fsr2l,c
  3593  00089E  0E01               	movlw	high my_vsprintf@buffer
  3594  0008A0  21E5               	addwfc	(my_vsprintf@i+1)& (0+255),w,b
  3595  0008A2  6EDA               	movwf	fsr2h,c
  3596  0008A4  0E2F               	movlw	47
  3597  0008A6  64DF               	cpfsgt	indf2,c
  3598  0008A8  EF58  F004         	goto	u10191
  3599  0008AC  EF5A  F004         	goto	u10190
  3600  0008B0                     u10191:
  3601  0008B0  EF6A  F004         	goto	l726
  3602  0008B4                     u10190:
  3603  0008B4                     
  3604                           ; BSR set to: 1
  3605  0008B4  0E8E               	movlw	low my_vsprintf@buffer
  3606  0008B6  25E4               	addwf	my_vsprintf@i& (0+255),w,b
  3607  0008B8  6ED9               	movwf	fsr2l,c
  3608  0008BA  0E01               	movlw	high my_vsprintf@buffer
  3609  0008BC  21E5               	addwfc	(my_vsprintf@i+1)& (0+255),w,b
  3610  0008BE  6EDA               	movwf	fsr2h,c
  3611  0008C0  0E3A               	movlw	58
  3612  0008C2  60DF               	cpfslt	indf2,c
  3613  0008C4  EF66  F004         	goto	u10201
  3614  0008C8  EF68  F004         	goto	u10200
  3615  0008CC                     u10201:
  3616  0008CC  EF6A  F004         	goto	l726
  3617  0008D0                     u10200:
  3618  0008D0                     
  3619                           ; BSR set to: 1
  3620                           ;src/print/my_print.c: 150:        j++;
  3621  0008D0  4BDC               	infsnz	my_vsprintf@j& (0+255),f,b
  3622  0008D2  2BDD               	incf	(my_vsprintf@j+1)& (0+255),f,b
  3623  0008D4                     l726:
  3624                           
  3625                           ; BSR set to: 1
  3626                           ;src/print/my_print.c: 151:      }
  3627  0008D4  4BE4               	infsnz	my_vsprintf@i& (0+255),f,b
  3628  0008D6  2BE5               	incf	(my_vsprintf@i+1)& (0+255),f,b
  3629  0008D8                     l8752:
  3630                           
  3631                           ; BSR set to: 1
  3632  0008D8  0E8E               	movlw	low my_vsprintf@buffer
  3633  0008DA  6E04               	movwf	strlen@s^0,c
  3634  0008DC  0E01               	movlw	high my_vsprintf@buffer
  3635  0008DE  6E05               	movwf	(strlen@s+1)^0,c
  3636  0008E0  EC7E  F029         	call	_strlen	;wreg free
  3637  0008E4  5004               	movf	?_strlen^0,w,c
  3638  0008E6  0101               	movlb	1	; () banked
  3639  0008E8  5DE4               	subwf	my_vsprintf@i& (0+255),w,b
  3640  0008EA  5005               	movf	(?_strlen+1)^0,w,c
  3641  0008EC  59E5               	subwfb	(my_vsprintf@i+1)& (0+255),w,b
  3642  0008EE  A0D8               	btfss	status,0,c
  3643  0008F0  EF7C  F004         	goto	u10211
  3644  0008F4  EF7E  F004         	goto	u10210
  3645  0008F8                     u10211:
  3646  0008F8  EF3B  F004         	goto	l8742
  3647  0008FC                     u10210:
  3648  0008FC                     l8754:
  3649                           
  3650                           ; BSR set to: 1
  3651                           ;src/print/my_print.c: 152:      if (prec == -1)
  3652  0008FC  29E6               	incf	my_vsprintf@prec& (0+255),w,b
  3653  0008FE  E106               	bnz	u10221
  3654  000900  29E7               	incf	(my_vsprintf@prec+1)& (0+255),w,b
  3655  000902  A4D8               	btfss	status,2,c
  3656  000904  EF86  F004         	goto	u10221
  3657  000908  EF88  F004         	goto	u10220
  3658  00090C                     u10221:
  3659  00090C  EF8C  F004         	goto	l8758
  3660  000910                     u10220:
  3661  000910                     
  3662                           ; BSR set to: 1
  3663                           ;src/print/my_print.c: 153:       prec = 6;
  3664  000910  0E00               	movlw	0
  3665  000912  6FE7               	movwf	(my_vsprintf@prec+1)& (0+255),b
  3666  000914  0E06               	movlw	6
  3667  000916  6FE6               	movwf	my_vsprintf@prec& (0+255),b
  3668  000918                     l8758:
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;src/print/my_print.c: 154:      if (expA <= -4 || j > prec)
  3672  000918  AFD5               	btfss	(my_vsprintf@expA+1)& (0+255),7,b
  3673  00091A  EF9A  F004         	goto	u10230
  3674  00091E  0EFD               	movlw	253
  3675  000920  5DD4               	subwf	my_vsprintf@expA& (0+255),w,b
  3676  000922  0EFF               	movlw	255
  3677  000924  59D5               	subwfb	(my_vsprintf@expA+1)& (0+255),w,b
  3678  000926  A0D8               	btfss	status,0,c
  3679  000928  EF98  F004         	goto	u10231
  3680  00092C  EF9A  F004         	goto	u10230
  3681  000930                     u10231:
  3682  000930  EFAC  F004         	goto	l8762
  3683  000934                     u10230:
  3684  000934                     
  3685                           ; BSR set to: 1
  3686  000934  51DC               	movf	my_vsprintf@j& (0+255),w,b
  3687  000936  5DE6               	subwf	my_vsprintf@prec& (0+255),w,b
  3688  000938  51E7               	movf	(my_vsprintf@prec+1)& (0+255),w,b
  3689  00093A  0A80               	xorlw	128
  3690  00093C  0100               	movlb	0	; () banked
  3691  00093E  6FC0               	movwf	??_my_vsprintf& (0+255),b
  3692  000940  0101               	movlb	1	; () banked
  3693  000942  51DD               	movf	(my_vsprintf@j+1)& (0+255),w,b
  3694  000944  0A80               	xorlw	128
  3695  000946  0100               	movlb	0	; () banked
  3696  000948  59C0               	subwfb	??_my_vsprintf& (0+255),w,b
  3697  00094A  B0D8               	btfsc	status,0,c
  3698  00094C  EFAA  F004         	goto	u10241
  3699  000950  EFAC  F004         	goto	u10240
  3700  000954                     u10241:
  3701  000954  EFBB  F004         	goto	l8764
  3702  000958                     u10240:
  3703  000958                     l8762:
  3704                           
  3705                           ;src/print/my_print.c: 155:       ftoa_sci(buffer, double_temp);
  3706  000958  0E8E               	movlw	low my_vsprintf@buffer
  3707  00095A  0100               	movlb	0	; () banked
  3708  00095C  6FAC               	movwf	ftoa_sci@buffer& (0+255),b
  3709  00095E  0E01               	movlw	high my_vsprintf@buffer
  3710  000960  6FAD               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3711  000962  C1E0  F0AE         	movff	my_vsprintf@double_temp,ftoa_sci@value
  3712  000966  C1E1  F0AF         	movff	my_vsprintf@double_temp+1,ftoa_sci@value+1
  3713  00096A  C1E2  F0B0         	movff	my_vsprintf@double_temp+2,ftoa_sci@value+2
  3714  00096E  C1E3  F0B1         	movff	my_vsprintf@double_temp+3,ftoa_sci@value+3
  3715  000972  EC3B  F014         	call	_ftoa_sci	;wreg free
  3716  000976                     l8764:
  3717                           
  3718                           ;src/print/my_print.c: 156:      precG(buffer, &prec);
  3719  000976  0E8E               	movlw	low my_vsprintf@buffer
  3720  000978  6E1F               	movwf	precG@str^0,c
  3721  00097A  0E01               	movlw	high my_vsprintf@buffer
  3722  00097C  6E20               	movwf	(precG@str+1)^0,c
  3723  00097E  0EE6               	movlw	low my_vsprintf@prec
  3724  000980  6E21               	movwf	precG@precision^0,c
  3725  000982  0E01               	movlw	high my_vsprintf@prec
  3726  000984  6E22               	movwf	(precG@precision+1)^0,c
  3727  000986  EC57  F006         	call	_precG	;wreg free
  3728  00098A  EF75  F003         	goto	l8712
  3729  00098E                     l8768:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;src/print/my_print.c: 160:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  3733  00098E  C0BE  FFD9         	movff	my_vsprintf@valist,fsr2l
  3734  000992  C0BF  FFDA         	movff	my_vsprintf@valist+1,fsr2h
  3735  000996  CFDF F0C0          	movff	indf2,??_my_vsprintf
  3736  00099A  0E04               	movlw	4
  3737  00099C  26DE               	addwf	postinc2,f,c
  3738  00099E  CFDF F0C1          	movff	indf2,??_my_vsprintf+1
  3739  0009A2  0E00               	movlw	0
  3740  0009A4  22DD               	addwfc	postdec2,f,c
  3741  0009A6  C0C0  FFD9         	movff	??_my_vsprintf,fsr2l
  3742  0009AA  C0C1  FFDA         	movff	??_my_vsprintf+1,fsr2h
  3743  0009AE  CFDE F1E0          	movff	postinc2,my_vsprintf@double_temp
  3744  0009B2  CFDE F1E1          	movff	postinc2,my_vsprintf@double_temp+1
  3745  0009B6  CFDE F1E2          	movff	postinc2,my_vsprintf@double_temp+2
  3746  0009BA  CFDE F1E3          	movff	postinc2,my_vsprintf@double_temp+3
  3747  0009BE                     
  3748                           ; BSR set to: 0
  3749                           ;src/print/my_print.c: 161:      expA = ftoa_sci(buffer, double_temp);
  3750  0009BE  0E8E               	movlw	low my_vsprintf@buffer
  3751  0009C0  6FAC               	movwf	ftoa_sci@buffer& (0+255),b
  3752  0009C2  0E01               	movlw	high my_vsprintf@buffer
  3753  0009C4  6FAD               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3754  0009C6  C1E0  F0AE         	movff	my_vsprintf@double_temp,ftoa_sci@value
  3755  0009CA  C1E1  F0AF         	movff	my_vsprintf@double_temp+1,ftoa_sci@value+1
  3756  0009CE  C1E2  F0B0         	movff	my_vsprintf@double_temp+2,ftoa_sci@value+2
  3757  0009D2  C1E3  F0B1         	movff	my_vsprintf@double_temp+3,ftoa_sci@value+3
  3758  0009D6  EC3B  F014         	call	_ftoa_sci	;wreg free
  3759  0009DA  C0AC  F1D4         	movff	?_ftoa_sci,my_vsprintf@expA
  3760  0009DE  C0AD  F1D5         	movff	?_ftoa_sci+1,my_vsprintf@expA+1
  3761  0009E2                     
  3762                           ;src/print/my_print.c: 162:      ftoa(buffer, double_temp);
  3763  0009E2  0E8E               	movlw	low my_vsprintf@buffer
  3764  0009E4  0100               	movlb	0	; () banked
  3765  0009E6  6F93               	movwf	ftoa@buffer& (0+255),b
  3766  0009E8  0E01               	movlw	high my_vsprintf@buffer
  3767  0009EA  6F94               	movwf	(ftoa@buffer+1)& (0+255),b
  3768  0009EC  C1E0  F095         	movff	my_vsprintf@double_temp,ftoa@value
  3769  0009F0  C1E1  F096         	movff	my_vsprintf@double_temp+1,ftoa@value+1
  3770  0009F4  C1E2  F097         	movff	my_vsprintf@double_temp+2,ftoa@value+2
  3771  0009F8  C1E3  F098         	movff	my_vsprintf@double_temp+3,ftoa@value+3
  3772  0009FC  EC1F  F011         	call	_ftoa	;wreg free
  3773  000A00                     
  3774                           ;src/print/my_print.c: 163:      j=0;
  3775  000A00  0E00               	movlw	0
  3776  000A02  0101               	movlb	1	; () banked
  3777  000A04  6FDD               	movwf	(my_vsprintf@j+1)& (0+255),b
  3778  000A06  0E00               	movlw	0
  3779  000A08  6FDC               	movwf	my_vsprintf@j& (0+255),b
  3780  000A0A                     
  3781                           ; BSR set to: 1
  3782                           ;src/print/my_print.c: 164:      for (i=0;i<strlen(buffer);i++)
  3783  000A0A  0E00               	movlw	0
  3784  000A0C  6FE5               	movwf	(my_vsprintf@i+1)& (0+255),b
  3785  000A0E  0E00               	movlw	0
  3786  000A10  6FE4               	movwf	my_vsprintf@i& (0+255),b
  3787  000A12  EF3C  F005         	goto	l8788
  3788  000A16                     l8778:
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;src/print/my_print.c: 165:      {;src/print/my_print.c: 166:       if (buffer[i]=='.')
  3792  000A16  0E8E               	movlw	low my_vsprintf@buffer
  3793  000A18  25E4               	addwf	my_vsprintf@i& (0+255),w,b
  3794  000A1A  6ED9               	movwf	fsr2l,c
  3795  000A1C  0E01               	movlw	high my_vsprintf@buffer
  3796  000A1E  21E5               	addwfc	(my_vsprintf@i+1)& (0+255),w,b
  3797  000A20  6EDA               	movwf	fsr2h,c
  3798  000A22  0E2E               	movlw	46
  3799  000A24  18DE               	xorwf	postinc2,w,c
  3800  000A26  A4D8               	btfss	status,2,c
  3801  000A28  EF18  F005         	goto	u10251
  3802  000A2C  EF1A  F005         	goto	u10250
  3803  000A30                     u10251:
  3804  000A30  EF1C  F005         	goto	l8782
  3805  000A34                     u10250:
  3806  000A34  EF4E  F005         	goto	l8790
  3807  000A38                     l8782:
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;src/print/my_print.c: 169:       if (buffer[i]>=48 && buffer[i]<=57)
  3811  000A38  0E8E               	movlw	low my_vsprintf@buffer
  3812  000A3A  25E4               	addwf	my_vsprintf@i& (0+255),w,b
  3813  000A3C  6ED9               	movwf	fsr2l,c
  3814  000A3E  0E01               	movlw	high my_vsprintf@buffer
  3815  000A40  21E5               	addwfc	(my_vsprintf@i+1)& (0+255),w,b
  3816  000A42  6EDA               	movwf	fsr2h,c
  3817  000A44  0E2F               	movlw	47
  3818  000A46  64DF               	cpfsgt	indf2,c
  3819  000A48  EF28  F005         	goto	u10261
  3820  000A4C  EF2A  F005         	goto	u10260
  3821  000A50                     u10261:
  3822  000A50  EF3A  F005         	goto	l736
  3823  000A54                     u10260:
  3824  000A54                     
  3825                           ; BSR set to: 1
  3826  000A54  0E8E               	movlw	low my_vsprintf@buffer
  3827  000A56  25E4               	addwf	my_vsprintf@i& (0+255),w,b
  3828  000A58  6ED9               	movwf	fsr2l,c
  3829  000A5A  0E01               	movlw	high my_vsprintf@buffer
  3830  000A5C  21E5               	addwfc	(my_vsprintf@i+1)& (0+255),w,b
  3831  000A5E  6EDA               	movwf	fsr2h,c
  3832  000A60  0E3A               	movlw	58
  3833  000A62  60DF               	cpfslt	indf2,c
  3834  000A64  EF36  F005         	goto	u10271
  3835  000A68  EF38  F005         	goto	u10270
  3836  000A6C                     u10271:
  3837  000A6C  EF3A  F005         	goto	l736
  3838  000A70                     u10270:
  3839  000A70                     
  3840                           ; BSR set to: 1
  3841                           ;src/print/my_print.c: 170:        j++;
  3842  000A70  4BDC               	infsnz	my_vsprintf@j& (0+255),f,b
  3843  000A72  2BDD               	incf	(my_vsprintf@j+1)& (0+255),f,b
  3844  000A74                     l736:
  3845                           
  3846                           ; BSR set to: 1
  3847                           ;src/print/my_print.c: 171:      }
  3848  000A74  4BE4               	infsnz	my_vsprintf@i& (0+255),f,b
  3849  000A76  2BE5               	incf	(my_vsprintf@i+1)& (0+255),f,b
  3850  000A78                     l8788:
  3851                           
  3852                           ; BSR set to: 1
  3853  000A78  0E8E               	movlw	low my_vsprintf@buffer
  3854  000A7A  6E04               	movwf	strlen@s^0,c
  3855  000A7C  0E01               	movlw	high my_vsprintf@buffer
  3856  000A7E  6E05               	movwf	(strlen@s+1)^0,c
  3857  000A80  EC7E  F029         	call	_strlen	;wreg free
  3858  000A84  5004               	movf	?_strlen^0,w,c
  3859  000A86  0101               	movlb	1	; () banked
  3860  000A88  5DE4               	subwf	my_vsprintf@i& (0+255),w,b
  3861  000A8A  5005               	movf	(?_strlen+1)^0,w,c
  3862  000A8C  59E5               	subwfb	(my_vsprintf@i+1)& (0+255),w,b
  3863  000A8E  A0D8               	btfss	status,0,c
  3864  000A90  EF4C  F005         	goto	u10281
  3865  000A94  EF4E  F005         	goto	u10280
  3866  000A98                     u10281:
  3867  000A98  EF0B  F005         	goto	l8778
  3868  000A9C                     u10280:
  3869  000A9C                     l8790:
  3870                           
  3871                           ; BSR set to: 1
  3872                           ;src/print/my_print.c: 172:      if (prec == -1)
  3873  000A9C  29E6               	incf	my_vsprintf@prec& (0+255),w,b
  3874  000A9E  E106               	bnz	u10291
  3875  000AA0  29E7               	incf	(my_vsprintf@prec+1)& (0+255),w,b
  3876  000AA2  A4D8               	btfss	status,2,c
  3877  000AA4  EF56  F005         	goto	u10291
  3878  000AA8  EF58  F005         	goto	u10290
  3879  000AAC                     u10291:
  3880  000AAC  EF5C  F005         	goto	l8794
  3881  000AB0                     u10290:
  3882  000AB0                     
  3883                           ; BSR set to: 1
  3884                           ;src/print/my_print.c: 173:       prec = 6;
  3885  000AB0  0E00               	movlw	0
  3886  000AB2  6FE7               	movwf	(my_vsprintf@prec+1)& (0+255),b
  3887  000AB4  0E06               	movlw	6
  3888  000AB6  6FE6               	movwf	my_vsprintf@prec& (0+255),b
  3889  000AB8                     l8794:
  3890                           
  3891                           ; BSR set to: 1
  3892                           ;src/print/my_print.c: 174:      if (expA <= -4 || j > prec)
  3893  000AB8  AFD5               	btfss	(my_vsprintf@expA+1)& (0+255),7,b
  3894  000ABA  EF6A  F005         	goto	u10300
  3895  000ABE  0EFD               	movlw	253
  3896  000AC0  5DD4               	subwf	my_vsprintf@expA& (0+255),w,b
  3897  000AC2  0EFF               	movlw	255
  3898  000AC4  59D5               	subwfb	(my_vsprintf@expA+1)& (0+255),w,b
  3899  000AC6  A0D8               	btfss	status,0,c
  3900  000AC8  EF68  F005         	goto	u10301
  3901  000ACC  EF6A  F005         	goto	u10300
  3902  000AD0                     u10301:
  3903  000AD0  EF7C  F005         	goto	l8798
  3904  000AD4                     u10300:
  3905  000AD4                     
  3906                           ; BSR set to: 1
  3907  000AD4  51DC               	movf	my_vsprintf@j& (0+255),w,b
  3908  000AD6  5DE6               	subwf	my_vsprintf@prec& (0+255),w,b
  3909  000AD8  51E7               	movf	(my_vsprintf@prec+1)& (0+255),w,b
  3910  000ADA  0A80               	xorlw	128
  3911  000ADC  0100               	movlb	0	; () banked
  3912  000ADE  6FC0               	movwf	??_my_vsprintf& (0+255),b
  3913  000AE0  0101               	movlb	1	; () banked
  3914  000AE2  51DD               	movf	(my_vsprintf@j+1)& (0+255),w,b
  3915  000AE4  0A80               	xorlw	128
  3916  000AE6  0100               	movlb	0	; () banked
  3917  000AE8  59C0               	subwfb	??_my_vsprintf& (0+255),w,b
  3918  000AEA  B0D8               	btfsc	status,0,c
  3919  000AEC  EF7A  F005         	goto	u10311
  3920  000AF0  EF7C  F005         	goto	u10310
  3921  000AF4                     u10311:
  3922  000AF4  EF8B  F005         	goto	l8800
  3923  000AF8                     u10310:
  3924  000AF8                     l8798:
  3925                           
  3926                           ;src/print/my_print.c: 175:       ftoa_sci(buffer, double_temp);
  3927  000AF8  0E8E               	movlw	low my_vsprintf@buffer
  3928  000AFA  0100               	movlb	0	; () banked
  3929  000AFC  6FAC               	movwf	ftoa_sci@buffer& (0+255),b
  3930  000AFE  0E01               	movlw	high my_vsprintf@buffer
  3931  000B00  6FAD               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3932  000B02  C1E0  F0AE         	movff	my_vsprintf@double_temp,ftoa_sci@value
  3933  000B06  C1E1  F0AF         	movff	my_vsprintf@double_temp+1,ftoa_sci@value+1
  3934  000B0A  C1E2  F0B0         	movff	my_vsprintf@double_temp+2,ftoa_sci@value+2
  3935  000B0E  C1E3  F0B1         	movff	my_vsprintf@double_temp+3,ftoa_sci@value+3
  3936  000B12  EC3B  F014         	call	_ftoa_sci	;wreg free
  3937  000B16                     l8800:
  3938                           
  3939                           ;src/print/my_print.c: 176:      precG(buffer, &prec);
  3940  000B16  0E8E               	movlw	low my_vsprintf@buffer
  3941  000B18  6E1F               	movwf	precG@str^0,c
  3942  000B1A  0E01               	movlw	high my_vsprintf@buffer
  3943  000B1C  6E20               	movwf	(precG@str+1)^0,c
  3944  000B1E  0EE6               	movlw	low my_vsprintf@prec
  3945  000B20  6E21               	movwf	precG@precision^0,c
  3946  000B22  0E01               	movlw	high my_vsprintf@prec
  3947  000B24  6E22               	movwf	(precG@precision+1)^0,c
  3948  000B26  EC57  F006         	call	_precG	;wreg free
  3949  000B2A  EFE7  F003         	goto	l8728
  3950  000B2E                     l8806:
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;src/print/my_print.c: 181:      strcpy(buffer," ");
  3954  000B2E  0E8E               	movlw	low my_vsprintf@buffer
  3955  000B30  6E08               	movwf	strcpy@dest^0,c
  3956  000B32  0E01               	movlw	high my_vsprintf@buffer
  3957  000B34  6E09               	movwf	(strcpy@dest+1)^0,c
  3958  000B36  0EFC               	movlw	low STR_20
  3959  000B38  6E0A               	movwf	strcpy@src^0,c
  3960  000B3A  0E7F               	movlw	high STR_20
  3961  000B3C  6E0B               	movwf	(strcpy@src+1)^0,c
  3962  000B3E  EC2E  F027         	call	_strcpy	;wreg free
  3963                           
  3964                           ;src/print/my_print.c: 182:      break;
  3965  000B42  EFF9  F005         	goto	l8812
  3966  000B46                     l8808:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;src/print/my_print.c: 184:      error--;
  3970  000B46  0101               	movlb	1	; () banked
  3971  000B48  07D6               	decf	my_vsprintf@error& (0+255),f,b
  3972  000B4A  A0D8               	btfss	status,0,c
  3973  000B4C  07D7               	decf	(my_vsprintf@error+1)& (0+255),f,b
  3974                           
  3975                           ;src/print/my_print.c: 185:    }
  3976  000B4E  EFF9  F005         	goto	l8812
  3977  000B52                     l8810:
  3978                           
  3979                           ; BSR set to: 1
  3980  000B52  0E82               	movlw	low my_vsprintf@format
  3981  000B54  25D8               	addwf	my_vsprintf@x& (0+255),w,b
  3982  000B56  6ED9               	movwf	fsr2l,c
  3983  000B58  0E01               	movlw	high my_vsprintf@format
  3984  000B5A  21D9               	addwfc	(my_vsprintf@x+1)& (0+255),w,b
  3985  000B5C  6EDA               	movwf	fsr2h,c
  3986  000B5E  50DF               	movf	indf2,w,c
  3987  000B60  0100               	movlb	0	; () banked
  3988  000B62  6FC0               	movwf	??_my_vsprintf& (0+255),b
  3989  000B64  6BC1               	clrf	(??_my_vsprintf+1)& (0+255),b
  3990                           
  3991                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3992                           ; Switch size 1, requested type "simple"
  3993                           ; Number of cases is 1, Range of values is 0 to 0
  3994                           ; switch strategies available:
  3995                           ; Name         Instructions Cycles
  3996                           ; simple_byte            4     3 (average)
  3997                           ;	Chosen strategy is simple_byte
  3998  000B66  51C1               	movf	(??_my_vsprintf+1)& (0+255),w,b
  3999  000B68  0A00               	xorlw	0	; case 0
  4000  000B6A  B4D8               	btfsc	status,2,c
  4001  000B6C  EFBA  F005         	goto	l9444
  4002  000B70  EFA3  F005         	goto	l8808
  4003  000B74                     l9444:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ; Switch size 1, requested type "simple"
  4007                           ; Number of cases is 15, Range of values is 37 to 120
  4008                           ; switch strategies available:
  4009                           ; Name         Instructions Cycles
  4010                           ; simple_byte           46    24 (average)
  4011                           ;	Chosen strategy is simple_byte
  4012  000B74  51C0               	movf	??_my_vsprintf& (0+255),w,b
  4013  000B76  0A25               	xorlw	37	; case 37
  4014  000B78  B4D8               	btfsc	status,2,c
  4015  000B7A  EF63  F001         	goto	l8646
  4016  000B7E  0A60               	xorlw	96	; case 69
  4017  000B80  B4D8               	btfsc	status,2,c
  4018  000B82  EFB7  F003         	goto	l8722
  4019  000B86  0A02               	xorlw	2	; case 71
  4020  000B88  B4D8               	btfsc	status,2,c
  4021  000B8A  EFC7  F004         	goto	l8768
  4022  000B8E  0A1F               	xorlw	31	; case 88
  4023  000B90  B4D8               	btfsc	status,2,c
  4024  000B92  EF82  F002         	goto	l8680
  4025  000B96  0A3B               	xorlw	59	; case 99
  4026  000B98  B4D8               	btfsc	status,2,c
  4027  000B9A  EF6F  F001         	goto	l8648
  4028  000B9E  0A07               	xorlw	7	; case 100
  4029  000BA0  B4D8               	btfsc	status,2,c
  4030  000BA2  EFB8  F001         	goto	l8658
  4031  000BA6  0A01               	xorlw	1	; case 101
  4032  000BA8  B4D8               	btfsc	status,2,c
  4033  000BAA  EF85  F003         	goto	l8714
  4034  000BAE  0A03               	xorlw	3	; case 102
  4035  000BB0  B4D8               	btfsc	status,2,c
  4036  000BB2  EF45  F003         	goto	l8706
  4037  000BB6  0A01               	xorlw	1	; case 103
  4038  000BB8  B4D8               	btfsc	status,2,c
  4039  000BBA  EFF7  F003         	goto	l8732
  4040  000BBE  0A0E               	xorlw	14	; case 105
  4041  000BC0  B4D8               	btfsc	status,2,c
  4042  000BC2  EF05  F002         	goto	l8666
  4043  000BC6  0A07               	xorlw	7	; case 110
  4044  000BC8  B4D8               	btfsc	status,2,c
  4045  000BCA  EF97  F005         	goto	l8806
  4046  000BCE  0A01               	xorlw	1	; case 111
  4047  000BD0  B4D8               	btfsc	status,2,c
  4048  000BD2  EF06  F003         	goto	l8698
  4049  000BD6  0A1C               	xorlw	28	; case 115
  4050  000BD8  B4D8               	btfsc	status,2,c
  4051  000BDA  EF8E  F001         	goto	l8652
  4052  000BDE  0A06               	xorlw	6	; case 117
  4053  000BE0  B4D8               	btfsc	status,2,c
  4054  000BE2  EF52  F002         	goto	l8674
  4055  000BE6  0A0D               	xorlw	13	; case 120
  4056  000BE8  B4D8               	btfsc	status,2,c
  4057  000BEA  EFC7  F002         	goto	l8690
  4058  000BEE  EFA3  F005         	goto	l8808
  4059  000BF2                     l8812:
  4060                           
  4061                           ;src/print/my_print.c: 186:    setWidth(buffer, &width);
  4062  000BF2  0E8E               	movlw	low my_vsprintf@buffer
  4063  000BF4  6E08               	movwf	setWidth@str^0,c
  4064  000BF6  0E01               	movlw	high my_vsprintf@buffer
  4065  000BF8  6E09               	movwf	(setWidth@str+1)^0,c
  4066  000BFA  0EDA               	movlw	low my_vsprintf@width
  4067  000BFC  6E0A               	movwf	setWidth@width^0,c
  4068  000BFE  0E01               	movlw	high my_vsprintf@width
  4069  000C00  6E0B               	movwf	(setWidth@width+1)^0,c
  4070  000C02  EC5B  F019         	call	_setWidth	;wreg free
  4071  000C06                     
  4072                           ;src/print/my_print.c: 187:    strcat(string, buffer);
  4073  000C06  0E00               	movlw	low my_vsprintf@string
  4074  000C08  6E12               	movwf	strcat@dest^0,c
  4075  000C0A  0E01               	movlw	high my_vsprintf@string
  4076  000C0C  6E13               	movwf	(strcat@dest+1)^0,c
  4077  000C0E  0E8E               	movlw	low my_vsprintf@buffer
  4078  000C10  6E14               	movwf	strcat@src^0,c
  4079  000C12  0E01               	movlw	high my_vsprintf@buffer
  4080  000C14  6E15               	movwf	(strcat@src+1)^0,c
  4081  000C16  ECC3  F029         	call	_strcat	;wreg free
  4082  000C1A                     
  4083                           ;src/print/my_print.c: 188:    length += strlen(buffer);
  4084  000C1A  0E8E               	movlw	low my_vsprintf@buffer
  4085  000C1C  6E04               	movwf	strlen@s^0,c
  4086  000C1E  0E01               	movlw	high my_vsprintf@buffer
  4087  000C20  6E05               	movwf	(strlen@s+1)^0,c
  4088  000C22  EC7E  F029         	call	_strlen	;wreg free
  4089  000C26  5004               	movf	?_strlen^0,w,c
  4090  000C28  0101               	movlb	1	; () banked
  4091  000C2A  27D2               	addwf	my_vsprintf@length& (0+255),f,b
  4092  000C2C  5005               	movf	(?_strlen+1)^0,w,c
  4093  000C2E  23D3               	addwfc	(my_vsprintf@length+1)& (0+255),f,b
  4094                           
  4095                           ;src/print/my_print.c: 190:   }
  4096  000C30  EF27  F006         	goto	l8822
  4097  000C34                     l8818:
  4098                           
  4099                           ; BSR set to: 1
  4100                           ;src/print/my_print.c: 192:   {;src/print/my_print.c: 193:    strcat(string, ch);
  4101  000C34  0E00               	movlw	low my_vsprintf@string
  4102  000C36  6E12               	movwf	strcat@dest^0,c
  4103  000C38  0E01               	movlw	high my_vsprintf@string
  4104  000C3A  6E13               	movwf	(strcat@dest+1)^0,c
  4105  000C3C  0ECE               	movlw	low my_vsprintf@ch
  4106  000C3E  6E14               	movwf	strcat@src^0,c
  4107  000C40  0E01               	movlw	high my_vsprintf@ch
  4108  000C42  6E15               	movwf	(strcat@src+1)^0,c
  4109  000C44  ECC3  F029         	call	_strcat	;wreg free
  4110  000C48                     
  4111                           ;src/print/my_print.c: 194:    length++;
  4112  000C48  0101               	movlb	1	; () banked
  4113  000C4A  4BD2               	infsnz	my_vsprintf@length& (0+255),f,b
  4114  000C4C  2BD3               	incf	(my_vsprintf@length+1)& (0+255),f,b
  4115  000C4E                     l8822:
  4116                           
  4117                           ; BSR set to: 1
  4118                           ;src/print/my_print.c: 31:  while ( (ch[0] = *sformat++)) {
  4119  000C4E  C0BC  FFF6         	movff	my_vsprintf@sformat,tblptrl
  4120  000C52  C0BD  FFF7         	movff	my_vsprintf@sformat+1,tblptrh
  4121  000C56  0100               	movlb	0	; () banked
  4122  000C58  4BBC               	infsnz	my_vsprintf@sformat& (0+255),f,b
  4123  000C5A  2BBD               	incf	(my_vsprintf@sformat+1)& (0+255),f,b
  4124  000C5C                     	if	0	;tblptru may be non-zero
  4125  000C5C                     	endif
  4126  000C5C                     	if	0	;tblptru may be non-zero
  4127  000C5C                     	endif
  4128  000C5C  0008               	tblrd		*
  4129  000C5E  CFF5 F1CE          	movff	tablat,my_vsprintf@ch
  4130  000C62  0101               	movlb	1	; () banked
  4131  000C64  51CE               	movf	my_vsprintf@ch& (0+255),w,b
  4132  000C66  A4D8               	btfss	status,2,c
  4133  000C68  EF38  F006         	goto	u10321
  4134  000C6C  EF3A  F006         	goto	u10320
  4135  000C70                     u10321:
  4136  000C70  EF28  F000         	goto	l8580
  4137  000C74                     u10320:
  4138  000C74                     
  4139                           ; BSR set to: 1
  4140                           ;src/print/my_print.c: 197:  strcpy(str, string);
  4141  000C74  C0BA  F008         	movff	my_vsprintf@str,strcpy@dest
  4142  000C78  C0BB  F009         	movff	my_vsprintf@str+1,strcpy@dest+1
  4143  000C7C  0E00               	movlw	low my_vsprintf@string
  4144  000C7E  6E0A               	movwf	strcpy@src^0,c
  4145  000C80  0E01               	movlw	high my_vsprintf@string
  4146  000C82  6E0B               	movwf	(strcpy@src+1)^0,c
  4147  000C84  EC2E  F027         	call	_strcpy	;wreg free
  4148  000C88                     
  4149                           ;src/print/my_print.c: 198:  return error < 0? error : length;
  4150  000C88  0101               	movlb	1	; () banked
  4151  000C8A  BFD7               	btfsc	(my_vsprintf@error+1)& (0+255),7,b
  4152  000C8C  EF4A  F006         	goto	u10331
  4153  000C90  EF4C  F006         	goto	u10330
  4154  000C94                     u10331:
  4155  000C94  EF52  F006         	goto	l746
  4156  000C98                     u10330:
  4157  000C98                     
  4158                           ; BSR set to: 1
  4159  000C98  C1D2  F0BA         	movff	my_vsprintf@length,?_my_vsprintf
  4160  000C9C  C1D3  F0BB         	movff	my_vsprintf@length+1,?_my_vsprintf+1
  4161  000CA0  EF56  F006         	goto	l749
  4162  000CA4                     l746:
  4163                           
  4164                           ; BSR set to: 1
  4165  000CA4  C1D6  F0BA         	movff	my_vsprintf@error,?_my_vsprintf
  4166  000CA8  C1D7  F0BB         	movff	my_vsprintf@error+1,?_my_vsprintf+1
  4167  000CAC                     l749:
  4168                           
  4169                           ; BSR set to: 1
  4170  000CAC  0012               	return		;funcret
  4171  000CAE                     __end_of_my_vsprintf:
  4172                           	opt callstack 0
  4173                           
  4174 ;; *************** function _upperCL *****************
  4175 ;; Defined at:
  4176 ;;		line 103 in file "src/print/format.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  str             2    7[COMRAM] PTR unsigned char 
  4179 ;;		 -> my_vsprintf@buffer(64), 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  i               2   10[COMRAM] int 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4191 ;;      Params:         2       0       0       0       0       0       0       0       0
  4192 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4193 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4194 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4195 ;;Total ram usage:        5 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    3
  4198 ;; This function calls:
  4199 ;;		_strlen
  4200 ;; This function is called by:
  4201 ;;		_my_vsprintf
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text7
  4206  004AAC                     __ptext7:
  4207                           	opt callstack 0
  4208  004AAC                     _upperCL:
  4209                           	opt callstack 24
  4210  004AAC                     
  4211                           ;src/print/format.c: 104:     int i;;src/print/format.c: 105:     for (i = 0; i <= strle
      +                          n(str);i++) {
  4212  004AAC  0E00               	movlw	0
  4213  004AAE  6E0C               	movwf	(upperCL@i+1)^0,c
  4214  004AB0  0E00               	movlw	0
  4215  004AB2  6E0B               	movwf	upperCL@i^0,c
  4216  004AB4  EF89  F025         	goto	l7954
  4217  004AB8                     l7946:
  4218                           
  4219                           ;src/print/format.c: 106:         if((str[i] >= 97) && (str[i] <= 122))
  4220  004AB8  500B               	movf	upperCL@i^0,w,c
  4221  004ABA  2408               	addwf	upperCL@str^0,w,c
  4222  004ABC  6ED9               	movwf	fsr2l,c
  4223  004ABE  500C               	movf	(upperCL@i+1)^0,w,c
  4224  004AC0  2009               	addwfc	(upperCL@str+1)^0,w,c
  4225  004AC2  6EDA               	movwf	fsr2h,c
  4226  004AC4  0E60               	movlw	96
  4227  004AC6  64DF               	cpfsgt	indf2,c
  4228  004AC8  EF68  F025         	goto	u8931
  4229  004ACC  EF6A  F025         	goto	u8930
  4230  004AD0                     u8931:
  4231  004AD0  EF87  F025         	goto	l7952
  4232  004AD4                     u8930:
  4233  004AD4  500B               	movf	upperCL@i^0,w,c
  4234  004AD6  2408               	addwf	upperCL@str^0,w,c
  4235  004AD8  6ED9               	movwf	fsr2l,c
  4236  004ADA  500C               	movf	(upperCL@i+1)^0,w,c
  4237  004ADC  2009               	addwfc	(upperCL@str+1)^0,w,c
  4238  004ADE  6EDA               	movwf	fsr2h,c
  4239  004AE0  0E7B               	movlw	123
  4240  004AE2  60DF               	cpfslt	indf2,c
  4241  004AE4  EF76  F025         	goto	u8941
  4242  004AE8  EF78  F025         	goto	u8940
  4243  004AEC                     u8941:
  4244  004AEC  EF87  F025         	goto	l7952
  4245  004AF0                     u8940:
  4246  004AF0                     
  4247                           ;src/print/format.c: 107:             str[i] = str[i] - 32;
  4248  004AF0  500B               	movf	upperCL@i^0,w,c
  4249  004AF2  2408               	addwf	upperCL@str^0,w,c
  4250  004AF4  6ED9               	movwf	fsr2l,c
  4251  004AF6  500C               	movf	(upperCL@i+1)^0,w,c
  4252  004AF8  2009               	addwfc	(upperCL@str+1)^0,w,c
  4253  004AFA  6EDA               	movwf	fsr2h,c
  4254  004AFC  500B               	movf	upperCL@i^0,w,c
  4255  004AFE  2408               	addwf	upperCL@str^0,w,c
  4256  004B00  6EE1               	movwf	fsr1l,c
  4257  004B02  500C               	movf	(upperCL@i+1)^0,w,c
  4258  004B04  2009               	addwfc	(upperCL@str+1)^0,w,c
  4259  004B06  6EE2               	movwf	fsr1h,c
  4260  004B08  50E7               	movf	indf1,w,c
  4261  004B0A  0FE0               	addlw	224
  4262  004B0C  6EDF               	movwf	indf2,c
  4263  004B0E                     l7952:
  4264                           
  4265                           ;src/print/format.c: 108:     }
  4266  004B0E  4A0B               	infsnz	upperCL@i^0,f,c
  4267  004B10  2A0C               	incf	(upperCL@i+1)^0,f,c
  4268  004B12                     l7954:
  4269  004B12  C008  F004         	movff	upperCL@str,strlen@s
  4270  004B16  C009  F005         	movff	upperCL@str+1,strlen@s+1
  4271  004B1A  EC7E  F029         	call	_strlen	;wreg free
  4272  004B1E  500B               	movf	upperCL@i^0,w,c
  4273  004B20  5C04               	subwf	?_strlen^0,w,c
  4274  004B22  500C               	movf	(upperCL@i+1)^0,w,c
  4275  004B24  5805               	subwfb	(?_strlen+1)^0,w,c
  4276  004B26  B0D8               	btfsc	status,0,c
  4277  004B28  EF98  F025         	goto	u8951
  4278  004B2C  EF9A  F025         	goto	u8950
  4279  004B30                     u8951:
  4280  004B30  EF5C  F025         	goto	l7946
  4281  004B34                     u8950:
  4282  004B34  0012               	return		;funcret
  4283  004B36                     __end_of_upperCL:
  4284                           	opt callstack 0
  4285                           
  4286 ;; *************** function _strcat *****************
  4287 ;; Defined at:
  4288 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  dest            2   17[COMRAM] PTR unsigned char 
  4291 ;;		 -> my_vsprintf@string(128), 
  4292 ;;  src             2   19[COMRAM] PTR const unsigned char 
  4293 ;;		 -> my_vsprintf@buffer(64), my_vsprintf@ch(2), 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  2   17[COMRAM] PTR unsigned char 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4305 ;;      Params:         4       0       0       0       0       0       0       0       0
  4306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4308 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4309 ;;Total ram usage:        4 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    3
  4312 ;; This function calls:
  4313 ;;		_strcpy
  4314 ;;		_strlen
  4315 ;; This function is called by:
  4316 ;;		_my_vsprintf
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text8
  4321  005386                     __ptext8:
  4322                           	opt callstack 0
  4323  005386                     _strcat:
  4324                           	opt callstack 24
  4325  005386  C012  F004         	movff	strcat@dest,strlen@s
  4326  00538A  C013  F005         	movff	strcat@dest+1,strlen@s+1
  4327  00538E  EC7E  F029         	call	_strlen	;wreg free
  4328  005392  5004               	movf	?_strlen^0,w,c
  4329  005394  2412               	addwf	strcat@dest^0,w,c
  4330  005396  6E08               	movwf	strcpy@dest^0,c
  4331  005398  5005               	movf	(?_strlen+1)^0,w,c
  4332  00539A  2013               	addwfc	(strcat@dest+1)^0,w,c
  4333  00539C  6E09               	movwf	(strcpy@dest+1)^0,c
  4334  00539E  C014  F00A         	movff	strcat@src,strcpy@src
  4335  0053A2  C015  F00B         	movff	strcat@src+1,strcpy@src+1
  4336  0053A6  EC2E  F027         	call	_strcpy	;wreg free
  4337  0053AA  0012               	return		;funcret
  4338  0053AC                     __end_of_strcat:
  4339                           	opt callstack 0
  4340                           
  4341 ;; *************** function _setWidth *****************
  4342 ;; Defined at:
  4343 ;;		line 403 in file "src/print/format.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  str             2    7[COMRAM] PTR unsigned char 
  4346 ;;		 -> my_vsprintf@buffer(64), 
  4347 ;;  width           2    9[COMRAM] PTR int 
  4348 ;;		 -> my_vsprintf@width(2), 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  j               2   17[COMRAM] int 
  4351 ;;  len             2   15[COMRAM] int 
  4352 ;;  widthDif        2   13[COMRAM] int 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4362 ;;      Params:         4       0       0       0       0       0       0       0       0
  4363 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4364 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4365 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4366 ;;Total ram usage:       12 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    3
  4369 ;; This function calls:
  4370 ;;		_strlen
  4371 ;; This function is called by:
  4372 ;;		_my_vsprintf
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text9
  4377  0032B6                     __ptext9:
  4378                           	opt callstack 0
  4379  0032B6                     _setWidth:
  4380                           	opt callstack 24
  4381  0032B6                     
  4382                           ;src/print/format.c: 404:     int j;;src/print/format.c: 405:     int len = strlen(str);
  4383  0032B6  C008  F004         	movff	setWidth@str,strlen@s
  4384  0032BA  C009  F005         	movff	setWidth@str+1,strlen@s+1
  4385  0032BE  EC7E  F029         	call	_strlen	;wreg free
  4386  0032C2  C004  F010         	movff	?_strlen,setWidth@len
  4387  0032C6  C005  F011         	movff	?_strlen+1,setWidth@len+1
  4388  0032CA                     
  4389                           ;src/print/format.c: 406:     int widthDif;;src/print/format.c: 408:     widthDif = (*wi
      +                          dth) - len;
  4390  0032CA  C00A  FFD9         	movff	setWidth@width,fsr2l
  4391  0032CE  C00B  FFDA         	movff	setWidth@width+1,fsr2h
  4392  0032D2  CFDE F00C          	movff	postinc2,??_setWidth
  4393  0032D6  CFDD F00D          	movff	postdec2,??_setWidth+1
  4394  0032DA  5010               	movf	setWidth@len^0,w,c
  4395  0032DC  5C0C               	subwf	??_setWidth^0,w,c
  4396  0032DE  6E0E               	movwf	setWidth@widthDif^0,c
  4397  0032E0  5011               	movf	(setWidth@len+1)^0,w,c
  4398  0032E2  580D               	subwfb	(??_setWidth+1)^0,w,c
  4399  0032E4  6E0F               	movwf	(setWidth@widthDif+1)^0,c
  4400  0032E6                     
  4401                           ;src/print/format.c: 409:     if (widthDif > 0 && alingL == 1) {
  4402  0032E6  BE0F               	btfsc	(setWidth@widthDif+1)^0,7,c
  4403  0032E8  EF7E  F019         	goto	u9751
  4404  0032EC  500F               	movf	(setWidth@widthDif+1)^0,w,c
  4405  0032EE  E108               	bnz	u9750
  4406  0032F0  040E               	decf	setWidth@widthDif^0,w,c
  4407  0032F2  A0D8               	btfss	status,0,c
  4408  0032F4  EF7E  F019         	goto	u9751
  4409  0032F8  EF80  F019         	goto	u9750
  4410  0032FC                     u9751:
  4411  0032FC  EFAB  F019         	goto	l8360
  4412  003300                     u9750:
  4413  003300  045B               	decf	_alingL^0,w,c
  4414  003302  A4D8               	btfss	status,2,c
  4415  003304  EF86  F019         	goto	u9761
  4416  003308  EF88  F019         	goto	u9760
  4417  00330C                     u9761:
  4418  00330C  EFAB  F019         	goto	l8360
  4419  003310                     u9760:
  4420  003310                     
  4421                           ;src/print/format.c: 410:         for(j=0; j < widthDif; j++) {
  4422  003310  0E00               	movlw	0
  4423  003312  6E13               	movwf	(setWidth@j+1)^0,c
  4424  003314  0E00               	movlw	0
  4425  003316  6E12               	movwf	setWidth@j^0,c
  4426  003318  EF9A  F019         	goto	l8358
  4427  00331C                     l8352:
  4428                           
  4429                           ;src/print/format.c: 412:             str[len] =' ';
  4430  00331C  5010               	movf	setWidth@len^0,w,c
  4431  00331E  2408               	addwf	setWidth@str^0,w,c
  4432  003320  6ED9               	movwf	fsr2l,c
  4433  003322  5011               	movf	(setWidth@len+1)^0,w,c
  4434  003324  2009               	addwfc	(setWidth@str+1)^0,w,c
  4435  003326  6EDA               	movwf	fsr2h,c
  4436  003328  0E20               	movlw	32
  4437  00332A  6EDF               	movwf	indf2,c
  4438  00332C                     
  4439                           ;src/print/format.c: 413:             len++;
  4440  00332C  4A10               	infsnz	setWidth@len^0,f,c
  4441  00332E  2A11               	incf	(setWidth@len+1)^0,f,c
  4442  003330                     
  4443                           ;src/print/format.c: 414:         }
  4444  003330  4A12               	infsnz	setWidth@j^0,f,c
  4445  003332  2A13               	incf	(setWidth@j+1)^0,f,c
  4446  003334                     l8358:
  4447  003334  500E               	movf	setWidth@widthDif^0,w,c
  4448  003336  5C12               	subwf	setWidth@j^0,w,c
  4449  003338  5013               	movf	(setWidth@j+1)^0,w,c
  4450  00333A  0A80               	xorlw	128
  4451  00333C  6E0C               	movwf	??_setWidth^0,c
  4452  00333E  500F               	movf	(setWidth@widthDif+1)^0,w,c
  4453  003340  0A80               	xorlw	128
  4454  003342  580C               	subwfb	??_setWidth^0,w,c
  4455  003344  A0D8               	btfss	status,0,c
  4456  003346  EFA7  F019         	goto	u9771
  4457  00334A  EFA9  F019         	goto	u9770
  4458  00334E                     u9771:
  4459  00334E  EF8E  F019         	goto	l8352
  4460  003352                     u9770:
  4461  003352  EF70  F01A         	goto	l639
  4462  003356                     l8360:
  4463  003356  BE0F               	btfsc	(setWidth@widthDif+1)^0,7,c
  4464  003358  EFB6  F019         	goto	u9781
  4465  00335C  500F               	movf	(setWidth@widthDif+1)^0,w,c
  4466  00335E  E108               	bnz	u9780
  4467  003360  040E               	decf	setWidth@widthDif^0,w,c
  4468  003362  A0D8               	btfss	status,0,c
  4469  003364  EFB6  F019         	goto	u9781
  4470  003368  EFB8  F019         	goto	u9780
  4471  00336C                     u9781:
  4472  00336C  EF70  F01A         	goto	l639
  4473  003370                     u9780:
  4474  003370  505B               	movf	_alingL^0,w,c
  4475  003372  A4D8               	btfss	status,2,c
  4476  003374  EFBE  F019         	goto	u9791
  4477  003378  EFC0  F019         	goto	u9790
  4478  00337C                     u9791:
  4479  00337C  EF70  F01A         	goto	l639
  4480  003380                     u9790:
  4481  003380                     
  4482                           ;src/print/format.c: 417:         for(j = (*width)-1; j >= 0; j--) {
  4483  003380  C00A  FFD9         	movff	setWidth@width,fsr2l
  4484  003384  C00B  FFDA         	movff	setWidth@width+1,fsr2h
  4485  003388  CFDE F00C          	movff	postinc2,??_setWidth
  4486  00338C  CFDD F00D          	movff	postdec2,??_setWidth+1
  4487  003390  0EFF               	movlw	255
  4488  003392  240C               	addwf	??_setWidth^0,w,c
  4489  003394  6E12               	movwf	setWidth@j^0,c
  4490  003396  0EFF               	movlw	255
  4491  003398  200D               	addwfc	(??_setWidth+1)^0,w,c
  4492  00339A  6E13               	movwf	(setWidth@j+1)^0,c
  4493  00339C                     l8366:
  4494  00339C  BE13               	btfsc	(setWidth@j+1)^0,7,c
  4495  00339E  EFD5  F019         	goto	u9800
  4496  0033A2  EFD3  F019         	goto	u9801
  4497  0033A6                     u9801:
  4498  0033A6  EFD7  F019         	goto	l8370
  4499  0033AA                     u9800:
  4500  0033AA  EF70  F01A         	goto	l639
  4501  0033AE                     l8370:
  4502                           
  4503                           ;src/print/format.c: 418:             len--;
  4504  0033AE  0610               	decf	setWidth@len^0,f,c
  4505  0033B0  A0D8               	btfss	status,0,c
  4506  0033B2  0611               	decf	(setWidth@len+1)^0,f,c
  4507  0033B4                     
  4508                           ;src/print/format.c: 419:             if (zeros == 1 && precInt == 0) {
  4509  0033B4  0100               	movlb	0	; () banked
  4510  0033B6  05E7               	decf	_zeros& (0+255),w,b
  4511  0033B8  A4D8               	btfss	status,2,c
  4512  0033BA  EFE1  F019         	goto	u9811
  4513  0033BE  EFE3  F019         	goto	u9810
  4514  0033C2                     u9811:
  4515  0033C2  EF52  F01A         	goto	l8392
  4516  0033C6                     u9810:
  4517  0033C6                     
  4518                           ; BSR set to: 0
  4519  0033C6  51E6               	movf	_precInt& (0+255),w,b
  4520  0033C8  A4D8               	btfss	status,2,c
  4521  0033CA  EFE9  F019         	goto	u9821
  4522  0033CE  EFEB  F019         	goto	u9820
  4523  0033D2                     u9821:
  4524  0033D2  EF52  F01A         	goto	l8392
  4525  0033D6                     u9820:
  4526  0033D6                     
  4527                           ; BSR set to: 0
  4528                           ;src/print/format.c: 420:                 if (j >= widthDif) {
  4529  0033D6  500E               	movf	setWidth@widthDif^0,w,c
  4530  0033D8  5C12               	subwf	setWidth@j^0,w,c
  4531  0033DA  5013               	movf	(setWidth@j+1)^0,w,c
  4532  0033DC  0A80               	xorlw	128
  4533  0033DE  6E0C               	movwf	??_setWidth^0,c
  4534  0033E0  500F               	movf	(setWidth@widthDif+1)^0,w,c
  4535  0033E2  0A80               	xorlw	128
  4536  0033E4  580C               	subwfb	??_setWidth^0,w,c
  4537  0033E6  A0D8               	btfss	status,0,c
  4538  0033E8  EFF8  F019         	goto	u9831
  4539  0033EC  EFFA  F019         	goto	u9830
  4540  0033F0                     u9831:
  4541  0033F0  EF32  F01A         	goto	l8386
  4542  0033F4                     u9830:
  4543  0033F4                     
  4544                           ; BSR set to: 0
  4545                           ;src/print/format.c: 421:                     if (str[len] == '+' || str[len] == '-')
  4546  0033F4  5010               	movf	setWidth@len^0,w,c
  4547  0033F6  2408               	addwf	setWidth@str^0,w,c
  4548  0033F8  6ED9               	movwf	fsr2l,c
  4549  0033FA  5011               	movf	(setWidth@len+1)^0,w,c
  4550  0033FC  2009               	addwfc	(setWidth@str+1)^0,w,c
  4551  0033FE  6EDA               	movwf	fsr2h,c
  4552  003400  0E2B               	movlw	43
  4553  003402  18DE               	xorwf	postinc2,w,c
  4554  003404  B4D8               	btfsc	status,2,c
  4555  003406  EF07  F01A         	goto	u9841
  4556  00340A  EF09  F01A         	goto	u9840
  4557  00340E                     u9841:
  4558  00340E  EF18  F01A         	goto	l8382
  4559  003412                     u9840:
  4560  003412                     
  4561                           ; BSR set to: 0
  4562  003412  5010               	movf	setWidth@len^0,w,c
  4563  003414  2408               	addwf	setWidth@str^0,w,c
  4564  003416  6ED9               	movwf	fsr2l,c
  4565  003418  5011               	movf	(setWidth@len+1)^0,w,c
  4566  00341A  2009               	addwfc	(setWidth@str+1)^0,w,c
  4567  00341C  6EDA               	movwf	fsr2h,c
  4568  00341E  0E2D               	movlw	45
  4569  003420  18DE               	xorwf	postinc2,w,c
  4570  003422  A4D8               	btfss	status,2,c
  4571  003424  EF16  F01A         	goto	u9851
  4572  003428  EF18  F01A         	goto	u9850
  4573  00342C                     u9851:
  4574  00342C  EF22  F01A         	goto	l8384
  4575  003430                     u9850:
  4576  003430                     l8382:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;src/print/format.c: 422:                         str [j] = '0';
  4580  003430  5012               	movf	setWidth@j^0,w,c
  4581  003432  2408               	addwf	setWidth@str^0,w,c
  4582  003434  6ED9               	movwf	fsr2l,c
  4583  003436  5013               	movf	(setWidth@j+1)^0,w,c
  4584  003438  2009               	addwfc	(setWidth@str+1)^0,w,c
  4585  00343A  6EDA               	movwf	fsr2h,c
  4586  00343C  0E30               	movlw	48
  4587  00343E  6EDF               	movwf	indf2,c
  4588  003440  EF6B  F01A         	goto	l8398
  4589  003444                     l8384:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;src/print/format.c: 424:                         str[j] = str[len];
  4593  003444  5010               	movf	setWidth@len^0,w,c
  4594  003446  2408               	addwf	setWidth@str^0,w,c
  4595  003448  6ED9               	movwf	fsr2l,c
  4596  00344A  5011               	movf	(setWidth@len+1)^0,w,c
  4597  00344C  2009               	addwfc	(setWidth@str+1)^0,w,c
  4598  00344E  6EDA               	movwf	fsr2h,c
  4599  003450  5012               	movf	setWidth@j^0,w,c
  4600  003452  2408               	addwf	setWidth@str^0,w,c
  4601  003454  6EE1               	movwf	fsr1l,c
  4602  003456  5013               	movf	(setWidth@j+1)^0,w,c
  4603  003458  2009               	addwfc	(setWidth@str+1)^0,w,c
  4604  00345A  6EE2               	movwf	fsr1h,c
  4605  00345C  CFDF FFE7          	movff	indf2,indf1
  4606  003460  EF6B  F01A         	goto	l8398
  4607  003464                     l8386:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;src/print/format.c: 427:                     if (str[j] != '+' && str [j] != '-')
  4611  003464  5012               	movf	setWidth@j^0,w,c
  4612  003466  2408               	addwf	setWidth@str^0,w,c
  4613  003468  6ED9               	movwf	fsr2l,c
  4614  00346A  5013               	movf	(setWidth@j+1)^0,w,c
  4615  00346C  2009               	addwfc	(setWidth@str+1)^0,w,c
  4616  00346E  6EDA               	movwf	fsr2h,c
  4617  003470  0E2B               	movlw	43
  4618  003472  18DE               	xorwf	postinc2,w,c
  4619  003474  B4D8               	btfsc	status,2,c
  4620  003476  EF3F  F01A         	goto	u9861
  4621  00347A  EF41  F01A         	goto	u9860
  4622  00347E                     u9861:
  4623  00347E  EF6B  F01A         	goto	l8398
  4624  003482                     u9860:
  4625  003482                     
  4626                           ; BSR set to: 0
  4627  003482  5012               	movf	setWidth@j^0,w,c
  4628  003484  2408               	addwf	setWidth@str^0,w,c
  4629  003486  6ED9               	movwf	fsr2l,c
  4630  003488  5013               	movf	(setWidth@j+1)^0,w,c
  4631  00348A  2009               	addwfc	(setWidth@str+1)^0,w,c
  4632  00348C  6EDA               	movwf	fsr2h,c
  4633  00348E  0E2D               	movlw	45
  4634  003490  18DE               	xorwf	postinc2,w,c
  4635  003492  B4D8               	btfsc	status,2,c
  4636  003494  EF4E  F01A         	goto	u9871
  4637  003498  EF50  F01A         	goto	u9870
  4638  00349C                     u9871:
  4639  00349C  EF6B  F01A         	goto	l8398
  4640  0034A0                     u9870:
  4641  0034A0  EF18  F01A         	goto	l8382
  4642  0034A4                     l8392:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;src/print/format.c: 432:                 if (j >= widthDif)
  4646  0034A4  500E               	movf	setWidth@widthDif^0,w,c
  4647  0034A6  5C12               	subwf	setWidth@j^0,w,c
  4648  0034A8  5013               	movf	(setWidth@j+1)^0,w,c
  4649  0034AA  0A80               	xorlw	128
  4650  0034AC  6E0C               	movwf	??_setWidth^0,c
  4651  0034AE  500F               	movf	(setWidth@widthDif+1)^0,w,c
  4652  0034B0  0A80               	xorlw	128
  4653  0034B2  580C               	subwfb	??_setWidth^0,w,c
  4654  0034B4  A0D8               	btfss	status,0,c
  4655  0034B6  EF5F  F01A         	goto	u9881
  4656  0034BA  EF61  F01A         	goto	u9880
  4657  0034BE                     u9881:
  4658  0034BE  EF63  F01A         	goto	l8396
  4659  0034C2                     u9880:
  4660  0034C2  EF22  F01A         	goto	l8384
  4661  0034C6                     l8396:
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;src/print/format.c: 435:                     str[j] =' ';
  4665  0034C6  5012               	movf	setWidth@j^0,w,c
  4666  0034C8  2408               	addwf	setWidth@str^0,w,c
  4667  0034CA  6ED9               	movwf	fsr2l,c
  4668  0034CC  5013               	movf	(setWidth@j+1)^0,w,c
  4669  0034CE  2009               	addwfc	(setWidth@str+1)^0,w,c
  4670  0034D0  6EDA               	movwf	fsr2h,c
  4671  0034D2  0E20               	movlw	32
  4672  0034D4  6EDF               	movwf	indf2,c
  4673  0034D6                     l8398:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;src/print/format.c: 437:         }
  4677  0034D6  0612               	decf	setWidth@j^0,f,c
  4678  0034D8  A0D8               	btfss	status,0,c
  4679  0034DA  0613               	decf	(setWidth@j+1)^0,f,c
  4680  0034DC  EFCE  F019         	goto	l8366
  4681  0034E0                     l639:
  4682  0034E0  0012               	return		;funcret
  4683  0034E2                     __end_of_setWidth:
  4684                           	opt callstack 0
  4685                           
  4686 ;; *************** function _precS *****************
  4687 ;; Defined at:
  4688 ;;		line 348 in file "src/print/format.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  str             2    7[COMRAM] PTR unsigned char 
  4691 ;;		 -> my_vsprintf@buffer(64), 
  4692 ;;  precision       2    9[COMRAM] PTR int 
  4693 ;;		 -> my_vsprintf@prec(2), 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  i               2   15[COMRAM] int 
  4696 ;;  len             2   13[COMRAM] int 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4706 ;;      Params:         4       0       0       0       0       0       0       0       0
  4707 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4708 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4709 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4710 ;;Total ram usage:       10 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    3
  4713 ;; This function calls:
  4714 ;;		_strlen
  4715 ;; This function is called by:
  4716 ;;		_my_vsprintf
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text10
  4721  004CB8                     __ptext10:
  4722                           	opt callstack 0
  4723  004CB8                     _precS:
  4724                           	opt callstack 24
  4725  004CB8                     
  4726                           ;src/print/format.c: 349:     int i;;src/print/format.c: 350:     int len = strlen(str);
  4727  004CB8  C008  F004         	movff	precS@str,strlen@s
  4728  004CBC  C009  F005         	movff	precS@str+1,strlen@s+1
  4729  004CC0  EC7E  F029         	call	_strlen	;wreg free
  4730  004CC4  C004  F00E         	movff	?_strlen,precS@len
  4731  004CC8  C005  F00F         	movff	?_strlen+1,precS@len+1
  4732  004CCC                     
  4733                           ;src/print/format.c: 352:     if ((*precision) != -1) {
  4734  004CCC  C00A  FFD9         	movff	precS@precision,fsr2l
  4735  004CD0  C00B  FFDA         	movff	precS@precision+1,fsr2h
  4736  004CD4  28DE               	incf	postinc2,w,c
  4737  004CD6  E108               	bnz	u9580
  4738  004CD8  28DE               	incf	postinc2,w,c
  4739  004CDA  B4D8               	btfsc	status,2,c
  4740  004CDC  EF72  F026         	goto	u9581
  4741  004CE0  EF74  F026         	goto	u9580
  4742  004CE4                     u9581:
  4743  004CE4  EF97  F026         	goto	l593
  4744  004CE8                     u9580:
  4745  004CE8                     
  4746                           ;src/print/format.c: 353:         for (i = (*precision); i < len;i++)
  4747  004CE8  C00A  FFD9         	movff	precS@precision,fsr2l
  4748  004CEC  C00B  FFDA         	movff	precS@precision+1,fsr2h
  4749  004CF0  CFDE F010          	movff	postinc2,precS@i
  4750  004CF4  CFDD F011          	movff	postdec2,precS@i+1
  4751  004CF8  EF88  F026         	goto	l8260
  4752  004CFC                     l8256:
  4753                           
  4754                           ;src/print/format.c: 354:             str[i] = 0;
  4755  004CFC  5010               	movf	precS@i^0,w,c
  4756  004CFE  2408               	addwf	precS@str^0,w,c
  4757  004D00  6ED9               	movwf	fsr2l,c
  4758  004D02  5011               	movf	(precS@i+1)^0,w,c
  4759  004D04  2009               	addwfc	(precS@str+1)^0,w,c
  4760  004D06  6EDA               	movwf	fsr2h,c
  4761  004D08  0E00               	movlw	0
  4762  004D0A  6EDF               	movwf	indf2,c
  4763  004D0C  4A10               	infsnz	precS@i^0,f,c
  4764  004D0E  2A11               	incf	(precS@i+1)^0,f,c
  4765  004D10                     l8260:
  4766  004D10  500E               	movf	precS@len^0,w,c
  4767  004D12  5C10               	subwf	precS@i^0,w,c
  4768  004D14  5011               	movf	(precS@i+1)^0,w,c
  4769  004D16  0A80               	xorlw	128
  4770  004D18  6E0C               	movwf	??_precS^0,c
  4771  004D1A  500F               	movf	(precS@len+1)^0,w,c
  4772  004D1C  0A80               	xorlw	128
  4773  004D1E  580C               	subwfb	??_precS^0,w,c
  4774  004D20  A0D8               	btfss	status,0,c
  4775  004D22  EF95  F026         	goto	u9591
  4776  004D26  EF97  F026         	goto	u9590
  4777  004D2A                     u9591:
  4778  004D2A  EF7E  F026         	goto	l8256
  4779  004D2E                     u9590:
  4780  004D2E                     l593:
  4781  004D2E  0012               	return		;funcret
  4782  004D30                     __end_of_precS:
  4783                           	opt callstack 0
  4784                           
  4785 ;; *************** function _precI *****************
  4786 ;; Defined at:
  4787 ;;		line 323 in file "src/print/format.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  str             2    7[COMRAM] PTR unsigned char 
  4790 ;;		 -> my_vsprintf@buffer(64), 
  4791 ;;  precision       2    9[COMRAM] PTR int 
  4792 ;;		 -> my_vsprintf@prec(2), 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  i               2   19[COMRAM] int 
  4795 ;;  len             2   17[COMRAM] int 
  4796 ;;  j               2   15[COMRAM] int 
  4797 ;;  k               2   13[COMRAM] int 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4807 ;;      Params:         4       0       0       0       0       0       0       0       0
  4808 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4809 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4810 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4811 ;;Total ram usage:       14 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    3
  4814 ;; This function calls:
  4815 ;;		_strlen
  4816 ;; This function is called by:
  4817 ;;		_my_vsprintf
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text11
  4822  003FE6                     __ptext11:
  4823                           	opt callstack 0
  4824  003FE6                     _precI:
  4825                           	opt callstack 24
  4826  003FE6                     
  4827                           ;src/print/format.c: 324:     int i, j, k;;src/print/format.c: 325:     int len = strlen
      +                          (str);
  4828  003FE6  C008  F004         	movff	precI@str,strlen@s
  4829  003FEA  C009  F005         	movff	precI@str+1,strlen@s+1
  4830  003FEE  EC7E  F029         	call	_strlen	;wreg free
  4831  003FF2  C004  F012         	movff	?_strlen,precI@len
  4832  003FF6  C005  F013         	movff	?_strlen+1,precI@len+1
  4833  003FFA                     
  4834                           ;src/print/format.c: 327:     if (*precision == -1)
  4835  003FFA  C00A  FFD9         	movff	precI@precision,fsr2l
  4836  003FFE  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4837  004002  28DE               	incf	postinc2,w,c
  4838  004004  E106               	bnz	u9541
  4839  004006  28DE               	incf	postinc2,w,c
  4840  004008  A4D8               	btfss	status,2,c
  4841  00400A  EF09  F020         	goto	u9541
  4842  00400E  EF0B  F020         	goto	u9540
  4843  004012                     u9541:
  4844  004012  EF15  F020         	goto	l8224
  4845  004016                     u9540:
  4846  004016                     
  4847                           ;src/print/format.c: 328:         (*precision) = 1;
  4848  004016  C00A  FFD9         	movff	precI@precision,fsr2l
  4849  00401A  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4850  00401E  0E01               	movlw	1
  4851  004020  6EDE               	movwf	postinc2,c
  4852  004022  0E00               	movlw	0
  4853  004024  6EDD               	movwf	postdec2,c
  4854  004026  EF18  F020         	goto	l8226
  4855  00402A                     l8224:
  4856                           
  4857                           ;src/print/format.c: 330:         precInt = 1;
  4858  00402A  0E01               	movlw	1
  4859  00402C  0100               	movlb	0	; () banked
  4860  00402E  6FE6               	movwf	_precInt& (0+255),b
  4861  004030                     l8226:
  4862                           
  4863                           ;src/print/format.c: 332:     j = (*precision) - len;
  4864  004030  C00A  FFD9         	movff	precI@precision,fsr2l
  4865  004034  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4866  004038  CFDE F00C          	movff	postinc2,??_precI
  4867  00403C  CFDD F00D          	movff	postdec2,??_precI+1
  4868  004040  5012               	movf	precI@len^0,w,c
  4869  004042  5C0C               	subwf	??_precI^0,w,c
  4870  004044  6E10               	movwf	precI@j^0,c
  4871  004046  5013               	movf	(precI@len+1)^0,w,c
  4872  004048  580D               	subwfb	(??_precI+1)^0,w,c
  4873  00404A  6E11               	movwf	(precI@j+1)^0,c
  4874  00404C                     
  4875                           ;src/print/format.c: 333:     k = len;
  4876  00404C  C012  F00E         	movff	precI@len,precI@k
  4877  004050  C013  F00F         	movff	precI@len+1,precI@k+1
  4878  004054                     
  4879                           ;src/print/format.c: 334:     if(j > 0) {
  4880  004054  BE11               	btfsc	(precI@j+1)^0,7,c
  4881  004056  EF35  F020         	goto	u9551
  4882  00405A  5011               	movf	(precI@j+1)^0,w,c
  4883  00405C  E108               	bnz	u9550
  4884  00405E  0410               	decf	precI@j^0,w,c
  4885  004060  A0D8               	btfss	status,0,c
  4886  004062  EF35  F020         	goto	u9551
  4887  004066  EF37  F020         	goto	u9550
  4888  00406A                     u9551:
  4889  00406A  EF7D  F020         	goto	l586
  4890  00406E                     u9550:
  4891  00406E                     
  4892                           ;src/print/format.c: 335:         for(i = (*precision)-1; i >= 0; i--) {
  4893  00406E  C00A  FFD9         	movff	precI@precision,fsr2l
  4894  004072  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4895  004076  CFDE F00C          	movff	postinc2,??_precI
  4896  00407A  CFDD F00D          	movff	postdec2,??_precI+1
  4897  00407E  0EFF               	movlw	255
  4898  004080  240C               	addwf	??_precI^0,w,c
  4899  004082  6E14               	movwf	precI@i^0,c
  4900  004084  0EFF               	movlw	255
  4901  004086  200D               	addwfc	(??_precI+1)^0,w,c
  4902  004088  6E15               	movwf	(precI@i+1)^0,c
  4903  00408A                     l8234:
  4904  00408A  BE15               	btfsc	(precI@i+1)^0,7,c
  4905  00408C  EF4C  F020         	goto	u9560
  4906  004090  EF4A  F020         	goto	u9561
  4907  004094                     u9561:
  4908  004094  EF4E  F020         	goto	l8238
  4909  004098                     u9560:
  4910  004098  EF7D  F020         	goto	l586
  4911  00409C                     l8238:
  4912                           
  4913                           ;src/print/format.c: 336:             k--;
  4914  00409C  060E               	decf	precI@k^0,f,c
  4915  00409E  A0D8               	btfss	status,0,c
  4916  0040A0  060F               	decf	(precI@k+1)^0,f,c
  4917  0040A2                     
  4918                           ;src/print/format.c: 337:             if (i>=j)
  4919  0040A2  5010               	movf	precI@j^0,w,c
  4920  0040A4  5C14               	subwf	precI@i^0,w,c
  4921  0040A6  5015               	movf	(precI@i+1)^0,w,c
  4922  0040A8  0A80               	xorlw	128
  4923  0040AA  6E0C               	movwf	??_precI^0,c
  4924  0040AC  5011               	movf	(precI@j+1)^0,w,c
  4925  0040AE  0A80               	xorlw	128
  4926  0040B0  580C               	subwfb	??_precI^0,w,c
  4927  0040B2  A0D8               	btfss	status,0,c
  4928  0040B4  EF5E  F020         	goto	u9571
  4929  0040B8  EF60  F020         	goto	u9570
  4930  0040BC                     u9571:
  4931  0040BC  EF70  F020         	goto	l8244
  4932  0040C0                     u9570:
  4933  0040C0                     
  4934                           ;src/print/format.c: 338:                 str[i] = str[k];
  4935  0040C0  500E               	movf	precI@k^0,w,c
  4936  0040C2  2408               	addwf	precI@str^0,w,c
  4937  0040C4  6ED9               	movwf	fsr2l,c
  4938  0040C6  500F               	movf	(precI@k+1)^0,w,c
  4939  0040C8  2009               	addwfc	(precI@str+1)^0,w,c
  4940  0040CA  6EDA               	movwf	fsr2h,c
  4941  0040CC  5014               	movf	precI@i^0,w,c
  4942  0040CE  2408               	addwf	precI@str^0,w,c
  4943  0040D0  6EE1               	movwf	fsr1l,c
  4944  0040D2  5015               	movf	(precI@i+1)^0,w,c
  4945  0040D4  2009               	addwfc	(precI@str+1)^0,w,c
  4946  0040D6  6EE2               	movwf	fsr1h,c
  4947  0040D8  CFDF FFE7          	movff	indf2,indf1
  4948  0040DC  EF78  F020         	goto	l8246
  4949  0040E0                     l8244:
  4950                           
  4951                           ;src/print/format.c: 340:                 str[i] ='0';
  4952  0040E0  5014               	movf	precI@i^0,w,c
  4953  0040E2  2408               	addwf	precI@str^0,w,c
  4954  0040E4  6ED9               	movwf	fsr2l,c
  4955  0040E6  5015               	movf	(precI@i+1)^0,w,c
  4956  0040E8  2009               	addwfc	(precI@str+1)^0,w,c
  4957  0040EA  6EDA               	movwf	fsr2h,c
  4958  0040EC  0E30               	movlw	48
  4959  0040EE  6EDF               	movwf	indf2,c
  4960  0040F0                     l8246:
  4961                           
  4962                           ;src/print/format.c: 341:         }
  4963  0040F0  0614               	decf	precI@i^0,f,c
  4964  0040F2  A0D8               	btfss	status,0,c
  4965  0040F4  0615               	decf	(precI@i+1)^0,f,c
  4966  0040F6  EF45  F020         	goto	l8234
  4967  0040FA                     l586:
  4968  0040FA  0012               	return		;funcret
  4969  0040FC                     __end_of_precI:
  4970                           	opt callstack 0
  4971                           
  4972 ;; *************** function _precG *****************
  4973 ;; Defined at:
  4974 ;;		line 239 in file "src/print/format.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  str             2   30[COMRAM] PTR unsigned char 
  4977 ;;		 -> my_vsprintf@buffer(64), 
  4978 ;;  precision       2   32[COMRAM] PTR int 
  4979 ;;		 -> my_vsprintf@prec(2), 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  i               2   51[COMRAM] int 
  4982 ;;  k               2   49[COMRAM] int 
  4983 ;;  j               2   47[COMRAM] int 
  4984 ;;  len             2   45[COMRAM] int 
  4985 ;;  posE            2   43[COMRAM] int 
  4986 ;;  digS            2   41[COMRAM] int 
  4987 ;;  f               2   39[COMRAM] int 
  4988 ;;  p               2   37[COMRAM] int 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4998 ;;      Params:         4       0       0       0       0       0       0       0       0
  4999 ;;      Locals:        16       0       0       0       0       0       0       0       0
  5000 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5001 ;;      Totals:        23       0       0       0       0       0       0       0       0
  5002 ;;Total ram usage:       23 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    5
  5005 ;; This function calls:
  5006 ;;		_posc
  5007 ;;		_roundStr
  5008 ;;		_strlen
  5009 ;; This function is called by:
  5010 ;;		_my_vsprintf
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text12
  5015  000CAE                     __ptext12:
  5016                           	opt callstack 0
  5017  000CAE                     _precG:
  5018                           	opt callstack 22
  5019  000CAE                     
  5020                           ;src/print/format.c: 240:     int i, j, k;;src/print/format.c: 241:     int len = strlen
      +                          (str);
  5021  000CAE  C01F  F004         	movff	precG@str,strlen@s
  5022  000CB2  C020  F005         	movff	precG@str+1,strlen@s+1
  5023  000CB6  EC7E  F029         	call	_strlen	;wreg free
  5024  000CBA  C004  F02E         	movff	?_strlen,precG@len
  5025  000CBE  C005  F02F         	movff	?_strlen+1,precG@len+1
  5026                           
  5027                           ;src/print/format.c: 242:     int posE = posc(str,'e');
  5028  000CC2  C01F  F008         	movff	precG@str,posc@str
  5029  000CC6  C020  F009         	movff	precG@str+1,posc@str+1
  5030  000CCA  0E65               	movlw	101
  5031  000CCC  6E0A               	movwf	posc@c^0,c
  5032  000CCE  ECCC  F026         	call	_posc	;wreg free
  5033  000CD2  C008  F02C         	movff	?_posc,precG@posE
  5034  000CD6  C009  F02D         	movff	?_posc+1,precG@posE+1
  5035                           
  5036                           ;src/print/format.c: 243:     int p = posc(str,'.');
  5037  000CDA  C01F  F008         	movff	precG@str,posc@str
  5038  000CDE  C020  F009         	movff	precG@str+1,posc@str+1
  5039  000CE2  0E2E               	movlw	46
  5040  000CE4  6E0A               	movwf	posc@c^0,c
  5041  000CE6  ECCC  F026         	call	_posc	;wreg free
  5042  000CEA  C008  F026         	movff	?_posc,precG@p
  5043  000CEE  C009  F027         	movff	?_posc+1,precG@p+1
  5044  000CF2                     
  5045                           ;src/print/format.c: 244:     int f = 0;
  5046  000CF2  0E00               	movlw	0
  5047  000CF4  6E29               	movwf	(precG@f+1)^0,c
  5048  000CF6  0E00               	movlw	0
  5049  000CF8  6E28               	movwf	precG@f^0,c
  5050  000CFA                     
  5051                           ;src/print/format.c: 245:     int digS = 0;
  5052  000CFA  0E00               	movlw	0
  5053  000CFC  6E2B               	movwf	(precG@digS+1)^0,c
  5054  000CFE  0E00               	movlw	0
  5055  000D00  6E2A               	movwf	precG@digS^0,c
  5056  000D02                     
  5057                           ;src/print/format.c: 247:     if ((*precision) == - 1)
  5058  000D02  C021  FFD9         	movff	precG@precision,fsr2l
  5059  000D06  C022  FFDA         	movff	precG@precision+1,fsr2h
  5060  000D0A  28DE               	incf	postinc2,w,c
  5061  000D0C  E106               	bnz	u9241
  5062  000D0E  28DE               	incf	postinc2,w,c
  5063  000D10  A4D8               	btfss	status,2,c
  5064  000D12  EF8D  F006         	goto	u9241
  5065  000D16  EF8F  F006         	goto	u9240
  5066  000D1A                     u9241:
  5067  000D1A  EF97  F006         	goto	l8102
  5068  000D1E                     u9240:
  5069  000D1E                     
  5070                           ;src/print/format.c: 248:         (*precision) = 6;
  5071  000D1E  C021  FFD9         	movff	precG@precision,fsr2l
  5072  000D22  C022  FFDA         	movff	precG@precision+1,fsr2h
  5073  000D26  0E06               	movlw	6
  5074  000D28  6EDE               	movwf	postinc2,c
  5075  000D2A  0E00               	movlw	0
  5076  000D2C  6EDD               	movwf	postdec2,c
  5077  000D2E                     l8102:
  5078                           
  5079                           ;src/print/format.c: 250:     k = (posE > 0)? posE : len;
  5080  000D2E  BE2D               	btfsc	(precG@posE+1)^0,7,c
  5081  000D30  EFA4  F006         	goto	u9250
  5082  000D34  502D               	movf	(precG@posE+1)^0,w,c
  5083  000D36  E106               	bnz	u9251
  5084  000D38  042C               	decf	precG@posE^0,w,c
  5085  000D3A  B0D8               	btfsc	status,0,c
  5086  000D3C  EFA2  F006         	goto	u9251
  5087  000D40  EFA4  F006         	goto	u9250
  5088  000D44                     u9251:
  5089  000D44  EFAA  F006         	goto	l530
  5090  000D48                     u9250:
  5091  000D48  C02E  F032         	movff	precG@len,precG@k
  5092  000D4C  C02F  F033         	movff	precG@len+1,precG@k+1
  5093  000D50  EFAE  F006         	goto	l8106
  5094  000D54                     l530:
  5095  000D54  C02C  F032         	movff	precG@posE,precG@k
  5096  000D58  C02D  F033         	movff	precG@posE+1,precG@k+1
  5097  000D5C                     l8106:
  5098                           
  5099                           ;src/print/format.c: 254:     for (i = 0; i <= len;i++) {
  5100  000D5C  0E00               	movlw	0
  5101  000D5E  6E35               	movwf	(precG@i+1)^0,c
  5102  000D60  0E00               	movlw	0
  5103  000D62  6E34               	movwf	precG@i^0,c
  5104  000D64  EF0C  F007         	goto	l8128
  5105  000D68                     l8108:
  5106                           
  5107                           ;src/print/format.c: 255:         if (str[i] >= 48 && str[i] <= 57) {
  5108  000D68  5034               	movf	precG@i^0,w,c
  5109  000D6A  241F               	addwf	precG@str^0,w,c
  5110  000D6C  6ED9               	movwf	fsr2l,c
  5111  000D6E  5035               	movf	(precG@i+1)^0,w,c
  5112  000D70  2020               	addwfc	(precG@str+1)^0,w,c
  5113  000D72  6EDA               	movwf	fsr2h,c
  5114  000D74  0E2F               	movlw	47
  5115  000D76  64DF               	cpfsgt	indf2,c
  5116  000D78  EFC0  F006         	goto	u9261
  5117  000D7C  EFC2  F006         	goto	u9260
  5118  000D80                     u9261:
  5119  000D80  EFF9  F006         	goto	l8122
  5120  000D84                     u9260:
  5121  000D84  5034               	movf	precG@i^0,w,c
  5122  000D86  241F               	addwf	precG@str^0,w,c
  5123  000D88  6ED9               	movwf	fsr2l,c
  5124  000D8A  5035               	movf	(precG@i+1)^0,w,c
  5125  000D8C  2020               	addwfc	(precG@str+1)^0,w,c
  5126  000D8E  6EDA               	movwf	fsr2h,c
  5127  000D90  0E3A               	movlw	58
  5128  000D92  60DF               	cpfslt	indf2,c
  5129  000D94  EFCE  F006         	goto	u9271
  5130  000D98  EFD0  F006         	goto	u9270
  5131  000D9C                     u9271:
  5132  000D9C  EFF9  F006         	goto	l8122
  5133  000DA0                     u9270:
  5134  000DA0                     
  5135                           ;src/print/format.c: 256:             if (!(str[i] == 48 && digS == 0)){
  5136  000DA0  5034               	movf	precG@i^0,w,c
  5137  000DA2  241F               	addwf	precG@str^0,w,c
  5138  000DA4  6ED9               	movwf	fsr2l,c
  5139  000DA6  5035               	movf	(precG@i+1)^0,w,c
  5140  000DA8  2020               	addwfc	(precG@str+1)^0,w,c
  5141  000DAA  6EDA               	movwf	fsr2h,c
  5142  000DAC  0E30               	movlw	48
  5143  000DAE  18DE               	xorwf	postinc2,w,c
  5144  000DB0  A4D8               	btfss	status,2,c
  5145  000DB2  EFDD  F006         	goto	u9281
  5146  000DB6  EFDF  F006         	goto	u9280
  5147  000DBA                     u9281:
  5148  000DBA  EFE8  F006         	goto	l8116
  5149  000DBE                     u9280:
  5150  000DBE  502A               	movf	precG@digS^0,w,c
  5151  000DC0  102B               	iorwf	(precG@digS+1)^0,w,c
  5152  000DC2  B4D8               	btfsc	status,2,c
  5153  000DC4  EFE6  F006         	goto	u9291
  5154  000DC8  EFE8  F006         	goto	u9290
  5155  000DCC                     u9291:
  5156  000DCC  EF0A  F007         	goto	l8126
  5157  000DD0                     u9290:
  5158  000DD0                     l8116:
  5159                           
  5160                           ;src/print/format.c: 257:                 digS++;
  5161  000DD0  4A2A               	infsnz	precG@digS^0,f,c
  5162  000DD2  2A2B               	incf	(precG@digS+1)^0,f,c
  5163  000DD4                     
  5164                           ;src/print/format.c: 258:                 if (digS == 1)
  5165  000DD4  042A               	decf	precG@digS^0,w,c
  5166  000DD6  102B               	iorwf	(precG@digS+1)^0,w,c
  5167  000DD8  A4D8               	btfss	status,2,c
  5168  000DDA  EFF1  F006         	goto	u9301
  5169  000DDE  EFF3  F006         	goto	u9300
  5170  000DE2                     u9301:
  5171  000DE2  EF0A  F007         	goto	l8126
  5172  000DE6                     u9300:
  5173  000DE6                     
  5174                           ;src/print/format.c: 259:                     f = i;
  5175  000DE6  C034  F028         	movff	precG@i,precG@f
  5176  000DEA  C035  F029         	movff	precG@i+1,precG@f+1
  5177  000DEE  EF0A  F007         	goto	l8126
  5178  000DF2                     l8122:
  5179  000DF2  5034               	movf	precG@i^0,w,c
  5180  000DF4  241F               	addwf	precG@str^0,w,c
  5181  000DF6  6ED9               	movwf	fsr2l,c
  5182  000DF8  5035               	movf	(precG@i+1)^0,w,c
  5183  000DFA  2020               	addwfc	(precG@str+1)^0,w,c
  5184  000DFC  6EDA               	movwf	fsr2h,c
  5185  000DFE  0E65               	movlw	101
  5186  000E00  18DE               	xorwf	postinc2,w,c
  5187  000E02  A4D8               	btfss	status,2,c
  5188  000E04  EF06  F007         	goto	u9311
  5189  000E08  EF08  F007         	goto	u9310
  5190  000E0C                     u9311:
  5191  000E0C  EF0A  F007         	goto	l8126
  5192  000E10                     u9310:
  5193  000E10  EF1B  F007         	goto	l8130
  5194  000E14                     l8126:
  5195                           
  5196                           ;src/print/format.c: 264:     }
  5197  000E14  4A34               	infsnz	precG@i^0,f,c
  5198  000E16  2A35               	incf	(precG@i+1)^0,f,c
  5199  000E18                     l8128:
  5200  000E18  5034               	movf	precG@i^0,w,c
  5201  000E1A  5C2E               	subwf	precG@len^0,w,c
  5202  000E1C  502F               	movf	(precG@len+1)^0,w,c
  5203  000E1E  0A80               	xorlw	128
  5204  000E20  6E23               	movwf	??_precG^0,c
  5205  000E22  5035               	movf	(precG@i+1)^0,w,c
  5206  000E24  0A80               	xorlw	128
  5207  000E26  5823               	subwfb	??_precG^0,w,c
  5208  000E28  B0D8               	btfsc	status,0,c
  5209  000E2A  EF19  F007         	goto	u9321
  5210  000E2E  EF1B  F007         	goto	u9320
  5211  000E32                     u9321:
  5212  000E32  EFB4  F006         	goto	l8108
  5213  000E36                     u9320:
  5214  000E36                     l8130:
  5215                           
  5216                           ;src/print/format.c: 265:     for (i = k-1; i >= 0;i--) {
  5217  000E36  0EFF               	movlw	255
  5218  000E38  2432               	addwf	precG@k^0,w,c
  5219  000E3A  6E34               	movwf	precG@i^0,c
  5220  000E3C  0EFF               	movlw	255
  5221  000E3E  2033               	addwfc	(precG@k+1)^0,w,c
  5222  000E40  6E35               	movwf	(precG@i+1)^0,c
  5223  000E42  BE35               	btfsc	(precG@i+1)^0,7,c
  5224  000E44  EF28  F007         	goto	u9330
  5225  000E48  EF26  F007         	goto	u9331
  5226  000E4C                     u9331:
  5227  000E4C  EF2A  F007         	goto	l8134
  5228  000E50                     u9330:
  5229  000E50  EF75  F007         	goto	l8148
  5230  000E54                     l8134:
  5231                           
  5232                           ;src/print/format.c: 266:         if (str[i] == 48)
  5233  000E54  5034               	movf	precG@i^0,w,c
  5234  000E56  241F               	addwf	precG@str^0,w,c
  5235  000E58  6ED9               	movwf	fsr2l,c
  5236  000E5A  5035               	movf	(precG@i+1)^0,w,c
  5237  000E5C  2020               	addwfc	(precG@str+1)^0,w,c
  5238  000E5E  6EDA               	movwf	fsr2h,c
  5239  000E60  0E30               	movlw	48
  5240  000E62  18DE               	xorwf	postinc2,w,c
  5241  000E64  A4D8               	btfss	status,2,c
  5242  000E66  EF37  F007         	goto	u9341
  5243  000E6A  EF39  F007         	goto	u9340
  5244  000E6E                     u9341:
  5245  000E6E  EF3E  F007         	goto	l8138
  5246  000E72                     u9340:
  5247  000E72                     
  5248                           ;src/print/format.c: 267:             digS--;
  5249  000E72  062A               	decf	precG@digS^0,f,c
  5250  000E74  A0D8               	btfss	status,0,c
  5251  000E76  062B               	decf	(precG@digS+1)^0,f,c
  5252  000E78  EF6B  F007         	goto	l8144
  5253  000E7C                     l8138:
  5254  000E7C  5034               	movf	precG@i^0,w,c
  5255  000E7E  241F               	addwf	precG@str^0,w,c
  5256  000E80  6ED9               	movwf	fsr2l,c
  5257  000E82  5035               	movf	(precG@i+1)^0,w,c
  5258  000E84  2020               	addwfc	(precG@str+1)^0,w,c
  5259  000E86  6EDA               	movwf	fsr2h,c
  5260  000E88  0E30               	movlw	48
  5261  000E8A  64DF               	cpfsgt	indf2,c
  5262  000E8C  EF4A  F007         	goto	u9351
  5263  000E90  EF4C  F007         	goto	u9350
  5264  000E94                     u9351:
  5265  000E94  EF5A  F007         	goto	l8142
  5266  000E98                     u9350:
  5267  000E98  5034               	movf	precG@i^0,w,c
  5268  000E9A  241F               	addwf	precG@str^0,w,c
  5269  000E9C  6ED9               	movwf	fsr2l,c
  5270  000E9E  5035               	movf	(precG@i+1)^0,w,c
  5271  000EA0  2020               	addwfc	(precG@str+1)^0,w,c
  5272  000EA2  6EDA               	movwf	fsr2h,c
  5273  000EA4  0E39               	movlw	57
  5274  000EA6  64DF               	cpfsgt	indf2,c
  5275  000EA8  EF58  F007         	goto	u9361
  5276  000EAC  EF5A  F007         	goto	u9360
  5277  000EB0                     u9361:
  5278  000EB0  EF75  F007         	goto	l8148
  5279  000EB4                     u9360:
  5280  000EB4                     l8142:
  5281  000EB4  5034               	movf	precG@i^0,w,c
  5282  000EB6  241F               	addwf	precG@str^0,w,c
  5283  000EB8  6ED9               	movwf	fsr2l,c
  5284  000EBA  5035               	movf	(precG@i+1)^0,w,c
  5285  000EBC  2020               	addwfc	(precG@str+1)^0,w,c
  5286  000EBE  6EDA               	movwf	fsr2h,c
  5287  000EC0  0E2E               	movlw	46
  5288  000EC2  18DE               	xorwf	postinc2,w,c
  5289  000EC4  A4D8               	btfss	status,2,c
  5290  000EC6  EF67  F007         	goto	u9371
  5291  000ECA  EF69  F007         	goto	u9370
  5292  000ECE                     u9371:
  5293  000ECE  EF6B  F007         	goto	l8144
  5294  000ED2                     u9370:
  5295  000ED2  EF75  F007         	goto	l8148
  5296  000ED6                     l8144:
  5297                           
  5298                           ;src/print/format.c: 270:     }
  5299  000ED6  0634               	decf	precG@i^0,f,c
  5300  000ED8  A0D8               	btfss	status,0,c
  5301  000EDA  0635               	decf	(precG@i+1)^0,f,c
  5302  000EDC  BE35               	btfsc	(precG@i+1)^0,7,c
  5303  000EDE  EF75  F007         	goto	u9380
  5304  000EE2  EF73  F007         	goto	u9381
  5305  000EE6                     u9381:
  5306  000EE6  EF2A  F007         	goto	l8134
  5307  000EEA                     u9380:
  5308  000EEA                     l8148:
  5309                           
  5310                           ;src/print/format.c: 272:     if (digS > (*precision)) {
  5311  000EEA  C021  FFD9         	movff	precG@precision,fsr2l
  5312  000EEE  C022  FFDA         	movff	precG@precision+1,fsr2h
  5313  000EF2  502A               	movf	precG@digS^0,w,c
  5314  000EF4  5CDE               	subwf	postinc2,w,c
  5315  000EF6  50DE               	movf	postinc2,w,c
  5316  000EF8  0A80               	xorlw	128
  5317  000EFA  6E25               	movwf	(??_precG+2)^0,c
  5318  000EFC  502B               	movf	(precG@digS+1)^0,w,c
  5319  000EFE  0A80               	xorlw	128
  5320  000F00  5825               	subwfb	(??_precG+2)^0,w,c
  5321  000F02  B0D8               	btfsc	status,0,c
  5322  000F04  EF86  F007         	goto	u9391
  5323  000F08  EF88  F007         	goto	u9390
  5324  000F0C                     u9391:
  5325  000F0C  EF02  F009         	goto	l576
  5326  000F10                     u9390:
  5327  000F10                     
  5328                           ;src/print/format.c: 273:         i = f + (*precision);
  5329  000F10  C021  FFD9         	movff	precG@precision,fsr2l
  5330  000F14  C022  FFDA         	movff	precG@precision+1,fsr2h
  5331  000F18  CFDE F023          	movff	postinc2,??_precG
  5332  000F1C  CFDD F024          	movff	postdec2,??_precG+1
  5333  000F20  5028               	movf	precG@f^0,w,c
  5334  000F22  2423               	addwf	??_precG^0,w,c
  5335  000F24  6E34               	movwf	precG@i^0,c
  5336  000F26  5029               	movf	(precG@f+1)^0,w,c
  5337  000F28  2024               	addwfc	(??_precG+1)^0,w,c
  5338  000F2A  6E35               	movwf	(precG@i+1)^0,c
  5339  000F2C                     
  5340                           ;src/print/format.c: 275:         if (f < p && i >= p)
  5341  000F2C  5026               	movf	precG@p^0,w,c
  5342  000F2E  5C28               	subwf	precG@f^0,w,c
  5343  000F30  5029               	movf	(precG@f+1)^0,w,c
  5344  000F32  0A80               	xorlw	128
  5345  000F34  6E23               	movwf	??_precG^0,c
  5346  000F36  5027               	movf	(precG@p+1)^0,w,c
  5347  000F38  0A80               	xorlw	128
  5348  000F3A  5823               	subwfb	??_precG^0,w,c
  5349  000F3C  B0D8               	btfsc	status,0,c
  5350  000F3E  EFA3  F007         	goto	u9401
  5351  000F42  EFA5  F007         	goto	u9400
  5352  000F46                     u9401:
  5353  000F46  EFB6  F007         	goto	l8158
  5354  000F4A                     u9400:
  5355  000F4A  5026               	movf	precG@p^0,w,c
  5356  000F4C  5C34               	subwf	precG@i^0,w,c
  5357  000F4E  5035               	movf	(precG@i+1)^0,w,c
  5358  000F50  0A80               	xorlw	128
  5359  000F52  6E23               	movwf	??_precG^0,c
  5360  000F54  5027               	movf	(precG@p+1)^0,w,c
  5361  000F56  0A80               	xorlw	128
  5362  000F58  5823               	subwfb	??_precG^0,w,c
  5363  000F5A  A0D8               	btfss	status,0,c
  5364  000F5C  EFB2  F007         	goto	u9411
  5365  000F60  EFB4  F007         	goto	u9410
  5366  000F64                     u9411:
  5367  000F64  EFB6  F007         	goto	l8158
  5368  000F68                     u9410:
  5369  000F68                     
  5370                           ;src/print/format.c: 276:             i++;
  5371  000F68  4A34               	infsnz	precG@i^0,f,c
  5372  000F6A  2A35               	incf	(precG@i+1)^0,f,c
  5373  000F6C                     l8158:
  5374                           
  5375                           ;src/print/format.c: 278:         j = k - i;
  5376  000F6C  5034               	movf	precG@i^0,w,c
  5377  000F6E  5C32               	subwf	precG@k^0,w,c
  5378  000F70  6E30               	movwf	precG@j^0,c
  5379  000F72  5035               	movf	(precG@i+1)^0,w,c
  5380  000F74  5833               	subwfb	(precG@k+1)^0,w,c
  5381  000F76  6E31               	movwf	(precG@j+1)^0,c
  5382  000F78                     
  5383                           ;src/print/format.c: 284:         if (j > 0) {
  5384  000F78  BE31               	btfsc	(precG@j+1)^0,7,c
  5385  000F7A  EFC7  F007         	goto	u9421
  5386  000F7E  5031               	movf	(precG@j+1)^0,w,c
  5387  000F80  E108               	bnz	u9420
  5388  000F82  0430               	decf	precG@j^0,w,c
  5389  000F84  A0D8               	btfss	status,0,c
  5390  000F86  EFC7  F007         	goto	u9421
  5391  000F8A  EFC9  F007         	goto	u9420
  5392  000F8E                     u9421:
  5393  000F8E  EF54  F008         	goto	l8186
  5394  000F92                     u9420:
  5395  000F92                     
  5396                           ;src/print/format.c: 286:             if (roundStr(str, posE, i) == 1) {
  5397  000F92  C01F  F00E         	movff	precG@str,roundStr@decnum
  5398  000F96  C020  F00F         	movff	precG@str+1,roundStr@decnum+1
  5399  000F9A  C02C  F010         	movff	precG@posE,roundStr@e
  5400  000F9E  C02D  F011         	movff	precG@posE+1,roundStr@e+1
  5401  000FA2  C034  F012         	movff	precG@i,roundStr@prn
  5402  000FA6  C035  F013         	movff	precG@i+1,roundStr@prn+1
  5403  000FAA  ECC0  F012         	call	_roundStr	;wreg free
  5404  000FAE  040E               	decf	?_roundStr^0,w,c
  5405  000FB0  100F               	iorwf	(?_roundStr+1)^0,w,c
  5406  000FB2  A4D8               	btfss	status,2,c
  5407  000FB4  EFDE  F007         	goto	u9431
  5408  000FB8  EFE0  F007         	goto	u9430
  5409  000FBC                     u9431:
  5410  000FBC  EF29  F008         	goto	l8178
  5411  000FC0                     u9430:
  5412  000FC0                     
  5413                           ;src/print/format.c: 287:                 for (k = 0; k <= strlen(str);i++) {
  5414  000FC0  0E00               	movlw	0
  5415  000FC2  6E33               	movwf	(precG@k+1)^0,c
  5416  000FC4  0E00               	movlw	0
  5417  000FC6  6E32               	movwf	precG@k^0,c
  5418  000FC8  EF0A  F008         	goto	l8174
  5419  000FCC                     l8166:
  5420                           
  5421                           ;src/print/format.c: 288:                     if (str[k] >= 49 && str[k] <= 57) {
  5422  000FCC  5032               	movf	precG@k^0,w,c
  5423  000FCE  241F               	addwf	precG@str^0,w,c
  5424  000FD0  6ED9               	movwf	fsr2l,c
  5425  000FD2  5033               	movf	(precG@k+1)^0,w,c
  5426  000FD4  2020               	addwfc	(precG@str+1)^0,w,c
  5427  000FD6  6EDA               	movwf	fsr2h,c
  5428  000FD8  0E30               	movlw	48
  5429  000FDA  64DF               	cpfsgt	indf2,c
  5430  000FDC  EFF2  F007         	goto	u9441
  5431  000FE0  EFF4  F007         	goto	u9440
  5432  000FE4                     u9441:
  5433  000FE4  EF08  F008         	goto	l8172
  5434  000FE8                     u9440:
  5435  000FE8  5032               	movf	precG@k^0,w,c
  5436  000FEA  241F               	addwf	precG@str^0,w,c
  5437  000FEC  6ED9               	movwf	fsr2l,c
  5438  000FEE  5033               	movf	(precG@k+1)^0,w,c
  5439  000FF0  2020               	addwfc	(precG@str+1)^0,w,c
  5440  000FF2  6EDA               	movwf	fsr2h,c
  5441  000FF4  0E3A               	movlw	58
  5442  000FF6  60DF               	cpfslt	indf2,c
  5443  000FF8  EF00  F008         	goto	u9451
  5444  000FFC  EF02  F008         	goto	u9450
  5445  001000                     u9451:
  5446  001000  EF08  F008         	goto	l8172
  5447  001004                     u9450:
  5448  001004                     
  5449                           ;src/print/format.c: 289:                             f = k;
  5450  001004  C032  F028         	movff	precG@k,precG@f
  5451  001008  C033  F029         	movff	precG@k+1,precG@f+1
  5452                           
  5453                           ;src/print/format.c: 290:                             break;
  5454  00100C  EF1B  F008         	goto	l8176
  5455  001010                     l8172:
  5456                           
  5457                           ;src/print/format.c: 292:                 }
  5458  001010  4A34               	infsnz	precG@i^0,f,c
  5459  001012  2A35               	incf	(precG@i+1)^0,f,c
  5460  001014                     l8174:
  5461  001014  C01F  F004         	movff	precG@str,strlen@s
  5462  001018  C020  F005         	movff	precG@str+1,strlen@s+1
  5463  00101C  EC7E  F029         	call	_strlen	;wreg free
  5464  001020  5032               	movf	precG@k^0,w,c
  5465  001022  5C04               	subwf	?_strlen^0,w,c
  5466  001024  5033               	movf	(precG@k+1)^0,w,c
  5467  001026  5805               	subwfb	(?_strlen+1)^0,w,c
  5468  001028  B0D8               	btfsc	status,0,c
  5469  00102A  EF19  F008         	goto	u9461
  5470  00102E  EF1B  F008         	goto	u9460
  5471  001032                     u9461:
  5472  001032  EFE6  F007         	goto	l8166
  5473  001036                     u9460:
  5474  001036                     l8176:
  5475                           
  5476                           ;src/print/format.c: 293:                 i = f + (*precision);
  5477  001036  C021  FFD9         	movff	precG@precision,fsr2l
  5478  00103A  C022  FFDA         	movff	precG@precision+1,fsr2h
  5479  00103E  CFDE F023          	movff	postinc2,??_precG
  5480  001042  CFDD F024          	movff	postdec2,??_precG+1
  5481  001046  5028               	movf	precG@f^0,w,c
  5482  001048  2423               	addwf	??_precG^0,w,c
  5483  00104A  6E34               	movwf	precG@i^0,c
  5484  00104C  5029               	movf	(precG@f+1)^0,w,c
  5485  00104E  2024               	addwfc	(??_precG+1)^0,w,c
  5486  001050  6E35               	movwf	(precG@i+1)^0,c
  5487  001052                     l8178:
  5488                           
  5489                           ;src/print/format.c: 295:             for (k = i; k < len; k++)
  5490  001052  C034  F032         	movff	precG@i,precG@k
  5491  001056  C035  F033         	movff	precG@i+1,precG@k+1
  5492  00105A  EF45  F008         	goto	l8184
  5493  00105E                     l8180:
  5494                           
  5495                           ;src/print/format.c: 296:                 str[k] = str[k+j];
  5496  00105E  5032               	movf	precG@k^0,w,c
  5497  001060  241F               	addwf	precG@str^0,w,c
  5498  001062  6E23               	movwf	??_precG^0,c
  5499  001064  5033               	movf	(precG@k+1)^0,w,c
  5500  001066  2020               	addwfc	(precG@str+1)^0,w,c
  5501  001068  6E24               	movwf	(??_precG+1)^0,c
  5502  00106A  5030               	movf	precG@j^0,w,c
  5503  00106C  2423               	addwf	??_precG^0,w,c
  5504  00106E  6ED9               	movwf	fsr2l,c
  5505  001070  5031               	movf	(precG@j+1)^0,w,c
  5506  001072  2024               	addwfc	(??_precG+1)^0,w,c
  5507  001074  6EDA               	movwf	fsr2h,c
  5508  001076  5032               	movf	precG@k^0,w,c
  5509  001078  241F               	addwf	precG@str^0,w,c
  5510  00107A  6EE1               	movwf	fsr1l,c
  5511  00107C  5033               	movf	(precG@k+1)^0,w,c
  5512  00107E  2020               	addwfc	(precG@str+1)^0,w,c
  5513  001080  6EE2               	movwf	fsr1h,c
  5514  001082  CFDF FFE7          	movff	indf2,indf1
  5515  001086  4A32               	infsnz	precG@k^0,f,c
  5516  001088  2A33               	incf	(precG@k+1)^0,f,c
  5517  00108A                     l8184:
  5518  00108A  502E               	movf	precG@len^0,w,c
  5519  00108C  5C32               	subwf	precG@k^0,w,c
  5520  00108E  5033               	movf	(precG@k+1)^0,w,c
  5521  001090  0A80               	xorlw	128
  5522  001092  6E23               	movwf	??_precG^0,c
  5523  001094  502F               	movf	(precG@len+1)^0,w,c
  5524  001096  0A80               	xorlw	128
  5525  001098  5823               	subwfb	??_precG^0,w,c
  5526  00109A  A0D8               	btfss	status,0,c
  5527  00109C  EF52  F008         	goto	u9471
  5528  0010A0  EF54  F008         	goto	u9470
  5529  0010A4                     u9471:
  5530  0010A4  EF2F  F008         	goto	l8180
  5531  0010A8                     u9470:
  5532  0010A8                     l8186:
  5533                           
  5534                           ;src/print/format.c: 300:         if (numeral == 0) {
  5535  0010A8  505A               	movf	_numeral^0,w,c
  5536  0010AA  A4D8               	btfss	status,2,c
  5537  0010AC  EF5A  F008         	goto	u9481
  5538  0010B0  EF5C  F008         	goto	u9480
  5539  0010B4                     u9481:
  5540  0010B4  EF02  F009         	goto	l576
  5541  0010B8                     u9480:
  5542  0010B8                     
  5543                           ;src/print/format.c: 301:             p = posc(str,'.');
  5544  0010B8  C01F  F008         	movff	precG@str,posc@str
  5545  0010BC  C020  F009         	movff	precG@str+1,posc@str+1
  5546  0010C0  0E2E               	movlw	46
  5547  0010C2  6E0A               	movwf	posc@c^0,c
  5548  0010C4  ECCC  F026         	call	_posc	;wreg free
  5549  0010C8  C008  F026         	movff	?_posc,precG@p
  5550  0010CC  C009  F027         	movff	?_posc+1,precG@p+1
  5551                           
  5552                           ;src/print/format.c: 302:             len = strlen(str);
  5553  0010D0  C01F  F004         	movff	precG@str,strlen@s
  5554  0010D4  C020  F005         	movff	precG@str+1,strlen@s+1
  5555  0010D8  EC7E  F029         	call	_strlen	;wreg free
  5556  0010DC  C004  F02E         	movff	?_strlen,precG@len
  5557  0010E0  C005  F02F         	movff	?_strlen+1,precG@len+1
  5558                           
  5559                           ;src/print/format.c: 303:             posE = posc(str,'e');
  5560  0010E4  C01F  F008         	movff	precG@str,posc@str
  5561  0010E8  C020  F009         	movff	precG@str+1,posc@str+1
  5562  0010EC  0E65               	movlw	101
  5563  0010EE  6E0A               	movwf	posc@c^0,c
  5564  0010F0  ECCC  F026         	call	_posc	;wreg free
  5565  0010F4  C008  F02C         	movff	?_posc,precG@posE
  5566  0010F8  C009  F02D         	movff	?_posc+1,precG@posE+1
  5567  0010FC                     
  5568                           ;src/print/format.c: 304:             k = (posE > 0)? posE : len;
  5569  0010FC  BE2D               	btfsc	(precG@posE+1)^0,7,c
  5570  0010FE  EF8B  F008         	goto	u9490
  5571  001102  502D               	movf	(precG@posE+1)^0,w,c
  5572  001104  E106               	bnz	u9491
  5573  001106  042C               	decf	precG@posE^0,w,c
  5574  001108  B0D8               	btfsc	status,0,c
  5575  00110A  EF89  F008         	goto	u9491
  5576  00110E  EF8B  F008         	goto	u9490
  5577  001112                     u9491:
  5578  001112  EF91  F008         	goto	l565
  5579  001116                     u9490:
  5580  001116  C02E  F032         	movff	precG@len,precG@k
  5581  00111A  C02F  F033         	movff	precG@len+1,precG@k+1
  5582  00111E  EF95  F008         	goto	l8194
  5583  001122                     l565:
  5584  001122  C02C  F032         	movff	precG@posE,precG@k
  5585  001126  C02D  F033         	movff	precG@posE+1,precG@k+1
  5586  00112A                     l8194:
  5587                           
  5588                           ;src/print/format.c: 306:             for (j = k-1; j >= p; j--){
  5589  00112A  0EFF               	movlw	255
  5590  00112C  2432               	addwf	precG@k^0,w,c
  5591  00112E  6E30               	movwf	precG@j^0,c
  5592  001130  0EFF               	movlw	255
  5593  001132  2033               	addwfc	(precG@k+1)^0,w,c
  5594  001134  6E31               	movwf	(precG@j+1)^0,c
  5595  001136  EFF3  F008         	goto	l8216
  5596  00113A                     l8196:
  5597                           
  5598                           ;src/print/format.c: 307:                 if (str[j] >= 49 && str[j] <= 57)
  5599  00113A  5030               	movf	precG@j^0,w,c
  5600  00113C  241F               	addwf	precG@str^0,w,c
  5601  00113E  6ED9               	movwf	fsr2l,c
  5602  001140  5031               	movf	(precG@j+1)^0,w,c
  5603  001142  2020               	addwfc	(precG@str+1)^0,w,c
  5604  001144  6EDA               	movwf	fsr2h,c
  5605  001146  0E30               	movlw	48
  5606  001148  64DF               	cpfsgt	indf2,c
  5607  00114A  EFA9  F008         	goto	u9501
  5608  00114E  EFAB  F008         	goto	u9500
  5609  001152                     u9501:
  5610  001152  EFBB  F008         	goto	l8204
  5611  001156                     u9500:
  5612  001156  5030               	movf	precG@j^0,w,c
  5613  001158  241F               	addwf	precG@str^0,w,c
  5614  00115A  6ED9               	movwf	fsr2l,c
  5615  00115C  5031               	movf	(precG@j+1)^0,w,c
  5616  00115E  2020               	addwfc	(precG@str+1)^0,w,c
  5617  001160  6EDA               	movwf	fsr2h,c
  5618  001162  0E3A               	movlw	58
  5619  001164  60DF               	cpfslt	indf2,c
  5620  001166  EFB7  F008         	goto	u9511
  5621  00116A  EFB9  F008         	goto	u9510
  5622  00116E                     u9511:
  5623  00116E  EFBB  F008         	goto	l8204
  5624  001172                     u9510:
  5625  001172  EF02  F009         	goto	l576
  5626  001176                     l8204:
  5627                           
  5628                           ;src/print/format.c: 310:                     len = strlen(str);
  5629  001176  C01F  F004         	movff	precG@str,strlen@s
  5630  00117A  C020  F005         	movff	precG@str+1,strlen@s+1
  5631  00117E  EC7E  F029         	call	_strlen	;wreg free
  5632  001182  C004  F02E         	movff	?_strlen,precG@len
  5633  001186  C005  F02F         	movff	?_strlen+1,precG@len+1
  5634  00118A                     
  5635                           ;src/print/format.c: 311:                     for(i = j; i <= len; i++) {
  5636  00118A  C030  F034         	movff	precG@j,precG@i
  5637  00118E  C031  F035         	movff	precG@j+1,precG@i+1
  5638  001192  EFE1  F008         	goto	l8212
  5639  001196                     l8208:
  5640                           
  5641                           ;src/print/format.c: 312:                         str[i] = str[i+1];
  5642  001196  5034               	movf	precG@i^0,w,c
  5643  001198  241F               	addwf	precG@str^0,w,c
  5644  00119A  6E23               	movwf	??_precG^0,c
  5645  00119C  5035               	movf	(precG@i+1)^0,w,c
  5646  00119E  2020               	addwfc	(precG@str+1)^0,w,c
  5647  0011A0  6E24               	movwf	(??_precG+1)^0,c
  5648  0011A2  0E01               	movlw	1
  5649  0011A4  2423               	addwf	??_precG^0,w,c
  5650  0011A6  6ED9               	movwf	fsr2l,c
  5651  0011A8  0E00               	movlw	0
  5652  0011AA  2024               	addwfc	(??_precG+1)^0,w,c
  5653  0011AC  6EDA               	movwf	fsr2h,c
  5654  0011AE  5034               	movf	precG@i^0,w,c
  5655  0011B0  241F               	addwf	precG@str^0,w,c
  5656  0011B2  6EE1               	movwf	fsr1l,c
  5657  0011B4  5035               	movf	(precG@i+1)^0,w,c
  5658  0011B6  2020               	addwfc	(precG@str+1)^0,w,c
  5659  0011B8  6EE2               	movwf	fsr1h,c
  5660  0011BA  CFDF FFE7          	movff	indf2,indf1
  5661  0011BE                     
  5662                           ;src/print/format.c: 313:                     }
  5663  0011BE  4A34               	infsnz	precG@i^0,f,c
  5664  0011C0  2A35               	incf	(precG@i+1)^0,f,c
  5665  0011C2                     l8212:
  5666  0011C2  5034               	movf	precG@i^0,w,c
  5667  0011C4  5C2E               	subwf	precG@len^0,w,c
  5668  0011C6  502F               	movf	(precG@len+1)^0,w,c
  5669  0011C8  0A80               	xorlw	128
  5670  0011CA  6E23               	movwf	??_precG^0,c
  5671  0011CC  5035               	movf	(precG@i+1)^0,w,c
  5672  0011CE  0A80               	xorlw	128
  5673  0011D0  5823               	subwfb	??_precG^0,w,c
  5674  0011D2  B0D8               	btfsc	status,0,c
  5675  0011D4  EFEE  F008         	goto	u9521
  5676  0011D8  EFF0  F008         	goto	u9520
  5677  0011DC                     u9521:
  5678  0011DC  EFCB  F008         	goto	l8208
  5679  0011E0                     u9520:
  5680  0011E0                     
  5681                           ;src/print/format.c: 315:             }
  5682  0011E0  0630               	decf	precG@j^0,f,c
  5683  0011E2  A0D8               	btfss	status,0,c
  5684  0011E4  0631               	decf	(precG@j+1)^0,f,c
  5685  0011E6                     l8216:
  5686  0011E6  5026               	movf	precG@p^0,w,c
  5687  0011E8  5C30               	subwf	precG@j^0,w,c
  5688  0011EA  5031               	movf	(precG@j+1)^0,w,c
  5689  0011EC  0A80               	xorlw	128
  5690  0011EE  6E23               	movwf	??_precG^0,c
  5691  0011F0  5027               	movf	(precG@p+1)^0,w,c
  5692  0011F2  0A80               	xorlw	128
  5693  0011F4  5823               	subwfb	??_precG^0,w,c
  5694  0011F6  B0D8               	btfsc	status,0,c
  5695  0011F8  EF00  F009         	goto	u9531
  5696  0011FC  EF02  F009         	goto	u9530
  5697  001200                     u9531:
  5698  001200  EF9D  F008         	goto	l8196
  5699  001204                     u9530:
  5700  001204                     l576:
  5701  001204  0012               	return		;funcret
  5702  001206                     __end_of_precG:
  5703                           	opt callstack 0
  5704                           
  5705 ;; *************** function _precF *****************
  5706 ;; Defined at:
  5707 ;;		line 173 in file "src/print/format.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  str             2   30[COMRAM] PTR unsigned char 
  5710 ;;		 -> my_vsprintf@buffer(64), 
  5711 ;;  precision       2   32[COMRAM] PTR int 
  5712 ;;		 -> my_vsprintf@prec(2), 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  k               2   45[COMRAM] int 
  5715 ;;  len             2   43[COMRAM] int 
  5716 ;;  i               2   41[COMRAM] int 
  5717 ;;  p               2   39[COMRAM] int 
  5718 ;;  j               2   37[COMRAM] int 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5728 ;;      Params:         4       0       0       0       0       0       0       0       0
  5729 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5730 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5731 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5732 ;;Total ram usage:       17 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    5
  5735 ;; This function calls:
  5736 ;;		_posc
  5737 ;;		_roundStr
  5738 ;;		_searchc
  5739 ;;		_strlen
  5740 ;; This function is called by:
  5741 ;;		_my_vsprintf
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text13
  5746  0036EC                     __ptext13:
  5747                           	opt callstack 0
  5748  0036EC                     _precF:
  5749                           	opt callstack 22
  5750  0036EC                     
  5751                           ;src/print/format.c: 174:     int i, j, k;;src/print/format.c: 175:     int len = strlen
      +                          (str);
  5752  0036EC  C01F  F004         	movff	precF@str,strlen@s
  5753  0036F0  C020  F005         	movff	precF@str+1,strlen@s+1
  5754  0036F4  EC7E  F029         	call	_strlen	;wreg free
  5755  0036F8  C004  F02C         	movff	?_strlen,precF@len
  5756  0036FC  C005  F02D         	movff	?_strlen+1,precF@len+1
  5757                           
  5758                           ;src/print/format.c: 176:     int p = posc(str,'.');
  5759  003700  C01F  F008         	movff	precF@str,posc@str
  5760  003704  C020  F009         	movff	precF@str+1,posc@str+1
  5761  003708  0E2E               	movlw	46
  5762  00370A  6E0A               	movwf	posc@c^0,c
  5763  00370C  ECCC  F026         	call	_posc	;wreg free
  5764  003710  C008  F028         	movff	?_posc,precF@p
  5765  003714  C009  F029         	movff	?_posc+1,precF@p+1
  5766  003718                     
  5767                           ;src/print/format.c: 179:     if ((*precision) < 0)
  5768  003718  C021  FFD9         	movff	precF@precision,fsr2l
  5769  00371C  C022  FFDA         	movff	precF@precision+1,fsr2h
  5770  003720  0E01               	movlw	1
  5771  003722  BEDB               	btfsc	plusw2,7,c
  5772  003724  EF98  F01B         	goto	u9080
  5773  003728  EF96  F01B         	goto	u9081
  5774  00372C                     u9081:
  5775  00372C  EFA0  F01B         	goto	l8018
  5776  003730                     u9080:
  5777  003730                     
  5778                           ;src/print/format.c: 180:         (*precision) = 4;
  5779  003730  C021  FFD9         	movff	precF@precision,fsr2l
  5780  003734  C022  FFDA         	movff	precF@precision+1,fsr2h
  5781  003738  0E04               	movlw	4
  5782  00373A  6EDE               	movwf	postinc2,c
  5783  00373C  0E00               	movlw	0
  5784  00373E  6EDD               	movwf	postdec2,c
  5785  003740                     l8018:
  5786                           
  5787                           ;src/print/format.c: 182:     i = p + (*precision) + 1;
  5788  003740  C021  FFD9         	movff	precF@precision,fsr2l
  5789  003744  C022  FFDA         	movff	precF@precision+1,fsr2h
  5790  003748  CFDE F023          	movff	postinc2,??_precF
  5791  00374C  CFDD F024          	movff	postdec2,??_precF+1
  5792  003750  5028               	movf	precF@p^0,w,c
  5793  003752  2623               	addwf	??_precF^0,f,c
  5794  003754  5029               	movf	(precF@p+1)^0,w,c
  5795  003756  2224               	addwfc	(??_precF+1)^0,f,c
  5796  003758  0E01               	movlw	1
  5797  00375A  2423               	addwf	??_precF^0,w,c
  5798  00375C  6E2A               	movwf	precF@i^0,c
  5799  00375E  0E00               	movlw	0
  5800  003760  2024               	addwfc	(??_precF+1)^0,w,c
  5801  003762  6E2B               	movwf	(precF@i+1)^0,c
  5802  003764                     
  5803                           ;src/print/format.c: 183:     j = len - i;
  5804  003764  502A               	movf	precF@i^0,w,c
  5805  003766  5C2C               	subwf	precF@len^0,w,c
  5806  003768  6E26               	movwf	precF@j^0,c
  5807  00376A  502B               	movf	(precF@i+1)^0,w,c
  5808  00376C  582D               	subwfb	(precF@len+1)^0,w,c
  5809  00376E  6E27               	movwf	(precF@j+1)^0,c
  5810  003770                     
  5811                           ;src/print/format.c: 186:     if(j > 0) {
  5812  003770  BE27               	btfsc	(precF@j+1)^0,7,c
  5813  003772  EFC3  F01B         	goto	u9091
  5814  003776  5027               	movf	(precF@j+1)^0,w,c
  5815  003778  E108               	bnz	u9090
  5816  00377A  0426               	decf	precF@j^0,w,c
  5817  00377C  A0D8               	btfss	status,0,c
  5818  00377E  EFC3  F01B         	goto	u9091
  5819  003782  EFC5  F01B         	goto	u9090
  5820  003786                     u9091:
  5821  003786  EF20  F01C         	goto	l8038
  5822  00378A                     u9090:
  5823  00378A                     
  5824                           ;src/print/format.c: 187:         roundStr(str, -1, i);
  5825  00378A  C01F  F00E         	movff	precF@str,roundStr@decnum
  5826  00378E  C020  F00F         	movff	precF@str+1,roundStr@decnum+1
  5827  003792  0EFF               	movlw	255
  5828  003794  6E11               	movwf	(roundStr@e+1)^0,c
  5829  003796  6810               	setf	roundStr@e^0,c
  5830  003798  C02A  F012         	movff	precF@i,roundStr@prn
  5831  00379C  C02B  F013         	movff	precF@i+1,roundStr@prn+1
  5832  0037A0  ECC0  F012         	call	_roundStr	;wreg free
  5833  0037A4                     
  5834                           ;src/print/format.c: 188:         i = ((*precision) == 0 && numeral == 0)? p : (p + (*pr
      +                          ecision) + 1);
  5835  0037A4  C021  FFD9         	movff	precF@precision,fsr2l
  5836  0037A8  C022  FFDA         	movff	precF@precision+1,fsr2h
  5837  0037AC  50DE               	movf	postinc2,w,c
  5838  0037AE  10DE               	iorwf	postinc2,w,c
  5839  0037B0  A4D8               	btfss	status,2,c
  5840  0037B2  EFDD  F01B         	goto	u9101
  5841  0037B6  EFDF  F01B         	goto	u9100
  5842  0037BA                     u9101:
  5843  0037BA  EFE7  F01B         	goto	l8030
  5844  0037BE                     u9100:
  5845  0037BE  505A               	movf	_numeral^0,w,c
  5846  0037C0  B4D8               	btfsc	status,2,c
  5847  0037C2  EFE5  F01B         	goto	u9111
  5848  0037C6  EFE7  F01B         	goto	u9110
  5849  0037CA                     u9111:
  5850  0037CA  EFFB  F01B         	goto	l496
  5851  0037CE                     u9110:
  5852  0037CE                     l8030:
  5853  0037CE  C021  FFD9         	movff	precF@precision,fsr2l
  5854  0037D2  C022  FFDA         	movff	precF@precision+1,fsr2h
  5855  0037D6  CFDE F023          	movff	postinc2,??_precF
  5856  0037DA  CFDD F024          	movff	postdec2,??_precF+1
  5857  0037DE  5028               	movf	precF@p^0,w,c
  5858  0037E0  2623               	addwf	??_precF^0,f,c
  5859  0037E2  5029               	movf	(precF@p+1)^0,w,c
  5860  0037E4  2224               	addwfc	(??_precF+1)^0,f,c
  5861  0037E6  0E01               	movlw	1
  5862  0037E8  2423               	addwf	??_precF^0,w,c
  5863  0037EA  6E2A               	movwf	precF@i^0,c
  5864  0037EC  0E00               	movlw	0
  5865  0037EE  2024               	addwfc	(??_precF+1)^0,w,c
  5866  0037F0  6E2B               	movwf	(precF@i+1)^0,c
  5867  0037F2  EFFF  F01B         	goto	l498
  5868  0037F6                     l496:
  5869  0037F6  C028  F02A         	movff	precF@p,precF@i
  5870  0037FA  C029  F02B         	movff	precF@p+1,precF@i+1
  5871  0037FE                     l498:
  5872                           
  5873                           ;src/print/format.c: 189:         for (k = i; k < len; k++)
  5874  0037FE  C02A  F02E         	movff	precF@i,precF@k
  5875  003802  C02B  F02F         	movff	precF@i+1,precF@k+1
  5876  003806  EF0F  F01C         	goto	l8036
  5877  00380A                     l8032:
  5878                           
  5879                           ;src/print/format.c: 190:             str[k] = 0;
  5880  00380A  502E               	movf	precF@k^0,w,c
  5881  00380C  241F               	addwf	precF@str^0,w,c
  5882  00380E  6ED9               	movwf	fsr2l,c
  5883  003810  502F               	movf	(precF@k+1)^0,w,c
  5884  003812  2020               	addwfc	(precF@str+1)^0,w,c
  5885  003814  6EDA               	movwf	fsr2h,c
  5886  003816  0E00               	movlw	0
  5887  003818  6EDF               	movwf	indf2,c
  5888  00381A  4A2E               	infsnz	precF@k^0,f,c
  5889  00381C  2A2F               	incf	(precF@k+1)^0,f,c
  5890  00381E                     l8036:
  5891  00381E  502C               	movf	precF@len^0,w,c
  5892  003820  5C2E               	subwf	precF@k^0,w,c
  5893  003822  502F               	movf	(precF@k+1)^0,w,c
  5894  003824  0A80               	xorlw	128
  5895  003826  6E23               	movwf	??_precF^0,c
  5896  003828  502D               	movf	(precF@len+1)^0,w,c
  5897  00382A  0A80               	xorlw	128
  5898  00382C  5823               	subwfb	??_precF^0,w,c
  5899  00382E  A0D8               	btfss	status,0,c
  5900  003830  EF1C  F01C         	goto	u9121
  5901  003834  EF1E  F01C         	goto	u9120
  5902  003838                     u9121:
  5903  003838  EF05  F01C         	goto	l8032
  5904  00383C                     u9120:
  5905  00383C  EF5C  F01C         	goto	l509
  5906  003840                     l8038:
  5907  003840  BE27               	btfsc	(precF@j+1)^0,7,c
  5908  003842  EF27  F01C         	goto	u9130
  5909  003846  EF25  F01C         	goto	u9131
  5910  00384A                     u9131:
  5911  00384A  EF5C  F01C         	goto	l509
  5912  00384E                     u9130:
  5913  00384E  C01F  F008         	movff	precF@str,searchc@str
  5914  003852  C020  F009         	movff	precF@str+1,searchc@str+1
  5915  003856  0E2E               	movlw	46
  5916  003858  6E0A               	movwf	searchc@c^0,c
  5917  00385A  EC5C  F027         	call	_searchc	;wreg free
  5918  00385E  0900               	iorlw	0
  5919  003860  B4D8               	btfsc	status,2,c
  5920  003862  EF35  F01C         	goto	u9141
  5921  003866  EF37  F01C         	goto	u9140
  5922  00386A                     u9141:
  5923  00386A  EF5C  F01C         	goto	l509
  5924  00386E                     u9140:
  5925  00386E                     
  5926                           ;src/print/format.c: 194:         for (k = len; k < len + (j * -1); k++)
  5927  00386E  C02C  F02E         	movff	precF@len,precF@k
  5928  003872  C02D  F02F         	movff	precF@len+1,precF@k+1
  5929  003876  EF47  F01C         	goto	l8048
  5930  00387A                     l8044:
  5931                           
  5932                           ;src/print/format.c: 195:             str[k] = '0';
  5933  00387A  502E               	movf	precF@k^0,w,c
  5934  00387C  241F               	addwf	precF@str^0,w,c
  5935  00387E  6ED9               	movwf	fsr2l,c
  5936  003880  502F               	movf	(precF@k+1)^0,w,c
  5937  003882  2020               	addwfc	(precF@str+1)^0,w,c
  5938  003884  6EDA               	movwf	fsr2h,c
  5939  003886  0E30               	movlw	48
  5940  003888  6EDF               	movwf	indf2,c
  5941  00388A  4A2E               	infsnz	precF@k^0,f,c
  5942  00388C  2A2F               	incf	(precF@k+1)^0,f,c
  5943  00388E                     l8048:
  5944  00388E  5026               	movf	precF@j^0,w,c
  5945  003890  5C2C               	subwf	precF@len^0,w,c
  5946  003892  6E23               	movwf	??_precF^0,c
  5947  003894  5027               	movf	(precF@j+1)^0,w,c
  5948  003896  582D               	subwfb	(precF@len+1)^0,w,c
  5949  003898  6E24               	movwf	(??_precF+1)^0,c
  5950  00389A  5023               	movf	??_precF^0,w,c
  5951  00389C  5C2E               	subwf	precF@k^0,w,c
  5952  00389E  502F               	movf	(precF@k+1)^0,w,c
  5953  0038A0  0A80               	xorlw	128
  5954  0038A2  6E25               	movwf	(??_precF+2)^0,c
  5955  0038A4  5024               	movf	(??_precF+1)^0,w,c
  5956  0038A6  0A80               	xorlw	128
  5957  0038A8  5825               	subwfb	(??_precF+2)^0,w,c
  5958  0038AA  A0D8               	btfss	status,0,c
  5959  0038AC  EF5A  F01C         	goto	u9151
  5960  0038B0  EF5C  F01C         	goto	u9150
  5961  0038B4                     u9151:
  5962  0038B4  EF3D  F01C         	goto	l8044
  5963  0038B8                     u9150:
  5964  0038B8                     l509:
  5965  0038B8  0012               	return		;funcret
  5966  0038BA                     __end_of_precF:
  5967                           	opt callstack 0
  5968                           
  5969 ;; *************** function _precE *****************
  5970 ;; Defined at:
  5971 ;;		line 202 in file "src/print/format.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  str             2   30[COMRAM] PTR unsigned char 
  5974 ;;		 -> my_vsprintf@buffer(64), 
  5975 ;;  precision       2   32[COMRAM] PTR int 
  5976 ;;		 -> my_vsprintf@prec(2), 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  k               2   46[COMRAM] int 
  5979 ;;  j               2   44[COMRAM] int 
  5980 ;;  i               2   42[COMRAM] int 
  5981 ;;  posE            2   40[COMRAM] int 
  5982 ;;  len             2   38[COMRAM] int 
  5983 ;;  p               2   36[COMRAM] int 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5993 ;;      Params:         4       0       0       0       0       0       0       0       0
  5994 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5995 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5996 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5997 ;;Total ram usage:       18 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    5
  6000 ;; This function calls:
  6001 ;;		_posc
  6002 ;;		_roundStr
  6003 ;;		_strlen
  6004 ;; This function is called by:
  6005 ;;		_my_vsprintf
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text14
  6010  0034E2                     __ptext14:
  6011                           	opt callstack 0
  6012  0034E2                     _precE:
  6013                           	opt callstack 22
  6014  0034E2                     
  6015                           ;src/print/format.c: 203:     int i, j, k;;src/print/format.c: 204:     int len = strlen
      +                          (str);
  6016  0034E2  C01F  F004         	movff	precE@str,strlen@s
  6017  0034E6  C020  F005         	movff	precE@str+1,strlen@s+1
  6018  0034EA  EC7E  F029         	call	_strlen	;wreg free
  6019  0034EE  C004  F027         	movff	?_strlen,precE@len
  6020  0034F2  C005  F028         	movff	?_strlen+1,precE@len+1
  6021                           
  6022                           ;src/print/format.c: 205:     int posE = posc(str,'e');
  6023  0034F6  C01F  F008         	movff	precE@str,posc@str
  6024  0034FA  C020  F009         	movff	precE@str+1,posc@str+1
  6025  0034FE  0E65               	movlw	101
  6026  003500  6E0A               	movwf	posc@c^0,c
  6027  003502  ECCC  F026         	call	_posc	;wreg free
  6028  003506  C008  F029         	movff	?_posc,precE@posE
  6029  00350A  C009  F02A         	movff	?_posc+1,precE@posE+1
  6030                           
  6031                           ;src/print/format.c: 206:     int p = posc(str,'.');
  6032  00350E  C01F  F008         	movff	precE@str,posc@str
  6033  003512  C020  F009         	movff	precE@str+1,posc@str+1
  6034  003516  0E2E               	movlw	46
  6035  003518  6E0A               	movwf	posc@c^0,c
  6036  00351A  ECCC  F026         	call	_posc	;wreg free
  6037  00351E  C008  F025         	movff	?_posc,precE@p
  6038  003522  C009  F026         	movff	?_posc+1,precE@p+1
  6039  003526                     
  6040                           ;src/print/format.c: 209:     if ((*precision) < 0)
  6041  003526  C021  FFD9         	movff	precE@precision,fsr2l
  6042  00352A  C022  FFDA         	movff	precE@precision+1,fsr2h
  6043  00352E  0E01               	movlw	1
  6044  003530  BEDB               	btfsc	plusw2,7,c
  6045  003532  EF9F  F01A         	goto	u9160
  6046  003536  EF9D  F01A         	goto	u9161
  6047  00353A                     u9161:
  6048  00353A  EFA7  F01A         	goto	l8056
  6049  00353E                     u9160:
  6050  00353E                     
  6051                           ;src/print/format.c: 210:         (*precision) = 4;
  6052  00353E  C021  FFD9         	movff	precE@precision,fsr2l
  6053  003542  C022  FFDA         	movff	precE@precision+1,fsr2h
  6054  003546  0E04               	movlw	4
  6055  003548  6EDE               	movwf	postinc2,c
  6056  00354A  0E00               	movlw	0
  6057  00354C  6EDD               	movwf	postdec2,c
  6058  00354E                     l8056:
  6059                           
  6060                           ;src/print/format.c: 212:     i = p + (*precision) + 1;
  6061  00354E  C021  FFD9         	movff	precE@precision,fsr2l
  6062  003552  C022  FFDA         	movff	precE@precision+1,fsr2h
  6063  003556  CFDE F023          	movff	postinc2,??_precE
  6064  00355A  CFDD F024          	movff	postdec2,??_precE+1
  6065  00355E  5025               	movf	precE@p^0,w,c
  6066  003560  2623               	addwf	??_precE^0,f,c
  6067  003562  5026               	movf	(precE@p+1)^0,w,c
  6068  003564  2224               	addwfc	(??_precE+1)^0,f,c
  6069  003566  0E01               	movlw	1
  6070  003568  2423               	addwf	??_precE^0,w,c
  6071  00356A  6E2B               	movwf	precE@i^0,c
  6072  00356C  0E00               	movlw	0
  6073  00356E  2024               	addwfc	(??_precE+1)^0,w,c
  6074  003570  6E2C               	movwf	(precE@i+1)^0,c
  6075  003572                     
  6076                           ;src/print/format.c: 213:     j = posE - i;
  6077  003572  502B               	movf	precE@i^0,w,c
  6078  003574  5C29               	subwf	precE@posE^0,w,c
  6079  003576  6E2D               	movwf	precE@j^0,c
  6080  003578  502C               	movf	(precE@i+1)^0,w,c
  6081  00357A  582A               	subwfb	(precE@posE+1)^0,w,c
  6082  00357C  6E2E               	movwf	(precE@j+1)^0,c
  6083  00357E                     
  6084                           ;src/print/format.c: 216:     if (j > 0) {
  6085  00357E  BE2E               	btfsc	(precE@j+1)^0,7,c
  6086  003580  EFCA  F01A         	goto	u9171
  6087  003584  502E               	movf	(precE@j+1)^0,w,c
  6088  003586  E108               	bnz	u9170
  6089  003588  042D               	decf	precE@j^0,w,c
  6090  00358A  A0D8               	btfss	status,0,c
  6091  00358C  EFCA  F01A         	goto	u9171
  6092  003590  EFCC  F01A         	goto	u9170
  6093  003594                     u9171:
  6094  003594  EF21  F01B         	goto	l8078
  6095  003598                     u9170:
  6096  003598                     
  6097                           ;src/print/format.c: 217:         roundStr(str, posE, i);
  6098  003598  C01F  F00E         	movff	precE@str,roundStr@decnum
  6099  00359C  C020  F00F         	movff	precE@str+1,roundStr@decnum+1
  6100  0035A0  C029  F010         	movff	precE@posE,roundStr@e
  6101  0035A4  C02A  F011         	movff	precE@posE+1,roundStr@e+1
  6102  0035A8  C02B  F012         	movff	precE@i,roundStr@prn
  6103  0035AC  C02C  F013         	movff	precE@i+1,roundStr@prn+1
  6104  0035B0  ECC0  F012         	call	_roundStr	;wreg free
  6105  0035B4                     
  6106                           ;src/print/format.c: 218:         if((*precision) == 0 && numeral == 0){
  6107  0035B4  C021  FFD9         	movff	precE@precision,fsr2l
  6108  0035B8  C022  FFDA         	movff	precE@precision+1,fsr2h
  6109  0035BC  50DE               	movf	postinc2,w,c
  6110  0035BE  10DE               	iorwf	postinc2,w,c
  6111  0035C0  A4D8               	btfss	status,2,c
  6112  0035C2  EFE5  F01A         	goto	u9181
  6113  0035C6  EFE7  F01A         	goto	u9180
  6114  0035CA                     u9181:
  6115  0035CA  EFF4  F01A         	goto	l8070
  6116  0035CE                     u9180:
  6117  0035CE  505A               	movf	_numeral^0,w,c
  6118  0035D0  A4D8               	btfss	status,2,c
  6119  0035D2  EFED  F01A         	goto	u9191
  6120  0035D6  EFEF  F01A         	goto	u9190
  6121  0035DA                     u9191:
  6122  0035DA  EFF4  F01A         	goto	l8070
  6123  0035DE                     u9190:
  6124  0035DE                     
  6125                           ;src/print/format.c: 219:             i--;
  6126  0035DE  062B               	decf	precE@i^0,f,c
  6127  0035E0  A0D8               	btfss	status,0,c
  6128  0035E2  062C               	decf	(precE@i+1)^0,f,c
  6129                           
  6130                           ;src/print/format.c: 220:             j++;
  6131  0035E4  4A2D               	infsnz	precE@j^0,f,c
  6132  0035E6  2A2E               	incf	(precE@j+1)^0,f,c
  6133  0035E8                     l8070:
  6134                           
  6135                           ;src/print/format.c: 222:         for (k = i; k < len; k++)
  6136  0035E8  C02B  F02F         	movff	precE@i,precE@k
  6137  0035EC  C02C  F030         	movff	precE@i+1,precE@k+1
  6138  0035F0  EF10  F01B         	goto	l8076
  6139  0035F4                     l8072:
  6140                           
  6141                           ;src/print/format.c: 223:             str[k] = str[k+j];
  6142  0035F4  502F               	movf	precE@k^0,w,c
  6143  0035F6  241F               	addwf	precE@str^0,w,c
  6144  0035F8  6E23               	movwf	??_precE^0,c
  6145  0035FA  5030               	movf	(precE@k+1)^0,w,c
  6146  0035FC  2020               	addwfc	(precE@str+1)^0,w,c
  6147  0035FE  6E24               	movwf	(??_precE+1)^0,c
  6148  003600  502D               	movf	precE@j^0,w,c
  6149  003602  2423               	addwf	??_precE^0,w,c
  6150  003604  6ED9               	movwf	fsr2l,c
  6151  003606  502E               	movf	(precE@j+1)^0,w,c
  6152  003608  2024               	addwfc	(??_precE+1)^0,w,c
  6153  00360A  6EDA               	movwf	fsr2h,c
  6154  00360C  502F               	movf	precE@k^0,w,c
  6155  00360E  241F               	addwf	precE@str^0,w,c
  6156  003610  6EE1               	movwf	fsr1l,c
  6157  003612  5030               	movf	(precE@k+1)^0,w,c
  6158  003614  2020               	addwfc	(precE@str+1)^0,w,c
  6159  003616  6EE2               	movwf	fsr1h,c
  6160  003618  CFDF FFE7          	movff	indf2,indf1
  6161  00361C  4A2F               	infsnz	precE@k^0,f,c
  6162  00361E  2A30               	incf	(precE@k+1)^0,f,c
  6163  003620                     l8076:
  6164  003620  5027               	movf	precE@len^0,w,c
  6165  003622  5C2F               	subwf	precE@k^0,w,c
  6166  003624  5030               	movf	(precE@k+1)^0,w,c
  6167  003626  0A80               	xorlw	128
  6168  003628  6E23               	movwf	??_precE^0,c
  6169  00362A  5028               	movf	(precE@len+1)^0,w,c
  6170  00362C  0A80               	xorlw	128
  6171  00362E  5823               	subwfb	??_precE^0,w,c
  6172  003630  A0D8               	btfss	status,0,c
  6173  003632  EF1D  F01B         	goto	u9201
  6174  003636  EF1F  F01B         	goto	u9200
  6175  00363A                     u9201:
  6176  00363A  EFFA  F01A         	goto	l8072
  6177  00363E                     u9200:
  6178  00363E  EF75  F01B         	goto	l525
  6179  003642                     l8078:
  6180  003642  BE2E               	btfsc	(precE@j+1)^0,7,c
  6181  003644  EF28  F01B         	goto	u9210
  6182  003648  EF26  F01B         	goto	u9211
  6183  00364C                     u9211:
  6184  00364C  EF75  F01B         	goto	l525
  6185  003650                     u9210:
  6186  003650                     
  6187                           ;src/print/format.c: 227:         for (k = len - 1 + (j * -1); k >= posE; k--) {
  6188  003650  502D               	movf	precE@j^0,w,c
  6189  003652  5C27               	subwf	precE@len^0,w,c
  6190  003654  6E23               	movwf	??_precE^0,c
  6191  003656  502E               	movf	(precE@j+1)^0,w,c
  6192  003658  5828               	subwfb	(precE@len+1)^0,w,c
  6193  00365A  6E24               	movwf	(??_precE+1)^0,c
  6194  00365C  0EFF               	movlw	255
  6195  00365E  2423               	addwf	??_precE^0,w,c
  6196  003660  6E2F               	movwf	precE@k^0,c
  6197  003662  0EFF               	movlw	255
  6198  003664  2024               	addwfc	(??_precE+1)^0,w,c
  6199  003666  6E30               	movwf	(precE@k+1)^0,c
  6200  003668  EF66  F01B         	goto	l8090
  6201  00366C                     l8082:
  6202                           
  6203                           ;src/print/format.c: 228:             if (k >= i)
  6204  00366C  502B               	movf	precE@i^0,w,c
  6205  00366E  5C2F               	subwf	precE@k^0,w,c
  6206  003670  5030               	movf	(precE@k+1)^0,w,c
  6207  003672  0A80               	xorlw	128
  6208  003674  6E23               	movwf	??_precE^0,c
  6209  003676  502C               	movf	(precE@i+1)^0,w,c
  6210  003678  0A80               	xorlw	128
  6211  00367A  5823               	subwfb	??_precE^0,w,c
  6212  00367C  A0D8               	btfss	status,0,c
  6213  00367E  EF43  F01B         	goto	u9221
  6214  003682  EF45  F01B         	goto	u9220
  6215  003686                     u9221:
  6216  003686  EF5B  F01B         	goto	l8086
  6217  00368A                     u9220:
  6218  00368A                     
  6219                           ;src/print/format.c: 229:                 str[k] = str[k+j];
  6220  00368A  502F               	movf	precE@k^0,w,c
  6221  00368C  241F               	addwf	precE@str^0,w,c
  6222  00368E  6E23               	movwf	??_precE^0,c
  6223  003690  5030               	movf	(precE@k+1)^0,w,c
  6224  003692  2020               	addwfc	(precE@str+1)^0,w,c
  6225  003694  6E24               	movwf	(??_precE+1)^0,c
  6226  003696  502D               	movf	precE@j^0,w,c
  6227  003698  2423               	addwf	??_precE^0,w,c
  6228  00369A  6ED9               	movwf	fsr2l,c
  6229  00369C  502E               	movf	(precE@j+1)^0,w,c
  6230  00369E  2024               	addwfc	(??_precE+1)^0,w,c
  6231  0036A0  6EDA               	movwf	fsr2h,c
  6232  0036A2  502F               	movf	precE@k^0,w,c
  6233  0036A4  241F               	addwf	precE@str^0,w,c
  6234  0036A6  6EE1               	movwf	fsr1l,c
  6235  0036A8  5030               	movf	(precE@k+1)^0,w,c
  6236  0036AA  2020               	addwfc	(precE@str+1)^0,w,c
  6237  0036AC  6EE2               	movwf	fsr1h,c
  6238  0036AE  CFDF FFE7          	movff	indf2,indf1
  6239  0036B2  EF63  F01B         	goto	l8088
  6240  0036B6                     l8086:
  6241                           
  6242                           ;src/print/format.c: 231:                 str[k] = '0';
  6243  0036B6  502F               	movf	precE@k^0,w,c
  6244  0036B8  241F               	addwf	precE@str^0,w,c
  6245  0036BA  6ED9               	movwf	fsr2l,c
  6246  0036BC  5030               	movf	(precE@k+1)^0,w,c
  6247  0036BE  2020               	addwfc	(precE@str+1)^0,w,c
  6248  0036C0  6EDA               	movwf	fsr2h,c
  6249  0036C2  0E30               	movlw	48
  6250  0036C4  6EDF               	movwf	indf2,c
  6251  0036C6                     l8088:
  6252                           
  6253                           ;src/print/format.c: 232:         }
  6254  0036C6  062F               	decf	precE@k^0,f,c
  6255  0036C8  A0D8               	btfss	status,0,c
  6256  0036CA  0630               	decf	(precE@k+1)^0,f,c
  6257  0036CC                     l8090:
  6258  0036CC  5029               	movf	precE@posE^0,w,c
  6259  0036CE  5C2F               	subwf	precE@k^0,w,c
  6260  0036D0  5030               	movf	(precE@k+1)^0,w,c
  6261  0036D2  0A80               	xorlw	128
  6262  0036D4  6E23               	movwf	??_precE^0,c
  6263  0036D6  502A               	movf	(precE@posE+1)^0,w,c
  6264  0036D8  0A80               	xorlw	128
  6265  0036DA  5823               	subwfb	??_precE^0,w,c
  6266  0036DC  B0D8               	btfsc	status,0,c
  6267  0036DE  EF73  F01B         	goto	u9231
  6268  0036E2  EF75  F01B         	goto	u9230
  6269  0036E6                     u9231:
  6270  0036E6  EF36  F01B         	goto	l8082
  6271  0036EA                     u9230:
  6272  0036EA                     l525:
  6273  0036EA  0012               	return		;funcret
  6274  0036EC                     __end_of_precE:
  6275                           	opt callstack 0
  6276                           
  6277 ;; *************** function _roundStr *****************
  6278 ;; Defined at:
  6279 ;;		line 38 in file "src/print/format.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  decnum          2   13[COMRAM] PTR unsigned char 
  6282 ;;		 -> my_vsprintf@buffer(64), 
  6283 ;;  e               2   15[COMRAM] int 
  6284 ;;  prn             2   17[COMRAM] int 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  k               2   28[COMRAM] int 
  6287 ;;  i               2   26[COMRAM] int 
  6288 ;;  p               2   24[COMRAM] int 
  6289 ;;  len             2   22[COMRAM] int 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  2   13[COMRAM] int 
  6292 ;; Registers used:
  6293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6299 ;;      Params:         6       0       0       0       0       0       0       0       0
  6300 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6301 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6302 ;;      Totals:        17       0       0       0       0       0       0       0       0
  6303 ;;Total ram usage:       17 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    4
  6306 ;; This function calls:
  6307 ;;		_posc
  6308 ;;		_strlen
  6309 ;; This function is called by:
  6310 ;;		_precF
  6311 ;;		_precE
  6312 ;;		_precG
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text15
  6317  002580                     __ptext15:
  6318                           	opt callstack 0
  6319  002580                     _roundStr:
  6320                           	opt callstack 22
  6321  002580                     
  6322                           ;src/print/format.c: 39:     int len = strlen(decnum);
  6323  002580  C00E  F004         	movff	roundStr@decnum,strlen@s
  6324  002584  C00F  F005         	movff	roundStr@decnum+1,strlen@s+1
  6325  002588  EC7E  F029         	call	_strlen	;wreg free
  6326  00258C  C004  F017         	movff	?_strlen,roundStr@len
  6327  002590  C005  F018         	movff	?_strlen+1,roundStr@len+1
  6328                           
  6329                           ;src/print/format.c: 40:     int p = posc(decnum,'.');
  6330  002594  C00E  F008         	movff	roundStr@decnum,posc@str
  6331  002598  C00F  F009         	movff	roundStr@decnum+1,posc@str+1
  6332  00259C  0E2E               	movlw	46
  6333  00259E  6E0A               	movwf	posc@c^0,c
  6334  0025A0  ECCC  F026         	call	_posc	;wreg free
  6335  0025A4  C008  F019         	movff	?_posc,roundStr@p
  6336  0025A8  C009  F01A         	movff	?_posc+1,roundStr@p+1
  6337  0025AC                     
  6338                           ;src/print/format.c: 41:     int i, k;;src/print/format.c: 52:     for (k = prn - 1; k >
      +                          = 0; k--) {
  6339  0025AC  0EFF               	movlw	255
  6340  0025AE  2412               	addwf	roundStr@prn^0,w,c
  6341  0025B0  6E1D               	movwf	roundStr@k^0,c
  6342  0025B2  0EFF               	movlw	255
  6343  0025B4  2013               	addwfc	(roundStr@prn+1)^0,w,c
  6344  0025B6  6E1E               	movwf	(roundStr@k+1)^0,c
  6345  0025B8                     l7638:
  6346  0025B8  BE1E               	btfsc	(roundStr@k+1)^0,7,c
  6347  0025BA  EFE3  F012         	goto	u8440
  6348  0025BE  EFE1  F012         	goto	u8441
  6349  0025C2                     u8441:
  6350  0025C2  EFE5  F012         	goto	l7642
  6351  0025C6                     u8440:
  6352  0025C6  EF54  F013         	goto	l7662
  6353  0025CA                     l7642:
  6354                           
  6355                           ;src/print/format.c: 53:         if (decnum[k] < '9' && decnum[k] != '.') {
  6356  0025CA  501D               	movf	roundStr@k^0,w,c
  6357  0025CC  240E               	addwf	roundStr@decnum^0,w,c
  6358  0025CE  6ED9               	movwf	fsr2l,c
  6359  0025D0  501E               	movf	(roundStr@k+1)^0,w,c
  6360  0025D2  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6361  0025D4  6EDA               	movwf	fsr2h,c
  6362  0025D6  0E39               	movlw	57
  6363  0025D8  60DF               	cpfslt	indf2,c
  6364  0025DA  EFF1  F012         	goto	u8451
  6365  0025DE  EFF3  F012         	goto	u8450
  6366  0025E2                     u8451:
  6367  0025E2  EF4F  F013         	goto	l7658
  6368  0025E6                     u8450:
  6369  0025E6  501D               	movf	roundStr@k^0,w,c
  6370  0025E8  240E               	addwf	roundStr@decnum^0,w,c
  6371  0025EA  6ED9               	movwf	fsr2l,c
  6372  0025EC  501E               	movf	(roundStr@k+1)^0,w,c
  6373  0025EE  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6374  0025F0  6EDA               	movwf	fsr2h,c
  6375  0025F2  0E2E               	movlw	46
  6376  0025F4  18DE               	xorwf	postinc2,w,c
  6377  0025F6  B4D8               	btfsc	status,2,c
  6378  0025F8  EF00  F013         	goto	u8461
  6379  0025FC  EF02  F013         	goto	u8460
  6380  002600                     u8461:
  6381  002600  EF4F  F013         	goto	l7658
  6382  002604                     u8460:
  6383  002604                     
  6384                           ;src/print/format.c: 54:             if (decnum[prn] >= '5') {
  6385  002604  5012               	movf	roundStr@prn^0,w,c
  6386  002606  240E               	addwf	roundStr@decnum^0,w,c
  6387  002608  6ED9               	movwf	fsr2l,c
  6388  00260A  5013               	movf	(roundStr@prn+1)^0,w,c
  6389  00260C  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6390  00260E  6EDA               	movwf	fsr2h,c
  6391  002610  0E34               	movlw	52
  6392  002612  64DF               	cpfsgt	indf2,c
  6393  002614  EF0E  F013         	goto	u8471
  6394  002618  EF10  F013         	goto	u8470
  6395  00261C                     u8471:
  6396  00261C  EF54  F013         	goto	l7662
  6397  002620                     u8470:
  6398  002620                     
  6399                           ;src/print/format.c: 55:                 decnum[k]++;
  6400  002620  501D               	movf	roundStr@k^0,w,c
  6401  002622  240E               	addwf	roundStr@decnum^0,w,c
  6402  002624  6ED9               	movwf	fsr2l,c
  6403  002626  501E               	movf	(roundStr@k+1)^0,w,c
  6404  002628  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6405  00262A  6EDA               	movwf	fsr2h,c
  6406  00262C  2ADF               	incf	indf2,f,c
  6407                           
  6408                           ;src/print/format.c: 56:                 while (k < prn) {
  6409  00262E  EF3E  F013         	goto	l7656
  6410  002632                     l7650:
  6411                           
  6412                           ;src/print/format.c: 57:                     if (decnum[k+1] != '.')
  6413  002632  501D               	movf	roundStr@k^0,w,c
  6414  002634  240E               	addwf	roundStr@decnum^0,w,c
  6415  002636  6E14               	movwf	??_roundStr^0,c
  6416  002638  501E               	movf	(roundStr@k+1)^0,w,c
  6417  00263A  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6418  00263C  6E15               	movwf	(??_roundStr+1)^0,c
  6419  00263E  0E01               	movlw	1
  6420  002640  2414               	addwf	??_roundStr^0,w,c
  6421  002642  6ED9               	movwf	fsr2l,c
  6422  002644  0E00               	movlw	0
  6423  002646  2015               	addwfc	(??_roundStr+1)^0,w,c
  6424  002648  6EDA               	movwf	fsr2h,c
  6425  00264A  0E2E               	movlw	46
  6426  00264C  18DE               	xorwf	postinc2,w,c
  6427  00264E  B4D8               	btfsc	status,2,c
  6428  002650  EF2C  F013         	goto	u8481
  6429  002654  EF2E  F013         	goto	u8480
  6430  002658                     u8481:
  6431  002658  EF3C  F013         	goto	l7654
  6432  00265C                     u8480:
  6433  00265C                     
  6434                           ;src/print/format.c: 58:                         decnum[k+1]='0';
  6435  00265C  501D               	movf	roundStr@k^0,w,c
  6436  00265E  240E               	addwf	roundStr@decnum^0,w,c
  6437  002660  6E14               	movwf	??_roundStr^0,c
  6438  002662  501E               	movf	(roundStr@k+1)^0,w,c
  6439  002664  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6440  002666  6E15               	movwf	(??_roundStr+1)^0,c
  6441  002668  0E01               	movlw	1
  6442  00266A  2414               	addwf	??_roundStr^0,w,c
  6443  00266C  6ED9               	movwf	fsr2l,c
  6444  00266E  0E00               	movlw	0
  6445  002670  2015               	addwfc	(??_roundStr+1)^0,w,c
  6446  002672  6EDA               	movwf	fsr2h,c
  6447  002674  0E30               	movlw	48
  6448  002676  6EDF               	movwf	indf2,c
  6449  002678                     l7654:
  6450                           
  6451                           ;src/print/format.c: 59:                     k++;
  6452  002678  4A1D               	infsnz	roundStr@k^0,f,c
  6453  00267A  2A1E               	incf	(roundStr@k+1)^0,f,c
  6454  00267C                     l7656:
  6455                           
  6456                           ;src/print/format.c: 56:                 while (k < prn) {
  6457  00267C  5012               	movf	roundStr@prn^0,w,c
  6458  00267E  5C1D               	subwf	roundStr@k^0,w,c
  6459  002680  501E               	movf	(roundStr@k+1)^0,w,c
  6460  002682  0A80               	xorlw	128
  6461  002684  6E14               	movwf	??_roundStr^0,c
  6462  002686  5013               	movf	(roundStr@prn+1)^0,w,c
  6463  002688  0A80               	xorlw	128
  6464  00268A  5814               	subwfb	??_roundStr^0,w,c
  6465  00268C  A0D8               	btfss	status,0,c
  6466  00268E  EF4B  F013         	goto	u8491
  6467  002692  EF4D  F013         	goto	u8490
  6468  002696                     u8491:
  6469  002696  EF19  F013         	goto	l7650
  6470  00269A                     u8490:
  6471  00269A  EF54  F013         	goto	l7662
  6472  00269E                     l7658:
  6473                           
  6474                           ;src/print/format.c: 64:     }
  6475  00269E  061D               	decf	roundStr@k^0,f,c
  6476  0026A0  A0D8               	btfss	status,0,c
  6477  0026A2  061E               	decf	(roundStr@k+1)^0,f,c
  6478  0026A4  EFDC  F012         	goto	l7638
  6479  0026A8                     l7662:
  6480                           
  6481                           ;src/print/format.c: 67:     if (k == -1 && e == -1) {
  6482  0026A8  281D               	incf	roundStr@k^0,w,c
  6483  0026AA  E106               	bnz	u8501
  6484  0026AC  281E               	incf	(roundStr@k+1)^0,w,c
  6485  0026AE  A4D8               	btfss	status,2,c
  6486  0026B0  EF5C  F013         	goto	u8501
  6487  0026B4  EF5E  F013         	goto	u8500
  6488  0026B8                     u8501:
  6489  0026B8  EFE6  F013         	goto	l7694
  6490  0026BC                     u8500:
  6491  0026BC  2810               	incf	roundStr@e^0,w,c
  6492  0026BE  E106               	bnz	u8511
  6493  0026C0  2811               	incf	(roundStr@e+1)^0,w,c
  6494  0026C2  A4D8               	btfss	status,2,c
  6495  0026C4  EF66  F013         	goto	u8511
  6496  0026C8  EF68  F013         	goto	u8510
  6497  0026CC                     u8511:
  6498  0026CC  EFE6  F013         	goto	l7694
  6499  0026D0                     u8510:
  6500  0026D0                     
  6501                           ;src/print/format.c: 68:         if (decnum[0] == '+' || decnum[0] == '-') {
  6502  0026D0  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  6503  0026D4  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  6504  0026D8  0E2B               	movlw	43
  6505  0026DA  18DE               	xorwf	postinc2,w,c
  6506  0026DC  B4D8               	btfsc	status,2,c
  6507  0026DE  EF73  F013         	goto	u8521
  6508  0026E2  EF75  F013         	goto	u8520
  6509  0026E6                     u8521:
  6510  0026E6  EF82  F013         	goto	l7670
  6511  0026EA                     u8520:
  6512  0026EA  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  6513  0026EE  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  6514  0026F2  0E2D               	movlw	45
  6515  0026F4  18DE               	xorwf	postinc2,w,c
  6516  0026F6  A4D8               	btfss	status,2,c
  6517  0026F8  EF80  F013         	goto	u8531
  6518  0026FC  EF82  F013         	goto	u8530
  6519  002700                     u8531:
  6520  002700  EF90  F013         	goto	l7674
  6521  002704                     u8530:
  6522  002704                     l7670:
  6523                           
  6524                           ;src/print/format.c: 69:             decnum[1] = '1';
  6525  002704  EE20 F001          	lfsr	2,1
  6526  002708  500E               	movf	roundStr@decnum^0,w,c
  6527  00270A  26D9               	addwf	fsr2l,f,c
  6528  00270C  500F               	movf	(roundStr@decnum+1)^0,w,c
  6529  00270E  22DA               	addwfc	fsr2h,f,c
  6530  002710  0E31               	movlw	49
  6531  002712  6EDF               	movwf	indf2,c
  6532  002714                     
  6533                           ;src/print/format.c: 70:             i = 2;
  6534  002714  0E00               	movlw	0
  6535  002716  6E1C               	movwf	(roundStr@i+1)^0,c
  6536  002718  0E02               	movlw	2
  6537  00271A  6E1B               	movwf	roundStr@i^0,c
  6538                           
  6539                           ;src/print/format.c: 71:         }
  6540  00271C  EFD5  F013         	goto	l7692
  6541  002720                     l7674:
  6542                           
  6543                           ;src/print/format.c: 73:             decnum[0] = '1';
  6544  002720  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  6545  002724  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  6546  002728  0E31               	movlw	49
  6547  00272A  6EDF               	movwf	indf2,c
  6548  00272C                     
  6549                           ;src/print/format.c: 74:             i = 1;
  6550  00272C  0E00               	movlw	0
  6551  00272E  6E1C               	movwf	(roundStr@i+1)^0,c
  6552  002730  0E01               	movlw	1
  6553  002732  6E1B               	movwf	roundStr@i^0,c
  6554  002734  EFD5  F013         	goto	l7692
  6555  002738                     l7678:
  6556                           
  6557                           ;src/print/format.c: 77:             if (decnum[i] == '.') {
  6558  002738  501B               	movf	roundStr@i^0,w,c
  6559  00273A  240E               	addwf	roundStr@decnum^0,w,c
  6560  00273C  6ED9               	movwf	fsr2l,c
  6561  00273E  501C               	movf	(roundStr@i+1)^0,w,c
  6562  002740  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6563  002742  6EDA               	movwf	fsr2h,c
  6564  002744  0E2E               	movlw	46
  6565  002746  18DE               	xorwf	postinc2,w,c
  6566  002748  A4D8               	btfss	status,2,c
  6567  00274A  EFA9  F013         	goto	u8541
  6568  00274E  EFAB  F013         	goto	u8540
  6569  002752                     u8541:
  6570  002752  EFC5  F013         	goto	l7684
  6571  002756                     u8540:
  6572  002756                     
  6573                           ;src/print/format.c: 78:                 decnum[i]='0';
  6574  002756  501B               	movf	roundStr@i^0,w,c
  6575  002758  240E               	addwf	roundStr@decnum^0,w,c
  6576  00275A  6ED9               	movwf	fsr2l,c
  6577  00275C  501C               	movf	(roundStr@i+1)^0,w,c
  6578  00275E  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6579  002760  6EDA               	movwf	fsr2h,c
  6580  002762  0E30               	movlw	48
  6581  002764  6EDF               	movwf	indf2,c
  6582                           
  6583                           ;src/print/format.c: 79:                 decnum[i+1]='.';
  6584  002766  501B               	movf	roundStr@i^0,w,c
  6585  002768  240E               	addwf	roundStr@decnum^0,w,c
  6586  00276A  6E14               	movwf	??_roundStr^0,c
  6587  00276C  501C               	movf	(roundStr@i+1)^0,w,c
  6588  00276E  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6589  002770  6E15               	movwf	(??_roundStr+1)^0,c
  6590  002772  0E01               	movlw	1
  6591  002774  2414               	addwf	??_roundStr^0,w,c
  6592  002776  6ED9               	movwf	fsr2l,c
  6593  002778  0E00               	movlw	0
  6594  00277A  2015               	addwfc	(??_roundStr+1)^0,w,c
  6595  00277C  6EDA               	movwf	fsr2h,c
  6596  00277E  0E2E               	movlw	46
  6597  002780  6EDF               	movwf	indf2,c
  6598  002782                     
  6599                           ;src/print/format.c: 80:                 i++;
  6600  002782  4A1B               	infsnz	roundStr@i^0,f,c
  6601  002784  2A1C               	incf	(roundStr@i+1)^0,f,c
  6602                           
  6603                           ;src/print/format.c: 81:             }
  6604  002786  EFCD  F013         	goto	l7686
  6605  00278A                     l7684:
  6606                           
  6607                           ;src/print/format.c: 83:                 decnum[i]='0';
  6608  00278A  501B               	movf	roundStr@i^0,w,c
  6609  00278C  240E               	addwf	roundStr@decnum^0,w,c
  6610  00278E  6ED9               	movwf	fsr2l,c
  6611  002790  501C               	movf	(roundStr@i+1)^0,w,c
  6612  002792  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6613  002794  6EDA               	movwf	fsr2h,c
  6614  002796  0E30               	movlw	48
  6615  002798  6EDF               	movwf	indf2,c
  6616  00279A                     l7686:
  6617                           
  6618                           ;src/print/format.c: 84:             i++;
  6619  00279A  4A1B               	infsnz	roundStr@i^0,f,c
  6620  00279C  2A1C               	incf	(roundStr@i+1)^0,f,c
  6621  00279E                     
  6622                           ;src/print/format.c: 85:             return 1;
  6623  00279E  0E00               	movlw	0
  6624  0027A0  6E0F               	movwf	(?_roundStr+1)^0,c
  6625  0027A2  0E01               	movlw	1
  6626  0027A4  6E0E               	movwf	?_roundStr^0,c
  6627  0027A6  EF3A  F014         	goto	l452
  6628  0027AA                     l7692:
  6629                           
  6630                           ;src/print/format.c: 76:         while (i < len) {
  6631  0027AA  5017               	movf	roundStr@len^0,w,c
  6632  0027AC  5C1B               	subwf	roundStr@i^0,w,c
  6633  0027AE  501C               	movf	(roundStr@i+1)^0,w,c
  6634  0027B0  0A80               	xorlw	128
  6635  0027B2  6E14               	movwf	??_roundStr^0,c
  6636  0027B4  5018               	movf	(roundStr@len+1)^0,w,c
  6637  0027B6  0A80               	xorlw	128
  6638  0027B8  5814               	subwfb	??_roundStr^0,w,c
  6639  0027BA  A0D8               	btfss	status,0,c
  6640  0027BC  EFE2  F013         	goto	u8551
  6641  0027C0  EFE4  F013         	goto	u8550
  6642  0027C4                     u8551:
  6643  0027C4  EF9C  F013         	goto	l7678
  6644  0027C8                     u8550:
  6645  0027C8  EF36  F014         	goto	l7710
  6646  0027CC                     l7694:
  6647  0027CC  281D               	incf	roundStr@k^0,w,c
  6648  0027CE  E106               	bnz	u8561
  6649  0027D0  281E               	incf	(roundStr@k+1)^0,w,c
  6650  0027D2  A4D8               	btfss	status,2,c
  6651  0027D4  EFEE  F013         	goto	u8561
  6652  0027D8  EFF0  F013         	goto	u8560
  6653  0027DC                     u8561:
  6654  0027DC  EF36  F014         	goto	l7710
  6655  0027E0                     u8560:
  6656  0027E0  2810               	incf	roundStr@e^0,w,c
  6657  0027E2  E108               	bnz	u8570
  6658  0027E4  2811               	incf	(roundStr@e+1)^0,w,c
  6659  0027E6  B4D8               	btfsc	status,2,c
  6660  0027E8  EFF8  F013         	goto	u8571
  6661  0027EC  EFFA  F013         	goto	u8570
  6662  0027F0                     u8571:
  6663  0027F0  EF36  F014         	goto	l7710
  6664  0027F4                     u8570:
  6665  0027F4                     
  6666                           ;src/print/format.c: 92:         decnum[p-1] = '1';
  6667  0027F4  5019               	movf	roundStr@p^0,w,c
  6668  0027F6  240E               	addwf	roundStr@decnum^0,w,c
  6669  0027F8  6E14               	movwf	??_roundStr^0,c
  6670  0027FA  501A               	movf	(roundStr@p+1)^0,w,c
  6671  0027FC  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6672  0027FE  6E15               	movwf	(??_roundStr+1)^0,c
  6673  002800  0EFF               	movlw	255
  6674  002802  2414               	addwf	??_roundStr^0,w,c
  6675  002804  6ED9               	movwf	fsr2l,c
  6676  002806  0EFF               	movlw	255
  6677  002808  2015               	addwfc	(??_roundStr+1)^0,w,c
  6678  00280A  6EDA               	movwf	fsr2h,c
  6679  00280C  0E31               	movlw	49
  6680  00280E  6EDF               	movwf	indf2,c
  6681  002810                     
  6682                           ;src/print/format.c: 93:         for(i = p+1;i < e;i++)
  6683  002810  0E01               	movlw	1
  6684  002812  2419               	addwf	roundStr@p^0,w,c
  6685  002814  6E1B               	movwf	roundStr@i^0,c
  6686  002816  0E00               	movlw	0
  6687  002818  201A               	addwfc	(roundStr@p+1)^0,w,c
  6688  00281A  6E1C               	movwf	(roundStr@i+1)^0,c
  6689  00281C  EF1A  F014         	goto	l7706
  6690  002820                     l7702:
  6691                           
  6692                           ;src/print/format.c: 94:             decnum[i] = '0';
  6693  002820  501B               	movf	roundStr@i^0,w,c
  6694  002822  240E               	addwf	roundStr@decnum^0,w,c
  6695  002824  6ED9               	movwf	fsr2l,c
  6696  002826  501C               	movf	(roundStr@i+1)^0,w,c
  6697  002828  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6698  00282A  6EDA               	movwf	fsr2h,c
  6699  00282C  0E30               	movlw	48
  6700  00282E  6EDF               	movwf	indf2,c
  6701  002830  4A1B               	infsnz	roundStr@i^0,f,c
  6702  002832  2A1C               	incf	(roundStr@i+1)^0,f,c
  6703  002834                     l7706:
  6704  002834  5010               	movf	roundStr@e^0,w,c
  6705  002836  5C1B               	subwf	roundStr@i^0,w,c
  6706  002838  501C               	movf	(roundStr@i+1)^0,w,c
  6707  00283A  0A80               	xorlw	128
  6708  00283C  6E14               	movwf	??_roundStr^0,c
  6709  00283E  5011               	movf	(roundStr@e+1)^0,w,c
  6710  002840  0A80               	xorlw	128
  6711  002842  5814               	subwfb	??_roundStr^0,w,c
  6712  002844  A0D8               	btfss	status,0,c
  6713  002846  EF27  F014         	goto	u8581
  6714  00284A  EF29  F014         	goto	u8580
  6715  00284E                     u8581:
  6716  00284E  EF10  F014         	goto	l7702
  6717  002852                     u8580:
  6718  002852                     
  6719                           ;src/print/format.c: 95:         decnum[e+2]++;
  6720  002852  5010               	movf	roundStr@e^0,w,c
  6721  002854  240E               	addwf	roundStr@decnum^0,w,c
  6722  002856  6E14               	movwf	??_roundStr^0,c
  6723  002858  5011               	movf	(roundStr@e+1)^0,w,c
  6724  00285A  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6725  00285C  6E15               	movwf	(??_roundStr+1)^0,c
  6726  00285E  0E02               	movlw	2
  6727  002860  2414               	addwf	??_roundStr^0,w,c
  6728  002862  6ED9               	movwf	fsr2l,c
  6729  002864  0E00               	movlw	0
  6730  002866  2015               	addwfc	(??_roundStr+1)^0,w,c
  6731  002868  6EDA               	movwf	fsr2h,c
  6732  00286A  2ADF               	incf	indf2,f,c
  6733  00286C                     l7710:
  6734                           
  6735                           ;src/print/format.c: 97:     return 0;
  6736  00286C  0E00               	movlw	0
  6737  00286E  6E0F               	movwf	(?_roundStr+1)^0,c
  6738  002870  0E00               	movlw	0
  6739  002872  6E0E               	movwf	?_roundStr^0,c
  6740  002874                     l452:
  6741  002874  0012               	return		;funcret
  6742  002876                     __end_of_roundStr:
  6743                           	opt callstack 0
  6744                           
  6745 ;; *************** function _getWP *****************
  6746 ;; Defined at:
  6747 ;;		line 125 in file "src/print/format.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  form            2   68[BANK0 ] PTR unsigned char 
  6750 ;;		 -> my_vsprintf@format(10), 
  6751 ;;  width           2   70[BANK0 ] PTR int 
  6752 ;;		 -> my_vsprintf@width(2), 
  6753 ;;  precision       2   72[BANK0 ] PTR int 
  6754 ;;		 -> my_vsprintf@prec(2), 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  width_str       5   28[COMRAM] unsigned char [5]
  6757 ;;  prec_str        5   23[COMRAM] unsigned char [5]
  6758 ;;  j               2   41[COMRAM] int 
  6759 ;;  p               2   39[COMRAM] int 
  6760 ;;  k               2   37[COMRAM] int 
  6761 ;;  i               2   35[COMRAM] int 
  6762 ;;  len             2   33[COMRAM] int 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6772 ;;      Params:         0       6       0       0       0       0       0       0       0
  6773 ;;      Locals:        20       0       0       0       0       0       0       0       0
  6774 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6775 ;;      Totals:        22       6       0       0       0       0       0       0       0
  6776 ;;Total ram usage:       28 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    4
  6779 ;; This function calls:
  6780 ;;		_atoui
  6781 ;;		_posc
  6782 ;;		_reverse
  6783 ;;		_searchc
  6784 ;;		_strlen
  6785 ;; This function is called by:
  6786 ;;		_my_vsprintf
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text16
  6791  003066                     __ptext16:
  6792                           	opt callstack 0
  6793  003066                     _getWP:
  6794                           	opt callstack 23
  6795  003066                     
  6796                           ;src/print/format.c: 126:     int i, j, k;;src/print/format.c: 127:     int p;;src/print
      +                          /format.c: 128:     int len = strlen(form);
  6797  003066  C0A4  F004         	movff	getWP@form,strlen@s
  6798  00306A  C0A5  F005         	movff	getWP@form+1,strlen@s+1
  6799  00306E  EC7E  F029         	call	_strlen	;wreg free
  6800  003072  C004  F022         	movff	?_strlen,getWP@len
  6801  003076  C005  F023         	movff	?_strlen+1,getWP@len+1
  6802  00307A                     
  6803                           ;src/print/format.c: 129:     char width_str[5] = "";
  6804  00307A  EE20  F01D         	lfsr	2,getWP@width_str
  6805  00307E  0E04               	movlw	4
  6806  003080                     u8961:
  6807  003080  6ADE               	clrf	postinc2,c
  6808  003082  06E8               	decf	wreg,f,c
  6809  003084  E2FD               	bc	u8961
  6810  003086                     
  6811                           ;src/print/format.c: 130:     char prec_str[5] = "";
  6812  003086  EE20  F018         	lfsr	2,getWP@prec_str
  6813  00308A  0E04               	movlw	4
  6814  00308C                     u8971:
  6815  00308C  6ADE               	clrf	postinc2,c
  6816  00308E  06E8               	decf	wreg,f,c
  6817  003090  E2FD               	bc	u8971
  6818  003092                     
  6819                           ;src/print/format.c: 132:     i = 0;
  6820  003092  0E00               	movlw	0
  6821  003094  6E25               	movwf	(getWP@i+1)^0,c
  6822  003096  0E00               	movlw	0
  6823  003098  6E24               	movwf	getWP@i^0,c
  6824  00309A                     
  6825                           ;src/print/format.c: 133:     k = 0;
  6826  00309A  0E00               	movlw	0
  6827  00309C  6E27               	movwf	(getWP@k+1)^0,c
  6828  00309E  0E00               	movlw	0
  6829  0030A0  6E26               	movwf	getWP@k^0,c
  6830  0030A2                     
  6831                           ;src/print/format.c: 134:     zeros = 0;
  6832  0030A2  0E00               	movlw	0
  6833  0030A4  0100               	movlb	0	; () banked
  6834  0030A6  6FE7               	movwf	_zeros& (0+255),b
  6835  0030A8                     
  6836                           ; BSR set to: 0
  6837                           ;src/print/format.c: 135:     precInt = 0;
  6838  0030A8  0E00               	movlw	0
  6839  0030AA  6FE6               	movwf	_precInt& (0+255),b
  6840                           
  6841                           ;src/print/format.c: 137:     sig = searchc(form, '+');
  6842  0030AC  C0A4  F008         	movff	getWP@form,searchc@str
  6843  0030B0  C0A5  F009         	movff	getWP@form+1,searchc@str+1
  6844  0030B4  0E2B               	movlw	43
  6845  0030B6  6E0A               	movwf	searchc@c^0,c
  6846  0030B8  EC5C  F027         	call	_searchc	;wreg free
  6847  0030BC  0100               	movlb	0	; () banked
  6848  0030BE  6FE8               	movwf	_sig& (0+255),b
  6849                           
  6850                           ;src/print/format.c: 138:     alingL = searchc(form, '-');
  6851  0030C0  C0A4  F008         	movff	getWP@form,searchc@str
  6852  0030C4  C0A5  F009         	movff	getWP@form+1,searchc@str+1
  6853  0030C8  0E2D               	movlw	45
  6854  0030CA  6E0A               	movwf	searchc@c^0,c
  6855  0030CC  EC5C  F027         	call	_searchc	;wreg free
  6856  0030D0  6E5B               	movwf	_alingL^0,c
  6857                           
  6858                           ;src/print/format.c: 139:     space = searchc(form, ' ');
  6859  0030D2  C0A4  F008         	movff	getWP@form,searchc@str
  6860  0030D6  C0A5  F009         	movff	getWP@form+1,searchc@str+1
  6861  0030DA  0E20               	movlw	32
  6862  0030DC  6E0A               	movwf	searchc@c^0,c
  6863  0030DE  EC5C  F027         	call	_searchc	;wreg free
  6864  0030E2  0100               	movlb	0	; () banked
  6865  0030E4  6FE5               	movwf	_space& (0+255),b
  6866                           
  6867                           ;src/print/format.c: 140:     numeral = searchc(form, '#');
  6868  0030E6  C0A4  F008         	movff	getWP@form,searchc@str
  6869  0030EA  C0A5  F009         	movff	getWP@form+1,searchc@str+1
  6870  0030EE  0E23               	movlw	35
  6871  0030F0  6E0A               	movwf	searchc@c^0,c
  6872  0030F2  EC5C  F027         	call	_searchc	;wreg free
  6873  0030F6  6E5A               	movwf	_numeral^0,c
  6874                           
  6875                           ;src/print/format.c: 142:     p = posc(form, '.');
  6876  0030F8  C0A4  F008         	movff	getWP@form,posc@str
  6877  0030FC  C0A5  F009         	movff	getWP@form+1,posc@str+1
  6878  003100  0E2E               	movlw	46
  6879  003102  6E0A               	movwf	posc@c^0,c
  6880  003104  ECCC  F026         	call	_posc	;wreg free
  6881  003108  C008  F028         	movff	?_posc,getWP@p
  6882  00310C  C009  F029         	movff	?_posc+1,getWP@p+1
  6883  003110                     
  6884                           ;src/print/format.c: 144:     for(j = 1; j < len; j++) {
  6885  003110  0E00               	movlw	0
  6886  003112  6E2B               	movwf	(getWP@j+1)^0,c
  6887  003114  0E01               	movlw	1
  6888  003116  6E2A               	movwf	getWP@j^0,c
  6889  003118  EFF4  F018         	goto	l7992
  6890  00311C                     l7972:
  6891                           
  6892                           ;src/print/format.c: 145:         if(form[j] >= '0' && form[j] <= '9') {
  6893  00311C  502A               	movf	getWP@j^0,w,c
  6894  00311E  0100               	movlb	0	; () banked
  6895  003120  25A4               	addwf	getWP@form& (0+255),w,b
  6896  003122  6ED9               	movwf	fsr2l,c
  6897  003124  502B               	movf	(getWP@j+1)^0,w,c
  6898  003126  21A5               	addwfc	(getWP@form+1)& (0+255),w,b
  6899  003128  6EDA               	movwf	fsr2h,c
  6900  00312A  0E2F               	movlw	47
  6901  00312C  64DF               	cpfsgt	indf2,c
  6902  00312E  EF9B  F018         	goto	u8981
  6903  003132  EF9D  F018         	goto	u8980
  6904  003136                     u8981:
  6905  003136  EFF2  F018         	goto	l7990
  6906  00313A                     u8980:
  6907  00313A                     
  6908                           ; BSR set to: 0
  6909  00313A  502A               	movf	getWP@j^0,w,c
  6910  00313C  25A4               	addwf	getWP@form& (0+255),w,b
  6911  00313E  6ED9               	movwf	fsr2l,c
  6912  003140  502B               	movf	(getWP@j+1)^0,w,c
  6913  003142  21A5               	addwfc	(getWP@form+1)& (0+255),w,b
  6914  003144  6EDA               	movwf	fsr2h,c
  6915  003146  0E3A               	movlw	58
  6916  003148  60DF               	cpfslt	indf2,c
  6917  00314A  EFA9  F018         	goto	u8991
  6918  00314E  EFAB  F018         	goto	u8990
  6919  003152                     u8991:
  6920  003152  EFF2  F018         	goto	l7990
  6921  003156                     u8990:
  6922  003156                     
  6923                           ; BSR set to: 0
  6924                           ;src/print/format.c: 146:             if ((j < p)|| (p < 0)) {
  6925  003156  5028               	movf	getWP@p^0,w,c
  6926  003158  5C2A               	subwf	getWP@j^0,w,c
  6927  00315A  502B               	movf	(getWP@j+1)^0,w,c
  6928  00315C  0A80               	xorlw	128
  6929  00315E  6E16               	movwf	??_getWP^0,c
  6930  003160  5029               	movf	(getWP@p+1)^0,w,c
  6931  003162  0A80               	xorlw	128
  6932  003164  5816               	subwfb	??_getWP^0,w,c
  6933  003166  A0D8               	btfss	status,0,c
  6934  003168  EFB8  F018         	goto	u9001
  6935  00316C  EFBA  F018         	goto	u9000
  6936  003170                     u9001:
  6937  003170  EFC1  F018         	goto	l7980
  6938  003174                     u9000:
  6939  003174                     
  6940                           ; BSR set to: 0
  6941  003174  BE29               	btfsc	(getWP@p+1)^0,7,c
  6942  003176  EFC1  F018         	goto	u9010
  6943  00317A  EFBF  F018         	goto	u9011
  6944  00317E                     u9011:
  6945  00317E  EFD3  F018         	goto	l7984
  6946  003182                     u9010:
  6947  003182                     l7980:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;src/print/format.c: 147:                 width_str[i] = form[j];
  6951  003182  502A               	movf	getWP@j^0,w,c
  6952  003184  25A4               	addwf	getWP@form& (0+255),w,b
  6953  003186  6ED9               	movwf	fsr2l,c
  6954  003188  502B               	movf	(getWP@j+1)^0,w,c
  6955  00318A  21A5               	addwfc	(getWP@form+1)& (0+255),w,b
  6956  00318C  6EDA               	movwf	fsr2h,c
  6957  00318E  0E1D               	movlw	low getWP@width_str
  6958  003190  2424               	addwf	getWP@i^0,w,c
  6959  003192  6EE1               	movwf	fsr1l,c
  6960  003194  0E00               	movlw	high getWP@width_str
  6961  003196  2025               	addwfc	(getWP@i+1)^0,w,c
  6962  003198  6EE2               	movwf	fsr1h,c
  6963  00319A  CFDF FFE7          	movff	indf2,indf1
  6964  00319E                     
  6965                           ; BSR set to: 0
  6966                           ;src/print/format.c: 148:                 i++;
  6967  00319E  4A24               	infsnz	getWP@i^0,f,c
  6968  0031A0  2A25               	incf	(getWP@i+1)^0,f,c
  6969                           
  6970                           ;src/print/format.c: 149:             }
  6971  0031A2  EFF2  F018         	goto	l7990
  6972  0031A6                     l7984:
  6973                           
  6974                           ; BSR set to: 0
  6975  0031A6  502A               	movf	getWP@j^0,w,c
  6976  0031A8  5C28               	subwf	getWP@p^0,w,c
  6977  0031AA  5029               	movf	(getWP@p+1)^0,w,c
  6978  0031AC  0A80               	xorlw	128
  6979  0031AE  6E16               	movwf	??_getWP^0,c
  6980  0031B0  502B               	movf	(getWP@j+1)^0,w,c
  6981  0031B2  0A80               	xorlw	128
  6982  0031B4  5816               	subwfb	??_getWP^0,w,c
  6983  0031B6  B0D8               	btfsc	status,0,c
  6984  0031B8  EFE0  F018         	goto	u9021
  6985  0031BC  EFE2  F018         	goto	u9020
  6986  0031C0                     u9021:
  6987  0031C0  EFF2  F018         	goto	l7990
  6988  0031C4                     u9020:
  6989  0031C4                     
  6990                           ; BSR set to: 0
  6991                           ;src/print/format.c: 151:                 prec_str[k] = form[j];
  6992  0031C4  502A               	movf	getWP@j^0,w,c
  6993  0031C6  25A4               	addwf	getWP@form& (0+255),w,b
  6994  0031C8  6ED9               	movwf	fsr2l,c
  6995  0031CA  502B               	movf	(getWP@j+1)^0,w,c
  6996  0031CC  21A5               	addwfc	(getWP@form+1)& (0+255),w,b
  6997  0031CE  6EDA               	movwf	fsr2h,c
  6998  0031D0  0E18               	movlw	low getWP@prec_str
  6999  0031D2  2426               	addwf	getWP@k^0,w,c
  7000  0031D4  6EE1               	movwf	fsr1l,c
  7001  0031D6  0E00               	movlw	high getWP@prec_str
  7002  0031D8  2027               	addwfc	(getWP@k+1)^0,w,c
  7003  0031DA  6EE2               	movwf	fsr1h,c
  7004  0031DC  CFDF FFE7          	movff	indf2,indf1
  7005  0031E0                     
  7006                           ; BSR set to: 0
  7007                           ;src/print/format.c: 152:                 k++;
  7008  0031E0  4A26               	infsnz	getWP@k^0,f,c
  7009  0031E2  2A27               	incf	(getWP@k+1)^0,f,c
  7010  0031E4                     l7990:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;src/print/format.c: 155:     }
  7014  0031E4  4A2A               	infsnz	getWP@j^0,f,c
  7015  0031E6  2A2B               	incf	(getWP@j+1)^0,f,c
  7016  0031E8                     l7992:
  7017  0031E8  5022               	movf	getWP@len^0,w,c
  7018  0031EA  5C2A               	subwf	getWP@j^0,w,c
  7019  0031EC  502B               	movf	(getWP@j+1)^0,w,c
  7020  0031EE  0A80               	xorlw	128
  7021  0031F0  6E16               	movwf	??_getWP^0,c
  7022  0031F2  5023               	movf	(getWP@len+1)^0,w,c
  7023  0031F4  0A80               	xorlw	128
  7024  0031F6  5816               	subwfb	??_getWP^0,w,c
  7025  0031F8  A0D8               	btfss	status,0,c
  7026  0031FA  EF01  F019         	goto	u9031
  7027  0031FE  EF03  F019         	goto	u9030
  7028  003202                     u9031:
  7029  003202  EF8E  F018         	goto	l7972
  7030  003206                     u9030:
  7031  003206                     
  7032                           ;src/print/format.c: 157:     if(width_str[0] == '0')
  7033  003206  0E30               	movlw	48
  7034  003208  181D               	xorwf	getWP@width_str^0,w,c
  7035  00320A  A4D8               	btfss	status,2,c
  7036  00320C  EF0A  F019         	goto	u9041
  7037  003210  EF0C  F019         	goto	u9040
  7038  003214                     u9041:
  7039  003214  EF0F  F019         	goto	l7998
  7040  003218                     u9040:
  7041  003218                     
  7042                           ;src/print/format.c: 158:       zeros = 1;
  7043  003218  0E01               	movlw	1
  7044  00321A  0100               	movlb	0	; () banked
  7045  00321C  6FE7               	movwf	_zeros& (0+255),b
  7046  00321E                     l7998:
  7047                           
  7048                           ;src/print/format.c: 160:     reverse(width_str);
  7049  00321E  0E1D               	movlw	low getWP@width_str
  7050  003220  6E12               	movwf	reverse@str^0,c
  7051  003222  0E00               	movlw	high getWP@width_str
  7052  003224  6E13               	movwf	(reverse@str+1)^0,c
  7053  003226  EC0A  F025         	call	_reverse	;wreg free
  7054  00322A                     
  7055                           ;src/print/format.c: 161:     reverse(prec_str);
  7056  00322A  0E18               	movlw	low getWP@prec_str
  7057  00322C  6E12               	movwf	reverse@str^0,c
  7058  00322E  0E00               	movlw	high getWP@prec_str
  7059  003230  6E13               	movwf	(reverse@str+1)^0,c
  7060  003232  EC0A  F025         	call	_reverse	;wreg free
  7061  003236                     
  7062                           ;src/print/format.c: 163:     if ((*width) == -1)
  7063  003236  C0A6  FFD9         	movff	getWP@width,fsr2l
  7064  00323A  C0A7  FFDA         	movff	getWP@width+1,fsr2h
  7065  00323E  28DE               	incf	postinc2,w,c
  7066  003240  E106               	bnz	u9051
  7067  003242  28DE               	incf	postinc2,w,c
  7068  003244  A4D8               	btfss	status,2,c
  7069  003246  EF27  F019         	goto	u9051
  7070  00324A  EF29  F019         	goto	u9050
  7071  00324E                     u9051:
  7072  00324E  EF37  F019         	goto	l8006
  7073  003252                     u9050:
  7074  003252                     
  7075                           ;src/print/format.c: 164:         (*width) = atoui(width_str);
  7076  003252  0E1D               	movlw	low getWP@width_str
  7077  003254  6E0A               	movwf	atoui@str^0,c
  7078  003256  0E00               	movlw	high getWP@width_str
  7079  003258  6E0B               	movwf	(atoui@str+1)^0,c
  7080  00325A  ECEE  F022         	call	_atoui	;wreg free
  7081  00325E  C0A6  FFD9         	movff	getWP@width,fsr2l
  7082  003262  C0A7  FFDA         	movff	getWP@width+1,fsr2h
  7083  003266  C00A  FFDE         	movff	?_atoui,postinc2
  7084  00326A  C00B  FFDD         	movff	?_atoui+1,postdec2
  7085  00326E                     l8006:
  7086                           
  7087                           ;src/print/format.c: 166:     if (p >= 0 && (*precision) == -1)
  7088  00326E  BE29               	btfsc	(getWP@p+1)^0,7,c
  7089  003270  EF3C  F019         	goto	u9061
  7090  003274  EF3E  F019         	goto	u9060
  7091  003278                     u9061:
  7092  003278  EF5A  F019         	goto	l490
  7093  00327C                     u9060:
  7094  00327C  C0A8  FFD9         	movff	getWP@precision,fsr2l
  7095  003280  C0A9  FFDA         	movff	getWP@precision+1,fsr2h
  7096  003284  28DE               	incf	postinc2,w,c
  7097  003286  E106               	bnz	u9071
  7098  003288  28DE               	incf	postinc2,w,c
  7099  00328A  A4D8               	btfss	status,2,c
  7100  00328C  EF4A  F019         	goto	u9071
  7101  003290  EF4C  F019         	goto	u9070
  7102  003294                     u9071:
  7103  003294  EF5A  F019         	goto	l490
  7104  003298                     u9070:
  7105  003298                     
  7106                           ;src/print/format.c: 167:         (*precision) = atoui(prec_str);
  7107  003298  0E18               	movlw	low getWP@prec_str
  7108  00329A  6E0A               	movwf	atoui@str^0,c
  7109  00329C  0E00               	movlw	high getWP@prec_str
  7110  00329E  6E0B               	movwf	(atoui@str+1)^0,c
  7111  0032A0  ECEE  F022         	call	_atoui	;wreg free
  7112  0032A4  C0A8  FFD9         	movff	getWP@precision,fsr2l
  7113  0032A8  C0A9  FFDA         	movff	getWP@precision+1,fsr2h
  7114  0032AC  C00A  FFDE         	movff	?_atoui,postinc2
  7115  0032B0  C00B  FFDD         	movff	?_atoui+1,postdec2
  7116  0032B4                     l490:
  7117  0032B4  0012               	return		;funcret
  7118  0032B6                     __end_of_getWP:
  7119                           	opt callstack 0
  7120                           
  7121 ;; *************** function _searchc *****************
  7122 ;; Defined at:
  7123 ;;		line 11 in file "src/print/format.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  str             2    7[COMRAM] PTR unsigned char 
  7126 ;;		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), 
  7127 ;;  c               1    9[COMRAM] unsigned char 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  a               2   11[COMRAM] int 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1    wreg      _Bool 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7139 ;;      Params:         3       0       0       0       0       0       0       0       0
  7140 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7141 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7142 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7143 ;;Total ram usage:        6 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    3
  7146 ;; This function calls:
  7147 ;;		_strlen
  7148 ;; This function is called by:
  7149 ;;		_getWP
  7150 ;;		_precF
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text17
  7155  004EB8                     __ptext17:
  7156                           	opt callstack 0
  7157  004EB8                     _searchc:
  7158                           	opt callstack 23
  7159  004EB8                     
  7160                           ;src/print/format.c: 12:     int a;;src/print/format.c: 13:     for(a = 0; a < strlen(st
      +                          r); a++)
  7161  004EB8  0E00               	movlw	0
  7162  004EBA  6E0D               	movwf	(searchc@a+1)^0,c
  7163  004EBC  0E00               	movlw	0
  7164  004EBE  6E0C               	movwf	searchc@a^0,c
  7165  004EC0  EF76  F027         	goto	l7628
  7166  004EC4                     l7620:
  7167                           
  7168                           ;src/print/format.c: 14:     {;src/print/format.c: 15:         if (str[a]==c)
  7169  004EC4  500C               	movf	searchc@a^0,w,c
  7170  004EC6  2408               	addwf	searchc@str^0,w,c
  7171  004EC8  6ED9               	movwf	fsr2l,c
  7172  004ECA  500D               	movf	(searchc@a+1)^0,w,c
  7173  004ECC  2009               	addwfc	(searchc@str+1)^0,w,c
  7174  004ECE  6EDA               	movwf	fsr2h,c
  7175  004ED0  500A               	movf	searchc@c^0,w,c
  7176  004ED2  18DE               	xorwf	postinc2,w,c
  7177  004ED4  A4D8               	btfss	status,2,c
  7178  004ED6  EF6F  F027         	goto	u8421
  7179  004EDA  EF71  F027         	goto	u8420
  7180  004EDE                     u8421:
  7181  004EDE  EF74  F027         	goto	l7626
  7182  004EE2                     u8420:
  7183  004EE2                     
  7184                           ;src/print/format.c: 16:             return 1;
  7185  004EE2  0E01               	movlw	1
  7186  004EE4  EF88  F027         	goto	l424
  7187  004EE8                     l7626:
  7188                           
  7189                           ;src/print/format.c: 17:     }
  7190  004EE8  4A0C               	infsnz	searchc@a^0,f,c
  7191  004EEA  2A0D               	incf	(searchc@a+1)^0,f,c
  7192  004EEC                     l7628:
  7193  004EEC  C008  F004         	movff	searchc@str,strlen@s
  7194  004EF0  C009  F005         	movff	searchc@str+1,strlen@s+1
  7195  004EF4  EC7E  F029         	call	_strlen	;wreg free
  7196  004EF8  5004               	movf	?_strlen^0,w,c
  7197  004EFA  5C0C               	subwf	searchc@a^0,w,c
  7198  004EFC  5005               	movf	(?_strlen+1)^0,w,c
  7199  004EFE  580D               	subwfb	(searchc@a+1)^0,w,c
  7200  004F00  A0D8               	btfss	status,0,c
  7201  004F02  EF85  F027         	goto	u8431
  7202  004F06  EF87  F027         	goto	u8430
  7203  004F0A                     u8431:
  7204  004F0A  EF62  F027         	goto	l7620
  7205  004F0E                     u8430:
  7206  004F0E                     
  7207                           ;src/print/format.c: 18:     return 0;
  7208  004F0E  0E00               	movlw	0
  7209  004F10                     l424:
  7210  004F10  0012               	return		;funcret
  7211  004F12                     __end_of_searchc:
  7212                           	opt callstack 0
  7213                           
  7214 ;; *************** function _posc *****************
  7215 ;; Defined at:
  7216 ;;		line 24 in file "src/print/format.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;  str             2    7[COMRAM] PTR unsigned char 
  7219 ;;		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), 
  7220 ;;  c               1    9[COMRAM] unsigned char 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  a               2   11[COMRAM] int 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  2    7[COMRAM] int 
  7225 ;; Registers used:
  7226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7232 ;;      Params:         3       0       0       0       0       0       0       0       0
  7233 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7234 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7235 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7236 ;;Total ram usage:        6 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:    3
  7239 ;; This function calls:
  7240 ;;		_strlen
  7241 ;; This function is called by:
  7242 ;;		_roundStr
  7243 ;;		_getWP
  7244 ;;		_precF
  7245 ;;		_precE
  7246 ;;		_precG
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text18
  7251  004D98                     __ptext18:
  7252                           	opt callstack 0
  7253  004D98                     _posc:
  7254                           	opt callstack 22
  7255  004D98                     
  7256                           ;src/print/format.c: 25:     int a;;src/print/format.c: 26:     for(a = 0; a < strlen(st
      +                          r); a++)
  7257  004D98  0E00               	movlw	0
  7258  004D9A  6E0D               	movwf	(posc@a+1)^0,c
  7259  004D9C  0E00               	movlw	0
  7260  004D9E  6E0C               	movwf	posc@a^0,c
  7261  004DA0  EFE9  F026         	goto	l7014
  7262  004DA4                     l7008:
  7263                           
  7264                           ;src/print/format.c: 27:     {;src/print/format.c: 28:         if (str[a]==c)
  7265  004DA4  500C               	movf	posc@a^0,w,c
  7266  004DA6  2408               	addwf	posc@str^0,w,c
  7267  004DA8  6ED9               	movwf	fsr2l,c
  7268  004DAA  500D               	movf	(posc@a+1)^0,w,c
  7269  004DAC  2009               	addwfc	(posc@str+1)^0,w,c
  7270  004DAE  6EDA               	movwf	fsr2h,c
  7271  004DB0  500A               	movf	posc@c^0,w,c
  7272  004DB2  18DE               	xorwf	postinc2,w,c
  7273  004DB4  A4D8               	btfss	status,2,c
  7274  004DB6  EFDF  F026         	goto	u7391
  7275  004DBA  EFE1  F026         	goto	u7390
  7276  004DBE                     u7391:
  7277  004DBE  EFE7  F026         	goto	l7012
  7278  004DC2                     u7390:
  7279  004DC2                     
  7280                           ;src/print/format.c: 29:             return a;
  7281  004DC2  C00C  F008         	movff	posc@a,?_posc
  7282  004DC6  C00D  F009         	movff	posc@a+1,?_posc+1
  7283  004DCA  EFFC  F026         	goto	l431
  7284  004DCE                     l7012:
  7285                           
  7286                           ;src/print/format.c: 30:     }
  7287  004DCE  4A0C               	infsnz	posc@a^0,f,c
  7288  004DD0  2A0D               	incf	(posc@a+1)^0,f,c
  7289  004DD2                     l7014:
  7290  004DD2  C008  F004         	movff	posc@str,strlen@s
  7291  004DD6  C009  F005         	movff	posc@str+1,strlen@s+1
  7292  004DDA  EC7E  F029         	call	_strlen	;wreg free
  7293  004DDE  5004               	movf	?_strlen^0,w,c
  7294  004DE0  5C0C               	subwf	posc@a^0,w,c
  7295  004DE2  5005               	movf	(?_strlen+1)^0,w,c
  7296  004DE4  580D               	subwfb	(posc@a+1)^0,w,c
  7297  004DE6  A0D8               	btfss	status,0,c
  7298  004DE8  EFF8  F026         	goto	u7401
  7299  004DEC  EFFA  F026         	goto	u7400
  7300  004DF0                     u7401:
  7301  004DF0  EFD2  F026         	goto	l7008
  7302  004DF4                     u7400:
  7303  004DF4                     
  7304                           ;src/print/format.c: 31:     return -1;
  7305  004DF4  6808               	setf	?_posc^0,c
  7306  004DF6  6809               	setf	(?_posc+1)^0,c
  7307  004DF8                     l431:
  7308  004DF8  0012               	return		;funcret
  7309  004DFA                     __end_of_posc:
  7310                           	opt callstack 0
  7311                           
  7312 ;; *************** function _atoui *****************
  7313 ;; Defined at:
  7314 ;;		line 57 in file "src/print/toString.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  str             2    9[COMRAM] PTR unsigned char 
  7317 ;;		 -> getWP@prec_str(5), getWP@width_str(5), 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;  i               2   16[COMRAM] int 
  7320 ;;  vp              2   14[COMRAM] int 
  7321 ;;  num             2   12[COMRAM] int 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  2    9[COMRAM] int 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7331 ;;      Params:         2       0       0       0       0       0       0       0       0
  7332 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7333 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7334 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7335 ;;Total ram usage:        9 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    3
  7338 ;; This function calls:
  7339 ;;		___wmul
  7340 ;;		_strlen
  7341 ;; This function is called by:
  7342 ;;		_getWP
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text19
  7347  0045DC                     __ptext19:
  7348                           	opt callstack 0
  7349  0045DC                     _atoui:
  7350                           	opt callstack 23
  7351  0045DC                     
  7352                           ;src/print/toString.c: 58:     int i;;src/print/toString.c: 59:     int num = 0;
  7353  0045DC  0E00               	movlw	0
  7354  0045DE  6E0E               	movwf	(atoui@num+1)^0,c
  7355  0045E0  0E00               	movlw	0
  7356  0045E2  6E0D               	movwf	atoui@num^0,c
  7357                           
  7358                           ;src/print/toString.c: 60:     int vp = 1;
  7359  0045E4  0E00               	movlw	0
  7360  0045E6  6E10               	movwf	(atoui@vp+1)^0,c
  7361  0045E8  0E01               	movlw	1
  7362  0045EA  6E0F               	movwf	atoui@vp^0,c
  7363                           
  7364                           ;src/print/toString.c: 62:     for (i = 0; i < strlen(str); i++) {
  7365  0045EC  0E00               	movlw	0
  7366  0045EE  6E12               	movwf	(atoui@i+1)^0,c
  7367  0045F0  0E00               	movlw	0
  7368  0045F2  6E11               	movwf	atoui@i^0,c
  7369  0045F4  EF40  F023         	goto	l7726
  7370  0045F8                     l7716:
  7371                           
  7372                           ;src/print/toString.c: 63:         if(str[i] >= '0' && str[i] <= '9'){
  7373  0045F8  5011               	movf	atoui@i^0,w,c
  7374  0045FA  240A               	addwf	atoui@str^0,w,c
  7375  0045FC  6ED9               	movwf	fsr2l,c
  7376  0045FE  5012               	movf	(atoui@i+1)^0,w,c
  7377  004600  200B               	addwfc	(atoui@str+1)^0,w,c
  7378  004602  6EDA               	movwf	fsr2h,c
  7379  004604  0E2F               	movlw	47
  7380  004606  64DF               	cpfsgt	indf2,c
  7381  004608  EF08  F023         	goto	u8591
  7382  00460C  EF0A  F023         	goto	u8590
  7383  004610                     u8591:
  7384  004610  EF51  F023         	goto	l780
  7385  004614                     u8590:
  7386  004614  5011               	movf	atoui@i^0,w,c
  7387  004616  240A               	addwf	atoui@str^0,w,c
  7388  004618  6ED9               	movwf	fsr2l,c
  7389  00461A  5012               	movf	(atoui@i+1)^0,w,c
  7390  00461C  200B               	addwfc	(atoui@str+1)^0,w,c
  7391  00461E  6EDA               	movwf	fsr2h,c
  7392  004620  0E3A               	movlw	58
  7393  004622  60DF               	cpfslt	indf2,c
  7394  004624  EF16  F023         	goto	u8601
  7395  004628  EF18  F023         	goto	u8600
  7396  00462C                     u8601:
  7397  00462C  EF51  F023         	goto	l780
  7398  004630                     u8600:
  7399  004630                     
  7400                           ;src/print/toString.c: 64:             num += (str[i] - 48) * vp;
  7401  004630  5011               	movf	atoui@i^0,w,c
  7402  004632  240A               	addwf	atoui@str^0,w,c
  7403  004634  6ED9               	movwf	fsr2l,c
  7404  004636  5012               	movf	(atoui@i+1)^0,w,c
  7405  004638  200B               	addwfc	(atoui@str+1)^0,w,c
  7406  00463A  6EDA               	movwf	fsr2h,c
  7407  00463C  50DF               	movf	indf2,w,c
  7408  00463E  6E0C               	movwf	??_atoui^0,c
  7409  004640  0ED0               	movlw	208
  7410  004642  240C               	addwf	??_atoui^0,w,c
  7411  004644  6E04               	movwf	___wmul@multiplier^0,c
  7412  004646  6A05               	clrf	(___wmul@multiplier+1)^0,c
  7413  004648  0EFF               	movlw	255
  7414  00464A  2205               	addwfc	(___wmul@multiplier+1)^0,f,c
  7415  00464C  C00F  F006         	movff	atoui@vp,___wmul@multiplicand
  7416  004650  C010  F007         	movff	atoui@vp+1,___wmul@multiplicand+1
  7417  004654  ECD6  F029         	call	___wmul	;wreg free
  7418  004658  5004               	movf	?___wmul^0,w,c
  7419  00465A  260D               	addwf	atoui@num^0,f,c
  7420  00465C  5005               	movf	(?___wmul+1)^0,w,c
  7421  00465E  220E               	addwfc	(atoui@num+1)^0,f,c
  7422  004660                     
  7423                           ;src/print/toString.c: 65:             vp *= 10;
  7424  004660  C00F  F004         	movff	atoui@vp,___wmul@multiplier
  7425  004664  C010  F005         	movff	atoui@vp+1,___wmul@multiplier+1
  7426  004668  0E00               	movlw	0
  7427  00466A  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  7428  00466C  0E0A               	movlw	10
  7429  00466E  6E06               	movwf	___wmul@multiplicand^0,c
  7430  004670  ECD6  F029         	call	___wmul	;wreg free
  7431  004674  C004  F00F         	movff	?___wmul,atoui@vp
  7432  004678  C005  F010         	movff	?___wmul+1,atoui@vp+1
  7433  00467C                     
  7434                           ;src/print/toString.c: 69:     }
  7435  00467C  4A11               	infsnz	atoui@i^0,f,c
  7436  00467E  2A12               	incf	(atoui@i+1)^0,f,c
  7437  004680                     l7726:
  7438  004680  C00A  F004         	movff	atoui@str,strlen@s
  7439  004684  C00B  F005         	movff	atoui@str+1,strlen@s+1
  7440  004688  EC7E  F029         	call	_strlen	;wreg free
  7441  00468C  5004               	movf	?_strlen^0,w,c
  7442  00468E  5C11               	subwf	atoui@i^0,w,c
  7443  004690  5005               	movf	(?_strlen+1)^0,w,c
  7444  004692  5812               	subwfb	(atoui@i+1)^0,w,c
  7445  004694  A0D8               	btfss	status,0,c
  7446  004696  EF4F  F023         	goto	u8611
  7447  00469A  EF51  F023         	goto	u8610
  7448  00469E                     u8611:
  7449  00469E  EFFC  F022         	goto	l7716
  7450  0046A2                     u8610:
  7451  0046A2                     l780:
  7452                           
  7453                           ;src/print/toString.c: 70:     return num;
  7454  0046A2  C00D  F00A         	movff	atoui@num,?_atoui
  7455  0046A6  C00E  F00B         	movff	atoui@num+1,?_atoui+1
  7456  0046AA  0012               	return		;funcret
  7457  0046AC                     __end_of_atoui:
  7458                           	opt callstack 0
  7459                           
  7460 ;; *************** function ___wmul *****************
  7461 ;; Defined at:
  7462 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  multiplier      2    3[COMRAM] unsigned int 
  7465 ;;  multiplicand    2    5[COMRAM] unsigned int 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  product         2    7[COMRAM] unsigned int 
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  2    3[COMRAM] unsigned int 
  7470 ;; Registers used:
  7471 ;;		wreg, status,2, status,0, prodl, prodh
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7477 ;;      Params:         4       0       0       0       0       0       0       0       0
  7478 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7480 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7481 ;;Total ram usage:        6 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    2
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_atoui
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text20
  7492  0053AC                     __ptext20:
  7493                           	opt callstack 0
  7494  0053AC                     ___wmul:
  7495                           	opt callstack 23
  7496  0053AC  5004               	movf	___wmul@multiplier^0,w,c
  7497  0053AE  0206               	mulwf	___wmul@multiplicand^0,c
  7498  0053B0  CFF3 F008          	movff	prodl,___wmul@product
  7499  0053B4  CFF4 F009          	movff	prodh,___wmul@product+1
  7500  0053B8  5004               	movf	___wmul@multiplier^0,w,c
  7501  0053BA  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  7502  0053BC  50F3               	movf	243,w,c
  7503  0053BE  2609               	addwf	(___wmul@product+1)^0,f,c
  7504  0053C0  5005               	movf	(___wmul@multiplier+1)^0,w,c
  7505  0053C2  0206               	mulwf	___wmul@multiplicand^0,c
  7506  0053C4  50F3               	movf	243,w,c
  7507  0053C6  2609               	addwf	(___wmul@product+1)^0,f,c
  7508  0053C8  C008  F004         	movff	___wmul@product,?___wmul
  7509  0053CC  C009  F005         	movff	___wmul@product+1,?___wmul+1
  7510  0053D0  0012               	return		;funcret
  7511  0053D2                     __end_of___wmul:
  7512                           	opt callstack 0
  7513                           
  7514 ;; *************** function _ftoa_sci *****************
  7515 ;; Defined at:
  7516 ;;		line 97 in file "src/print/toString.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;  buffer          2   76[BANK0 ] PTR unsigned char 
  7519 ;;		 -> my_vsprintf@buffer(64), 
  7520 ;;  value           4   78[BANK0 ] PTR unsigned char 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  digit           2   84[BANK0 ] int 
  7523 ;;  exponent        2   88[BANK0 ] int 
  7524 ;;  i               2   86[BANK0 ] int 
  7525 ;;  digit           2   82[BANK0 ] int 
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  2   76[BANK0 ] int 
  7528 ;; Registers used:
  7529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7535 ;;      Params:         0       6       0       0       0       0       0       0       0
  7536 ;;      Locals:         0       8       0       0       0       0       0       0       0
  7537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7538 ;;      Totals:         0      14       0       0       0       0       0       0       0
  7539 ;;Total ram usage:       14 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; Hardware stack levels required when called:    5
  7542 ;; This function calls:
  7543 ;;		___fleq
  7544 ;;		___flmul
  7545 ;;		___flneg
  7546 ;;		___flsub
  7547 ;;		___fltol
  7548 ;;		___xxtofl
  7549 ;;		_itoa
  7550 ;;		_normalize
  7551 ;; This function is called by:
  7552 ;;		_my_vsprintf
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text21
  7557  002876                     __ptext21:
  7558                           	opt callstack 0
  7559  002876                     _ftoa_sci:
  7560                           	opt callstack 22
  7561  002876                     
  7562                           ;src/print/toString.c: 101:     static const int width = 6;;src/print/toString.c: 103:  
      +                             if (value == 0.0) {
  7563  002876  C0AE  F004         	movff	ftoa_sci@value,___fleq@ff1
  7564  00287A  C0AF  F005         	movff	ftoa_sci@value+1,___fleq@ff1+1
  7565  00287E  C0B0  F006         	movff	ftoa_sci@value+2,___fleq@ff1+2
  7566  002882  C0B1  F007         	movff	ftoa_sci@value+3,___fleq@ff1+3
  7567  002886  0E00               	movlw	0
  7568  002888  6E08               	movwf	___fleq@ff2^0,c
  7569  00288A  0E00               	movlw	0
  7570  00288C  6E09               	movwf	(___fleq@ff2+1)^0,c
  7571  00288E  0E00               	movlw	0
  7572  002890  6E0A               	movwf	(___fleq@ff2+2)^0,c
  7573  002892  0E00               	movlw	0
  7574  002894  6E0B               	movwf	(___fleq@ff2+3)^0,c
  7575  002896  EC12  F024         	call	___fleq	;wreg free
  7576  00289A  A0D8               	btfss	status,0,c
  7577  00289C  EF52  F014         	goto	u9971
  7578  0028A0  EF54  F014         	goto	u9970
  7579  0028A4                     u9971:
  7580  0028A4  EF69  F014         	goto	l8486
  7581  0028A8                     u9970:
  7582  0028A8                     
  7583                           ;src/print/toString.c: 104:         buffer[0] = '0';
  7584  0028A8  C0AC  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7585  0028AC  C0AD  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7586  0028B0  0E30               	movlw	48
  7587  0028B2  6EDF               	movwf	indf2,c
  7588  0028B4                     
  7589                           ;src/print/toString.c: 105:         buffer[1] = '\0';
  7590  0028B4  0100               	movlb	0	; () banked
  7591  0028B6  EE20 F001          	lfsr	2,1
  7592  0028BA  51AC               	movf	ftoa_sci@buffer& (0+255),w,b
  7593  0028BC  26D9               	addwf	fsr2l,f,c
  7594  0028BE  51AD               	movf	(ftoa_sci@buffer+1)& (0+255),w,b
  7595  0028C0  22DA               	addwfc	fsr2h,f,c
  7596  0028C2  0E00               	movlw	0
  7597  0028C4  6EDF               	movwf	indf2,c
  7598  0028C6                     
  7599                           ; BSR set to: 0
  7600                           ;src/print/toString.c: 106:         return 0;
  7601  0028C6  0E00               	movlw	0
  7602  0028C8  6FAD               	movwf	(?_ftoa_sci+1)& (0+255),b
  7603  0028CA  0E00               	movlw	0
  7604  0028CC  6FAC               	movwf	?_ftoa_sci& (0+255),b
  7605  0028CE  EFAA  F015         	goto	l796
  7606  0028D2                     l8486:
  7607                           
  7608                           ;src/print/toString.c: 109:     if (value < 0.0) {
  7609  0028D2  0100               	movlb	0	; () banked
  7610  0028D4  BFB1               	btfsc	(ftoa_sci@value+3)& (0+255),7,b
  7611  0028D6  EF71  F014         	goto	u9980
  7612  0028DA  EF6F  F014         	goto	u9981
  7613  0028DE                     u9981:
  7614  0028DE  EF83  F014         	goto	l8490
  7615  0028E2                     u9980:
  7616  0028E2                     
  7617                           ; BSR set to: 0
  7618                           ;src/print/toString.c: 110:         value = -value;
  7619  0028E2  C0AE  F004         	movff	ftoa_sci@value,___flneg@f1
  7620  0028E6  C0AF  F005         	movff	ftoa_sci@value+1,___flneg@f1+1
  7621  0028EA  C0B0  F006         	movff	ftoa_sci@value+2,___flneg@f1+2
  7622  0028EE  C0B1  F007         	movff	ftoa_sci@value+3,___flneg@f1+3
  7623  0028F2  EC2C  F029         	call	___flneg	;wreg free
  7624  0028F6  C004  F0AE         	movff	?___flneg,ftoa_sci@value
  7625  0028FA  C005  F0AF         	movff	?___flneg+1,ftoa_sci@value+1
  7626  0028FE  C006  F0B0         	movff	?___flneg+2,ftoa_sci@value+2
  7627  002902  C007  F0B1         	movff	?___flneg+3,ftoa_sci@value+3
  7628  002906                     l8490:
  7629                           
  7630                           ;src/print/toString.c: 113:     exponent = normalize(&value);
  7631  002906  0EAE               	movlw	low ftoa_sci@value
  7632  002908  6E53               	movwf	normalize@val^0,c
  7633  00290A  0E00               	movlw	high ftoa_sci@value
  7634  00290C  6E54               	movwf	(normalize@val+1)^0,c
  7635  00290E  EC60  F01F         	call	_normalize	;wreg free
  7636  002912  C053  F0B8         	movff	?_normalize,ftoa_sci@exponent
  7637  002916  C054  F0B9         	movff	?_normalize+1,ftoa_sci@exponent+1
  7638  00291A                     
  7639                           ;src/print/toString.c: 115:     int digit = value * 10.0;
  7640  00291A  0E00               	movlw	0
  7641  00291C  6E4B               	movwf	___flmul@a^0,c
  7642  00291E  0E00               	movlw	0
  7643  002920  6E4C               	movwf	(___flmul@a+1)^0,c
  7644  002922  0E20               	movlw	32
  7645  002924  6E4D               	movwf	(___flmul@a+2)^0,c
  7646  002926  0E41               	movlw	65
  7647  002928  6E4E               	movwf	(___flmul@a+3)^0,c
  7648  00292A  C0AE  F047         	movff	ftoa_sci@value,___flmul@b
  7649  00292E  C0AF  F048         	movff	ftoa_sci@value+1,___flmul@b+1
  7650  002932  C0B0  F049         	movff	ftoa_sci@value+2,___flmul@b+2
  7651  002936  C0B1  F04A         	movff	ftoa_sci@value+3,___flmul@b+3
  7652  00293A  EC63  F00B         	call	___flmul	;wreg free
  7653  00293E  C047  F08B         	movff	?___flmul,___fltol@f1
  7654  002942  C048  F08C         	movff	?___flmul+1,___fltol@f1+1
  7655  002946  C049  F08D         	movff	?___flmul+2,___fltol@f1+2
  7656  00294A  C04A  F08E         	movff	?___flmul+3,___fltol@f1+3
  7657  00294E  EC04  F021         	call	___fltol	;wreg free
  7658  002952  C08B  F0B2         	movff	?___fltol,ftoa_sci@digit
  7659  002956  C08C  F0B3         	movff	?___fltol+1,ftoa_sci@digit+1
  7660  00295A                     
  7661                           ;src/print/toString.c: 116:     *buffer++ = digit + '0';
  7662  00295A  0100               	movlb	0	; () banked
  7663  00295C  51B2               	movf	ftoa_sci@digit& (0+255),w,b
  7664  00295E  0F30               	addlw	48
  7665  002960  C0AC  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7666  002964  C0AD  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7667  002968  6EDF               	movwf	indf2,c
  7668  00296A                     
  7669                           ; BSR set to: 0
  7670  00296A  4BAC               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7671  00296C  2BAD               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7672  00296E                     
  7673                           ; BSR set to: 0
  7674                           ;src/print/toString.c: 117:     value = value * 10.0 - digit;
  7675  00296E  0E00               	movlw	0
  7676  002970  6E4B               	movwf	___flmul@a^0,c
  7677  002972  0E00               	movlw	0
  7678  002974  6E4C               	movwf	(___flmul@a+1)^0,c
  7679  002976  0E20               	movlw	32
  7680  002978  6E4D               	movwf	(___flmul@a+2)^0,c
  7681  00297A  0E41               	movlw	65
  7682  00297C  6E4E               	movwf	(___flmul@a+3)^0,c
  7683  00297E  C0AE  F047         	movff	ftoa_sci@value,___flmul@b
  7684  002982  C0AF  F048         	movff	ftoa_sci@value+1,___flmul@b+1
  7685  002986  C0B0  F049         	movff	ftoa_sci@value+2,___flmul@b+2
  7686  00298A  C0B1  F04A         	movff	ftoa_sci@value+3,___flmul@b+3
  7687  00298E  EC63  F00B         	call	___flmul	;wreg free
  7688  002992  C047  F06D         	movff	?___flmul,___flsub@b
  7689  002996  C048  F06E         	movff	?___flmul+1,___flsub@b+1
  7690  00299A  C049  F06F         	movff	?___flmul+2,___flsub@b+2
  7691  00299E  C04A  F070         	movff	?___flmul+3,___flsub@b+3
  7692  0029A2  C0B2  F010         	movff	ftoa_sci@digit,___xxtofl@val
  7693  0029A6  C0B3  F011         	movff	ftoa_sci@digit+1,___xxtofl@val+1
  7694  0029AA  0E00               	movlw	0
  7695  0029AC  BE11               	btfsc	(___xxtofl@val+1)^0,7,c
  7696  0029AE  0EFF               	movlw	-1
  7697  0029B0  6E12               	movwf	(___xxtofl@val+2)^0,c
  7698  0029B2  6E13               	movwf	(___xxtofl@val+3)^0,c
  7699  0029B4  0E01               	movlw	1
  7700  0029B6  EC5D  F01C         	call	___xxtofl
  7701  0029BA  C010  F071         	movff	?___xxtofl,___flsub@a
  7702  0029BE  C011  F072         	movff	?___xxtofl+1,___flsub@a+1
  7703  0029C2  C012  F073         	movff	?___xxtofl+2,___flsub@a+2
  7704  0029C6  C013  F074         	movff	?___xxtofl+3,___flsub@a+3
  7705  0029CA  EC28  F028         	call	___flsub	;wreg free
  7706  0029CE  C06D  F0AE         	movff	?___flsub,ftoa_sci@value
  7707  0029D2  C06E  F0AF         	movff	?___flsub+1,ftoa_sci@value+1
  7708  0029D6  C06F  F0B0         	movff	?___flsub+2,ftoa_sci@value+2
  7709  0029DA  C070  F0B1         	movff	?___flsub+3,ftoa_sci@value+3
  7710  0029DE                     
  7711                           ;src/print/toString.c: 118:     --exponent;
  7712  0029DE  0100               	movlb	0	; () banked
  7713  0029E0  07B8               	decf	ftoa_sci@exponent& (0+255),f,b
  7714  0029E2  A0D8               	btfss	status,0,c
  7715  0029E4  07B9               	decf	(ftoa_sci@exponent+1)& (0+255),f,b
  7716  0029E6                     
  7717                           ; BSR set to: 0
  7718                           ;src/print/toString.c: 120:     *buffer++ = '.';
  7719  0029E6  C0AC  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7720  0029EA  C0AD  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7721  0029EE  0E2E               	movlw	46
  7722  0029F0  6EDF               	movwf	indf2,c
  7723  0029F2                     
  7724                           ; BSR set to: 0
  7725  0029F2  4BAC               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7726  0029F4  2BAD               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7727  0029F6                     
  7728                           ; BSR set to: 0
  7729                           ;src/print/toString.c: 121:     int i;;src/print/toString.c: 122:     for (i = 0; i < wi
      +                          dth; i++) {
  7730  0029F6  0E00               	movlw	0
  7731  0029F8  6FB7               	movwf	(ftoa_sci@i+1)& (0+255),b
  7732  0029FA  0E00               	movlw	0
  7733  0029FC  6FB6               	movwf	ftoa_sci@i& (0+255),b
  7734  0029FE                     l8512:
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;src/print/toString.c: 123:         int digit = value * 10.0;
  7738  0029FE  0E00               	movlw	0
  7739  002A00  6E4B               	movwf	___flmul@a^0,c
  7740  002A02  0E00               	movlw	0
  7741  002A04  6E4C               	movwf	(___flmul@a+1)^0,c
  7742  002A06  0E20               	movlw	32
  7743  002A08  6E4D               	movwf	(___flmul@a+2)^0,c
  7744  002A0A  0E41               	movlw	65
  7745  002A0C  6E4E               	movwf	(___flmul@a+3)^0,c
  7746  002A0E  C0AE  F047         	movff	ftoa_sci@value,___flmul@b
  7747  002A12  C0AF  F048         	movff	ftoa_sci@value+1,___flmul@b+1
  7748  002A16  C0B0  F049         	movff	ftoa_sci@value+2,___flmul@b+2
  7749  002A1A  C0B1  F04A         	movff	ftoa_sci@value+3,___flmul@b+3
  7750  002A1E  EC63  F00B         	call	___flmul	;wreg free
  7751  002A22  C047  F08B         	movff	?___flmul,___fltol@f1
  7752  002A26  C048  F08C         	movff	?___flmul+1,___fltol@f1+1
  7753  002A2A  C049  F08D         	movff	?___flmul+2,___fltol@f1+2
  7754  002A2E  C04A  F08E         	movff	?___flmul+3,___fltol@f1+3
  7755  002A32  EC04  F021         	call	___fltol	;wreg free
  7756  002A36  C08B  F0B4         	movff	?___fltol,ftoa_sci@digit_1711
  7757  002A3A  C08C  F0B5         	movff	?___fltol+1,ftoa_sci@digit_1711+1
  7758  002A3E                     
  7759                           ;src/print/toString.c: 124:         *buffer++ = digit + '0';
  7760  002A3E  0100               	movlb	0	; () banked
  7761  002A40  51B4               	movf	ftoa_sci@digit_1711& (0+255),w,b
  7762  002A42  0F30               	addlw	48
  7763  002A44  C0AC  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7764  002A48  C0AD  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7765  002A4C  6EDF               	movwf	indf2,c
  7766  002A4E                     
  7767                           ; BSR set to: 0
  7768  002A4E  4BAC               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7769  002A50  2BAD               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7770  002A52                     
  7771                           ; BSR set to: 0
  7772                           ;src/print/toString.c: 125:         value = value * 10.0 - digit;
  7773  002A52  0E00               	movlw	0
  7774  002A54  6E4B               	movwf	___flmul@a^0,c
  7775  002A56  0E00               	movlw	0
  7776  002A58  6E4C               	movwf	(___flmul@a+1)^0,c
  7777  002A5A  0E20               	movlw	32
  7778  002A5C  6E4D               	movwf	(___flmul@a+2)^0,c
  7779  002A5E  0E41               	movlw	65
  7780  002A60  6E4E               	movwf	(___flmul@a+3)^0,c
  7781  002A62  C0AE  F047         	movff	ftoa_sci@value,___flmul@b
  7782  002A66  C0AF  F048         	movff	ftoa_sci@value+1,___flmul@b+1
  7783  002A6A  C0B0  F049         	movff	ftoa_sci@value+2,___flmul@b+2
  7784  002A6E  C0B1  F04A         	movff	ftoa_sci@value+3,___flmul@b+3
  7785  002A72  EC63  F00B         	call	___flmul	;wreg free
  7786  002A76  C047  F06D         	movff	?___flmul,___flsub@b
  7787  002A7A  C048  F06E         	movff	?___flmul+1,___flsub@b+1
  7788  002A7E  C049  F06F         	movff	?___flmul+2,___flsub@b+2
  7789  002A82  C04A  F070         	movff	?___flmul+3,___flsub@b+3
  7790  002A86  C0B4  F010         	movff	ftoa_sci@digit_1711,___xxtofl@val
  7791  002A8A  C0B5  F011         	movff	ftoa_sci@digit_1711+1,___xxtofl@val+1
  7792  002A8E  0E00               	movlw	0
  7793  002A90  BE11               	btfsc	(___xxtofl@val+1)^0,7,c
  7794  002A92  0EFF               	movlw	-1
  7795  002A94  6E12               	movwf	(___xxtofl@val+2)^0,c
  7796  002A96  6E13               	movwf	(___xxtofl@val+3)^0,c
  7797  002A98  0E01               	movlw	1
  7798  002A9A  EC5D  F01C         	call	___xxtofl
  7799  002A9E  C010  F071         	movff	?___xxtofl,___flsub@a
  7800  002AA2  C011  F072         	movff	?___xxtofl+1,___flsub@a+1
  7801  002AA6  C012  F073         	movff	?___xxtofl+2,___flsub@a+2
  7802  002AAA  C013  F074         	movff	?___xxtofl+3,___flsub@a+3
  7803  002AAE  EC28  F028         	call	___flsub	;wreg free
  7804  002AB2  C06D  F0AE         	movff	?___flsub,ftoa_sci@value
  7805  002AB6  C06E  F0AF         	movff	?___flsub+1,ftoa_sci@value+1
  7806  002ABA  C06F  F0B0         	movff	?___flsub+2,ftoa_sci@value+2
  7807  002ABE  C070  F0B1         	movff	?___flsub+3,ftoa_sci@value+3
  7808  002AC2                     
  7809                           ;src/print/toString.c: 126:     }
  7810  002AC2  0100               	movlb	0	; () banked
  7811  002AC4  4BB6               	infsnz	ftoa_sci@i& (0+255),f,b
  7812  002AC6  2BB7               	incf	(ftoa_sci@i+1)& (0+255),f,b
  7813  002AC8                     
  7814                           ; BSR set to: 0
  7815  002AC8  BFB7               	btfsc	(ftoa_sci@i+1)& (0+255),7,b
  7816  002ACA  EF70  F015         	goto	u9991
  7817  002ACE  51B7               	movf	(ftoa_sci@i+1)& (0+255),w,b
  7818  002AD0  E109               	bnz	u9990
  7819  002AD2  0E06               	movlw	6
  7820  002AD4  5DB6               	subwf	ftoa_sci@i& (0+255),w,b
  7821  002AD6  A0D8               	btfss	status,0,c
  7822  002AD8  EF70  F015         	goto	u9991
  7823  002ADC  EF72  F015         	goto	u9990
  7824  002AE0                     u9991:
  7825  002AE0  EFFF  F014         	goto	l8512
  7826  002AE4                     u9990:
  7827  002AE4                     
  7828                           ; BSR set to: 0
  7829                           ;src/print/toString.c: 128:     *buffer++ = 'e';
  7830  002AE4  C0AC  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7831  002AE8  C0AD  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7832  002AEC  0E65               	movlw	101
  7833  002AEE  6EDF               	movwf	indf2,c
  7834  002AF0                     
  7835                           ; BSR set to: 0
  7836  002AF0  4BAC               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7837  002AF2  2BAD               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7838  002AF4                     
  7839                           ; BSR set to: 0
  7840                           ;src/print/toString.c: 129:     if (exponent >= 0)
  7841  002AF4  BFB9               	btfsc	(ftoa_sci@exponent+1)& (0+255),7,b
  7842  002AF6  EF7F  F015         	goto	u10001
  7843  002AFA  EF81  F015         	goto	u10000
  7844  002AFE                     u10001:
  7845  002AFE  EF8B  F015         	goto	l8534
  7846  002B02                     u10000:
  7847  002B02                     
  7848                           ; BSR set to: 0
  7849                           ;src/print/toString.c: 130:         *buffer++ = '+';
  7850  002B02  C0AC  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7851  002B06  C0AD  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7852  002B0A  0E2B               	movlw	43
  7853  002B0C  6EDF               	movwf	indf2,c
  7854  002B0E                     l8532:
  7855                           
  7856                           ; BSR set to: 0
  7857  002B0E  4BAC               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7858  002B10  2BAD               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7859  002B12  EF93  F015         	goto	l8538
  7860  002B16                     l8534:
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;src/print/toString.c: 132:         *buffer++ = '-';
  7864  002B16  C0AC  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7865  002B1A  C0AD  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7866  002B1E  0E2D               	movlw	45
  7867  002B20  6EDF               	movwf	indf2,c
  7868  002B22  EF87  F015         	goto	l8532
  7869  002B26                     l8538:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;src/print/toString.c: 133:     itoa(buffer, exponent, 10);
  7873  002B26  C0AC  F0A4         	movff	ftoa_sci@buffer,itoa@str
  7874  002B2A  C0AD  F0A5         	movff	ftoa_sci@buffer+1,itoa@str+1
  7875  002B2E  C0B8  F0A6         	movff	ftoa_sci@exponent,itoa@num
  7876  002B32  C0B9  F0A7         	movff	ftoa_sci@exponent+1,itoa@num+1
  7877  002B36  0E00               	movlw	0
  7878  002B38  BFA7               	btfsc	(itoa@num+1)& (0+255),7,b
  7879  002B3A  0EFF               	movlw	-1
  7880  002B3C  6FA8               	movwf	(itoa@num+2)& (0+255),b
  7881  002B3E  6FA9               	movwf	(itoa@num+3)& (0+255),b
  7882  002B40  0E00               	movlw	0
  7883  002B42  6FAB               	movwf	(itoa@base_+1)& (0+255),b
  7884  002B44  0E0A               	movlw	10
  7885  002B46  6FAA               	movwf	itoa@base_& (0+255),b
  7886  002B48  EC37  F01D         	call	_itoa	;wreg free
  7887  002B4C                     
  7888                           ;src/print/toString.c: 134:     return exponent;
  7889  002B4C  C0B8  F0AC         	movff	ftoa_sci@exponent,?_ftoa_sci
  7890  002B50  C0B9  F0AD         	movff	ftoa_sci@exponent+1,?_ftoa_sci+1
  7891  002B54                     l796:
  7892  002B54  0012               	return		;funcret
  7893  002B56                     __end_of_ftoa_sci:
  7894                           	opt callstack 0
  7895                           
  7896 ;; *************** function _itoa *****************
  7897 ;; Defined at:
  7898 ;;		line 22 in file "src/print/toString.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  str             2   68[BANK0 ] PTR unsigned char 
  7901 ;;		 -> my_vsprintf@buffer(64), 
  7902 ;;  num             4   70[BANK0 ] long 
  7903 ;;  base_           2   74[BANK0 ] int 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  rem             4   27[COMRAM] long 
  7906 ;;  i               2   31[COMRAM] int 
  7907 ;;  isNegative      2    0        int 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2   68[BANK0 ] PTR unsigned char 
  7910 ;; Registers used:
  7911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7917 ;;      Params:         0       8       0       0       0       0       0       0       0
  7918 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7920 ;;      Totals:        12       8       0       0       0       0       0       0       0
  7921 ;;Total ram usage:       20 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:    4
  7924 ;; This function calls:
  7925 ;;		___aldiv
  7926 ;;		___almod
  7927 ;;		_reverse
  7928 ;; This function is called by:
  7929 ;;		_my_vsprintf
  7930 ;;		_ftoa_sci
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text22
  7935  003A6E                     __ptext22:
  7936                           	opt callstack 0
  7937  003A6E                     _itoa:
  7938                           	opt callstack 23
  7939  003A6E                     
  7940                           ;src/print/toString.c: 23:     int i = 0;
  7941  003A6E  0E00               	movlw	0
  7942  003A70  6E21               	movwf	(itoa@i+1)^0,c
  7943  003A72  0E00               	movlw	0
  7944  003A74  6E20               	movwf	itoa@i^0,c
  7945  003A76                     
  7946                           ;src/print/toString.c: 27:     if (num == 0) {
  7947  003A76  0100               	movlb	0	; () banked
  7948  003A78  51A6               	movf	itoa@num& (0+255),w,b
  7949  003A7A  11A7               	iorwf	(itoa@num+1)& (0+255),w,b
  7950  003A7C  11A8               	iorwf	(itoa@num+2)& (0+255),w,b
  7951  003A7E  11A9               	iorwf	(itoa@num+3)& (0+255),w,b
  7952  003A80  A4D8               	btfss	status,2,c
  7953  003A82  EF45  F01D         	goto	u8621
  7954  003A86  EF47  F01D         	goto	u8620
  7955  003A8A                     u8621:
  7956  003A8A  EF59  F01D         	goto	l7740
  7957  003A8E                     u8620:
  7958  003A8E                     
  7959                           ; BSR set to: 0
  7960                           ;src/print/toString.c: 28:         str[i++] = '0';
  7961  003A8E  C0A4  FFD9         	movff	itoa@str,fsr2l
  7962  003A92  C0A5  FFDA         	movff	itoa@str+1,fsr2h
  7963  003A96  0E30               	movlw	48
  7964  003A98  6EDF               	movwf	indf2,c
  7965  003A9A                     
  7966                           ; BSR set to: 0
  7967  003A9A  4A20               	infsnz	itoa@i^0,f,c
  7968  003A9C  2A21               	incf	(itoa@i+1)^0,f,c
  7969  003A9E                     
  7970                           ; BSR set to: 0
  7971                           ;src/print/toString.c: 29:         str[i] = '\0';
  7972  003A9E  5020               	movf	itoa@i^0,w,c
  7973  003AA0  25A4               	addwf	itoa@str& (0+255),w,b
  7974  003AA2  6ED9               	movwf	fsr2l,c
  7975  003AA4  5021               	movf	(itoa@i+1)^0,w,c
  7976  003AA6  21A5               	addwfc	(itoa@str+1)& (0+255),w,b
  7977  003AA8  6EDA               	movwf	fsr2h,c
  7978  003AAA  0E00               	movlw	0
  7979  003AAC  6EDF               	movwf	indf2,c
  7980  003AAE  EFF9  F01D         	goto	l765
  7981  003AB2                     l7740:
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;src/print/toString.c: 34:     if (num < 0 && base_ == 10) {
  7985  003AB2  BFA9               	btfsc	(itoa@num+3)& (0+255),7,b
  7986  003AB4  EF60  F01D         	goto	u8630
  7987  003AB8  EF5E  F01D         	goto	u8631
  7988  003ABC                     u8631:
  7989  003ABC  EFDF  F01D         	goto	l7762
  7990  003AC0                     u8630:
  7991  003AC0                     
  7992                           ; BSR set to: 0
  7993  003AC0  0E0A               	movlw	10
  7994  003AC2  19AA               	xorwf	itoa@base_& (0+255),w,b
  7995  003AC4  11AB               	iorwf	(itoa@base_+1)& (0+255),w,b
  7996  003AC6  A4D8               	btfss	status,2,c
  7997  003AC8  EF68  F01D         	goto	u8641
  7998  003ACC  EF6A  F01D         	goto	u8640
  7999  003AD0                     u8641:
  8000  003AD0  EFDF  F01D         	goto	l7762
  8001  003AD4                     u8640:
  8002  003AD4                     
  8003                           ; BSR set to: 0
  8004                           ;src/print/toString.c: 36:         num = -num;
  8005  003AD4  1FA9               	comf	(itoa@num+3)& (0+255),f,b
  8006  003AD6  1FA8               	comf	(itoa@num+2)& (0+255),f,b
  8007  003AD8  1FA7               	comf	(itoa@num+1)& (0+255),f,b
  8008  003ADA  6DA6               	negf	itoa@num& (0+255),b
  8009  003ADC  0E00               	movlw	0
  8010  003ADE  23A7               	addwfc	(itoa@num+1)& (0+255),f,b
  8011  003AE0  23A8               	addwfc	(itoa@num+2)& (0+255),f,b
  8012  003AE2  23A9               	addwfc	(itoa@num+3)& (0+255),f,b
  8013  003AE4  EFDF  F01D         	goto	l7762
  8014  003AE8                     l7748:
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;src/print/toString.c: 41:         long rem = num % base_;
  8018  003AE8  C0A6  F004         	movff	itoa@num,___almod@dividend
  8019  003AEC  C0A7  F005         	movff	itoa@num+1,___almod@dividend+1
  8020  003AF0  C0A8  F006         	movff	itoa@num+2,___almod@dividend+2
  8021  003AF4  C0A9  F007         	movff	itoa@num+3,___almod@dividend+3
  8022  003AF8  C0AA  F008         	movff	itoa@base_,___almod@divisor
  8023  003AFC  C0AB  F009         	movff	itoa@base_+1,___almod@divisor+1
  8024  003B00  0E00               	movlw	0
  8025  003B02  BE09               	btfsc	(___almod@divisor+1)^0,7,c
  8026  003B04  0EFF               	movlw	-1
  8027  003B06  6E0A               	movwf	(___almod@divisor+2)^0,c
  8028  003B08  6E0B               	movwf	(___almod@divisor+3)^0,c
  8029  003B0A  EC0A  F022         	call	___almod	;wreg free
  8030  003B0E  C004  F01C         	movff	?___almod,itoa@rem
  8031  003B12  C005  F01D         	movff	?___almod+1,itoa@rem+1
  8032  003B16  C006  F01E         	movff	?___almod+2,itoa@rem+2
  8033  003B1A  C007  F01F         	movff	?___almod+3,itoa@rem+3
  8034  003B1E                     
  8035                           ;src/print/toString.c: 42:         str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';
  8036  003B1E  BE1F               	btfsc	(itoa@rem+3)^0,7,c
  8037  003B20  EF9F  F01D         	goto	u8650
  8038  003B24  501F               	movf	(itoa@rem+3)^0,w,c
  8039  003B26  101E               	iorwf	(itoa@rem+2)^0,w,c
  8040  003B28  101D               	iorwf	(itoa@rem+1)^0,w,c
  8041  003B2A  E107               	bnz	u8651
  8042  003B2C  0E0A               	movlw	10
  8043  003B2E  5C1C               	subwf	itoa@rem^0,w,c
  8044  003B30  B0D8               	btfsc	status,0,c
  8045  003B32  EF9D  F01D         	goto	u8651
  8046  003B36  EF9F  F01D         	goto	u8650
  8047  003B3A                     u8651:
  8048  003B3A  EFAD  F01D         	goto	l7754
  8049  003B3E                     u8650:
  8050  003B3E  0E30               	movlw	48
  8051  003B40  241C               	addwf	itoa@rem^0,w,c
  8052  003B42  6E18               	movwf	_itoa$1693^0,c
  8053  003B44  0E00               	movlw	0
  8054  003B46  201D               	addwfc	(itoa@rem+1)^0,w,c
  8055  003B48  6E19               	movwf	(_itoa$1693+1)^0,c
  8056  003B4A  0E00               	movlw	0
  8057  003B4C  201E               	addwfc	(itoa@rem+2)^0,w,c
  8058  003B4E  6E1A               	movwf	(_itoa$1693+2)^0,c
  8059  003B50  0E00               	movlw	0
  8060  003B52  201F               	addwfc	(itoa@rem+3)^0,w,c
  8061  003B54  6E1B               	movwf	(_itoa$1693+3)^0,c
  8062  003B56  EFB9  F01D         	goto	l7756
  8063  003B5A                     l7754:
  8064  003B5A  0E57               	movlw	87
  8065  003B5C  241C               	addwf	itoa@rem^0,w,c
  8066  003B5E  6E18               	movwf	_itoa$1693^0,c
  8067  003B60  0E00               	movlw	0
  8068  003B62  201D               	addwfc	(itoa@rem+1)^0,w,c
  8069  003B64  6E19               	movwf	(_itoa$1693+1)^0,c
  8070  003B66  0E00               	movlw	0
  8071  003B68  201E               	addwfc	(itoa@rem+2)^0,w,c
  8072  003B6A  6E1A               	movwf	(_itoa$1693+2)^0,c
  8073  003B6C  0E00               	movlw	0
  8074  003B6E  201F               	addwfc	(itoa@rem+3)^0,w,c
  8075  003B70  6E1B               	movwf	(_itoa$1693+3)^0,c
  8076  003B72                     l7756:
  8077  003B72  5020               	movf	itoa@i^0,w,c
  8078  003B74  0100               	movlb	0	; () banked
  8079  003B76  25A4               	addwf	itoa@str& (0+255),w,b
  8080  003B78  6ED9               	movwf	fsr2l,c
  8081  003B7A  5021               	movf	(itoa@i+1)^0,w,c
  8082  003B7C  21A5               	addwfc	(itoa@str+1)& (0+255),w,b
  8083  003B7E  6EDA               	movwf	fsr2h,c
  8084  003B80  C018  FFDF         	movff	_itoa$1693,indf2
  8085  003B84                     
  8086                           ; BSR set to: 0
  8087  003B84  4A20               	infsnz	itoa@i^0,f,c
  8088  003B86  2A21               	incf	(itoa@i+1)^0,f,c
  8089  003B88                     
  8090                           ; BSR set to: 0
  8091                           ;src/print/toString.c: 43:         num = num/base_;
  8092  003B88  C0A6  F004         	movff	itoa@num,___aldiv@dividend
  8093  003B8C  C0A7  F005         	movff	itoa@num+1,___aldiv@dividend+1
  8094  003B90  C0A8  F006         	movff	itoa@num+2,___aldiv@dividend+2
  8095  003B94  C0A9  F007         	movff	itoa@num+3,___aldiv@dividend+3
  8096  003B98  C0AA  F008         	movff	itoa@base_,___aldiv@divisor
  8097  003B9C  C0AB  F009         	movff	itoa@base_+1,___aldiv@divisor+1
  8098  003BA0  0E00               	movlw	0
  8099  003BA2  BE09               	btfsc	(___aldiv@divisor+1)^0,7,c
  8100  003BA4  0EFF               	movlw	-1
  8101  003BA6  6E0A               	movwf	(___aldiv@divisor+2)^0,c
  8102  003BA8  6E0B               	movwf	(___aldiv@divisor+3)^0,c
  8103  003BAA  EC7E  F020         	call	___aldiv	;wreg free
  8104  003BAE  C004  F0A6         	movff	?___aldiv,itoa@num
  8105  003BB2  C005  F0A7         	movff	?___aldiv+1,itoa@num+1
  8106  003BB6  C006  F0A8         	movff	?___aldiv+2,itoa@num+2
  8107  003BBA  C007  F0A9         	movff	?___aldiv+3,itoa@num+3
  8108  003BBE                     l7762:
  8109                           
  8110                           ;src/print/toString.c: 40:     while (num != 0) {
  8111  003BBE  0100               	movlb	0	; () banked
  8112  003BC0  51A6               	movf	itoa@num& (0+255),w,b
  8113  003BC2  11A7               	iorwf	(itoa@num+1)& (0+255),w,b
  8114  003BC4  11A8               	iorwf	(itoa@num+2)& (0+255),w,b
  8115  003BC6  11A9               	iorwf	(itoa@num+3)& (0+255),w,b
  8116  003BC8  A4D8               	btfss	status,2,c
  8117  003BCA  EFE9  F01D         	goto	u8661
  8118  003BCE  EFEB  F01D         	goto	u8660
  8119  003BD2                     u8661:
  8120  003BD2  EF74  F01D         	goto	l7748
  8121  003BD6                     u8660:
  8122  003BD6                     
  8123                           ; BSR set to: 0
  8124                           ;src/print/toString.c: 46:     str[i] = '\0';
  8125  003BD6  5020               	movf	itoa@i^0,w,c
  8126  003BD8  25A4               	addwf	itoa@str& (0+255),w,b
  8127  003BDA  6ED9               	movwf	fsr2l,c
  8128  003BDC  5021               	movf	(itoa@i+1)^0,w,c
  8129  003BDE  21A5               	addwfc	(itoa@str+1)& (0+255),w,b
  8130  003BE0  6EDA               	movwf	fsr2h,c
  8131  003BE2  0E00               	movlw	0
  8132  003BE4  6EDF               	movwf	indf2,c
  8133  003BE6                     
  8134                           ; BSR set to: 0
  8135                           ;src/print/toString.c: 49:     reverse(str);
  8136  003BE6  C0A4  F012         	movff	itoa@str,reverse@str
  8137  003BEA  C0A5  F013         	movff	itoa@str+1,reverse@str+1
  8138  003BEE  EC0A  F025         	call	_reverse	;wreg free
  8139  003BF2                     l765:
  8140  003BF2  0012               	return		;funcret
  8141  003BF4                     __end_of_itoa:
  8142                           	opt callstack 0
  8143                           
  8144 ;; *************** function _reverse *****************
  8145 ;; Defined at:
  8146 ;;		line 8 in file "src/print/toString.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  str             2   17[COMRAM] PTR unsigned char 
  8149 ;;		 -> my_vsprintf@buffer(64), getWP@prec_str(5), getWP@width_str(5), 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;  auxstr         64    0[BANK0 ] unsigned char [64]
  8152 ;;  i               2   66[BANK0 ] int 
  8153 ;;  j               2   64[BANK0 ] int 
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      void 
  8156 ;; Registers used:
  8157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8163 ;;      Params:         2       0       0       0       0       0       0       0       0
  8164 ;;      Locals:         0      68       0       0       0       0       0       0       0
  8165 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8166 ;;      Totals:         4      68       0       0       0       0       0       0       0
  8167 ;;Total ram usage:       72 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; Hardware stack levels required when called:    3
  8170 ;; This function calls:
  8171 ;;		_strcpy
  8172 ;;		_strlen
  8173 ;; This function is called by:
  8174 ;;		_getWP
  8175 ;;		_itoa
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           	psect	text23
  8180  004A14                     __ptext23:
  8181                           	opt callstack 0
  8182  004A14                     _reverse:
  8183                           	opt callstack 23
  8184  004A14                     
  8185                           ;src/print/toString.c: 9:     int i;;src/print/toString.c: 10:     int j = strlen(str) -
      +                          1;
  8186  004A14  C012  F004         	movff	reverse@str,strlen@s
  8187  004A18  C013  F005         	movff	reverse@str+1,strlen@s+1
  8188  004A1C  EC7E  F029         	call	_strlen	;wreg free
  8189  004A20  0EFF               	movlw	255
  8190  004A22  2404               	addwf	?_strlen^0,w,c
  8191  004A24  0100               	movlb	0	; () banked
  8192  004A26  6FA0               	movwf	reverse@j& (0+255),b
  8193  004A28  0EFF               	movlw	255
  8194  004A2A  2005               	addwfc	(?_strlen+1)^0,w,c
  8195  004A2C  6FA1               	movwf	(reverse@j+1)& (0+255),b
  8196  004A2E                     
  8197                           ; BSR set to: 0
  8198                           ;src/print/toString.c: 11:     char auxstr[64] = " ";
  8199  004A2E  EE22  F084         	lfsr	2,reverse@F192
  8200  004A32  EE10  F060         	lfsr	1,reverse@auxstr
  8201  004A36  0E3F               	movlw	63
  8202  004A38                     u7411:
  8203  004A38  CFDB FFE3          	movff	plusw2,plusw1
  8204  004A3C  06E8               	decf	wreg,f,c
  8205  004A3E  E2FC               	bc	u7411
  8206  004A40                     
  8207                           ; BSR set to: 0
  8208                           ;src/print/toString.c: 13:     for(i = 0; i <= j;i++)
  8209  004A40  0E00               	movlw	0
  8210  004A42  6FA3               	movwf	(reverse@i+1)& (0+255),b
  8211  004A44  0E00               	movlw	0
  8212  004A46  6FA2               	movwf	reverse@i& (0+255),b
  8213  004A48  EF3C  F025         	goto	l7026
  8214  004A4C                     l7022:
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;src/print/toString.c: 14:          auxstr[i] = str[j-i];
  8218  004A4C  51A2               	movf	reverse@i& (0+255),w,b
  8219  004A4E  5C12               	subwf	reverse@str^0,w,c
  8220  004A50  6E14               	movwf	??_reverse^0,c
  8221  004A52  51A3               	movf	(reverse@i+1)& (0+255),w,b
  8222  004A54  5813               	subwfb	(reverse@str+1)^0,w,c
  8223  004A56  6E15               	movwf	(??_reverse+1)^0,c
  8224  004A58  51A0               	movf	reverse@j& (0+255),w,b
  8225  004A5A  2414               	addwf	??_reverse^0,w,c
  8226  004A5C  6ED9               	movwf	fsr2l,c
  8227  004A5E  51A1               	movf	(reverse@j+1)& (0+255),w,b
  8228  004A60  2015               	addwfc	(??_reverse+1)^0,w,c
  8229  004A62  6EDA               	movwf	fsr2h,c
  8230  004A64  0E60               	movlw	low reverse@auxstr
  8231  004A66  25A2               	addwf	reverse@i& (0+255),w,b
  8232  004A68  6EE1               	movwf	fsr1l,c
  8233  004A6A  0E00               	movlw	high reverse@auxstr
  8234  004A6C  21A3               	addwfc	(reverse@i+1)& (0+255),w,b
  8235  004A6E  6EE2               	movwf	fsr1h,c
  8236  004A70  CFDF FFE7          	movff	indf2,indf1
  8237  004A74                     
  8238                           ; BSR set to: 0
  8239  004A74  4BA2               	infsnz	reverse@i& (0+255),f,b
  8240  004A76  2BA3               	incf	(reverse@i+1)& (0+255),f,b
  8241  004A78                     l7026:
  8242                           
  8243                           ; BSR set to: 0
  8244  004A78  51A2               	movf	reverse@i& (0+255),w,b
  8245  004A7A  5DA0               	subwf	reverse@j& (0+255),w,b
  8246  004A7C  51A1               	movf	(reverse@j+1)& (0+255),w,b
  8247  004A7E  0A80               	xorlw	128
  8248  004A80  6E14               	movwf	??_reverse^0,c
  8249  004A82  51A3               	movf	(reverse@i+1)& (0+255),w,b
  8250  004A84  0A80               	xorlw	128
  8251  004A86  5814               	subwfb	??_reverse^0,w,c
  8252  004A88  B0D8               	btfsc	status,0,c
  8253  004A8A  EF49  F025         	goto	u7421
  8254  004A8E  EF4B  F025         	goto	u7420
  8255  004A92                     u7421:
  8256  004A92  EF26  F025         	goto	l7022
  8257  004A96                     u7420:
  8258  004A96                     
  8259                           ; BSR set to: 0
  8260                           ;src/print/toString.c: 16:     strcpy(str, auxstr);
  8261  004A96  C012  F008         	movff	reverse@str,strcpy@dest
  8262  004A9A  C013  F009         	movff	reverse@str+1,strcpy@dest+1
  8263  004A9E  0E60               	movlw	low reverse@auxstr
  8264  004AA0  6E0A               	movwf	strcpy@src^0,c
  8265  004AA2  0E00               	movlw	high reverse@auxstr
  8266  004AA4  6E0B               	movwf	(strcpy@src+1)^0,c
  8267  004AA6  EC2E  F027         	call	_strcpy	;wreg free
  8268  004AAA  0012               	return		;funcret
  8269  004AAC                     __end_of_reverse:
  8270                           	opt callstack 0
  8271                           
  8272 ;; *************** function _strcpy *****************
  8273 ;; Defined at:
  8274 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  dest            2    7[COMRAM] PTR unsigned char 
  8277 ;;		 -> LCD_Printf@strout(128), my_vsprintf@buffer(64), my_vsprintf@string(128), getWP@prec_str(5), 
  8278 ;;		 -> getWP@width_str(5), SERIAL_Printf@strout(128), 
  8279 ;;  src             2    9[COMRAM] PTR const unsigned char 
  8280 ;;		 -> ?_LCD_Printf(2), reverse@auxstr(64), STR_20(2), STR_19(2), 
  8281 ;;		 -> my_vsprintf@buffer(64), my_vsprintf@ch(2), my_vsprintf@char_temp(2), my_vsprintf@string(128), 
  8282 ;;		 -> ?_SERIAL_Printf(2), STR_6(5), SerialLCD_task@txt(32), 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;  d               2   15[COMRAM] PTR unsigned char 
  8285 ;;		 -> LCD_Printf@strout(128), my_vsprintf@buffer(64), my_vsprintf@string(128), getWP@prec_str(5), 
  8286 ;;		 -> getWP@width_str(5), SERIAL_Printf@strout(128), 
  8287 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8288 ;;		 -> ?_LCD_Printf(2), reverse@auxstr(64), STR_20(2), STR_19(2), 
  8289 ;;		 -> my_vsprintf@buffer(64), my_vsprintf@ch(2), my_vsprintf@char_temp(2), my_vsprintf@string(128), 
  8290 ;;		 -> ?_SERIAL_Printf(2), STR_6(5), SerialLCD_task@txt(32), 
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  2    7[COMRAM] PTR unsigned char 
  8293 ;; Registers used:
  8294 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8300 ;;      Params:         4       0       0       0       0       0       0       0       0
  8301 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8302 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8303 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8304 ;;Total ram usage:       10 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; Hardware stack levels required when called:    2
  8307 ;; This function calls:
  8308 ;;		Nothing
  8309 ;; This function is called by:
  8310 ;;		_my_vsprintf
  8311 ;;		_reverse
  8312 ;;		_strcat
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text24
  8317  004E5C                     __ptext24:
  8318                           	opt callstack 0
  8319  004E5C                     _strcpy:
  8320                           	opt callstack 25
  8321  004E5C  C00A  F00E         	movff	strcpy@src,strcpy@s
  8322  004E60  C00B  F00F         	movff	strcpy@src+1,strcpy@s+1
  8323  004E64  C008  F010         	movff	strcpy@dest,strcpy@d
  8324  004E68  C009  F011         	movff	strcpy@dest+1,strcpy@d+1
  8325  004E6C                     l7000:
  8326  004E6C  500E               	movf	strcpy@s^0,w,c
  8327  004E6E  6E0C               	movwf	??_strcpy^0,c
  8328  004E70  500F               	movf	(strcpy@s+1)^0,w,c
  8329  004E72  6E0D               	movwf	(??_strcpy+1)^0,c
  8330  004E74  4A0E               	infsnz	strcpy@s^0,f,c
  8331  004E76  2A0F               	incf	(strcpy@s+1)^0,f,c
  8332  004E78  C00C  FFF6         	movff	??_strcpy,tblptrl
  8333  004E7C  C00D  FFF7         	movff	??_strcpy+1,tblptrh
  8334  004E80  6AF8               	clrf	tblptru,c
  8335  004E82  C010  FFD9         	movff	strcpy@d,fsr2l
  8336  004E86  C011  FFDA         	movff	strcpy@d+1,fsr2h
  8337  004E8A  4A10               	infsnz	strcpy@d^0,f,c
  8338  004E8C  2A11               	incf	(strcpy@d+1)^0,f,c
  8339  004E8E  0E07               	movlw	(high __ramtop+-1)
  8340  004E90  64F7               	cpfsgt	tblptrh,c
  8341  004E92  D003               	bra	u7377
  8342  004E94  0008               	tblrd		*
  8343  004E96  50F5               	movf	tablat,w,c
  8344  004E98  D005               	bra	u7370
  8345  004E9A                     u7377:
  8346  004E9A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8347  004E9E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8348  004EA2  50EF               	movf	indf0,w,c
  8349  004EA4                     u7370:
  8350  004EA4  6EDF               	movwf	indf2,c
  8351  004EA6  50DF               	movf	indf2,w,c
  8352  004EA8  A4D8               	btfss	status,2,c
  8353  004EAA  EF59  F027         	goto	u7381
  8354  004EAE  EF5B  F027         	goto	u7380
  8355  004EB2                     u7381:
  8356  004EB2  EF36  F027         	goto	l7000
  8357  004EB6                     u7380:
  8358  004EB6  0012               	return		;funcret
  8359  004EB8                     __end_of_strcpy:
  8360                           	opt callstack 0
  8361                           
  8362 ;; *************** function ___almod *****************
  8363 ;; Defined at:
  8364 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;  dividend        4    3[COMRAM] long 
  8367 ;;  divisor         4    7[COMRAM] long 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  sign            1   12[COMRAM] unsigned char 
  8370 ;;  counter         1   11[COMRAM] unsigned char 
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  4    3[COMRAM] long 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8380 ;;      Params:         8       0       0       0       0       0       0       0       0
  8381 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8383 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8384 ;;Total ram usage:       10 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    2
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		_itoa
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text25
  8395  004414                     __ptext25:
  8396                           	opt callstack 0
  8397  004414                     ___almod:
  8398                           	opt callstack 24
  8399  004414  0E00               	movlw	0
  8400  004416  6E0D               	movwf	___almod@sign^0,c
  8401  004418  BE07               	btfsc	(___almod@dividend+3)^0,7,c
  8402  00441A  EF13  F022         	goto	u7500
  8403  00441E  EF11  F022         	goto	u7501
  8404  004422                     u7501:
  8405  004422  EF1D  F022         	goto	l7098
  8406  004426                     u7500:
  8407  004426  1E07               	comf	(___almod@dividend+3)^0,f,c
  8408  004428  1E06               	comf	(___almod@dividend+2)^0,f,c
  8409  00442A  1E05               	comf	(___almod@dividend+1)^0,f,c
  8410  00442C  6C04               	negf	___almod@dividend^0,c
  8411  00442E  0E00               	movlw	0
  8412  004430  2205               	addwfc	(___almod@dividend+1)^0,f,c
  8413  004432  2206               	addwfc	(___almod@dividend+2)^0,f,c
  8414  004434  2207               	addwfc	(___almod@dividend+3)^0,f,c
  8415  004436  0E01               	movlw	1
  8416  004438  6E0D               	movwf	___almod@sign^0,c
  8417  00443A                     l7098:
  8418  00443A  BE0B               	btfsc	(___almod@divisor+3)^0,7,c
  8419  00443C  EF24  F022         	goto	u7510
  8420  004440  EF22  F022         	goto	u7511
  8421  004444                     u7511:
  8422  004444  EF2C  F022         	goto	l7102
  8423  004448                     u7510:
  8424  004448  1E0B               	comf	(___almod@divisor+3)^0,f,c
  8425  00444A  1E0A               	comf	(___almod@divisor+2)^0,f,c
  8426  00444C  1E09               	comf	(___almod@divisor+1)^0,f,c
  8427  00444E  6C08               	negf	___almod@divisor^0,c
  8428  004450  0E00               	movlw	0
  8429  004452  2209               	addwfc	(___almod@divisor+1)^0,f,c
  8430  004454  220A               	addwfc	(___almod@divisor+2)^0,f,c
  8431  004456  220B               	addwfc	(___almod@divisor+3)^0,f,c
  8432  004458                     l7102:
  8433  004458  5008               	movf	___almod@divisor^0,w,c
  8434  00445A  1009               	iorwf	(___almod@divisor+1)^0,w,c
  8435  00445C  100A               	iorwf	(___almod@divisor+2)^0,w,c
  8436  00445E  100B               	iorwf	(___almod@divisor+3)^0,w,c
  8437  004460  B4D8               	btfsc	status,2,c
  8438  004462  EF35  F022         	goto	u7521
  8439  004466  EF37  F022         	goto	u7520
  8440  00446A                     u7521:
  8441  00446A  EF67  F022         	goto	l7118
  8442  00446E                     u7520:
  8443  00446E  0E01               	movlw	1
  8444  004470  6E0C               	movwf	___almod@counter^0,c
  8445  004472  EF41  F022         	goto	l7108
  8446  004476                     l7106:
  8447  004476  90D8               	bcf	status,0,c
  8448  004478  3608               	rlcf	___almod@divisor^0,f,c
  8449  00447A  3609               	rlcf	(___almod@divisor+1)^0,f,c
  8450  00447C  360A               	rlcf	(___almod@divisor+2)^0,f,c
  8451  00447E  360B               	rlcf	(___almod@divisor+3)^0,f,c
  8452  004480  2A0C               	incf	___almod@counter^0,f,c
  8453  004482                     l7108:
  8454  004482  AE0B               	btfss	(___almod@divisor+3)^0,7,c
  8455  004484  EF46  F022         	goto	u7531
  8456  004488  EF48  F022         	goto	u7530
  8457  00448C                     u7531:
  8458  00448C  EF3B  F022         	goto	l7106
  8459  004490                     u7530:
  8460  004490                     l7110:
  8461  004490  5008               	movf	___almod@divisor^0,w,c
  8462  004492  5C04               	subwf	___almod@dividend^0,w,c
  8463  004494  5009               	movf	(___almod@divisor+1)^0,w,c
  8464  004496  5805               	subwfb	(___almod@dividend+1)^0,w,c
  8465  004498  500A               	movf	(___almod@divisor+2)^0,w,c
  8466  00449A  5806               	subwfb	(___almod@dividend+2)^0,w,c
  8467  00449C  500B               	movf	(___almod@divisor+3)^0,w,c
  8468  00449E  5807               	subwfb	(___almod@dividend+3)^0,w,c
  8469  0044A0  A0D8               	btfss	status,0,c
  8470  0044A2  EF55  F022         	goto	u7541
  8471  0044A6  EF57  F022         	goto	u7540
  8472  0044AA                     u7541:
  8473  0044AA  EF5F  F022         	goto	l7114
  8474  0044AE                     u7540:
  8475  0044AE  5008               	movf	___almod@divisor^0,w,c
  8476  0044B0  5E04               	subwf	___almod@dividend^0,f,c
  8477  0044B2  5009               	movf	(___almod@divisor+1)^0,w,c
  8478  0044B4  5A05               	subwfb	(___almod@dividend+1)^0,f,c
  8479  0044B6  500A               	movf	(___almod@divisor+2)^0,w,c
  8480  0044B8  5A06               	subwfb	(___almod@dividend+2)^0,f,c
  8481  0044BA  500B               	movf	(___almod@divisor+3)^0,w,c
  8482  0044BC  5A07               	subwfb	(___almod@dividend+3)^0,f,c
  8483  0044BE                     l7114:
  8484  0044BE  90D8               	bcf	status,0,c
  8485  0044C0  320B               	rrcf	(___almod@divisor+3)^0,f,c
  8486  0044C2  320A               	rrcf	(___almod@divisor+2)^0,f,c
  8487  0044C4  3209               	rrcf	(___almod@divisor+1)^0,f,c
  8488  0044C6  3208               	rrcf	___almod@divisor^0,f,c
  8489  0044C8  2E0C               	decfsz	___almod@counter^0,f,c
  8490  0044CA  EF48  F022         	goto	l7110
  8491  0044CE                     l7118:
  8492  0044CE  500D               	movf	___almod@sign^0,w,c
  8493  0044D0  B4D8               	btfsc	status,2,c
  8494  0044D2  EF6D  F022         	goto	u7551
  8495  0044D6  EF6F  F022         	goto	u7550
  8496  0044DA                     u7551:
  8497  0044DA  EF77  F022         	goto	l7122
  8498  0044DE                     u7550:
  8499  0044DE  1E07               	comf	(___almod@dividend+3)^0,f,c
  8500  0044E0  1E06               	comf	(___almod@dividend+2)^0,f,c
  8501  0044E2  1E05               	comf	(___almod@dividend+1)^0,f,c
  8502  0044E4  6C04               	negf	___almod@dividend^0,c
  8503  0044E6  0E00               	movlw	0
  8504  0044E8  2205               	addwfc	(___almod@dividend+1)^0,f,c
  8505  0044EA  2206               	addwfc	(___almod@dividend+2)^0,f,c
  8506  0044EC  2207               	addwfc	(___almod@dividend+3)^0,f,c
  8507  0044EE                     l7122:
  8508  0044EE  C004  F004         	movff	___almod@dividend,?___almod
  8509  0044F2  C005  F005         	movff	___almod@dividend+1,?___almod+1
  8510  0044F6  C006  F006         	movff	___almod@dividend+2,?___almod+2
  8511  0044FA  C007  F007         	movff	___almod@dividend+3,?___almod+3
  8512  0044FE  0012               	return		;funcret
  8513  004500                     __end_of___almod:
  8514                           	opt callstack 0
  8515                           
  8516 ;; *************** function _ftoa *****************
  8517 ;; Defined at:
  8518 ;;		line 140 in file "src/print/toString.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;  buffer          2   51[BANK0 ] PTR unsigned char 
  8521 ;;		 -> my_vsprintf@buffer(64), 
  8522 ;;  value           4   53[BANK0 ] PTR unsigned char 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  digit           2   59[BANK0 ] int 
  8525 ;;  digit           2   57[BANK0 ] int 
  8526 ;;  places          2   63[BANK0 ] int 
  8527 ;;  exponent        2   61[BANK0 ] int 
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8537 ;;      Params:         0       6       0       0       0       0       0       0       0
  8538 ;;      Locals:         0       8       0       0       0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8540 ;;      Totals:         0      14       0       0       0       0       0       0       0
  8541 ;;Total ram usage:       14 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    4
  8544 ;; This function calls:
  8545 ;;		___fleq
  8546 ;;		___flmul
  8547 ;;		___flneg
  8548 ;;		___flsub
  8549 ;;		___fltol
  8550 ;;		___xxtofl
  8551 ;;		_normalize
  8552 ;; This function is called by:
  8553 ;;		_my_vsprintf
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           	psect	text26
  8558  00223E                     __ptext26:
  8559                           	opt callstack 0
  8560  00223E                     _ftoa:
  8561                           	opt callstack 23
  8562  00223E                     
  8563                           ;src/print/toString.c: 145:     int places = 0;
  8564  00223E  0E00               	movlw	0
  8565  002240  0100               	movlb	0	; () banked
  8566  002242  6FA0               	movwf	(ftoa@places+1)& (0+255),b
  8567  002244  0E00               	movlw	0
  8568  002246  6F9F               	movwf	ftoa@places& (0+255),b
  8569  002248                     
  8570                           ; BSR set to: 0
  8571                           ;src/print/toString.c: 146:     static const int width = 7;;src/print/toString.c: 148:  
      +                             if (value == 0.0) {
  8572  002248  C095  F004         	movff	ftoa@value,___fleq@ff1
  8573  00224C  C096  F005         	movff	ftoa@value+1,___fleq@ff1+1
  8574  002250  C097  F006         	movff	ftoa@value+2,___fleq@ff1+2
  8575  002254  C098  F007         	movff	ftoa@value+3,___fleq@ff1+3
  8576  002258  0E00               	movlw	0
  8577  00225A  6E08               	movwf	___fleq@ff2^0,c
  8578  00225C  0E00               	movlw	0
  8579  00225E  6E09               	movwf	(___fleq@ff2+1)^0,c
  8580  002260  0E00               	movlw	0
  8581  002262  6E0A               	movwf	(___fleq@ff2+2)^0,c
  8582  002264  0E00               	movlw	0
  8583  002266  6E0B               	movwf	(___fleq@ff2+3)^0,c
  8584  002268  EC12  F024         	call	___fleq	;wreg free
  8585  00226C  A0D8               	btfss	status,0,c
  8586  00226E  EF3B  F011         	goto	u9891
  8587  002272  EF3D  F011         	goto	u9890
  8588  002276                     u9891:
  8589  002276  EF5E  F011         	goto	l8416
  8590  00227A                     u9890:
  8591  00227A                     
  8592                           ;src/print/toString.c: 149:         buffer[0] = '0';
  8593  00227A  C093  FFD9         	movff	ftoa@buffer,fsr2l
  8594  00227E  C094  FFDA         	movff	ftoa@buffer+1,fsr2h
  8595  002282  0E30               	movlw	48
  8596  002284  6EDF               	movwf	indf2,c
  8597  002286                     
  8598                           ;src/print/toString.c: 150:         buffer[1] = '.';
  8599  002286  0100               	movlb	0	; () banked
  8600  002288  EE20 F001          	lfsr	2,1
  8601  00228C  5193               	movf	ftoa@buffer& (0+255),w,b
  8602  00228E  26D9               	addwf	fsr2l,f,c
  8603  002290  5194               	movf	(ftoa@buffer+1)& (0+255),w,b
  8604  002292  22DA               	addwfc	fsr2h,f,c
  8605  002294  0E2E               	movlw	46
  8606  002296  6EDF               	movwf	indf2,c
  8607  002298                     
  8608                           ; BSR set to: 0
  8609                           ;src/print/toString.c: 151:         buffer[2] = '0';
  8610  002298  EE20 F002          	lfsr	2,2
  8611  00229C  5193               	movf	ftoa@buffer& (0+255),w,b
  8612  00229E  26D9               	addwf	fsr2l,f,c
  8613  0022A0  5194               	movf	(ftoa@buffer+1)& (0+255),w,b
  8614  0022A2  22DA               	addwfc	fsr2h,f,c
  8615  0022A4  0E30               	movlw	48
  8616  0022A6  6EDF               	movwf	indf2,c
  8617  0022A8                     
  8618                           ; BSR set to: 0
  8619                           ;src/print/toString.c: 152:         buffer[3] = '\0';
  8620  0022A8  EE20 F003          	lfsr	2,3
  8621  0022AC  5193               	movf	ftoa@buffer& (0+255),w,b
  8622  0022AE  26D9               	addwf	fsr2l,f,c
  8623  0022B0  5194               	movf	(ftoa@buffer+1)& (0+255),w,b
  8624  0022B2  22DA               	addwfc	fsr2h,f,c
  8625  0022B4  0E00               	movlw	0
  8626  0022B6  6EDF               	movwf	indf2,c
  8627  0022B8  EFBF  F012         	goto	l807
  8628  0022BC                     l8416:
  8629                           
  8630                           ;src/print/toString.c: 156:     if (value < 0.0) {
  8631  0022BC  0100               	movlb	0	; () banked
  8632  0022BE  BF98               	btfsc	(ftoa@value+3)& (0+255),7,b
  8633  0022C0  EF66  F011         	goto	u9900
  8634  0022C4  EF64  F011         	goto	u9901
  8635  0022C8                     u9901:
  8636  0022C8  EF78  F011         	goto	l8420
  8637  0022CC                     u9900:
  8638  0022CC                     
  8639                           ; BSR set to: 0
  8640                           ;src/print/toString.c: 157:         value = -value;
  8641  0022CC  C095  F004         	movff	ftoa@value,___flneg@f1
  8642  0022D0  C096  F005         	movff	ftoa@value+1,___flneg@f1+1
  8643  0022D4  C097  F006         	movff	ftoa@value+2,___flneg@f1+2
  8644  0022D8  C098  F007         	movff	ftoa@value+3,___flneg@f1+3
  8645  0022DC  EC2C  F029         	call	___flneg	;wreg free
  8646  0022E0  C004  F095         	movff	?___flneg,ftoa@value
  8647  0022E4  C005  F096         	movff	?___flneg+1,ftoa@value+1
  8648  0022E8  C006  F097         	movff	?___flneg+2,ftoa@value+2
  8649  0022EC  C007  F098         	movff	?___flneg+3,ftoa@value+3
  8650  0022F0                     l8420:
  8651                           
  8652                           ;src/print/toString.c: 160:     exponent = normalize(&value);
  8653  0022F0  0E95               	movlw	low ftoa@value
  8654  0022F2  6E53               	movwf	normalize@val^0,c
  8655  0022F4  0E00               	movlw	high ftoa@value
  8656  0022F6  6E54               	movwf	(normalize@val+1)^0,c
  8657  0022F8  EC60  F01F         	call	_normalize	;wreg free
  8658  0022FC  C053  F09D         	movff	?_normalize,ftoa@exponent
  8659  002300  C054  F09E         	movff	?_normalize+1,ftoa@exponent+1
  8660                           
  8661                           ;src/print/toString.c: 162:     while (exponent > 0) {
  8662  002304  EFEC  F011         	goto	l8434
  8663  002308                     l8422:
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;src/print/toString.c: 163:         int digit = value * 10;
  8667  002308  0E00               	movlw	0
  8668  00230A  6E4B               	movwf	___flmul@a^0,c
  8669  00230C  0E00               	movlw	0
  8670  00230E  6E4C               	movwf	(___flmul@a+1)^0,c
  8671  002310  0E20               	movlw	32
  8672  002312  6E4D               	movwf	(___flmul@a+2)^0,c
  8673  002314  0E41               	movlw	65
  8674  002316  6E4E               	movwf	(___flmul@a+3)^0,c
  8675  002318  C095  F047         	movff	ftoa@value,___flmul@b
  8676  00231C  C096  F048         	movff	ftoa@value+1,___flmul@b+1
  8677  002320  C097  F049         	movff	ftoa@value+2,___flmul@b+2
  8678  002324  C098  F04A         	movff	ftoa@value+3,___flmul@b+3
  8679  002328  EC63  F00B         	call	___flmul	;wreg free
  8680  00232C  C047  F08B         	movff	?___flmul,___fltol@f1
  8681  002330  C048  F08C         	movff	?___flmul+1,___fltol@f1+1
  8682  002334  C049  F08D         	movff	?___flmul+2,___fltol@f1+2
  8683  002338  C04A  F08E         	movff	?___flmul+3,___fltol@f1+3
  8684  00233C  EC04  F021         	call	___fltol	;wreg free
  8685  002340  C08B  F099         	movff	?___fltol,ftoa@digit
  8686  002344  C08C  F09A         	movff	?___fltol+1,ftoa@digit+1
  8687  002348                     
  8688                           ;src/print/toString.c: 164:         *buffer++ = digit + '0';
  8689  002348  0100               	movlb	0	; () banked
  8690  00234A  5199               	movf	ftoa@digit& (0+255),w,b
  8691  00234C  0F30               	addlw	48
  8692  00234E  C093  FFD9         	movff	ftoa@buffer,fsr2l
  8693  002352  C094  FFDA         	movff	ftoa@buffer+1,fsr2h
  8694  002356  6EDF               	movwf	indf2,c
  8695  002358                     
  8696                           ; BSR set to: 0
  8697  002358  4B93               	infsnz	ftoa@buffer& (0+255),f,b
  8698  00235A  2B94               	incf	(ftoa@buffer+1)& (0+255),f,b
  8699  00235C                     
  8700                           ; BSR set to: 0
  8701                           ;src/print/toString.c: 165:         value = value * 10 - digit;
  8702  00235C  0E00               	movlw	0
  8703  00235E  6E4B               	movwf	___flmul@a^0,c
  8704  002360  0E00               	movlw	0
  8705  002362  6E4C               	movwf	(___flmul@a+1)^0,c
  8706  002364  0E20               	movlw	32
  8707  002366  6E4D               	movwf	(___flmul@a+2)^0,c
  8708  002368  0E41               	movlw	65
  8709  00236A  6E4E               	movwf	(___flmul@a+3)^0,c
  8710  00236C  C095  F047         	movff	ftoa@value,___flmul@b
  8711  002370  C096  F048         	movff	ftoa@value+1,___flmul@b+1
  8712  002374  C097  F049         	movff	ftoa@value+2,___flmul@b+2
  8713  002378  C098  F04A         	movff	ftoa@value+3,___flmul@b+3
  8714  00237C  EC63  F00B         	call	___flmul	;wreg free
  8715  002380  C047  F06D         	movff	?___flmul,___flsub@b
  8716  002384  C048  F06E         	movff	?___flmul+1,___flsub@b+1
  8717  002388  C049  F06F         	movff	?___flmul+2,___flsub@b+2
  8718  00238C  C04A  F070         	movff	?___flmul+3,___flsub@b+3
  8719  002390  C099  F010         	movff	ftoa@digit,___xxtofl@val
  8720  002394  C09A  F011         	movff	ftoa@digit+1,___xxtofl@val+1
  8721  002398  0E00               	movlw	0
  8722  00239A  BE11               	btfsc	(___xxtofl@val+1)^0,7,c
  8723  00239C  0EFF               	movlw	-1
  8724  00239E  6E12               	movwf	(___xxtofl@val+2)^0,c
  8725  0023A0  6E13               	movwf	(___xxtofl@val+3)^0,c
  8726  0023A2  0E01               	movlw	1
  8727  0023A4  EC5D  F01C         	call	___xxtofl
  8728  0023A8  C010  F071         	movff	?___xxtofl,___flsub@a
  8729  0023AC  C011  F072         	movff	?___xxtofl+1,___flsub@a+1
  8730  0023B0  C012  F073         	movff	?___xxtofl+2,___flsub@a+2
  8731  0023B4  C013  F074         	movff	?___xxtofl+3,___flsub@a+3
  8732  0023B8  EC28  F028         	call	___flsub	;wreg free
  8733  0023BC  C06D  F095         	movff	?___flsub,ftoa@value
  8734  0023C0  C06E  F096         	movff	?___flsub+1,ftoa@value+1
  8735  0023C4  C06F  F097         	movff	?___flsub+2,ftoa@value+2
  8736  0023C8  C070  F098         	movff	?___flsub+3,ftoa@value+3
  8737  0023CC                     
  8738                           ;src/print/toString.c: 166:         ++places;
  8739  0023CC  0100               	movlb	0	; () banked
  8740  0023CE  4B9F               	infsnz	ftoa@places& (0+255),f,b
  8741  0023D0  2BA0               	incf	(ftoa@places+1)& (0+255),f,b
  8742  0023D2                     
  8743                           ; BSR set to: 0
  8744                           ;src/print/toString.c: 167:         --exponent;
  8745  0023D2  079D               	decf	ftoa@exponent& (0+255),f,b
  8746  0023D4  A0D8               	btfss	status,0,c
  8747  0023D6  079E               	decf	(ftoa@exponent+1)& (0+255),f,b
  8748  0023D8                     l8434:
  8749                           
  8750                           ;src/print/toString.c: 162:     while (exponent > 0) {
  8751  0023D8  0100               	movlb	0	; () banked
  8752  0023DA  BF9E               	btfsc	(ftoa@exponent+1)& (0+255),7,b
  8753  0023DC  EFFA  F011         	goto	u9910
  8754  0023E0  519E               	movf	(ftoa@exponent+1)& (0+255),w,b
  8755  0023E2  E106               	bnz	u9911
  8756  0023E4  059D               	decf	ftoa@exponent& (0+255),w,b
  8757  0023E6  B0D8               	btfsc	status,0,c
  8758  0023E8  EFF8  F011         	goto	u9911
  8759  0023EC  EFFA  F011         	goto	u9910
  8760  0023F0                     u9911:
  8761  0023F0  EF84  F011         	goto	l8422
  8762  0023F4                     u9910:
  8763  0023F4                     
  8764                           ; BSR set to: 0
  8765                           ;src/print/toString.c: 170:     if (places == 0)
  8766  0023F4  519F               	movf	ftoa@places& (0+255),w,b
  8767  0023F6  11A0               	iorwf	(ftoa@places+1)& (0+255),w,b
  8768  0023F8  A4D8               	btfss	status,2,c
  8769  0023FA  EF01  F012         	goto	u9921
  8770  0023FE  EF03  F012         	goto	u9920
  8771  002402                     u9921:
  8772  002402  EF0B  F012         	goto	l8442
  8773  002406                     u9920:
  8774  002406                     
  8775                           ; BSR set to: 0
  8776                           ;src/print/toString.c: 171:         *buffer++ = '0';
  8777  002406  C093  FFD9         	movff	ftoa@buffer,fsr2l
  8778  00240A  C094  FFDA         	movff	ftoa@buffer+1,fsr2h
  8779  00240E  0E30               	movlw	48
  8780  002410  6EDF               	movwf	indf2,c
  8781  002412                     
  8782                           ; BSR set to: 0
  8783  002412  4B93               	infsnz	ftoa@buffer& (0+255),f,b
  8784  002414  2B94               	incf	(ftoa@buffer+1)& (0+255),f,b
  8785  002416                     l8442:
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;src/print/toString.c: 172:     if (places < width)
  8789  002416  BFA0               	btfsc	(ftoa@places+1)& (0+255),7,b
  8790  002418  EF19  F012         	goto	u9930
  8791  00241C  51A0               	movf	(ftoa@places+1)& (0+255),w,b
  8792  00241E  E107               	bnz	u9931
  8793  002420  0E07               	movlw	7
  8794  002422  5D9F               	subwf	ftoa@places& (0+255),w,b
  8795  002424  B0D8               	btfsc	status,0,c
  8796  002426  EF17  F012         	goto	u9931
  8797  00242A  EF19  F012         	goto	u9930
  8798  00242E                     u9931:
  8799  00242E  EF2F  F012         	goto	l8456
  8800  002432                     u9930:
  8801  002432                     
  8802                           ; BSR set to: 0
  8803                           ;src/print/toString.c: 173:         *buffer++ = '.';
  8804  002432  C093  FFD9         	movff	ftoa@buffer,fsr2l
  8805  002436  C094  FFDA         	movff	ftoa@buffer+1,fsr2h
  8806  00243A  0E2E               	movlw	46
  8807  00243C  6EDF               	movwf	indf2,c
  8808  00243E                     
  8809                           ; BSR set to: 0
  8810  00243E  4B93               	infsnz	ftoa@buffer& (0+255),f,b
  8811  002440  2B94               	incf	(ftoa@buffer+1)& (0+255),f,b
  8812  002442  EF2F  F012         	goto	l8456
  8813  002446                     l8448:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;src/print/toString.c: 176:         *buffer++ = '0';
  8817  002446  C093  FFD9         	movff	ftoa@buffer,fsr2l
  8818  00244A  C094  FFDA         	movff	ftoa@buffer+1,fsr2h
  8819  00244E  0E30               	movlw	48
  8820  002450  6EDF               	movwf	indf2,c
  8821  002452                     
  8822                           ; BSR set to: 0
  8823  002452  4B93               	infsnz	ftoa@buffer& (0+255),f,b
  8824  002454  2B94               	incf	(ftoa@buffer+1)& (0+255),f,b
  8825  002456                     
  8826                           ; BSR set to: 0
  8827                           ;src/print/toString.c: 177:         ++exponent;
  8828  002456  4B9D               	infsnz	ftoa@exponent& (0+255),f,b
  8829  002458  2B9E               	incf	(ftoa@exponent+1)& (0+255),f,b
  8830  00245A                     
  8831                           ; BSR set to: 0
  8832                           ;src/print/toString.c: 178:         ++places;
  8833  00245A  4B9F               	infsnz	ftoa@places& (0+255),f,b
  8834  00245C  2BA0               	incf	(ftoa@places+1)& (0+255),f,b
  8835  00245E                     l8456:
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;src/print/toString.c: 175:     while ((exponent < 0) && (places < width)) {
  8839  00245E  BF9E               	btfsc	(ftoa@exponent+1)& (0+255),7,b
  8840  002460  EF36  F012         	goto	u9940
  8841  002464  EF34  F012         	goto	u9941
  8842  002468                     u9941:
  8843  002468  EFAB  F012         	goto	l8470
  8844  00246C                     u9940:
  8845  00246C                     
  8846                           ; BSR set to: 0
  8847  00246C  BFA0               	btfsc	(ftoa@places+1)& (0+255),7,b
  8848  00246E  EF42  F012         	goto	u9951
  8849  002472  51A0               	movf	(ftoa@places+1)& (0+255),w,b
  8850  002474  E109               	bnz	u9950
  8851  002476  0E07               	movlw	7
  8852  002478  5D9F               	subwf	ftoa@places& (0+255),w,b
  8853  00247A  A0D8               	btfss	status,0,c
  8854  00247C  EF42  F012         	goto	u9951
  8855  002480  EF44  F012         	goto	u9950
  8856  002484                     u9951:
  8857  002484  EF23  F012         	goto	l8448
  8858  002488                     u9950:
  8859  002488  EFAB  F012         	goto	l8470
  8860  00248C                     l8460:
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;src/print/toString.c: 182:         int digit = value * 10.0;
  8864  00248C  0E00               	movlw	0
  8865  00248E  6E4B               	movwf	___flmul@a^0,c
  8866  002490  0E00               	movlw	0
  8867  002492  6E4C               	movwf	(___flmul@a+1)^0,c
  8868  002494  0E20               	movlw	32
  8869  002496  6E4D               	movwf	(___flmul@a+2)^0,c
  8870  002498  0E41               	movlw	65
  8871  00249A  6E4E               	movwf	(___flmul@a+3)^0,c
  8872  00249C  C095  F047         	movff	ftoa@value,___flmul@b
  8873  0024A0  C096  F048         	movff	ftoa@value+1,___flmul@b+1
  8874  0024A4  C097  F049         	movff	ftoa@value+2,___flmul@b+2
  8875  0024A8  C098  F04A         	movff	ftoa@value+3,___flmul@b+3
  8876  0024AC  EC63  F00B         	call	___flmul	;wreg free
  8877  0024B0  C047  F08B         	movff	?___flmul,___fltol@f1
  8878  0024B4  C048  F08C         	movff	?___flmul+1,___fltol@f1+1
  8879  0024B8  C049  F08D         	movff	?___flmul+2,___fltol@f1+2
  8880  0024BC  C04A  F08E         	movff	?___flmul+3,___fltol@f1+3
  8881  0024C0  EC04  F021         	call	___fltol	;wreg free
  8882  0024C4  C08B  F09B         	movff	?___fltol,ftoa@digit_1719
  8883  0024C8  C08C  F09C         	movff	?___fltol+1,ftoa@digit_1719+1
  8884  0024CC                     
  8885                           ;src/print/toString.c: 183:         *buffer++ = digit + '0';
  8886  0024CC  0100               	movlb	0	; () banked
  8887  0024CE  519B               	movf	ftoa@digit_1719& (0+255),w,b
  8888  0024D0  0F30               	addlw	48
  8889  0024D2  C093  FFD9         	movff	ftoa@buffer,fsr2l
  8890  0024D6  C094  FFDA         	movff	ftoa@buffer+1,fsr2h
  8891  0024DA  6EDF               	movwf	indf2,c
  8892  0024DC                     
  8893                           ; BSR set to: 0
  8894  0024DC  4B93               	infsnz	ftoa@buffer& (0+255),f,b
  8895  0024DE  2B94               	incf	(ftoa@buffer+1)& (0+255),f,b
  8896  0024E0                     
  8897                           ; BSR set to: 0
  8898                           ;src/print/toString.c: 184:         value = value * 10.0 - digit;
  8899  0024E0  0E00               	movlw	0
  8900  0024E2  6E4B               	movwf	___flmul@a^0,c
  8901  0024E4  0E00               	movlw	0
  8902  0024E6  6E4C               	movwf	(___flmul@a+1)^0,c
  8903  0024E8  0E20               	movlw	32
  8904  0024EA  6E4D               	movwf	(___flmul@a+2)^0,c
  8905  0024EC  0E41               	movlw	65
  8906  0024EE  6E4E               	movwf	(___flmul@a+3)^0,c
  8907  0024F0  C095  F047         	movff	ftoa@value,___flmul@b
  8908  0024F4  C096  F048         	movff	ftoa@value+1,___flmul@b+1
  8909  0024F8  C097  F049         	movff	ftoa@value+2,___flmul@b+2
  8910  0024FC  C098  F04A         	movff	ftoa@value+3,___flmul@b+3
  8911  002500  EC63  F00B         	call	___flmul	;wreg free
  8912  002504  C047  F06D         	movff	?___flmul,___flsub@b
  8913  002508  C048  F06E         	movff	?___flmul+1,___flsub@b+1
  8914  00250C  C049  F06F         	movff	?___flmul+2,___flsub@b+2
  8915  002510  C04A  F070         	movff	?___flmul+3,___flsub@b+3
  8916  002514  C09B  F010         	movff	ftoa@digit_1719,___xxtofl@val
  8917  002518  C09C  F011         	movff	ftoa@digit_1719+1,___xxtofl@val+1
  8918  00251C  0E00               	movlw	0
  8919  00251E  BE11               	btfsc	(___xxtofl@val+1)^0,7,c
  8920  002520  0EFF               	movlw	-1
  8921  002522  6E12               	movwf	(___xxtofl@val+2)^0,c
  8922  002524  6E13               	movwf	(___xxtofl@val+3)^0,c
  8923  002526  0E01               	movlw	1
  8924  002528  EC5D  F01C         	call	___xxtofl
  8925  00252C  C010  F071         	movff	?___xxtofl,___flsub@a
  8926  002530  C011  F072         	movff	?___xxtofl+1,___flsub@a+1
  8927  002534  C012  F073         	movff	?___xxtofl+2,___flsub@a+2
  8928  002538  C013  F074         	movff	?___xxtofl+3,___flsub@a+3
  8929  00253C  EC28  F028         	call	___flsub	;wreg free
  8930  002540  C06D  F095         	movff	?___flsub,ftoa@value
  8931  002544  C06E  F096         	movff	?___flsub+1,ftoa@value+1
  8932  002548  C06F  F097         	movff	?___flsub+2,ftoa@value+2
  8933  00254C  C070  F098         	movff	?___flsub+3,ftoa@value+3
  8934  002550                     
  8935                           ;src/print/toString.c: 185:         ++places;
  8936  002550  0100               	movlb	0	; () banked
  8937  002552  4B9F               	infsnz	ftoa@places& (0+255),f,b
  8938  002554  2BA0               	incf	(ftoa@places+1)& (0+255),f,b
  8939  002556                     l8470:
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;src/print/toString.c: 181:     while (places < width) {
  8943  002556  BFA0               	btfsc	(ftoa@places+1)& (0+255),7,b
  8944  002558  EFB7  F012         	goto	u9961
  8945  00255C  51A0               	movf	(ftoa@places+1)& (0+255),w,b
  8946  00255E  E109               	bnz	u9960
  8947  002560  0E07               	movlw	7
  8948  002562  5D9F               	subwf	ftoa@places& (0+255),w,b
  8949  002564  A0D8               	btfss	status,0,c
  8950  002566  EFB7  F012         	goto	u9961
  8951  00256A  EFB9  F012         	goto	u9960
  8952  00256E                     u9961:
  8953  00256E  EF46  F012         	goto	l8460
  8954  002572                     u9960:
  8955  002572                     
  8956                           ; BSR set to: 0
  8957                           ;src/print/toString.c: 187:     *buffer = '\0';
  8958  002572  C093  FFD9         	movff	ftoa@buffer,fsr2l
  8959  002576  C094  FFDA         	movff	ftoa@buffer+1,fsr2h
  8960  00257A  0E00               	movlw	0
  8961  00257C  6EDF               	movwf	indf2,c
  8962  00257E                     l807:
  8963                           
  8964                           ; BSR set to: 0
  8965  00257E  0012               	return		;funcret
  8966  002580                     __end_of_ftoa:
  8967                           	opt callstack 0
  8968                           
  8969 ;; *************** function _normalize *****************
  8970 ;; Defined at:
  8971 ;;		line 76 in file "src/print/toString.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;  val             2   82[COMRAM] PTR 
  8974 ;;		 -> ftoa@value(4), ftoa_sci@value(4), 
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  value           4   15[BANK0 ] PTR 
  8977 ;;  exponent        2   13[BANK0 ] int 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  2   82[COMRAM] int 
  8980 ;; Registers used:
  8981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8987 ;;      Params:         2       0       0       0       0       0       0       0       0
  8988 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8990 ;;      Totals:         2       6       0       0       0       0       0       0       0
  8991 ;;Total ram usage:        8 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    3
  8994 ;; This function calls:
  8995 ;;		___fldiv
  8996 ;;		___flge
  8997 ;;		___flmul
  8998 ;; This function is called by:
  8999 ;;		_ftoa_sci
  9000 ;;		_ftoa
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text27
  9005  003EC0                     __ptext27:
  9006                           	opt callstack 0
  9007  003EC0                     _normalize:
  9008                           	opt callstack 23
  9009  003EC0                     
  9010                           ;src/print/toString.c: 77:     int exponent = 0;
  9011  003EC0  0E00               	movlw	0
  9012  003EC2  0100               	movlb	0	; () banked
  9013  003EC4  6F6E               	movwf	(normalize@exponent+1)& (0+255),b
  9014  003EC6  0E00               	movlw	0
  9015  003EC8  6F6D               	movwf	normalize@exponent& (0+255),b
  9016  003ECA                     
  9017                           ; BSR set to: 0
  9018                           ;src/print/toString.c: 78:     double value = *val;
  9019  003ECA  C053  FFD9         	movff	normalize@val,fsr2l
  9020  003ECE  C054  FFDA         	movff	normalize@val+1,fsr2h
  9021  003ED2  CFDE F06F          	movff	postinc2,normalize@value
  9022  003ED6  CFDE F070          	movff	postinc2,normalize@value+1
  9023  003EDA  CFDE F071          	movff	postinc2,normalize@value+2
  9024  003EDE  CFDE F072          	movff	postinc2,normalize@value+3
  9025                           
  9026                           ;src/print/toString.c: 80:     while (value >= 1.0) {
  9027  003EE2  EF90  F01F         	goto	l7778
  9028  003EE6                     l7774:
  9029                           
  9030                           ;src/print/toString.c: 81:         value /= 10.0;
  9031  003EE6  C06F  F01E         	movff	normalize@value,___fldiv@b
  9032  003EEA  C070  F01F         	movff	normalize@value+1,___fldiv@b+1
  9033  003EEE  C071  F020         	movff	normalize@value+2,___fldiv@b+2
  9034  003EF2  C072  F021         	movff	normalize@value+3,___fldiv@b+3
  9035  003EF6  0E00               	movlw	0
  9036  003EF8  6E22               	movwf	___fldiv@a^0,c
  9037  003EFA  0E00               	movlw	0
  9038  003EFC  6E23               	movwf	(___fldiv@a+1)^0,c
  9039  003EFE  0E20               	movlw	32
  9040  003F00  6E24               	movwf	(___fldiv@a+2)^0,c
  9041  003F02  0E41               	movlw	65
  9042  003F04  6E25               	movwf	(___fldiv@a+3)^0,c
  9043  003F06  EC52  F00F         	call	___fldiv	;wreg free
  9044  003F0A  C01E  F06F         	movff	?___fldiv,normalize@value
  9045  003F0E  C01F  F070         	movff	?___fldiv+1,normalize@value+1
  9046  003F12  C020  F071         	movff	?___fldiv+2,normalize@value+2
  9047  003F16  C021  F072         	movff	?___fldiv+3,normalize@value+3
  9048  003F1A                     
  9049                           ;src/print/toString.c: 82:         ++exponent;
  9050  003F1A  0100               	movlb	0	; () banked
  9051  003F1C  4B6D               	infsnz	normalize@exponent& (0+255),f,b
  9052  003F1E  2B6E               	incf	(normalize@exponent+1)& (0+255),f,b
  9053  003F20                     l7778:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;src/print/toString.c: 80:     while (value >= 1.0) {
  9057  003F20  C06F  F004         	movff	normalize@value,___flge@ff1
  9058  003F24  C070  F005         	movff	normalize@value+1,___flge@ff1+1
  9059  003F28  C071  F006         	movff	normalize@value+2,___flge@ff1+2
  9060  003F2C  C072  F007         	movff	normalize@value+3,___flge@ff1+3
  9061  003F30  0E00               	movlw	0
  9062  003F32  6E08               	movwf	___flge@ff2^0,c
  9063  003F34  0E00               	movlw	0
  9064  003F36  6E09               	movwf	(___flge@ff2+1)^0,c
  9065  003F38  0E80               	movlw	128
  9066  003F3A  6E0A               	movwf	(___flge@ff2+2)^0,c
  9067  003F3C  0E3F               	movlw	63
  9068  003F3E  6E0B               	movwf	(___flge@ff2+3)^0,c
  9069  003F40  EC88  F021         	call	___flge	;wreg free
  9070  003F44  B0D8               	btfsc	status,0,c
  9071  003F46  EFA7  F01F         	goto	u8671
  9072  003F4A  EFA9  F01F         	goto	u8670
  9073  003F4E                     u8671:
  9074  003F4E  EF73  F01F         	goto	l7774
  9075  003F52                     u8670:
  9076  003F52  EFC9  F01F         	goto	l7784
  9077  003F56                     l7780:
  9078                           
  9079                           ;src/print/toString.c: 86:         value *= 10.0;
  9080  003F56  C06F  F047         	movff	normalize@value,___flmul@b
  9081  003F5A  C070  F048         	movff	normalize@value+1,___flmul@b+1
  9082  003F5E  C071  F049         	movff	normalize@value+2,___flmul@b+2
  9083  003F62  C072  F04A         	movff	normalize@value+3,___flmul@b+3
  9084  003F66  0E00               	movlw	0
  9085  003F68  6E4B               	movwf	___flmul@a^0,c
  9086  003F6A  0E00               	movlw	0
  9087  003F6C  6E4C               	movwf	(___flmul@a+1)^0,c
  9088  003F6E  0E20               	movlw	32
  9089  003F70  6E4D               	movwf	(___flmul@a+2)^0,c
  9090  003F72  0E41               	movlw	65
  9091  003F74  6E4E               	movwf	(___flmul@a+3)^0,c
  9092  003F76  EC63  F00B         	call	___flmul	;wreg free
  9093  003F7A  C047  F06F         	movff	?___flmul,normalize@value
  9094  003F7E  C048  F070         	movff	?___flmul+1,normalize@value+1
  9095  003F82  C049  F071         	movff	?___flmul+2,normalize@value+2
  9096  003F86  C04A  F072         	movff	?___flmul+3,normalize@value+3
  9097  003F8A                     
  9098                           ;src/print/toString.c: 87:         --exponent;
  9099  003F8A  0100               	movlb	0	; () banked
  9100  003F8C  076D               	decf	normalize@exponent& (0+255),f,b
  9101  003F8E  A0D8               	btfss	status,0,c
  9102  003F90  076E               	decf	(normalize@exponent+1)& (0+255),f,b
  9103  003F92                     l7784:
  9104                           
  9105                           ;src/print/toString.c: 85:     while (value < 0.1) {
  9106  003F92  C06F  F004         	movff	normalize@value,___flge@ff1
  9107  003F96  C070  F005         	movff	normalize@value+1,___flge@ff1+1
  9108  003F9A  C071  F006         	movff	normalize@value+2,___flge@ff1+2
  9109  003F9E  C072  F007         	movff	normalize@value+3,___flge@ff1+3
  9110  003FA2  0ECD               	movlw	205
  9111  003FA4  6E08               	movwf	___flge@ff2^0,c
  9112  003FA6  0ECC               	movlw	204
  9113  003FA8  6E09               	movwf	(___flge@ff2+1)^0,c
  9114  003FAA  0ECC               	movlw	204
  9115  003FAC  6E0A               	movwf	(___flge@ff2+2)^0,c
  9116  003FAE  0E3D               	movlw	61
  9117  003FB0  6E0B               	movwf	(___flge@ff2+3)^0,c
  9118  003FB2  EC88  F021         	call	___flge	;wreg free
  9119  003FB6  A0D8               	btfss	status,0,c
  9120  003FB8  EFE0  F01F         	goto	u8681
  9121  003FBC  EFE2  F01F         	goto	u8680
  9122  003FC0                     u8681:
  9123  003FC0  EFAB  F01F         	goto	l7780
  9124  003FC4                     u8680:
  9125  003FC4                     
  9126                           ;src/print/toString.c: 89:     *val = value;
  9127  003FC4  C053  FFD9         	movff	normalize@val,fsr2l
  9128  003FC8  C054  FFDA         	movff	normalize@val+1,fsr2h
  9129  003FCC  C06F  FFDE         	movff	normalize@value,postinc2
  9130  003FD0  C070  FFDE         	movff	normalize@value+1,postinc2
  9131  003FD4  C071  FFDE         	movff	normalize@value+2,postinc2
  9132  003FD8  C072  FFDE         	movff	normalize@value+3,postinc2
  9133  003FDC                     
  9134                           ;src/print/toString.c: 91:     return exponent;
  9135  003FDC  C06D  F053         	movff	normalize@exponent,?_normalize
  9136  003FE0  C06E  F054         	movff	normalize@exponent+1,?_normalize+1
  9137  003FE4  0012               	return		;funcret
  9138  003FE6                     __end_of_normalize:
  9139                           	opt callstack 0
  9140                           
  9141 ;; *************** function ___fleq *****************
  9142 ;; Defined at:
  9143 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  ff1             4    3[COMRAM] int 
  9146 ;;  ff2             4    7[COMRAM] int 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;		None               void
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, status,0
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9158 ;;      Params:         8       0       0       0       0       0       0       0       0
  9159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9160 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9161 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9162 ;;Total ram usage:       12 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; Hardware stack levels required when called:    2
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_ftoa_sci
  9169 ;;		_ftoa
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text28
  9174  004824                     __ptext28:
  9175                           	opt callstack 0
  9176  004824                     ___fleq:
  9177                           	opt callstack 24
  9178  004824  0E00               	movlw	0
  9179  004826  1404               	andwf	___fleq@ff1^0,w,c
  9180  004828  6E0C               	movwf	??___fleq^0,c
  9181  00482A  0E00               	movlw	0
  9182  00482C  1405               	andwf	(___fleq@ff1+1)^0,w,c
  9183  00482E  6E0D               	movwf	(??___fleq+1)^0,c
  9184  004830  0E80               	movlw	128
  9185  004832  1406               	andwf	(___fleq@ff1+2)^0,w,c
  9186  004834  6E0E               	movwf	(??___fleq+2)^0,c
  9187  004836  0E7F               	movlw	127
  9188  004838  1407               	andwf	(___fleq@ff1+3)^0,w,c
  9189  00483A  6E0F               	movwf	(??___fleq+3)^0,c
  9190  00483C  500C               	movf	??___fleq^0,w,c
  9191  00483E  100D               	iorwf	(??___fleq+1)^0,w,c
  9192  004840  100E               	iorwf	(??___fleq+2)^0,w,c
  9193  004842  100F               	iorwf	(??___fleq+3)^0,w,c
  9194  004844  A4D8               	btfss	status,2,c
  9195  004846  EF27  F024         	goto	u8701
  9196  00484A  EF29  F024         	goto	u8700
  9197  00484E                     u8701:
  9198  00484E  EF31  F024         	goto	l7820
  9199  004852                     u8700:
  9200  004852  0E00               	movlw	0
  9201  004854  6E04               	movwf	___fleq@ff1^0,c
  9202  004856  0E00               	movlw	0
  9203  004858  6E05               	movwf	(___fleq@ff1+1)^0,c
  9204  00485A  0E00               	movlw	0
  9205  00485C  6E06               	movwf	(___fleq@ff1+2)^0,c
  9206  00485E  0E00               	movlw	0
  9207  004860  6E07               	movwf	(___fleq@ff1+3)^0,c
  9208  004862                     l7820:
  9209  004862  0E00               	movlw	0
  9210  004864  1408               	andwf	___fleq@ff2^0,w,c
  9211  004866  6E0C               	movwf	??___fleq^0,c
  9212  004868  0E00               	movlw	0
  9213  00486A  1409               	andwf	(___fleq@ff2+1)^0,w,c
  9214  00486C  6E0D               	movwf	(??___fleq+1)^0,c
  9215  00486E  0E80               	movlw	128
  9216  004870  140A               	andwf	(___fleq@ff2+2)^0,w,c
  9217  004872  6E0E               	movwf	(??___fleq+2)^0,c
  9218  004874  0E7F               	movlw	127
  9219  004876  140B               	andwf	(___fleq@ff2+3)^0,w,c
  9220  004878  6E0F               	movwf	(??___fleq+3)^0,c
  9221  00487A  500C               	movf	??___fleq^0,w,c
  9222  00487C  100D               	iorwf	(??___fleq+1)^0,w,c
  9223  00487E  100E               	iorwf	(??___fleq+2)^0,w,c
  9224  004880  100F               	iorwf	(??___fleq+3)^0,w,c
  9225  004882  A4D8               	btfss	status,2,c
  9226  004884  EF46  F024         	goto	u8711
  9227  004888  EF48  F024         	goto	u8710
  9228  00488C                     u8711:
  9229  00488C  EF50  F024         	goto	l7824
  9230  004890                     u8710:
  9231  004890  0E00               	movlw	0
  9232  004892  6E08               	movwf	___fleq@ff2^0,c
  9233  004894  0E00               	movlw	0
  9234  004896  6E09               	movwf	(___fleq@ff2+1)^0,c
  9235  004898  0E00               	movlw	0
  9236  00489A  6E0A               	movwf	(___fleq@ff2+2)^0,c
  9237  00489C  0E00               	movlw	0
  9238  00489E  6E0B               	movwf	(___fleq@ff2+3)^0,c
  9239  0048A0                     l7824:
  9240  0048A0  5008               	movf	___fleq@ff2^0,w,c
  9241  0048A2  1804               	xorwf	___fleq@ff1^0,w,c
  9242  0048A4  E10F               	bnz	u8720
  9243  0048A6  5009               	movf	(___fleq@ff2+1)^0,w,c
  9244  0048A8  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  9245  0048AA  E10C               	bnz	u8720
  9246  0048AC  500A               	movf	(___fleq@ff2+2)^0,w,c
  9247  0048AE  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  9248  0048B0  E109               	bnz	u8720
  9249  0048B2  500B               	movf	(___fleq@ff2+3)^0,w,c
  9250  0048B4  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  9251  0048B6  B4D8               	btfsc	status,2,c
  9252  0048B8  EF60  F024         	goto	u8721
  9253  0048BC  EF62  F024         	goto	u8720
  9254  0048C0                     u8721:
  9255  0048C0  EF65  F024         	goto	l7828
  9256  0048C4                     u8720:
  9257  0048C4  90D8               	bcf	status,0,c
  9258  0048C6  EF66  F024         	goto	l1209
  9259  0048CA                     l7828:
  9260  0048CA  80D8               	bsf	status,0,c
  9261  0048CC                     l1209:
  9262  0048CC  0012               	return		;funcret
  9263  0048CE                     __end_of___fleq:
  9264                           	opt callstack 0
  9265                           
  9266 ;; *************** function _cleanS *****************
  9267 ;; Defined at:
  9268 ;;		line 115 in file "src/print/format.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  str             2    7[COMRAM] PTR unsigned char 
  9271 ;;		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), SerialLCD_task@txt(32), 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  i               2   12[COMRAM] int 
  9274 ;;  len             2   10[COMRAM] int 
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9284 ;;      Params:         2       0       0       0       0       0       0       0       0
  9285 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9286 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9287 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9288 ;;Total ram usage:        7 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:    3
  9291 ;; This function calls:
  9292 ;;		_strlen
  9293 ;; This function is called by:
  9294 ;;		_my_vsprintf
  9295 ;;		_SerialLCD_task
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text29
  9300  004F68                     __ptext29:
  9301                           	opt callstack 0
  9302  004F68                     _cleanS:
  9303                           	opt callstack 24
  9304  004F68                     
  9305                           ;src/print/format.c: 116:     int i,len;;src/print/format.c: 117:     len = strlen(str);
  9306  004F68  C008  F004         	movff	cleanS@str,strlen@s
  9307  004F6C  C009  F005         	movff	cleanS@str+1,strlen@s+1
  9308  004F70  EC7E  F029         	call	_strlen	;wreg free
  9309  004F74  C004  F00B         	movff	?_strlen,cleanS@len
  9310  004F78  C005  F00C         	movff	?_strlen+1,cleanS@len+1
  9311  004F7C                     
  9312                           ;src/print/format.c: 118:     for(i=0;i<len;i++)
  9313  004F7C  0E00               	movlw	0
  9314  004F7E  6E0E               	movwf	(cleanS@i+1)^0,c
  9315  004F80  0E00               	movlw	0
  9316  004F82  6E0D               	movwf	cleanS@i^0,c
  9317  004F84  EFCE  F027         	goto	l7938
  9318  004F88                     l7934:
  9319                           
  9320                           ;src/print/format.c: 119:         str[i] = 0;
  9321  004F88  500D               	movf	cleanS@i^0,w,c
  9322  004F8A  2408               	addwf	cleanS@str^0,w,c
  9323  004F8C  6ED9               	movwf	fsr2l,c
  9324  004F8E  500E               	movf	(cleanS@i+1)^0,w,c
  9325  004F90  2009               	addwfc	(cleanS@str+1)^0,w,c
  9326  004F92  6EDA               	movwf	fsr2h,c
  9327  004F94  0E00               	movlw	0
  9328  004F96  6EDF               	movwf	indf2,c
  9329  004F98  4A0D               	infsnz	cleanS@i^0,f,c
  9330  004F9A  2A0E               	incf	(cleanS@i+1)^0,f,c
  9331  004F9C                     l7938:
  9332  004F9C  500B               	movf	cleanS@len^0,w,c
  9333  004F9E  5C0D               	subwf	cleanS@i^0,w,c
  9334  004FA0  500E               	movf	(cleanS@i+1)^0,w,c
  9335  004FA2  0A80               	xorlw	128
  9336  004FA4  6E0A               	movwf	??_cleanS^0,c
  9337  004FA6  500C               	movf	(cleanS@len+1)^0,w,c
  9338  004FA8  0A80               	xorlw	128
  9339  004FAA  580A               	subwfb	??_cleanS^0,w,c
  9340  004FAC  A0D8               	btfss	status,0,c
  9341  004FAE  EFDB  F027         	goto	u8911
  9342  004FB2  EFDD  F027         	goto	u8910
  9343  004FB6                     u8911:
  9344  004FB6  EFC4  F027         	goto	l7934
  9345  004FBA                     u8910:
  9346  004FBA  0012               	return		;funcret
  9347  004FBC                     __end_of_cleanS:
  9348                           	opt callstack 0
  9349                           
  9350 ;; *************** function _addSig *****************
  9351 ;; Defined at:
  9352 ;;		line 361 in file "src/print/format.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  numS            2   29[COMRAM] PTR unsigned char 
  9355 ;;		 -> my_vsprintf@buffer(64), 
  9356 ;;  num             4   31[COMRAM] PTR unsigned char 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  k               2   39[COMRAM] int 
  9359 ;;  len             2   37[COMRAM] int 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1    wreg      void 
  9362 ;; Registers used:
  9363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9369 ;;      Params:         6       0       0       0       0       0       0       0       0
  9370 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9371 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9372 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9373 ;;Total ram usage:       12 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; Hardware stack levels required when called:    3
  9376 ;; This function calls:
  9377 ;;		___flge
  9378 ;;		_strlen
  9379 ;; This function is called by:
  9380 ;;		_my_vsprintf
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           	psect	text30
  9385  003D6C                     __ptext30:
  9386                           	opt callstack 0
  9387  003D6C                     _addSig:
  9388                           	opt callstack 24
  9389  003D6C                     
  9390                           ;src/print/format.c: 362:     int k;;src/print/format.c: 363:     int len = strlen(numS)
      +                          ;
  9391  003D6C  C01E  F004         	movff	addSig@numS,strlen@s
  9392  003D70  C01F  F005         	movff	addSig@numS+1,strlen@s+1
  9393  003D74  EC7E  F029         	call	_strlen	;wreg free
  9394  003D78  C004  F026         	movff	?_strlen,addSig@len
  9395  003D7C  C005  F027         	movff	?_strlen+1,addSig@len+1
  9396  003D80                     
  9397                           ;src/print/format.c: 365:     if(sig==1 || num < 0.0) {
  9398  003D80  0100               	movlb	0	; () banked
  9399  003D82  05E8               	decf	_sig& (0+255),w,b
  9400  003D84  B4D8               	btfsc	status,2,c
  9401  003D86  EFC7  F01E         	goto	u9601
  9402  003D8A  EFC9  F01E         	goto	u9600
  9403  003D8E                     u9601:
  9404  003D8E  EFD0  F01E         	goto	l598
  9405  003D92                     u9600:
  9406  003D92                     
  9407                           ; BSR set to: 0
  9408  003D92  BE23               	btfsc	(addSig@num+3)^0,7,c
  9409  003D94  EFD0  F01E         	goto	u9610
  9410  003D98  EFCE  F01E         	goto	u9611
  9411  003D9C                     u9611:
  9412  003D9C  EF25  F01F         	goto	l8284
  9413  003DA0                     u9610:
  9414  003DA0                     l598:
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;src/print/format.c: 366:         for(k = len;k > 0;k--)
  9418  003DA0  C026  F028         	movff	addSig@len,addSig@k
  9419  003DA4  C027  F029         	movff	addSig@len+1,addSig@k+1
  9420  003DA8                     l8268:
  9421  003DA8  BE29               	btfsc	(addSig@k+1)^0,7,c
  9422  003DAA  EFE1  F01E         	goto	u9620
  9423  003DAE  5029               	movf	(addSig@k+1)^0,w,c
  9424  003DB0  E106               	bnz	u9621
  9425  003DB2  0428               	decf	addSig@k^0,w,c
  9426  003DB4  B0D8               	btfsc	status,0,c
  9427  003DB6  EFDF  F01E         	goto	u9621
  9428  003DBA  EFE1  F01E         	goto	u9620
  9429  003DBE                     u9621:
  9430  003DBE  EFE3  F01E         	goto	l8272
  9431  003DC2                     u9620:
  9432  003DC2  EFFC  F01E         	goto	l8278
  9433  003DC6                     l8272:
  9434                           
  9435                           ;src/print/format.c: 367:             numS[k]=numS[k-1];
  9436  003DC6  5028               	movf	addSig@k^0,w,c
  9437  003DC8  241E               	addwf	addSig@numS^0,w,c
  9438  003DCA  6E24               	movwf	??_addSig^0,c
  9439  003DCC  5029               	movf	(addSig@k+1)^0,w,c
  9440  003DCE  201F               	addwfc	(addSig@numS+1)^0,w,c
  9441  003DD0  6E25               	movwf	(??_addSig+1)^0,c
  9442  003DD2  0EFF               	movlw	255
  9443  003DD4  2424               	addwf	??_addSig^0,w,c
  9444  003DD6  6ED9               	movwf	fsr2l,c
  9445  003DD8  0EFF               	movlw	255
  9446  003DDA  2025               	addwfc	(??_addSig+1)^0,w,c
  9447  003DDC  6EDA               	movwf	fsr2h,c
  9448  003DDE  5028               	movf	addSig@k^0,w,c
  9449  003DE0  241E               	addwf	addSig@numS^0,w,c
  9450  003DE2  6EE1               	movwf	fsr1l,c
  9451  003DE4  5029               	movf	(addSig@k+1)^0,w,c
  9452  003DE6  201F               	addwfc	(addSig@numS+1)^0,w,c
  9453  003DE8  6EE2               	movwf	fsr1h,c
  9454  003DEA  CFDF FFE7          	movff	indf2,indf1
  9455  003DEE  0628               	decf	addSig@k^0,f,c
  9456  003DF0  A0D8               	btfss	status,0,c
  9457  003DF2  0629               	decf	(addSig@k+1)^0,f,c
  9458  003DF4  EFD4  F01E         	goto	l8268
  9459  003DF8                     l8278:
  9460                           
  9461                           ;src/print/format.c: 368:         if (num > 0)
  9462  003DF8  0E00               	movlw	0
  9463  003DFA  6E04               	movwf	___flge@ff1^0,c
  9464  003DFC  0E00               	movlw	0
  9465  003DFE  6E05               	movwf	(___flge@ff1+1)^0,c
  9466  003E00  0E00               	movlw	0
  9467  003E02  6E06               	movwf	(___flge@ff1+2)^0,c
  9468  003E04  0E00               	movlw	0
  9469  003E06  6E07               	movwf	(___flge@ff1+3)^0,c
  9470  003E08  C020  F008         	movff	addSig@num,___flge@ff2
  9471  003E0C  C021  F009         	movff	addSig@num+1,___flge@ff2+1
  9472  003E10  C022  F00A         	movff	addSig@num+2,___flge@ff2+2
  9473  003E14  C023  F00B         	movff	addSig@num+3,___flge@ff2+3
  9474  003E18  EC88  F021         	call	___flge	;wreg free
  9475  003E1C  B0D8               	btfsc	status,0,c
  9476  003E1E  EF13  F01F         	goto	u9631
  9477  003E22  EF15  F01F         	goto	u9630
  9478  003E26                     u9631:
  9479  003E26  EF1D  F01F         	goto	l8282
  9480  003E2A                     u9630:
  9481  003E2A                     
  9482                           ;src/print/format.c: 369:             numS[0]= '+';
  9483  003E2A  C01E  FFD9         	movff	addSig@numS,fsr2l
  9484  003E2E  C01F  FFDA         	movff	addSig@numS+1,fsr2h
  9485  003E32  0E2B               	movlw	43
  9486  003E34  6EDF               	movwf	indf2,c
  9487  003E36  EF5F  F01F         	goto	l607
  9488  003E3A                     l8282:
  9489                           
  9490                           ;src/print/format.c: 371:             numS[0]= '-';
  9491  003E3A  C01E  FFD9         	movff	addSig@numS,fsr2l
  9492  003E3E  C01F  FFDA         	movff	addSig@numS+1,fsr2h
  9493  003E42  0E2D               	movlw	45
  9494  003E44  6EDF               	movwf	indf2,c
  9495  003E46  EF5F  F01F         	goto	l607
  9496  003E4A                     l8284:
  9497                           
  9498                           ; BSR set to: 0
  9499  003E4A  05E5               	decf	_space& (0+255),w,b
  9500  003E4C  A4D8               	btfss	status,2,c
  9501  003E4E  EF2B  F01F         	goto	u9641
  9502  003E52  EF2D  F01F         	goto	u9640
  9503  003E56                     u9641:
  9504  003E56  EF5F  F01F         	goto	l607
  9505  003E5A                     u9640:
  9506  003E5A                     
  9507                           ; BSR set to: 0
  9508                           ;src/print/format.c: 374:         for(k = len;k > 0;k--)
  9509  003E5A  C026  F028         	movff	addSig@len,addSig@k
  9510  003E5E  C027  F029         	movff	addSig@len+1,addSig@k+1
  9511  003E62                     l8288:
  9512  003E62  BE29               	btfsc	(addSig@k+1)^0,7,c
  9513  003E64  EF3E  F01F         	goto	u9650
  9514  003E68  5029               	movf	(addSig@k+1)^0,w,c
  9515  003E6A  E106               	bnz	u9651
  9516  003E6C  0428               	decf	addSig@k^0,w,c
  9517  003E6E  B0D8               	btfsc	status,0,c
  9518  003E70  EF3C  F01F         	goto	u9651
  9519  003E74  EF3E  F01F         	goto	u9650
  9520  003E78                     u9651:
  9521  003E78  EF40  F01F         	goto	l8292
  9522  003E7C                     u9650:
  9523  003E7C  EF59  F01F         	goto	l8298
  9524  003E80                     l8292:
  9525                           
  9526                           ;src/print/format.c: 375:             numS[k]=numS[k-1];
  9527  003E80  5028               	movf	addSig@k^0,w,c
  9528  003E82  241E               	addwf	addSig@numS^0,w,c
  9529  003E84  6E24               	movwf	??_addSig^0,c
  9530  003E86  5029               	movf	(addSig@k+1)^0,w,c
  9531  003E88  201F               	addwfc	(addSig@numS+1)^0,w,c
  9532  003E8A  6E25               	movwf	(??_addSig+1)^0,c
  9533  003E8C  0EFF               	movlw	255
  9534  003E8E  2424               	addwf	??_addSig^0,w,c
  9535  003E90  6ED9               	movwf	fsr2l,c
  9536  003E92  0EFF               	movlw	255
  9537  003E94  2025               	addwfc	(??_addSig+1)^0,w,c
  9538  003E96  6EDA               	movwf	fsr2h,c
  9539  003E98  5028               	movf	addSig@k^0,w,c
  9540  003E9A  241E               	addwf	addSig@numS^0,w,c
  9541  003E9C  6EE1               	movwf	fsr1l,c
  9542  003E9E  5029               	movf	(addSig@k+1)^0,w,c
  9543  003EA0  201F               	addwfc	(addSig@numS+1)^0,w,c
  9544  003EA2  6EE2               	movwf	fsr1h,c
  9545  003EA4  CFDF FFE7          	movff	indf2,indf1
  9546  003EA8  0628               	decf	addSig@k^0,f,c
  9547  003EAA  A0D8               	btfss	status,0,c
  9548  003EAC  0629               	decf	(addSig@k+1)^0,f,c
  9549  003EAE  EF31  F01F         	goto	l8288
  9550  003EB2                     l8298:
  9551                           
  9552                           ;src/print/format.c: 376:         numS[0]= ' ';
  9553  003EB2  C01E  FFD9         	movff	addSig@numS,fsr2l
  9554  003EB6  C01F  FFDA         	movff	addSig@numS+1,fsr2h
  9555  003EBA  0E20               	movlw	32
  9556  003EBC  6EDF               	movwf	indf2,c
  9557  003EBE                     l607:
  9558  003EBE  0012               	return		;funcret
  9559  003EC0                     __end_of_addSig:
  9560                           	opt callstack 0
  9561                           
  9562 ;; *************** function _addOx *****************
  9563 ;; Defined at:
  9564 ;;		line 383 in file "src/print/format.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  hoS             2    7[COMRAM] PTR unsigned char 
  9567 ;;		 -> my_vsprintf@buffer(64), 
  9568 ;;  num             2    9[COMRAM] int 
  9569 ;;  type            1   11[COMRAM] unsigned char 
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;  k               2   16[COMRAM] int 
  9572 ;;  len             2   14[COMRAM] int 
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  1    wreg      void 
  9575 ;; Registers used:
  9576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9577 ;; Tracked objects:
  9578 ;;		On entry : 0/0
  9579 ;;		On exit  : 0/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9582 ;;      Params:         5       0       0       0       0       0       0       0       0
  9583 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9584 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9585 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9586 ;;Total ram usage:       11 bytes
  9587 ;; Hardware stack levels used:    1
  9588 ;; Hardware stack levels required when called:    3
  9589 ;; This function calls:
  9590 ;;		_strlen
  9591 ;; This function is called by:
  9592 ;;		_my_vsprintf
  9593 ;; This function uses a non-reentrant model
  9594 ;;
  9595                           
  9596                           	psect	text31
  9597  003BF4                     __ptext31:
  9598                           	opt callstack 0
  9599  003BF4                     _addOx:
  9600                           	opt callstack 24
  9601  003BF4                     
  9602                           ;src/print/format.c: 384:     int k;;src/print/format.c: 385:     int len = strlen(hoS);
  9603  003BF4  C008  F004         	movff	addOx@hoS,strlen@s
  9604  003BF8  C009  F005         	movff	addOx@hoS+1,strlen@s+1
  9605  003BFC  EC7E  F029         	call	_strlen	;wreg free
  9606  003C00  C004  F00F         	movff	?_strlen,addOx@len
  9607  003C04  C005  F010         	movff	?_strlen+1,addOx@len+1
  9608  003C08                     
  9609                           ;src/print/format.c: 387:     if(numeral == 1 && num != 0 && type=='x') {
  9610  003C08  045A               	decf	_numeral^0,w,c
  9611  003C0A  A4D8               	btfss	status,2,c
  9612  003C0C  EF0A  F01E         	goto	u9661
  9613  003C10  EF0C  F01E         	goto	u9660
  9614  003C14                     u9661:
  9615  003C14  EF69  F01E         	goto	l8322
  9616  003C18                     u9660:
  9617  003C18  500A               	movf	addOx@num^0,w,c
  9618  003C1A  100B               	iorwf	(addOx@num+1)^0,w,c
  9619  003C1C  B4D8               	btfsc	status,2,c
  9620  003C1E  EF13  F01E         	goto	u9671
  9621  003C22  EF15  F01E         	goto	u9670
  9622  003C26                     u9671:
  9623  003C26  EF69  F01E         	goto	l8322
  9624  003C2A                     u9670:
  9625  003C2A  0E78               	movlw	120
  9626  003C2C  180C               	xorwf	addOx@type^0,w,c
  9627  003C2E  A4D8               	btfss	status,2,c
  9628  003C30  EF1C  F01E         	goto	u9681
  9629  003C34  EF1E  F01E         	goto	u9680
  9630  003C38                     u9681:
  9631  003C38  EF69  F01E         	goto	l8322
  9632  003C3C                     u9680:
  9633  003C3C                     
  9634                           ;src/print/format.c: 388:         for(k = len+1;k > 1;k--)
  9635  003C3C  0E01               	movlw	1
  9636  003C3E  240F               	addwf	addOx@len^0,w,c
  9637  003C40  6E11               	movwf	addOx@k^0,c
  9638  003C42  0E00               	movlw	0
  9639  003C44  2010               	addwfc	(addOx@len+1)^0,w,c
  9640  003C46  6E12               	movwf	(addOx@k+1)^0,c
  9641  003C48  BE12               	btfsc	(addOx@k+1)^0,7,c
  9642  003C4A  EF32  F01E         	goto	u9690
  9643  003C4E  5012               	movf	(addOx@k+1)^0,w,c
  9644  003C50  E107               	bnz	u9691
  9645  003C52  0E02               	movlw	2
  9646  003C54  5C11               	subwf	addOx@k^0,w,c
  9647  003C56  B0D8               	btfsc	status,0,c
  9648  003C58  EF30  F01E         	goto	u9691
  9649  003C5C  EF32  F01E         	goto	u9690
  9650  003C60                     u9691:
  9651  003C60  EF34  F01E         	goto	l8312
  9652  003C64                     u9690:
  9653  003C64  EF59  F01E         	goto	l8318
  9654  003C68                     l8312:
  9655                           
  9656                           ;src/print/format.c: 389:             hoS[k]=hoS[k-2];
  9657  003C68  5011               	movf	addOx@k^0,w,c
  9658  003C6A  2408               	addwf	addOx@hoS^0,w,c
  9659  003C6C  6E0D               	movwf	??_addOx^0,c
  9660  003C6E  5012               	movf	(addOx@k+1)^0,w,c
  9661  003C70  2009               	addwfc	(addOx@hoS+1)^0,w,c
  9662  003C72  6E0E               	movwf	(??_addOx+1)^0,c
  9663  003C74  0EFE               	movlw	254
  9664  003C76  240D               	addwf	??_addOx^0,w,c
  9665  003C78  6ED9               	movwf	fsr2l,c
  9666  003C7A  0EFF               	movlw	255
  9667  003C7C  200E               	addwfc	(??_addOx+1)^0,w,c
  9668  003C7E  6EDA               	movwf	fsr2h,c
  9669  003C80  5011               	movf	addOx@k^0,w,c
  9670  003C82  2408               	addwf	addOx@hoS^0,w,c
  9671  003C84  6EE1               	movwf	fsr1l,c
  9672  003C86  5012               	movf	(addOx@k+1)^0,w,c
  9673  003C88  2009               	addwfc	(addOx@hoS+1)^0,w,c
  9674  003C8A  6EE2               	movwf	fsr1h,c
  9675  003C8C  CFDF FFE7          	movff	indf2,indf1
  9676  003C90  0611               	decf	addOx@k^0,f,c
  9677  003C92  A0D8               	btfss	status,0,c
  9678  003C94  0612               	decf	(addOx@k+1)^0,f,c
  9679  003C96  BE12               	btfsc	(addOx@k+1)^0,7,c
  9680  003C98  EF59  F01E         	goto	u9700
  9681  003C9C  5012               	movf	(addOx@k+1)^0,w,c
  9682  003C9E  E107               	bnz	u9701
  9683  003CA0  0E02               	movlw	2
  9684  003CA2  5C11               	subwf	addOx@k^0,w,c
  9685  003CA4  B0D8               	btfsc	status,0,c
  9686  003CA6  EF57  F01E         	goto	u9701
  9687  003CAA  EF59  F01E         	goto	u9700
  9688  003CAE                     u9701:
  9689  003CAE  EF34  F01E         	goto	l8312
  9690  003CB2                     u9700:
  9691  003CB2                     l8318:
  9692                           
  9693                           ;src/print/format.c: 390:         hoS[0]= '0';
  9694  003CB2  C008  FFD9         	movff	addOx@hoS,fsr2l
  9695  003CB6  C009  FFDA         	movff	addOx@hoS+1,fsr2h
  9696  003CBA  0E30               	movlw	48
  9697  003CBC  6EDF               	movwf	indf2,c
  9698  003CBE                     
  9699                           ;src/print/format.c: 391:         hoS[1]= 'x';
  9700  003CBE  EE20 F001          	lfsr	2,1
  9701  003CC2  5008               	movf	addOx@hoS^0,w,c
  9702  003CC4  26D9               	addwf	fsr2l,f,c
  9703  003CC6  5009               	movf	(addOx@hoS+1)^0,w,c
  9704  003CC8  22DA               	addwfc	fsr2h,f,c
  9705  003CCA  0E78               	movlw	120
  9706  003CCC  6EDF               	movwf	indf2,c
  9707                           
  9708                           ;src/print/format.c: 392:     }
  9709  003CCE  EFB5  F01E         	goto	l617
  9710  003CD2                     l8322:
  9711  003CD2  045A               	decf	_numeral^0,w,c
  9712  003CD4  A4D8               	btfss	status,2,c
  9713  003CD6  EF6F  F01E         	goto	u9711
  9714  003CDA  EF71  F01E         	goto	u9710
  9715  003CDE                     u9711:
  9716  003CDE  EFB5  F01E         	goto	l617
  9717  003CE2                     u9710:
  9718  003CE2  500A               	movf	addOx@num^0,w,c
  9719  003CE4  100B               	iorwf	(addOx@num+1)^0,w,c
  9720  003CE6  B4D8               	btfsc	status,2,c
  9721  003CE8  EF78  F01E         	goto	u9721
  9722  003CEC  EF7A  F01E         	goto	u9720
  9723  003CF0                     u9721:
  9724  003CF0  EFB5  F01E         	goto	l617
  9725  003CF4                     u9720:
  9726  003CF4  0E6F               	movlw	111
  9727  003CF6  180C               	xorwf	addOx@type^0,w,c
  9728  003CF8  A4D8               	btfss	status,2,c
  9729  003CFA  EF81  F01E         	goto	u9731
  9730  003CFE  EF83  F01E         	goto	u9730
  9731  003D02                     u9731:
  9732  003D02  EFB5  F01E         	goto	l617
  9733  003D06                     u9730:
  9734  003D06                     
  9735                           ;src/print/format.c: 394:         for(k = len;k > 0;k--)
  9736  003D06  C00F  F011         	movff	addOx@len,addOx@k
  9737  003D0A  C010  F012         	movff	addOx@len+1,addOx@k+1
  9738  003D0E                     l8330:
  9739  003D0E  BE12               	btfsc	(addOx@k+1)^0,7,c
  9740  003D10  EF94  F01E         	goto	u9740
  9741  003D14  5012               	movf	(addOx@k+1)^0,w,c
  9742  003D16  E106               	bnz	u9741
  9743  003D18  0411               	decf	addOx@k^0,w,c
  9744  003D1A  B0D8               	btfsc	status,0,c
  9745  003D1C  EF92  F01E         	goto	u9741
  9746  003D20  EF94  F01E         	goto	u9740
  9747  003D24                     u9741:
  9748  003D24  EF96  F01E         	goto	l8334
  9749  003D28                     u9740:
  9750  003D28  EFAF  F01E         	goto	l8340
  9751  003D2C                     l8334:
  9752                           
  9753                           ;src/print/format.c: 395:             hoS[k]=hoS[k-1];
  9754  003D2C  5011               	movf	addOx@k^0,w,c
  9755  003D2E  2408               	addwf	addOx@hoS^0,w,c
  9756  003D30  6E0D               	movwf	??_addOx^0,c
  9757  003D32  5012               	movf	(addOx@k+1)^0,w,c
  9758  003D34  2009               	addwfc	(addOx@hoS+1)^0,w,c
  9759  003D36  6E0E               	movwf	(??_addOx+1)^0,c
  9760  003D38  0EFF               	movlw	255
  9761  003D3A  240D               	addwf	??_addOx^0,w,c
  9762  003D3C  6ED9               	movwf	fsr2l,c
  9763  003D3E  0EFF               	movlw	255
  9764  003D40  200E               	addwfc	(??_addOx+1)^0,w,c
  9765  003D42  6EDA               	movwf	fsr2h,c
  9766  003D44  5011               	movf	addOx@k^0,w,c
  9767  003D46  2408               	addwf	addOx@hoS^0,w,c
  9768  003D48  6EE1               	movwf	fsr1l,c
  9769  003D4A  5012               	movf	(addOx@k+1)^0,w,c
  9770  003D4C  2009               	addwfc	(addOx@hoS+1)^0,w,c
  9771  003D4E  6EE2               	movwf	fsr1h,c
  9772  003D50  CFDF FFE7          	movff	indf2,indf1
  9773  003D54  0611               	decf	addOx@k^0,f,c
  9774  003D56  A0D8               	btfss	status,0,c
  9775  003D58  0612               	decf	(addOx@k+1)^0,f,c
  9776  003D5A  EF87  F01E         	goto	l8330
  9777  003D5E                     l8340:
  9778                           
  9779                           ;src/print/format.c: 396:         hoS[0]= '0';
  9780  003D5E  C008  FFD9         	movff	addOx@hoS,fsr2l
  9781  003D62  C009  FFDA         	movff	addOx@hoS+1,fsr2h
  9782  003D66  0E30               	movlw	48
  9783  003D68  6EDF               	movwf	indf2,c
  9784  003D6A                     l617:
  9785  003D6A  0012               	return		;funcret
  9786  003D6C                     __end_of_addOx:
  9787                           	opt callstack 0
  9788                           
  9789 ;; *************** function _strlen *****************
  9790 ;; Defined at:
  9791 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;  s               2    3[COMRAM] PTR const unsigned char 
  9794 ;;		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), my_vsprintf@string(128), getWP@prec_str(5), 
  9795 ;;		 -> getWP@width_str(5), SERIAL_Printf@strout(128), SerialLCD_task@txt(32), 
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;  a               2    5[COMRAM] PTR const unsigned char 
  9798 ;;		 -> my_vsprintf@format(10), my_vsprintf@buffer(64), my_vsprintf@string(128), getWP@prec_str(5), 
  9799 ;;		 -> getWP@width_str(5), SERIAL_Printf@strout(128), SerialLCD_task@txt(32), 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  2    3[COMRAM] unsigned int 
  9802 ;; Registers used:
  9803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9809 ;;      Params:         2       0       0       0       0       0       0       0       0
  9810 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9812 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9813 ;;Total ram usage:        4 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    2
  9816 ;; This function calls:
  9817 ;;		Nothing
  9818 ;; This function is called by:
  9819 ;;		_SERIAL_Write
  9820 ;;		_searchc
  9821 ;;		_posc
  9822 ;;		_roundStr
  9823 ;;		_upperCL
  9824 ;;		_cleanS
  9825 ;;		_getWP
  9826 ;;		_precF
  9827 ;;		_precE
  9828 ;;		_precG
  9829 ;;		_precI
  9830 ;;		_precS
  9831 ;;		_addSig
  9832 ;;		_addOx
  9833 ;;		_setWidth
  9834 ;;		_my_vsprintf
  9835 ;;		_reverse
  9836 ;;		_atoui
  9837 ;;		_strcat
  9838 ;;		_SERIAL_WriteLine
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           	psect	text32
  9843  0052FC                     __ptext32:
  9844                           	opt callstack 0
  9845  0052FC                     _strlen:
  9846                           	opt callstack 24
  9847  0052FC  C004  F006         	movff	strlen@s,strlen@a
  9848  005300  C005  F007         	movff	strlen@s+1,strlen@a+1
  9849  005304  EF86  F029         	goto	l6992
  9850  005308                     l6990:
  9851  005308  4A04               	infsnz	strlen@s^0,f,c
  9852  00530A  2A05               	incf	(strlen@s+1)^0,f,c
  9853  00530C                     l6992:
  9854  00530C  C004  FFD9         	movff	strlen@s,fsr2l
  9855  005310  C005  FFDA         	movff	strlen@s+1,fsr2h
  9856  005314  50DF               	movf	indf2,w,c
  9857  005316  A4D8               	btfss	status,2,c
  9858  005318  EF90  F029         	goto	u7361
  9859  00531C  EF92  F029         	goto	u7360
  9860  005320                     u7361:
  9861  005320  EF84  F029         	goto	l6990
  9862  005324                     u7360:
  9863  005324  5006               	movf	strlen@a^0,w,c
  9864  005326  5C04               	subwf	strlen@s^0,w,c
  9865  005328  6E04               	movwf	?_strlen^0,c
  9866  00532A  5007               	movf	(strlen@a+1)^0,w,c
  9867  00532C  5805               	subwfb	(strlen@s+1)^0,w,c
  9868  00532E  6E05               	movwf	(?_strlen+1)^0,c
  9869  005330  0012               	return		;funcret
  9870  005332                     __end_of_strlen:
  9871                           	opt callstack 0
  9872                           
  9873 ;; *************** function _LCD_Write *****************
  9874 ;; Defined at:
  9875 ;;		line 152 in file "src/lcd.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  str             2   14[COMRAM] PTR unsigned char 
  9878 ;;		 -> LCD_Printf@strout(128), 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  i               2   18[COMRAM] int 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      void 
  9883 ;; Registers used:
  9884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9890 ;;      Params:         2       0       0       0       0       0       0       0       0
  9891 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9892 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9893 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9894 ;;Total ram usage:        6 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:    7
  9897 ;; This function calls:
  9898 ;;		_LCD_SetRowCol
  9899 ;;		_LCD_WriteChar
  9900 ;; This function is called by:
  9901 ;;		_LCD_Printf
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           	psect	text33
  9906  004974                     __ptext33:
  9907                           	opt callstack 0
  9908  004974                     _LCD_Write:
  9909                           	opt callstack 21
  9910  004974                     
  9911                           ;src/lcd.c: 152: void LCD_Write(char *str);src/lcd.c: 153: {;src/lcd.c: 154:     int i =
      +                           0;
  9912  004974  0E00               	movlw	0
  9913  004976  6E14               	movwf	(LCD_Write@i+1)^0,c
  9914  004978  0E00               	movlw	0
  9915  00497A  6E13               	movwf	LCD_Write@i^0,c
  9916                           
  9917                           ;src/lcd.c: 155:     while(str[i] != 0)
  9918  00497C  EFFB  F024         	goto	l8850
  9919  004980                     l8838:
  9920                           
  9921                           ;src/lcd.c: 160:                 LCD_SetRowCol(1, lcd_c);
  9922  004980  C0DD  F008         	movff	_lcd_c,LCD_SetRowCol@col
  9923  004984  0E01               	movlw	1
  9924  004986  ECDE  F027         	call	_LCD_SetRowCol
  9925                           
  9926                           ;src/lcd.c: 161:                 break;
  9927  00498A  EFF9  F024         	goto	l8848
  9928  00498E                     l8840:
  9929                           
  9930                           ;src/lcd.c: 163:                 lcd_c = 0;
  9931  00498E  0E00               	movlw	0
  9932  004990  0100               	movlb	0	; () banked
  9933  004992  6FDE               	movwf	(_lcd_c+1)& (0+255),b
  9934  004994  0E00               	movlw	0
  9935  004996  6FDD               	movwf	_lcd_c& (0+255),b
  9936  004998                     
  9937                           ; BSR set to: 0
  9938                           ;src/lcd.c: 164:                 LCD_SetRowCol(lcd_r, lcd_c);
  9939  004998  C0DD  F008         	movff	_lcd_c,LCD_SetRowCol@col
  9940  00499C  5059               	movf	_lcd_r^0,w,c
  9941  00499E  ECDE  F027         	call	_LCD_SetRowCol
  9942                           
  9943                           ;src/lcd.c: 165:                 break;
  9944  0049A2  EFF9  F024         	goto	l8848
  9945  0049A6                     l8844:
  9946                           
  9947                           ;src/lcd.c: 167:                 LCD_WriteChar(str[i]);
  9948  0049A6  5013               	movf	LCD_Write@i^0,w,c
  9949  0049A8  240F               	addwf	LCD_Write@str^0,w,c
  9950  0049AA  6ED9               	movwf	fsr2l,c
  9951  0049AC  5014               	movf	(LCD_Write@i+1)^0,w,c
  9952  0049AE  2010               	addwfc	(LCD_Write@str+1)^0,w,c
  9953  0049B0  6EDA               	movwf	fsr2h,c
  9954  0049B2  50DF               	movf	indf2,w,c
  9955  0049B4  ECF0  F028         	call	_LCD_WriteChar
  9956                           
  9957                           ;src/lcd.c: 168:         }
  9958  0049B8  EFF9  F024         	goto	l8848
  9959  0049BC                     l8846:
  9960  0049BC  5013               	movf	LCD_Write@i^0,w,c
  9961  0049BE  240F               	addwf	LCD_Write@str^0,w,c
  9962  0049C0  6ED9               	movwf	fsr2l,c
  9963  0049C2  5014               	movf	(LCD_Write@i+1)^0,w,c
  9964  0049C4  2010               	addwfc	(LCD_Write@str+1)^0,w,c
  9965  0049C6  6EDA               	movwf	fsr2h,c
  9966  0049C8  50DF               	movf	indf2,w,c
  9967  0049CA  6E11               	movwf	??_LCD_Write^0,c
  9968  0049CC  6A12               	clrf	(??_LCD_Write+1)^0,c
  9969                           
  9970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9971                           ; Switch size 1, requested type "simple"
  9972                           ; Number of cases is 1, Range of values is 0 to 0
  9973                           ; switch strategies available:
  9974                           ; Name         Instructions Cycles
  9975                           ; simple_byte            4     3 (average)
  9976                           ;	Chosen strategy is simple_byte
  9977  0049CE  5012               	movf	(??_LCD_Write+1)^0,w,c
  9978  0049D0  0A00               	xorlw	0	; case 0
  9979  0049D2  B4D8               	btfsc	status,2,c
  9980  0049D4  EFEE  F024         	goto	l9446
  9981  0049D8  EFD3  F024         	goto	l8844
  9982  0049DC                     l9446:
  9983                           
  9984                           ; Switch size 1, requested type "simple"
  9985                           ; Number of cases is 2, Range of values is 10 to 13
  9986                           ; switch strategies available:
  9987                           ; Name         Instructions Cycles
  9988                           ; simple_byte            7     4 (average)
  9989                           ;	Chosen strategy is simple_byte
  9990  0049DC  5011               	movf	??_LCD_Write^0,w,c
  9991  0049DE  0A0A               	xorlw	10	; case 10
  9992  0049E0  B4D8               	btfsc	status,2,c
  9993  0049E2  EFC0  F024         	goto	l8838
  9994  0049E6  0A07               	xorlw	7	; case 13
  9995  0049E8  B4D8               	btfsc	status,2,c
  9996  0049EA  EFC7  F024         	goto	l8840
  9997  0049EE  EFD3  F024         	goto	l8844
  9998  0049F2                     l8848:
  9999                           
 10000                           ;src/lcd.c: 169:         i++;
 10001  0049F2  4A13               	infsnz	LCD_Write@i^0,f,c
 10002  0049F4  2A14               	incf	(LCD_Write@i+1)^0,f,c
 10003  0049F6                     l8850:
 10004                           
 10005                           ;src/lcd.c: 155:     while(str[i] != 0)
 10006  0049F6  5013               	movf	LCD_Write@i^0,w,c
 10007  0049F8  240F               	addwf	LCD_Write@str^0,w,c
 10008  0049FA  6ED9               	movwf	fsr2l,c
 10009  0049FC  5014               	movf	(LCD_Write@i+1)^0,w,c
 10010  0049FE  2010               	addwfc	(LCD_Write@str+1)^0,w,c
 10011  004A00  6EDA               	movwf	fsr2h,c
 10012  004A02  50DF               	movf	indf2,w,c
 10013  004A04  A4D8               	btfss	status,2,c
 10014  004A06  EF07  F025         	goto	u10341
 10015  004A0A  EF09  F025         	goto	u10340
 10016  004A0E                     u10341:
 10017  004A0E  EFDE  F024         	goto	l8846
 10018  004A12                     u10340:
 10019  004A12  0012               	return		;funcret
 10020  004A14                     __end_of_LCD_Write:
 10021                           	opt callstack 0
 10022                           
 10023 ;; *************** function _LCD_WriteChar *****************
 10024 ;; Defined at:
 10025 ;;		line 63 in file "src/lcd.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;  wData           1    wreg     unsigned char 
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;  wData           1   13[COMRAM] unsigned char 
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  1    wreg      void 
 10032 ;; Registers used:
 10033 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10039 ;;      Params:         0       0       0       0       0       0       0       0       0
 10040 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10041 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10042 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10043 ;;Total ram usage:        1 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; Hardware stack levels required when called:    6
 10046 ;; This function calls:
 10047 ;;		_LCD_SetRowCol
 10048 ;;		_LCD_WriteByte
 10049 ;; This function is called by:
 10050 ;;		_LCD_Write
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           	psect	text34
 10055  0051E0                     __ptext34:
 10056                           	opt callstack 0
 10057  0051E0                     _LCD_WriteChar:
 10058                           	opt callstack 21
 10059                           
 10060                           ;incstack = 0
 10061                           ;LCD_WriteChar@wData stored from wreg
 10062  0051E0  6E0E               	movwf	LCD_WriteChar@wData^0,c
 10063  0051E2                     
 10064                           ;src/lcd.c: 63: void LCD_WriteChar(char wData);src/lcd.c: 64: {;src/lcd.c: 66:     LCD_W
      +                          riteByte(wData);
 10065  0051E2  500E               	movf	LCD_WriteChar@wData^0,w,c
 10066  0051E4  ECFB  F029         	call	_LCD_WriteByte
 10067  0051E8                     
 10068                           ;src/lcd.c: 67:     lcd_c++;
 10069  0051E8  0100               	movlb	0	; () banked
 10070  0051EA  4BDD               	infsnz	_lcd_c& (0+255),f,b
 10071  0051EC  2BDE               	incf	(_lcd_c+1)& (0+255),f,b
 10072  0051EE                     
 10073                           ; BSR set to: 0
 10074                           ;src/lcd.c: 69:     if (lcd_c == 16 )
 10075  0051EE  0E10               	movlw	16
 10076  0051F0  19DD               	xorwf	_lcd_c& (0+255),w,b
 10077  0051F2  11DE               	iorwf	(_lcd_c+1)& (0+255),w,b
 10078  0051F4  A4D8               	btfss	status,2,c
 10079  0051F6  EFFF  F028         	goto	u10011
 10080  0051FA  EF01  F029         	goto	u10010
 10081  0051FE                     u10011:
 10082  0051FE  EF0E  F029         	goto	l862
 10083  005202                     u10010:
 10084  005202                     
 10085                           ; BSR set to: 0
 10086                           ;src/lcd.c: 70:     {;src/lcd.c: 71:         if(lcd_r == 0)
 10087  005202  5059               	movf	_lcd_r^0,w,c
 10088  005204  A4D8               	btfss	status,2,c
 10089  005206  EF07  F029         	goto	u10021
 10090  00520A  EF09  F029         	goto	u10020
 10091  00520E                     u10021:
 10092  00520E  EF0E  F029         	goto	l862
 10093  005212                     u10020:
 10094  005212                     
 10095                           ; BSR set to: 0
 10096                           ;src/lcd.c: 72:             LCD_SetRowCol(1,0);
 10097  005212  0E00               	movlw	0
 10098  005214  6E08               	movwf	LCD_SetRowCol@col^0,c
 10099  005216  0E01               	movlw	1
 10100  005218  ECDE  F027         	call	_LCD_SetRowCol
 10101  00521C                     l862:
 10102  00521C  0012               	return		;funcret
 10103  00521E                     __end_of_LCD_WriteChar:
 10104                           	opt callstack 0
 10105                           
 10106 ;; *************** function _LCD_WriteByte *****************
 10107 ;; Defined at:
 10108 ;;		line 55 in file "src/lcd.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  wData           1    wreg     unsigned char 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  wData           1    5[COMRAM] unsigned char 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, status,2, status,0, cstack
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10122 ;;      Params:         0       0       0       0       0       0       0       0       0
 10123 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10124 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10125 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10126 ;;Total ram usage:        1 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    4
 10129 ;; This function calls:
 10130 ;;		_LCD_SendNibble
 10131 ;; This function is called by:
 10132 ;;		_LCD_WriteChar
 10133 ;;		_CreateChar
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text35
 10138  0053F6                     __ptext35:
 10139                           	opt callstack 0
 10140  0053F6                     _LCD_WriteByte:
 10141                           	opt callstack 22
 10142                           
 10143                           ;incstack = 0
 10144                           ;LCD_WriteByte@wData stored from wreg
 10145  0053F6  6E06               	movwf	LCD_WriteByte@wData^0,c
 10146  0053F8                     
 10147                           ;src/lcd.c: 55: void LCD_WriteByte(char wData);src/lcd.c: 56: {;src/lcd.c: 57:     LATDb
      +                          its.LATD1 = 1;
 10148  0053F8  828C               	bsf	140,1,c	;volatile
 10149  0053FA                     
 10150                           ;src/lcd.c: 58:     LCD_SendNibble(wData);
 10151  0053FA  5006               	movf	LCD_WriteByte@wData^0,w,c
 10152  0053FC  EC39  F02A         	call	_LCD_SendNibble
 10153  005400                     
 10154                           ;src/lcd.c: 59:     wData <<= 4;
 10155  005400  3A06               	swapf	LCD_WriteByte@wData^0,f,c
 10156  005402  0EF0               	movlw	240
 10157  005404  1606               	andwf	LCD_WriteByte@wData^0,f,c
 10158  005406                     
 10159                           ;src/lcd.c: 60:     LCD_SendNibble(wData);
 10160  005406  5006               	movf	LCD_WriteByte@wData^0,w,c
 10161  005408  EC39  F02A         	call	_LCD_SendNibble
 10162  00540C  0012               	return		;funcret
 10163  00540E                     __end_of_LCD_WriteByte:
 10164                           	opt callstack 0
 10165                           
 10166 ;; *************** function _LCD_SetRowCol *****************
 10167 ;; Defined at:
 10168 ;;		line 128 in file "src/lcd.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;  row             1    wreg     _Bool 
 10171 ;;  col             1    7[COMRAM] unsigned char 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  row             1   12[COMRAM] _Bool 
 10174 ;;  cmd             2   10[COMRAM] int 
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  1    wreg      void 
 10177 ;; Registers used:
 10178 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10184 ;;      Params:         1       0       0       0       0       0       0       0       0
 10185 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10186 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10187 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10188 ;;Total ram usage:        6 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:    5
 10191 ;; This function calls:
 10192 ;;		_LCD_SendCmd
 10193 ;; This function is called by:
 10194 ;;		_LCD_WriteChar
 10195 ;;		_LCD_Write
 10196 ;;		_CreateChar
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           	psect	text36
 10201  004FBC                     __ptext36:
 10202                           	opt callstack 0
 10203  004FBC                     _LCD_SetRowCol:
 10204                           	opt callstack 21
 10205                           
 10206                           ;incstack = 0
 10207                           ;LCD_SetRowCol@row stored from wreg
 10208  004FBC  6E0D               	movwf	LCD_SetRowCol@row^0,c
 10209  004FBE                     
 10210                           ;src/lcd.c: 128: void LCD_SetRowCol(_Bool row, uint8_t col);src/lcd.c: 129: {;src/lcd.c:
      +                           130:     if (col < 16)
 10211  004FBE  0E10               	movlw	16
 10212  004FC0  6008               	cpfslt	LCD_SetRowCol@col^0,c
 10213  004FC2  EFE5  F027         	goto	u8691
 10214  004FC6  EFE7  F027         	goto	u8690
 10215  004FCA                     u8691:
 10216  004FCA  EF02  F028         	goto	l885
 10217  004FCE                     u8690:
 10218  004FCE                     
 10219                           ;src/lcd.c: 131:     {;src/lcd.c: 132:         int cmd = ((row * 64) + col) + 128;
 10220  004FCE  500D               	movf	LCD_SetRowCol@row^0,w,c
 10221  004FD0  0D40               	mullw	64
 10222  004FD2  CFF3 F009          	movff	prodl,??_LCD_SetRowCol
 10223  004FD6  CFF4 F00A          	movff	prodh,??_LCD_SetRowCol+1
 10224  004FDA  5008               	movf	LCD_SetRowCol@col^0,w,c
 10225  004FDC  2609               	addwf	??_LCD_SetRowCol^0,f,c
 10226  004FDE  0E00               	movlw	0
 10227  004FE0  220A               	addwfc	(??_LCD_SetRowCol+1)^0,f,c
 10228  004FE2  0E80               	movlw	128
 10229  004FE4  2409               	addwf	??_LCD_SetRowCol^0,w,c
 10230  004FE6  6E0B               	movwf	LCD_SetRowCol@cmd^0,c
 10231  004FE8  0E00               	movlw	0
 10232  004FEA  200A               	addwfc	(??_LCD_SetRowCol+1)^0,w,c
 10233  004FEC  6E0C               	movwf	(LCD_SetRowCol@cmd+1)^0,c
 10234  004FEE                     
 10235                           ;src/lcd.c: 133:         LCD_SendCmd(cmd, 1);
 10236  004FEE  0E01               	movlw	1
 10237  004FF0  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 10238  004FF2  500B               	movf	LCD_SetRowCol@cmd^0,w,c
 10239  004FF4  ECAE  F029         	call	_LCD_SendCmd
 10240  004FF8                     
 10241                           ;src/lcd.c: 134:         lcd_c = col;
 10242  004FF8  C008  F0DD         	movff	LCD_SetRowCol@col,_lcd_c
 10243  004FFC  0100               	movlb	0	; () banked
 10244  004FFE  6BDE               	clrf	(_lcd_c+1)& (0+255),b
 10245  005000                     
 10246                           ; BSR set to: 0
 10247                           ;src/lcd.c: 135:         lcd_r = row;
 10248  005000  C00D  F059         	movff	LCD_SetRowCol@row,_lcd_r
 10249  005004                     l885:
 10250  005004  0012               	return		;funcret
 10251  005006                     __end_of_LCD_SetRowCol:
 10252                           	opt callstack 0
 10253                           
 10254 ;; *************** function _LCD_CLS *****************
 10255 ;; Defined at:
 10256 ;;		line 76 in file "src/lcd.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;		None
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;		None
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  1    wreg      void 
 10263 ;; Registers used:
 10264 ;;		wreg, status,2, status,0, cstack
 10265 ;; Tracked objects:
 10266 ;;		On entry : 0/0
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10270 ;;      Params:         0       0       0       0       0       0       0       0       0
 10271 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10272 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10273 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10274 ;;Total ram usage:        1 bytes
 10275 ;; Hardware stack levels used:    1
 10276 ;; Hardware stack levels required when called:    5
 10277 ;; This function calls:
 10278 ;;		_LCD_SendCmd
 10279 ;; This function is called by:
 10280 ;;		_dtll_task
 10281 ;;		_SerialLCD_task
 10282 ;;		_testMath_task
 10283 ;;		_KBDSerial_task
 10284 ;; This function uses a non-reentrant model
 10285 ;;
 10286                           
 10287                           	psect	text37
 10288  005332                     __ptext37:
 10289                           	opt callstack 0
 10290  005332                     _LCD_CLS:
 10291                           	opt callstack 24
 10292  005332                     
 10293                           ;src/lcd.c: 78:     LCD_SendCmd(0x01,1);
 10294  005332  0E01               	movlw	1
 10295  005334  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 10296  005336  0E01               	movlw	1
 10297  005338  ECAE  F029         	call	_LCD_SendCmd
 10298  00533C                     
 10299                           ;src/lcd.c: 79:     _delay((unsigned long)((1)*(48000000/4000.0)));
 10300  00533C  0E10               	movlw	16
 10301  00533E  6E08               	movwf	??_LCD_CLS^0,c
 10302  005340  0E94               	movlw	148
 10303  005342                     u10667:
 10304  005342  2EE8               	decfsz	wreg,f,c
 10305  005344  D7FE               	bra	u10667
 10306  005346  2E08               	decfsz	??_LCD_CLS^0,f,c
 10307  005348  D7FC               	bra	u10667
 10308  00534A  D000               	nop2	
 10309  00534C                     
 10310                           ;src/lcd.c: 80:     lcd_c = 0;
 10311  00534C  0E00               	movlw	0
 10312  00534E  0100               	movlb	0	; () banked
 10313  005350  6FDE               	movwf	(_lcd_c+1)& (0+255),b
 10314  005352  0E00               	movlw	0
 10315  005354  6FDD               	movwf	_lcd_c& (0+255),b
 10316  005356                     
 10317                           ; BSR set to: 0
 10318                           ;src/lcd.c: 81:     lcd_r = 0;
 10319  005356  0E00               	movlw	0
 10320  005358  6E59               	movwf	_lcd_r^0,c
 10321  00535A                     
 10322                           ; BSR set to: 0
 10323  00535A  0012               	return		;funcret
 10324  00535C                     __end_of_LCD_CLS:
 10325                           	opt callstack 0
 10326                           
 10327 ;; *************** function _DHT11_MReq *****************
 10328 ;; Defined at:
 10329 ;;		line 28 in file "src/dht11.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;		None
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;  data            5   75[COMRAM] unsigned char [5]
 10334 ;;  j               2   83[COMRAM] int 
 10335 ;;  i               2   81[COMRAM] int 
 10336 ;;  voltLen         2   73[COMRAM] int 
 10337 ;;  error           1   80[COMRAM] _Bool 
 10338 ;;  checksum        1   72[COMRAM] unsigned char 
 10339 ;; Return value:  Size  Location     Type
 10340 ;;                  1    wreg      _Bool 
 10341 ;; Registers used:
 10342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10343 ;; Tracked objects:
 10344 ;;		On entry : 0/0
 10345 ;;		On exit  : 0/0
 10346 ;;		Unchanged: 0/0
 10347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10348 ;;      Params:         0       0       0       0       0       0       0       0       0
 10349 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10350 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10351 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10352 ;;Total ram usage:       15 bytes
 10353 ;; Hardware stack levels used:    1
 10354 ;; Hardware stack levels required when called:    3
 10355 ;; This function calls:
 10356 ;;		_DHT11_Wait4Resp
 10357 ;;		___fladd
 10358 ;;		___fldiv
 10359 ;;		___xxtofl
 10360 ;; This function is called by:
 10361 ;;		_dtll_task
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           	psect	text38
 10366  002E0A                     __ptext38:
 10367                           	opt callstack 0
 10368  002E0A                     _DHT11_MReq:
 10369                           	opt callstack 26
 10370  002E0A                     
 10371                           ;src/dht11.c: 30:  uint8_t checksum;;src/dht11.c: 31:  uint8_t data[5] = {0,0,0,0,0};
 10372  002E0A  EE20  F04C         	lfsr	2,DHT11_MReq@data
 10373  002E0E  0E04               	movlw	4
 10374  002E10                     u10471:
 10375  002E10  6ADE               	clrf	postinc2,c
 10376  002E12  06E8               	decf	wreg,f,c
 10377  002E14  E2FD               	bc	u10471
 10378  002E16                     
 10379                           ;src/dht11.c: 33:  _Bool error = 0;
 10380  002E16  0E00               	movlw	0
 10381  002E18  6E51               	movwf	DHT11_MReq@error^0,c
 10382  002E1A                     
 10383                           ;src/dht11.c: 36:  LATCbits.LATC0 = 0;
 10384  002E1A  908B               	bcf	139,0,c	;volatile
 10385  002E1C                     
 10386                           ;src/dht11.c: 37:  _delay((unsigned long)((20)*(48000000/4000.0)));
 10387  002E1C  0E02               	movlw	2
 10388  002E1E  6E48               	movwf	(??_DHT11_MReq+1)^0,c
 10389  002E20  0E38               	movlw	56
 10390  002E22  6E47               	movwf	??_DHT11_MReq^0,c
 10391  002E24  0EAD               	movlw	173
 10392  002E26                     u10677:
 10393  002E26  2EE8               	decfsz	wreg,f,c
 10394  002E28  D7FE               	bra	u10677
 10395  002E2A  2E47               	decfsz	??_DHT11_MReq^0,f,c
 10396  002E2C  D7FC               	bra	u10677
 10397  002E2E  2E48               	decfsz	(??_DHT11_MReq+1)^0,f,c
 10398  002E30  D7FA               	bra	u10677
 10399  002E32  F000               	nop	
 10400  002E34                     
 10401                           ;src/dht11.c: 40:  LATCbits.LATC0 = 1;
 10402  002E34  808B               	bsf	139,0,c	;volatile
 10403  002E36                     
 10404                           ;src/dht11.c: 41:  TRISCbits.TRISC0 = 1;
 10405  002E36  8094               	bsf	148,0,c	;volatile
 10406  002E38                     
 10407                           ;src/dht11.c: 42:  if(DHT11_Wait4Resp(1, 4) == 0)
 10408  002E38  0E00               	movlw	0
 10409  002E3A  6E05               	movwf	(DHT11_Wait4Resp@timeout_10us+1)^0,c
 10410  002E3C  0E04               	movlw	4
 10411  002E3E  6E04               	movwf	DHT11_Wait4Resp@timeout_10us^0,c
 10412  002E40  0E01               	movlw	1
 10413  002E42  EC98  F026         	call	_DHT11_Wait4Resp
 10414  002E46  5004               	movf	?_DHT11_Wait4Resp^0,w,c
 10415  002E48  1005               	iorwf	(?_DHT11_Wait4Resp+1)^0,w,c
 10416  002E4A  A4D8               	btfss	status,2,c
 10417  002E4C  EF2A  F017         	goto	u10481
 10418  002E50  EF2C  F017         	goto	u10480
 10419  002E54                     u10481:
 10420  002E54  EF2E  F017         	goto	l8948
 10421  002E58                     u10480:
 10422  002E58                     
 10423                           ;src/dht11.c: 43:   error = 1;
 10424  002E58  0E01               	movlw	1
 10425  002E5A  6E51               	movwf	DHT11_MReq@error^0,c
 10426  002E5C                     l8948:
 10427                           
 10428                           ;src/dht11.c: 46:  if(DHT11_Wait4Resp(0, 8) == 0)
 10429  002E5C  0E00               	movlw	0
 10430  002E5E  6E05               	movwf	(DHT11_Wait4Resp@timeout_10us+1)^0,c
 10431  002E60  0E08               	movlw	8
 10432  002E62  6E04               	movwf	DHT11_Wait4Resp@timeout_10us^0,c
 10433  002E64  0E00               	movlw	0
 10434  002E66  EC98  F026         	call	_DHT11_Wait4Resp
 10435  002E6A  5004               	movf	?_DHT11_Wait4Resp^0,w,c
 10436  002E6C  1005               	iorwf	(?_DHT11_Wait4Resp+1)^0,w,c
 10437  002E6E  A4D8               	btfss	status,2,c
 10438  002E70  EF3C  F017         	goto	u10491
 10439  002E74  EF3E  F017         	goto	u10490
 10440  002E78                     u10491:
 10441  002E78  EF40  F017         	goto	l8952
 10442  002E7C                     u10490:
 10443  002E7C                     
 10444                           ;src/dht11.c: 47:   error = 1;
 10445  002E7C  0E01               	movlw	1
 10446  002E7E  6E51               	movwf	DHT11_MReq@error^0,c
 10447  002E80                     l8952:
 10448                           
 10449                           ;src/dht11.c: 50:  DHT11_Wait4Resp(1, 8);
 10450  002E80  0E00               	movlw	0
 10451  002E82  6E05               	movwf	(DHT11_Wait4Resp@timeout_10us+1)^0,c
 10452  002E84  0E08               	movlw	8
 10453  002E86  6E04               	movwf	DHT11_Wait4Resp@timeout_10us^0,c
 10454  002E88  0E01               	movlw	1
 10455  002E8A  EC98  F026         	call	_DHT11_Wait4Resp
 10456  002E8E                     
 10457                           ;src/dht11.c: 53:  for(i = 0; i<5; i++)
 10458  002E8E  0E00               	movlw	0
 10459  002E90  6E53               	movwf	(DHT11_MReq@i+1)^0,c
 10460  002E92  0E00               	movlw	0
 10461  002E94  6E52               	movwf	DHT11_MReq@i^0,c
 10462  002E96                     l8960:
 10463                           
 10464                           ;src/dht11.c: 54:  {;src/dht11.c: 55:   for(j = 7; j>=0; j--)
 10465  002E96  0E00               	movlw	0
 10466  002E98  6E55               	movwf	(DHT11_MReq@j+1)^0,c
 10467  002E9A  0E07               	movlw	7
 10468  002E9C  6E54               	movwf	DHT11_MReq@j^0,c
 10469  002E9E                     l8966:
 10470                           
 10471                           ;src/dht11.c: 56:   {;src/dht11.c: 58:    DHT11_Wait4Resp(0, 5);
 10472  002E9E  0E00               	movlw	0
 10473  002EA0  6E05               	movwf	(DHT11_Wait4Resp@timeout_10us+1)^0,c
 10474  002EA2  0E05               	movlw	5
 10475  002EA4  6E04               	movwf	DHT11_Wait4Resp@timeout_10us^0,c
 10476  002EA6  0E00               	movlw	0
 10477  002EA8  EC98  F026         	call	_DHT11_Wait4Resp
 10478                           
 10479                           ;src/dht11.c: 61:    voltLen = DHT11_Wait4Resp(1, 7);
 10480  002EAC  0E00               	movlw	0
 10481  002EAE  6E05               	movwf	(DHT11_Wait4Resp@timeout_10us+1)^0,c
 10482  002EB0  0E07               	movlw	7
 10483  002EB2  6E04               	movwf	DHT11_Wait4Resp@timeout_10us^0,c
 10484  002EB4  0E01               	movlw	1
 10485  002EB6  EC98  F026         	call	_DHT11_Wait4Resp
 10486  002EBA  C004  F04A         	movff	?_DHT11_Wait4Resp,DHT11_MReq@voltLen
 10487  002EBE  C005  F04B         	movff	?_DHT11_Wait4Resp+1,DHT11_MReq@voltLen+1
 10488  002EC2                     
 10489                           ;src/dht11.c: 64:    if(voltLen > 3)
 10490  002EC2  BE4B               	btfsc	(DHT11_MReq@voltLen+1)^0,7,c
 10491  002EC4  EF6D  F017         	goto	u10501
 10492  002EC8  504B               	movf	(DHT11_MReq@voltLen+1)^0,w,c
 10493  002ECA  E109               	bnz	u10500
 10494  002ECC  0E04               	movlw	4
 10495  002ECE  5C4A               	subwf	DHT11_MReq@voltLen^0,w,c
 10496  002ED0  A0D8               	btfss	status,0,c
 10497  002ED2  EF6D  F017         	goto	u10501
 10498  002ED6  EF6F  F017         	goto	u10500
 10499  002EDA                     u10501:
 10500  002EDA  EF83  F017         	goto	l8972
 10501  002EDE                     u10500:
 10502  002EDE                     
 10503                           ;src/dht11.c: 65:     data[i] |= (1<<j);
 10504  002EDE  C054  F047         	movff	DHT11_MReq@j,??_DHT11_MReq
 10505  002EE2  0E01               	movlw	1
 10506  002EE4  6E48               	movwf	(??_DHT11_MReq+1)^0,c
 10507  002EE6  2A47               	incf	??_DHT11_MReq^0,f,c
 10508  002EE8  EF78  F017         	goto	u10514
 10509  002EEC                     u10515:
 10510  002EEC  90D8               	bcf	status,0,c
 10511  002EEE  3648               	rlcf	(??_DHT11_MReq+1)^0,f,c
 10512  002EF0                     u10514:
 10513  002EF0  2E47               	decfsz	??_DHT11_MReq^0,f,c
 10514  002EF2  EF76  F017         	goto	u10515
 10515  002EF6  0E4C               	movlw	low DHT11_MReq@data
 10516  002EF8  2452               	addwf	DHT11_MReq@i^0,w,c
 10517  002EFA  6ED9               	movwf	fsr2l,c
 10518  002EFC  0E00               	movlw	high DHT11_MReq@data
 10519  002EFE  2053               	addwfc	(DHT11_MReq@i+1)^0,w,c
 10520  002F00  6EDA               	movwf	fsr2h,c
 10521  002F02  5048               	movf	(??_DHT11_MReq+1)^0,w,c
 10522  002F04  12DF               	iorwf	indf2,f,c
 10523  002F06                     l8972:
 10524                           
 10525                           ;src/dht11.c: 67:   }
 10526  002F06  0654               	decf	DHT11_MReq@j^0,f,c
 10527  002F08  A0D8               	btfss	status,0,c
 10528  002F0A  0655               	decf	(DHT11_MReq@j+1)^0,f,c
 10529  002F0C  BE55               	btfsc	(DHT11_MReq@j+1)^0,7,c
 10530  002F0E  EF8D  F017         	goto	u10520
 10531  002F12  EF8B  F017         	goto	u10521
 10532  002F16                     u10521:
 10533  002F16  EF4F  F017         	goto	l8966
 10534  002F1A                     u10520:
 10535  002F1A                     
 10536                           ;src/dht11.c: 68:  }
 10537  002F1A  4A52               	infsnz	DHT11_MReq@i^0,f,c
 10538  002F1C  2A53               	incf	(DHT11_MReq@i+1)^0,f,c
 10539  002F1E  BE53               	btfsc	(DHT11_MReq@i+1)^0,7,c
 10540  002F20  EF9B  F017         	goto	u10531
 10541  002F24  5053               	movf	(DHT11_MReq@i+1)^0,w,c
 10542  002F26  E109               	bnz	u10530
 10543  002F28  0E05               	movlw	5
 10544  002F2A  5C52               	subwf	DHT11_MReq@i^0,w,c
 10545  002F2C  A0D8               	btfss	status,0,c
 10546  002F2E  EF9B  F017         	goto	u10531
 10547  002F32  EF9D  F017         	goto	u10530
 10548  002F36                     u10531:
 10549  002F36  EF4B  F017         	goto	l8960
 10550  002F3A                     u10530:
 10551  002F3A                     
 10552                           ;src/dht11.c: 70:  TRISCbits.TRISC0 = 0;
 10553  002F3A  9094               	bcf	148,0,c	;volatile
 10554                           
 10555                           ;src/dht11.c: 71:  LATCbits.LATC0 = 1;
 10556  002F3C  808B               	bsf	139,0,c	;volatile
 10557  002F3E                     
 10558                           ;src/dht11.c: 73:  checksum = data[0] + data[1] + data[2] + data[3];
 10559  002F3E  504D               	movf	(DHT11_MReq@data+1)^0,w,c
 10560  002F40  244E               	addwf	(DHT11_MReq@data+2)^0,w,c
 10561  002F42  244F               	addwf	(DHT11_MReq@data+3)^0,w,c
 10562  002F44  244C               	addwf	DHT11_MReq@data^0,w,c
 10563  002F46  6E49               	movwf	DHT11_MReq@checksum^0,c
 10564                           
 10565                           ;src/dht11.c: 75:  if((checksum == data[4]) && (error == 0))
 10566  002F48  5049               	movf	DHT11_MReq@checksum^0,w,c
 10567  002F4A  1850               	xorwf	(DHT11_MReq@data+4)^0,w,c
 10568  002F4C  A4D8               	btfss	status,2,c
 10569  002F4E  EFAB  F017         	goto	u10541
 10570  002F52  EFAD  F017         	goto	u10540
 10571  002F56                     u10541:
 10572  002F56  EF2F  F018         	goto	l8986
 10573  002F5A                     u10540:
 10574  002F5A  5051               	movf	DHT11_MReq@error^0,w,c
 10575  002F5C  A4D8               	btfss	status,2,c
 10576  002F5E  EFB3  F017         	goto	u10551
 10577  002F62  EFB5  F017         	goto	u10550
 10578  002F66                     u10551:
 10579  002F66  EF2F  F018         	goto	l8986
 10580  002F6A                     u10550:
 10581  002F6A                     
 10582                           ;src/dht11.c: 76:  {;src/dht11.c: 77:   dht_humidity = (float) data[0] + (float)(data[1]
      +                          /10.0);
 10583  002F6A  504C               	movf	DHT11_MReq@data^0,w,c
 10584  002F6C  6E10               	movwf	___xxtofl@val^0,c
 10585  002F6E  6A11               	clrf	(___xxtofl@val+1)^0,c
 10586  002F70  6A12               	clrf	(___xxtofl@val+2)^0,c
 10587  002F72  6A13               	clrf	(___xxtofl@val+3)^0,c
 10588  002F74  0E00               	movlw	0
 10589  002F76  EC5D  F01C         	call	___xxtofl
 10590  002F7A  C010  F037         	movff	?___xxtofl,___fladd@b
 10591  002F7E  C011  F038         	movff	?___xxtofl+1,___fladd@b+1
 10592  002F82  C012  F039         	movff	?___xxtofl+2,___fladd@b+2
 10593  002F86  C013  F03A         	movff	?___xxtofl+3,___fladd@b+3
 10594  002F8A  0E00               	movlw	0
 10595  002F8C  6E22               	movwf	___fldiv@a^0,c
 10596  002F8E  0E00               	movlw	0
 10597  002F90  6E23               	movwf	(___fldiv@a+1)^0,c
 10598  002F92  0E20               	movlw	32
 10599  002F94  6E24               	movwf	(___fldiv@a+2)^0,c
 10600  002F96  0E41               	movlw	65
 10601  002F98  6E25               	movwf	(___fldiv@a+3)^0,c
 10602  002F9A  504D               	movf	(DHT11_MReq@data+1)^0,w,c
 10603  002F9C  6E10               	movwf	___xxtofl@val^0,c
 10604  002F9E  6A11               	clrf	(___xxtofl@val+1)^0,c
 10605  002FA0  6A12               	clrf	(___xxtofl@val+2)^0,c
 10606  002FA2  6A13               	clrf	(___xxtofl@val+3)^0,c
 10607  002FA4  0E01               	movlw	1
 10608  002FA6  EC5D  F01C         	call	___xxtofl
 10609  002FAA  C010  F01E         	movff	?___xxtofl,___fldiv@b
 10610  002FAE  C011  F01F         	movff	?___xxtofl+1,___fldiv@b+1
 10611  002FB2  C012  F020         	movff	?___xxtofl+2,___fldiv@b+2
 10612  002FB6  C013  F021         	movff	?___xxtofl+3,___fldiv@b+3
 10613  002FBA  EC52  F00F         	call	___fldiv	;wreg free
 10614  002FBE  C01E  F03B         	movff	?___fldiv,___fladd@a
 10615  002FC2  C01F  F03C         	movff	?___fldiv+1,___fladd@a+1
 10616  002FC6  C020  F03D         	movff	?___fldiv+2,___fladd@a+2
 10617  002FCA  C021  F03E         	movff	?___fldiv+3,___fladd@a+3
 10618  002FCE  EC03  F009         	call	___fladd	;wreg free
 10619  002FD2  C037  F0D5         	movff	?___fladd,_dht_humidity
 10620  002FD6  C038  F0D6         	movff	?___fladd+1,_dht_humidity+1
 10621  002FDA  C039  F0D7         	movff	?___fladd+2,_dht_humidity+2
 10622  002FDE  C03A  F0D8         	movff	?___fladd+3,_dht_humidity+3
 10623                           
 10624                           ;src/dht11.c: 78:   dht_temp = (float) data[2] + (float)(data[3]/10.0);
 10625  002FE2  504E               	movf	(DHT11_MReq@data+2)^0,w,c
 10626  002FE4  6E10               	movwf	___xxtofl@val^0,c
 10627  002FE6  6A11               	clrf	(___xxtofl@val+1)^0,c
 10628  002FE8  6A12               	clrf	(___xxtofl@val+2)^0,c
 10629  002FEA  6A13               	clrf	(___xxtofl@val+3)^0,c
 10630  002FEC  0E00               	movlw	0
 10631  002FEE  EC5D  F01C         	call	___xxtofl
 10632  002FF2  C010  F037         	movff	?___xxtofl,___fladd@b
 10633  002FF6  C011  F038         	movff	?___xxtofl+1,___fladd@b+1
 10634  002FFA  C012  F039         	movff	?___xxtofl+2,___fladd@b+2
 10635  002FFE  C013  F03A         	movff	?___xxtofl+3,___fladd@b+3
 10636  003002  0E00               	movlw	0
 10637  003004  6E22               	movwf	___fldiv@a^0,c
 10638  003006  0E00               	movlw	0
 10639  003008  6E23               	movwf	(___fldiv@a+1)^0,c
 10640  00300A  0E20               	movlw	32
 10641  00300C  6E24               	movwf	(___fldiv@a+2)^0,c
 10642  00300E  0E41               	movlw	65
 10643  003010  6E25               	movwf	(___fldiv@a+3)^0,c
 10644  003012  504F               	movf	(DHT11_MReq@data+3)^0,w,c
 10645  003014  6E10               	movwf	___xxtofl@val^0,c
 10646  003016  6A11               	clrf	(___xxtofl@val+1)^0,c
 10647  003018  6A12               	clrf	(___xxtofl@val+2)^0,c
 10648  00301A  6A13               	clrf	(___xxtofl@val+3)^0,c
 10649  00301C  0E01               	movlw	1
 10650  00301E  EC5D  F01C         	call	___xxtofl
 10651  003022  C010  F01E         	movff	?___xxtofl,___fldiv@b
 10652  003026  C011  F01F         	movff	?___xxtofl+1,___fldiv@b+1
 10653  00302A  C012  F020         	movff	?___xxtofl+2,___fldiv@b+2
 10654  00302E  C013  F021         	movff	?___xxtofl+3,___fldiv@b+3
 10655  003032  EC52  F00F         	call	___fldiv	;wreg free
 10656  003036  C01E  F03B         	movff	?___fldiv,___fladd@a
 10657  00303A  C01F  F03C         	movff	?___fldiv+1,___fladd@a+1
 10658  00303E  C020  F03D         	movff	?___fldiv+2,___fladd@a+2
 10659  003042  C021  F03E         	movff	?___fldiv+3,___fladd@a+3
 10660  003046  EC03  F009         	call	___fladd	;wreg free
 10661  00304A  C037  F0D9         	movff	?___fladd,_dht_temp
 10662  00304E  C038  F0DA         	movff	?___fladd+1,_dht_temp+1
 10663  003052  C039  F0DB         	movff	?___fladd+2,_dht_temp+2
 10664  003056  C03A  F0DC         	movff	?___fladd+3,_dht_temp+3
 10665                           
 10666                           ;src/dht11.c: 79:  }
 10667  00305A  EF31  F018         	goto	l940
 10668  00305E                     l8986:
 10669                           
 10670                           ;src/dht11.c: 81:   error = 1;
 10671  00305E  0E01               	movlw	1
 10672  003060  6E51               	movwf	DHT11_MReq@error^0,c
 10673  003062                     l940:
 10674                           
 10675                           ;src/dht11.c: 83:  return error;
 10676  003062  5051               	movf	DHT11_MReq@error^0,w,c
 10677  003064  0012               	return		;funcret
 10678  003066                     __end_of_DHT11_MReq:
 10679                           	opt callstack 0
 10680                           
 10681 ;; *************** function _DHT11_Wait4Resp *****************
 10682 ;; Defined at:
 10683 ;;		line 12 in file "src/dht11.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;  HtoL            1    wreg     _Bool 
 10686 ;;  timeout_10us    2    3[COMRAM] int 
 10687 ;; Auto vars:     Size  Location     Type
 10688 ;;  HtoL            1    5[COMRAM] _Bool 
 10689 ;;  retryTimeout    2    6[COMRAM] int 
 10690 ;; Return value:  Size  Location     Type
 10691 ;;                  2    3[COMRAM] int 
 10692 ;; Registers used:
 10693 ;;		wreg, status,2, status,0
 10694 ;; Tracked objects:
 10695 ;;		On entry : 0/0
 10696 ;;		On exit  : 0/0
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10699 ;;      Params:         2       0       0       0       0       0       0       0       0
 10700 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10701 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10702 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10703 ;;Total ram usage:        5 bytes
 10704 ;; Hardware stack levels used:    1
 10705 ;; Hardware stack levels required when called:    2
 10706 ;; This function calls:
 10707 ;;		Nothing
 10708 ;; This function is called by:
 10709 ;;		_DHT11_MReq
 10710 ;; This function uses a non-reentrant model
 10711 ;;
 10712                           
 10713                           	psect	text39
 10714  004D30                     __ptext39:
 10715                           	opt callstack 0
 10716  004D30                     _DHT11_Wait4Resp:
 10717                           	opt callstack 26
 10718                           
 10719                           ;incstack = 0
 10720                           ;DHT11_Wait4Resp@HtoL stored from wreg
 10721  004D30  6E06               	movwf	DHT11_Wait4Resp@HtoL^0,c
 10722  004D32                     
 10723                           ;src/dht11.c: 12: int DHT11_Wait4Resp(_Bool HtoL, int timeout_10us);src/dht11.c: 13: {;s
      +                          rc/dht11.c: 14:  int retryTimeout = 0;
 10724  004D32  0E00               	movlw	0
 10725  004D34  6E08               	movwf	(DHT11_Wait4Resp@retryTimeout+1)^0,c
 10726  004D36  0E00               	movlw	0
 10727  004D38  6E07               	movwf	DHT11_Wait4Resp@retryTimeout^0,c
 10728                           
 10729                           ;src/dht11.c: 15:  while(PORTCbits.RC0 == HtoL)
 10730  004D3A  EFB6  F026         	goto	l8870
 10731  004D3E                     l8858:
 10732                           
 10733                           ;src/dht11.c: 16:  {;src/dht11.c: 17:   if(retryTimeout == timeout_10us)
 10734  004D3E  5004               	movf	DHT11_Wait4Resp@timeout_10us^0,w,c
 10735  004D40  1807               	xorwf	DHT11_Wait4Resp@retryTimeout^0,w,c
 10736  004D42  E107               	bnz	u10351
 10737  004D44  5005               	movf	(DHT11_Wait4Resp@timeout_10us+1)^0,w,c
 10738  004D46  1808               	xorwf	(DHT11_Wait4Resp@retryTimeout+1)^0,w,c
 10739  004D48  A4D8               	btfss	status,2,c
 10740  004D4A  EFA9  F026         	goto	u10351
 10741  004D4E  EFAB  F026         	goto	u10350
 10742  004D52                     u10351:
 10743  004D52  EFB1  F026         	goto	l8866
 10744  004D56                     u10350:
 10745  004D56                     
 10746                           ;src/dht11.c: 18:    return 0;
 10747  004D56  0E00               	movlw	0
 10748  004D58  6E05               	movwf	(?_DHT11_Wait4Resp+1)^0,c
 10749  004D5A  0E00               	movlw	0
 10750  004D5C  6E04               	movwf	?_DHT11_Wait4Resp^0,c
 10751  004D5E  EFCB  F026         	goto	l925
 10752  004D62                     l8866:
 10753                           
 10754                           ;src/dht11.c: 20:   {;src/dht11.c: 21:    _delay((unsigned long)((10)*(48000000/4000000.
      +                          0)));
 10755  004D62  0E28               	movlw	40
 10756  004D64                     u10687:
 10757  004D64  2EE8               	decfsz	wreg,f,c
 10758  004D66  D7FE               	bra	u10687
 10759  004D68                     
 10760                           ;src/dht11.c: 22:    retryTimeout++;
 10761  004D68  4A07               	infsnz	DHT11_Wait4Resp@retryTimeout^0,f,c
 10762  004D6A  2A08               	incf	(DHT11_Wait4Resp@retryTimeout+1)^0,f,c
 10763  004D6C                     l8870:
 10764                           
 10765                           ;src/dht11.c: 15:  while(PORTCbits.RC0 == HtoL)
 10766  004D6C  B082               	btfsc	130,0,c	;volatile
 10767  004D6E  EFBB  F026         	goto	u10361
 10768  004D72  EFBE  F026         	goto	u10360
 10769  004D76                     u10361:
 10770  004D76  0E01               	movlw	1
 10771  004D78  EFBF  F026         	goto	u10366
 10772  004D7C                     u10360:
 10773  004D7C  0E00               	movlw	0
 10774  004D7E                     u10366:
 10775  004D7E  1806               	xorwf	DHT11_Wait4Resp@HtoL^0,w,c
 10776  004D80  B4D8               	btfsc	status,2,c
 10777  004D82  EFC5  F026         	goto	u10371
 10778  004D86  EFC7  F026         	goto	u10370
 10779  004D8A                     u10371:
 10780  004D8A  EF9F  F026         	goto	l8858
 10781  004D8E                     u10370:
 10782  004D8E                     
 10783                           ;src/dht11.c: 25:  return retryTimeout;
 10784  004D8E  C007  F004         	movff	DHT11_Wait4Resp@retryTimeout,?_DHT11_Wait4Resp
 10785  004D92  C008  F005         	movff	DHT11_Wait4Resp@retryTimeout+1,?_DHT11_Wait4Resp+1
 10786  004D96                     l925:
 10787  004D96  0012               	return		;funcret
 10788  004D98                     __end_of_DHT11_Wait4Resp:
 10789                           	opt callstack 0
 10790                           
 10791 ;; *************** function _DHT11_GetTemp *****************
 10792 ;; Defined at:
 10793 ;;		line 87 in file "src/dht11.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;		None
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;		None
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  4    3[COMRAM] float 
 10800 ;; Registers used:
 10801 ;;		None
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10807 ;;      Params:         4       0       0       0       0       0       0       0       0
 10808 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10809 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10810 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10811 ;;Total ram usage:        4 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; Hardware stack levels required when called:    2
 10814 ;; This function calls:
 10815 ;;		Nothing
 10816 ;; This function is called by:
 10817 ;;		_dtll_task
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           	psect	text40
 10822  00544E                     __ptext40:
 10823                           	opt callstack 0
 10824  00544E                     _DHT11_GetTemp:
 10825                           	opt callstack 27
 10826  00544E                     
 10827                           ;src/dht11.c: 89:  return dht_temp;
 10828  00544E  C0D9  F004         	movff	_dht_temp,?_DHT11_GetTemp
 10829  005452  C0DA  F005         	movff	_dht_temp+1,?_DHT11_GetTemp+1
 10830  005456  C0DB  F006         	movff	_dht_temp+2,?_DHT11_GetTemp+2
 10831  00545A  C0DC  F007         	movff	_dht_temp+3,?_DHT11_GetTemp+3
 10832  00545E  0012               	return		;funcret
 10833  005460                     __end_of_DHT11_GetTemp:
 10834                           	opt callstack 0
 10835                           
 10836 ;; *************** function _DHT11_GetRHum *****************
 10837 ;; Defined at:
 10838 ;;		line 92 in file "src/dht11.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;		None
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;		None
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  4    3[COMRAM] float 
 10845 ;; Registers used:
 10846 ;;		None
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10852 ;;      Params:         4       0       0       0       0       0       0       0       0
 10853 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10855 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10856 ;;Total ram usage:        4 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:    2
 10859 ;; This function calls:
 10860 ;;		Nothing
 10861 ;; This function is called by:
 10862 ;;		_dtll_task
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           	psect	text41
 10867  005460                     __ptext41:
 10868                           	opt callstack 0
 10869  005460                     _DHT11_GetRHum:
 10870                           	opt callstack 27
 10871  005460                     
 10872                           ;src/dht11.c: 94:  return dht_humidity;
 10873  005460  C0D5  F004         	movff	_dht_humidity,?_DHT11_GetRHum
 10874  005464  C0D6  F005         	movff	_dht_humidity+1,?_DHT11_GetRHum+1
 10875  005468  C0D7  F006         	movff	_dht_humidity+2,?_DHT11_GetRHum+2
 10876  00546C  C0D8  F007         	movff	_dht_humidity+3,?_DHT11_GetRHum+3
 10877  005470  0012               	return		;funcret
 10878  005472                     __end_of_DHT11_GetRHum:
 10879                           	opt callstack 0
 10880                           
 10881 ;; *************** function _TIMER0_SetTime *****************
 10882 ;; Defined at:
 10883 ;;		line 74 in file "src/timer.c"
 10884 ;; Parameters:    Size  Location     Type
 10885 ;;  time            4   57[BANK0 ] float 
 10886 ;; Auto vars:     Size  Location     Type
 10887 ;;  CT              4   90[BANK0 ] float 
 10888 ;;  MC              4   86[BANK0 ] float 
 10889 ;;  tmin            4   65[BANK0 ] float 
 10890 ;;  tmax            4   61[BANK0 ] float 
 10891 ;;  e               1   85[BANK0 ] _Bool 
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  1    wreg      _Bool 
 10894 ;; Registers used:
 10895 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10901 ;;      Params:         0       4       0       0       0       0       0       0       0
 10902 ;;      Locals:         0      33       0       0       0       0       0       0       0
 10903 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10904 ;;      Totals:         0      37       0       0       0       0       0       0       0
 10905 ;;Total ram usage:       37 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    6
 10908 ;; This function calls:
 10909 ;;		_TIMER0_End
 10910 ;;		_TIMER0_SetReg
 10911 ;;		___fladd
 10912 ;;		___fldiv
 10913 ;;		___flge
 10914 ;;		___flmul
 10915 ;;		___flsub
 10916 ;;		___fltol
 10917 ;;		___xxtofl
 10918 ;;		_lroundf
 10919 ;; This function is called by:
 10920 ;;		_main
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           	psect	text42
 10925  002B56                     __ptext42:
 10926                           	opt callstack 0
 10927  002B56                     _TIMER0_SetTime:
 10928                           	opt callstack 24
 10929  002B56                     
 10930                           ;src/timer.c: 74: _Bool TIMER0_SetTime(float time);src/timer.c: 75: {;src/timer.c: 76:  
      +                             float CT = 4.0/(48000000/1000.0);
 10931  002B56  0E3E               	movlw	62
 10932  002B58  0100               	movlb	0	; () banked
 10933  002B5A  6FBA               	movwf	TIMER0_SetTime@CT& (0+255),b
 10934  002B5C  0EC3               	movlw	195
 10935  002B5E  6FBB               	movwf	(TIMER0_SetTime@CT+1)& (0+255),b
 10936  002B60  0EAE               	movlw	174
 10937  002B62  6FBC               	movwf	(TIMER0_SetTime@CT+2)& (0+255),b
 10938  002B64  0E38               	movlw	56
 10939  002B66  6FBD               	movwf	(TIMER0_SetTime@CT+3)& (0+255),b
 10940  002B68                     
 10941                           ; BSR set to: 0
 10942                           ;src/timer.c: 77:     float MC = T0CONbits.T08BIT? 255: 65535;
 10943  002B68  BCD5               	btfsc	213,6,c	;volatile
 10944  002B6A  EFB9  F015         	goto	u10571
 10945  002B6E  EFBB  F015         	goto	u10570
 10946  002B72                     u10571:
 10947  002B72  EFC5  F015         	goto	l9114
 10948  002B76                     u10570:
 10949  002B76                     
 10950                           ; BSR set to: 0
 10951  002B76  0EFF               	movlw	255
 10952  002B78  6FB1               	movwf	_TIMER0_SetTime$1449& (0+255),b
 10953  002B7A  0EFF               	movlw	255
 10954  002B7C  6FB2               	movwf	(_TIMER0_SetTime$1449+1)& (0+255),b
 10955  002B7E  0E00               	movlw	0
 10956  002B80  6FB3               	movwf	(_TIMER0_SetTime$1449+2)& (0+255),b
 10957  002B82  0E00               	movlw	0
 10958  002B84  6FB4               	movwf	(_TIMER0_SetTime$1449+3)& (0+255),b
 10959  002B86  EFCD  F015         	goto	l9116
 10960  002B8A                     l9114:
 10961                           
 10962                           ; BSR set to: 0
 10963  002B8A  0EFF               	movlw	255
 10964  002B8C  6FB1               	movwf	_TIMER0_SetTime$1449& (0+255),b
 10965  002B8E  0E00               	movlw	0
 10966  002B90  6FB2               	movwf	(_TIMER0_SetTime$1449+1)& (0+255),b
 10967  002B92  0E00               	movlw	0
 10968  002B94  6FB3               	movwf	(_TIMER0_SetTime$1449+2)& (0+255),b
 10969  002B96  0E00               	movlw	0
 10970  002B98  6FB4               	movwf	(_TIMER0_SetTime$1449+3)& (0+255),b
 10971  002B9A                     l9116:
 10972                           
 10973                           ; BSR set to: 0
 10974  002B9A  C0B1  F010         	movff	_TIMER0_SetTime$1449,___xxtofl@val
 10975  002B9E  C0B2  F011         	movff	_TIMER0_SetTime$1449+1,___xxtofl@val+1
 10976  002BA2  C0B3  F012         	movff	_TIMER0_SetTime$1449+2,___xxtofl@val+2
 10977  002BA6  C0B4  F013         	movff	_TIMER0_SetTime$1449+3,___xxtofl@val+3
 10978  002BAA  0E01               	movlw	1
 10979  002BAC  EC5D  F01C         	call	___xxtofl
 10980  002BB0  C010  F0B6         	movff	?___xxtofl,TIMER0_SetTime@MC
 10981  002BB4  C011  F0B7         	movff	?___xxtofl+1,TIMER0_SetTime@MC+1
 10982  002BB8  C012  F0B8         	movff	?___xxtofl+2,TIMER0_SetTime@MC+2
 10983  002BBC  C013  F0B9         	movff	?___xxtofl+3,TIMER0_SetTime@MC+3
 10984  002BC0                     
 10985                           ;src/timer.c: 79:     float tmax = CT * PS_TMR0 * MC;
 10986  002BC0  C0BA  F04B         	movff	TIMER0_SetTime@CT,___flmul@a
 10987  002BC4  C0BB  F04C         	movff	TIMER0_SetTime@CT+1,___flmul@a+1
 10988  002BC8  C0BC  F04D         	movff	TIMER0_SetTime@CT+2,___flmul@a+2
 10989  002BCC  C0BD  F04E         	movff	TIMER0_SetTime@CT+3,___flmul@a+3
 10990  002BD0  0100               	movlb	0	; () banked
 10991  002BD2  51EA               	movf	_PS_TMR0& (0+255),w,b
 10992  002BD4  6E10               	movwf	___xxtofl@val^0,c
 10993  002BD6  6A11               	clrf	(___xxtofl@val+1)^0,c
 10994  002BD8  6A12               	clrf	(___xxtofl@val+2)^0,c
 10995  002BDA  6A13               	clrf	(___xxtofl@val+3)^0,c
 10996  002BDC  0E01               	movlw	1
 10997  002BDE  EC5D  F01C         	call	___xxtofl
 10998  002BE2  C010  F047         	movff	?___xxtofl,___flmul@b
 10999  002BE6  C011  F048         	movff	?___xxtofl+1,___flmul@b+1
 11000  002BEA  C012  F049         	movff	?___xxtofl+2,___flmul@b+2
 11001  002BEE  C013  F04A         	movff	?___xxtofl+3,___flmul@b+3
 11002  002BF2  EC63  F00B         	call	___flmul	;wreg free
 11003  002BF6  C047  F0A5         	movff	?___flmul,_TIMER0_SetTime$2748
 11004  002BFA  C048  F0A6         	movff	?___flmul+1,_TIMER0_SetTime$2748+1
 11005  002BFE  C049  F0A7         	movff	?___flmul+2,_TIMER0_SetTime$2748+2
 11006  002C02  C04A  F0A8         	movff	?___flmul+3,_TIMER0_SetTime$2748+3
 11007  002C06                     
 11008                           ;src/timer.c: 79:     float tmax = CT * PS_TMR0 * MC;
 11009  002C06  C0A5  F047         	movff	_TIMER0_SetTime$2748,___flmul@b
 11010  002C0A  C0A6  F048         	movff	_TIMER0_SetTime$2748+1,___flmul@b+1
 11011  002C0E  C0A7  F049         	movff	_TIMER0_SetTime$2748+2,___flmul@b+2
 11012  002C12  C0A8  F04A         	movff	_TIMER0_SetTime$2748+3,___flmul@b+3
 11013  002C16  C0B6  F04B         	movff	TIMER0_SetTime@MC,___flmul@a
 11014  002C1A  C0B7  F04C         	movff	TIMER0_SetTime@MC+1,___flmul@a+1
 11015  002C1E  C0B8  F04D         	movff	TIMER0_SetTime@MC+2,___flmul@a+2
 11016  002C22  C0B9  F04E         	movff	TIMER0_SetTime@MC+3,___flmul@a+3
 11017  002C26  EC63  F00B         	call	___flmul	;wreg free
 11018  002C2A  C047  F09D         	movff	?___flmul,TIMER0_SetTime@tmax
 11019  002C2E  C048  F09E         	movff	?___flmul+1,TIMER0_SetTime@tmax+1
 11020  002C32  C049  F09F         	movff	?___flmul+2,TIMER0_SetTime@tmax+2
 11021  002C36  C04A  F0A0         	movff	?___flmul+3,TIMER0_SetTime@tmax+3
 11022  002C3A                     
 11023                           ;src/timer.c: 80:     float tmin = CT * PS_TMR0;
 11024  002C3A  0100               	movlb	0	; () banked
 11025  002C3C  51EA               	movf	_PS_TMR0& (0+255),w,b
 11026  002C3E  6E10               	movwf	___xxtofl@val^0,c
 11027  002C40  6A11               	clrf	(___xxtofl@val+1)^0,c
 11028  002C42  6A12               	clrf	(___xxtofl@val+2)^0,c
 11029  002C44  6A13               	clrf	(___xxtofl@val+3)^0,c
 11030  002C46  0E01               	movlw	1
 11031  002C48  EC5D  F01C         	call	___xxtofl
 11032  002C4C  C010  F047         	movff	?___xxtofl,___flmul@b
 11033  002C50  C011  F048         	movff	?___xxtofl+1,___flmul@b+1
 11034  002C54  C012  F049         	movff	?___xxtofl+2,___flmul@b+2
 11035  002C58  C013  F04A         	movff	?___xxtofl+3,___flmul@b+3
 11036  002C5C  C0BA  F04B         	movff	TIMER0_SetTime@CT,___flmul@a
 11037  002C60  C0BB  F04C         	movff	TIMER0_SetTime@CT+1,___flmul@a+1
 11038  002C64  C0BC  F04D         	movff	TIMER0_SetTime@CT+2,___flmul@a+2
 11039  002C68  C0BD  F04E         	movff	TIMER0_SetTime@CT+3,___flmul@a+3
 11040  002C6C  EC63  F00B         	call	___flmul	;wreg free
 11041  002C70  C047  F0A1         	movff	?___flmul,TIMER0_SetTime@tmin
 11042  002C74  C048  F0A2         	movff	?___flmul+1,TIMER0_SetTime@tmin+1
 11043  002C78  C049  F0A3         	movff	?___flmul+2,TIMER0_SetTime@tmin+2
 11044  002C7C  C04A  F0A4         	movff	?___flmul+3,TIMER0_SetTime@tmin+3
 11045  002C80                     
 11046                           ;src/timer.c: 81:     _Bool e = 0;
 11047  002C80  0E00               	movlw	0
 11048  002C82  0100               	movlb	0	; () banked
 11049  002C84  6FB5               	movwf	TIMER0_SetTime@e& (0+255),b
 11050  002C86                     
 11051                           ; BSR set to: 0
 11052                           ;src/timer.c: 83:     if ((time <= tmax)&& (time >= tmin))
 11053  002C86  C09D  F004         	movff	TIMER0_SetTime@tmax,___flge@ff1
 11054  002C8A  C09E  F005         	movff	TIMER0_SetTime@tmax+1,___flge@ff1+1
 11055  002C8E  C09F  F006         	movff	TIMER0_SetTime@tmax+2,___flge@ff1+2
 11056  002C92  C0A0  F007         	movff	TIMER0_SetTime@tmax+3,___flge@ff1+3
 11057  002C96  C099  F008         	movff	TIMER0_SetTime@time,___flge@ff2
 11058  002C9A  C09A  F009         	movff	TIMER0_SetTime@time+1,___flge@ff2+1
 11059  002C9E  C09B  F00A         	movff	TIMER0_SetTime@time+2,___flge@ff2+2
 11060  002CA2  C09C  F00B         	movff	TIMER0_SetTime@time+3,___flge@ff2+3
 11061  002CA6  EC88  F021         	call	___flge	;wreg free
 11062  002CAA  A0D8               	btfss	status,0,c
 11063  002CAC  EF5A  F016         	goto	u10581
 11064  002CB0  EF5C  F016         	goto	u10580
 11065  002CB4                     u10581:
 11066  002CB4  EFFD  F016         	goto	l9134
 11067  002CB8                     u10580:
 11068  002CB8  C099  F004         	movff	TIMER0_SetTime@time,___flge@ff1
 11069  002CBC  C09A  F005         	movff	TIMER0_SetTime@time+1,___flge@ff1+1
 11070  002CC0  C09B  F006         	movff	TIMER0_SetTime@time+2,___flge@ff1+2
 11071  002CC4  C09C  F007         	movff	TIMER0_SetTime@time+3,___flge@ff1+3
 11072  002CC8  C0A1  F008         	movff	TIMER0_SetTime@tmin,___flge@ff2
 11073  002CCC  C0A2  F009         	movff	TIMER0_SetTime@tmin+1,___flge@ff2+1
 11074  002CD0  C0A3  F00A         	movff	TIMER0_SetTime@tmin+2,___flge@ff2+2
 11075  002CD4  C0A4  F00B         	movff	TIMER0_SetTime@tmin+3,___flge@ff2+3
 11076  002CD8  EC88  F021         	call	___flge	;wreg free
 11077  002CDC  A0D8               	btfss	status,0,c
 11078  002CDE  EF73  F016         	goto	u10591
 11079  002CE2  EF75  F016         	goto	u10590
 11080  002CE6                     u10591:
 11081  002CE6  EFFD  F016         	goto	l9134
 11082  002CEA                     u10590:
 11083  002CEA                     
 11084                           ;src/timer.c: 84:         TIMER0_SetReg(MC - lroundf(time/(CT*(PS_TMR0+1.0))));
 11085  002CEA  C0BA  F04B         	movff	TIMER0_SetTime@CT,___flmul@a
 11086  002CEE  C0BB  F04C         	movff	TIMER0_SetTime@CT+1,___flmul@a+1
 11087  002CF2  C0BC  F04D         	movff	TIMER0_SetTime@CT+2,___flmul@a+2
 11088  002CF6  C0BD  F04E         	movff	TIMER0_SetTime@CT+3,___flmul@a+3
 11089  002CFA  0E00               	movlw	0
 11090  002CFC  6E3B               	movwf	___fladd@a^0,c
 11091  002CFE  0E00               	movlw	0
 11092  002D00  6E3C               	movwf	(___fladd@a+1)^0,c
 11093  002D02  0E80               	movlw	128
 11094  002D04  6E3D               	movwf	(___fladd@a+2)^0,c
 11095  002D06  0E3F               	movlw	63
 11096  002D08  6E3E               	movwf	(___fladd@a+3)^0,c
 11097  002D0A  0100               	movlb	0	; () banked
 11098  002D0C  51EA               	movf	_PS_TMR0& (0+255),w,b
 11099  002D0E  6E10               	movwf	___xxtofl@val^0,c
 11100  002D10  6A11               	clrf	(___xxtofl@val+1)^0,c
 11101  002D12  6A12               	clrf	(___xxtofl@val+2)^0,c
 11102  002D14  6A13               	clrf	(___xxtofl@val+3)^0,c
 11103  002D16  0E01               	movlw	1
 11104  002D18  EC5D  F01C         	call	___xxtofl
 11105  002D1C  C010  F037         	movff	?___xxtofl,___fladd@b
 11106  002D20  C011  F038         	movff	?___xxtofl+1,___fladd@b+1
 11107  002D24  C012  F039         	movff	?___xxtofl+2,___fladd@b+2
 11108  002D28  C013  F03A         	movff	?___xxtofl+3,___fladd@b+3
 11109  002D2C  EC03  F009         	call	___fladd	;wreg free
 11110  002D30  C037  F047         	movff	?___fladd,___flmul@b
 11111  002D34  C038  F048         	movff	?___fladd+1,___flmul@b+1
 11112  002D38  C039  F049         	movff	?___fladd+2,___flmul@b+2
 11113  002D3C  C03A  F04A         	movff	?___fladd+3,___flmul@b+3
 11114  002D40  EC63  F00B         	call	___flmul	;wreg free
 11115  002D44  C047  F022         	movff	?___flmul,___fldiv@a
 11116  002D48  C048  F023         	movff	?___flmul+1,___fldiv@a+1
 11117  002D4C  C049  F024         	movff	?___flmul+2,___fldiv@a+2
 11118  002D50  C04A  F025         	movff	?___flmul+3,___fldiv@a+3
 11119  002D54  C099  F01E         	movff	TIMER0_SetTime@time,___fldiv@b
 11120  002D58  C09A  F01F         	movff	TIMER0_SetTime@time+1,___fldiv@b+1
 11121  002D5C  C09B  F020         	movff	TIMER0_SetTime@time+2,___fldiv@b+2
 11122  002D60  C09C  F021         	movff	TIMER0_SetTime@time+3,___fldiv@b+3
 11123  002D64  EC52  F00F         	call	___fldiv	;wreg free
 11124  002D68  C01E  F0A9         	movff	?___fldiv,_TIMER0_SetTime$2749
 11125  002D6C  C01F  F0AA         	movff	?___fldiv+1,_TIMER0_SetTime$2749+1
 11126  002D70  C020  F0AB         	movff	?___fldiv+2,_TIMER0_SetTime$2749+2
 11127  002D74  C021  F0AC         	movff	?___fldiv+3,_TIMER0_SetTime$2749+3
 11128                           
 11129                           ;src/timer.c: 84:         TIMER0_SetReg(MC - lroundf(time/(CT*(PS_TMR0+1.0))));
 11130  002D78  C0A9  F093         	movff	_TIMER0_SetTime$2749,lroundf@x
 11131  002D7C  C0AA  F094         	movff	_TIMER0_SetTime$2749+1,lroundf@x+1
 11132  002D80  C0AB  F095         	movff	_TIMER0_SetTime$2749+2,lroundf@x+2
 11133  002D84  C0AC  F096         	movff	_TIMER0_SetTime$2749+3,lroundf@x+3
 11134  002D88  EC0F  F029         	call	_lroundf	;wreg free
 11135  002D8C  C093  F010         	movff	?_lroundf,___xxtofl@val
 11136  002D90  C094  F011         	movff	?_lroundf+1,___xxtofl@val+1
 11137  002D94  C095  F012         	movff	?_lroundf+2,___xxtofl@val+2
 11138  002D98  C096  F013         	movff	?_lroundf+3,___xxtofl@val+3
 11139  002D9C  0E01               	movlw	1
 11140  002D9E  EC5D  F01C         	call	___xxtofl
 11141  002DA2  C010  F0AD         	movff	?___xxtofl,_TIMER0_SetTime$2750
 11142  002DA6  C011  F0AE         	movff	?___xxtofl+1,_TIMER0_SetTime$2750+1
 11143  002DAA  C012  F0AF         	movff	?___xxtofl+2,_TIMER0_SetTime$2750+2
 11144  002DAE  C013  F0B0         	movff	?___xxtofl+3,_TIMER0_SetTime$2750+3
 11145  002DB2                     
 11146                           ;src/timer.c: 84:         TIMER0_SetReg(MC - lroundf(time/(CT*(PS_TMR0+1.0))));
 11147  002DB2  C0AD  F071         	movff	_TIMER0_SetTime$2750,___flsub@a
 11148  002DB6  C0AE  F072         	movff	_TIMER0_SetTime$2750+1,___flsub@a+1
 11149  002DBA  C0AF  F073         	movff	_TIMER0_SetTime$2750+2,___flsub@a+2
 11150  002DBE  C0B0  F074         	movff	_TIMER0_SetTime$2750+3,___flsub@a+3
 11151  002DC2  C0B6  F06D         	movff	TIMER0_SetTime@MC,___flsub@b
 11152  002DC6  C0B7  F06E         	movff	TIMER0_SetTime@MC+1,___flsub@b+1
 11153  002DCA  C0B8  F06F         	movff	TIMER0_SetTime@MC+2,___flsub@b+2
 11154  002DCE  C0B9  F070         	movff	TIMER0_SetTime@MC+3,___flsub@b+3
 11155  002DD2  EC28  F028         	call	___flsub	;wreg free
 11156  002DD6  C06D  F08B         	movff	?___flsub,___fltol@f1
 11157  002DDA  C06E  F08C         	movff	?___flsub+1,___fltol@f1+1
 11158  002DDE  C06F  F08D         	movff	?___flsub+2,___fltol@f1+2
 11159  002DE2  C070  F08E         	movff	?___flsub+3,___fltol@f1+3
 11160  002DE6  EC04  F021         	call	___fltol	;wreg free
 11161  002DEA  C08B  F097         	movff	?___fltol,TIMER0_SetReg@val
 11162  002DEE  C08C  F098         	movff	?___fltol+1,TIMER0_SetReg@val+1
 11163  002DF2  EC42  F02A         	call	_TIMER0_SetReg	;wreg free
 11164  002DF6  EF02  F017         	goto	l9138
 11165  002DFA                     l9134:
 11166                           
 11167                           ;src/timer.c: 86:     {;src/timer.c: 87:         TIMER0_End();
 11168  002DFA  EC52  F02A         	call	_TIMER0_End	;wreg free
 11169  002DFE                     
 11170                           ;src/timer.c: 88:         e = 1;
 11171  002DFE  0E01               	movlw	1
 11172  002E00  0100               	movlb	0	; () banked
 11173  002E02  6FB5               	movwf	TIMER0_SetTime@e& (0+255),b
 11174  002E04                     l9138:
 11175                           
 11176                           ;src/timer.c: 90:     return e;
 11177  002E04  0100               	movlb	0	; () banked
 11178  002E06  51B5               	movf	TIMER0_SetTime@e& (0+255),w,b
 11179  002E08                     
 11180                           ; BSR set to: 0
 11181  002E08  0012               	return		;funcret
 11182  002E0A                     __end_of_TIMER0_SetTime:
 11183                           	opt callstack 0
 11184                           
 11185 ;; *************** function _lroundf *****************
 11186 ;; Defined at:
 11187 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lroundf.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  x               4   51[BANK0 ] float 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;		None
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  4   51[BANK0 ] long 
 11194 ;; Registers used:
 11195 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11201 ;;      Params:         0       4       0       0       0       0       0       0       0
 11202 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11203 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11204 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11205 ;;Total ram usage:        4 bytes
 11206 ;; Hardware stack levels used:    1
 11207 ;; Hardware stack levels required when called:    5
 11208 ;; This function calls:
 11209 ;;		___fltol
 11210 ;;		_roundf
 11211 ;; This function is called by:
 11212 ;;		_TIMER0_SetTime
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text43
 11217  00521E                     __ptext43:
 11218                           	opt callstack 0
 11219  00521E                     _lroundf:
 11220                           	opt callstack 24
 11221  00521E  C093  F075         	movff	lroundf@x,roundf@x
 11222  005222  C094  F076         	movff	lroundf@x+1,roundf@x+1
 11223  005226  C095  F077         	movff	lroundf@x+2,roundf@x+2
 11224  00522A  C096  F078         	movff	lroundf@x+3,roundf@x+3
 11225  00522E  EC79  F00D         	call	_roundf	;wreg free
 11226  005232  C075  F08B         	movff	?_roundf,___fltol@f1
 11227  005236  C076  F08C         	movff	?_roundf+1,___fltol@f1+1
 11228  00523A  C077  F08D         	movff	?_roundf+2,___fltol@f1+2
 11229  00523E  C078  F08E         	movff	?_roundf+3,___fltol@f1+3
 11230  005242  EC04  F021         	call	___fltol	;wreg free
 11231  005246  C08B  F093         	movff	?___fltol,?_lroundf
 11232  00524A  C08C  F094         	movff	?___fltol+1,?_lroundf+1
 11233  00524E  C08D  F095         	movff	?___fltol+2,?_lroundf+2
 11234  005252  C08E  F096         	movff	?___fltol+3,?_lroundf+3
 11235  005256  0012               	return		;funcret
 11236  005258                     __end_of_lroundf:
 11237                           	opt callstack 0
 11238                           
 11239 ;; *************** function _roundf *****************
 11240 ;; Defined at:
 11241 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;  x               4   21[BANK0 ] float 
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;  y               4   39[BANK0 ] float 
 11246 ;;  u               4   35[BANK0 ] struct .
 11247 ;;  e               2   29[BANK0 ] int 
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  4   21[BANK0 ] float 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11257 ;;      Params:         0       4       0       0       0       0       0       0       0
 11258 ;;      Locals:         0      18       0       0       0       0       0       0       0
 11259 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11260 ;;      Totals:         4      22       0       0       0       0       0       0       0
 11261 ;;Total ram usage:       26 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:    4
 11264 ;; This function calls:
 11265 ;;		___fladd
 11266 ;;		___flge
 11267 ;;		___flmul
 11268 ;;		___flneg
 11269 ;;		___flsub
 11270 ;; This function is called by:
 11271 ;;		_lroundf
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275                           	psect	text44
 11276  001AF2                     __ptext44:
 11277                           	opt callstack 0
 11278  001AF2                     _roundf:
 11279                           	opt callstack 24
 11280  001AF2  C0D1  F083         	movff	roundf@F525,roundf@u
 11281  001AF6  C0D2  F084         	movff	roundf@F525+1,roundf@u+1
 11282  001AFA  C0D3  F085         	movff	roundf@F525+2,roundf@u+2
 11283  001AFE  C0D4  F086         	movff	roundf@F525+3,roundf@u+3
 11284  001B02  C075  F083         	movff	roundf@x,roundf@u
 11285  001B06  C076  F084         	movff	roundf@x+1,roundf@u+1
 11286  001B0A  C077  F085         	movff	roundf@x+2,roundf@u+2
 11287  001B0E  C078  F086         	movff	roundf@x+3,roundf@u+3
 11288  001B12  C083  F053         	movff	roundf@u,??_roundf
 11289  001B16  C084  F054         	movff	roundf@u+1,??_roundf+1
 11290  001B1A  C085  F055         	movff	roundf@u+2,??_roundf+2
 11291  001B1E  C086  F056         	movff	roundf@u+3,??_roundf+3
 11292  001B22  0E18               	movlw	24
 11293  001B24  EF99  F00D         	goto	u10380
 11294  001B28                     u10385:
 11295  001B28  90D8               	bcf	status,0,c
 11296  001B2A  3256               	rrcf	(??_roundf+3)^0,f,c
 11297  001B2C  3255               	rrcf	(??_roundf+2)^0,f,c
 11298  001B2E  3254               	rrcf	(??_roundf+1)^0,f,c
 11299  001B30  3253               	rrcf	??_roundf^0,f,c
 11300  001B32                     u10380:
 11301  001B32  2EE8               	decfsz	wreg,f,c
 11302  001B34  EF94  F00D         	goto	u10385
 11303  001B38  5053               	movf	??_roundf^0,w,c
 11304  001B3A  0100               	movlb	0	; () banked
 11305  001B3C  6F7D               	movwf	roundf@e& (0+255),b
 11306  001B3E  6B7E               	clrf	(roundf@e+1)& (0+255),b
 11307  001B40  BF7E               	btfsc	(roundf@e+1)& (0+255),7,b
 11308  001B42  EFAC  F00D         	goto	u10391
 11309  001B46  517E               	movf	(roundf@e+1)& (0+255),w,b
 11310  001B48  E109               	bnz	u10390
 11311  001B4A  0E96               	movlw	150
 11312  001B4C  5D7D               	subwf	roundf@e& (0+255),w,b
 11313  001B4E  A0D8               	btfss	status,0,c
 11314  001B50  EFAC  F00D         	goto	u10391
 11315  001B54  EFAE  F00D         	goto	u10390
 11316  001B58                     u10391:
 11317  001B58  EFB8  F00D         	goto	l8878
 11318  001B5C                     u10390:
 11319  001B5C                     
 11320                           ; BSR set to: 0
 11321  001B5C  C075  F075         	movff	roundf@x,?_roundf
 11322  001B60  C076  F076         	movff	roundf@x+1,?_roundf+1
 11323  001B64  C077  F077         	movff	roundf@x+2,?_roundf+2
 11324  001B68  C078  F078         	movff	roundf@x+3,?_roundf+3
 11325  001B6C  EF51  F00F         	goto	l1634
 11326  001B70                     l8878:
 11327                           
 11328                           ; BSR set to: 0
 11329  001B70  C083  F053         	movff	roundf@u,??_roundf
 11330  001B74  C084  F054         	movff	roundf@u+1,??_roundf+1
 11331  001B78  C085  F055         	movff	roundf@u+2,??_roundf+2
 11332  001B7C  C086  F056         	movff	roundf@u+3,??_roundf+3
 11333  001B80  0E20               	movlw	32
 11334  001B82  EFC8  F00D         	goto	u10400
 11335  001B86                     u10405:
 11336  001B86  90D8               	bcf	status,0,c
 11337  001B88  3256               	rrcf	(??_roundf+3)^0,f,c
 11338  001B8A  3255               	rrcf	(??_roundf+2)^0,f,c
 11339  001B8C  3254               	rrcf	(??_roundf+1)^0,f,c
 11340  001B8E  3253               	rrcf	??_roundf^0,f,c
 11341  001B90                     u10400:
 11342  001B90  2EE8               	decfsz	wreg,f,c
 11343  001B92  EFC3  F00D         	goto	u10405
 11344  001B96  5053               	movf	??_roundf^0,w,c
 11345  001B98  1054               	iorwf	(??_roundf+1)^0,w,c
 11346  001B9A  1055               	iorwf	(??_roundf+2)^0,w,c
 11347  001B9C  1056               	iorwf	(??_roundf+3)^0,w,c
 11348  001B9E  B4D8               	btfsc	status,2,c
 11349  001BA0  EFD4  F00D         	goto	u10411
 11350  001BA4  EFD6  F00D         	goto	u10410
 11351  001BA8                     u10411:
 11352  001BA8  EFE8  F00D         	goto	l8882
 11353  001BAC                     u10410:
 11354  001BAC                     
 11355                           ; BSR set to: 0
 11356  001BAC  C075  F004         	movff	roundf@x,___flneg@f1
 11357  001BB0  C076  F005         	movff	roundf@x+1,___flneg@f1+1
 11358  001BB4  C077  F006         	movff	roundf@x+2,___flneg@f1+2
 11359  001BB8  C078  F007         	movff	roundf@x+3,___flneg@f1+3
 11360  001BBC  EC2C  F029         	call	___flneg	;wreg free
 11361  001BC0  C004  F075         	movff	?___flneg,roundf@x
 11362  001BC4  C005  F076         	movff	?___flneg+1,roundf@x+1
 11363  001BC8  C006  F077         	movff	?___flneg+2,roundf@x+2
 11364  001BCC  C007  F078         	movff	?___flneg+3,roundf@x+3
 11365  001BD0                     l8882:
 11366  001BD0  0100               	movlb	0	; () banked
 11367  001BD2  BF7E               	btfsc	(roundf@e+1)& (0+255),7,b
 11368  001BD4  EFF7  F00D         	goto	u10420
 11369  001BD8  517E               	movf	(roundf@e+1)& (0+255),w,b
 11370  001BDA  E107               	bnz	u10421
 11371  001BDC  0E7E               	movlw	126
 11372  001BDE  5D7D               	subwf	roundf@e& (0+255),w,b
 11373  001BE0  B0D8               	btfsc	status,0,c
 11374  001BE2  EFF5  F00D         	goto	u10421
 11375  001BE6  EFF7  F00D         	goto	u10420
 11376  001BEA                     u10421:
 11377  001BEA  EF13  F00E         	goto	l8888
 11378  001BEE                     u10420:
 11379  001BEE                     
 11380                           ; BSR set to: 0
 11381  001BEE  C083  F047         	movff	roundf@u,___flmul@b
 11382  001BF2  C084  F048         	movff	roundf@u+1,___flmul@b+1
 11383  001BF6  C085  F049         	movff	roundf@u+2,___flmul@b+2
 11384  001BFA  C086  F04A         	movff	roundf@u+3,___flmul@b+3
 11385  001BFE  0E00               	movlw	0
 11386  001C00  6E4B               	movwf	___flmul@a^0,c
 11387  001C02  0E00               	movlw	0
 11388  001C04  6E4C               	movwf	(___flmul@a+1)^0,c
 11389  001C06  0E00               	movlw	0
 11390  001C08  6E4D               	movwf	(___flmul@a+2)^0,c
 11391  001C0A  0E00               	movlw	0
 11392  001C0C  6E4E               	movwf	(___flmul@a+3)^0,c
 11393  001C0E  EC63  F00B         	call	___flmul	;wreg free
 11394  001C12  C047  F075         	movff	?___flmul,?_roundf
 11395  001C16  C048  F076         	movff	?___flmul+1,?_roundf+1
 11396  001C1A  C049  F077         	movff	?___flmul+2,?_roundf+2
 11397  001C1E  C04A  F078         	movff	?___flmul+3,?_roundf+3
 11398  001C22  EF51  F00F         	goto	l1634
 11399  001C26                     l8888:
 11400                           
 11401                           ; BSR set to: 0
 11402  001C26  0E00               	movlw	0
 11403  001C28  6E3B               	movwf	___fladd@a^0,c
 11404  001C2A  0E00               	movlw	0
 11405  001C2C  6E3C               	movwf	(___fladd@a+1)^0,c
 11406  001C2E  0E00               	movlw	0
 11407  001C30  6E3D               	movwf	(___fladd@a+2)^0,c
 11408  001C32  0E4B               	movlw	75
 11409  001C34  6E3E               	movwf	(___fladd@a+3)^0,c
 11410  001C36  C075  F037         	movff	roundf@x,___fladd@b
 11411  001C3A  C076  F038         	movff	roundf@x+1,___fladd@b+1
 11412  001C3E  C077  F039         	movff	roundf@x+2,___fladd@b+2
 11413  001C42  C078  F03A         	movff	roundf@x+3,___fladd@b+3
 11414  001C46  EC03  F009         	call	___fladd	;wreg free
 11415  001C4A  C037  F07F         	movff	?___fladd,_roundf$2751
 11416  001C4E  C038  F080         	movff	?___fladd+1,_roundf$2751+1
 11417  001C52  C039  F081         	movff	?___fladd+2,_roundf$2751+2
 11418  001C56  C03A  F082         	movff	?___fladd+3,_roundf$2751+3
 11419  001C5A  0E00               	movlw	0
 11420  001C5C  6E3B               	movwf	___fladd@a^0,c
 11421  001C5E  0E00               	movlw	0
 11422  001C60  6E3C               	movwf	(___fladd@a+1)^0,c
 11423  001C62  0E00               	movlw	0
 11424  001C64  6E3D               	movwf	(___fladd@a+2)^0,c
 11425  001C66  0ECB               	movlw	203
 11426  001C68  6E3E               	movwf	(___fladd@a+3)^0,c
 11427  001C6A  C07F  F037         	movff	_roundf$2751,___fladd@b
 11428  001C6E  C080  F038         	movff	_roundf$2751+1,___fladd@b+1
 11429  001C72  C081  F039         	movff	_roundf$2751+2,___fladd@b+2
 11430  001C76  C082  F03A         	movff	_roundf$2751+3,___fladd@b+3
 11431  001C7A  EC03  F009         	call	___fladd	;wreg free
 11432  001C7E  C037  F079         	movff	?___fladd,_roundf$2752
 11433  001C82  C038  F07A         	movff	?___fladd+1,_roundf$2752+1
 11434  001C86  C039  F07B         	movff	?___fladd+2,_roundf$2752+2
 11435  001C8A  C03A  F07C         	movff	?___fladd+3,_roundf$2752+3
 11436  001C8E  C079  F06D         	movff	_roundf$2752,___flsub@b
 11437  001C92  C07A  F06E         	movff	_roundf$2752+1,___flsub@b+1
 11438  001C96  C07B  F06F         	movff	_roundf$2752+2,___flsub@b+2
 11439  001C9A  C07C  F070         	movff	_roundf$2752+3,___flsub@b+3
 11440  001C9E  C075  F071         	movff	roundf@x,___flsub@a
 11441  001CA2  C076  F072         	movff	roundf@x+1,___flsub@a+1
 11442  001CA6  C077  F073         	movff	roundf@x+2,___flsub@a+2
 11443  001CAA  C078  F074         	movff	roundf@x+3,___flsub@a+3
 11444  001CAE  EC28  F028         	call	___flsub	;wreg free
 11445  001CB2  C06D  F087         	movff	?___flsub,roundf@y
 11446  001CB6  C06E  F088         	movff	?___flsub+1,roundf@y+1
 11447  001CBA  C06F  F089         	movff	?___flsub+2,roundf@y+2
 11448  001CBE  C070  F08A         	movff	?___flsub+3,roundf@y+3
 11449  001CC2  0E00               	movlw	0
 11450  001CC4  6E04               	movwf	___flge@ff1^0,c
 11451  001CC6  0E00               	movlw	0
 11452  001CC8  6E05               	movwf	(___flge@ff1+1)^0,c
 11453  001CCA  0E00               	movlw	0
 11454  001CCC  6E06               	movwf	(___flge@ff1+2)^0,c
 11455  001CCE  0E3F               	movlw	63
 11456  001CD0  6E07               	movwf	(___flge@ff1+3)^0,c
 11457  001CD2  C087  F008         	movff	roundf@y,___flge@ff2
 11458  001CD6  C088  F009         	movff	roundf@y+1,___flge@ff2+1
 11459  001CDA  C089  F00A         	movff	roundf@y+2,___flge@ff2+2
 11460  001CDE  C08A  F00B         	movff	roundf@y+3,___flge@ff2+3
 11461  001CE2  EC88  F021         	call	___flge	;wreg free
 11462  001CE6  B0D8               	btfsc	status,0,c
 11463  001CE8  EF78  F00E         	goto	u10431
 11464  001CEC  EF7A  F00E         	goto	u10430
 11465  001CF0                     u10431:
 11466  001CF0  EFB0  F00E         	goto	l8892
 11467  001CF4                     u10430:
 11468  001CF4  C075  F03B         	movff	roundf@x,___fladd@a
 11469  001CF8  C076  F03C         	movff	roundf@x+1,___fladd@a+1
 11470  001CFC  C077  F03D         	movff	roundf@x+2,___fladd@a+2
 11471  001D00  C078  F03E         	movff	roundf@x+3,___fladd@a+3
 11472  001D04  C087  F037         	movff	roundf@y,___fladd@b
 11473  001D08  C088  F038         	movff	roundf@y+1,___fladd@b+1
 11474  001D0C  C089  F039         	movff	roundf@y+2,___fladd@b+2
 11475  001D10  C08A  F03A         	movff	roundf@y+3,___fladd@b+3
 11476  001D14  EC03  F009         	call	___fladd	;wreg free
 11477  001D18  C037  F07F         	movff	?___fladd,_roundf$2751
 11478  001D1C  C038  F080         	movff	?___fladd+1,_roundf$2751+1
 11479  001D20  C039  F081         	movff	?___fladd+2,_roundf$2751+2
 11480  001D24  C03A  F082         	movff	?___fladd+3,_roundf$2751+3
 11481  001D28  C07F  F037         	movff	_roundf$2751,___fladd@b
 11482  001D2C  C080  F038         	movff	_roundf$2751+1,___fladd@b+1
 11483  001D30  C081  F039         	movff	_roundf$2751+2,___fladd@b+2
 11484  001D34  C082  F03A         	movff	_roundf$2751+3,___fladd@b+3
 11485  001D38  0E00               	movlw	0
 11486  001D3A  6E3B               	movwf	___fladd@a^0,c
 11487  001D3C  0E00               	movlw	0
 11488  001D3E  6E3C               	movwf	(___fladd@a+1)^0,c
 11489  001D40  0E80               	movlw	128
 11490  001D42  6E3D               	movwf	(___fladd@a+2)^0,c
 11491  001D44  0EBF               	movlw	191
 11492  001D46  6E3E               	movwf	(___fladd@a+3)^0,c
 11493  001D48  EC03  F009         	call	___fladd	;wreg free
 11494  001D4C  C037  F087         	movff	?___fladd,roundf@y
 11495  001D50  C038  F088         	movff	?___fladd+1,roundf@y+1
 11496  001D54  C039  F089         	movff	?___fladd+2,roundf@y+2
 11497  001D58  C03A  F08A         	movff	?___fladd+3,roundf@y+3
 11498  001D5C  EF19  F00F         	goto	l8898
 11499  001D60                     l8892:
 11500  001D60  0E00               	movlw	0
 11501  001D62  6E04               	movwf	___flge@ff1^0,c
 11502  001D64  0E00               	movlw	0
 11503  001D66  6E05               	movwf	(___flge@ff1+1)^0,c
 11504  001D68  0E00               	movlw	0
 11505  001D6A  6E06               	movwf	(___flge@ff1+2)^0,c
 11506  001D6C  0EBF               	movlw	191
 11507  001D6E  6E07               	movwf	(___flge@ff1+3)^0,c
 11508  001D70  C087  F008         	movff	roundf@y,___flge@ff2
 11509  001D74  C088  F009         	movff	roundf@y+1,___flge@ff2+1
 11510  001D78  C089  F00A         	movff	roundf@y+2,___flge@ff2+2
 11511  001D7C  C08A  F00B         	movff	roundf@y+3,___flge@ff2+3
 11512  001D80  EC88  F021         	call	___flge	;wreg free
 11513  001D84  A0D8               	btfss	status,0,c
 11514  001D86  EFC7  F00E         	goto	u10441
 11515  001D8A  EFC9  F00E         	goto	u10440
 11516  001D8E                     u10441:
 11517  001D8E  EFFF  F00E         	goto	l8896
 11518  001D92                     u10440:
 11519  001D92  C075  F03B         	movff	roundf@x,___fladd@a
 11520  001D96  C076  F03C         	movff	roundf@x+1,___fladd@a+1
 11521  001D9A  C077  F03D         	movff	roundf@x+2,___fladd@a+2
 11522  001D9E  C078  F03E         	movff	roundf@x+3,___fladd@a+3
 11523  001DA2  C087  F037         	movff	roundf@y,___fladd@b
 11524  001DA6  C088  F038         	movff	roundf@y+1,___fladd@b+1
 11525  001DAA  C089  F039         	movff	roundf@y+2,___fladd@b+2
 11526  001DAE  C08A  F03A         	movff	roundf@y+3,___fladd@b+3
 11527  001DB2  EC03  F009         	call	___fladd	;wreg free
 11528  001DB6  C037  F07F         	movff	?___fladd,_roundf$2751
 11529  001DBA  C038  F080         	movff	?___fladd+1,_roundf$2751+1
 11530  001DBE  C039  F081         	movff	?___fladd+2,_roundf$2751+2
 11531  001DC2  C03A  F082         	movff	?___fladd+3,_roundf$2751+3
 11532  001DC6  C07F  F037         	movff	_roundf$2751,___fladd@b
 11533  001DCA  C080  F038         	movff	_roundf$2751+1,___fladd@b+1
 11534  001DCE  C081  F039         	movff	_roundf$2751+2,___fladd@b+2
 11535  001DD2  C082  F03A         	movff	_roundf$2751+3,___fladd@b+3
 11536  001DD6  0E00               	movlw	0
 11537  001DD8  6E3B               	movwf	___fladd@a^0,c
 11538  001DDA  0E00               	movlw	0
 11539  001DDC  6E3C               	movwf	(___fladd@a+1)^0,c
 11540  001DDE  0E80               	movlw	128
 11541  001DE0  6E3D               	movwf	(___fladd@a+2)^0,c
 11542  001DE2  0E3F               	movlw	63
 11543  001DE4  6E3E               	movwf	(___fladd@a+3)^0,c
 11544  001DE6  EC03  F009         	call	___fladd	;wreg free
 11545  001DEA  C037  F087         	movff	?___fladd,roundf@y
 11546  001DEE  C038  F088         	movff	?___fladd+1,roundf@y+1
 11547  001DF2  C039  F089         	movff	?___fladd+2,roundf@y+2
 11548  001DF6  C03A  F08A         	movff	?___fladd+3,roundf@y+3
 11549  001DFA  EF19  F00F         	goto	l8898
 11550  001DFE                     l8896:
 11551  001DFE  C087  F037         	movff	roundf@y,___fladd@b
 11552  001E02  C088  F038         	movff	roundf@y+1,___fladd@b+1
 11553  001E06  C089  F039         	movff	roundf@y+2,___fladd@b+2
 11554  001E0A  C08A  F03A         	movff	roundf@y+3,___fladd@b+3
 11555  001E0E  C075  F03B         	movff	roundf@x,___fladd@a
 11556  001E12  C076  F03C         	movff	roundf@x+1,___fladd@a+1
 11557  001E16  C077  F03D         	movff	roundf@x+2,___fladd@a+2
 11558  001E1A  C078  F03E         	movff	roundf@x+3,___fladd@a+3
 11559  001E1E  EC03  F009         	call	___fladd	;wreg free
 11560  001E22  C037  F087         	movff	?___fladd,roundf@y
 11561  001E26  C038  F088         	movff	?___fladd+1,roundf@y+1
 11562  001E2A  C039  F089         	movff	?___fladd+2,roundf@y+2
 11563  001E2E  C03A  F08A         	movff	?___fladd+3,roundf@y+3
 11564  001E32                     l8898:
 11565  001E32  C083  F053         	movff	roundf@u,??_roundf
 11566  001E36  C084  F054         	movff	roundf@u+1,??_roundf+1
 11567  001E3A  C085  F055         	movff	roundf@u+2,??_roundf+2
 11568  001E3E  C086  F056         	movff	roundf@u+3,??_roundf+3
 11569  001E42  0E20               	movlw	32
 11570  001E44  EF29  F00F         	goto	u10450
 11571  001E48                     u10455:
 11572  001E48  90D8               	bcf	status,0,c
 11573  001E4A  3256               	rrcf	(??_roundf+3)^0,f,c
 11574  001E4C  3255               	rrcf	(??_roundf+2)^0,f,c
 11575  001E4E  3254               	rrcf	(??_roundf+1)^0,f,c
 11576  001E50  3253               	rrcf	??_roundf^0,f,c
 11577  001E52                     u10450:
 11578  001E52  2EE8               	decfsz	wreg,f,c
 11579  001E54  EF24  F00F         	goto	u10455
 11580  001E58  5053               	movf	??_roundf^0,w,c
 11581  001E5A  1054               	iorwf	(??_roundf+1)^0,w,c
 11582  001E5C  1055               	iorwf	(??_roundf+2)^0,w,c
 11583  001E5E  1056               	iorwf	(??_roundf+3)^0,w,c
 11584  001E60  B4D8               	btfsc	status,2,c
 11585  001E62  EF35  F00F         	goto	u10461
 11586  001E66  EF37  F00F         	goto	u10460
 11587  001E6A                     u10461:
 11588  001E6A  EF49  F00F         	goto	l8902
 11589  001E6E                     u10460:
 11590  001E6E  C087  F004         	movff	roundf@y,___flneg@f1
 11591  001E72  C088  F005         	movff	roundf@y+1,___flneg@f1+1
 11592  001E76  C089  F006         	movff	roundf@y+2,___flneg@f1+2
 11593  001E7A  C08A  F007         	movff	roundf@y+3,___flneg@f1+3
 11594  001E7E  EC2C  F029         	call	___flneg	;wreg free
 11595  001E82  C004  F087         	movff	?___flneg,roundf@y
 11596  001E86  C005  F088         	movff	?___flneg+1,roundf@y+1
 11597  001E8A  C006  F089         	movff	?___flneg+2,roundf@y+2
 11598  001E8E  C007  F08A         	movff	?___flneg+3,roundf@y+3
 11599  001E92                     l8902:
 11600  001E92  C087  F075         	movff	roundf@y,?_roundf
 11601  001E96  C088  F076         	movff	roundf@y+1,?_roundf+1
 11602  001E9A  C089  F077         	movff	roundf@y+2,?_roundf+2
 11603  001E9E  C08A  F078         	movff	roundf@y+3,?_roundf+3
 11604  001EA2                     l1634:
 11605  001EA2  0012               	return		;funcret
 11606  001EA4                     __end_of_roundf:
 11607                           	opt callstack 0
 11608                           
 11609 ;; *************** function ___flsub *****************
 11610 ;; Defined at:
 11611 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;  b               4   13[BANK0 ] float 
 11614 ;;  a               4   17[BANK0 ] float 
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;		None
 11617 ;; Return value:  Size  Location     Type
 11618 ;;                  4   13[BANK0 ] float 
 11619 ;; Registers used:
 11620 ;;		wreg, status,2, status,0, cstack
 11621 ;; Tracked objects:
 11622 ;;		On entry : 0/0
 11623 ;;		On exit  : 0/0
 11624 ;;		Unchanged: 0/0
 11625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11626 ;;      Params:         0       8       0       0       0       0       0       0       0
 11627 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11628 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11629 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11630 ;;Total ram usage:        8 bytes
 11631 ;; Hardware stack levels used:    1
 11632 ;; Hardware stack levels required when called:    3
 11633 ;; This function calls:
 11634 ;;		___fladd
 11635 ;; This function is called by:
 11636 ;;		_TIMER0_SetTime
 11637 ;;		_ftoa_sci
 11638 ;;		_ftoa
 11639 ;;		_roundf
 11640 ;; This function uses a non-reentrant model
 11641 ;;
 11642                           
 11643                           	psect	text45
 11644  005050                     __ptext45:
 11645                           	opt callstack 0
 11646  005050                     ___flsub:
 11647                           	opt callstack 23
 11648  005050  0E00               	movlw	0
 11649  005052  0100               	movlb	0	; () banked
 11650  005054  1B71               	xorwf	___flsub@a& (0+255),f,b
 11651  005056  0E00               	movlw	0
 11652  005058  1B72               	xorwf	(___flsub@a+1)& (0+255),f,b
 11653  00505A  0E00               	movlw	0
 11654  00505C  1B73               	xorwf	(___flsub@a+2)& (0+255),f,b
 11655  00505E  0E80               	movlw	128
 11656  005060  1B74               	xorwf	(___flsub@a+3)& (0+255),f,b
 11657  005062                     
 11658                           ; BSR set to: 0
 11659  005062  C06D  F037         	movff	___flsub@b,___fladd@b
 11660  005066  C06E  F038         	movff	___flsub@b+1,___fladd@b+1
 11661  00506A  C06F  F039         	movff	___flsub@b+2,___fladd@b+2
 11662  00506E  C070  F03A         	movff	___flsub@b+3,___fladd@b+3
 11663  005072  C071  F03B         	movff	___flsub@a,___fladd@a
 11664  005076  C072  F03C         	movff	___flsub@a+1,___fladd@a+1
 11665  00507A  C073  F03D         	movff	___flsub@a+2,___fladd@a+2
 11666  00507E  C074  F03E         	movff	___flsub@a+3,___fladd@a+3
 11667  005082  EC03  F009         	call	___fladd	;wreg free
 11668  005086  C037  F06D         	movff	?___fladd,?___flsub
 11669  00508A  C038  F06E         	movff	?___fladd+1,?___flsub+1
 11670  00508E  C039  F06F         	movff	?___fladd+2,?___flsub+2
 11671  005092  C03A  F070         	movff	?___fladd+3,?___flsub+3
 11672  005096  0012               	return		;funcret
 11673  005098                     __end_of___flsub:
 11674                           	opt callstack 0
 11675                           
 11676 ;; *************** function ___fladd *****************
 11677 ;; Defined at:
 11678 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;  b               4   54[COMRAM] float 
 11681 ;;  a               4   58[COMRAM] float 
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;  grs             1   69[COMRAM] unsigned char 
 11684 ;;  bexp            1   68[COMRAM] unsigned char 
 11685 ;;  aexp            1   67[COMRAM] unsigned char 
 11686 ;;  signs           1   66[COMRAM] unsigned char 
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  4   54[COMRAM] unsigned char 
 11689 ;; Registers used:
 11690 ;;		wreg, status,2, status,0
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11696 ;;      Params:         8       0       0       0       0       0       0       0       0
 11697 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11698 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11699 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11700 ;;Total ram usage:       16 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; Hardware stack levels required when called:    2
 11703 ;; This function calls:
 11704 ;;		Nothing
 11705 ;; This function is called by:
 11706 ;;		_TIMER0_SetTime
 11707 ;;		_DHT11_MReq
 11708 ;;		___flsub
 11709 ;;		_roundf
 11710 ;; This function uses a non-reentrant model
 11711 ;;
 11712                           
 11713                           	psect	text46
 11714  001206                     __ptext46:
 11715                           	opt callstack 0
 11716  001206                     ___fladd:
 11717                           	opt callstack 23
 11718  001206  503A               	movf	(___fladd@b+3)^0,w,c
 11719  001208  0B80               	andlw	128
 11720  00120A  6E43               	movwf	___fladd@signs^0,c
 11721  00120C  503A               	movf	(___fladd@b+3)^0,w,c
 11722  00120E  243A               	addwf	(___fladd@b+3)^0,w,c
 11723  001210  6E45               	movwf	___fladd@bexp^0,c
 11724  001212  AE39               	btfss	(___fladd@b+2)^0,7,c
 11725  001214  EF0E  F009         	goto	u7561
 11726  001218  EF10  F009         	goto	u7560
 11727  00121C                     u7561:
 11728  00121C  EF11  F009         	goto	l7132
 11729  001220                     u7560:
 11730  001220  8045               	bsf	___fladd@bexp^0,0,c
 11731  001222                     l7132:
 11732  001222  5045               	movf	___fladd@bexp^0,w,c
 11733  001224  B4D8               	btfsc	status,2,c
 11734  001226  EF17  F009         	goto	u7571
 11735  00122A  EF19  F009         	goto	u7570
 11736  00122E                     u7571:
 11737  00122E  EF2E  F009         	goto	l7142
 11738  001232                     u7570:
 11739  001232  2845               	incf	___fladd@bexp^0,w,c
 11740  001234  A4D8               	btfss	status,2,c
 11741  001236  EF1F  F009         	goto	u7581
 11742  00123A  EF21  F009         	goto	u7580
 11743  00123E                     u7581:
 11744  00123E  EF29  F009         	goto	l7138
 11745  001242                     u7580:
 11746  001242  0E00               	movlw	0
 11747  001244  6E37               	movwf	___fladd@b^0,c
 11748  001246  0E00               	movlw	0
 11749  001248  6E38               	movwf	(___fladd@b+1)^0,c
 11750  00124A  0E00               	movlw	0
 11751  00124C  6E39               	movwf	(___fladd@b+2)^0,c
 11752  00124E  0E00               	movlw	0
 11753  001250  6E3A               	movwf	(___fladd@b+3)^0,c
 11754  001252                     l7138:
 11755  001252  8E39               	bsf	(___fladd@b+2)^0,7,c
 11756  001254  0E00               	movlw	0
 11757  001256  6E3A               	movwf	(___fladd@b+3)^0,c
 11758  001258  EF36  F009         	goto	l7144
 11759  00125C                     l7142:
 11760  00125C  0E00               	movlw	0
 11761  00125E  6E37               	movwf	___fladd@b^0,c
 11762  001260  0E00               	movlw	0
 11763  001262  6E38               	movwf	(___fladd@b+1)^0,c
 11764  001264  0E00               	movlw	0
 11765  001266  6E39               	movwf	(___fladd@b+2)^0,c
 11766  001268  0E00               	movlw	0
 11767  00126A  6E3A               	movwf	(___fladd@b+3)^0,c
 11768  00126C                     l7144:
 11769  00126C  503E               	movf	(___fladd@a+3)^0,w,c
 11770  00126E  0B80               	andlw	128
 11771  001270  6E44               	movwf	___fladd@aexp^0,c
 11772  001272  5043               	movf	___fladd@signs^0,w,c
 11773  001274  1844               	xorwf	___fladd@aexp^0,w,c
 11774  001276  B4D8               	btfsc	status,2,c
 11775  001278  EF40  F009         	goto	u7591
 11776  00127C  EF42  F009         	goto	u7590
 11777  001280                     u7591:
 11778  001280  EF43  F009         	goto	l7150
 11779  001284                     u7590:
 11780  001284  8C43               	bsf	___fladd@signs^0,6,c
 11781  001286                     l7150:
 11782  001286  503E               	movf	(___fladd@a+3)^0,w,c
 11783  001288  243E               	addwf	(___fladd@a+3)^0,w,c
 11784  00128A  6E44               	movwf	___fladd@aexp^0,c
 11785  00128C  AE3D               	btfss	(___fladd@a+2)^0,7,c
 11786  00128E  EF4B  F009         	goto	u7601
 11787  001292  EF4D  F009         	goto	u7600
 11788  001296                     u7601:
 11789  001296  EF4E  F009         	goto	l7156
 11790  00129A                     u7600:
 11791  00129A  8044               	bsf	___fladd@aexp^0,0,c
 11792  00129C                     l7156:
 11793  00129C  5044               	movf	___fladd@aexp^0,w,c
 11794  00129E  B4D8               	btfsc	status,2,c
 11795  0012A0  EF54  F009         	goto	u7611
 11796  0012A4  EF56  F009         	goto	u7610
 11797  0012A8                     u7611:
 11798  0012A8  EF6B  F009         	goto	l7166
 11799  0012AC                     u7610:
 11800  0012AC  2844               	incf	___fladd@aexp^0,w,c
 11801  0012AE  A4D8               	btfss	status,2,c
 11802  0012B0  EF5C  F009         	goto	u7621
 11803  0012B4  EF5E  F009         	goto	u7620
 11804  0012B8                     u7621:
 11805  0012B8  EF66  F009         	goto	l7162
 11806  0012BC                     u7620:
 11807  0012BC  0E00               	movlw	0
 11808  0012BE  6E3B               	movwf	___fladd@a^0,c
 11809  0012C0  0E00               	movlw	0
 11810  0012C2  6E3C               	movwf	(___fladd@a+1)^0,c
 11811  0012C4  0E00               	movlw	0
 11812  0012C6  6E3D               	movwf	(___fladd@a+2)^0,c
 11813  0012C8  0E00               	movlw	0
 11814  0012CA  6E3E               	movwf	(___fladd@a+3)^0,c
 11815  0012CC                     l7162:
 11816  0012CC  8E3D               	bsf	(___fladd@a+2)^0,7,c
 11817  0012CE  0E00               	movlw	0
 11818  0012D0  6E3E               	movwf	(___fladd@a+3)^0,c
 11819  0012D2  EF73  F009         	goto	l7168
 11820  0012D6                     l7166:
 11821  0012D6  0E00               	movlw	0
 11822  0012D8  6E3B               	movwf	___fladd@a^0,c
 11823  0012DA  0E00               	movlw	0
 11824  0012DC  6E3C               	movwf	(___fladd@a+1)^0,c
 11825  0012DE  0E00               	movlw	0
 11826  0012E0  6E3D               	movwf	(___fladd@a+2)^0,c
 11827  0012E2  0E00               	movlw	0
 11828  0012E4  6E3E               	movwf	(___fladd@a+3)^0,c
 11829  0012E6                     l7168:
 11830  0012E6  5045               	movf	___fladd@bexp^0,w,c
 11831  0012E8  5C44               	subwf	___fladd@aexp^0,w,c
 11832  0012EA  B0D8               	btfsc	status,0,c
 11833  0012EC  EF7A  F009         	goto	u7631
 11834  0012F0  EF7C  F009         	goto	u7630
 11835  0012F4                     u7631:
 11836  0012F4  EFA3  F009         	goto	l7204
 11837  0012F8                     u7630:
 11838  0012F8  AC43               	btfss	___fladd@signs^0,6,c
 11839  0012FA  EF81  F009         	goto	u7641
 11840  0012FE  EF83  F009         	goto	u7640
 11841  001302                     u7641:
 11842  001302  EF85  F009         	goto	l7174
 11843  001306                     u7640:
 11844  001306  0E80               	movlw	128
 11845  001308  1A43               	xorwf	___fladd@signs^0,f,c
 11846  00130A                     l7174:
 11847  00130A  C045  F046         	movff	___fladd@bexp,___fladd@grs
 11848  00130E  C044  F045         	movff	___fladd@aexp,___fladd@bexp
 11849  001312  C046  F044         	movff	___fladd@grs,___fladd@aexp
 11850  001316  C037  F046         	movff	___fladd@b,___fladd@grs
 11851  00131A  C03B  F037         	movff	___fladd@a,___fladd@b
 11852  00131E  C046  F03B         	movff	___fladd@grs,___fladd@a
 11853  001322  C038  F046         	movff	___fladd@b+1,___fladd@grs
 11854  001326  C03C  F038         	movff	___fladd@a+1,___fladd@b+1
 11855  00132A  C046  F03C         	movff	___fladd@grs,___fladd@a+1
 11856  00132E  C039  F046         	movff	___fladd@b+2,___fladd@grs
 11857  001332  C03D  F039         	movff	___fladd@a+2,___fladd@b+2
 11858  001336  C046  F03D         	movff	___fladd@grs,___fladd@a+2
 11859  00133A  C03A  F046         	movff	___fladd@b+3,___fladd@grs
 11860  00133E  C03E  F03A         	movff	___fladd@a+3,___fladd@b+3
 11861  001342  C046  F03E         	movff	___fladd@grs,___fladd@a+3
 11862  001346                     l7204:
 11863  001346  0E00               	movlw	0
 11864  001348  6E46               	movwf	___fladd@grs^0,c
 11865  00134A  5045               	movf	___fladd@bexp^0,w,c
 11866  00134C  C044  F03F         	movff	___fladd@aexp,??___fladd
 11867  001350  6A40               	clrf	(??___fladd+1)^0,c
 11868  001352  5E3F               	subwf	??___fladd^0,f,c
 11869  001354  0E00               	movlw	0
 11870  001356  5A40               	subwfb	(??___fladd+1)^0,f,c
 11871  001358  BE40               	btfsc	(??___fladd+1)^0,7,c
 11872  00135A  EFB8  F009         	goto	u7651
 11873  00135E  5040               	movf	(??___fladd+1)^0,w,c
 11874  001360  E109               	bnz	u7650
 11875  001362  0E1A               	movlw	26
 11876  001364  5C3F               	subwf	??___fladd^0,w,c
 11877  001366  A0D8               	btfss	status,0,c
 11878  001368  EFB8  F009         	goto	u7651
 11879  00136C  EFBA  F009         	goto	u7650
 11880  001370                     u7651:
 11881  001370  EFF1  F009         	goto	l1479
 11882  001374                     u7650:
 11883  001374  5037               	movf	___fladd@b^0,w,c
 11884  001376  1038               	iorwf	(___fladd@b+1)^0,w,c
 11885  001378  1039               	iorwf	(___fladd@b+2)^0,w,c
 11886  00137A  103A               	iorwf	(___fladd@b+3)^0,w,c
 11887  00137C  A4D8               	btfss	status,2,c
 11888  00137E  EFC3  F009         	goto	u7661
 11889  001382  EFC6  F009         	goto	u7660
 11890  001386                     u7661:
 11891  001386  0E01               	movlw	1
 11892  001388  EFC7  F009         	goto	u7670
 11893  00138C                     u7660:
 11894  00138C  0E00               	movlw	0
 11895  00138E                     u7670:
 11896  00138E  6E46               	movwf	___fladd@grs^0,c
 11897  001390  0E00               	movlw	0
 11898  001392  6E37               	movwf	___fladd@b^0,c
 11899  001394  0E00               	movlw	0
 11900  001396  6E38               	movwf	(___fladd@b+1)^0,c
 11901  001398  0E00               	movlw	0
 11902  00139A  6E39               	movwf	(___fladd@b+2)^0,c
 11903  00139C  0E00               	movlw	0
 11904  00139E  6E3A               	movwf	(___fladd@b+3)^0,c
 11905  0013A0  C044  F045         	movff	___fladd@aexp,___fladd@bexp
 11906  0013A4  EFFA  F009         	goto	l1478
 11907  0013A8                     l1480:
 11908  0013A8  A046               	btfss	___fladd@grs^0,0,c
 11909  0013AA  EFD9  F009         	goto	u7681
 11910  0013AE  EFDB  F009         	goto	u7680
 11911  0013B2                     u7681:
 11912  0013B2  EFE1  F009         	goto	l7216
 11913  0013B6                     u7680:
 11914  0013B6  90D8               	bcf	status,0,c
 11915  0013B8  3046               	rrcf	___fladd@grs^0,w,c
 11916  0013BA  0901               	iorlw	1
 11917  0013BC  6E46               	movwf	___fladd@grs^0,c
 11918  0013BE  EFE3  F009         	goto	l7218
 11919  0013C2                     l7216:
 11920  0013C2  90D8               	bcf	status,0,c
 11921  0013C4  3246               	rrcf	___fladd@grs^0,f,c
 11922  0013C6                     l7218:
 11923  0013C6  A037               	btfss	___fladd@b^0,0,c
 11924  0013C8  EFE8  F009         	goto	u7691
 11925  0013CC  EFEA  F009         	goto	u7690
 11926  0013D0                     u7691:
 11927  0013D0  EFEB  F009         	goto	l7222
 11928  0013D4                     u7690:
 11929  0013D4  8E46               	bsf	___fladd@grs^0,7,c
 11930  0013D6                     l7222:
 11931  0013D6  343A               	rlcf	(___fladd@b+3)^0,w,c
 11932  0013D8  323A               	rrcf	(___fladd@b+3)^0,f,c
 11933  0013DA  3239               	rrcf	(___fladd@b+2)^0,f,c
 11934  0013DC  3238               	rrcf	(___fladd@b+1)^0,f,c
 11935  0013DE  3237               	rrcf	___fladd@b^0,f,c
 11936  0013E0  2A45               	incf	___fladd@bexp^0,f,c
 11937  0013E2                     l1479:
 11938  0013E2  5044               	movf	___fladd@aexp^0,w,c
 11939  0013E4  5C45               	subwf	___fladd@bexp^0,w,c
 11940  0013E6  A0D8               	btfss	status,0,c
 11941  0013E8  EFF8  F009         	goto	u7701
 11942  0013EC  EFFA  F009         	goto	u7700
 11943  0013F0                     u7701:
 11944  0013F0  EFD4  F009         	goto	l1480
 11945  0013F4                     u7700:
 11946  0013F4                     l1478:
 11947  0013F4  BC43               	btfsc	___fladd@signs^0,6,c
 11948  0013F6  EFFF  F009         	goto	u7711
 11949  0013FA  EF01  F00A         	goto	u7710
 11950  0013FE                     u7711:
 11951  0013FE  EF41  F00A         	goto	l7250
 11952  001402                     u7710:
 11953  001402  5045               	movf	___fladd@bexp^0,w,c
 11954  001404  A4D8               	btfss	status,2,c
 11955  001406  EF07  F00A         	goto	u7721
 11956  00140A  EF09  F00A         	goto	u7720
 11957  00140E                     u7721:
 11958  00140E  EF13  F00A         	goto	l7232
 11959  001412                     u7720:
 11960  001412  0E00               	movlw	0
 11961  001414  6E37               	movwf	?___fladd^0,c
 11962  001416  0E00               	movlw	0
 11963  001418  6E38               	movwf	(?___fladd+1)^0,c
 11964  00141A  0E00               	movlw	0
 11965  00141C  6E39               	movwf	(?___fladd+2)^0,c
 11966  00141E  0E00               	movlw	0
 11967  001420  6E3A               	movwf	(?___fladd+3)^0,c
 11968  001422  EF62  F00B         	goto	l1487
 11969  001426                     l7232:
 11970  001426  503B               	movf	___fladd@a^0,w,c
 11971  001428  2637               	addwf	___fladd@b^0,f,c
 11972  00142A  503C               	movf	(___fladd@a+1)^0,w,c
 11973  00142C  2238               	addwfc	(___fladd@b+1)^0,f,c
 11974  00142E  503D               	movf	(___fladd@a+2)^0,w,c
 11975  001430  2239               	addwfc	(___fladd@b+2)^0,f,c
 11976  001432  503E               	movf	(___fladd@a+3)^0,w,c
 11977  001434  223A               	addwfc	(___fladd@b+3)^0,f,c
 11978  001436  A03A               	btfss	(___fladd@b+3)^0,0,c
 11979  001438  EF20  F00A         	goto	u7731
 11980  00143C  EF22  F00A         	goto	u7730
 11981  001440                     u7731:
 11982  001440  EFCE  F00A         	goto	l7286
 11983  001444                     u7730:
 11984  001444  A046               	btfss	___fladd@grs^0,0,c
 11985  001446  EF27  F00A         	goto	u7741
 11986  00144A  EF29  F00A         	goto	u7740
 11987  00144E                     u7741:
 11988  00144E  EF2F  F00A         	goto	l7240
 11989  001452                     u7740:
 11990  001452  90D8               	bcf	status,0,c
 11991  001454  3046               	rrcf	___fladd@grs^0,w,c
 11992  001456  0901               	iorlw	1
 11993  001458  6E46               	movwf	___fladd@grs^0,c
 11994  00145A  EF31  F00A         	goto	l7242
 11995  00145E                     l7240:
 11996  00145E  90D8               	bcf	status,0,c
 11997  001460  3246               	rrcf	___fladd@grs^0,f,c
 11998  001462                     l7242:
 11999  001462  A037               	btfss	___fladd@b^0,0,c
 12000  001464  EF36  F00A         	goto	u7751
 12001  001468  EF38  F00A         	goto	u7750
 12002  00146C                     u7751:
 12003  00146C  EF39  F00A         	goto	l7246
 12004  001470                     u7750:
 12005  001470  8E46               	bsf	___fladd@grs^0,7,c
 12006  001472                     l7246:
 12007  001472  343A               	rlcf	(___fladd@b+3)^0,w,c
 12008  001474  323A               	rrcf	(___fladd@b+3)^0,f,c
 12009  001476  3239               	rrcf	(___fladd@b+2)^0,f,c
 12010  001478  3238               	rrcf	(___fladd@b+1)^0,f,c
 12011  00147A  3237               	rrcf	___fladd@b^0,f,c
 12012  00147C  2A45               	incf	___fladd@bexp^0,f,c
 12013  00147E  EFCE  F00A         	goto	l7286
 12014  001482                     l7250:
 12015  001482  503B               	movf	___fladd@a^0,w,c
 12016  001484  5C37               	subwf	___fladd@b^0,w,c
 12017  001486  503C               	movf	(___fladd@a+1)^0,w,c
 12018  001488  5838               	subwfb	(___fladd@b+1)^0,w,c
 12019  00148A  503D               	movf	(___fladd@a+2)^0,w,c
 12020  00148C  5839               	subwfb	(___fladd@b+2)^0,w,c
 12021  00148E  503A               	movf	(___fladd@b+3)^0,w,c
 12022  001490  0A80               	xorlw	128
 12023  001492  6E3F               	movwf	??___fladd^0,c
 12024  001494  503E               	movf	(___fladd@a+3)^0,w,c
 12025  001496  0A80               	xorlw	128
 12026  001498  583F               	subwfb	??___fladd^0,w,c
 12027  00149A  B0D8               	btfsc	status,0,c
 12028  00149C  EF52  F00A         	goto	u7761
 12029  0014A0  EF54  F00A         	goto	u7760
 12030  0014A4                     u7761:
 12031  0014A4  EF7F  F00A         	goto	l7260
 12032  0014A8                     u7760:
 12033  0014A8  5037               	movf	___fladd@b^0,w,c
 12034  0014AA  5C3B               	subwf	___fladd@a^0,w,c
 12035  0014AC  6E3F               	movwf	??___fladd^0,c
 12036  0014AE  5038               	movf	(___fladd@b+1)^0,w,c
 12037  0014B0  583C               	subwfb	(___fladd@a+1)^0,w,c
 12038  0014B2  6E40               	movwf	(??___fladd+1)^0,c
 12039  0014B4  5039               	movf	(___fladd@b+2)^0,w,c
 12040  0014B6  583D               	subwfb	(___fladd@a+2)^0,w,c
 12041  0014B8  6E41               	movwf	(??___fladd+2)^0,c
 12042  0014BA  503A               	movf	(___fladd@b+3)^0,w,c
 12043  0014BC  583E               	subwfb	(___fladd@a+3)^0,w,c
 12044  0014BE  6E42               	movwf	(??___fladd+3)^0,c
 12045  0014C0  0EFF               	movlw	255
 12046  0014C2  243F               	addwf	??___fladd^0,w,c
 12047  0014C4  6E37               	movwf	___fladd@b^0,c
 12048  0014C6  0EFF               	movlw	255
 12049  0014C8  2040               	addwfc	(??___fladd+1)^0,w,c
 12050  0014CA  6E38               	movwf	(___fladd@b+1)^0,c
 12051  0014CC  0EFF               	movlw	255
 12052  0014CE  2041               	addwfc	(??___fladd+2)^0,w,c
 12053  0014D0  6E39               	movwf	(___fladd@b+2)^0,c
 12054  0014D2  0EFF               	movlw	255
 12055  0014D4  2042               	addwfc	(??___fladd+3)^0,w,c
 12056  0014D6  6E3A               	movwf	(___fladd@b+3)^0,c
 12057  0014D8  0E80               	movlw	128
 12058  0014DA  1A43               	xorwf	___fladd@signs^0,f,c
 12059  0014DC  6C46               	negf	___fladd@grs^0,c
 12060  0014DE  5046               	movf	___fladd@grs^0,w,c
 12061  0014E0  A4D8               	btfss	status,2,c
 12062  0014E2  EF75  F00A         	goto	u7771
 12063  0014E6  EF77  F00A         	goto	u7770
 12064  0014EA                     u7771:
 12065  0014EA  EF87  F00A         	goto	l1495
 12066  0014EE                     u7770:
 12067  0014EE  0E01               	movlw	1
 12068  0014F0  2637               	addwf	___fladd@b^0,f,c
 12069  0014F2  0E00               	movlw	0
 12070  0014F4  2238               	addwfc	(___fladd@b+1)^0,f,c
 12071  0014F6  2239               	addwfc	(___fladd@b+2)^0,f,c
 12072  0014F8  223A               	addwfc	(___fladd@b+3)^0,f,c
 12073  0014FA  EF87  F00A         	goto	l1495
 12074  0014FE                     l7260:
 12075  0014FE  503B               	movf	___fladd@a^0,w,c
 12076  001500  5E37               	subwf	___fladd@b^0,f,c
 12077  001502  503C               	movf	(___fladd@a+1)^0,w,c
 12078  001504  5A38               	subwfb	(___fladd@b+1)^0,f,c
 12079  001506  503D               	movf	(___fladd@a+2)^0,w,c
 12080  001508  5A39               	subwfb	(___fladd@b+2)^0,f,c
 12081  00150A  503E               	movf	(___fladd@a+3)^0,w,c
 12082  00150C  5A3A               	subwfb	(___fladd@b+3)^0,f,c
 12083  00150E                     l1495:
 12084  00150E  5037               	movf	___fladd@b^0,w,c
 12085  001510  1038               	iorwf	(___fladd@b+1)^0,w,c
 12086  001512  1039               	iorwf	(___fladd@b+2)^0,w,c
 12087  001514  103A               	iorwf	(___fladd@b+3)^0,w,c
 12088  001516  A4D8               	btfss	status,2,c
 12089  001518  EF90  F00A         	goto	u7781
 12090  00151C  EF92  F00A         	goto	u7780
 12091  001520                     u7781:
 12092  001520  EFC7  F00A         	goto	l7284
 12093  001524                     u7780:
 12094  001524  5046               	movf	___fladd@grs^0,w,c
 12095  001526  A4D8               	btfss	status,2,c
 12096  001528  EF98  F00A         	goto	u7791
 12097  00152C  EF9A  F00A         	goto	u7790
 12098  001530                     u7791:
 12099  001530  EFC7  F00A         	goto	l7284
 12100  001534                     u7790:
 12101  001534  0E00               	movlw	0
 12102  001536  6E37               	movwf	?___fladd^0,c
 12103  001538  0E00               	movlw	0
 12104  00153A  6E38               	movwf	(?___fladd+1)^0,c
 12105  00153C  0E00               	movlw	0
 12106  00153E  6E39               	movwf	(?___fladd+2)^0,c
 12107  001540  0E00               	movlw	0
 12108  001542  6E3A               	movwf	(?___fladd+3)^0,c
 12109  001544  EF62  F00B         	goto	l1487
 12110  001548                     l7268:
 12111  001548  90D8               	bcf	status,0,c
 12112  00154A  3637               	rlcf	___fladd@b^0,f,c
 12113  00154C  3638               	rlcf	(___fladd@b+1)^0,f,c
 12114  00154E  3639               	rlcf	(___fladd@b+2)^0,f,c
 12115  001550  363A               	rlcf	(___fladd@b+3)^0,f,c
 12116  001552  AE46               	btfss	___fladd@grs^0,7,c
 12117  001554  EFAE  F00A         	goto	u7801
 12118  001558  EFB0  F00A         	goto	u7800
 12119  00155C                     u7801:
 12120  00155C  EFB1  F00A         	goto	l7274
 12121  001560                     u7800:
 12122  001560  8037               	bsf	___fladd@b^0,0,c
 12123  001562                     l7274:
 12124  001562  A046               	btfss	___fladd@grs^0,0,c
 12125  001564  EFB6  F00A         	goto	u7811
 12126  001568  EFB8  F00A         	goto	u7810
 12127  00156C                     u7811:
 12128  00156C  EFBC  F00A         	goto	l7278
 12129  001570                     u7810:
 12130  001570  80D8               	bsf	status,0,c
 12131  001572  3646               	rlcf	___fladd@grs^0,f,c
 12132  001574  EFBE  F00A         	goto	l7280
 12133  001578                     l7278:
 12134  001578  90D8               	bcf	status,0,c
 12135  00157A  3646               	rlcf	___fladd@grs^0,f,c
 12136  00157C                     l7280:
 12137  00157C  5045               	movf	___fladd@bexp^0,w,c
 12138  00157E  B4D8               	btfsc	status,2,c
 12139  001580  EFC4  F00A         	goto	u7821
 12140  001584  EFC6  F00A         	goto	u7820
 12141  001588                     u7821:
 12142  001588  EFC7  F00A         	goto	l7284
 12143  00158C                     u7820:
 12144  00158C  0645               	decf	___fladd@bexp^0,f,c
 12145  00158E                     l7284:
 12146  00158E  AE39               	btfss	(___fladd@b+2)^0,7,c
 12147  001590  EFCC  F00A         	goto	u7831
 12148  001594  EFCE  F00A         	goto	u7830
 12149  001598                     u7831:
 12150  001598  EFA4  F00A         	goto	l7268
 12151  00159C                     u7830:
 12152  00159C                     l7286:
 12153  00159C  0E00               	movlw	0
 12154  00159E  6E44               	movwf	___fladd@aexp^0,c
 12155  0015A0  AE46               	btfss	___fladd@grs^0,7,c
 12156  0015A2  EFD5  F00A         	goto	u7841
 12157  0015A6  EFD7  F00A         	goto	u7840
 12158  0015AA                     u7841:
 12159  0015AA  EFEF  F00A         	goto	l1504
 12160  0015AE                     u7840:
 12161  0015AE  C046  F03F         	movff	___fladd@grs,??___fladd
 12162  0015B2  0E7F               	movlw	127
 12163  0015B4  163F               	andwf	??___fladd^0,f,c
 12164  0015B6  B4D8               	btfsc	status,2,c
 12165  0015B8  EFE0  F00A         	goto	u7851
 12166  0015BC  EFE2  F00A         	goto	u7850
 12167  0015C0                     u7851:
 12168  0015C0  EFE6  F00A         	goto	l1505
 12169  0015C4                     u7850:
 12170  0015C4                     l7292:
 12171  0015C4  0E01               	movlw	1
 12172  0015C6  6E44               	movwf	___fladd@aexp^0,c
 12173  0015C8  EFEF  F00A         	goto	l1504
 12174  0015CC                     l1505:
 12175  0015CC  A037               	btfss	___fladd@b^0,0,c
 12176  0015CE  EFEB  F00A         	goto	u7861
 12177  0015D2  EFED  F00A         	goto	u7860
 12178  0015D6                     u7861:
 12179  0015D6  EFEF  F00A         	goto	l1504
 12180  0015DA                     u7860:
 12181  0015DA  EFE2  F00A         	goto	l7292
 12182  0015DE                     l1504:
 12183  0015DE  5044               	movf	___fladd@aexp^0,w,c
 12184  0015E0  B4D8               	btfsc	status,2,c
 12185  0015E2  EFF5  F00A         	goto	u7871
 12186  0015E6  EFF7  F00A         	goto	u7870
 12187  0015EA                     u7871:
 12188  0015EA  EF22  F00B         	goto	l7304
 12189  0015EE                     u7870:
 12190  0015EE  0E01               	movlw	1
 12191  0015F0  2637               	addwf	___fladd@b^0,f,c
 12192  0015F2  0E00               	movlw	0
 12193  0015F4  2238               	addwfc	(___fladd@b+1)^0,f,c
 12194  0015F6  2239               	addwfc	(___fladd@b+2)^0,f,c
 12195  0015F8  223A               	addwfc	(___fladd@b+3)^0,f,c
 12196  0015FA  A03A               	btfss	(___fladd@b+3)^0,0,c
 12197  0015FC  EF02  F00B         	goto	u7881
 12198  001600  EF04  F00B         	goto	u7880
 12199  001604                     u7881:
 12200  001604  EF22  F00B         	goto	l7304
 12201  001608                     u7880:
 12202  001608  C037  F03F         	movff	___fladd@b,??___fladd
 12203  00160C  C038  F040         	movff	___fladd@b+1,??___fladd+1
 12204  001610  C039  F041         	movff	___fladd@b+2,??___fladd+2
 12205  001614  C03A  F042         	movff	___fladd@b+3,??___fladd+3
 12206  001618  3442               	rlcf	(??___fladd+3)^0,w,c
 12207  00161A  3242               	rrcf	(??___fladd+3)^0,f,c
 12208  00161C  3241               	rrcf	(??___fladd+2)^0,f,c
 12209  00161E  3240               	rrcf	(??___fladd+1)^0,f,c
 12210  001620  323F               	rrcf	??___fladd^0,f,c
 12211  001622  C03F  F037         	movff	??___fladd,___fladd@b
 12212  001626  C040  F038         	movff	??___fladd+1,___fladd@b+1
 12213  00162A  C041  F039         	movff	??___fladd+2,___fladd@b+2
 12214  00162E  C042  F03A         	movff	??___fladd+3,___fladd@b+3
 12215  001632  2845               	incf	___fladd@bexp^0,w,c
 12216  001634  B4D8               	btfsc	status,2,c
 12217  001636  EF1F  F00B         	goto	u7891
 12218  00163A  EF21  F00B         	goto	u7890
 12219  00163E                     u7891:
 12220  00163E  EF22  F00B         	goto	l7304
 12221  001642                     u7890:
 12222  001642  2A45               	incf	___fladd@bexp^0,f,c
 12223  001644                     l7304:
 12224  001644  2845               	incf	___fladd@bexp^0,w,c
 12225  001646  B4D8               	btfsc	status,2,c
 12226  001648  EF28  F00B         	goto	u7901
 12227  00164C  EF2A  F00B         	goto	u7900
 12228  001650                     u7901:
 12229  001650  EF32  F00B         	goto	l7308
 12230  001654                     u7900:
 12231  001654  5045               	movf	___fladd@bexp^0,w,c
 12232  001656  A4D8               	btfss	status,2,c
 12233  001658  EF30  F00B         	goto	u7911
 12234  00165C  EF32  F00B         	goto	u7910
 12235  001660                     u7911:
 12236  001660  EF44  F00B         	goto	l7312
 12237  001664                     u7910:
 12238  001664                     l7308:
 12239  001664  0E00               	movlw	0
 12240  001666  6E37               	movwf	___fladd@b^0,c
 12241  001668  0E00               	movlw	0
 12242  00166A  6E38               	movwf	(___fladd@b+1)^0,c
 12243  00166C  0E00               	movlw	0
 12244  00166E  6E39               	movwf	(___fladd@b+2)^0,c
 12245  001670  0E00               	movlw	0
 12246  001672  6E3A               	movwf	(___fladd@b+3)^0,c
 12247  001674  5045               	movf	___fladd@bexp^0,w,c
 12248  001676  A4D8               	btfss	status,2,c
 12249  001678  EF40  F00B         	goto	u7921
 12250  00167C  EF42  F00B         	goto	u7920
 12251  001680                     u7921:
 12252  001680  EF44  F00B         	goto	l7312
 12253  001684                     u7920:
 12254  001684  0E00               	movlw	0
 12255  001686  6E43               	movwf	___fladd@signs^0,c
 12256  001688                     l7312:
 12257  001688  A045               	btfss	___fladd@bexp^0,0,c
 12258  00168A  EF49  F00B         	goto	u7931
 12259  00168E  EF4B  F00B         	goto	u7930
 12260  001692                     u7931:
 12261  001692  EF4E  F00B         	goto	l7316
 12262  001696                     u7930:
 12263  001696  8E39               	bsf	(___fladd@b+2)^0,7,c
 12264  001698  EF4F  F00B         	goto	l7318
 12265  00169C                     l7316:
 12266  00169C  9E39               	bcf	(___fladd@b+2)^0,7,c
 12267  00169E                     l7318:
 12268  00169E  90D8               	bcf	status,0,c
 12269  0016A0  3045               	rrcf	___fladd@bexp^0,w,c
 12270  0016A2  6E3A               	movwf	(___fladd@b+3)^0,c
 12271  0016A4  AE43               	btfss	___fladd@signs^0,7,c
 12272  0016A6  EF57  F00B         	goto	u7941
 12273  0016AA  EF59  F00B         	goto	u7940
 12274  0016AE                     u7941:
 12275  0016AE  EF5A  F00B         	goto	l7324
 12276  0016B2                     u7940:
 12277  0016B2  8E3A               	bsf	(___fladd@b+3)^0,7,c
 12278  0016B4                     l7324:
 12279  0016B4  C037  F037         	movff	___fladd@b,?___fladd
 12280  0016B8  C038  F038         	movff	___fladd@b+1,?___fladd+1
 12281  0016BC  C039  F039         	movff	___fladd@b+2,?___fladd+2
 12282  0016C0  C03A  F03A         	movff	___fladd@b+3,?___fladd+3
 12283  0016C4                     l1487:
 12284  0016C4  0012               	return		;funcret
 12285  0016C6                     __end_of___fladd:
 12286                           	opt callstack 0
 12287                           
 12288 ;; *************** function ___flneg *****************
 12289 ;; Defined at:
 12290 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;  f1              4    3[COMRAM] unsigned char 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;		None
 12295 ;; Return value:  Size  Location     Type
 12296 ;;                  4    3[COMRAM] unsigned char 
 12297 ;; Registers used:
 12298 ;;		wreg, status,2, status,0
 12299 ;; Tracked objects:
 12300 ;;		On entry : 0/0
 12301 ;;		On exit  : 0/0
 12302 ;;		Unchanged: 0/0
 12303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12304 ;;      Params:         4       0       0       0       0       0       0       0       0
 12305 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12306 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12307 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12308 ;;Total ram usage:        4 bytes
 12309 ;; Hardware stack levels used:    1
 12310 ;; Hardware stack levels required when called:    2
 12311 ;; This function calls:
 12312 ;;		Nothing
 12313 ;; This function is called by:
 12314 ;;		_ftoa_sci
 12315 ;;		_ftoa
 12316 ;;		_roundf
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           	psect	text47
 12321  005258                     __ptext47:
 12322                           	opt callstack 0
 12323  005258                     ___flneg:
 12324                           	opt callstack 24
 12325  005258  5004               	movf	___flneg@f1^0,w,c
 12326  00525A  1005               	iorwf	(___flneg@f1+1)^0,w,c
 12327  00525C  1006               	iorwf	(___flneg@f1+2)^0,w,c
 12328  00525E  1007               	iorwf	(___flneg@f1+3)^0,w,c
 12329  005260  B4D8               	btfsc	status,2,c
 12330  005262  EF35  F029         	goto	u8731
 12331  005266  EF37  F029         	goto	u8730
 12332  00526A                     u8731:
 12333  00526A  EF3F  F029         	goto	l7836
 12334  00526E                     u8730:
 12335  00526E  0E00               	movlw	0
 12336  005270  1A04               	xorwf	___flneg@f1^0,f,c
 12337  005272  0E00               	movlw	0
 12338  005274  1A05               	xorwf	(___flneg@f1+1)^0,f,c
 12339  005276  0E00               	movlw	0
 12340  005278  1A06               	xorwf	(___flneg@f1+2)^0,f,c
 12341  00527A  0E80               	movlw	128
 12342  00527C  1A07               	xorwf	(___flneg@f1+3)^0,f,c
 12343  00527E                     l7836:
 12344  00527E  C004  F004         	movff	___flneg@f1,?___flneg
 12345  005282  C005  F005         	movff	___flneg@f1+1,?___flneg+1
 12346  005286  C006  F006         	movff	___flneg@f1+2,?___flneg+2
 12347  00528A  C007  F007         	movff	___flneg@f1+3,?___flneg+3
 12348  00528E  0012               	return		;funcret
 12349  005290                     __end_of___flneg:
 12350                           	opt callstack 0
 12351                           
 12352 ;; *************** function ___flmul *****************
 12353 ;; Defined at:
 12354 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;  b               4   70[COMRAM] unsigned char 
 12357 ;;  a               4   74[COMRAM] unsigned char 
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;  prod            4    7[BANK0 ] struct .
 12360 ;;  grs             4    2[BANK0 ] unsigned long 
 12361 ;;  temp            2   11[BANK0 ] struct .
 12362 ;;  bexp            1    6[BANK0 ] unsigned char 
 12363 ;;  aexp            1    1[BANK0 ] unsigned char 
 12364 ;;  sign            1    0[BANK0 ] unsigned char 
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  4   70[COMRAM] unsigned char 
 12367 ;; Registers used:
 12368 ;;		wreg, status,2, status,0, prodl, prodh
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12374 ;;      Params:         8       0       0       0       0       0       0       0       0
 12375 ;;      Locals:         0      13       0       0       0       0       0       0       0
 12376 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12377 ;;      Totals:        12      13       0       0       0       0       0       0       0
 12378 ;;Total ram usage:       25 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; Hardware stack levels required when called:    2
 12381 ;; This function calls:
 12382 ;;		Nothing
 12383 ;; This function is called by:
 12384 ;;		_TIMER0_SetTime
 12385 ;;		_normalize
 12386 ;;		_ftoa_sci
 12387 ;;		_ftoa
 12388 ;;		_roundf
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text48
 12393  0016C6                     __ptext48:
 12394                           	opt callstack 0
 12395  0016C6                     ___flmul:
 12396                           	opt callstack 23
 12397  0016C6  504A               	movf	(___flmul@b+3)^0,w,c
 12398  0016C8  0B80               	andlw	128
 12399  0016CA  0100               	movlb	0	; () banked
 12400  0016CC  6F60               	movwf	___flmul@sign& (0+255),b
 12401  0016CE  504A               	movf	(___flmul@b+3)^0,w,c
 12402  0016D0  244A               	addwf	(___flmul@b+3)^0,w,c
 12403  0016D2  6F66               	movwf	___flmul@bexp& (0+255),b
 12404  0016D4                     
 12405                           ; BSR set to: 0
 12406  0016D4  AE49               	btfss	(___flmul@b+2)^0,7,c
 12407  0016D6  EF6F  F00B         	goto	u8181
 12408  0016DA  EF71  F00B         	goto	u8180
 12409  0016DE                     u8181:
 12410  0016DE  EF72  F00B         	goto	l7472
 12411  0016E2                     u8180:
 12412  0016E2                     
 12413                           ; BSR set to: 0
 12414  0016E2  8166               	bsf	___flmul@bexp& (0+255),0,b
 12415  0016E4                     l7472:
 12416                           
 12417                           ; BSR set to: 0
 12418  0016E4  5166               	movf	___flmul@bexp& (0+255),w,b
 12419  0016E6  B4D8               	btfsc	status,2,c
 12420  0016E8  EF78  F00B         	goto	u8191
 12421  0016EC  EF7A  F00B         	goto	u8190
 12422  0016F0                     u8191:
 12423  0016F0  EF8D  F00B         	goto	l7480
 12424  0016F4                     u8190:
 12425  0016F4                     
 12426                           ; BSR set to: 0
 12427  0016F4  2966               	incf	___flmul@bexp& (0+255),w,b
 12428  0016F6  A4D8               	btfss	status,2,c
 12429  0016F8  EF80  F00B         	goto	u8201
 12430  0016FC  EF82  F00B         	goto	u8200
 12431  001700                     u8201:
 12432  001700  EF8A  F00B         	goto	l7478
 12433  001704                     u8200:
 12434  001704                     
 12435                           ; BSR set to: 0
 12436  001704  0E00               	movlw	0
 12437  001706  6E47               	movwf	___flmul@b^0,c
 12438  001708  0E00               	movlw	0
 12439  00170A  6E48               	movwf	(___flmul@b+1)^0,c
 12440  00170C  0E00               	movlw	0
 12441  00170E  6E49               	movwf	(___flmul@b+2)^0,c
 12442  001710  0E00               	movlw	0
 12443  001712  6E4A               	movwf	(___flmul@b+3)^0,c
 12444  001714                     l7478:
 12445                           
 12446                           ; BSR set to: 0
 12447  001714  8E49               	bsf	(___flmul@b+2)^0,7,c
 12448  001716  EF95  F00B         	goto	l7482
 12449  00171A                     l7480:
 12450                           
 12451                           ; BSR set to: 0
 12452  00171A  0E00               	movlw	0
 12453  00171C  6E47               	movwf	___flmul@b^0,c
 12454  00171E  0E00               	movlw	0
 12455  001720  6E48               	movwf	(___flmul@b+1)^0,c
 12456  001722  0E00               	movlw	0
 12457  001724  6E49               	movwf	(___flmul@b+2)^0,c
 12458  001726  0E00               	movlw	0
 12459  001728  6E4A               	movwf	(___flmul@b+3)^0,c
 12460  00172A                     l7482:
 12461                           
 12462                           ; BSR set to: 0
 12463  00172A  504E               	movf	(___flmul@a+3)^0,w,c
 12464  00172C  0B80               	andlw	128
 12465  00172E  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12466  001730                     
 12467                           ; BSR set to: 0
 12468  001730  504E               	movf	(___flmul@a+3)^0,w,c
 12469  001732  244E               	addwf	(___flmul@a+3)^0,w,c
 12470  001734  6F61               	movwf	___flmul@aexp& (0+255),b
 12471  001736                     
 12472                           ; BSR set to: 0
 12473  001736  AE4D               	btfss	(___flmul@a+2)^0,7,c
 12474  001738  EFA0  F00B         	goto	u8211
 12475  00173C  EFA2  F00B         	goto	u8210
 12476  001740                     u8211:
 12477  001740  EFA3  F00B         	goto	l7490
 12478  001744                     u8210:
 12479  001744                     
 12480                           ; BSR set to: 0
 12481  001744  8161               	bsf	___flmul@aexp& (0+255),0,b
 12482  001746                     l7490:
 12483                           
 12484                           ; BSR set to: 0
 12485  001746  5161               	movf	___flmul@aexp& (0+255),w,b
 12486  001748  B4D8               	btfsc	status,2,c
 12487  00174A  EFA9  F00B         	goto	u8221
 12488  00174E  EFAB  F00B         	goto	u8220
 12489  001752                     u8221:
 12490  001752  EFBE  F00B         	goto	l7498
 12491  001756                     u8220:
 12492  001756                     
 12493                           ; BSR set to: 0
 12494  001756  2961               	incf	___flmul@aexp& (0+255),w,b
 12495  001758  A4D8               	btfss	status,2,c
 12496  00175A  EFB1  F00B         	goto	u8231
 12497  00175E  EFB3  F00B         	goto	u8230
 12498  001762                     u8231:
 12499  001762  EFBB  F00B         	goto	l7496
 12500  001766                     u8230:
 12501  001766                     
 12502                           ; BSR set to: 0
 12503  001766  0E00               	movlw	0
 12504  001768  6E4B               	movwf	___flmul@a^0,c
 12505  00176A  0E00               	movlw	0
 12506  00176C  6E4C               	movwf	(___flmul@a+1)^0,c
 12507  00176E  0E00               	movlw	0
 12508  001770  6E4D               	movwf	(___flmul@a+2)^0,c
 12509  001772  0E00               	movlw	0
 12510  001774  6E4E               	movwf	(___flmul@a+3)^0,c
 12511  001776                     l7496:
 12512                           
 12513                           ; BSR set to: 0
 12514  001776  8E4D               	bsf	(___flmul@a+2)^0,7,c
 12515  001778  EFC6  F00B         	goto	l1564
 12516  00177C                     l7498:
 12517                           
 12518                           ; BSR set to: 0
 12519  00177C  0E00               	movlw	0
 12520  00177E  6E4B               	movwf	___flmul@a^0,c
 12521  001780  0E00               	movlw	0
 12522  001782  6E4C               	movwf	(___flmul@a+1)^0,c
 12523  001784  0E00               	movlw	0
 12524  001786  6E4D               	movwf	(___flmul@a+2)^0,c
 12525  001788  0E00               	movlw	0
 12526  00178A  6E4E               	movwf	(___flmul@a+3)^0,c
 12527  00178C                     l1564:
 12528                           
 12529                           ; BSR set to: 0
 12530  00178C  5161               	movf	___flmul@aexp& (0+255),w,b
 12531  00178E  B4D8               	btfsc	status,2,c
 12532  001790  EFCC  F00B         	goto	u8241
 12533  001794  EFCE  F00B         	goto	u8240
 12534  001798                     u8241:
 12535  001798  EFD6  F00B         	goto	l7502
 12536  00179C                     u8240:
 12537  00179C                     
 12538                           ; BSR set to: 0
 12539  00179C  5166               	movf	___flmul@bexp& (0+255),w,b
 12540  00179E  A4D8               	btfss	status,2,c
 12541  0017A0  EFD4  F00B         	goto	u8251
 12542  0017A4  EFD6  F00B         	goto	u8250
 12543  0017A8                     u8251:
 12544  0017A8  EFE0  F00B         	goto	l7506
 12545  0017AC                     u8250:
 12546  0017AC                     l7502:
 12547                           
 12548                           ; BSR set to: 0
 12549  0017AC  0E00               	movlw	0
 12550  0017AE  6E47               	movwf	?___flmul^0,c
 12551  0017B0  0E00               	movlw	0
 12552  0017B2  6E48               	movwf	(?___flmul+1)^0,c
 12553  0017B4  0E00               	movlw	0
 12554  0017B6  6E49               	movwf	(?___flmul+2)^0,c
 12555  0017B8  0E00               	movlw	0
 12556  0017BA  6E4A               	movwf	(?___flmul+3)^0,c
 12557  0017BC  EF78  F00D         	goto	l1568
 12558  0017C0                     l7506:
 12559                           
 12560                           ; BSR set to: 0
 12561  0017C0  504D               	movf	(___flmul@a+2)^0,w,c
 12562  0017C2  0247               	mulwf	___flmul@b^0,c
 12563  0017C4  CFF3 F06B          	movff	prodl,___flmul@temp
 12564  0017C8  CFF4 F06C          	movff	prodh,___flmul@temp+1
 12565  0017CC                     
 12566                           ; BSR set to: 0
 12567  0017CC  516B               	movf	___flmul@temp& (0+255),w,b
 12568  0017CE  6F62               	movwf	___flmul@grs& (0+255),b
 12569  0017D0  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12570  0017D2  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12571  0017D4  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12572  0017D6                     
 12573                           ; BSR set to: 0
 12574  0017D6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12575  0017D8  6F67               	movwf	___flmul@prod& (0+255),b
 12576  0017DA  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12577  0017DC  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12578  0017DE  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12579  0017E0  504C               	movf	(___flmul@a+1)^0,w,c
 12580  0017E2  0248               	mulwf	(___flmul@b+1)^0,c
 12581  0017E4  CFF3 F06B          	movff	prodl,___flmul@temp
 12582  0017E8  CFF4 F06C          	movff	prodh,___flmul@temp+1
 12583  0017EC                     
 12584                           ; BSR set to: 0
 12585  0017EC  516B               	movf	___flmul@temp& (0+255),w,b
 12586  0017EE  2762               	addwf	___flmul@grs& (0+255),f,b
 12587  0017F0  0E00               	movlw	0
 12588  0017F2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12589  0017F4  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12590  0017F6  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12591  0017F8                     
 12592                           ; BSR set to: 0
 12593  0017F8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12594  0017FA  2767               	addwf	___flmul@prod& (0+255),f,b
 12595  0017FC  0E00               	movlw	0
 12596  0017FE  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12597  001800  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12598  001802  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12599  001804  504B               	movf	___flmul@a^0,w,c
 12600  001806  0249               	mulwf	(___flmul@b+2)^0,c
 12601  001808  CFF3 F06B          	movff	prodl,___flmul@temp
 12602  00180C  CFF4 F06C          	movff	prodh,___flmul@temp+1
 12603  001810                     
 12604                           ; BSR set to: 0
 12605  001810  516B               	movf	___flmul@temp& (0+255),w,b
 12606  001812  2762               	addwf	___flmul@grs& (0+255),f,b
 12607  001814  0E00               	movlw	0
 12608  001816  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12609  001818  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12610  00181A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12611  00181C                     
 12612                           ; BSR set to: 0
 12613  00181C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12614  00181E  2767               	addwf	___flmul@prod& (0+255),f,b
 12615  001820  0E00               	movlw	0
 12616  001822  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12617  001824  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12618  001826  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12619  001828                     
 12620                           ; BSR set to: 0
 12621  001828  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12622  00182C  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12623  001830  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12624  001834  6B62               	clrf	___flmul@grs& (0+255),b
 12625  001836                     
 12626                           ; BSR set to: 0
 12627  001836  504B               	movf	___flmul@a^0,w,c
 12628  001838  0248               	mulwf	(___flmul@b+1)^0,c
 12629  00183A  CFF3 F06B          	movff	prodl,___flmul@temp
 12630  00183E  CFF4 F06C          	movff	prodh,___flmul@temp+1
 12631  001842                     
 12632                           ; BSR set to: 0
 12633  001842  516B               	movf	___flmul@temp& (0+255),w,b
 12634  001844  2762               	addwf	___flmul@grs& (0+255),f,b
 12635  001846  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12636  001848  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12637  00184A  0E00               	movlw	0
 12638  00184C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12639  00184E  0E00               	movlw	0
 12640  001850  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12641  001852                     
 12642                           ; BSR set to: 0
 12643  001852  504C               	movf	(___flmul@a+1)^0,w,c
 12644  001854  0247               	mulwf	___flmul@b^0,c
 12645  001856  CFF3 F06B          	movff	prodl,___flmul@temp
 12646  00185A  CFF4 F06C          	movff	prodh,___flmul@temp+1
 12647  00185E                     
 12648                           ; BSR set to: 0
 12649  00185E  516B               	movf	___flmul@temp& (0+255),w,b
 12650  001860  2762               	addwf	___flmul@grs& (0+255),f,b
 12651  001862  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12652  001864  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12653  001866  0E00               	movlw	0
 12654  001868  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12655  00186A  0E00               	movlw	0
 12656  00186C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12657  00186E                     
 12658                           ; BSR set to: 0
 12659  00186E  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12660  001872  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12661  001876  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12662  00187A  6B62               	clrf	___flmul@grs& (0+255),b
 12663  00187C  504B               	movf	___flmul@a^0,w,c
 12664  00187E  0247               	mulwf	___flmul@b^0,c
 12665  001880  CFF3 F06B          	movff	prodl,___flmul@temp
 12666  001884  CFF4 F06C          	movff	prodh,___flmul@temp+1
 12667  001888                     
 12668                           ; BSR set to: 0
 12669  001888  516B               	movf	___flmul@temp& (0+255),w,b
 12670  00188A  2762               	addwf	___flmul@grs& (0+255),f,b
 12671  00188C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12672  00188E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12673  001890  0E00               	movlw	0
 12674  001892  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12675  001894  0E00               	movlw	0
 12676  001896  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12677  001898                     
 12678                           ; BSR set to: 0
 12679  001898  504D               	movf	(___flmul@a+2)^0,w,c
 12680  00189A  0248               	mulwf	(___flmul@b+1)^0,c
 12681  00189C  CFF3 F06B          	movff	prodl,___flmul@temp
 12682  0018A0  CFF4 F06C          	movff	prodh,___flmul@temp+1
 12683  0018A4  516B               	movf	___flmul@temp& (0+255),w,b
 12684  0018A6  2767               	addwf	___flmul@prod& (0+255),f,b
 12685  0018A8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12686  0018AA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12687  0018AC  0E00               	movlw	0
 12688  0018AE  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12689  0018B0  0E00               	movlw	0
 12690  0018B2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12691  0018B4                     
 12692                           ; BSR set to: 0
 12693  0018B4  504C               	movf	(___flmul@a+1)^0,w,c
 12694  0018B6  0249               	mulwf	(___flmul@b+2)^0,c
 12695  0018B8  CFF3 F06B          	movff	prodl,___flmul@temp
 12696  0018BC  CFF4 F06C          	movff	prodh,___flmul@temp+1
 12697  0018C0                     
 12698                           ; BSR set to: 0
 12699  0018C0  516B               	movf	___flmul@temp& (0+255),w,b
 12700  0018C2  2767               	addwf	___flmul@prod& (0+255),f,b
 12701  0018C4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12702  0018C6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12703  0018C8  0E00               	movlw	0
 12704  0018CA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12705  0018CC  0E00               	movlw	0
 12706  0018CE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12707  0018D0  504D               	movf	(___flmul@a+2)^0,w,c
 12708  0018D2  0249               	mulwf	(___flmul@b+2)^0,c
 12709  0018D4  CFF3 F06B          	movff	prodl,___flmul@temp
 12710  0018D8  CFF4 F06C          	movff	prodh,___flmul@temp+1
 12711  0018DC                     
 12712                           ; BSR set to: 0
 12713  0018DC  516B               	movf	___flmul@temp& (0+255),w,b
 12714  0018DE  6E4F               	movwf	??___flmul^0,c
 12715  0018E0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12716  0018E2  6E50               	movwf	(??___flmul+1)^0,c
 12717  0018E4  6A51               	clrf	(??___flmul+2)^0,c
 12718  0018E6  6A52               	clrf	(??___flmul+3)^0,c
 12719  0018E8  C051  F052         	movff	??___flmul+2,??___flmul+3
 12720  0018EC  C050  F051         	movff	??___flmul+1,??___flmul+2
 12721  0018F0  C04F  F050         	movff	??___flmul,??___flmul+1
 12722  0018F4  6A4F               	clrf	??___flmul^0,c
 12723  0018F6  504F               	movf	??___flmul^0,w,c
 12724  0018F8  2767               	addwf	___flmul@prod& (0+255),f,b
 12725  0018FA  5050               	movf	(??___flmul+1)^0,w,c
 12726  0018FC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12727  0018FE  5051               	movf	(??___flmul+2)^0,w,c
 12728  001900  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12729  001902  5052               	movf	(??___flmul+3)^0,w,c
 12730  001904  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12731  001906                     
 12732                           ; BSR set to: 0
 12733  001906  C062  F04F         	movff	___flmul@grs,??___flmul
 12734  00190A  C063  F050         	movff	___flmul@grs+1,??___flmul+1
 12735  00190E  C064  F051         	movff	___flmul@grs+2,??___flmul+2
 12736  001912  C065  F052         	movff	___flmul@grs+3,??___flmul+3
 12737  001916  0E19               	movlw	25
 12738  001918  EF93  F00C         	goto	u8260
 12739  00191C                     u8265:
 12740  00191C  90D8               	bcf	status,0,c
 12741  00191E  3252               	rrcf	(??___flmul+3)^0,f,c
 12742  001920  3251               	rrcf	(??___flmul+2)^0,f,c
 12743  001922  3250               	rrcf	(??___flmul+1)^0,f,c
 12744  001924  324F               	rrcf	??___flmul^0,f,c
 12745  001926                     u8260:
 12746  001926  2EE8               	decfsz	wreg,f,c
 12747  001928  EF8E  F00C         	goto	u8265
 12748  00192C  504F               	movf	??___flmul^0,w,c
 12749  00192E  2767               	addwf	___flmul@prod& (0+255),f,b
 12750  001930  5050               	movf	(??___flmul+1)^0,w,c
 12751  001932  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12752  001934  5051               	movf	(??___flmul+2)^0,w,c
 12753  001936  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12754  001938  5052               	movf	(??___flmul+3)^0,w,c
 12755  00193A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12756  00193C                     
 12757                           ; BSR set to: 0
 12758  00193C  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12759  001940  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12760  001944  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12761  001948  6B62               	clrf	___flmul@grs& (0+255),b
 12762  00194A                     
 12763                           ; BSR set to: 0
 12764  00194A  5161               	movf	___flmul@aexp& (0+255),w,b
 12765  00194C  C066  F04F         	movff	___flmul@bexp,??___flmul
 12766  001950  6A50               	clrf	(??___flmul+1)^0,c
 12767  001952  264F               	addwf	??___flmul^0,f,c
 12768  001954  0E00               	movlw	0
 12769  001956  2250               	addwfc	(??___flmul+1)^0,f,c
 12770  001958  0E82               	movlw	130
 12771  00195A  244F               	addwf	??___flmul^0,w,c
 12772  00195C  6F6B               	movwf	___flmul@temp& (0+255),b
 12773  00195E  0EFF               	movlw	255
 12774  001960  2050               	addwfc	(??___flmul+1)^0,w,c
 12775  001962  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12776  001964  EFC9  F00C         	goto	l7554
 12777  001968                     l7548:
 12778                           
 12779                           ; BSR set to: 0
 12780  001968  90D8               	bcf	status,0,c
 12781  00196A  3767               	rlcf	___flmul@prod& (0+255),f,b
 12782  00196C  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12783  00196E  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12784  001970  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12785  001972                     
 12786                           ; BSR set to: 0
 12787  001972  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12788  001974  EFBE  F00C         	goto	u8271
 12789  001978  EFC0  F00C         	goto	u8270
 12790  00197C                     u8271:
 12791  00197C  EFC1  F00C         	goto	l1571
 12792  001980                     u8270:
 12793  001980                     
 12794                           ; BSR set to: 0
 12795  001980  8167               	bsf	___flmul@prod& (0+255),0,b
 12796  001982                     l1571:
 12797                           
 12798                           ; BSR set to: 0
 12799  001982  90D8               	bcf	status,0,c
 12800  001984  3762               	rlcf	___flmul@grs& (0+255),f,b
 12801  001986  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12802  001988  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12803  00198A  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12804  00198C  076B               	decf	___flmul@temp& (0+255),f,b
 12805  00198E  A0D8               	btfss	status,0,c
 12806  001990  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12807  001992                     l7554:
 12808                           
 12809                           ; BSR set to: 0
 12810  001992  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12811  001994  EFCE  F00C         	goto	u8281
 12812  001998  EFD0  F00C         	goto	u8280
 12813  00199C                     u8281:
 12814  00199C  EFB4  F00C         	goto	l7548
 12815  0019A0                     u8280:
 12816  0019A0                     
 12817                           ; BSR set to: 0
 12818  0019A0  0E00               	movlw	0
 12819  0019A2  6F61               	movwf	___flmul@aexp& (0+255),b
 12820  0019A4                     
 12821                           ; BSR set to: 0
 12822  0019A4  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12823  0019A6  EFD7  F00C         	goto	u8291
 12824  0019AA  EFD9  F00C         	goto	u8290
 12825  0019AE                     u8291:
 12826  0019AE  EFFD  F00C         	goto	l1573
 12827  0019B2                     u8290:
 12828  0019B2                     
 12829                           ; BSR set to: 0
 12830  0019B2  0EFF               	movlw	255
 12831  0019B4  1562               	andwf	___flmul@grs& (0+255),w,b
 12832  0019B6  6E4F               	movwf	??___flmul^0,c
 12833  0019B8  0EFF               	movlw	255
 12834  0019BA  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12835  0019BC  6E50               	movwf	(??___flmul+1)^0,c
 12836  0019BE  0EFF               	movlw	255
 12837  0019C0  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12838  0019C2  6E51               	movwf	(??___flmul+2)^0,c
 12839  0019C4  0E7F               	movlw	127
 12840  0019C6  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12841  0019C8  6E52               	movwf	(??___flmul+3)^0,c
 12842  0019CA  504F               	movf	??___flmul^0,w,c
 12843  0019CC  1050               	iorwf	(??___flmul+1)^0,w,c
 12844  0019CE  1051               	iorwf	(??___flmul+2)^0,w,c
 12845  0019D0  1052               	iorwf	(??___flmul+3)^0,w,c
 12846  0019D2  B4D8               	btfsc	status,2,c
 12847  0019D4  EFEE  F00C         	goto	u8301
 12848  0019D8  EFF0  F00C         	goto	u8300
 12849  0019DC                     u8301:
 12850  0019DC  EFF4  F00C         	goto	l1574
 12851  0019E0                     u8300:
 12852  0019E0                     l7562:
 12853                           
 12854                           ; BSR set to: 0
 12855  0019E0  0E01               	movlw	1
 12856  0019E2  6F61               	movwf	___flmul@aexp& (0+255),b
 12857  0019E4  EFFD  F00C         	goto	l1573
 12858  0019E8                     l1574:
 12859                           
 12860                           ; BSR set to: 0
 12861  0019E8  A167               	btfss	___flmul@prod& (0+255),0,b
 12862  0019EA  EFF9  F00C         	goto	u8311
 12863  0019EE  EFFB  F00C         	goto	u8310
 12864  0019F2                     u8311:
 12865  0019F2  EFFD  F00C         	goto	l1573
 12866  0019F6                     u8310:
 12867  0019F6  EFF0  F00C         	goto	l7562
 12868  0019FA                     l1573:
 12869                           
 12870                           ; BSR set to: 0
 12871  0019FA  5161               	movf	___flmul@aexp& (0+255),w,b
 12872  0019FC  B4D8               	btfsc	status,2,c
 12873  0019FE  EF03  F00D         	goto	u8321
 12874  001A02  EF05  F00D         	goto	u8320
 12875  001A06                     u8321:
 12876  001A06  EF29  F00D         	goto	l7574
 12877  001A0A                     u8320:
 12878  001A0A                     
 12879                           ; BSR set to: 0
 12880  001A0A  0E01               	movlw	1
 12881  001A0C  2767               	addwf	___flmul@prod& (0+255),f,b
 12882  001A0E  0E00               	movlw	0
 12883  001A10  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12884  001A12  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12885  001A14  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12886  001A16                     
 12887                           ; BSR set to: 0
 12888  001A16  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12889  001A18  EF10  F00D         	goto	u8331
 12890  001A1C  EF12  F00D         	goto	u8330
 12891  001A20                     u8331:
 12892  001A20  EF29  F00D         	goto	l7574
 12893  001A24                     u8330:
 12894  001A24                     
 12895                           ; BSR set to: 0
 12896  001A24  C067  F04F         	movff	___flmul@prod,??___flmul
 12897  001A28  C068  F050         	movff	___flmul@prod+1,??___flmul+1
 12898  001A2C  C069  F051         	movff	___flmul@prod+2,??___flmul+2
 12899  001A30  C06A  F052         	movff	___flmul@prod+3,??___flmul+3
 12900  001A34  3452               	rlcf	(??___flmul+3)^0,w,c
 12901  001A36  3252               	rrcf	(??___flmul+3)^0,f,c
 12902  001A38  3251               	rrcf	(??___flmul+2)^0,f,c
 12903  001A3A  3250               	rrcf	(??___flmul+1)^0,f,c
 12904  001A3C  324F               	rrcf	??___flmul^0,f,c
 12905  001A3E  C04F  F067         	movff	??___flmul,___flmul@prod
 12906  001A42  C050  F068         	movff	??___flmul+1,___flmul@prod+1
 12907  001A46  C051  F069         	movff	??___flmul+2,___flmul@prod+2
 12908  001A4A  C052  F06A         	movff	??___flmul+3,___flmul@prod+3
 12909  001A4E                     
 12910                           ; BSR set to: 0
 12911  001A4E  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12912  001A50  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12913  001A52                     l7574:
 12914                           
 12915                           ; BSR set to: 0
 12916  001A52  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12917  001A54  EF34  F00D         	goto	u8341
 12918  001A58  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12919  001A5A  E108               	bnz	u8340
 12920  001A5C  296B               	incf	___flmul@temp& (0+255),w,b
 12921  001A5E  A0D8               	btfss	status,0,c
 12922  001A60  EF34  F00D         	goto	u8341
 12923  001A64  EF36  F00D         	goto	u8340
 12924  001A68                     u8341:
 12925  001A68  EF40  F00D         	goto	l7578
 12926  001A6C                     u8340:
 12927  001A6C                     
 12928                           ; BSR set to: 0
 12929  001A6C  0E00               	movlw	0
 12930  001A6E  6F67               	movwf	___flmul@prod& (0+255),b
 12931  001A70  0E00               	movlw	0
 12932  001A72  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12933  001A74  0E80               	movlw	128
 12934  001A76  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12935  001A78  0E7F               	movlw	127
 12936  001A7A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12937  001A7C  EF6E  F00D         	goto	l7590
 12938  001A80                     l7578:
 12939                           
 12940                           ; BSR set to: 0
 12941  001A80  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12942  001A82  EF4D  F00D         	goto	u8350
 12943  001A86  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12944  001A88  E106               	bnz	u8351
 12945  001A8A  056B               	decf	___flmul@temp& (0+255),w,b
 12946  001A8C  B0D8               	btfsc	status,0,c
 12947  001A8E  EF4B  F00D         	goto	u8351
 12948  001A92  EF4D  F00D         	goto	u8350
 12949  001A96                     u8351:
 12950  001A96  EF59  F00D         	goto	l1581
 12951  001A9A                     u8350:
 12952  001A9A                     
 12953                           ; BSR set to: 0
 12954  001A9A  0E00               	movlw	0
 12955  001A9C  6F67               	movwf	___flmul@prod& (0+255),b
 12956  001A9E  0E00               	movlw	0
 12957  001AA0  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12958  001AA2  0E00               	movlw	0
 12959  001AA4  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12960  001AA6  0E00               	movlw	0
 12961  001AA8  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12962  001AAA  0E00               	movlw	0
 12963  001AAC  6F60               	movwf	___flmul@sign& (0+255),b
 12964  001AAE  EF6E  F00D         	goto	l7590
 12965  001AB2                     l1581:
 12966                           
 12967                           ; BSR set to: 0
 12968  001AB2  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 12969  001AB6                     
 12970                           ; BSR set to: 0
 12971  001AB6  0EFF               	movlw	255
 12972  001AB8  1767               	andwf	___flmul@prod& (0+255),f,b
 12973  001ABA  0EFF               	movlw	255
 12974  001ABC  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 12975  001ABE  0E7F               	movlw	127
 12976  001AC0  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 12977  001AC2  0E00               	movlw	0
 12978  001AC4  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 12979  001AC6                     
 12980                           ; BSR set to: 0
 12981  001AC6  A166               	btfss	___flmul@bexp& (0+255),0,b
 12982  001AC8  EF68  F00D         	goto	u8361
 12983  001ACC  EF6A  F00D         	goto	u8360
 12984  001AD0                     u8361:
 12985  001AD0  EF6B  F00D         	goto	l7588
 12986  001AD4                     u8360:
 12987  001AD4                     
 12988                           ; BSR set to: 0
 12989  001AD4  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 12990  001AD6                     l7588:
 12991                           
 12992                           ; BSR set to: 0
 12993  001AD6  90D8               	bcf	status,0,c
 12994  001AD8  3166               	rrcf	___flmul@bexp& (0+255),w,b
 12995  001ADA  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12996  001ADC                     l7590:
 12997                           
 12998                           ; BSR set to: 0
 12999  001ADC  5160               	movf	___flmul@sign& (0+255),w,b
 13000  001ADE  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13001  001AE0                     
 13002                           ; BSR set to: 0
 13003  001AE0  C067  F047         	movff	___flmul@prod,?___flmul
 13004  001AE4  C068  F048         	movff	___flmul@prod+1,?___flmul+1
 13005  001AE8  C069  F049         	movff	___flmul@prod+2,?___flmul+2
 13006  001AEC  C06A  F04A         	movff	___flmul@prod+3,?___flmul+3
 13007  001AF0                     l1568:
 13008                           
 13009                           ; BSR set to: 0
 13010  001AF0  0012               	return		;funcret
 13011  001AF2                     __end_of___flmul:
 13012                           	opt callstack 0
 13013                           
 13014 ;; *************** function ___flge *****************
 13015 ;; Defined at:
 13016 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;  ff1             4    3[COMRAM] unsigned char 
 13019 ;;  ff2             4    7[COMRAM] unsigned char 
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;		None
 13022 ;; Return value:  Size  Location     Type
 13023 ;;		None               void
 13024 ;; Registers used:
 13025 ;;		wreg, status,2, status,0
 13026 ;; Tracked objects:
 13027 ;;		On entry : 0/0
 13028 ;;		On exit  : 0/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13031 ;;      Params:         8       0       0       0       0       0       0       0       0
 13032 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13033 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13034 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13035 ;;Total ram usage:       12 bytes
 13036 ;; Hardware stack levels used:    1
 13037 ;; Hardware stack levels required when called:    2
 13038 ;; This function calls:
 13039 ;;		Nothing
 13040 ;; This function is called by:
 13041 ;;		_TIMER0_SetTime
 13042 ;;		_addSig
 13043 ;;		_normalize
 13044 ;;		_roundf
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           	psect	text49
 13049  004310                     __ptext49:
 13050                           	opt callstack 0
 13051  004310                     ___flge:
 13052                           	opt callstack 23
 13053  004310  0E00               	movlw	0
 13054  004312  1404               	andwf	___flge@ff1^0,w,c
 13055  004314  6E0C               	movwf	??___flge^0,c
 13056  004316  0E00               	movlw	0
 13057  004318  1405               	andwf	(___flge@ff1+1)^0,w,c
 13058  00431A  6E0D               	movwf	(??___flge+1)^0,c
 13059  00431C  0E80               	movlw	128
 13060  00431E  1406               	andwf	(___flge@ff1+2)^0,w,c
 13061  004320  6E0E               	movwf	(??___flge+2)^0,c
 13062  004322  0E7F               	movlw	127
 13063  004324  1407               	andwf	(___flge@ff1+3)^0,w,c
 13064  004326  6E0F               	movwf	(??___flge+3)^0,c
 13065  004328  500C               	movf	??___flge^0,w,c
 13066  00432A  100D               	iorwf	(??___flge+1)^0,w,c
 13067  00432C  100E               	iorwf	(??___flge+2)^0,w,c
 13068  00432E  100F               	iorwf	(??___flge+3)^0,w,c
 13069  004330  A4D8               	btfss	status,2,c
 13070  004332  EF9D  F021         	goto	u8371
 13071  004336  EF9F  F021         	goto	u8370
 13072  00433A                     u8371:
 13073  00433A  EFA7  F021         	goto	l7600
 13074  00433E                     u8370:
 13075  00433E  0E00               	movlw	0
 13076  004340  6E04               	movwf	___flge@ff1^0,c
 13077  004342  0E00               	movlw	0
 13078  004344  6E05               	movwf	(___flge@ff1+1)^0,c
 13079  004346  0E00               	movlw	0
 13080  004348  6E06               	movwf	(___flge@ff1+2)^0,c
 13081  00434A  0E00               	movlw	0
 13082  00434C  6E07               	movwf	(___flge@ff1+3)^0,c
 13083  00434E                     l7600:
 13084  00434E  0E00               	movlw	0
 13085  004350  1408               	andwf	___flge@ff2^0,w,c
 13086  004352  6E0C               	movwf	??___flge^0,c
 13087  004354  0E00               	movlw	0
 13088  004356  1409               	andwf	(___flge@ff2+1)^0,w,c
 13089  004358  6E0D               	movwf	(??___flge+1)^0,c
 13090  00435A  0E80               	movlw	128
 13091  00435C  140A               	andwf	(___flge@ff2+2)^0,w,c
 13092  00435E  6E0E               	movwf	(??___flge+2)^0,c
 13093  004360  0E7F               	movlw	127
 13094  004362  140B               	andwf	(___flge@ff2+3)^0,w,c
 13095  004364  6E0F               	movwf	(??___flge+3)^0,c
 13096  004366  500C               	movf	??___flge^0,w,c
 13097  004368  100D               	iorwf	(??___flge+1)^0,w,c
 13098  00436A  100E               	iorwf	(??___flge+2)^0,w,c
 13099  00436C  100F               	iorwf	(??___flge+3)^0,w,c
 13100  00436E  A4D8               	btfss	status,2,c
 13101  004370  EFBC  F021         	goto	u8381
 13102  004374  EFBE  F021         	goto	u8380
 13103  004378                     u8381:
 13104  004378  EFC6  F021         	goto	l7604
 13105  00437C                     u8380:
 13106  00437C  0E00               	movlw	0
 13107  00437E  6E08               	movwf	___flge@ff2^0,c
 13108  004380  0E00               	movlw	0
 13109  004382  6E09               	movwf	(___flge@ff2+1)^0,c
 13110  004384  0E00               	movlw	0
 13111  004386  6E0A               	movwf	(___flge@ff2+2)^0,c
 13112  004388  0E00               	movlw	0
 13113  00438A  6E0B               	movwf	(___flge@ff2+3)^0,c
 13114  00438C                     l7604:
 13115  00438C  AE07               	btfss	(___flge@ff1+3)^0,7,c
 13116  00438E  EFCB  F021         	goto	u8391
 13117  004392  EFCD  F021         	goto	u8390
 13118  004396                     u8391:
 13119  004396  EFD6  F021         	goto	l7608
 13120  00439A                     u8390:
 13121  00439A  6C04               	negf	___flge@ff1^0,c
 13122  00439C  1E05               	comf	(___flge@ff1+1)^0,f,c
 13123  00439E  B0D8               	btfsc	status,0,c
 13124  0043A0  2A05               	incf	(___flge@ff1+1)^0,f,c
 13125  0043A2  1E06               	comf	(___flge@ff1+2)^0,f,c
 13126  0043A4  B0D8               	btfsc	status,0,c
 13127  0043A6  2A06               	incf	(___flge@ff1+2)^0,f,c
 13128  0043A8  0E80               	movlw	128
 13129  0043AA  5607               	subfwb	(___flge@ff1+3)^0,f,c
 13130  0043AC                     l7608:
 13131  0043AC  AE0B               	btfss	(___flge@ff2+3)^0,7,c
 13132  0043AE  EFDB  F021         	goto	u8401
 13133  0043B2  EFDD  F021         	goto	u8400
 13134  0043B6                     u8401:
 13135  0043B6  EFE6  F021         	goto	l1215
 13136  0043BA                     u8400:
 13137  0043BA  6C08               	negf	___flge@ff2^0,c
 13138  0043BC  1E09               	comf	(___flge@ff2+1)^0,f,c
 13139  0043BE  B0D8               	btfsc	status,0,c
 13140  0043C0  2A09               	incf	(___flge@ff2+1)^0,f,c
 13141  0043C2  1E0A               	comf	(___flge@ff2+2)^0,f,c
 13142  0043C4  B0D8               	btfsc	status,0,c
 13143  0043C6  2A0A               	incf	(___flge@ff2+2)^0,f,c
 13144  0043C8  0E80               	movlw	128
 13145  0043CA  560B               	subfwb	(___flge@ff2+3)^0,f,c
 13146  0043CC                     l1215:
 13147  0043CC  0E00               	movlw	0
 13148  0043CE  1A04               	xorwf	___flge@ff1^0,f,c
 13149  0043D0  0E00               	movlw	0
 13150  0043D2  1A05               	xorwf	(___flge@ff1+1)^0,f,c
 13151  0043D4  0E00               	movlw	0
 13152  0043D6  1A06               	xorwf	(___flge@ff1+2)^0,f,c
 13153  0043D8  0E80               	movlw	128
 13154  0043DA  1A07               	xorwf	(___flge@ff1+3)^0,f,c
 13155  0043DC  0E00               	movlw	0
 13156  0043DE  1A08               	xorwf	___flge@ff2^0,f,c
 13157  0043E0  0E00               	movlw	0
 13158  0043E2  1A09               	xorwf	(___flge@ff2+1)^0,f,c
 13159  0043E4  0E00               	movlw	0
 13160  0043E6  1A0A               	xorwf	(___flge@ff2+2)^0,f,c
 13161  0043E8  0E80               	movlw	128
 13162  0043EA  1A0B               	xorwf	(___flge@ff2+3)^0,f,c
 13163  0043EC  5008               	movf	___flge@ff2^0,w,c
 13164  0043EE  5C04               	subwf	___flge@ff1^0,w,c
 13165  0043F0  5009               	movf	(___flge@ff2+1)^0,w,c
 13166  0043F2  5805               	subwfb	(___flge@ff1+1)^0,w,c
 13167  0043F4  500A               	movf	(___flge@ff2+2)^0,w,c
 13168  0043F6  5806               	subwfb	(___flge@ff1+2)^0,w,c
 13169  0043F8  500B               	movf	(___flge@ff2+3)^0,w,c
 13170  0043FA  5807               	subwfb	(___flge@ff1+3)^0,w,c
 13171  0043FC  B0D8               	btfsc	status,0,c
 13172  0043FE  EF03  F022         	goto	u8411
 13173  004402  EF05  F022         	goto	u8410
 13174  004406                     u8411:
 13175  004406  EF08  F022         	goto	l7614
 13176  00440A                     u8410:
 13177  00440A  90D8               	bcf	status,0,c
 13178  00440C  EF09  F022         	goto	l1220
 13179  004410                     l7614:
 13180  004410  80D8               	bsf	status,0,c
 13181  004412                     l1220:
 13182  004412  0012               	return		;funcret
 13183  004414                     __end_of___flge:
 13184                           	opt callstack 0
 13185                           
 13186 ;; *************** function ___fltol *****************
 13187 ;; Defined at:
 13188 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;  f1              4   43[BANK0 ] unsigned char 
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  exp1            1   87[COMRAM] unsigned char 
 13193 ;;  sign1           1   86[COMRAM] unsigned char 
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  4   43[BANK0 ] long 
 13196 ;; Registers used:
 13197 ;;		wreg, status,2, status,0
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13203 ;;      Params:         0       4       0       0       0       0       0       0       0
 13204 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13205 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13206 ;;      Totals:         2       8       0       0       0       0       0       0       0
 13207 ;;Total ram usage:       10 bytes
 13208 ;; Hardware stack levels used:    1
 13209 ;; Hardware stack levels required when called:    2
 13210 ;; This function calls:
 13211 ;;		Nothing
 13212 ;; This function is called by:
 13213 ;;		_TIMER0_SetTime
 13214 ;;		_ftoa_sci
 13215 ;;		_ftoa
 13216 ;;		_lroundf
 13217 ;; This function uses a non-reentrant model
 13218 ;;
 13219                           
 13220                           	psect	text50
 13221  004208                     __ptext50:
 13222                           	opt callstack 0
 13223  004208                     ___fltol:
 13224                           	opt callstack 24
 13225  004208  0100               	movlb	0	; () banked
 13226  00420A  358D               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13227  00420C  358E               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13228  00420E  6E58               	movwf	___fltol@exp1^0,c
 13229  004210  5058               	movf	___fltol@exp1^0,w,c
 13230  004212  A4D8               	btfss	status,2,c
 13231  004214  EF0E  F021         	goto	u8741
 13232  004218  EF10  F021         	goto	u8740
 13233  00421C                     u8741:
 13234  00421C  EF1A  F021         	goto	l7846
 13235  004220                     u8740:
 13236  004220                     l7842:
 13237                           
 13238                           ; BSR set to: 0
 13239  004220  0E00               	movlw	0
 13240  004222  6F8B               	movwf	?___fltol& (0+255),b
 13241  004224  0E00               	movlw	0
 13242  004226  6F8C               	movwf	(?___fltol+1)& (0+255),b
 13243  004228  0E00               	movlw	0
 13244  00422A  6F8D               	movwf	(?___fltol+2)& (0+255),b
 13245  00422C  0E00               	movlw	0
 13246  00422E  6F8E               	movwf	(?___fltol+3)& (0+255),b
 13247  004230  EF87  F021         	goto	l1247
 13248  004234                     l7846:
 13249                           
 13250                           ; BSR set to: 0
 13251  004234  C08B  F08F         	movff	___fltol@f1,??___fltol
 13252  004238  C08C  F090         	movff	___fltol@f1+1,??___fltol+1
 13253  00423C  C08D  F091         	movff	___fltol@f1+2,??___fltol+2
 13254  004240  C08E  F092         	movff	___fltol@f1+3,??___fltol+3
 13255  004244  0E20               	movlw	32
 13256  004246  EF2A  F021         	goto	u8750
 13257  00424A                     u8755:
 13258  00424A  90D8               	bcf	status,0,c
 13259  00424C  3392               	rrcf	(??___fltol+3)& (0+255),f,b
 13260  00424E  3391               	rrcf	(??___fltol+2)& (0+255),f,b
 13261  004250  3390               	rrcf	(??___fltol+1)& (0+255),f,b
 13262  004252  338F               	rrcf	??___fltol& (0+255),f,b
 13263  004254                     u8750:
 13264  004254  2EE8               	decfsz	wreg,f,c
 13265  004256  EF25  F021         	goto	u8755
 13266  00425A  518F               	movf	??___fltol& (0+255),w,b
 13267  00425C  6E57               	movwf	___fltol@sign1^0,c
 13268  00425E                     
 13269                           ; BSR set to: 0
 13270  00425E  8F8D               	bsf	(___fltol@f1+2)& (0+255),7,b
 13271  004260                     
 13272                           ; BSR set to: 0
 13273  004260  0EFF               	movlw	255
 13274  004262  178B               	andwf	___fltol@f1& (0+255),f,b
 13275  004264  0EFF               	movlw	255
 13276  004266  178C               	andwf	(___fltol@f1+1)& (0+255),f,b
 13277  004268  0EFF               	movlw	255
 13278  00426A  178D               	andwf	(___fltol@f1+2)& (0+255),f,b
 13279  00426C  0E00               	movlw	0
 13280  00426E  178E               	andwf	(___fltol@f1+3)& (0+255),f,b
 13281  004270                     
 13282                           ; BSR set to: 0
 13283  004270  0E96               	movlw	150
 13284  004272  5E58               	subwf	___fltol@exp1^0,f,c
 13285  004274                     
 13286                           ; BSR set to: 0
 13287  004274  BE58               	btfsc	___fltol@exp1^0,7,c
 13288  004276  EF41  F021         	goto	u8760
 13289  00427A  EF3F  F021         	goto	u8761
 13290  00427E                     u8761:
 13291  00427E  EF57  F021         	goto	l7866
 13292  004282                     u8760:
 13293  004282                     
 13294                           ; BSR set to: 0
 13295  004282  5058               	movf	___fltol@exp1^0,w,c
 13296  004284  0A80               	xorlw	128
 13297  004286  0F97               	addlw	151
 13298  004288  B0D8               	btfsc	status,0,c
 13299  00428A  EF49  F021         	goto	u8771
 13300  00428E  EF4B  F021         	goto	u8770
 13301  004292                     u8771:
 13302  004292  EF4D  F021         	goto	l7862
 13303  004296                     u8770:
 13304  004296  EF10  F021         	goto	l7842
 13305  00429A                     l7862:
 13306                           
 13307                           ; BSR set to: 0
 13308  00429A  90D8               	bcf	status,0,c
 13309  00429C  338E               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13310  00429E  338D               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13311  0042A0  338C               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13312  0042A2  338B               	rrcf	___fltol@f1& (0+255),f,b
 13313  0042A4                     
 13314                           ; BSR set to: 0
 13315  0042A4  3E58               	incfsz	___fltol@exp1^0,f,c
 13316  0042A6  EF4D  F021         	goto	l7862
 13317  0042AA  EF6F  F021         	goto	l7876
 13318  0042AE                     l7866:
 13319                           
 13320                           ; BSR set to: 0
 13321  0042AE  0E1F               	movlw	31
 13322  0042B0  6458               	cpfsgt	___fltol@exp1^0,c
 13323  0042B2  EF5D  F021         	goto	u8781
 13324  0042B6  EF5F  F021         	goto	u8780
 13325  0042BA                     u8781:
 13326  0042BA  EF67  F021         	goto	l7874
 13327  0042BE                     u8780:
 13328  0042BE  EF10  F021         	goto	l7842
 13329  0042C2                     l7872:
 13330                           
 13331                           ; BSR set to: 0
 13332  0042C2  90D8               	bcf	status,0,c
 13333  0042C4  378B               	rlcf	___fltol@f1& (0+255),f,b
 13334  0042C6  378C               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13335  0042C8  378D               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13336  0042CA  378E               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13337  0042CC  0658               	decf	___fltol@exp1^0,f,c
 13338  0042CE                     l7874:
 13339                           
 13340                           ; BSR set to: 0
 13341  0042CE  5058               	movf	___fltol@exp1^0,w,c
 13342  0042D0  A4D8               	btfss	status,2,c
 13343  0042D2  EF6D  F021         	goto	u8791
 13344  0042D6  EF6F  F021         	goto	u8790
 13345  0042DA                     u8791:
 13346  0042DA  EF61  F021         	goto	l7872
 13347  0042DE                     u8790:
 13348  0042DE                     l7876:
 13349                           
 13350                           ; BSR set to: 0
 13351  0042DE  5057               	movf	___fltol@sign1^0,w,c
 13352  0042E0  B4D8               	btfsc	status,2,c
 13353  0042E2  EF75  F021         	goto	u8801
 13354  0042E6  EF77  F021         	goto	u8800
 13355  0042EA                     u8801:
 13356  0042EA  EF7F  F021         	goto	l7880
 13357  0042EE                     u8800:
 13358  0042EE                     
 13359                           ; BSR set to: 0
 13360  0042EE  1F8E               	comf	(___fltol@f1+3)& (0+255),f,b
 13361  0042F0  1F8D               	comf	(___fltol@f1+2)& (0+255),f,b
 13362  0042F2  1F8C               	comf	(___fltol@f1+1)& (0+255),f,b
 13363  0042F4  6D8B               	negf	___fltol@f1& (0+255),b
 13364  0042F6  0E00               	movlw	0
 13365  0042F8  238C               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13366  0042FA  238D               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13367  0042FC  238E               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13368  0042FE                     l7880:
 13369                           
 13370                           ; BSR set to: 0
 13371  0042FE  C08B  F08B         	movff	___fltol@f1,?___fltol
 13372  004302  C08C  F08C         	movff	___fltol@f1+1,?___fltol+1
 13373  004306  C08D  F08D         	movff	___fltol@f1+2,?___fltol+2
 13374  00430A  C08E  F08E         	movff	___fltol@f1+3,?___fltol+3
 13375  00430E                     l1247:
 13376                           
 13377                           ; BSR set to: 0
 13378  00430E  0012               	return		;funcret
 13379  004310                     __end_of___fltol:
 13380                           	opt callstack 0
 13381                           
 13382 ;; *************** function ___xxtofl *****************
 13383 ;; Defined at:
 13384 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 13385 ;; Parameters:    Size  Location     Type
 13386 ;;  sign            1    wreg     unsigned char 
 13387 ;;  val             4   15[COMRAM] long 
 13388 ;; Auto vars:     Size  Location     Type
 13389 ;;  sign            1   23[COMRAM] unsigned char 
 13390 ;;  arg             4   25[COMRAM] unsigned long 
 13391 ;;  exp             1   24[COMRAM] unsigned char 
 13392 ;; Return value:  Size  Location     Type
 13393 ;;                  4   15[COMRAM] unsigned char 
 13394 ;; Registers used:
 13395 ;;		wreg, status,2, status,0
 13396 ;; Tracked objects:
 13397 ;;		On entry : 0/0
 13398 ;;		On exit  : 0/0
 13399 ;;		Unchanged: 0/0
 13400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13401 ;;      Params:         4       0       0       0       0       0       0       0       0
 13402 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13403 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13404 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13405 ;;Total ram usage:       14 bytes
 13406 ;; Hardware stack levels used:    1
 13407 ;; Hardware stack levels required when called:    2
 13408 ;; This function calls:
 13409 ;;		Nothing
 13410 ;; This function is called by:
 13411 ;;		_TIMER0_SetTime
 13412 ;;		_my_vsprintf
 13413 ;;		_ftoa_sci
 13414 ;;		_ftoa
 13415 ;;		_DHT11_MReq
 13416 ;; This function uses a non-reentrant model
 13417 ;;
 13418                           
 13419                           	psect	text51
 13420  0038BA                     __ptext51:
 13421                           	opt callstack 0
 13422  0038BA                     ___xxtofl:
 13423                           	opt callstack 24
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;incstack = 0
 13427                           ;___xxtofl@sign stored from wreg
 13428  0038BA  6E18               	movwf	___xxtofl@sign^0,c
 13429  0038BC  5018               	movf	___xxtofl@sign^0,w,c
 13430  0038BE  B4D8               	btfsc	status,2,c
 13431  0038C0  EF64  F01C         	goto	u8811
 13432  0038C4  EF66  F01C         	goto	u8810
 13433  0038C8                     u8811:
 13434  0038C8  EF88  F01C         	goto	l1605
 13435  0038CC                     u8810:
 13436  0038CC  BE13               	btfsc	(___xxtofl@val+3)^0,7,c
 13437  0038CE  EF6D  F01C         	goto	u8820
 13438  0038D2  EF6B  F01C         	goto	u8821
 13439  0038D6                     u8821:
 13440  0038D6  EF88  F01C         	goto	l1605
 13441  0038DA                     u8820:
 13442  0038DA  C010  F014         	movff	___xxtofl@val,??___xxtofl
 13443  0038DE  C011  F015         	movff	___xxtofl@val+1,??___xxtofl+1
 13444  0038E2  C012  F016         	movff	___xxtofl@val+2,??___xxtofl+2
 13445  0038E6  C013  F017         	movff	___xxtofl@val+3,??___xxtofl+3
 13446  0038EA  1E14               	comf	??___xxtofl^0,f,c
 13447  0038EC  1E15               	comf	(??___xxtofl+1)^0,f,c
 13448  0038EE  1E16               	comf	(??___xxtofl+2)^0,f,c
 13449  0038F0  1E17               	comf	(??___xxtofl+3)^0,f,c
 13450  0038F2  2A14               	incf	??___xxtofl^0,f,c
 13451  0038F4  0E00               	movlw	0
 13452  0038F6  2215               	addwfc	(??___xxtofl+1)^0,f,c
 13453  0038F8  2216               	addwfc	(??___xxtofl+2)^0,f,c
 13454  0038FA  2217               	addwfc	(??___xxtofl+3)^0,f,c
 13455  0038FC  C014  F01A         	movff	??___xxtofl,___xxtofl@arg
 13456  003900  C015  F01B         	movff	??___xxtofl+1,___xxtofl@arg+1
 13457  003904  C016  F01C         	movff	??___xxtofl+2,___xxtofl@arg+2
 13458  003908  C017  F01D         	movff	??___xxtofl+3,___xxtofl@arg+3
 13459  00390C  EF90  F01C         	goto	l7890
 13460  003910                     l1605:
 13461  003910  C010  F01A         	movff	___xxtofl@val,___xxtofl@arg
 13462  003914  C011  F01B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13463  003918  C012  F01C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13464  00391C  C013  F01D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13465  003920                     l7890:
 13466  003920  5010               	movf	___xxtofl@val^0,w,c
 13467  003922  1011               	iorwf	(___xxtofl@val+1)^0,w,c
 13468  003924  1012               	iorwf	(___xxtofl@val+2)^0,w,c
 13469  003926  1013               	iorwf	(___xxtofl@val+3)^0,w,c
 13470  003928  A4D8               	btfss	status,2,c
 13471  00392A  EF99  F01C         	goto	u8831
 13472  00392E  EF9B  F01C         	goto	u8830
 13473  003932                     u8831:
 13474  003932  EFA5  F01C         	goto	l7896
 13475  003936                     u8830:
 13476  003936  0E00               	movlw	0
 13477  003938  6E10               	movwf	?___xxtofl^0,c
 13478  00393A  0E00               	movlw	0
 13479  00393C  6E11               	movwf	(?___xxtofl+1)^0,c
 13480  00393E  0E00               	movlw	0
 13481  003940  6E12               	movwf	(?___xxtofl+2)^0,c
 13482  003942  0E00               	movlw	0
 13483  003944  6E13               	movwf	(?___xxtofl+3)^0,c
 13484  003946  EF36  F01D         	goto	l1608
 13485  00394A                     l7896:
 13486  00394A  0E96               	movlw	150
 13487  00394C  6E19               	movwf	___xxtofl@exp^0,c
 13488  00394E  EFAF  F01C         	goto	l7900
 13489  003952                     l7898:
 13490  003952  2A19               	incf	___xxtofl@exp^0,f,c
 13491  003954  90D8               	bcf	status,0,c
 13492  003956  321D               	rrcf	(___xxtofl@arg+3)^0,f,c
 13493  003958  321C               	rrcf	(___xxtofl@arg+2)^0,f,c
 13494  00395A  321B               	rrcf	(___xxtofl@arg+1)^0,f,c
 13495  00395C  321A               	rrcf	___xxtofl@arg^0,f,c
 13496  00395E                     l7900:
 13497  00395E  0E00               	movlw	0
 13498  003960  141A               	andwf	___xxtofl@arg^0,w,c
 13499  003962  6E14               	movwf	??___xxtofl^0,c
 13500  003964  0E00               	movlw	0
 13501  003966  141B               	andwf	(___xxtofl@arg+1)^0,w,c
 13502  003968  6E15               	movwf	(??___xxtofl+1)^0,c
 13503  00396A  0E00               	movlw	0
 13504  00396C  141C               	andwf	(___xxtofl@arg+2)^0,w,c
 13505  00396E  6E16               	movwf	(??___xxtofl+2)^0,c
 13506  003970  0EFE               	movlw	254
 13507  003972  141D               	andwf	(___xxtofl@arg+3)^0,w,c
 13508  003974  6E17               	movwf	(??___xxtofl+3)^0,c
 13509  003976  5014               	movf	??___xxtofl^0,w,c
 13510  003978  1015               	iorwf	(??___xxtofl+1)^0,w,c
 13511  00397A  1016               	iorwf	(??___xxtofl+2)^0,w,c
 13512  00397C  1017               	iorwf	(??___xxtofl+3)^0,w,c
 13513  00397E  A4D8               	btfss	status,2,c
 13514  003980  EFC4  F01C         	goto	u8841
 13515  003984  EFC6  F01C         	goto	u8840
 13516  003988                     u8841:
 13517  003988  EFA9  F01C         	goto	l7898
 13518  00398C                     u8840:
 13519  00398C  EFD4  F01C         	goto	l1612
 13520  003990                     l7902:
 13521  003990  2A19               	incf	___xxtofl@exp^0,f,c
 13522  003992  0E01               	movlw	1
 13523  003994  261A               	addwf	___xxtofl@arg^0,f,c
 13524  003996  0E00               	movlw	0
 13525  003998  221B               	addwfc	(___xxtofl@arg+1)^0,f,c
 13526  00399A  221C               	addwfc	(___xxtofl@arg+2)^0,f,c
 13527  00399C  221D               	addwfc	(___xxtofl@arg+3)^0,f,c
 13528  00399E  90D8               	bcf	status,0,c
 13529  0039A0  321D               	rrcf	(___xxtofl@arg+3)^0,f,c
 13530  0039A2  321C               	rrcf	(___xxtofl@arg+2)^0,f,c
 13531  0039A4  321B               	rrcf	(___xxtofl@arg+1)^0,f,c
 13532  0039A6  321A               	rrcf	___xxtofl@arg^0,f,c
 13533  0039A8                     l1612:
 13534  0039A8  0E00               	movlw	0
 13535  0039AA  141A               	andwf	___xxtofl@arg^0,w,c
 13536  0039AC  6E14               	movwf	??___xxtofl^0,c
 13537  0039AE  0E00               	movlw	0
 13538  0039B0  141B               	andwf	(___xxtofl@arg+1)^0,w,c
 13539  0039B2  6E15               	movwf	(??___xxtofl+1)^0,c
 13540  0039B4  0E00               	movlw	0
 13541  0039B6  141C               	andwf	(___xxtofl@arg+2)^0,w,c
 13542  0039B8  6E16               	movwf	(??___xxtofl+2)^0,c
 13543  0039BA  0EFF               	movlw	255
 13544  0039BC  141D               	andwf	(___xxtofl@arg+3)^0,w,c
 13545  0039BE  6E17               	movwf	(??___xxtofl+3)^0,c
 13546  0039C0  5014               	movf	??___xxtofl^0,w,c
 13547  0039C2  1015               	iorwf	(??___xxtofl+1)^0,w,c
 13548  0039C4  1016               	iorwf	(??___xxtofl+2)^0,w,c
 13549  0039C6  1017               	iorwf	(??___xxtofl+3)^0,w,c
 13550  0039C8  A4D8               	btfss	status,2,c
 13551  0039CA  EFE9  F01C         	goto	u8851
 13552  0039CE  EFEB  F01C         	goto	u8850
 13553  0039D2                     u8851:
 13554  0039D2  EFC8  F01C         	goto	l7902
 13555  0039D6                     u8850:
 13556  0039D6  EFF3  F01C         	goto	l7910
 13557  0039DA                     l7908:
 13558  0039DA  0619               	decf	___xxtofl@exp^0,f,c
 13559  0039DC  90D8               	bcf	status,0,c
 13560  0039DE  361A               	rlcf	___xxtofl@arg^0,f,c
 13561  0039E0  361B               	rlcf	(___xxtofl@arg+1)^0,f,c
 13562  0039E2  361C               	rlcf	(___xxtofl@arg+2)^0,f,c
 13563  0039E4  361D               	rlcf	(___xxtofl@arg+3)^0,f,c
 13564  0039E6                     l7910:
 13565  0039E6  BE1C               	btfsc	(___xxtofl@arg+2)^0,7,c
 13566  0039E8  EFF8  F01C         	goto	u8861
 13567  0039EC  EFFA  F01C         	goto	u8860
 13568  0039F0                     u8861:
 13569  0039F0  EF02  F01D         	goto	l1619
 13570  0039F4                     u8860:
 13571  0039F4  0E02               	movlw	2
 13572  0039F6  6019               	cpfslt	___xxtofl@exp^0,c
 13573  0039F8  EF00  F01D         	goto	u8871
 13574  0039FC  EF02  F01D         	goto	u8870
 13575  003A00                     u8871:
 13576  003A00  EFED  F01C         	goto	l7908
 13577  003A04                     u8870:
 13578  003A04                     l1619:
 13579  003A04  B019               	btfsc	___xxtofl@exp^0,0,c
 13580  003A06  EF07  F01D         	goto	u8881
 13581  003A0A  EF09  F01D         	goto	u8880
 13582  003A0E                     u8881:
 13583  003A0E  EF0A  F01D         	goto	l7916
 13584  003A12                     u8880:
 13585  003A12  9E1C               	bcf	(___xxtofl@arg+2)^0,7,c
 13586  003A14                     l7916:
 13587  003A14  90D8               	bcf	status,0,c
 13588  003A16  3219               	rrcf	___xxtofl@exp^0,f,c
 13589  003A18  C019  F014         	movff	___xxtofl@exp,??___xxtofl
 13590  003A1C  6A15               	clrf	(??___xxtofl+1)^0,c
 13591  003A1E  6A16               	clrf	(??___xxtofl+2)^0,c
 13592  003A20  6A17               	clrf	(??___xxtofl+3)^0,c
 13593  003A22  C014  F017         	movff	??___xxtofl,??___xxtofl+3
 13594  003A26  6A16               	clrf	(??___xxtofl+2)^0,c
 13595  003A28  6A15               	clrf	(??___xxtofl+1)^0,c
 13596  003A2A  6A14               	clrf	??___xxtofl^0,c
 13597  003A2C  5014               	movf	??___xxtofl^0,w,c
 13598  003A2E  121A               	iorwf	___xxtofl@arg^0,f,c
 13599  003A30  5015               	movf	(??___xxtofl+1)^0,w,c
 13600  003A32  121B               	iorwf	(___xxtofl@arg+1)^0,f,c
 13601  003A34  5016               	movf	(??___xxtofl+2)^0,w,c
 13602  003A36  121C               	iorwf	(___xxtofl@arg+2)^0,f,c
 13603  003A38  5017               	movf	(??___xxtofl+3)^0,w,c
 13604  003A3A  121D               	iorwf	(___xxtofl@arg+3)^0,f,c
 13605  003A3C  5018               	movf	___xxtofl@sign^0,w,c
 13606  003A3E  B4D8               	btfsc	status,2,c
 13607  003A40  EF24  F01D         	goto	u8891
 13608  003A44  EF26  F01D         	goto	u8890
 13609  003A48                     u8891:
 13610  003A48  EF2E  F01D         	goto	l7926
 13611  003A4C                     u8890:
 13612  003A4C  BE13               	btfsc	(___xxtofl@val+3)^0,7,c
 13613  003A4E  EF2D  F01D         	goto	u8900
 13614  003A52  EF2B  F01D         	goto	u8901
 13615  003A56                     u8901:
 13616  003A56  EF2E  F01D         	goto	l7926
 13617  003A5A                     u8900:
 13618  003A5A  8E1D               	bsf	(___xxtofl@arg+3)^0,7,c
 13619  003A5C                     l7926:
 13620  003A5C  C01A  F010         	movff	___xxtofl@arg,?___xxtofl
 13621  003A60  C01B  F011         	movff	___xxtofl@arg+1,?___xxtofl+1
 13622  003A64  C01C  F012         	movff	___xxtofl@arg+2,?___xxtofl+2
 13623  003A68  C01D  F013         	movff	___xxtofl@arg+3,?___xxtofl+3
 13624  003A6C                     l1608:
 13625  003A6C  0012               	return		;funcret
 13626  003A6E                     __end_of___xxtofl:
 13627                           	opt callstack 0
 13628                           
 13629 ;; *************** function ___fldiv *****************
 13630 ;; Defined at:
 13631 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;  b               4   29[COMRAM] unsigned char 
 13634 ;;  a               4   33[COMRAM] unsigned char 
 13635 ;; Auto vars:     Size  Location     Type
 13636 ;;  grs             4   48[COMRAM] unsigned long 
 13637 ;;  rem             4   41[COMRAM] unsigned long 
 13638 ;;  new_exp         2   46[COMRAM] short 
 13639 ;;  aexp            1   53[COMRAM] unsigned char 
 13640 ;;  bexp            1   52[COMRAM] unsigned char 
 13641 ;;  sign            1   45[COMRAM] unsigned char 
 13642 ;; Return value:  Size  Location     Type
 13643 ;;                  4   29[COMRAM] unsigned char 
 13644 ;; Registers used:
 13645 ;;		wreg, status,2, status,0
 13646 ;; Tracked objects:
 13647 ;;		On entry : 0/0
 13648 ;;		On exit  : 0/0
 13649 ;;		Unchanged: 0/0
 13650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13651 ;;      Params:         8       0       0       0       0       0       0       0       0
 13652 ;;      Locals:        13       0       0       0       0       0       0       0       0
 13653 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13654 ;;      Totals:        25       0       0       0       0       0       0       0       0
 13655 ;;Total ram usage:       25 bytes
 13656 ;; Hardware stack levels used:    1
 13657 ;; Hardware stack levels required when called:    2
 13658 ;; This function calls:
 13659 ;;		Nothing
 13660 ;; This function is called by:
 13661 ;;		_TIMER0_SetTime
 13662 ;;		_normalize
 13663 ;;		_DHT11_MReq
 13664 ;; This function uses a non-reentrant model
 13665 ;;
 13666                           
 13667                           	psect	text52
 13668  001EA4                     __ptext52:
 13669                           	opt callstack 0
 13670  001EA4                     ___fldiv:
 13671                           	opt callstack 23
 13672  001EA4  5021               	movf	(___fldiv@b+3)^0,w,c
 13673  001EA6  0B80               	andlw	128
 13674  001EA8  6E2E               	movwf	___fldiv@sign^0,c
 13675  001EAA  5021               	movf	(___fldiv@b+3)^0,w,c
 13676  001EAC  2421               	addwf	(___fldiv@b+3)^0,w,c
 13677  001EAE  6E35               	movwf	___fldiv@bexp^0,c
 13678  001EB0  AE20               	btfss	(___fldiv@b+2)^0,7,c
 13679  001EB2  EF5D  F00F         	goto	u7951
 13680  001EB6  EF5F  F00F         	goto	u7950
 13681  001EBA                     u7951:
 13682  001EBA  EF60  F00F         	goto	l7334
 13683  001EBE                     u7950:
 13684  001EBE  8035               	bsf	___fldiv@bexp^0,0,c
 13685  001EC0                     l7334:
 13686  001EC0  5035               	movf	___fldiv@bexp^0,w,c
 13687  001EC2  B4D8               	btfsc	status,2,c
 13688  001EC4  EF66  F00F         	goto	u7961
 13689  001EC8  EF68  F00F         	goto	u7960
 13690  001ECC                     u7961:
 13691  001ECC  EF7D  F00F         	goto	l7344
 13692  001ED0                     u7960:
 13693  001ED0  2835               	incf	___fldiv@bexp^0,w,c
 13694  001ED2  A4D8               	btfss	status,2,c
 13695  001ED4  EF6E  F00F         	goto	u7971
 13696  001ED8  EF70  F00F         	goto	u7970
 13697  001EDC                     u7971:
 13698  001EDC  EF78  F00F         	goto	l7340
 13699  001EE0                     u7970:
 13700  001EE0  0E00               	movlw	0
 13701  001EE2  6E1E               	movwf	___fldiv@b^0,c
 13702  001EE4  0E00               	movlw	0
 13703  001EE6  6E1F               	movwf	(___fldiv@b+1)^0,c
 13704  001EE8  0E00               	movlw	0
 13705  001EEA  6E20               	movwf	(___fldiv@b+2)^0,c
 13706  001EEC  0E00               	movlw	0
 13707  001EEE  6E21               	movwf	(___fldiv@b+3)^0,c
 13708  001EF0                     l7340:
 13709  001EF0  8E20               	bsf	(___fldiv@b+2)^0,7,c
 13710  001EF2  0E00               	movlw	0
 13711  001EF4  6E21               	movwf	(___fldiv@b+3)^0,c
 13712  001EF6  EF85  F00F         	goto	l7346
 13713  001EFA                     l7344:
 13714  001EFA  0E00               	movlw	0
 13715  001EFC  6E1E               	movwf	___fldiv@b^0,c
 13716  001EFE  0E00               	movlw	0
 13717  001F00  6E1F               	movwf	(___fldiv@b+1)^0,c
 13718  001F02  0E00               	movlw	0
 13719  001F04  6E20               	movwf	(___fldiv@b+2)^0,c
 13720  001F06  0E00               	movlw	0
 13721  001F08  6E21               	movwf	(___fldiv@b+3)^0,c
 13722  001F0A                     l7346:
 13723  001F0A  5025               	movf	(___fldiv@a+3)^0,w,c
 13724  001F0C  0B80               	andlw	128
 13725  001F0E  1A2E               	xorwf	___fldiv@sign^0,f,c
 13726  001F10  5025               	movf	(___fldiv@a+3)^0,w,c
 13727  001F12  2425               	addwf	(___fldiv@a+3)^0,w,c
 13728  001F14  6E36               	movwf	___fldiv@aexp^0,c
 13729  001F16  AE24               	btfss	(___fldiv@a+2)^0,7,c
 13730  001F18  EF90  F00F         	goto	u7981
 13731  001F1C  EF92  F00F         	goto	u7980
 13732  001F20                     u7981:
 13733  001F20  EF93  F00F         	goto	l7354
 13734  001F24                     u7980:
 13735  001F24  8036               	bsf	___fldiv@aexp^0,0,c
 13736  001F26                     l7354:
 13737  001F26  5036               	movf	___fldiv@aexp^0,w,c
 13738  001F28  B4D8               	btfsc	status,2,c
 13739  001F2A  EF99  F00F         	goto	u7991
 13740  001F2E  EF9B  F00F         	goto	u7990
 13741  001F32                     u7991:
 13742  001F32  EFB0  F00F         	goto	l7364
 13743  001F36                     u7990:
 13744  001F36  2836               	incf	___fldiv@aexp^0,w,c
 13745  001F38  A4D8               	btfss	status,2,c
 13746  001F3A  EFA1  F00F         	goto	u8001
 13747  001F3E  EFA3  F00F         	goto	u8000
 13748  001F42                     u8001:
 13749  001F42  EFAB  F00F         	goto	l7360
 13750  001F46                     u8000:
 13751  001F46  0E00               	movlw	0
 13752  001F48  6E22               	movwf	___fldiv@a^0,c
 13753  001F4A  0E00               	movlw	0
 13754  001F4C  6E23               	movwf	(___fldiv@a+1)^0,c
 13755  001F4E  0E00               	movlw	0
 13756  001F50  6E24               	movwf	(___fldiv@a+2)^0,c
 13757  001F52  0E00               	movlw	0
 13758  001F54  6E25               	movwf	(___fldiv@a+3)^0,c
 13759  001F56                     l7360:
 13760  001F56  8E24               	bsf	(___fldiv@a+2)^0,7,c
 13761  001F58  0E00               	movlw	0
 13762  001F5A  6E25               	movwf	(___fldiv@a+3)^0,c
 13763  001F5C  EFB8  F00F         	goto	l7366
 13764  001F60                     l7364:
 13765  001F60  0E00               	movlw	0
 13766  001F62  6E22               	movwf	___fldiv@a^0,c
 13767  001F64  0E00               	movlw	0
 13768  001F66  6E23               	movwf	(___fldiv@a+1)^0,c
 13769  001F68  0E00               	movlw	0
 13770  001F6A  6E24               	movwf	(___fldiv@a+2)^0,c
 13771  001F6C  0E00               	movlw	0
 13772  001F6E  6E25               	movwf	(___fldiv@a+3)^0,c
 13773  001F70                     l7366:
 13774  001F70  5022               	movf	___fldiv@a^0,w,c
 13775  001F72  1023               	iorwf	(___fldiv@a+1)^0,w,c
 13776  001F74  1024               	iorwf	(___fldiv@a+2)^0,w,c
 13777  001F76  1025               	iorwf	(___fldiv@a+3)^0,w,c
 13778  001F78  A4D8               	btfss	status,2,c
 13779  001F7A  EFC1  F00F         	goto	u8011
 13780  001F7E  EFC3  F00F         	goto	u8010
 13781  001F82                     u8011:
 13782  001F82  EFDB  F00F         	goto	l7378
 13783  001F86                     u8010:
 13784  001F86  0E00               	movlw	0
 13785  001F88  6E1E               	movwf	___fldiv@b^0,c
 13786  001F8A  0E00               	movlw	0
 13787  001F8C  6E1F               	movwf	(___fldiv@b+1)^0,c
 13788  001F8E  0E00               	movlw	0
 13789  001F90  6E20               	movwf	(___fldiv@b+2)^0,c
 13790  001F92  0E00               	movlw	0
 13791  001F94  6E21               	movwf	(___fldiv@b+3)^0,c
 13792  001F96  0E80               	movlw	128
 13793  001F98  1220               	iorwf	(___fldiv@b+2)^0,f,c
 13794  001F9A  0E7F               	movlw	127
 13795  001F9C  1221               	iorwf	(___fldiv@b+3)^0,f,c
 13796  001F9E                     l7372:
 13797  001F9E  502E               	movf	___fldiv@sign^0,w,c
 13798  001FA0  1221               	iorwf	(___fldiv@b+3)^0,f,c
 13799  001FA2  C01E  F01E         	movff	___fldiv@b,?___fldiv
 13800  001FA6  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
 13801  001FAA  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
 13802  001FAE  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
 13803  001FB2  EF1E  F011         	goto	l1532
 13804  001FB6                     l7378:
 13805  001FB6  5035               	movf	___fldiv@bexp^0,w,c
 13806  001FB8  A4D8               	btfss	status,2,c
 13807  001FBA  EFE1  F00F         	goto	u8021
 13808  001FBE  EFE3  F00F         	goto	u8020
 13809  001FC2                     u8021:
 13810  001FC2  EFED  F00F         	goto	l7386
 13811  001FC6                     u8020:
 13812  001FC6  0E00               	movlw	0
 13813  001FC8  6E1E               	movwf	?___fldiv^0,c
 13814  001FCA  0E00               	movlw	0
 13815  001FCC  6E1F               	movwf	(?___fldiv+1)^0,c
 13816  001FCE  0E00               	movlw	0
 13817  001FD0  6E20               	movwf	(?___fldiv+2)^0,c
 13818  001FD2  0E00               	movlw	0
 13819  001FD4  6E21               	movwf	(?___fldiv+3)^0,c
 13820  001FD6  EF1E  F011         	goto	l1532
 13821  001FDA                     l7386:
 13822  001FDA  5036               	movf	___fldiv@aexp^0,w,c
 13823  001FDC  C035  F026         	movff	___fldiv@bexp,??___fldiv
 13824  001FE0  6A27               	clrf	(??___fldiv+1)^0,c
 13825  001FE2  5E26               	subwf	??___fldiv^0,f,c
 13826  001FE4  0E00               	movlw	0
 13827  001FE6  5A27               	subwfb	(??___fldiv+1)^0,f,c
 13828  001FE8  0E7F               	movlw	127
 13829  001FEA  2426               	addwf	??___fldiv^0,w,c
 13830  001FEC  6E2F               	movwf	___fldiv@new_exp^0,c
 13831  001FEE  0E00               	movlw	0
 13832  001FF0  2027               	addwfc	(??___fldiv+1)^0,w,c
 13833  001FF2  6E30               	movwf	(___fldiv@new_exp+1)^0,c
 13834  001FF4  C01E  F02A         	movff	___fldiv@b,___fldiv@rem
 13835  001FF8  C01F  F02B         	movff	___fldiv@b+1,___fldiv@rem+1
 13836  001FFC  C020  F02C         	movff	___fldiv@b+2,___fldiv@rem+2
 13837  002000  C021  F02D         	movff	___fldiv@b+3,___fldiv@rem+3
 13838  002004  0E00               	movlw	0
 13839  002006  6E1E               	movwf	___fldiv@b^0,c
 13840  002008  0E00               	movlw	0
 13841  00200A  6E1F               	movwf	(___fldiv@b+1)^0,c
 13842  00200C  0E00               	movlw	0
 13843  00200E  6E20               	movwf	(___fldiv@b+2)^0,c
 13844  002010  0E00               	movlw	0
 13845  002012  6E21               	movwf	(___fldiv@b+3)^0,c
 13846  002014  0E00               	movlw	0
 13847  002016  6E31               	movwf	___fldiv@grs^0,c
 13848  002018  0E00               	movlw	0
 13849  00201A  6E32               	movwf	(___fldiv@grs+1)^0,c
 13850  00201C  0E00               	movlw	0
 13851  00201E  6E33               	movwf	(___fldiv@grs+2)^0,c
 13852  002020  0E00               	movlw	0
 13853  002022  6E34               	movwf	(___fldiv@grs+3)^0,c
 13854  002024  0E00               	movlw	0
 13855  002026  6E36               	movwf	___fldiv@aexp^0,c
 13856  002028  EF4E  F010         	goto	l1534
 13857  00202C                     l7396:
 13858  00202C  5036               	movf	___fldiv@aexp^0,w,c
 13859  00202E  B4D8               	btfsc	status,2,c
 13860  002030  EF1C  F010         	goto	u8031
 13861  002034  EF1E  F010         	goto	u8030
 13862  002038                     u8031:
 13863  002038  EF35  F010         	goto	l7404
 13864  00203C                     u8030:
 13865  00203C  90D8               	bcf	status,0,c
 13866  00203E  362A               	rlcf	___fldiv@rem^0,f,c
 13867  002040  362B               	rlcf	(___fldiv@rem+1)^0,f,c
 13868  002042  362C               	rlcf	(___fldiv@rem+2)^0,f,c
 13869  002044  362D               	rlcf	(___fldiv@rem+3)^0,f,c
 13870  002046  90D8               	bcf	status,0,c
 13871  002048  361E               	rlcf	___fldiv@b^0,f,c
 13872  00204A  361F               	rlcf	(___fldiv@b+1)^0,f,c
 13873  00204C  3620               	rlcf	(___fldiv@b+2)^0,f,c
 13874  00204E  3621               	rlcf	(___fldiv@b+3)^0,f,c
 13875  002050  AE34               	btfss	(___fldiv@grs+3)^0,7,c
 13876  002052  EF2D  F010         	goto	u8041
 13877  002056  EF2F  F010         	goto	u8040
 13878  00205A                     u8041:
 13879  00205A  EF30  F010         	goto	l1537
 13880  00205E                     u8040:
 13881  00205E  801E               	bsf	___fldiv@b^0,0,c
 13882  002060                     l1537:
 13883  002060  90D8               	bcf	status,0,c
 13884  002062  3631               	rlcf	___fldiv@grs^0,f,c
 13885  002064  3632               	rlcf	(___fldiv@grs+1)^0,f,c
 13886  002066  3633               	rlcf	(___fldiv@grs+2)^0,f,c
 13887  002068  3634               	rlcf	(___fldiv@grs+3)^0,f,c
 13888  00206A                     l7404:
 13889  00206A  5022               	movf	___fldiv@a^0,w,c
 13890  00206C  5C2A               	subwf	___fldiv@rem^0,w,c
 13891  00206E  5023               	movf	(___fldiv@a+1)^0,w,c
 13892  002070  582B               	subwfb	(___fldiv@rem+1)^0,w,c
 13893  002072  5024               	movf	(___fldiv@a+2)^0,w,c
 13894  002074  582C               	subwfb	(___fldiv@rem+2)^0,w,c
 13895  002076  5025               	movf	(___fldiv@a+3)^0,w,c
 13896  002078  582D               	subwfb	(___fldiv@rem+3)^0,w,c
 13897  00207A  A0D8               	btfss	status,0,c
 13898  00207C  EF42  F010         	goto	u8051
 13899  002080  EF44  F010         	goto	u8050
 13900  002084                     u8051:
 13901  002084  EF4D  F010         	goto	l7410
 13902  002088                     u8050:
 13903  002088  8C34               	bsf	(___fldiv@grs+3)^0,6,c
 13904  00208A  5022               	movf	___fldiv@a^0,w,c
 13905  00208C  5E2A               	subwf	___fldiv@rem^0,f,c
 13906  00208E  5023               	movf	(___fldiv@a+1)^0,w,c
 13907  002090  5A2B               	subwfb	(___fldiv@rem+1)^0,f,c
 13908  002092  5024               	movf	(___fldiv@a+2)^0,w,c
 13909  002094  5A2C               	subwfb	(___fldiv@rem+2)^0,f,c
 13910  002096  5025               	movf	(___fldiv@a+3)^0,w,c
 13911  002098  5A2D               	subwfb	(___fldiv@rem+3)^0,f,c
 13912  00209A                     l7410:
 13913  00209A  2A36               	incf	___fldiv@aexp^0,f,c
 13914  00209C                     l1534:
 13915  00209C  0E19               	movlw	25
 13916  00209E  6436               	cpfsgt	___fldiv@aexp^0,c
 13917  0020A0  EF54  F010         	goto	u8061
 13918  0020A4  EF56  F010         	goto	u8060
 13919  0020A8                     u8061:
 13920  0020A8  EF16  F010         	goto	l7396
 13921  0020AC                     u8060:
 13922  0020AC  502A               	movf	___fldiv@rem^0,w,c
 13923  0020AE  102B               	iorwf	(___fldiv@rem+1)^0,w,c
 13924  0020B0  102C               	iorwf	(___fldiv@rem+2)^0,w,c
 13925  0020B2  102D               	iorwf	(___fldiv@rem+3)^0,w,c
 13926  0020B4  B4D8               	btfsc	status,2,c
 13927  0020B6  EF5F  F010         	goto	u8071
 13928  0020BA  EF61  F010         	goto	u8070
 13929  0020BE                     u8071:
 13930  0020BE  EF79  F010         	goto	l7422
 13931  0020C2                     u8070:
 13932  0020C2  8031               	bsf	___fldiv@grs^0,0,c
 13933  0020C4  EF79  F010         	goto	l7422
 13934  0020C8                     l7416:
 13935  0020C8  90D8               	bcf	status,0,c
 13936  0020CA  361E               	rlcf	___fldiv@b^0,f,c
 13937  0020CC  361F               	rlcf	(___fldiv@b+1)^0,f,c
 13938  0020CE  3620               	rlcf	(___fldiv@b+2)^0,f,c
 13939  0020D0  3621               	rlcf	(___fldiv@b+3)^0,f,c
 13940  0020D2  AE34               	btfss	(___fldiv@grs+3)^0,7,c
 13941  0020D4  EF6E  F010         	goto	u8081
 13942  0020D8  EF70  F010         	goto	u8080
 13943  0020DC                     u8081:
 13944  0020DC  EF71  F010         	goto	l1543
 13945  0020E0                     u8080:
 13946  0020E0  801E               	bsf	___fldiv@b^0,0,c
 13947  0020E2                     l1543:
 13948  0020E2  90D8               	bcf	status,0,c
 13949  0020E4  3631               	rlcf	___fldiv@grs^0,f,c
 13950  0020E6  3632               	rlcf	(___fldiv@grs+1)^0,f,c
 13951  0020E8  3633               	rlcf	(___fldiv@grs+2)^0,f,c
 13952  0020EA  3634               	rlcf	(___fldiv@grs+3)^0,f,c
 13953  0020EC  062F               	decf	___fldiv@new_exp^0,f,c
 13954  0020EE  A0D8               	btfss	status,0,c
 13955  0020F0  0630               	decf	(___fldiv@new_exp+1)^0,f,c
 13956  0020F2                     l7422:
 13957  0020F2  AE20               	btfss	(___fldiv@b+2)^0,7,c
 13958  0020F4  EF7E  F010         	goto	u8091
 13959  0020F8  EF80  F010         	goto	u8090
 13960  0020FC                     u8091:
 13961  0020FC  EF64  F010         	goto	l7416
 13962  002100                     u8090:
 13963  002100  0E00               	movlw	0
 13964  002102  6E36               	movwf	___fldiv@aexp^0,c
 13965  002104  AE34               	btfss	(___fldiv@grs+3)^0,7,c
 13966  002106  EF87  F010         	goto	u8101
 13967  00210A  EF89  F010         	goto	u8100
 13968  00210E                     u8101:
 13969  00210E  EFAD  F010         	goto	l1545
 13970  002112                     u8100:
 13971  002112  0EFF               	movlw	255
 13972  002114  1431               	andwf	___fldiv@grs^0,w,c
 13973  002116  6E26               	movwf	??___fldiv^0,c
 13974  002118  0EFF               	movlw	255
 13975  00211A  1432               	andwf	(___fldiv@grs+1)^0,w,c
 13976  00211C  6E27               	movwf	(??___fldiv+1)^0,c
 13977  00211E  0EFF               	movlw	255
 13978  002120  1433               	andwf	(___fldiv@grs+2)^0,w,c
 13979  002122  6E28               	movwf	(??___fldiv+2)^0,c
 13980  002124  0E7F               	movlw	127
 13981  002126  1434               	andwf	(___fldiv@grs+3)^0,w,c
 13982  002128  6E29               	movwf	(??___fldiv+3)^0,c
 13983  00212A  5026               	movf	??___fldiv^0,w,c
 13984  00212C  1027               	iorwf	(??___fldiv+1)^0,w,c
 13985  00212E  1028               	iorwf	(??___fldiv+2)^0,w,c
 13986  002130  1029               	iorwf	(??___fldiv+3)^0,w,c
 13987  002132  B4D8               	btfsc	status,2,c
 13988  002134  EF9E  F010         	goto	u8111
 13989  002138  EFA0  F010         	goto	u8110
 13990  00213C                     u8111:
 13991  00213C  EFA4  F010         	goto	l1546
 13992  002140                     u8110:
 13993  002140                     l7430:
 13994  002140  0E01               	movlw	1
 13995  002142  6E36               	movwf	___fldiv@aexp^0,c
 13996  002144  EFAD  F010         	goto	l1545
 13997  002148                     l1546:
 13998  002148  A01E               	btfss	___fldiv@b^0,0,c
 13999  00214A  EFA9  F010         	goto	u8121
 14000  00214E  EFAB  F010         	goto	u8120
 14001  002152                     u8121:
 14002  002152  EFAD  F010         	goto	l1545
 14003  002156                     u8120:
 14004  002156  EFA0  F010         	goto	l7430
 14005  00215A                     l1545:
 14006  00215A  5036               	movf	___fldiv@aexp^0,w,c
 14007  00215C  B4D8               	btfsc	status,2,c
 14008  00215E  EFB3  F010         	goto	u8131
 14009  002162  EFB5  F010         	goto	u8130
 14010  002166                     u8131:
 14011  002166  EFD9  F010         	goto	l7442
 14012  00216A                     u8130:
 14013  00216A  0E01               	movlw	1
 14014  00216C  261E               	addwf	___fldiv@b^0,f,c
 14015  00216E  0E00               	movlw	0
 14016  002170  221F               	addwfc	(___fldiv@b+1)^0,f,c
 14017  002172  2220               	addwfc	(___fldiv@b+2)^0,f,c
 14018  002174  2221               	addwfc	(___fldiv@b+3)^0,f,c
 14019  002176  A021               	btfss	(___fldiv@b+3)^0,0,c
 14020  002178  EFC0  F010         	goto	u8141
 14021  00217C  EFC2  F010         	goto	u8140
 14022  002180                     u8141:
 14023  002180  EFD9  F010         	goto	l7442
 14024  002184                     u8140:
 14025  002184  C01E  F026         	movff	___fldiv@b,??___fldiv
 14026  002188  C01F  F027         	movff	___fldiv@b+1,??___fldiv+1
 14027  00218C  C020  F028         	movff	___fldiv@b+2,??___fldiv+2
 14028  002190  C021  F029         	movff	___fldiv@b+3,??___fldiv+3
 14029  002194  3429               	rlcf	(??___fldiv+3)^0,w,c
 14030  002196  3229               	rrcf	(??___fldiv+3)^0,f,c
 14031  002198  3228               	rrcf	(??___fldiv+2)^0,f,c
 14032  00219A  3227               	rrcf	(??___fldiv+1)^0,f,c
 14033  00219C  3226               	rrcf	??___fldiv^0,f,c
 14034  00219E  C026  F01E         	movff	??___fldiv,___fldiv@b
 14035  0021A2  C027  F01F         	movff	??___fldiv+1,___fldiv@b+1
 14036  0021A6  C028  F020         	movff	??___fldiv+2,___fldiv@b+2
 14037  0021AA  C029  F021         	movff	??___fldiv+3,___fldiv@b+3
 14038  0021AE  4A2F               	infsnz	___fldiv@new_exp^0,f,c
 14039  0021B0  2A30               	incf	(___fldiv@new_exp+1)^0,f,c
 14040  0021B2                     l7442:
 14041  0021B2  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14042  0021B4  EFE4  F010         	goto	u8151
 14043  0021B8  5030               	movf	(___fldiv@new_exp+1)^0,w,c
 14044  0021BA  E108               	bnz	u8150
 14045  0021BC  282F               	incf	___fldiv@new_exp^0,w,c
 14046  0021BE  A0D8               	btfss	status,0,c
 14047  0021C0  EFE4  F010         	goto	u8151
 14048  0021C4  EFE6  F010         	goto	u8150
 14049  0021C8                     u8151:
 14050  0021C8  EFF1  F010         	goto	l7446
 14051  0021CC                     u8150:
 14052  0021CC  0E00               	movlw	0
 14053  0021CE  6E30               	movwf	(___fldiv@new_exp+1)^0,c
 14054  0021D0  682F               	setf	___fldiv@new_exp^0,c
 14055  0021D2  0E00               	movlw	0
 14056  0021D4  6E1E               	movwf	___fldiv@b^0,c
 14057  0021D6  0E00               	movlw	0
 14058  0021D8  6E1F               	movwf	(___fldiv@b+1)^0,c
 14059  0021DA  0E00               	movlw	0
 14060  0021DC  6E20               	movwf	(___fldiv@b+2)^0,c
 14061  0021DE  0E00               	movlw	0
 14062  0021E0  6E21               	movwf	(___fldiv@b+3)^0,c
 14063  0021E2                     l7446:
 14064  0021E2  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14065  0021E4  EFFE  F010         	goto	u8160
 14066  0021E8  5030               	movf	(___fldiv@new_exp+1)^0,w,c
 14067  0021EA  E106               	bnz	u8161
 14068  0021EC  042F               	decf	___fldiv@new_exp^0,w,c
 14069  0021EE  B0D8               	btfsc	status,0,c
 14070  0021F0  EFFC  F010         	goto	u8161
 14071  0021F4  EFFE  F010         	goto	u8160
 14072  0021F8                     u8161:
 14073  0021F8  EF0C  F011         	goto	l7450
 14074  0021FC                     u8160:
 14075  0021FC  0E00               	movlw	0
 14076  0021FE  6E30               	movwf	(___fldiv@new_exp+1)^0,c
 14077  002200  0E00               	movlw	0
 14078  002202  6E2F               	movwf	___fldiv@new_exp^0,c
 14079  002204  0E00               	movlw	0
 14080  002206  6E1E               	movwf	___fldiv@b^0,c
 14081  002208  0E00               	movlw	0
 14082  00220A  6E1F               	movwf	(___fldiv@b+1)^0,c
 14083  00220C  0E00               	movlw	0
 14084  00220E  6E20               	movwf	(___fldiv@b+2)^0,c
 14085  002210  0E00               	movlw	0
 14086  002212  6E21               	movwf	(___fldiv@b+3)^0,c
 14087  002214  0E00               	movlw	0
 14088  002216  6E2E               	movwf	___fldiv@sign^0,c
 14089  002218                     l7450:
 14090  002218  C02F  F035         	movff	___fldiv@new_exp,___fldiv@bexp
 14091  00221C  A035               	btfss	___fldiv@bexp^0,0,c
 14092  00221E  EF13  F011         	goto	u8171
 14093  002222  EF15  F011         	goto	u8170
 14094  002226                     u8171:
 14095  002226  EF18  F011         	goto	l7456
 14096  00222A                     u8170:
 14097  00222A  8E20               	bsf	(___fldiv@b+2)^0,7,c
 14098  00222C  EF19  F011         	goto	l7458
 14099  002230                     l7456:
 14100  002230  9E20               	bcf	(___fldiv@b+2)^0,7,c
 14101  002232                     l7458:
 14102  002232  90D8               	bcf	status,0,c
 14103  002234  3035               	rrcf	___fldiv@bexp^0,w,c
 14104  002236  6E21               	movwf	(___fldiv@b+3)^0,c
 14105  002238  EFCF  F00F         	goto	l7372
 14106  00223C                     l1532:
 14107  00223C  0012               	return		;funcret
 14108  00223E                     __end_of___fldiv:
 14109                           	opt callstack 0
 14110                           
 14111 ;; *************** function _TIMER0_SetReg *****************
 14112 ;; Defined at:
 14113 ;;		line 68 in file "src/timer.c"
 14114 ;; Parameters:    Size  Location     Type
 14115 ;;  val             2   55[BANK0 ] unsigned short 
 14116 ;; Auto vars:     Size  Location     Type
 14117 ;;		None
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  1    wreg      void 
 14120 ;; Registers used:
 14121 ;;		wreg, status,2
 14122 ;; Tracked objects:
 14123 ;;		On entry : 0/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14127 ;;      Params:         0       2       0       0       0       0       0       0       0
 14128 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14130 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14131 ;;Total ram usage:        2 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:    2
 14134 ;; This function calls:
 14135 ;;		Nothing
 14136 ;; This function is called by:
 14137 ;;		_TIMER0_SetTime
 14138 ;; This function uses a non-reentrant model
 14139 ;;
 14140                           
 14141                           	psect	text53
 14142  005484                     __ptext53:
 14143                           	opt callstack 0
 14144  005484                     _TIMER0_SetReg:
 14145                           	opt callstack 27
 14146  005484                     
 14147                           ;src/timer.c: 68: void TIMER0_SetReg(uint16_t val);src/timer.c: 69: {;src/timer.c: 70:  
      +                             TMR0H = val >> 8;
 14148  005484  0100               	movlb	0	; () banked
 14149  005486  5198               	movf	(TIMER0_SetReg@val+1)& (0+255),w,b
 14150  005488  6ED7               	movwf	215,c	;volatile
 14151  00548A                     
 14152                           ; BSR set to: 0
 14153                           ;src/timer.c: 71:     TMR1L = val;
 14154  00548A  C097  FFCE         	movff	TIMER0_SetReg@val,4046	;volatile
 14155  00548E                     
 14156                           ; BSR set to: 0
 14157  00548E  0012               	return		;funcret
 14158  005490                     __end_of_TIMER0_SetReg:
 14159                           	opt callstack 0
 14160                           
 14161 ;; *************** function _TIMER0_End *****************
 14162 ;; Defined at:
 14163 ;;		line 16 in file "src/timer.c"
 14164 ;; Parameters:    Size  Location     Type
 14165 ;;		None
 14166 ;; Auto vars:     Size  Location     Type
 14167 ;;		None
 14168 ;; Return value:  Size  Location     Type
 14169 ;;                  1    wreg      void 
 14170 ;; Registers used:
 14171 ;;		None
 14172 ;; Tracked objects:
 14173 ;;		On entry : 0/0
 14174 ;;		On exit  : 0/0
 14175 ;;		Unchanged: 0/0
 14176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14177 ;;      Params:         0       0       0       0       0       0       0       0       0
 14178 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14179 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14180 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14181 ;;Total ram usage:        0 bytes
 14182 ;; Hardware stack levels used:    1
 14183 ;; Hardware stack levels required when called:    2
 14184 ;; This function calls:
 14185 ;;		Nothing
 14186 ;; This function is called by:
 14187 ;;		_TIMER0_SetTime
 14188 ;; This function uses a non-reentrant model
 14189 ;;
 14190                           
 14191                           	psect	text54
 14192  0054A4                     __ptext54:
 14193                           	opt callstack 0
 14194  0054A4                     _TIMER0_End:
 14195                           	opt callstack 27
 14196  0054A4                     
 14197                           ;src/timer.c: 18:     T0CONbits.TMR0ON = 0;
 14198  0054A4  9ED5               	bcf	213,7,c	;volatile
 14199  0054A6  0012               	return		;funcret
 14200  0054A8                     __end_of_TIMER0_End:
 14201                           	opt callstack 0
 14202                           
 14203 ;; *************** function _SYSTEM_Init *****************
 14204 ;; Defined at:
 14205 ;;		line 70 in file "src/system.c"
 14206 ;; Parameters:    Size  Location     Type
 14207 ;;		None
 14208 ;; Auto vars:     Size  Location     Type
 14209 ;;		None
 14210 ;; Return value:  Size  Location     Type
 14211 ;;                  1    wreg      void 
 14212 ;; Registers used:
 14213 ;;		wreg, status,2, status,0, cstack
 14214 ;; Tracked objects:
 14215 ;;		On entry : 0/0
 14216 ;;		On exit  : 0/0
 14217 ;;		Unchanged: 0/0
 14218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14219 ;;      Params:         0       0       0       0       0       0       0       0       0
 14220 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14221 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14222 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14223 ;;Total ram usage:        0 bytes
 14224 ;; Hardware stack levels used:    1
 14225 ;; Hardware stack levels required when called:    6
 14226 ;; This function calls:
 14227 ;;		_BLED_Enable
 14228 ;;		_DHT11_Init
 14229 ;;		_INTERRUPT_Init
 14230 ;;		_INTERRUPT_Tmr0
 14231 ;;		_LCD_Init
 14232 ;;		_LED_Enable
 14233 ;;		_SERIAL_Init
 14234 ;;		_TIMER0_Int
 14235 ;;		_TIMER0_SetPs
 14236 ;; This function is called by:
 14237 ;;		_main
 14238 ;; This function uses a non-reentrant model
 14239 ;;
 14240                           
 14241                           	psect	text55
 14242  004F12                     __ptext55:
 14243                           	opt callstack 0
 14244  004F12                     _SYSTEM_Init:
 14245                           	opt callstack 24
 14246  004F12  EC4F  F02A         	call	_DHT11_Init	;wreg free
 14247  004F16  EC67  F024         	call	_LCD_Init	;wreg free
 14248  004F1A  EC48  F02A         	call	_INTERRUPT_Init	;wreg free
 14249  004F1E  0E00               	movlw	0
 14250  004F20  6E04               	movwf	TIMER0_Int@t0_cs^0,c
 14251  004F22  0E00               	movlw	0
 14252  004F24  6E05               	movwf	TIMER0_Int@t0_se^0,c
 14253  004F26  0E00               	movlw	0
 14254  004F28  6E06               	movwf	TIMER0_Int@t0_psa^0,c
 14255  004F2A  0E00               	movlw	0
 14256  004F2C  ECB0  F028         	call	_TIMER0_Int
 14257  004F30  0E7F               	movlw	127
 14258  004F32  ECB7  F023         	call	_TIMER0_SetPs
 14259  004F36  EC4C  F02A         	call	_INTERRUPT_Tmr0	;wreg free
 14260  004F3A  0E00               	movlw	0
 14261  004F3C  EC03  F028         	call	_BLED_Enable
 14262  004F40  0E01               	movlw	1
 14263  004F42  EC03  F028         	call	_BLED_Enable
 14264  004F46  0E00               	movlw	0
 14265  004F48  ECFD  F026         	call	_LED_Enable
 14266  004F4C  0E01               	movlw	1
 14267  004F4E  ECFD  F026         	call	_LED_Enable
 14268  004F52  0E80               	movlw	128
 14269  004F54  6E12               	movwf	SERIAL_Init@BAUD^0,c
 14270  004F56  0E25               	movlw	37
 14271  004F58  6E13               	movwf	(SERIAL_Init@BAUD+1)^0,c
 14272  004F5A  0E00               	movlw	0
 14273  004F5C  6E14               	movwf	(SERIAL_Init@BAUD+2)^0,c
 14274  004F5E  0E00               	movlw	0
 14275  004F60  6E15               	movwf	(SERIAL_Init@BAUD+3)^0,c
 14276  004F62  ECDF  F025         	call	_SERIAL_Init	;wreg free
 14277  004F66  0012               	return		;funcret
 14278  004F68                     __end_of_SYSTEM_Init:
 14279                           	opt callstack 0
 14280                           
 14281 ;; *************** function _TIMER0_SetPs *****************
 14282 ;; Defined at:
 14283 ;;		line 21 in file "src/timer.c"
 14284 ;; Parameters:    Size  Location     Type
 14285 ;;  prescale        1    wreg     enum E3949
 14286 ;; Auto vars:     Size  Location     Type
 14287 ;;  prescale        1    5[COMRAM] enum E3949
 14288 ;; Return value:  Size  Location     Type
 14289 ;;                  1    wreg      void 
 14290 ;; Registers used:
 14291 ;;		wreg, status,2, status,0
 14292 ;; Tracked objects:
 14293 ;;		On entry : 0/0
 14294 ;;		On exit  : 0/0
 14295 ;;		Unchanged: 0/0
 14296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14297 ;;      Params:         0       0       0       0       0       0       0       0       0
 14298 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14299 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14300 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14301 ;;Total ram usage:        3 bytes
 14302 ;; Hardware stack levels used:    1
 14303 ;; Hardware stack levels required when called:    2
 14304 ;; This function calls:
 14305 ;;		Nothing
 14306 ;; This function is called by:
 14307 ;;		_SYSTEM_Init
 14308 ;; This function uses a non-reentrant model
 14309 ;;
 14310                           
 14311                           	psect	text56
 14312  00476E                     __ptext56:
 14313                           	opt callstack 0
 14314  00476E                     _TIMER0_SetPs:
 14315                           	opt callstack 27
 14316                           
 14317                           ;incstack = 0
 14318                           ;TIMER0_SetPs@prescale stored from wreg
 14319  00476E  6E06               	movwf	TIMER0_SetPs@prescale^0,c
 14320  004770                     
 14321                           ;src/timer.c: 21: void TIMER0_SetPs(PRESCALE prescale);src/timer.c: 22: {;src/timer.c: 2
      +                          3:     switch (prescale)
 14322  004770  EFE2  F023         	goto	l6466
 14323  004774                     l363:
 14324                           
 14325                           ;src/timer.c: 26:             T0CONbits.T0PS0 = 0;
 14326  004774  90D5               	bcf	213,0,c	;volatile
 14327                           
 14328                           ;src/timer.c: 27:             T0CONbits.T0PS1 = 0;
 14329  004776  92D5               	bcf	213,1,c	;volatile
 14330                           
 14331                           ;src/timer.c: 28:             T0CONbits.T0PS2 = 0;
 14332  004778  94D5               	bcf	213,2,c	;volatile
 14333                           
 14334                           ;src/timer.c: 29:             break;
 14335  00477A  EF0F  F024         	goto	l364
 14336  00477E                     l365:
 14337                           
 14338                           ;src/timer.c: 31:             T0CONbits.T0PS0 = 1;
 14339  00477E  80D5               	bsf	213,0,c	;volatile
 14340                           
 14341                           ;src/timer.c: 32:             T0CONbits.T0PS1 = 0;
 14342  004780  92D5               	bcf	213,1,c	;volatile
 14343                           
 14344                           ;src/timer.c: 33:             T0CONbits.T0PS2 = 0;
 14345  004782  94D5               	bcf	213,2,c	;volatile
 14346                           
 14347                           ;src/timer.c: 34:             break;
 14348  004784  EF0F  F024         	goto	l364
 14349  004788                     l366:
 14350                           
 14351                           ;src/timer.c: 36:             T0CONbits.T0PS0 = 0;
 14352  004788  90D5               	bcf	213,0,c	;volatile
 14353                           
 14354                           ;src/timer.c: 37:             T0CONbits.T0PS1 = 1;
 14355  00478A  82D5               	bsf	213,1,c	;volatile
 14356                           
 14357                           ;src/timer.c: 38:             T0CONbits.T0PS2 = 0;
 14358  00478C  94D5               	bcf	213,2,c	;volatile
 14359                           
 14360                           ;src/timer.c: 39:             break;
 14361  00478E  EF0F  F024         	goto	l364
 14362  004792                     l367:
 14363                           
 14364                           ;src/timer.c: 41:             T0CONbits.T0PS0 = 1;
 14365  004792  80D5               	bsf	213,0,c	;volatile
 14366                           
 14367                           ;src/timer.c: 42:             T0CONbits.T0PS1 = 1;
 14368  004794  82D5               	bsf	213,1,c	;volatile
 14369                           
 14370                           ;src/timer.c: 43:             T0CONbits.T0PS2 = 0;
 14371  004796  94D5               	bcf	213,2,c	;volatile
 14372                           
 14373                           ;src/timer.c: 44:             break;
 14374  004798  EF0F  F024         	goto	l364
 14375  00479C                     l368:
 14376                           
 14377                           ;src/timer.c: 46:             T0CONbits.T0PS0 = 0;
 14378  00479C  90D5               	bcf	213,0,c	;volatile
 14379                           
 14380                           ;src/timer.c: 47:             T0CONbits.T0PS1 = 0;
 14381  00479E  92D5               	bcf	213,1,c	;volatile
 14382                           
 14383                           ;src/timer.c: 48:             T0CONbits.T0PS2 = 1;
 14384  0047A0  84D5               	bsf	213,2,c	;volatile
 14385                           
 14386                           ;src/timer.c: 49:             break;
 14387  0047A2  EF0F  F024         	goto	l364
 14388  0047A6                     l369:
 14389                           
 14390                           ;src/timer.c: 51:             T0CONbits.T0PS0 = 1;
 14391  0047A6  80D5               	bsf	213,0,c	;volatile
 14392                           
 14393                           ;src/timer.c: 52:             T0CONbits.T0PS1 = 0;
 14394  0047A8  92D5               	bcf	213,1,c	;volatile
 14395                           
 14396                           ;src/timer.c: 53:             T0CONbits.T0PS2 = 1;
 14397  0047AA  84D5               	bsf	213,2,c	;volatile
 14398                           
 14399                           ;src/timer.c: 54:             break;
 14400  0047AC  EF0F  F024         	goto	l364
 14401  0047B0                     l370:
 14402                           
 14403                           ;src/timer.c: 56:             T0CONbits.T0PS0 = 0;
 14404  0047B0  90D5               	bcf	213,0,c	;volatile
 14405                           
 14406                           ;src/timer.c: 57:             T0CONbits.T0PS1 = 1;
 14407  0047B2  82D5               	bsf	213,1,c	;volatile
 14408                           
 14409                           ;src/timer.c: 58:             T0CONbits.T0PS2 = 1;
 14410  0047B4  84D5               	bsf	213,2,c	;volatile
 14411                           
 14412                           ;src/timer.c: 59:             break;
 14413  0047B6  EF0F  F024         	goto	l364
 14414  0047BA                     l371:
 14415                           
 14416                           ;src/timer.c: 61:             T0CONbits.T0PS0 = 1;
 14417  0047BA  80D5               	bsf	213,0,c	;volatile
 14418                           
 14419                           ;src/timer.c: 62:             T0CONbits.T0PS1 = 1;
 14420  0047BC  82D5               	bsf	213,1,c	;volatile
 14421                           
 14422                           ;src/timer.c: 63:             T0CONbits.T0PS2 = 1;
 14423  0047BE  84D5               	bsf	213,2,c	;volatile
 14424                           
 14425                           ;src/timer.c: 64:     }
 14426  0047C0  EF0F  F024         	goto	l364
 14427  0047C4                     l6466:
 14428  0047C4  5006               	movf	TIMER0_SetPs@prescale^0,w,c
 14429  0047C6  6E04               	movwf	??_TIMER0_SetPs^0,c
 14430  0047C8  6A05               	clrf	(??_TIMER0_SetPs+1)^0,c
 14431                           
 14432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14433                           ; Switch size 1, requested type "simple"
 14434                           ; Number of cases is 1, Range of values is 0 to 0
 14435                           ; switch strategies available:
 14436                           ; Name         Instructions Cycles
 14437                           ; simple_byte            4     3 (average)
 14438                           ;	Chosen strategy is simple_byte
 14439  0047CA  5005               	movf	(??_TIMER0_SetPs+1)^0,w,c
 14440  0047CC  0A00               	xorlw	0	; case 0
 14441  0047CE  B4D8               	btfsc	status,2,c
 14442  0047D0  EFEC  F023         	goto	l9448
 14443  0047D4  EF0F  F024         	goto	l364
 14444  0047D8                     l9448:
 14445                           
 14446                           ; Switch size 1, requested type "simple"
 14447                           ; Number of cases is 8, Range of values is 1 to 255
 14448                           ; switch strategies available:
 14449                           ; Name         Instructions Cycles
 14450                           ; simple_byte           25    13 (average)
 14451                           ;	Chosen strategy is simple_byte
 14452  0047D8  5004               	movf	??_TIMER0_SetPs^0,w,c
 14453  0047DA  0A01               	xorlw	1	; case 1
 14454  0047DC  B4D8               	btfsc	status,2,c
 14455  0047DE  EFBA  F023         	goto	l363
 14456  0047E2  0A02               	xorlw	2	; case 3
 14457  0047E4  B4D8               	btfsc	status,2,c
 14458  0047E6  EFBF  F023         	goto	l365
 14459  0047EA  0A04               	xorlw	4	; case 7
 14460  0047EC  B4D8               	btfsc	status,2,c
 14461  0047EE  EFC4  F023         	goto	l366
 14462  0047F2  0A08               	xorlw	8	; case 15
 14463  0047F4  B4D8               	btfsc	status,2,c
 14464  0047F6  EFC9  F023         	goto	l367
 14465  0047FA  0A10               	xorlw	16	; case 31
 14466  0047FC  B4D8               	btfsc	status,2,c
 14467  0047FE  EFCE  F023         	goto	l368
 14468  004802  0A20               	xorlw	32	; case 63
 14469  004804  B4D8               	btfsc	status,2,c
 14470  004806  EFD3  F023         	goto	l369
 14471  00480A  0A40               	xorlw	64	; case 127
 14472  00480C  B4D8               	btfsc	status,2,c
 14473  00480E  EFD8  F023         	goto	l370
 14474  004812  0A80               	xorlw	128	; case 255
 14475  004814  B4D8               	btfsc	status,2,c
 14476  004816  EFDD  F023         	goto	l371
 14477  00481A  EF0F  F024         	goto	l364
 14478  00481E                     l364:
 14479                           
 14480                           ;src/timer.c: 65:     PS_TMR0 = prescale;
 14481  00481E  C006  F0EA         	movff	TIMER0_SetPs@prescale,_PS_TMR0
 14482  004822  0012               	return		;funcret
 14483  004824                     __end_of_TIMER0_SetPs:
 14484                           	opt callstack 0
 14485                           
 14486 ;; *************** function _TIMER0_Int *****************
 14487 ;; Defined at:
 14488 ;;		line 6 in file "src/timer.c"
 14489 ;; Parameters:    Size  Location     Type
 14490 ;;  t0_8b           1    wreg     _Bool 
 14491 ;;  t0_cs           1    3[COMRAM] _Bool 
 14492 ;;  t0_se           1    4[COMRAM] _Bool 
 14493 ;;  t0_psa          1    5[COMRAM] _Bool 
 14494 ;; Auto vars:     Size  Location     Type
 14495 ;;  t0_8b           1    6[COMRAM] _Bool 
 14496 ;; Return value:  Size  Location     Type
 14497 ;;                  1    wreg      void 
 14498 ;; Registers used:
 14499 ;;		wreg, status,2
 14500 ;; Tracked objects:
 14501 ;;		On entry : 0/0
 14502 ;;		On exit  : 0/0
 14503 ;;		Unchanged: 0/0
 14504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14505 ;;      Params:         3       0       0       0       0       0       0       0       0
 14506 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14507 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14508 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14509 ;;Total ram usage:        4 bytes
 14510 ;; Hardware stack levels used:    1
 14511 ;; Hardware stack levels required when called:    2
 14512 ;; This function calls:
 14513 ;;		Nothing
 14514 ;; This function is called by:
 14515 ;;		_SYSTEM_Init
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text57
 14520  005160                     __ptext57:
 14521                           	opt callstack 0
 14522  005160                     _TIMER0_Int:
 14523                           	opt callstack 27
 14524                           
 14525                           ;incstack = 0
 14526                           ;TIMER0_Int@t0_8b stored from wreg
 14527  005160  6E07               	movwf	TIMER0_Int@t0_8b^0,c
 14528  005162                     
 14529                           ;src/timer.c: 6: void TIMER0_Int(_Bool t0_8b, _Bool t0_cs, _Bool t0_se, _Bool t0_psa);sr
      +                          c/timer.c: 7: {;src/timer.c: 8:     T0CONbits.TMR0ON = 1;
 14530  005162  8ED5               	bsf	213,7,c	;volatile
 14531  005164                     
 14532                           ;src/timer.c: 9:     T0CONbits.T08BIT = t0_8b;
 14533  005164  B007               	btfsc	TIMER0_Int@t0_8b^0,0,c
 14534  005166  D002               	bra	u6955
 14535  005168  9CD5               	bcf	213,6,c	;volatile
 14536  00516A  D001               	bra	u6956
 14537  00516C                     u6955:
 14538  00516C  8CD5               	bsf	213,6,c	;volatile
 14539  00516E                     u6956:
 14540  00516E                     
 14541                           ;src/timer.c: 10:     T0CONbits.T0CS = t0_cs;
 14542  00516E  B004               	btfsc	TIMER0_Int@t0_cs^0,0,c
 14543  005170  D002               	bra	u6965
 14544  005172  9AD5               	bcf	213,5,c	;volatile
 14545  005174  D001               	bra	u6966
 14546  005176                     u6965:
 14547  005176  8AD5               	bsf	213,5,c	;volatile
 14548  005178                     u6966:
 14549  005178                     
 14550                           ;src/timer.c: 11:     T0CONbits.T0SE = t0_se;
 14551  005178  B005               	btfsc	TIMER0_Int@t0_se^0,0,c
 14552  00517A  D002               	bra	u6975
 14553  00517C  98D5               	bcf	213,4,c	;volatile
 14554  00517E  D001               	bra	u6976
 14555  005180                     u6975:
 14556  005180  88D5               	bsf	213,4,c	;volatile
 14557  005182                     u6976:
 14558  005182                     
 14559                           ;src/timer.c: 12:     T0CONbits.PSA = t0_psa;
 14560  005182  B006               	btfsc	TIMER0_Int@t0_psa^0,0,c
 14561  005184  D002               	bra	u6985
 14562  005186  96D5               	bcf	213,3,c	;volatile
 14563  005188  D001               	bra	u6986
 14564  00518A                     u6985:
 14565  00518A  86D5               	bsf	213,3,c	;volatile
 14566  00518C                     u6986:
 14567  00518C                     
 14568                           ;src/timer.c: 13:     if (t0_cs)
 14569  00518C  5004               	movf	TIMER0_Int@t0_cs^0,w,c
 14570  00518E  B4D8               	btfsc	status,2,c
 14571  005190  EFCC  F028         	goto	u6991
 14572  005194  EFCE  F028         	goto	u6990
 14573  005198                     u6991:
 14574  005198  EFCF  F028         	goto	l356
 14575  00519C                     u6990:
 14576  00519C                     
 14577                           ;src/timer.c: 14:         TRISAbits.RA4 = 1;
 14578  00519C  8892               	bsf	146,4,c	;volatile
 14579  00519E                     l356:
 14580  00519E  0012               	return		;funcret
 14581  0051A0                     __end_of_TIMER0_Int:
 14582                           	opt callstack 0
 14583                           
 14584 ;; *************** function _SERIAL_Init *****************
 14585 ;; Defined at:
 14586 ;;		line 3 in file "src/serial.c"
 14587 ;; Parameters:    Size  Location     Type
 14588 ;;  BAUD            4   17[COMRAM] long 
 14589 ;; Auto vars:     Size  Location     Type
 14590 ;;  baudrate        2   25[COMRAM] unsigned short 
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  1    wreg      void 
 14593 ;; Registers used:
 14594 ;;		wreg, status,2, status,0, cstack
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14600 ;;      Params:         4       0       0       0       0       0       0       0       0
 14601 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14603 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14604 ;;Total ram usage:       10 bytes
 14605 ;; Hardware stack levels used:    1
 14606 ;; Hardware stack levels required when called:    3
 14607 ;; This function calls:
 14608 ;;		___aldiv
 14609 ;; This function is called by:
 14610 ;;		_SYSTEM_Init
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           	psect	text58
 14615  004BBE                     __ptext58:
 14616                           	opt callstack 0
 14617  004BBE                     _SERIAL_Init:
 14618                           	opt callstack 26
 14619  004BBE                     
 14620                           ;src/serial.c: 3: void SERIAL_Init(long BAUD);src/serial.c: 4: {;src/serial.c: 6:     ui
      +                          nt16_t baudrate = (((48000000/BAUD)/4)-1);
 14621  004BBE  C012  F008         	movff	SERIAL_Init@BAUD,___aldiv@divisor
 14622  004BC2  C013  F009         	movff	SERIAL_Init@BAUD+1,___aldiv@divisor+1
 14623  004BC6  C014  F00A         	movff	SERIAL_Init@BAUD+2,___aldiv@divisor+2
 14624  004BCA  C015  F00B         	movff	SERIAL_Init@BAUD+3,___aldiv@divisor+3
 14625  004BCE  0E00               	movlw	0
 14626  004BD0  6E04               	movwf	___aldiv@dividend^0,c
 14627  004BD2  0E6C               	movlw	108
 14628  004BD4  6E05               	movwf	(___aldiv@dividend+1)^0,c
 14629  004BD6  0EDC               	movlw	220
 14630  004BD8  6E06               	movwf	(___aldiv@dividend+2)^0,c
 14631  004BDA  0E02               	movlw	2
 14632  004BDC  6E07               	movwf	(___aldiv@dividend+3)^0,c
 14633  004BDE  EC7E  F020         	call	___aldiv	;wreg free
 14634  004BE2  C004  F016         	movff	?___aldiv,_SERIAL_Init$2747
 14635  004BE6  C005  F017         	movff	?___aldiv+1,_SERIAL_Init$2747+1
 14636  004BEA  C006  F018         	movff	?___aldiv+2,_SERIAL_Init$2747+2
 14637  004BEE  C007  F019         	movff	?___aldiv+3,_SERIAL_Init$2747+3
 14638                           
 14639                           ;src/serial.c: 3: void SERIAL_Init(long BAUD);src/serial.c: 4: {;src/serial.c: 6:     ui
      +                          nt16_t baudrate = (((48000000/BAUD)/4)-1);
 14640  004BF2  C016  F004         	movff	_SERIAL_Init$2747,___aldiv@dividend
 14641  004BF6  C017  F005         	movff	_SERIAL_Init$2747+1,___aldiv@dividend+1
 14642  004BFA  C018  F006         	movff	_SERIAL_Init$2747+2,___aldiv@dividend+2
 14643  004BFE  C019  F007         	movff	_SERIAL_Init$2747+3,___aldiv@dividend+3
 14644  004C02  0E04               	movlw	4
 14645  004C04  6E08               	movwf	___aldiv@divisor^0,c
 14646  004C06  0E00               	movlw	0
 14647  004C08  6E09               	movwf	(___aldiv@divisor+1)^0,c
 14648  004C0A  0E00               	movlw	0
 14649  004C0C  6E0A               	movwf	(___aldiv@divisor+2)^0,c
 14650  004C0E  0E00               	movlw	0
 14651  004C10  6E0B               	movwf	(___aldiv@divisor+3)^0,c
 14652  004C12  EC7E  F020         	call	___aldiv	;wreg free
 14653  004C16  0EFF               	movlw	255
 14654  004C18  2404               	addwf	?___aldiv^0,w,c
 14655  004C1A  6E1A               	movwf	SERIAL_Init@baudrate^0,c
 14656  004C1C  0EFF               	movlw	255
 14657  004C1E  2005               	addwfc	(?___aldiv+1)^0,w,c
 14658  004C20  6E1B               	movwf	(SERIAL_Init@baudrate+1)^0,c
 14659  004C22                     
 14660                           ;src/serial.c: 8:     TRISCbits.RC6 = 1;
 14661  004C22  8C94               	bsf	148,6,c	;volatile
 14662  004C24                     
 14663                           ;src/serial.c: 9:     TRISCbits.RC7 = 1;
 14664  004C24  8E94               	bsf	148,7,c	;volatile
 14665  004C26                     
 14666                           ;src/serial.c: 12:     RCSTAbits.SPEN = 1;
 14667  004C26  8EAB               	bsf	171,7,c	;volatile
 14668  004C28                     
 14669                           ;src/serial.c: 13:     TXSTAbits.SYNC = 0;
 14670  004C28  98AC               	bcf	172,4,c	;volatile
 14671  004C2A                     
 14672                           ;src/serial.c: 14:     TXSTAbits.BRGH = 1;
 14673  004C2A  84AC               	bsf	172,2,c	;volatile
 14674  004C2C                     
 14675                           ;src/serial.c: 15:     BAUDCONbits.BRG16 = 1;
 14676  004C2C  86B8               	bsf	184,3,c	;volatile
 14677  004C2E                     
 14678                           ;src/serial.c: 16:     SPBRGH = baudrate >> 8;
 14679  004C2E  501B               	movf	(SERIAL_Init@baudrate+1)^0,w,c
 14680  004C30  6EB0               	movwf	176,c	;volatile
 14681  004C32                     
 14682                           ;src/serial.c: 17:     SPBRG = baudrate;
 14683  004C32  C01A  FFAF         	movff	SERIAL_Init@baudrate,4015	;volatile
 14684  004C36                     
 14685                           ;src/serial.c: 20:     TXSTAbits.TX9 = 0;
 14686  004C36  9CAC               	bcf	172,6,c	;volatile
 14687  004C38                     
 14688                           ;src/serial.c: 21:     TXSTAbits.TXEN = 1;
 14689  004C38  8AAC               	bsf	172,5,c	;volatile
 14690  004C3A                     
 14691                           ;src/serial.c: 24:     RCSTAbits.RC9 = 0;
 14692  004C3A  9CAB               	bcf	171,6,c	;volatile
 14693  004C3C                     
 14694                           ;src/serial.c: 25:     RCSTAbits.CREN = 1;
 14695  004C3C  88AB               	bsf	171,4,c	;volatile
 14696  004C3E  0012               	return		;funcret
 14697  004C40                     __end_of_SERIAL_Init:
 14698                           	opt callstack 0
 14699                           
 14700 ;; *************** function ___aldiv *****************
 14701 ;; Defined at:
 14702 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 14703 ;; Parameters:    Size  Location     Type
 14704 ;;  dividend        4    3[COMRAM] long 
 14705 ;;  divisor         4    7[COMRAM] long 
 14706 ;; Auto vars:     Size  Location     Type
 14707 ;;  quotient        4   13[COMRAM] long 
 14708 ;;  sign            1   12[COMRAM] unsigned char 
 14709 ;;  counter         1   11[COMRAM] unsigned char 
 14710 ;; Return value:  Size  Location     Type
 14711 ;;                  4    3[COMRAM] long 
 14712 ;; Registers used:
 14713 ;;		wreg, status,2, status,0
 14714 ;; Tracked objects:
 14715 ;;		On entry : 0/0
 14716 ;;		On exit  : 0/0
 14717 ;;		Unchanged: 0/0
 14718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14719 ;;      Params:         8       0       0       0       0       0       0       0       0
 14720 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14721 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14722 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14723 ;;Total ram usage:       14 bytes
 14724 ;; Hardware stack levels used:    1
 14725 ;; Hardware stack levels required when called:    2
 14726 ;; This function calls:
 14727 ;;		Nothing
 14728 ;; This function is called by:
 14729 ;;		_SERIAL_Init
 14730 ;;		_itoa
 14731 ;; This function uses a non-reentrant model
 14732 ;;
 14733                           
 14734                           	psect	text59
 14735  0040FC                     __ptext59:
 14736                           	opt callstack 0
 14737  0040FC                     ___aldiv:
 14738                           	opt callstack 24
 14739  0040FC  0E00               	movlw	0
 14740  0040FE  6E0D               	movwf	___aldiv@sign^0,c
 14741  004100  BE0B               	btfsc	(___aldiv@divisor+3)^0,7,c
 14742  004102  EF87  F020         	goto	u7440
 14743  004106  EF85  F020         	goto	u7441
 14744  00410A                     u7441:
 14745  00410A  EF91  F020         	goto	l7054
 14746  00410E                     u7440:
 14747  00410E  1E0B               	comf	(___aldiv@divisor+3)^0,f,c
 14748  004110  1E0A               	comf	(___aldiv@divisor+2)^0,f,c
 14749  004112  1E09               	comf	(___aldiv@divisor+1)^0,f,c
 14750  004114  6C08               	negf	___aldiv@divisor^0,c
 14751  004116  0E00               	movlw	0
 14752  004118  2209               	addwfc	(___aldiv@divisor+1)^0,f,c
 14753  00411A  220A               	addwfc	(___aldiv@divisor+2)^0,f,c
 14754  00411C  220B               	addwfc	(___aldiv@divisor+3)^0,f,c
 14755  00411E  0E01               	movlw	1
 14756  004120  6E0D               	movwf	___aldiv@sign^0,c
 14757  004122                     l7054:
 14758  004122  BE07               	btfsc	(___aldiv@dividend+3)^0,7,c
 14759  004124  EF98  F020         	goto	u7450
 14760  004128  EF96  F020         	goto	u7451
 14761  00412C                     u7451:
 14762  00412C  EFA2  F020         	goto	l7060
 14763  004130                     u7450:
 14764  004130  1E07               	comf	(___aldiv@dividend+3)^0,f,c
 14765  004132  1E06               	comf	(___aldiv@dividend+2)^0,f,c
 14766  004134  1E05               	comf	(___aldiv@dividend+1)^0,f,c
 14767  004136  6C04               	negf	___aldiv@dividend^0,c
 14768  004138  0E00               	movlw	0
 14769  00413A  2205               	addwfc	(___aldiv@dividend+1)^0,f,c
 14770  00413C  2206               	addwfc	(___aldiv@dividend+2)^0,f,c
 14771  00413E  2207               	addwfc	(___aldiv@dividend+3)^0,f,c
 14772  004140  0E01               	movlw	1
 14773  004142  1A0D               	xorwf	___aldiv@sign^0,f,c
 14774  004144                     l7060:
 14775  004144  0E00               	movlw	0
 14776  004146  6E0E               	movwf	___aldiv@quotient^0,c
 14777  004148  0E00               	movlw	0
 14778  00414A  6E0F               	movwf	(___aldiv@quotient+1)^0,c
 14779  00414C  0E00               	movlw	0
 14780  00414E  6E10               	movwf	(___aldiv@quotient+2)^0,c
 14781  004150  0E00               	movlw	0
 14782  004152  6E11               	movwf	(___aldiv@quotient+3)^0,c
 14783  004154  5008               	movf	___aldiv@divisor^0,w,c
 14784  004156  1009               	iorwf	(___aldiv@divisor+1)^0,w,c
 14785  004158  100A               	iorwf	(___aldiv@divisor+2)^0,w,c
 14786  00415A  100B               	iorwf	(___aldiv@divisor+3)^0,w,c
 14787  00415C  B4D8               	btfsc	status,2,c
 14788  00415E  EFB3  F020         	goto	u7461
 14789  004162  EFB5  F020         	goto	u7460
 14790  004166                     u7461:
 14791  004166  EFEB  F020         	goto	l7082
 14792  00416A                     u7460:
 14793  00416A  0E01               	movlw	1
 14794  00416C  6E0C               	movwf	___aldiv@counter^0,c
 14795  00416E  EFBF  F020         	goto	l7068
 14796  004172                     l7066:
 14797  004172  90D8               	bcf	status,0,c
 14798  004174  3608               	rlcf	___aldiv@divisor^0,f,c
 14799  004176  3609               	rlcf	(___aldiv@divisor+1)^0,f,c
 14800  004178  360A               	rlcf	(___aldiv@divisor+2)^0,f,c
 14801  00417A  360B               	rlcf	(___aldiv@divisor+3)^0,f,c
 14802  00417C  2A0C               	incf	___aldiv@counter^0,f,c
 14803  00417E                     l7068:
 14804  00417E  AE0B               	btfss	(___aldiv@divisor+3)^0,7,c
 14805  004180  EFC4  F020         	goto	u7471
 14806  004184  EFC6  F020         	goto	u7470
 14807  004188                     u7471:
 14808  004188  EFB9  F020         	goto	l7066
 14809  00418C                     u7470:
 14810  00418C                     l7070:
 14811  00418C  90D8               	bcf	status,0,c
 14812  00418E  360E               	rlcf	___aldiv@quotient^0,f,c
 14813  004190  360F               	rlcf	(___aldiv@quotient+1)^0,f,c
 14814  004192  3610               	rlcf	(___aldiv@quotient+2)^0,f,c
 14815  004194  3611               	rlcf	(___aldiv@quotient+3)^0,f,c
 14816  004196  5008               	movf	___aldiv@divisor^0,w,c
 14817  004198  5C04               	subwf	___aldiv@dividend^0,w,c
 14818  00419A  5009               	movf	(___aldiv@divisor+1)^0,w,c
 14819  00419C  5805               	subwfb	(___aldiv@dividend+1)^0,w,c
 14820  00419E  500A               	movf	(___aldiv@divisor+2)^0,w,c
 14821  0041A0  5806               	subwfb	(___aldiv@dividend+2)^0,w,c
 14822  0041A2  500B               	movf	(___aldiv@divisor+3)^0,w,c
 14823  0041A4  5807               	subwfb	(___aldiv@dividend+3)^0,w,c
 14824  0041A6  A0D8               	btfss	status,0,c
 14825  0041A8  EFD8  F020         	goto	u7481
 14826  0041AC  EFDA  F020         	goto	u7480
 14827  0041B0                     u7481:
 14828  0041B0  EFE3  F020         	goto	l7078
 14829  0041B4                     u7480:
 14830  0041B4  5008               	movf	___aldiv@divisor^0,w,c
 14831  0041B6  5E04               	subwf	___aldiv@dividend^0,f,c
 14832  0041B8  5009               	movf	(___aldiv@divisor+1)^0,w,c
 14833  0041BA  5A05               	subwfb	(___aldiv@dividend+1)^0,f,c
 14834  0041BC  500A               	movf	(___aldiv@divisor+2)^0,w,c
 14835  0041BE  5A06               	subwfb	(___aldiv@dividend+2)^0,f,c
 14836  0041C0  500B               	movf	(___aldiv@divisor+3)^0,w,c
 14837  0041C2  5A07               	subwfb	(___aldiv@dividend+3)^0,f,c
 14838  0041C4  800E               	bsf	___aldiv@quotient^0,0,c
 14839  0041C6                     l7078:
 14840  0041C6  90D8               	bcf	status,0,c
 14841  0041C8  320B               	rrcf	(___aldiv@divisor+3)^0,f,c
 14842  0041CA  320A               	rrcf	(___aldiv@divisor+2)^0,f,c
 14843  0041CC  3209               	rrcf	(___aldiv@divisor+1)^0,f,c
 14844  0041CE  3208               	rrcf	___aldiv@divisor^0,f,c
 14845  0041D0  2E0C               	decfsz	___aldiv@counter^0,f,c
 14846  0041D2  EFC6  F020         	goto	l7070
 14847  0041D6                     l7082:
 14848  0041D6  500D               	movf	___aldiv@sign^0,w,c
 14849  0041D8  B4D8               	btfsc	status,2,c
 14850  0041DA  EFF1  F020         	goto	u7491
 14851  0041DE  EFF3  F020         	goto	u7490
 14852  0041E2                     u7491:
 14853  0041E2  EFFB  F020         	goto	l7086
 14854  0041E6                     u7490:
 14855  0041E6  1E11               	comf	(___aldiv@quotient+3)^0,f,c
 14856  0041E8  1E10               	comf	(___aldiv@quotient+2)^0,f,c
 14857  0041EA  1E0F               	comf	(___aldiv@quotient+1)^0,f,c
 14858  0041EC  6C0E               	negf	___aldiv@quotient^0,c
 14859  0041EE  0E00               	movlw	0
 14860  0041F0  220F               	addwfc	(___aldiv@quotient+1)^0,f,c
 14861  0041F2  2210               	addwfc	(___aldiv@quotient+2)^0,f,c
 14862  0041F4  2211               	addwfc	(___aldiv@quotient+3)^0,f,c
 14863  0041F6                     l7086:
 14864  0041F6  C00E  F004         	movff	___aldiv@quotient,?___aldiv
 14865  0041FA  C00F  F005         	movff	___aldiv@quotient+1,?___aldiv+1
 14866  0041FE  C010  F006         	movff	___aldiv@quotient+2,?___aldiv+2
 14867  004202  C011  F007         	movff	___aldiv@quotient+3,?___aldiv+3
 14868  004206  0012               	return		;funcret
 14869  004208                     __end_of___aldiv:
 14870                           	opt callstack 0
 14871                           
 14872 ;; *************** function _LED_Enable *****************
 14873 ;; Defined at:
 14874 ;;		line 3 in file "src/leds.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;  led             1    wreg     enum E3160
 14877 ;; Auto vars:     Size  Location     Type
 14878 ;;  led             1    5[COMRAM] enum E3160
 14879 ;; Return value:  Size  Location     Type
 14880 ;;                  1    wreg      void 
 14881 ;; Registers used:
 14882 ;;		wreg, status,2, status,0
 14883 ;; Tracked objects:
 14884 ;;		On entry : 0/0
 14885 ;;		On exit  : 0/0
 14886 ;;		Unchanged: 0/0
 14887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14888 ;;      Params:         0       0       0       0       0       0       0       0       0
 14889 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14890 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14891 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14892 ;;Total ram usage:        3 bytes
 14893 ;; Hardware stack levels used:    1
 14894 ;; Hardware stack levels required when called:    2
 14895 ;; This function calls:
 14896 ;;		Nothing
 14897 ;; This function is called by:
 14898 ;;		_SYSTEM_Init
 14899 ;; This function uses a non-reentrant model
 14900 ;;
 14901                           
 14902                           	psect	text60
 14903  004DFA                     __ptext60:
 14904                           	opt callstack 0
 14905  004DFA                     _LED_Enable:
 14906                           	opt callstack 27
 14907                           
 14908                           ;incstack = 0
 14909                           ;LED_Enable@led stored from wreg
 14910  004DFA  6E06               	movwf	LED_Enable@led^0,c
 14911  004DFC                     
 14912                           ;src/leds.c: 3: void LED_Enable(LED led);src/leds.c: 4: {;src/leds.c: 5:     switch (led
      +                          )
 14913  004DFC  EF10  F027         	goto	l3772
 14914  004E00                     l281:
 14915                           
 14916                           ;src/leds.c: 8:             TRISBbits.TRISB4 = 0;
 14917  004E00  9893               	bcf	147,4,c	;volatile
 14918                           
 14919                           ;src/leds.c: 9:             LATBbits.LATB4 = 0;
 14920  004E02  988A               	bcf	138,4,c	;volatile
 14921                           
 14922                           ;src/leds.c: 10:             break;
 14923  004E04  EF2D  F027         	goto	l286
 14924  004E08                     l283:
 14925                           
 14926                           ;src/leds.c: 12:             TRISBbits.TRISB5 = 0;
 14927  004E08  9A93               	bcf	147,5,c	;volatile
 14928                           
 14929                           ;src/leds.c: 13:             LATBbits.LATB5 = 0;
 14930  004E0A  9A8A               	bcf	138,5,c	;volatile
 14931                           
 14932                           ;src/leds.c: 14:             break;
 14933  004E0C  EF2D  F027         	goto	l286
 14934  004E10                     l284:
 14935                           
 14936                           ;src/leds.c: 16:             TRISBbits.TRISB6 = 0;
 14937  004E10  9C93               	bcf	147,6,c	;volatile
 14938                           
 14939                           ;src/leds.c: 17:             LATBbits.LATB6 = 0;
 14940  004E12  9C8A               	bcf	138,6,c	;volatile
 14941                           
 14942                           ;src/leds.c: 18:             break;
 14943  004E14  EF2D  F027         	goto	l286
 14944  004E18                     l285:
 14945                           
 14946                           ;src/leds.c: 20:             TRISBbits.TRISB7 = 0;
 14947  004E18  9E93               	bcf	147,7,c	;volatile
 14948                           
 14949                           ;src/leds.c: 21:             LATBbits.LATB7 = 0;
 14950  004E1A  9E8A               	bcf	138,7,c	;volatile
 14951                           
 14952                           ;src/leds.c: 22:     }
 14953  004E1C  EF2D  F027         	goto	l286
 14954  004E20                     l3772:
 14955  004E20  5006               	movf	LED_Enable@led^0,w,c
 14956  004E22  6E04               	movwf	??_LED_Enable^0,c
 14957  004E24  6A05               	clrf	(??_LED_Enable+1)^0,c
 14958                           
 14959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14960                           ; Switch size 1, requested type "simple"
 14961                           ; Number of cases is 1, Range of values is 0 to 0
 14962                           ; switch strategies available:
 14963                           ; Name         Instructions Cycles
 14964                           ; simple_byte            4     3 (average)
 14965                           ;	Chosen strategy is simple_byte
 14966  004E26  5005               	movf	(??_LED_Enable+1)^0,w,c
 14967  004E28  0A00               	xorlw	0	; case 0
 14968  004E2A  B4D8               	btfsc	status,2,c
 14969  004E2C  EF1A  F027         	goto	l9450
 14970  004E30  EF2D  F027         	goto	l286
 14971  004E34                     l9450:
 14972                           
 14973                           ; Switch size 1, requested type "simple"
 14974                           ; Number of cases is 4, Range of values is 0 to 3
 14975                           ; switch strategies available:
 14976                           ; Name         Instructions Cycles
 14977                           ; simple_byte           13     7 (average)
 14978                           ;	Chosen strategy is simple_byte
 14979  004E34  5004               	movf	??_LED_Enable^0,w,c
 14980  004E36  0A00               	xorlw	0	; case 0
 14981  004E38  B4D8               	btfsc	status,2,c
 14982  004E3A  EF00  F027         	goto	l281
 14983  004E3E  0A01               	xorlw	1	; case 1
 14984  004E40  B4D8               	btfsc	status,2,c
 14985  004E42  EF04  F027         	goto	l283
 14986  004E46  0A03               	xorlw	3	; case 2
 14987  004E48  B4D8               	btfsc	status,2,c
 14988  004E4A  EF08  F027         	goto	l284
 14989  004E4E  0A01               	xorlw	1	; case 3
 14990  004E50  B4D8               	btfsc	status,2,c
 14991  004E52  EF0C  F027         	goto	l285
 14992  004E56  EF2D  F027         	goto	l286
 14993  004E5A                     l286:
 14994  004E5A  0012               	return		;funcret
 14995  004E5C                     __end_of_LED_Enable:
 14996                           	opt callstack 0
 14997                           
 14998 ;; *************** function _LCD_Init *****************
 14999 ;; Defined at:
 15000 ;;		line 7 in file "src/lcd.c"
 15001 ;; Parameters:    Size  Location     Type
 15002 ;;		None
 15003 ;; Auto vars:     Size  Location     Type
 15004 ;;		None
 15005 ;; Return value:  Size  Location     Type
 15006 ;;                  1    wreg      void 
 15007 ;; Registers used:
 15008 ;;		wreg, status,2, status,0, cstack
 15009 ;; Tracked objects:
 15010 ;;		On entry : 0/0
 15011 ;;		On exit  : 0/0
 15012 ;;		Unchanged: 0/0
 15013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15014 ;;      Params:         0       0       0       0       0       0       0       0       0
 15015 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15016 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15017 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15018 ;;Total ram usage:        1 bytes
 15019 ;; Hardware stack levels used:    1
 15020 ;; Hardware stack levels required when called:    5
 15021 ;; This function calls:
 15022 ;;		_LCD_SendCmd
 15023 ;; This function is called by:
 15024 ;;		_SYSTEM_Init
 15025 ;; This function uses a non-reentrant model
 15026 ;;
 15027                           
 15028                           	psect	text61
 15029  0048CE                     __ptext61:
 15030                           	opt callstack 0
 15031  0048CE                     _LCD_Init:
 15032                           	opt callstack 24
 15033  0048CE                     
 15034                           ;src/lcd.c: 9:     TRISD = 0x00;
 15035  0048CE  0E00               	movlw	0
 15036  0048D0  6E95               	movwf	149,c	;volatile
 15037  0048D2                     
 15038                           ;src/lcd.c: 10:     LATDbits.LATD2 = 0;
 15039  0048D2  948C               	bcf	140,2,c	;volatile
 15040  0048D4                     
 15041                           ;src/lcd.c: 11:     LATDbits.LATD0 = 0;
 15042  0048D4  908C               	bcf	140,0,c	;volatile
 15043  0048D6                     
 15044                           ;src/lcd.c: 12:     LATDbits.LATD1 = 0;
 15045  0048D6  928C               	bcf	140,1,c	;volatile
 15046  0048D8                     
 15047                           ;src/lcd.c: 14:     _delay((unsigned long)((15)*(48000000/4000.0)));
 15048  0048D8  0EEA               	movlw	234
 15049  0048DA  6E08               	movwf	??_LCD_Init^0,c
 15050  0048DC  0EC3               	movlw	195
 15051  0048DE                     u10697:
 15052  0048DE  2EE8               	decfsz	wreg,f,c
 15053  0048E0  D7FE               	bra	u10697
 15054  0048E2  2E08               	decfsz	??_LCD_Init^0,f,c
 15055  0048E4  D7FC               	bra	u10697
 15056  0048E6  F000               	nop	
 15057  0048E8                     
 15058                           ;src/lcd.c: 15:     LCD_SendCmd(0x03,0);
 15059  0048E8  0E00               	movlw	0
 15060  0048EA  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15061  0048EC  0E03               	movlw	3
 15062  0048EE  ECAE  F029         	call	_LCD_SendCmd
 15063  0048F2                     
 15064                           ;src/lcd.c: 16:     _delay((unsigned long)((4)*(48000000/4000.0)));
 15065  0048F2  0E3F               	movlw	63
 15066  0048F4  6E08               	movwf	??_LCD_Init^0,c
 15067  0048F6  0E55               	movlw	85
 15068  0048F8                     u10707:
 15069  0048F8  2EE8               	decfsz	wreg,f,c
 15070  0048FA  D7FE               	bra	u10707
 15071  0048FC  2E08               	decfsz	??_LCD_Init^0,f,c
 15072  0048FE  D7FC               	bra	u10707
 15073  004900  F000               	nop	
 15074  004902                     
 15075                           ;src/lcd.c: 17:     LCD_SendCmd(0x03,0);
 15076  004902  0E00               	movlw	0
 15077  004904  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15078  004906  0E03               	movlw	3
 15079  004908  ECAE  F029         	call	_LCD_SendCmd
 15080  00490C                     
 15081                           ;src/lcd.c: 18:     _delay((unsigned long)((4)*(48000000/4000.0)));
 15082  00490C  0E3F               	movlw	63
 15083  00490E  6E08               	movwf	??_LCD_Init^0,c
 15084  004910  0E55               	movlw	85
 15085  004912                     u10717:
 15086  004912  2EE8               	decfsz	wreg,f,c
 15087  004914  D7FE               	bra	u10717
 15088  004916  2E08               	decfsz	??_LCD_Init^0,f,c
 15089  004918  D7FC               	bra	u10717
 15090  00491A  F000               	nop	
 15091  00491C                     
 15092                           ;src/lcd.c: 19:     LCD_SendCmd(0x03,0);
 15093  00491C  0E00               	movlw	0
 15094  00491E  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15095  004920  0E03               	movlw	3
 15096  004922  ECAE  F029         	call	_LCD_SendCmd
 15097  004926                     
 15098                           ;src/lcd.c: 20:     LCD_SendCmd(0x02,0);
 15099  004926  0E00               	movlw	0
 15100  004928  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15101  00492A  0E02               	movlw	2
 15102  00492C  ECAE  F029         	call	_LCD_SendCmd
 15103  004930                     
 15104                           ;src/lcd.c: 21:     LCD_SendCmd(0x28,1);
 15105  004930  0E01               	movlw	1
 15106  004932  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15107  004934  0E28               	movlw	40
 15108  004936  ECAE  F029         	call	_LCD_SendCmd
 15109  00493A                     
 15110                           ;src/lcd.c: 22:     LCD_SendCmd(0x0E,1);
 15111  00493A  0E01               	movlw	1
 15112  00493C  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15113  00493E  0E0E               	movlw	14
 15114  004940  ECAE  F029         	call	_LCD_SendCmd
 15115  004944                     
 15116                           ;src/lcd.c: 23:     LCD_SendCmd(0x01,1);
 15117  004944  0E01               	movlw	1
 15118  004946  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15119  004948  0E01               	movlw	1
 15120  00494A  ECAE  F029         	call	_LCD_SendCmd
 15121  00494E                     
 15122                           ;src/lcd.c: 24:     _delay((unsigned long)((1)*(48000000/4000.0)));
 15123  00494E  0E10               	movlw	16
 15124  004950  6E08               	movwf	??_LCD_Init^0,c
 15125  004952  0E94               	movlw	148
 15126  004954                     u10727:
 15127  004954  2EE8               	decfsz	wreg,f,c
 15128  004956  D7FE               	bra	u10727
 15129  004958  2E08               	decfsz	??_LCD_Init^0,f,c
 15130  00495A  D7FC               	bra	u10727
 15131  00495C  D000               	nop2	
 15132  00495E                     
 15133                           ;src/lcd.c: 25:     LCD_SendCmd(0x06,1);
 15134  00495E  0E01               	movlw	1
 15135  004960  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15136  004962  0E06               	movlw	6
 15137  004964  ECAE  F029         	call	_LCD_SendCmd
 15138  004968                     
 15139                           ;src/lcd.c: 26:     LCD_SendCmd(0x80,1);
 15140  004968  0E01               	movlw	1
 15141  00496A  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15142  00496C  0E80               	movlw	128
 15143  00496E  ECAE  F029         	call	_LCD_SendCmd
 15144  004972  0012               	return		;funcret
 15145  004974                     __end_of_LCD_Init:
 15146                           	opt callstack 0
 15147                           
 15148 ;; *************** function _INTERRUPT_Tmr0 *****************
 15149 ;; Defined at:
 15150 ;;		line 44 in file "src/interrupts.c"
 15151 ;; Parameters:    Size  Location     Type
 15152 ;;		None
 15153 ;; Auto vars:     Size  Location     Type
 15154 ;;		None
 15155 ;; Return value:  Size  Location     Type
 15156 ;;                  1    wreg      void 
 15157 ;; Registers used:
 15158 ;;		None
 15159 ;; Tracked objects:
 15160 ;;		On entry : 0/0
 15161 ;;		On exit  : 0/0
 15162 ;;		Unchanged: 0/0
 15163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15164 ;;      Params:         0       0       0       0       0       0       0       0       0
 15165 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15166 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15167 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15168 ;;Total ram usage:        0 bytes
 15169 ;; Hardware stack levels used:    1
 15170 ;; Hardware stack levels required when called:    2
 15171 ;; This function calls:
 15172 ;;		Nothing
 15173 ;; This function is called by:
 15174 ;;		_SYSTEM_Init
 15175 ;; This function uses a non-reentrant model
 15176 ;;
 15177                           
 15178                           	psect	text62
 15179  005498                     __ptext62:
 15180                           	opt callstack 0
 15181  005498                     _INTERRUPT_Tmr0:
 15182                           	opt callstack 27
 15183  005498                     
 15184                           ;src/interrupts.c: 46:  INTCONbits.TMR0IE = 1;
 15185  005498  8AF2               	bsf	242,5,c	;volatile
 15186                           
 15187                           ;src/interrupts.c: 47:  INTCONbits.TMR0IF = 0;
 15188  00549A  94F2               	bcf	242,2,c	;volatile
 15189  00549C  0012               	return		;funcret
 15190  00549E                     __end_of_INTERRUPT_Tmr0:
 15191                           	opt callstack 0
 15192                           
 15193 ;; *************** function _INTERRUPT_Init *****************
 15194 ;; Defined at:
 15195 ;;		line 3 in file "src/interrupts.c"
 15196 ;; Parameters:    Size  Location     Type
 15197 ;;		None
 15198 ;; Auto vars:     Size  Location     Type
 15199 ;;		None
 15200 ;; Return value:  Size  Location     Type
 15201 ;;                  1    wreg      void 
 15202 ;; Registers used:
 15203 ;;		None
 15204 ;; Tracked objects:
 15205 ;;		On entry : 0/0
 15206 ;;		On exit  : 0/0
 15207 ;;		Unchanged: 0/0
 15208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15209 ;;      Params:         0       0       0       0       0       0       0       0       0
 15210 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15211 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15212 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15213 ;;Total ram usage:        0 bytes
 15214 ;; Hardware stack levels used:    1
 15215 ;; Hardware stack levels required when called:    2
 15216 ;; This function calls:
 15217 ;;		Nothing
 15218 ;; This function is called by:
 15219 ;;		_SYSTEM_Init
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text63
 15224  005490                     __ptext63:
 15225                           	opt callstack 0
 15226  005490                     _INTERRUPT_Init:
 15227                           	opt callstack 27
 15228  005490                     
 15229                           ;src/interrupts.c: 5:  RCONbits.IPEN = 0;
 15230  005490  9ED0               	bcf	208,7,c	;volatile
 15231                           
 15232                           ;src/interrupts.c: 7:     INTCONbits.GIEH = 1;
 15233  005492  8EF2               	bsf	242,7,c	;volatile
 15234                           
 15235                           ;src/interrupts.c: 8:     INTCONbits.GIEL = 1;
 15236  005494  8CF2               	bsf	242,6,c	;volatile
 15237  005496  0012               	return		;funcret
 15238  005498                     __end_of_INTERRUPT_Init:
 15239                           	opt callstack 0
 15240                           
 15241 ;; *************** function _DHT11_Init *****************
 15242 ;; Defined at:
 15243 ;;		line 6 in file "src/dht11.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;		None
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;		None
 15248 ;; Return value:  Size  Location     Type
 15249 ;;                  1    wreg      void 
 15250 ;; Registers used:
 15251 ;;		None
 15252 ;; Tracked objects:
 15253 ;;		On entry : 0/0
 15254 ;;		On exit  : 0/0
 15255 ;;		Unchanged: 0/0
 15256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15257 ;;      Params:         0       0       0       0       0       0       0       0       0
 15258 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15259 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15260 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15261 ;;Total ram usage:        0 bytes
 15262 ;; Hardware stack levels used:    1
 15263 ;; Hardware stack levels required when called:    2
 15264 ;; This function calls:
 15265 ;;		Nothing
 15266 ;; This function is called by:
 15267 ;;		_SYSTEM_Init
 15268 ;; This function uses a non-reentrant model
 15269 ;;
 15270                           
 15271                           	psect	text64
 15272  00549E                     __ptext64:
 15273                           	opt callstack 0
 15274  00549E                     _DHT11_Init:
 15275                           	opt callstack 27
 15276  00549E                     
 15277                           ;src/dht11.c: 8:  TRISCbits.TRISC0 = 0;
 15278  00549E  9094               	bcf	148,0,c	;volatile
 15279                           
 15280                           ;src/dht11.c: 9:  LATCbits.LATC0 = 1;
 15281  0054A0  808B               	bsf	139,0,c	;volatile
 15282  0054A2  0012               	return		;funcret
 15283  0054A4                     __end_of_DHT11_Init:
 15284                           	opt callstack 0
 15285                           
 15286 ;; *************** function _BLED_Enable *****************
 15287 ;; Defined at:
 15288 ;;		line 79 in file "src/leds.c"
 15289 ;; Parameters:    Size  Location     Type
 15290 ;;  biled           1    wreg     enum E3166
 15291 ;; Auto vars:     Size  Location     Type
 15292 ;;  biled           1    5[COMRAM] enum E3166
 15293 ;; Return value:  Size  Location     Type
 15294 ;;                  1    wreg      void 
 15295 ;; Registers used:
 15296 ;;		wreg, status,2, status,0
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15302 ;;      Params:         0       0       0       0       0       0       0       0       0
 15303 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15304 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15305 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15306 ;;Total ram usage:        3 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; Hardware stack levels required when called:    2
 15309 ;; This function calls:
 15310 ;;		Nothing
 15311 ;; This function is called by:
 15312 ;;		_SYSTEM_Init
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           	psect	text65
 15317  005006                     __ptext65:
 15318                           	opt callstack 0
 15319  005006                     _BLED_Enable:
 15320                           	opt callstack 27
 15321                           
 15322                           ;incstack = 0
 15323                           ;BLED_Enable@biled stored from wreg
 15324  005006  6E06               	movwf	BLED_Enable@biled^0,c
 15325  005008                     
 15326                           ;src/leds.c: 79: void BLED_Enable(BILED biled);src/leds.c: 80: {;src/leds.c: 81:     swi
      +                          tch (biled)
 15327  005008  EF12  F028         	goto	l3764
 15328  00500C                     l317:
 15329                           
 15330                           ;src/leds.c: 84:             TRISEbits.RE1 = 0;
 15331  00500C  9296               	bcf	150,1,c	;volatile
 15332                           
 15333                           ;src/leds.c: 85:             TRISEbits.RE0 = 0;
 15334  00500E  9096               	bcf	150,0,c	;volatile
 15335                           
 15336                           ;src/leds.c: 86:             LATEbits.LATE1 = 0;
 15337  005010  928D               	bcf	141,1,c	;volatile
 15338                           
 15339                           ;src/leds.c: 87:             LATEbits.LATE0 = 0;
 15340  005012  908D               	bcf	141,0,c	;volatile
 15341                           
 15342                           ;src/leds.c: 88:             break;
 15343  005014  EF27  F028         	goto	l320
 15344  005018                     l319:
 15345                           
 15346                           ;src/leds.c: 90:             TRISCbits.RC2 = 0;
 15347  005018  9494               	bcf	148,2,c	;volatile
 15348                           
 15349                           ;src/leds.c: 91:             TRISCbits.RC1 = 0;
 15350  00501A  9294               	bcf	148,1,c	;volatile
 15351                           
 15352                           ;src/leds.c: 92:             LATCbits.LATC2 = 0;
 15353  00501C  948B               	bcf	139,2,c	;volatile
 15354                           
 15355                           ;src/leds.c: 93:             LATCbits.LATC1 = 0;
 15356  00501E  928B               	bcf	139,1,c	;volatile
 15357                           
 15358                           ;src/leds.c: 94:     }
 15359  005020  EF27  F028         	goto	l320
 15360  005024                     l3764:
 15361  005024  5006               	movf	BLED_Enable@biled^0,w,c
 15362  005026  6E04               	movwf	??_BLED_Enable^0,c
 15363  005028  6A05               	clrf	(??_BLED_Enable+1)^0,c
 15364                           
 15365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15366                           ; Switch size 1, requested type "simple"
 15367                           ; Number of cases is 1, Range of values is 0 to 0
 15368                           ; switch strategies available:
 15369                           ; Name         Instructions Cycles
 15370                           ; simple_byte            4     3 (average)
 15371                           ;	Chosen strategy is simple_byte
 15372  00502A  5005               	movf	(??_BLED_Enable+1)^0,w,c
 15373  00502C  0A00               	xorlw	0	; case 0
 15374  00502E  B4D8               	btfsc	status,2,c
 15375  005030  EF1C  F028         	goto	l9452
 15376  005034  EF27  F028         	goto	l320
 15377  005038                     l9452:
 15378                           
 15379                           ; Switch size 1, requested type "simple"
 15380                           ; Number of cases is 2, Range of values is 0 to 1
 15381                           ; switch strategies available:
 15382                           ; Name         Instructions Cycles
 15383                           ; simple_byte            7     4 (average)
 15384                           ;	Chosen strategy is simple_byte
 15385  005038  5004               	movf	??_BLED_Enable^0,w,c
 15386  00503A  0A00               	xorlw	0	; case 0
 15387  00503C  B4D8               	btfsc	status,2,c
 15388  00503E  EF06  F028         	goto	l317
 15389  005042  0A01               	xorlw	1	; case 1
 15390  005044  B4D8               	btfsc	status,2,c
 15391  005046  EF0C  F028         	goto	l319
 15392  00504A  EF27  F028         	goto	l320
 15393  00504E                     l320:
 15394  00504E  0012               	return		;funcret
 15395  005050                     __end_of_BLED_Enable:
 15396                           	opt callstack 0
 15397                           
 15398 ;; *************** function _LCD_DisplayCtrl *****************
 15399 ;; Defined at:
 15400 ;;		line 93 in file "src/lcd.c"
 15401 ;; Parameters:    Size  Location     Type
 15402 ;;  disOn           1    wreg     _Bool 
 15403 ;;  curOn           1    7[COMRAM] _Bool 
 15404 ;;  curBlink        1    8[COMRAM] _Bool 
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;  disOn           1    9[COMRAM] _Bool 
 15407 ;;  cmd             1   10[COMRAM] unsigned char 
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      void 
 15410 ;; Registers used:
 15411 ;;		wreg, status,2, status,0, cstack
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15417 ;;      Params:         2       0       0       0       0       0       0       0       0
 15418 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15420 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15421 ;;Total ram usage:        4 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:    5
 15424 ;; This function calls:
 15425 ;;		_LCD_SendCmd
 15426 ;; This function is called by:
 15427 ;;		_main
 15428 ;;		_KBDSerial_task
 15429 ;; This function uses a non-reentrant model
 15430 ;;
 15431                           
 15432                           	psect	text66
 15433  0053D2                     __ptext66:
 15434                           	opt callstack 0
 15435  0053D2                     _LCD_DisplayCtrl:
 15436                           	opt callstack 25
 15437                           
 15438                           ;incstack = 0
 15439                           ;LCD_DisplayCtrl@disOn stored from wreg
 15440  0053D2  6E0A               	movwf	LCD_DisplayCtrl@disOn^0,c
 15441  0053D4                     
 15442                           ;src/lcd.c: 93: void LCD_DisplayCtrl(_Bool disOn, _Bool curOn, _Bool curBlink);src/lcd.c
      +                          : 94: {;src/lcd.c: 95:     uint8_t cmd = 0b00001000;
 15443  0053D4  0E08               	movlw	8
 15444  0053D6  6E0B               	movwf	LCD_DisplayCtrl@cmd^0,c
 15445  0053D8                     
 15446                           ;src/lcd.c: 96:     cmd |= (disOn << 2);
 15447  0053D8  440A               	rlncf	LCD_DisplayCtrl@disOn^0,w,c
 15448  0053DA  46E8               	rlncf	wreg,f,c
 15449  0053DC  0BFC               	andlw	252
 15450  0053DE  120B               	iorwf	LCD_DisplayCtrl@cmd^0,f,c
 15451  0053E0                     
 15452                           ;src/lcd.c: 97:     cmd |= (curOn << 1);
 15453  0053E0  5008               	movf	LCD_DisplayCtrl@curOn^0,w,c
 15454  0053E2  2408               	addwf	LCD_DisplayCtrl@curOn^0,w,c
 15455  0053E4  120B               	iorwf	LCD_DisplayCtrl@cmd^0,f,c
 15456  0053E6                     
 15457                           ;src/lcd.c: 98:     cmd |= (curBlink << 0);
 15458  0053E6  5009               	movf	LCD_DisplayCtrl@curBlink^0,w,c
 15459  0053E8  120B               	iorwf	LCD_DisplayCtrl@cmd^0,f,c
 15460  0053EA                     
 15461                           ;src/lcd.c: 99:     LCD_SendCmd(cmd,1);
 15462  0053EA  0E01               	movlw	1
 15463  0053EC  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 15464  0053EE  500B               	movf	LCD_DisplayCtrl@cmd^0,w,c
 15465  0053F0  ECAE  F029         	call	_LCD_SendCmd
 15466  0053F4  0012               	return		;funcret
 15467  0053F6                     __end_of_LCD_DisplayCtrl:
 15468                           	opt callstack 0
 15469                           
 15470 ;; *************** function _LCD_SendCmd *****************
 15471 ;; Defined at:
 15472 ;;		line 44 in file "src/lcd.c"
 15473 ;; Parameters:    Size  Location     Type
 15474 ;;  data            1    wreg     unsigned char 
 15475 ;;  fbyte           1    5[COMRAM] _Bool 
 15476 ;; Auto vars:     Size  Location     Type
 15477 ;;  data            1    6[COMRAM] unsigned char 
 15478 ;; Return value:  Size  Location     Type
 15479 ;;                  1    wreg      void 
 15480 ;; Registers used:
 15481 ;;		wreg, status,2, status,0, cstack
 15482 ;; Tracked objects:
 15483 ;;		On entry : 0/0
 15484 ;;		On exit  : 0/0
 15485 ;;		Unchanged: 0/0
 15486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15487 ;;      Params:         1       0       0       0       0       0       0       0       0
 15488 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15490 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15491 ;;Total ram usage:        2 bytes
 15492 ;; Hardware stack levels used:    1
 15493 ;; Hardware stack levels required when called:    4
 15494 ;; This function calls:
 15495 ;;		_LCD_SendNibble
 15496 ;; This function is called by:
 15497 ;;		_LCD_Init
 15498 ;;		_LCD_CLS
 15499 ;;		_LCD_DisplayCtrl
 15500 ;;		_LCD_SetRowCol
 15501 ;;		_LCD_RH
 15502 ;;		_LCD_DisplayShift
 15503 ;;		_LCD_EntryMode
 15504 ;;		_LCD_SetCGRAM
 15505 ;; This function uses a non-reentrant model
 15506 ;;
 15507                           
 15508                           	psect	text67
 15509  00535C                     __ptext67:
 15510                           	opt callstack 0
 15511  00535C                     _LCD_SendCmd:
 15512                           	opt callstack 21
 15513                           
 15514                           ;incstack = 0
 15515                           ;LCD_SendCmd@data stored from wreg
 15516  00535C  6E07               	movwf	LCD_SendCmd@data^0,c
 15517  00535E                     
 15518                           ;src/lcd.c: 44: void LCD_SendCmd(uint8_t data,_Bool fbyte);src/lcd.c: 45: {;src/lcd.c: 4
      +                          6:     LATDbits.LATD2 = 0;
 15519  00535E  948C               	bcf	140,2,c	;volatile
 15520                           
 15521                           ;src/lcd.c: 47:     LATDbits.LATD1 = 0;
 15522  005360  928C               	bcf	140,1,c	;volatile
 15523  005362                     
 15524                           ;src/lcd.c: 48:     if(fbyte)
 15525  005362  5006               	movf	LCD_SendCmd@fbyte^0,w,c
 15526  005364  B4D8               	btfsc	status,2,c
 15527  005366  EFB7  F029         	goto	u7431
 15528  00536A  EFB9  F029         	goto	u7430
 15529  00536E                     u7431:
 15530  00536E  EFBC  F029         	goto	l7036
 15531  005372                     u7430:
 15532  005372                     
 15533                           ;src/lcd.c: 49:         LCD_SendNibble(data);
 15534  005372  5007               	movf	LCD_SendCmd@data^0,w,c
 15535  005374  EC39  F02A         	call	_LCD_SendNibble
 15536  005378                     l7036:
 15537                           
 15538                           ;src/lcd.c: 50:     data <<= 4;
 15539  005378  3A07               	swapf	LCD_SendCmd@data^0,f,c
 15540  00537A  0EF0               	movlw	240
 15541  00537C  1607               	andwf	LCD_SendCmd@data^0,f,c
 15542  00537E                     
 15543                           ;src/lcd.c: 51:     LCD_SendNibble(data);
 15544  00537E  5007               	movf	LCD_SendCmd@data^0,w,c
 15545  005380  EC39  F02A         	call	_LCD_SendNibble
 15546  005384  0012               	return		;funcret
 15547  005386                     __end_of_LCD_SendCmd:
 15548                           	opt callstack 0
 15549                           
 15550 ;; *************** function _LCD_SendNibble *****************
 15551 ;; Defined at:
 15552 ;;		line 37 in file "src/lcd.c"
 15553 ;; Parameters:    Size  Location     Type
 15554 ;;  data            1    wreg     unsigned char 
 15555 ;; Auto vars:     Size  Location     Type
 15556 ;;  data            1    4[COMRAM] unsigned char 
 15557 ;; Return value:  Size  Location     Type
 15558 ;;                  1    wreg      void 
 15559 ;; Registers used:
 15560 ;;		wreg, status,2, status,0, cstack
 15561 ;; Tracked objects:
 15562 ;;		On entry : 0/0
 15563 ;;		On exit  : 0/0
 15564 ;;		Unchanged: 0/0
 15565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15566 ;;      Params:         0       0       0       0       0       0       0       0       0
 15567 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15568 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15569 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15570 ;;Total ram usage:        1 bytes
 15571 ;; Hardware stack levels used:    1
 15572 ;; Hardware stack levels required when called:    3
 15573 ;; This function calls:
 15574 ;;		_LCD_Lat
 15575 ;; This function is called by:
 15576 ;;		_LCD_SendCmd
 15577 ;;		_LCD_WriteByte
 15578 ;; This function uses a non-reentrant model
 15579 ;;
 15580                           
 15581                           	psect	text68
 15582  005472                     __ptext68:
 15583                           	opt callstack 0
 15584  005472                     _LCD_SendNibble:
 15585                           	opt callstack 22
 15586                           
 15587                           ;incstack = 0
 15588                           ;LCD_SendNibble@data stored from wreg
 15589  005472  6E05               	movwf	LCD_SendNibble@data^0,c
 15590  005474                     
 15591                           ;src/lcd.c: 37: void LCD_SendNibble(uint8_t data);src/lcd.c: 38: {;src/lcd.c: 39:     LA
      +                          TD &= 0x0F;
 15592  005474  0E0F               	movlw	15
 15593  005476  168C               	andwf	140,f,c	;volatile
 15594                           
 15595                           ;src/lcd.c: 40:     LATD |= (data & 0xF0);
 15596  005478  5005               	movf	LCD_SendNibble@data^0,w,c
 15597  00547A  0BF0               	andlw	240
 15598  00547C  128C               	iorwf	140,f,c	;volatile
 15599  00547E                     
 15600                           ;src/lcd.c: 41:     LCD_Lat();
 15601  00547E  EC12  F02A         	call	_LCD_Lat	;wreg free
 15602  005482  0012               	return		;funcret
 15603  005484                     __end_of_LCD_SendNibble:
 15604                           	opt callstack 0
 15605                           
 15606 ;; *************** function _LCD_Lat *****************
 15607 ;; Defined at:
 15608 ;;		line 29 in file "src/lcd.c"
 15609 ;; Parameters:    Size  Location     Type
 15610 ;;		None
 15611 ;; Auto vars:     Size  Location     Type
 15612 ;;		None
 15613 ;; Return value:  Size  Location     Type
 15614 ;;                  1    wreg      void 
 15615 ;; Registers used:
 15616 ;;		wreg
 15617 ;; Tracked objects:
 15618 ;;		On entry : 0/0
 15619 ;;		On exit  : 0/0
 15620 ;;		Unchanged: 0/0
 15621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15622 ;;      Params:         0       0       0       0       0       0       0       0       0
 15623 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15624 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15625 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15626 ;;Total ram usage:        1 bytes
 15627 ;; Hardware stack levels used:    1
 15628 ;; Hardware stack levels required when called:    2
 15629 ;; This function calls:
 15630 ;;		Nothing
 15631 ;; This function is called by:
 15632 ;;		_LCD_SendNibble
 15633 ;; This function uses a non-reentrant model
 15634 ;;
 15635                           
 15636                           	psect	text69
 15637  005424                     __ptext69:
 15638                           	opt callstack 0
 15639  005424                     _LCD_Lat:
 15640                           	opt callstack 22
 15641  005424                     
 15642                           ;src/lcd.c: 31:     LATDbits.LATD0 = 1;
 15643  005424  808C               	bsf	140,0,c	;volatile
 15644  005426                     
 15645                           ;src/lcd.c: 32:     _delay((unsigned long)((1)*(48000000/4000.0)));
 15646  005426  0E10               	movlw	16
 15647  005428  6E04               	movwf	??_LCD_Lat^0,c
 15648  00542A  0E94               	movlw	148
 15649  00542C                     u10737:
 15650  00542C  2EE8               	decfsz	wreg,f,c
 15651  00542E  D7FE               	bra	u10737
 15652  005430  2E04               	decfsz	??_LCD_Lat^0,f,c
 15653  005432  D7FC               	bra	u10737
 15654  005434  D000               	nop2	
 15655  005436                     
 15656                           ;src/lcd.c: 33:     LATDbits.LATD0 = 0;
 15657  005436  908C               	bcf	140,0,c	;volatile
 15658  005438  0012               	return		;funcret
 15659  00543A                     __end_of_LCD_Lat:
 15660                           	opt callstack 0
 15661                           
 15662 ;; *************** function _BLED_Color *****************
 15663 ;; Defined at:
 15664 ;;		line 97 in file "src/leds.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;  biled           1    wreg     enum E3166
 15667 ;;  green           1    3[COMRAM] _Bool 
 15668 ;;  red             1    4[COMRAM] _Bool 
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;  biled           1    7[COMRAM] enum E3166
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  1    wreg      void 
 15673 ;; Registers used:
 15674 ;;		wreg, status,2, status,0
 15675 ;; Tracked objects:
 15676 ;;		On entry : 0/0
 15677 ;;		On exit  : 0/0
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15680 ;;      Params:         2       0       0       0       0       0       0       0       0
 15681 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15682 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15683 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15684 ;;Total ram usage:        5 bytes
 15685 ;; Hardware stack levels used:    1
 15686 ;; Hardware stack levels required when called:    2
 15687 ;; This function calls:
 15688 ;;		Nothing
 15689 ;; This function is called by:
 15690 ;;		_main
 15691 ;; This function uses a non-reentrant model
 15692 ;;
 15693                           
 15694                           	psect	text70
 15695  0046AC                     __ptext70:
 15696                           	opt callstack 0
 15697  0046AC                     _BLED_Color:
 15698                           	opt callstack 28
 15699                           
 15700                           ;incstack = 0
 15701                           ;BLED_Color@biled stored from wreg
 15702  0046AC  6E08               	movwf	BLED_Color@biled^0,c
 15703  0046AE                     
 15704                           ;src/leds.c: 97: void BLED_Color(BILED biled, _Bool green, _Bool red);src/leds.c: 98: {;
      +                          src/leds.c: 99:     switch (biled)
 15705  0046AE  EFA1  F023         	goto	l6580
 15706  0046B2                     l6576:
 15707                           
 15708                           ;src/leds.c: 102:             LATEbits.LATE1 = (green? 1 : 0);
 15709  0046B2  5004               	movf	BLED_Color@green^0,w,c
 15710  0046B4  A4D8               	btfss	status,2,c
 15711  0046B6  EF5F  F023         	goto	u7041
 15712  0046BA  EF63  F023         	goto	u7040
 15713  0046BE                     u7041:
 15714  0046BE  6A06               	clrf	??_BLED_Color^0,c
 15715  0046C0  2A06               	incf	??_BLED_Color^0,f,c
 15716  0046C2  EF64  F023         	goto	u7058
 15717  0046C6                     u7040:
 15718  0046C6  6A06               	clrf	??_BLED_Color^0,c
 15719  0046C8                     u7058:
 15720  0046C8  4606               	rlncf	??_BLED_Color^0,f,c
 15721  0046CA  508D               	movf	141,w,c	;volatile
 15722  0046CC  1806               	xorwf	??_BLED_Color^0,w,c
 15723  0046CE  0BFD               	andlw	-3
 15724  0046D0  1806               	xorwf	??_BLED_Color^0,w,c
 15725  0046D2  6E8D               	movwf	141,c	;volatile
 15726                           
 15727                           ;src/leds.c: 103:             LATEbits.LATE0 = (red? 1 : 0);
 15728  0046D4  5005               	movf	BLED_Color@red^0,w,c
 15729  0046D6  A4D8               	btfss	status,2,c
 15730  0046D8  EF70  F023         	goto	u7061
 15731  0046DC  EF74  F023         	goto	u7060
 15732  0046E0                     u7061:
 15733  0046E0  6A06               	clrf	??_BLED_Color^0,c
 15734  0046E2  2A06               	incf	??_BLED_Color^0,f,c
 15735  0046E4  EF75  F023         	goto	u7078
 15736  0046E8                     u7060:
 15737  0046E8  6A06               	clrf	??_BLED_Color^0,c
 15738  0046EA                     u7078:
 15739  0046EA  508D               	movf	141,w,c	;volatile
 15740  0046EC  1806               	xorwf	??_BLED_Color^0,w,c
 15741  0046EE  0BFE               	andlw	-2
 15742  0046F0  1806               	xorwf	??_BLED_Color^0,w,c
 15743  0046F2  6E8D               	movwf	141,c	;volatile
 15744                           
 15745                           ;src/leds.c: 104:             break;
 15746  0046F4  EFB6  F023         	goto	l327
 15747  0046F8                     l6578:
 15748                           
 15749                           ;src/leds.c: 106:             LATCbits.LATC2 = (green? 1 : 0);
 15750  0046F8  5004               	movf	BLED_Color@green^0,w,c
 15751  0046FA  A4D8               	btfss	status,2,c
 15752  0046FC  EF82  F023         	goto	u7081
 15753  004700  EF86  F023         	goto	u7080
 15754  004704                     u7081:
 15755  004704  6A06               	clrf	??_BLED_Color^0,c
 15756  004706  2A06               	incf	??_BLED_Color^0,f,c
 15757  004708  EF87  F023         	goto	u7098
 15758  00470C                     u7080:
 15759  00470C  6A06               	clrf	??_BLED_Color^0,c
 15760  00470E                     u7098:
 15761  00470E  4606               	rlncf	??_BLED_Color^0,f,c
 15762  004710  4606               	rlncf	??_BLED_Color^0,f,c
 15763  004712  508B               	movf	139,w,c	;volatile
 15764  004714  1806               	xorwf	??_BLED_Color^0,w,c
 15765  004716  0BFB               	andlw	-5
 15766  004718  1806               	xorwf	??_BLED_Color^0,w,c
 15767  00471A  6E8B               	movwf	139,c	;volatile
 15768                           
 15769                           ;src/leds.c: 107:             LATCbits.LATC1 = (red? 1 : 0);
 15770  00471C  5005               	movf	BLED_Color@red^0,w,c
 15771  00471E  A4D8               	btfss	status,2,c
 15772  004720  EF94  F023         	goto	u7101
 15773  004724  EF98  F023         	goto	u7100
 15774  004728                     u7101:
 15775  004728  6A06               	clrf	??_BLED_Color^0,c
 15776  00472A  2A06               	incf	??_BLED_Color^0,f,c
 15777  00472C  EF99  F023         	goto	u7118
 15778  004730                     u7100:
 15779  004730  6A06               	clrf	??_BLED_Color^0,c
 15780  004732                     u7118:
 15781  004732  4606               	rlncf	??_BLED_Color^0,f,c
 15782  004734  508B               	movf	139,w,c	;volatile
 15783  004736  1806               	xorwf	??_BLED_Color^0,w,c
 15784  004738  0BFD               	andlw	-3
 15785  00473A  1806               	xorwf	??_BLED_Color^0,w,c
 15786  00473C  6E8B               	movwf	139,c	;volatile
 15787                           
 15788                           ;src/leds.c: 108:     }
 15789  00473E  EFB6  F023         	goto	l327
 15790  004742                     l6580:
 15791  004742  5008               	movf	BLED_Color@biled^0,w,c
 15792  004744  6E06               	movwf	??_BLED_Color^0,c
 15793  004746  6A07               	clrf	(??_BLED_Color+1)^0,c
 15794                           
 15795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15796                           ; Switch size 1, requested type "simple"
 15797                           ; Number of cases is 1, Range of values is 0 to 0
 15798                           ; switch strategies available:
 15799                           ; Name         Instructions Cycles
 15800                           ; simple_byte            4     3 (average)
 15801                           ;	Chosen strategy is simple_byte
 15802  004748  5007               	movf	(??_BLED_Color+1)^0,w,c
 15803  00474A  0A00               	xorlw	0	; case 0
 15804  00474C  B4D8               	btfsc	status,2,c
 15805  00474E  EFAB  F023         	goto	l9454
 15806  004752  EFB6  F023         	goto	l327
 15807  004756                     l9454:
 15808                           
 15809                           ; Switch size 1, requested type "simple"
 15810                           ; Number of cases is 2, Range of values is 0 to 1
 15811                           ; switch strategies available:
 15812                           ; Name         Instructions Cycles
 15813                           ; simple_byte            7     4 (average)
 15814                           ;	Chosen strategy is simple_byte
 15815  004756  5006               	movf	??_BLED_Color^0,w,c
 15816  004758  0A00               	xorlw	0	; case 0
 15817  00475A  B4D8               	btfsc	status,2,c
 15818  00475C  EF59  F023         	goto	l6576
 15819  004760  0A01               	xorlw	1	; case 1
 15820  004762  B4D8               	btfsc	status,2,c
 15821  004764  EF7C  F023         	goto	l6578
 15822  004768  EFB6  F023         	goto	l327
 15823  00476C                     l327:
 15824  00476C  0012               	return		;funcret
 15825  00476E                     __end_of_BLED_Color:
 15826                           	opt callstack 0
 15827                           
 15828 ;; *************** function _myISR *****************
 15829 ;; Defined at:
 15830 ;;		line 23 in file "src/main.c"
 15831 ;; Parameters:    Size  Location     Type
 15832 ;;		None
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;		None
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  1    wreg      void 
 15837 ;; Registers used:
 15838 ;;		wreg, status,2, status,0, cstack
 15839 ;; Tracked objects:
 15840 ;;		On entry : 0/0
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15844 ;;      Params:         0       0       0       0       0       0       0       0       0
 15845 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15847 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15848 ;;Total ram usage:        0 bytes
 15849 ;; Hardware stack levels used:    1
 15850 ;; Hardware stack levels required when called:    1
 15851 ;; This function calls:
 15852 ;;		_BLED_Toggle
 15853 ;; This function is called by:
 15854 ;;		Interrupt level 2
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858                           	psect	intcode
 15859  000008                     __pintcode:
 15860                           	opt callstack 0
 15861  000008                     _myISR:
 15862                           	opt callstack 21
 15863                           
 15864                           ;incstack = 0
 15865  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15866  00000A  EDD0  F028         	call	int_func,f	;refresh shadow registers
 15867                           
 15868                           	psect	intcode_body
 15869  0051A0                     __pintcode_body:
 15870                           	opt callstack 21
 15871  0051A0                     int_func:
 15872                           	opt callstack 21
 15873  0051A0  0006               	pop		; remove dummy address from shadow register refresh
 15874  0051A2                     
 15875                           ;src/main.c: 25:     if (INTCONbits.TMR0IF)
 15876  0051A2  A4F2               	btfss	242,2,c	;volatile
 15877  0051A4  EFD6  F028         	goto	i2u713_41
 15878  0051A8  EFD8  F028         	goto	i2u713_40
 15879  0051AC                     i2u713_41:
 15880  0051AC  EFEE  F028         	goto	i2l47
 15881  0051B0                     i2u713_40:
 15882  0051B0                     
 15883                           ;src/main.c: 26:     {;src/main.c: 28:         count++;
 15884  0051B0  0100               	movlb	0	; () banked
 15885  0051B2  4BE3               	infsnz	_count& (0+255),f,b
 15886  0051B4  2BE4               	incf	(_count+1)& (0+255),f,b
 15887  0051B6                     
 15888                           ; BSR set to: 0
 15889                           ;src/main.c: 29:         if(count == 10)
 15890  0051B6  0E0A               	movlw	10
 15891  0051B8  19E3               	xorwf	_count& (0+255),w,b
 15892  0051BA  11E4               	iorwf	(_count+1)& (0+255),w,b
 15893  0051BC  A4D8               	btfss	status,2,c
 15894  0051BE  EFE3  F028         	goto	i2u714_41
 15895  0051C2  EFE5  F028         	goto	i2u714_40
 15896  0051C6                     i2u714_41:
 15897  0051C6  EFED  F028         	goto	i2l6604
 15898  0051CA                     i2u714_40:
 15899  0051CA                     
 15900                           ; BSR set to: 0
 15901                           ;src/main.c: 30:         {;src/main.c: 31:             BLED_Toggle(BL1);
 15902  0051CA  0E00               	movlw	0
 15903  0051CC  EC6F  F028         	call	_BLED_Toggle
 15904  0051D0                     
 15905                           ;src/main.c: 32:             count = 0;
 15906  0051D0  0E00               	movlw	0
 15907  0051D2  0100               	movlb	0	; () banked
 15908  0051D4  6FE4               	movwf	(_count+1)& (0+255),b
 15909  0051D6  0E00               	movlw	0
 15910  0051D8  6FE3               	movwf	_count& (0+255),b
 15911  0051DA                     i2l6604:
 15912                           
 15913                           ; BSR set to: 0
 15914                           ;src/main.c: 34:         INTCONbits.TMR0IF = 0;
 15915  0051DA  94F2               	bcf	242,2,c	;volatile
 15916  0051DC                     i2l47:
 15917  0051DC  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15918  0051DE  0011               	retfie		f
 15919  0051E0                     __end_of_myISR:
 15920                           	opt callstack 0
 15921                           
 15922 ;; *************** function _BLED_Toggle *****************
 15923 ;; Defined at:
 15924 ;;		line 111 in file "src/leds.c"
 15925 ;; Parameters:    Size  Location     Type
 15926 ;;  biled           1    wreg     enum E3166
 15927 ;; Auto vars:     Size  Location     Type
 15928 ;;  biled           1    2[COMRAM] enum E3166
 15929 ;; Return value:  Size  Location     Type
 15930 ;;                  1    wreg      void 
 15931 ;; Registers used:
 15932 ;;		wreg, status,2, status,0
 15933 ;; Tracked objects:
 15934 ;;		On entry : 0/0
 15935 ;;		On exit  : 0/0
 15936 ;;		Unchanged: 0/0
 15937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15938 ;;      Params:         0       0       0       0       0       0       0       0       0
 15939 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15940 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15941 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15942 ;;Total ram usage:        3 bytes
 15943 ;; Hardware stack levels used:    1
 15944 ;; This function calls:
 15945 ;;		Nothing
 15946 ;; This function is called by:
 15947 ;;		_myISR
 15948 ;; This function uses a non-reentrant model
 15949 ;;
 15950                           
 15951                           	psect	text72
 15952  0050DE                     __ptext72:
 15953                           	opt callstack 0
 15954  0050DE                     _BLED_Toggle:
 15955                           	opt callstack 21
 15956                           
 15957                           ;incstack = 0
 15958                           ;BLED_Toggle@biled stored from wreg
 15959  0050DE  6E03               	movwf	BLED_Toggle@biled^0,c
 15960  0050E0                     
 15961                           ;src/leds.c: 111: void BLED_Toggle(BILED biled);src/leds.c: 112: {;src/leds.c: 113:     
      +                          switch (biled)
 15962  0050E0  EF7A  F028         	goto	i2l6484
 15963  0050E4                     i2l331:
 15964                           
 15965                           ;src/leds.c: 116:             LATEbits.LATE1 ^= 1;
 15966  0050E4  728D               	btg	141,1,c	;volatile
 15967                           
 15968                           ;src/leds.c: 117:             LATEbits.LATE0 ^= 1;
 15969  0050E6  708D               	btg	141,0,c	;volatile
 15970                           
 15971                           ;src/leds.c: 118:             break;
 15972  0050E8  EF8F  F028         	goto	i2l334
 15973  0050EC                     i2l333:
 15974                           
 15975                           ;src/leds.c: 120:             LATCbits.LATC2 ^= 1;
 15976  0050EC  748B               	btg	139,2,c	;volatile
 15977                           
 15978                           ;src/leds.c: 121:             LATCbits.LATC1 ^= 1;
 15979  0050EE  728B               	btg	139,1,c	;volatile
 15980                           
 15981                           ;src/leds.c: 122:     }
 15982  0050F0  EF8F  F028         	goto	i2l334
 15983  0050F4                     i2l6484:
 15984  0050F4  5003               	movf	BLED_Toggle@biled^0,w,c
 15985  0050F6  6E01               	movwf	??_BLED_Toggle^0,c
 15986  0050F8  6A02               	clrf	(??_BLED_Toggle+1)^0,c
 15987                           
 15988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15989                           ; Switch size 1, requested type "simple"
 15990                           ; Number of cases is 1, Range of values is 0 to 0
 15991                           ; switch strategies available:
 15992                           ; Name         Instructions Cycles
 15993                           ; simple_byte            4     3 (average)
 15994                           ;	Chosen strategy is simple_byte
 15995  0050FA  5002               	movf	(??_BLED_Toggle+1)^0,w,c
 15996  0050FC  0A00               	xorlw	0	; case 0
 15997  0050FE  B4D8               	btfsc	status,2,c
 15998  005100  EF84  F028         	goto	i2l9456
 15999  005104  EF8F  F028         	goto	i2l334
 16000  005108                     i2l9456:
 16001                           
 16002                           ; Switch size 1, requested type "simple"
 16003                           ; Number of cases is 2, Range of values is 0 to 1
 16004                           ; switch strategies available:
 16005                           ; Name         Instructions Cycles
 16006                           ; simple_byte            7     4 (average)
 16007                           ;	Chosen strategy is simple_byte
 16008  005108  5001               	movf	??_BLED_Toggle^0,w,c
 16009  00510A  0A00               	xorlw	0	; case 0
 16010  00510C  B4D8               	btfsc	status,2,c
 16011  00510E  EF72  F028         	goto	i2l331
 16012  005112  0A01               	xorlw	1	; case 1
 16013  005114  B4D8               	btfsc	status,2,c
 16014  005116  EF76  F028         	goto	i2l333
 16015  00511A  EF8F  F028         	goto	i2l334
 16016  00511E                     i2l334:
 16017  00511E  0012               	return		;funcret
 16018  005120                     __end_of_BLED_Toggle:
 16019                           	opt callstack 0
 16020                           
 16021                           	psect	rparam
 16022  0000                     
 16023                           	psect	temp
 16024  00005C                     btemp:
 16025                           	opt callstack 0
 16026  00005C                     	ds	1
 16027  0000                     int$flags	set	btemp
 16028  0000                     wtemp8	set	btemp+1
 16029  0000                     ttemp5	set	btemp+1
 16030  0000                     ttemp6	set	btemp+4
 16031  0000                     ttemp7	set	btemp+8
 16032                           tosu	equ	0xFFF
 16033                           tosh	equ	0xFFE
 16034                           tosl	equ	0xFFD
 16035                           stkptr	equ	0xFFC
 16036                           pclatu	equ	0xFFB
 16037                           pclath	equ	0xFFA
 16038                           pcl	equ	0xFF9
 16039                           tblptru	equ	0xFF8
 16040                           tblptrh	equ	0xFF7
 16041                           tblptrl	equ	0xFF6
 16042                           tablat	equ	0xFF5
 16043                           prodh	equ	0xFF4
 16044                           prodl	equ	0xFF3
 16045                           indf0	equ	0xFEF
 16046                           postinc0	equ	0xFEE
 16047                           postdec0	equ	0xFED
 16048                           preinc0	equ	0xFEC
 16049                           plusw0	equ	0xFEB
 16050                           fsr0h	equ	0xFEA
 16051                           fsr0l	equ	0xFE9
 16052                           wreg	equ	0xFE8
 16053                           indf1	equ	0xFE7
 16054                           postinc1	equ	0xFE6
 16055                           postdec1	equ	0xFE5
 16056                           preinc1	equ	0xFE4
 16057                           plusw1	equ	0xFE3
 16058                           fsr1h	equ	0xFE2
 16059                           fsr1l	equ	0xFE1
 16060                           bsr	equ	0xFE0
 16061                           indf2	equ	0xFDF
 16062                           postinc2	equ	0xFDE
 16063                           postdec2	equ	0xFDD
 16064                           preinc2	equ	0xFDC
 16065                           plusw2	equ	0xFDB
 16066                           fsr2h	equ	0xFDA
 16067                           fsr2l	equ	0xFD9
 16068                           status	equ	0xFD8


Data Sizes:
    Strings     350
    Constant    23
    Data        84
    BSS         268
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      91
    BANK0           160     98     159
    BANK1           256    254     254
    BANK2           256    132     228
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> my_vsprintf@format(BANK1[10]), my_vsprintf@buffer(BANK1[64]), my_vsprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), SERIAL_Printf@strout(BANK2[128]), SerialLCD_task@txt(COMRAM[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> my_vsprintf@format(BANK1[10]), my_vsprintf@buffer(BANK1[64]), my_vsprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), SERIAL_Printf@strout(BANK2[128]), SerialLCD_task@txt(COMRAM[32]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 128
		 -> LCD_Printf@strout(BANK2[128]), my_vsprintf@buffer(BANK1[64]), my_vsprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), SERIAL_Printf@strout(BANK2[128]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 128
		 -> LCD_Printf@strout(BANK2[128]), my_vsprintf@buffer(BANK1[64]), my_vsprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), SERIAL_Printf@strout(BANK2[128]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_LCD_Printf(BANK1[2]), reverse@auxstr(BANK0[64]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> my_vsprintf@buffer(BANK1[64]), my_vsprintf@ch(BANK1[2]), my_vsprintf@char_temp(BANK1[2]), my_vsprintf@string(BANK1[128]), 
		 -> ?_SERIAL_Printf(BANK1[2]), STR_6(CODE[5]), SerialLCD_task@txt(COMRAM[32]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_LCD_Printf(BANK1[2]), reverse@auxstr(BANK0[64]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> my_vsprintf@buffer(BANK1[64]), my_vsprintf@ch(BANK1[2]), my_vsprintf@char_temp(BANK1[2]), my_vsprintf@string(BANK1[128]), 
		 -> ?_SERIAL_Printf(BANK1[2]), STR_6(CODE[5]), SerialLCD_task@txt(COMRAM[32]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), my_vsprintf@ch(BANK1[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 128
		 -> my_vsprintf@string(BANK1[128]), 

    LCD_Printf@fmt	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_17(CODE[15]), STR_15(CODE[7]), STR_13(CODE[31]), STR_11(CODE[15]), 
		 -> STR_9(CODE[25]), STR_7(CODE[27]), STR_4(CODE[23]), STR_2(CODE[14]), 
		 -> STR_1(CODE[8]), 

    LCD_Printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_LCD_Printf(BANK1[2]), ?_SERIAL_Printf(BANK1[2]), 

    LCD_Write@str	PTR unsigned char  size(2) Largest target is 128
		 -> LCD_Printf@strout(BANK2[128]), 

    ftoa@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    ftoa_sci@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    normalize@val	PTR  size(2) Largest target is 4
		 -> ftoa@value(BANK0[4]), ftoa_sci@value(BANK0[4]), 

    atoui@str	PTR unsigned char  size(2) Largest target is 5
		 -> getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    itoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    reverse@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    my_vsprintf@str	PTR unsigned char  size(2) Largest target is 128
		 -> LCD_Printf@strout(BANK2[128]), SERIAL_Printf@strout(BANK2[128]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> my_vsprintf@string(BANK1[128]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    my_vsprintf@string_temp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_LCD_Printf(BANK1[2]), ?_SERIAL_Printf(BANK1[2]), STR_6(CODE[5]), SerialLCD_task@txt(COMRAM[32]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> LCD_Printf@strout(BANK2[128]), my_vsprintf@buffer(BANK1[64]), my_vsprintf@string(BANK1[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), SERIAL_Printf@strout(BANK2[128]), 

    my_vsprintf@valist	PTR PTR void  size(2) Largest target is 2
		 -> LCD_Printf@ap(BANK2[2]), SERIAL_Printf@ap(BANK2[2]), 

    my_vsprintf@sformat	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_18(CODE[16]), STR_17(CODE[15]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_14(CODE[51]), STR_13(CODE[31]), STR_12(CODE[15]), STR_11(CODE[15]), 
		 -> STR_10(CODE[23]), STR_9(CODE[25]), STR_8(CODE[23]), STR_7(CODE[27]), 
		 -> STR_5(CODE[28]), STR_4(CODE[23]), STR_3(CODE[14]), STR_2(CODE[14]), 
		 -> STR_1(CODE[8]), 

    setWidth@width	PTR int  size(2) Largest target is 2
		 -> my_vsprintf@width(BANK1[2]), 

    setWidth@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    addOx@hoS	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    addSig@numS	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    precS@precision	PTR int  size(2) Largest target is 2
		 -> my_vsprintf@prec(BANK1[2]), 

    precS@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    precI@precision	PTR int  size(2) Largest target is 2
		 -> my_vsprintf@prec(BANK1[2]), 

    precI@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    precG@precision	PTR int  size(2) Largest target is 2
		 -> my_vsprintf@prec(BANK1[2]), 

    precG@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    precE@precision	PTR int  size(2) Largest target is 2
		 -> my_vsprintf@prec(BANK1[2]), 

    precE@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    precF@precision	PTR int  size(2) Largest target is 2
		 -> my_vsprintf@prec(BANK1[2]), 

    precF@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    getWP@precision	PTR int  size(2) Largest target is 2
		 -> my_vsprintf@prec(BANK1[2]), 

    getWP@width	PTR int  size(2) Largest target is 2
		 -> my_vsprintf@width(BANK1[2]), 

    getWP@form	PTR unsigned char  size(2) Largest target is 10
		 -> my_vsprintf@format(BANK1[10]), 

    cleanS@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@format(BANK1[10]), my_vsprintf@buffer(BANK1[64]), SerialLCD_task@txt(COMRAM[32]), 

    upperCL@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    roundStr@decnum	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@buffer(BANK1[64]), 

    posc@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@format(BANK1[10]), my_vsprintf@buffer(BANK1[64]), 

    searchc@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vsprintf@format(BANK1[10]), my_vsprintf@buffer(BANK1[64]), 

    SERIAL_Printf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_18(CODE[16]), STR_16(CODE[8]), STR_14(CODE[51]), STR_12(CODE[15]), 
		 -> STR_10(CODE[23]), STR_8(CODE[23]), STR_5(CODE[28]), STR_3(CODE[14]), 

    SERIAL_Printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_LCD_Printf(BANK1[2]), ?_SERIAL_Printf(BANK1[2]), 

    SERIAL_Write@str	PTR unsigned char  size(2) Largest target is 128
		 -> SERIAL_Printf@strout(BANK2[128]), 


Critical Paths under _main in COMRAM

    _SERIAL_Write->_strlen
    _upperCL->_strlen
    _strcat->_strcpy
    _setWidth->_strlen
    _precS->_strlen
    _precI->_strlen
    _precG->_roundStr
    _precF->_roundStr
    _precE->_roundStr
    _roundStr->_posc
    _getWP->_reverse
    _searchc->_strlen
    _posc->_strlen
    _atoui->___wmul
    _ftoa_sci->___fltol
    _itoa->_reverse
    _reverse->_strcpy
    _strcpy->_strlen
    _ftoa->___fltol
    _normalize->___flmul
    _cleanS->_strlen
    _addSig->___xxtofl
    _addOx->_strlen
    _LCD_Write->_LCD_WriteChar
    _LCD_WriteChar->_LCD_SetRowCol
    _LCD_WriteByte->_LCD_SendNibble
    _LCD_SetRowCol->_LCD_SendCmd
    _LCD_CLS->_LCD_SendCmd
    _DHT11_MReq->___fladd
    _TIMER0_SetTime->___fltol
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___flmul
    ___fladd->___fldiv
    ___flmul->___fladd
    ___fltol->_roundf
    ___xxtofl->___flge
    ___fldiv->___xxtofl
    _TIMER0_SetReg->___fltol
    _SYSTEM_Init->_SERIAL_Init
    _SERIAL_Init->___aldiv
    _LCD_Init->_LCD_SendCmd
    _LCD_DisplayCtrl->_LCD_SendCmd
    _LCD_SendCmd->_LCD_SendNibble
    _LCD_SendNibble->_LCD_Lat

Critical Paths under _myISR in COMRAM

    _myISR->_BLED_Toggle

Critical Paths under _main in BANK0

    _SERIAL_Printf->_my_vsprintf
    _LCD_Printf->_my_vsprintf
    _my_vsprintf->_ftoa_sci
    _getWP->_reverse
    _ftoa_sci->_itoa
    _itoa->_reverse
    _ftoa->___fltol
    _normalize->___flmul
    _TIMER0_SetTime->_TIMER0_SetReg
    _lroundf->___fltol
    _roundf->___flsub
    ___flsub->___flmul
    ___fltol->_roundf
    _TIMER0_SetReg->_lroundf

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_dtll_task
    _dtll_task->_LCD_Printf
    _dtll_task->_SERIAL_Printf
    _SERIAL_Printf->_my_vsprintf
    _LCD_Printf->_my_vsprintf

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_LCD_Printf
    _main->_SERIAL_Printf
    _dtll_task->_LCD_Printf
    _dtll_task->_SERIAL_Printf

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  827023
                                            252 BANK1      2     2      0
                         _BLED_Color
                    _LCD_DisplayCtrl
                         _LCD_Printf
                      _SERIAL_Printf
                        _SYSTEM_Init
                     _TIMER0_SetTime
                          _dtll_task
 ---------------------------------------------------------------------------------
 (1) _dtll_task                                           10    10      0  394844
                                            242 BANK1     10    10      0
                      _DHT11_GetRHum
                      _DHT11_GetTemp
                         _DHT11_MReq
                            _LCD_CLS
                         _LCD_Printf
                      _SERIAL_Printf
 ---------------------------------------------------------------------------------
 (2) _SERIAL_Printf                                      142   132     10  190175
                                            232 BANK1     10     0     10
                                              0 BANK2    132   132      0
                       _SERIAL_Write
                        _my_vsprintf
 ---------------------------------------------------------------------------------
 (3) _SERIAL_Write                                         4     2      2    2631
                                              7 COMRAM     4     2      2
                   _SERIAL_WriteChar
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _SERIAL_WriteChar                                     1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Printf                                         142   132     10  192278
                                            232 BANK1     10     0     10
                                              0 BANK2    132   132      0
                          _LCD_Write
                        _my_vsprintf
 ---------------------------------------------------------------------------------
 (3) _my_vsprintf                                        240   234      6  186585
                                             90 BANK0      8     2      6
                                              0 BANK1    232   232      0
                           ___xxtofl
                              _addOx
                             _addSig
                             _cleanS
                               _ftoa
                           _ftoa_sci
                              _getWP
                               _itoa
                              _precE
                              _precF
                              _precG
                              _precI
                              _precS
                           _setWidth
                             _strcat
                             _strcpy
                             _strlen
                            _upperCL
 ---------------------------------------------------------------------------------
 (4) _upperCL                                              5     3      2    2966
                                              7 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    4237
                                             17 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _setWidth                                            12     8      4    3762
                                              7 COMRAM    12     8      4
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _precS                                               10     6      4    2786
                                              7 COMRAM    10     6      4
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _precI                                               14    10      4    4036
                                              7 COMRAM    14    10      4
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _precG                                               23    19      4   18476
                                             30 COMRAM    23    19      4
                               _posc
                           _roundStr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _precF                                               17    13      4   19932
                                             30 COMRAM    17    13      4
                               _posc
                           _roundStr
                            _searchc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _precE                                               18    14      4   16922
                                             30 COMRAM    18    14      4
                               _posc
                           _roundStr
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _roundStr                                            17    11      6    8841
                                             13 COMRAM    17    11      6
                               _posc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _getWP                                               28    22      6   19341
                                             21 COMRAM    22    22      0
                                             68 BANK0      6     0      6
                              _atoui
                               _posc
                            _reverse
                            _searchc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _searchc                                              6     3      3    3441
                                              7 COMRAM     6     3      3
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _posc                                                 6     3      3    4192
                                              7 COMRAM     6     3      3
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _atoui                                                9     7      2    3511
                                              9 COMRAM     9     7      2
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     592
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _ftoa_sci                                            14     8      6   35001
                                             76 BANK0     14     8      6
                             ___fleq
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _itoa
                          _normalize
 ---------------------------------------------------------------------------------
 (4) _itoa                                                20    12      8    8592
                                             21 COMRAM    12    12      0
                                             68 BANK0      8     0      8
                            ___aldiv
                            ___almod
                            _reverse
 ---------------------------------------------------------------------------------
 (5) _reverse                                             72    70      2    4378
                                             17 COMRAM     4     2      2
                                              0 BANK0     68    68      0
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcpy                                              10     6      4    1397
                                              7 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) ___almod                                             10     2      8     613
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (4) _ftoa                                                14     8      6   25937
                                             51 BANK0     14     8      6
                             ___fleq
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _normalize
 ---------------------------------------------------------------------------------
 (5) _normalize                                            8     6      2    9368
                                             82 COMRAM     2     0      2
                                             13 BANK0      6     6      0
                            ___fldiv
                             ___flge
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _cleanS                                               7     5      2    2814
                                              7 COMRAM     7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _addSig                                              12     6      6    5801
                                             29 COMRAM    12     6      6
                             ___flge
                           ___xxtofl (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _addOx                                               11     6      5    3887
                                              7 COMRAM    11     6      5
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2    2380
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _LCD_Write                                            6     4      2    4641
                                             14 COMRAM     6     4      2
                      _LCD_SetRowCol
                      _LCD_WriteChar
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteChar                                        1     1      0    2243
                                             13 COMRAM     1     1      0
                      _LCD_SetRowCol
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (5) _LCD_WriteByte                                        1     1      0      96
                                              5 COMRAM     1     1      0
                     _LCD_SendNibble
 ---------------------------------------------------------------------------------
 (5) _LCD_SetRowCol                                        6     5      1    2116
                                              7 COMRAM     6     5      1
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_CLS                                              1     1      0    1567
                                              7 COMRAM     1     1      0
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (2) _DHT11_MReq                                          15    15      0   10694
                                             70 COMRAM    15    15      0
                    _DHT11_Wait4Resp
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _DHT11_Wait4Resp                                      5     3      2     580
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _DHT11_GetTemp                                        4     0      4       0
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _DHT11_GetRHum                                        4     0      4       0
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TIMER0_SetTime                                      37    33      4   43857
                                             57 BANK0     37    33      4
                         _TIMER0_End
                      _TIMER0_SetReg
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _lroundf                                              4     0      4   20115
                                             51 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   19117
                                             82 COMRAM     4     4      0
                                             21 BANK0     22    18      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6347
                                             13 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    5062
                                             54 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     425
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    4853
                                             70 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1526
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     877
                                             86 COMRAM     2     2      0
                                             43 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1826
                                             15 COMRAM    14    10      4
                             ___flge (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2543
                                             29 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _TIMER0_SetReg                                        2     0      2     120
                                             55 BANK0      2     0      2
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _TIMER0_End                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Init                                          0     0      0    3184
                        _BLED_Enable
                         _DHT11_Init
                     _INTERRUPT_Init
                     _INTERRUPT_Tmr0
                           _LCD_Init
                         _LED_Enable
                        _SERIAL_Init
                         _TIMER0_Int
                       _TIMER0_SetPs
 ---------------------------------------------------------------------------------
 (2) _TIMER0_SetPs                                         3     3      0      44
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_Int                                           4     1      3     338
                                              3 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _SERIAL_Init                                         10     6      4    1205
                                             17 COMRAM    10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           3     3      0      15
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0    1567
                                              7 COMRAM     1     1      0
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Tmr0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DHT11_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BLED_Enable                                          3     3      0      15
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_DisplayCtrl                                      4     2      2    2423
                                              7 COMRAM     4     2      2
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (6) _LCD_SendCmd                                          2     1      1    1567
                                              5 COMRAM     2     1      1
                     _LCD_SendNibble
 ---------------------------------------------------------------------------------
 (6) _LCD_SendNibble                                       1     1      0      31
                                              4 COMRAM     1     1      0
                            _LCD_Lat
 ---------------------------------------------------------------------------------
 (7) _LCD_Lat                                              1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BLED_Color                                           5     3      2     262
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myISR                                                0     0      0      22
                        _BLED_Toggle
 ---------------------------------------------------------------------------------
 (10) _BLED_Toggle                                         3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BLED_Color
   _LCD_DisplayCtrl
     _LCD_SendCmd
       _LCD_SendNibble
         _LCD_Lat
   _LCD_Printf
     _LCD_Write
       _LCD_SetRowCol
         _LCD_SendCmd
           _LCD_SendNibble
             _LCD_Lat
       _LCD_WriteChar
         _LCD_SetRowCol
           _LCD_SendCmd
             _LCD_SendNibble
               _LCD_Lat
         _LCD_WriteByte
           _LCD_SendNibble
             _LCD_Lat
     _my_vsprintf
       ___xxtofl
         ___flge (ARG)
         ___flneg (ARG)
       _addOx
         _strlen
       _addSig
         ___flge
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
         _strlen (ARG)
       _cleanS
         _strlen
       _ftoa
         ___fleq
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
           _roundf (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flge
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
         ___xxtofl
           ___flge (ARG)
           ___flneg (ARG)
         _normalize
           ___fldiv
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flge
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
       _ftoa_sci
         ___fleq
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
           _roundf (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flge
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
         ___xxtofl
           ___flge (ARG)
           ___flneg (ARG)
         _itoa
           ___aldiv
           ___almod
           _reverse
             _strcpy
               _strlen (ARG)
             _strlen
         _normalize
           ___fldiv
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flge
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
       _getWP
         _atoui
           ___wmul
           _strlen
         _posc
           _strlen
         _reverse
           _strcpy
             _strlen (ARG)
           _strlen
         _searchc
           _strlen
         _strlen
       _itoa
         ___aldiv
         ___almod
         _reverse
           _strcpy
             _strlen (ARG)
           _strlen
       _precE
         _posc
           _strlen
         _roundStr
           _posc
             _strlen
           _strlen
         _strlen
       _precF
         _posc
           _strlen
         _roundStr
           _posc
             _strlen
           _strlen
         _searchc
           _strlen
         _strlen
       _precG
         _posc
           _strlen
         _roundStr
           _posc
             _strlen
           _strlen
         _strlen
       _precI
         _strlen
       _precS
         _strlen
       _setWidth
         _strlen
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
       _strcpy
         _strlen (ARG)
       _strlen
       _upperCL
         _strlen
   _SERIAL_Printf
     _SERIAL_Write
       _SERIAL_WriteChar
       _strlen
     _my_vsprintf
       ___xxtofl
         ___flge (ARG)
         ___flneg (ARG)
       _addOx
         _strlen
       _addSig
         ___flge
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
         _strlen (ARG)
       _cleanS
         _strlen
       _ftoa
         ___fleq
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
           _roundf (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flge
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
         ___xxtofl
           ___flge (ARG)
           ___flneg (ARG)
         _normalize
           ___fldiv
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flge
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
       _ftoa_sci
         ___fleq
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
           _roundf (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flge
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
         ___xxtofl
           ___flge (ARG)
           ___flneg (ARG)
         _itoa
           ___aldiv
           ___almod
           _reverse
             _strcpy
               _strlen (ARG)
             _strlen
         _normalize
           ___fldiv
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flge
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
       _getWP
         _atoui
           ___wmul
           _strlen
         _posc
           _strlen
         _reverse
           _strcpy
             _strlen (ARG)
           _strlen
         _searchc
           _strlen
         _strlen
       _itoa
         ___aldiv
         ___almod
         _reverse
           _strcpy
             _strlen (ARG)
           _strlen
       _precE
         _posc
           _strlen
         _roundStr
           _posc
             _strlen
           _strlen
         _strlen
       _precF
         _posc
           _strlen
         _roundStr
           _posc
             _strlen
           _strlen
         _searchc
           _strlen
         _strlen
       _precG
         _posc
           _strlen
         _roundStr
           _posc
             _strlen
           _strlen
         _strlen
       _precI
         _strlen
       _precS
         _strlen
       _setWidth
         _strlen
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
       _strcpy
         _strlen (ARG)
       _strlen
       _upperCL
         _strlen
   _SYSTEM_Init
     _BLED_Enable
     _DHT11_Init
     _INTERRUPT_Init
     _INTERRUPT_Tmr0
     _LCD_Init
       _LCD_SendCmd
         _LCD_SendNibble
           _LCD_Lat
     _LED_Enable
     _SERIAL_Init
       ___aldiv
     _TIMER0_Int
     _TIMER0_SetPs
   _TIMER0_SetTime
     _TIMER0_End
     _TIMER0_SetReg
       ___fladd (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flge
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
       ___xxtofl (ARG)
         ___flge (ARG)
         ___flneg (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
           _roundf (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flge
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flge
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___xxtofl (ARG)
         ___flge (ARG)
         ___flneg (ARG)
     ___fldiv
       ___xxtofl (ARG)
         ___flge (ARG)
         ___flneg (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___xxtofl (ARG)
         ___flge (ARG)
         ___flneg (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___xxtofl (ARG)
         ___flge (ARG)
         ___flneg (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___xxtofl (ARG)
         ___flge (ARG)
         ___flneg (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flge
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
     ___xxtofl
       ___flge (ARG)
       ___flneg (ARG)
     _lroundf
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flge
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
       ___xxtofl (ARG)
         ___flge (ARG)
         ___flneg (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flge
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
   _dtll_task
     _DHT11_GetRHum
     _DHT11_GetTemp
     _DHT11_MReq
       _DHT11_Wait4Resp
       ___fladd
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___fldiv
         ___xxtofl (ARG)
           ___flge (ARG)
           ___flneg (ARG)
       ___xxtofl
         ___flge (ARG)
         ___flneg (ARG)
     _LCD_CLS
       _LCD_SendCmd
         _LCD_SendNibble
           _LCD_Lat
     _LCD_Printf
       _LCD_Write
         _LCD_SetRowCol
           _LCD_SendCmd
             _LCD_SendNibble
               _LCD_Lat
         _LCD_WriteChar
           _LCD_SetRowCol
             _LCD_SendCmd
               _LCD_SendNibble
                 _LCD_Lat
           _LCD_WriteByte
             _LCD_SendNibble
               _LCD_Lat
       _my_vsprintf
         ___xxtofl
           ___flge (ARG)
           ___flneg (ARG)
         _addOx
           _strlen
         _addSig
           ___flge
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
           _strlen (ARG)
         _cleanS
           _strlen
         _ftoa
           ___fleq
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
             _roundf (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flge
               ___flmul
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                         ___flge (ARG)
                         ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
           ___xxtofl
             ___flge (ARG)
             ___flneg (ARG)
           _normalize
             ___fldiv
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flge
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
         _ftoa_sci
           ___fleq
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
             _roundf (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flge
               ___flmul
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                         ___flge (ARG)
                         ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
           ___xxtofl
             ___flge (ARG)
             ___flneg (ARG)
           _itoa
             ___aldiv
             ___almod
             _reverse
               _strcpy
                 _strlen (ARG)
               _strlen
           _normalize
             ___fldiv
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flge
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
         _getWP
           _atoui
             ___wmul
             _strlen
           _posc
             _strlen
           _reverse
             _strcpy
               _strlen (ARG)
             _strlen
           _searchc
             _strlen
           _strlen
         _itoa
           ___aldiv
           ___almod
           _reverse
             _strcpy
               _strlen (ARG)
             _strlen
         _precE
           _posc
             _strlen
           _roundStr
             _posc
               _strlen
             _strlen
           _strlen
         _precF
           _posc
             _strlen
           _roundStr
             _posc
               _strlen
             _strlen
           _searchc
             _strlen
           _strlen
         _precG
           _posc
             _strlen
           _roundStr
             _posc
               _strlen
             _strlen
           _strlen
         _precI
           _strlen
         _precS
           _strlen
         _setWidth
           _strlen
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strcpy
           _strlen (ARG)
         _strlen
         _upperCL
           _strlen
     _SERIAL_Printf
       _SERIAL_Write
         _SERIAL_WriteChar
         _strlen
       _my_vsprintf
         ___xxtofl
           ___flge (ARG)
           ___flneg (ARG)
         _addOx
           _strlen
         _addSig
           ___flge
           ___xxtofl (ARG)
             ___flge (ARG)
             ___flneg (ARG)
           _strlen (ARG)
         _cleanS
           _strlen
         _ftoa
           ___fleq
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
             _roundf (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flge
               ___flmul
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                         ___flge (ARG)
                         ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
           ___xxtofl
             ___flge (ARG)
             ___flneg (ARG)
           _normalize
             ___fldiv
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flge
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
         _ftoa_sci
           ___fleq
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___xxtofl (ARG)
               ___flge (ARG)
               ___flneg (ARG)
             _roundf (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flge
               ___flmul
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                         ___flge (ARG)
                         ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___flge (ARG)
                       ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
           ___xxtofl
             ___flge (ARG)
             ___flneg (ARG)
           _itoa
             ___aldiv
             ___almod
             _reverse
               _strcpy
                 _strlen (ARG)
               _strlen
           _normalize
             ___fldiv
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
             ___flge
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___flge (ARG)
                     ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___flge (ARG)
                   ___flneg (ARG)
               ___xxtofl (ARG)
                 ___flge (ARG)
                 ___flneg (ARG)
         _getWP
           _atoui
             ___wmul
             _strlen
           _posc
             _strlen
           _reverse
             _strcpy
               _strlen (ARG)
             _strlen
           _searchc
             _strlen
           _strlen
         _itoa
           ___aldiv
           ___almod
           _reverse
             _strcpy
               _strlen (ARG)
             _strlen
         _precE
           _posc
             _strlen
           _roundStr
             _posc
               _strlen
             _strlen
           _strlen
         _precF
           _posc
             _strlen
           _roundStr
             _posc
               _strlen
             _strlen
           _searchc
             _strlen
           _strlen
         _precG
           _posc
             _strlen
           _roundStr
             _posc
               _strlen
             _strlen
           _strlen
         _precI
           _strlen
         _precS
           _strlen
         _setWidth
           _strlen
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strcpy
           _strlen (ARG)
         _strlen
         _upperCL
           _strlen

 _myISR (ROOT)
   _BLED_Toggle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     84      E4       9       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FE      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     62      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39C      20        0.0%
DATA                 0      0     39C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Sep 14 19:17:11 2020

               ___fldiv@aexp 0036                 ___fldiv@bexp 0035                 ___fldiv@sign 002E  
                         l73 45DA                  ?_LED_Enable 0001                  ?_LCD_Printf 01E8  
                __CFG_BOR$ON 000000          ___wmul@multiplicand 0006                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                 ?_LCD_SendCmd 0006                          l111 5410  
                        l120 50DC                          l114 5422                          l108 4C3E  
                        l320 504E                          l148 52C4                          l317 500C  
                        l327 476C                          l319 5018                          l431 4DF8  
                        l184 5496                          l432 4DF4                          l424 4F10  
                        l281 4E00                          l169 4F66                          l370 47B0  
                        l530 0D54                          l283 4E08                          l371 47BA  
                        l363 4774                          l284 4E10                          l356 519E  
                        l372 4822                          l364 481E                          l452 2874  
                        l700 0234                          l285 4E18                          l365 477E  
                        l525 36EA                          l509 38B8                          l286 4E5A  
                        l366 4788                          l199 549C                          l367 4792  
                        l359 54A6                          l375 548E                          l607 3EBE  
                        l471 4FBA                          l368 479C                          l384 2E08  
                        l369 47A6                          l617 3D6A                          l465 4B34  
                        l490 32B4                _LCD_SetRowCol 4FBC                          l901 4A12  
                        l565 1122                          l726 08D4                          l807 257E  
                        l639 34E0                          l496 37F6                          l576 1204  
                        l736 0A74                          l904 52FA                          l761 4AAA  
                        l593 4D2E                          l850 5482                          l498 37FE  
                        l586 40FA                          l746 0CA4                          l844 4972  
                        l940 3062                          l780 46A2                          l925 4D96  
                        l941 3064                          l765 3BF2                          l781 46AA  
                        l749 0CAC                          l854 5384                          l862 521C  
                        l598 3DA0                          l790 3FE4                          l950 53D0  
                        l847 5438                          l871 53F4                          l919 54A2  
                        l927 4D8E                          l935 2F3A                          l944 545E  
                        l865 535A                          l857 540C                          l947 5470  
                        l796 2B54                          l885 5004                 __CFG_CPB$OFF 000000  
               __CFG_CPD$OFF 000000                          _sig 00E8             TIMER0_Int@t0_psa 0006  
        __size_of_DHT11_MReq 025C                          wreg 000FE8          __size_of_DHT11_Init 0006  
             _LCD_SendNibble 5472                 ___flmul@aexp 0061                 ___flmul@bexp 0066  
               ___flmul@sign 0060                 ___flmul@temp 006B                 ___flmul@prod 0067  
            __end_of_LCD_CLS 535C                 __CFG_LVP$OFF 000000      __end_of_LCD_DisplayCtrl 53F6  
            __end_of_LCD_Lat 543A                 my_vsprintf@i 01E4                 my_vsprintf@j 01DC  
               my_vsprintf@x 01D8          __size_of_BLED_Color 00C2                 ___fltol@exp1 0058  
               __CFG_WDT$OFF 000000                         l1042 44FE                         l1220 4412  
                       l1029 4206                         l1215 43CC                         l1224 528E  
                       l1209 48CC                         l1247 430E                         l1504 15DE  
                       l1520 5096                         l1505 15CC                         l1532 223C  
                       l1612 39A8                         l1605 3910                         l1534 209C  
                       l1543 20E2                         l1608 3A6C                         l1480 13A8  
                       l1545 215A                         l1537 2060                         l1546 2148  
                       l1634 1EA2                         l1626 5256                         l1619 3A04  
                       l1571 1982                         l1564 178C                         l1660 5330  
                       l1581 1AB2                         l1573 19FA                         l1574 19E8  
                       l1478 13F4                         l1654 4EB6                         l1495 150E  
                       l1487 16C4                         l1479 13E2                         l1568 1AF0  
                       l1648 53AA                         l3700 549E                         l7000 4E6C  
                       l7002 5474                         l7010 4DC2                         l7004 547E  
                       l7100 4448                         l7020 4A40                         l7012 4DCE  
                       l7030 535E                         l7110 4490                         l7102 4458  
                       l7022 4A4C                         l7014 4DD2                         l7006 4D98  
                       l7032 5362                         l3736 5490                         l3760 5498  
                       l7200 133E                         l7120 44DE                         l7112 44AE  
                       l7104 446E                         l7024 4A74                         l7016 4A14  
                       l7040 53AC                         l7008 4DA4                         l8000 322A  
                       l7034 5372                         l3762 5008                         l3770 4DFC  
                       l7050 410E                         l7210 1390                         l7202 1342  
                       l7130 1220                         l7122 44EE                         l7114 44BE  
                       l7106 4476                         l7026 4A78                         l7018 4A2E  
                       l7042 53C8                         l8010 3298                         l8002 3236  
                       l7036 5378                         l3764 5024                         l3772 4E20  
                       l7060 4144                         l7052 411E                         l7300 1608  
                       l7220 13D4                         l7212 13A0                         l7204 1346  
                       l7140 1254                         l7132 1222                         l7116 44C8  
                       l7108 4482                         l7028 4A96                         l8004 3252  
                       l8020 3764                         l8012 36EC                         l8100 0D1E  
                       l7038 537E                         l7070 418C                         l7062 4154  
                       l7054 4122                         l7046 40FC                         l7310 1684  
                       l7302 1642                         l7222 13D6                         l7214 13B6  
                       l7206 134A                         l7150 1286                         l7134 1232  
                       l7142 125C                         l7126 1206                         l7118 44CE  
                       l8006 326E                         l8030 37CE                         l8022 3770  
                       l8014 3718                         l8110 0D84                         l8102 0D2E  
                       l7080 41D0                         l7072 4196                         l7064 416A  
                       l7056 4130                         l7048 4100                         l9000 4C26  
                       l7400 2050                         l7320 16A4                         l7312 1688  
                       l7304 1644                         l7240 145E                         l7232 1426  
                       l7224 13E0                         l7216 13C2                         l7208 1374  
                       l7160 12BC                         l7152 128C                         l7144 126C  
                       l7136 1242                         l7128 1212                         l8008 327C  
                       l8040 384E                         l8032 380A                         l8024 378A  
                       l8016 3730                         l8120 0DE6                         l8112 0DA0  
                       l8104 0D48                         l7074 41B4                         l7066 4172  
                       l7082 41D6                         l7058 4140                         l9010 4C32  
                       l9002 4C28                         l6450 5162                         l7410 209A  
                       l7402 205E                         l7330 1EB0                         l7322 16B2  
                       l7314 1696                         l7306 1654                         l7242 1462  
                       l7234 1436                         l7226 1402                         l7250 1482  
                       l7218 13C6                         l7170 12F8                         l7162 12CC  
                       l7154 129A                         l7146 1272                         l7138 1252  
                       l7090 4414                         l8050 34E2                         l8042 386E  
                       l8034 381A                         l8026 37A4                         l8018 3740  
                       l8210 11BE                         l8130 0E36                         l8114 0DBE  
                       l8122 0DF2                         l8106 0D5C                         l9020 48CE  
                       l7084 41E6                         l7076 41C4                         l7068 417E  
                       l9012 4C36                         l9004 4C2A                         l6460 518C  
                       l6452 5164                         l9100 4F40                         l7420 20E0  
                       l7412 20AC                         l7404 206A                         l7340 1EF0  
                       l7332 1EBE                         l7500 179C                         l7324 16B4  
                       l7316 169C                         l7308 1664                         l7252 14A8  
                       l7260 14FE                         l7244 1470                         l7236 1444  
                       l7228 1412                         l7180 1316                         l7172 1306  
                       l7164 12CE                         l7156 129C                         l7148 1284  
                       l8300 3BF4                         l7092 4418                         l8060 357E  
                       l8052 3526                         l8044 387A                         l8036 381E  
                       l8028 37BE                         l8212 11C2                         l8204 1176  
                       l8140 0E98                         l8116 0DD0                         l8108 0D68  
                       l8220 3FFA                         l9030 48E8                         l9022 48D2  
                       l7086 41F6                         l7078 41C6                         l9014 4C38  
                       l9006 4C2C                         l6462 519C                         l6454 516E  
                       l9102 4F46                         l7430 2140                         l7414 20C2  
                       l7422 20F2                         l7406 2088                         l7350 1F16  
                       l7342 1EF2                         l7334 1EC0                         l7510 17D6  
                       l7502 17AC                         l7318 169E                         l7270 1552  
                       l7262 1524                         l7254 14DC                         l7246 1472  
                       l7238 1452                         l7190 132A                         l7182 131A  
                       l7174 130A                         l7158 12AC                         l7166 12D6  
                       l9110 2B68                         l8302 3C08                         l7094 4426  
                       l8070 35E8                         l8062 3598                         l8054 353E  
                       l8046 388A                         l8038 3840                         l8214 11E0  
                       l8206 118A                         l8150 0F10                         l8142 0EB4  
                       l8134 0E54                         l8118 0DD4                         l8126 0E14  
                       l8230 4054                         l8222 4016                         l9040 4926  
                       l9032 48F2                         l9024 48D4                         l9016 4C3A  
                       l9008 4C2E                         l6456 5178                         l6464 4770  
                       l9104 4F4C                         l6472 54A4                         l7440 21AE  
                       l7424 2100                         l7416 20C8                         l7408 208A  
                       l7360 1F56                         l7352 1F24                         l7336 1ED0  
                       l7344 1EFA                         l7328 1EA4                         l7600 434E  
                       l7520 1828                         l7512 17EC                         l7280 157C  
                       l7272 1560                         l7264 1534                         l7256 14DE  
                       l7248 147C                         l7192 132E                         l7184 131E  
                       l7176 130E                         l7168 12E6                         l9120 2C06  
                       l9112 2B76                         l8320 3CBE                         l8312 3C68  
                       l8304 3C18                         l7096 4436                         l8080 3650  
                       l8072 35F4                         l8064 35B4                         l8056 354E  
                       l8048 388E                         l8208 1196                         l8216 11E6  
                       l8160 0F78                         l8152 0F2C                         l8144 0ED6  
                       l8136 0E72                         l8128 0E18                         l8240 40A2  
                       l8232 406E                         l8224 402A                         l9050 495E  
                       l9042 4930                         l9034 4902                         l9026 48D6  
                       l9018 4C3C                         l6458 5182                         l6466 47C4  
                       l9106 4F52                         l6474 5484                         l7450 2218  
                       l7434 216A                         l7442 21B2                         l7426 2104  
                       l7418 20D2                         l7370 1F96                         l7362 1F58  
                       l7354 1F26                         l7346 1F0A                         l7338 1EE0  
                       l7610 43BA                         l7602 437C                         l7530 186E  
                       l7522 1836                         l7514 17F8                         l7506 17C0  
                       l7290 15AE                         l7282 158C                         l7274 1562  
                       l7258 14EE                         l7194 1332                         l7186 1322  
                       l7178 1312                         l9130 2CEA                         l9122 2C3A  
                       l9114 2B8A                         l8330 3D0E                         l8314 3C90  
                       l8306 3C2A                         l8322 3CD2                         l8410 2298  
                       l8402 223E                         l7098 443A                         l8082 366C  
                       l8090 36CC                         l8074 361C                         l8066 35CE  
                       l8058 3572                         l8170 1004                         l8162 0F92  
                       l8154 0F4A                         l8146 0EDC                         l8138 0E7C  
                       l8242 40C0                         l8234 408A                         l8226 4030  
                       l8218 3FE6                         l8250 4CB8                         l6580 4742  
                       l9060 53D8                         l9052 4968                         l9044 493A  
                       l9036 490C                         l9028 48D8                         l6476 548A  
                       l7452 221C                         l7444 21CC                         l7436 2176  
                       l7428 2112                         l7380 1FC6                         l7372 1F9E  
                       l7356 1F36                         l7364 1F60                         l7348 1F10  
                       l7612 440A                         l7604 438C                         l7540 18DC  
                       l7532 1888                         l7524 1842                         l7516 1810  
                       l7508 17CC                         l7292 15C4                         l7276 1570  
                       l7268 1548                         l7284 158E                         l7196 1336  
                       l7188 1326                         l9132 2DB2                         l9124 2C80  
                       l9116 2B9A                         l9108 2B56                         l8340 3D5E  
                       l8324 3CE2                         l8316 3C96                         l8308 3C3C  
                       l8420 22F0                         l8412 22A8                         l8404 2248  
                       l8500 29DE                         l7620 4EC4                         l7700 2810  
                       l8084 368A                         l8076 3620                         l8068 35DE  
                       l8180 105E                         l8172 1010                         l8164 0FC0  
                       l8156 0F68                         l8148 0EEA                         l8092 0CAE  
                       l8244 40E0                         l8228 404C                         l8260 4D10  
                       l8252 4CCC                         l6574 46AE                         l9062 53E0  
                       l9046 4944                         l9038 491C                         l7454 222A  
                       l7446 21E2                         l7438 2184                         l7390 2004  
                       l7382 1FC6                         l7374 1FA2                         l7366 1F70  
                       l7358 1F46                         l7614 4410                         l7606 439A  
                       l7550 1972                         l7542 1906                         l7534 1898  
                       l7526 1852                         l7518 181C                         l7470 16E2  
                       l7278 1578                         l7286 159C                         l7198 133A  
                       l9054 521E                         l9134 2DFA                         l9126 2C86  
                       l9118 2BC0                         l8334 3D2C                         l8326 3CF4  
                       l8318 3CB2                         l8262 3D6C                         l8430 23CC  
                       l8422 2308                         l8406 227A                         l8502 29E6  
                       l7630 4F0E                         l7622 4EE2                         l7702 2820  
                       l7710 286C                         l8086 36B6                         l8078 3642  
                       l8190 10FC                         l8182 1086                         l8166 0FCC  
                       l8174 1014                         l8158 0F6C                         l8094 0CF2  
                       l8246 40F0                         l8238 409C                         l8254 4CE8  
                       l8350 3310                         l8342 32B6                         l9070 4514  
                       l9230 4B6E                         l6576 46B2                         l9064 53E6  
                       l9048 494E                         l7456 2230                         l7448 21FC  
                       l7392 2014                         l7368 1F86                         l7608 43AC  
                       l7560 19B2                         l7552 1980                         l7544 193C  
                       l7536 18B4                         l7528 185E                         l7480 171A  
                       l7472 16E4                         l7296 15EE                         l7288 15A0  
                       l9136 2DFE                         l9128 2CB8                         l7800 4FBE  
                       l8336 3D54                         l8328 3D06                         l8280 3E2A  
                       l8272 3DC6                         l8264 3D80                         l8440 2412  
                       l8432 23D2                         l8424 2348                         l8408 2286  
                       l8416 22BC                         l8520 2AC2                         l8512 29FE  
                       l8504 29F2                         l7720 4630                         l7704 2830  
                       l8088 36C6                         l8192 1116                         l8184 108A  
                       l8176 1036                         l8168 0FE8                         l8096 0CFA  
                       l8256 4CFC                         l8352 331C                         l8360 3356  
                       l8344 32CA                         l8600 00C6                         l9080 45A4  
                       l9072 453C                         l9232 4B7C                         l9224 4B36  
                       l6578 46F8                         l9066 53EA                         l9058 53D4  
                       l9090 4F1A                         l7458 2232                         l7394 2024  
                       l7386 1FDA                         l7378 1FB6                         l7570 1A24  
                       l7562 19E0                         l7554 1992                         l7546 194A  
                       l7538 18C0                         l7490 1746                         l7482 172A  
                       l7474 16F4                         l7466 16C6                         l7298 15FA  
                       l7810 5050                         l9138 2E04                         l7802 4FCE  
                       l8282 3E3A                         l8274 3DEE                         l8266 3D92  
                       l8450 2452                         l8442 2416                         l8426 2358  
                       l8434 23D8                         l8418 22CC                         l7730 3A76  
                       l8530 2B02                         l8522 2AC8                         l8514 2A3E  
                       l8506 29F6                         l7722 4660                         l7714 45DC  
                       l7626 4EE8                         l7618 4EB8                         l7706 2834  
                       l7650 2632                         l7642 25CA                         l7634 2580  
                       l8194 112A                         l8178 1052                         l8186 10A8  
                       l8098 0D02                         l8258 4D0C                         l8370 33AE  
                       l8362 3370                         l8354 332C                         l8346 32E6  
                       l9082 45B2                         l9074 4540                         l9234 4B8A  
                       l9226 4B3A                         l9092 4F1E                         l7396 202C  
                       l7388 1FF4                         l7900 395E                         l7580 1A9A  
                       l7572 1A4E                         l7556 19A0                         l7548 1968  
                       l7492 1756                         l7484 1730                         l7476 1704  
                       l7468 16D4                         l7812 5062                         l7804 4FEE  
                       l8292 3E80                         l8268 3DA8                         l8284 3E4A  
                       l7820 4862                         l8460 248C                         l8452 2456  
                       l8444 2432                         l8436 23F4                         l8428 235C  
                       l7732 3A8E                         l7740 3AB2                         l8540 2B4C  
                       l8532 2B0E                         l8524 2AE4                         l8516 2A4E  
                       l7724 467C                         l7716 45F8                         l7628 4EEC  
                       l7708 2852                         l7652 265C                         l7644 25E6  
                       l7636 25AC                         l8196 113A                         l8188 10B8  
                       l8380 3412                         l8372 33B4                         l8364 3380  
                       l8356 3330                         l8348 3300                         l8700 0634  
                       l8620 0178                         l8612 012E                         l8604 00E6  
                       l9084 45C0                         l9076 456E                         l9068 4500  
                       l9236 4B98                         l9228 4B60                         l9094 4F30  
                       l9086 4F12                         l7398 203C                         l7910 39E6  
                       l7902 3990                         l7582 1AB6                         l7590 1ADC  
                       l7566 1A0A                         l7574 1A52                         l7558 19A4  
                       l7494 1766                         l7486 1736                         l7478 1714  
                       l7806 4FF8                         l8550 51E8                         l8294 3EA8  
                       l8286 3E5A                         l8278 3DF8                         l7822 4890  
                       l8462 24CC                         l8470 2556                         l8454 245A  
                       l8446 243E                         l8438 2406                         l7750 3B1E  
                       l7742 3AC0                         l7734 3A9A                         l8534 2B16  
                       l8526 2AF0                         l8518 2A52                         l7718 4614  
                       l7726 4680                         l7670 2704                         l7654 2678  
                       l7646 2604                         l7662 26A8                         l7638 25B8  
                       l8198 1156                         l8382 3430                         l8374 33C6  
                       l8366 339C                         l8358 3334                         l8710 06D6  
                       l8702 065A                         l8630 0212                         l8622 018A  
                       l8606 011C                         l8614 0132                         l9078 45A0  
                       l9238 4BB2                         l9096 4F36                         l9088 4F16  
                       l7920 3A3C                         l7912 39F4                         l7904 3992  
                       l7840 4208                         l7592 1AE0                         l7584 1AC6  
                       l7576 1A6C                         l7568 1A16                         l7496 1776  
                       l7488 1744                         l7832 5258                         l7808 5000  
                       l8552 51EE                         l8288 3E62                         l7824 48A0  
                       l7816 4824                         l8472 2572                         l8464 24DC  
                       l8448 2446                         l8456 245E                         l7760 3B88  
                       l7752 3B3E                         l7744 3AD4                         l7736 3A9E  
                       l7728 3A6E                         l8528 2AF4                         l8480 28B4  
                       l7680 2756                         l7672 2714                         l7664 26BC  
                       l7656 267C                         l7648 2620                         l8384 3444  
                       l8376 33D6                         l8392 34A4                         l8544 5386  
                       l8800 0B16                         l8712 06EA                         l8704 066E  
                       l8640 0296                         l8632 0230                         l8624 01B6  
                       l8616 0144                         l8608 0124                         l8560 50A4  
                       l9450 4E34                         l9098 4F3A                         l7922 3A4C  
                       l7914 3A12                         l7906 399E                         l7850 4260  
                       l7842 4220                         l7586 1AD4                         l7578 1A80  
                       l7498 177C                         l7834 526E                         l8554 5202  
                       l8298 3EB2                         l7930 4F68                         l7826 48C4  
                       l7818 4852                         l7770 3EC0                         l8466 24E0  
                       l8458 246C                         l7754 3B5A                         l7746 3AD4  
                       l7762 3BBE                         l8538 2B26                         l8490 2906  
                       l8482 28C6                         l8474 2876                         l7682 2782  
                       l7674 2720                         l7666 26D0                         l7658 269E  
                       l8378 33F4                         l8386 3464                         l8722 076E  
                       l8714 070A                         l8706 068A                         l8650 0304  
                       l8810 0B52                         l8642 029E                         l8626 01D4  
                       l8618 0158                         l8634 0238                         l8570 0028  
                       l8562 50B6                         l9452 5038                         l7924 3A5A  
                       l7916 3A14                         l7908 39DA                         l7852 4270  
                       l7596 4310                         l7588 1AD6                         l7836 527E  
                       l8900 1E6E                         l8556 5212                         l8548 51E2  
                       l7932 4F7C                         l7828 48CA                         l7780 3F56  
                       l7772 3ECA                         l8468 2550                         l7764 3BD6  
                       l7756 3B72                         l7748 3AE8                         l8492 291A  
                       l8476 2876                         l7684 278A                         l7676 272C  
                       l7692 27AA                         l7668 26EA                         l8396 34C6  
                       l8388 3482                         l8820 0C48                         l9444 0B74  
                       l8740 086A                         l8732 07EE                         l8724 079E  
                       l8716 073A                         l8708 06BA                         l8660 0398  
                       l8652 031C                         l8812 0BF2                         l8644 02BA  
                       l8636 025C                         l8628 01E6                         l8580 0050  
                       l8572 0028                         l7940 5410                         l8564 50BA  
                       l9454 4756                         l6982 5424                         l7926 3A5C  
                       l7918 3A18                         l7862 429A                         l7854 4274  
                       l7846 4234                         l7598 433E                         l8902 1E92  
                       l8910 534C                         l9446 49DC                         l6990 5308  
                       l7934 4F88                         l7782 3F8A                         l7774 3EE6  
                       l7766 3BE6                         l7758 3B84                         l8494 295A  
                       l8478 28A8                         l8486 28D2                         l7686 279A  
                       l7678 2738                         l7694 27CC                         l8398 34D6  
                       l7950 4AF0                         l8814 0C06                         l8806 0B2E  
                       l8750 08D0                         l8742 0876                         l8734 081E  
                       l8726 07BA                         l8718 0756                         l8670 0458  
                       l8662 03BE                         l8654 0344                         l8646 02C6  
                       l8638 0278                         l8590 0088                         l8582 0062  
                       l8822 0C4E                         l8574 0028                         l8566 0012  
                       l7942 541E                         l8558 5098                         l6984 5426  
                       l9448 47D8                         l7880 42FE                         l7872 42C2  
                       l7864 42A4                         l7856 4282                         l7848 425E  
                       l8912 5356                         l7792 53F8                         l8840 498E  
                       l6992 530C                         l7936 4F98                         l7784 3F92  
                       l7776 3F1A                         l8496 296A                         l8488 28E2  
                       l7960 3086                         l7696 27E0                         l7688 279E  
                       l7952 4B0E                         l7944 4AAC                         l8824 0C74  
                       l8816 0C1A                         l8808 0B46                         l8760 0934  
                       l8752 08D8                         l8736 0842                         l8728 07CE  
                       l8680 0504                         l8672 046C                         l8664 03D2  
                       l8656 0358                         l8648 02DE                         l8592 0090  
                       l8584 007A                         l8576 0030                         l8568 001E  
                       l6986 5436                         l7890 3920                         l7874 42CE  
                       l7866 42AE                         l8930 2E0A                         l8906 5332  
                       l7794 53FA                         l8842 4998                         l8850 49F6  
                       l6994 5324                         l7938 4F9C                         l7786 3FC4  
                       l7778 3F20                         l8498 296E                         l7970 3110  
                       l7962 3092                         l7698 27F4                         l7946 4AB8  
                       l7954 4B12                         l8826 0C88                         l8770 09BE  
                       l8762 0958                         l8754 08FC                         l8746 0898  
                       l8738 0860                         l8690 058E                         l8682 052C  
                       l8674 04A4                         l8666 040A                         l8658 0370  
                       l8594 009C                         l8586 0080                         l8818 0C34  
                       l8578 0038                         l8914 52C6                         l8922 5290  
                       l7892 3936                         l7884 38BC                         l7876 42DE  
                       l8860 4D56                         l8940 2E34                         l8932 2E16  
                       l8908 533C                         l7796 5400                         l8844 49A6  
                       l8836 4974                         l6988 52FC                         l7788 3FDC  
                       l7980 3182                         l7972 311C                         l7964 309A  
                       l7956 3066                         l7948 4AD4                         l8828 0C98  
                       l8772 09E2                         l8764 0976                         l8756 0910  
                       l8748 08B4                         l8692 05B6                         l8684 0552  
                       l8676 04CC                         l8668 0432                         l8596 00B6  
                       l8588 0084                         l8916 52D0                         l8924 529A  
                       l7886 38CC                         l7878 42EE                         l8870 4D6C  
                       l8950 2E7C                         l8942 2E36                         l8934 2E16  
                       l7798 5406                         l8846 49BC                         l8838 4980  
                       l6998 4E5C                         l7982 319E                         l7974 313A  
                       l7990 31E4                         l7966 30A2                         l7958 307A  
                       l8790 0A9C                         l8782 0A38                         l8774 0A00  
                       l8758 0918                         l8694 05DC                         l8686 0566  
                       l8678 04EC                         l8598 00BC                         l8918 52EE  
                       l8926 52B8                         l7896 394A                         l7888 38DA  
                       l8880 1BAC                         l8872 1AF2                         l8856 4D32  
                       l8960 2E96                         l8952 2E80                         l8944 2E38  
                       l8936 2E1A                         l8848 49F2                         l7984 31A6  
                       l7976 3156                         l7992 31E8                         l7968 30A8  
                       l8792 0AB0                         l8784 0A54                         l8776 0A0A  
                       l8768 098E                         l8696 05F0                         l8688 057E  
                       l7898 3952                         l8890 1CF4                         l8882 1BD0  
                       l8874 1B12                         l8866 4D62                         l8858 4D3E  
                       l8970 2EDE                         l8954 2E8E                         l8946 2E58  
                       l8938 2E1C                         l7994 3206                         l7986 31C4  
                       l7978 3174                         l8794 0AB8                         l8786 0A70  
                       l8778 0A16                         l8698 060C                         l8892 1D60  
                       l8884 1BEE                         l8876 1B5C                         l8868 4D68  
                       l8980 2F3E                         l8972 2F06                         l8948 2E5C  
                       l7996 3218                         l7988 31E0                         l8796 0AD4  
                       l8788 0A78                         l8894 1D92                         l8878 1B70  
                       l8990 544E                         l8982 2F5A                         l8974 2F0C  
                       l8966 2E9E                         l7998 321E                         l8798 0AF8  
                       STR_1 7FE8                         l8896 1DFE                         l8888 1C26  
                       l8992 5460                         l8984 2F6A                         l8976 2F1A  
                       l8968 2EC2                         STR_2 7FD2                         STR_3 7FC4  
                       l8994 4BBE                         l8898 1E32                         l8986 305E  
                       l8978 2F1E                         STR_4 7F70                         STR_5 7EF2  
                       l8996 4C22                         STR_6 7FF7                         STR_7 7F0E  
                       l8998 4C24                         STR_8 7F59                         STR_9 7F29  
                       _LATB 000F8A                         _LATD 000F8C                         u7100 4730  
                       u7101 4728                         u7040 46C6                         u8000 1F46  
                       u7041 46BE                         u8001 1F42                         u8010 1F86  
                       u8011 1F82                         u7060 46E8                         u8100 2112  
                       u8020 1FC6                         u7061 46E0                         u8101 210E  
                       u8021 1FC2                         u7118 4732                         u8110 2140  
                       u8030 203C                         u8111 213C                         u8031 2038  
                       u7080 470C                         u8120 2156                         u8040 205E  
                       u8200 1704                         u7400 4DF4                         u9000 3174  
                       u7081 4704                         u8121 2152                         u8041 205A  
                       u8201 1700                         u7401 4DF0                         u9001 3170  
                       u7058 46C8                         u8130 216A                         u8050 2088  
                       u8210 1744                         u9010 3182                         u8131 2166  
                       u8051 2084                         u8211 1740                         u7411 4A38  
                       u9011 317E                         u8140 2184                         u8060 20AC  
                       u8300 19E0                         u8220 1756                         u7500 4426  
                       u7420 4A96                         u9020 31C4                         u9100 37BE  
                       u8141 2180                         u8061 20A8                         u8301 19DC  
                       u8221 1752                         u7501 4422                         u7421 4A92  
                       u9021 31C0                         u9101 37BA                         u7078 46EA  
                       u7430 5372                         u8150 21CC                         u8070 20C2  
                       u8310 19F6                         u8230 1766                         u7510 4448  
                       u9030 3206                         u9110 37CE                         i2l47 51DC  
                       u7431 536E                         u8151 21C8                         u8071 20BE  
                       u8311 19F2                         u8231 1762                         u7511 4444  
                       u9031 3202                         u9111 37CA                         u7440 410E  
                       u8160 21FC                         u8080 20E0                         u8400 43BA  
                       u8320 1A0A                         u8240 179C                         u7600 129A  
                       u7360 5324                         u7520 446E                         u9040 3218  
                       u9200 363E                         u9120 383C                         u7441 410A  
                       u8161 21F8                         u8081 20DC                         u8401 43B6  
                       u8321 1A06                         u8241 1798                         u7601 1296  
                       u7361 5320                         u7521 446A                         u9041 3214  
                       u9201 363A                         u9121 3838                         u7098 470E  
                       u7450 4130                         u8170 222A                         u8090 2100  
                       u8410 440A                         u8330 1A24                         u8250 17AC  
                       u7610 12AC                         u7530 4490                         u7370 4EA4  
                       u9050 3252                         u9210 3650                         u9130 384E  
                       u7451 412C                         u8171 2226                         u8091 20FC  
                       u8411 4406                         u8331 1A20                         u8251 17A8  
                       u7611 12A8                         u7531 448C                         u9051 324E  
                       u9211 364C                         u9131 384A                         u7460 416A  
                       u8340 1A6C                         u8260 1926                         u8180 16E2  
                       u7700 13F4                         u7620 12BC                         u7540 44AE  
                       u7380 4EB6                         u8420 4EE2                         u9060 327C  
                       u8500 26BC                         u9220 368A                         u9140 386E  
                       u9300 0DE6                         u7461 4166                         u8341 1A68  
                       u8181 16DE                         u7701 13F0                         u7621 12B8  
                       u7541 44AA                         u7381 4EB2                         u8421 4EDE  
                       u9061 3278                         u8501 26B8                         u9221 3686  
                       u9141 386A                         u9301 0DE2                         u7470 418C  
                       u8350 1A9A                         u8270 1980                         u8190 16F4  
                       u7710 1402                         u7630 12F8                         u7550 44DE  
                       u7390 4DC2                         u8430 4F0E                         u9070 3298  
                       u8510 26D0                         u9230 36EA                         u9150 38B8  
                       u9310 0E10                         u7471 4188                         u8351 1A96  
                       u8271 197C                         u8191 16F0                         u7711 13FE  
                       u7631 12F4                         u7551 44DA                         u7391 4DBE  
                       u8431 4F0A                         u9071 3294                         u8511 26CC  
                       u9231 36E6                         u9151 38B4                         u9311 0E0C  
                       u7480 41B4                         u8360 1AD4                         u8280 19A0  
                       u7800 1560                         u7720 1412                         u7640 1306  
                       u7560 1220                         u8600 4630                         u8520 26EA  
                       u8440 25C6                         u9160 353E                         u9080 3730  
                       u9400 0F4A                         u9320 0E36                         u9240 0D1E  
                       u7481 41B0                         u8361 1AD0                         u8281 199C  
                       u8265 191C                         u7801 155C                         u7721 140E  
                       u7641 1302                         u7561 121C                         u7377 4E9A  
                       u8601 462C                         u8521 26E6                         u8441 25C2  
                       u9161 353A                         u9081 372C                         u9401 0F46  
                       u9321 0E32                         u9241 0D1A                         u7490 41E6  
                       u8370 433E                         u8290 19B2                         u7810 1570  
                       u7730 1444                         u7650 1374                         u7570 1232  
                       u8610 46A2                         u8530 2704                         u8450 25E6  
                       u9170 3598                         u9090 378A                         u9410 0F68  
                       u9330 0E50                         u9250 0D48                         u7491 41E2  
                       u8371 433A                         u8291 19AE                         u7811 156C  
                       u7731 1440                         u7651 1370                         u7571 122E  
                       u8611 469E                         u8531 2700                         u8451 25E2  
                       u9171 3594                         u9091 3786                         u9411 0F64  
                       u9331 0E4C                         u9251 0D44                         u8380 437C  
                       u7900 1654                         u7820 158C                         u7740 1452  
                       u7660 138C                         u7580 1242                         u8700 4852  
                       u8620 3A8E                         u8540 2756                         u8460 2604  
                       u9180 35CE                         u9500 1156                         u9420 0F92  
                       u9340 0E72                         u9260 0D84                         u8381 4378  
                       u7901 1650                         u7821 1588                         u7741 144E  
                       u7661 1386                         u7581 123E                         u8701 484E  
                       u8621 3A8A                         u8541 2752                         u8461 2600  
                       u9181 35CA                         u9501 1152                         u9421 0F8E  
                       u9341 0E6E                         u9261 0D80                         u8390 439A  
                       u7910 1664                         u7830 159C                         u7750 1470  
                       u7670 138E                         u7590 1284                         u8710 4890  
                       u8630 3AC0                         u8550 27C8                         u8470 2620  
                       u9190 35DE                         u9510 1172                         u9430 0FC0  
                       u9350 0E98                         u9270 0DA0                         u8391 4396  
                       u7911 1660                         u7831 1598                         u7751 146C  
                       u7591 1280                         u8711 488C                         u8631 3ABC  
                       u8551 27C4                         u8471 261C                         u9191 35DA  
                       u9511 116E                         u9431 0FBC                         u9351 0E94  
                       u9271 0D9C                         u8800 42EE                         u7920 1684  
                       u7840 15AE                         u7760 14A8                         u7680 13B6  
                       u9600 3D92                         u8720 48C4                         u8640 3AD4  
                       u8560 27E0                         u8480 265C                         u9520 11E0  
                       u9440 0FE8                         u9360 0EB4                         u9280 0DBE  
                       u8801 42EA                         u7921 1680                         u7841 15AA  
                       u7761 14A4                         u7681 13B2                         u9601 3D8E  
                       u8721 48C0                         u8641 3AD0                         u8561 27DC  
                       u8481 2658                         u9521 11DC                         u9441 0FE4  
                       u9361 0EB0                         u9281 0DBA                         u8810 38CC  
                       u8730 526E                         u7930 1696                         u7850 15C4  
                       u7770 14EE                         u7690 13D4                         u9610 3DA0  
                       u8650 3B3E                         u8570 27F4                         u8490 269A  
                       u9530 1204                         u9450 1004                         u9370 0ED2  
                       u9290 0DD0                         u6955 516C                         u8811 38C8  
                       u8731 526A                         u7931 1692                         u7851 15C0  
                       u7771 14EA                         u7691 13D0                         u9611 3D9C  
                       u8651 3B3A                         u8571 27F0                         u8491 2696  
                       u9531 1200                         u9451 1000                         u9371 0ECE  
                       u9291 0DCC                         u6956 516E                         u8900 3A5A  
                       u8820 38DA                         u8740 4220                         u7940 16B2  
                       u7860 15DA                         u7780 1524                         u9700 3CB2  
                       u9620 3DC2                         u8660 3BD6                         u8580 2852  
                       u9460 1036                         u9380 0EEA                         u9540 4016  
                       u6965 5176                         u8901 3A56                         u8821 38D6  
                       u8741 421C                         u7941 16AE                         u7861 15D6  
                       u7781 1520                         u9701 3CAE                         u9621 3DBE  
                       u8661 3BD2                         u8581 284E                         u9461 1032  
                       u9381 0EE6                         u9541 4012                         u6990 519C  
                       u6966 5178                         u7950 1EBE                         u8830 3936  
                       u8750 4254                         u7870 15EE                         u7790 1534  
                       u9710 3CE2                         u9630 3E2A                         u8910 4FBA  
                       u8670 3F52                         u8590 4614                         u9470 10A8  
                       u9390 0F10                         u9550 406E                         u6991 5198  
                       u6975 5180                         u7951 1EBA                         u8831 3932  
                       u7871 15EA                         u7791 1530                         u9711 3CDE  
                       u9631 3E26                         u8911 4FB6                         u8671 3F4E  
                       u8591 4610                         u9471 10A4                         u9391 0F0C  
                       u9551 406A                         u6976 5182                         u7960 1ED0  
                       u8840 398C                         u8760 4282                         u7880 1608  
                       u9720 3CF4                         u9640 3E5A                         u8680 3FC4  
                       u9480 10B8                         u9560 4098                         u9800 33AA  
                       u8920 541E                         u6985 518A                         u7961 1ECC  
                       u8841 3988                         u8761 427E                         u7881 1604  
                       u9721 3CF0                         u9641 3E56                         u8681 3FC0  
                       u9481 10B4                         u9561 4094                         u9801 33A6  
                       u8921 541A                         u6986 518C                         u7970 1EE0  
                       u8850 39D6                         u8770 4296                         u7890 1642  
                       u8690 4FCE                         u9730 3D06                         u9650 3E7C  
                       u9490 1116                         u9570 40C0                         u9810 33C6  
                       u8930 4AD4                         u7971 1EDC                         u8851 39D2  
                       u8771 4292                         u8755 424A                         u7891 163E  
                       u8691 4FCA                         u9731 3D02                         u9651 3E78  
                       u9491 1112                         u9571 40BC                         u9811 33C2  
                       u8931 4AD0                         u7980 1F24                         u8860 39F4  
                       u8780 42BE                         u9740 3D28                         u9660 3C18  
                       u9900 22CC                         u9580 4CE8                         u9820 33D6  
                       u8940 4AF0                         u7981 1F20                         u8861 39F0  
                       u8781 42BA                         u9741 3D24                         u9661 3C14  
                       u9901 22C8                         u9581 4CE4                         u9821 33D2  
                       u8941 4AEC                         u7990 1F36                         u8870 3A04  
                       u8790 42DE                         u9670 3C2A                         u9910 23F4  
                       u9590 4D2E                         u9830 33F4                         u9750 3300  
                       u8950 4B34                         u7991 1F32                         u8871 3A00  
                       u8791 42DA                         u9671 3C26                         u9911 23F0  
                       u9591 4D2A                         u9831 33F0                         u9751 32FC  
                       u8951 4B30                         u8880 3A12                         u9680 3C3C  
                       u9920 2406                         u9840 3412                         u9760 3310  
                       u8881 3A0E                         u9681 3C38                         u9921 2402  
                       u8961 3080                         u9841 340E                         u9761 330C  
                       u8890 3A4C                         u9690 3C64                         u9930 2432  
                       u9850 3430                         u9770 3352                         u8891 3A48  
                       u9691 3C60                         u9931 242E                         u8971 308C  
                       u9851 342C                         u9771 334E                         u9940 246C  
                       u8980 313A                         u9860 3482                         u9780 3370  
                       u9941 2468                         u8981 3136                         u9861 347E  
                       u9781 336C                         u9950 2488                         u8990 3156  
                       u9870 34A0                         u9790 3380                         u9951 2484  
                       u8991 3152                         u9871 349C                         u9791 337C  
                       u9960 2572                         u9880 34C2                         u9961 256E  
                       u9881 34BE                         u9890 227A                         u9970 28A8  
                       u9891 2276                         u9971 28A4                         u9980 28E2  
                       u9981 28DE                         u9990 2AE4                         u9991 2AE0  
                       _main 4B36                         _ftoa 223E                         _itoa 3A6E  
                       _posc 4D98                         fsr0h 000FEA                         indf0 000FEF  
                       fsr2h 000FDA                         fsr0l 000FE9                         indf1 000FE7  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 005C                         prodh 000FF4                         prodl 000FF3  
                       start 000E           __size_of_LCD_Write 00A0                __CFG_IESO$OFF 000000  
            ___fldiv@new_exp 002F                _LCD_WriteChar 51E0                  _SYSTEM_Init 4F12  
              __CFG_MCLRE$ON 000000                _LCD_WriteByte 53F6                 ___param_bank 000000  
                ?_TIMER0_End 0001                  ?_TIMER0_Int 0004             __end_of_LCD_Init 4974  
       __size_of_BLED_Enable 004A                my_vsprintf@ch 01CE                __CFG_PLLDIV$5 000000  
             __CFG_CCP2MX$ON 000000               ?_LCD_SetRowCol 0008                ___fltol@sign1 0057  
            __end_of___aldiv 4208              __end_of___almod 4500              __end_of___fladd 16C6  
                      ?_main 0001                        ?_ftoa 0093              __end_of___fldiv 223E  
                      ?_itoa 00A4              __end_of___flneg 5290                        STR_10 7F42  
                      STR_11 7FB5                        STR_20 7FFC                        STR_12 7FA6  
                      STR_13 7ED3                        STR_14 7EA0                        STR_15 7FF0  
                      STR_16 7FE0                        STR_17 7F97                        STR_18 7F87  
                      STR_19 7EF0              __end_of___flmul 1AF2                        ?_posc 0008  
      __end_of_TIMER0_SetReg 5490              __end_of___flsub 5098              __end_of___fltol 4310  
                      u10000 2B02                        u10001 2AFE                        u10010 5202  
                      u10011 51FE                        u10020 5212                        u10100 0178  
                      u10021 520E                        u10101 0174                        u10110 018A  
                      u10030 50DC                        u10111 0186                        u10031 50D8  
                      u10200 08D0                        u10120 01D4                        u10201 08CC  
                      u10121 01D0                        u10041 0018                        u10210 08FC  
                      u10130 01E6                        u10211 08F8                        u10131 01E2  
                      u10051 003E                        u10300 0AD4                        u10220 0910  
                      u10140 0230                        u10060 0062                        u10301 0AD0  
                      u10221 090C                        u10141 022C                        u10061 005E  
                      u10310 0AF8                        u10230 0934                        u10150 025C  
                      u10070 00E2                        u10311 0AF4                        u10231 0930  
                      u10151 0258                        u10071 00DE                        u10400 1B90  
                      u10320 0C74                        u10240 0958                        u10160 0296  
                      u10080 011C                        u10321 0C70                        u10241 0954  
                      u10161 0292                        u10081 0118                        u10410 1BAC  
                      u10330 0C98                        u10250 0A34                        u10170 02BA  
                      u10090 0144                        u10411 1BA8                        u10331 0C94  
                      u10251 0A30                        u10171 02B6                        u10091 0140  
                      u10420 1BEE                        u10500 2EDE                        u10340 4A12  
                      u10260 0A54                        u10180 0894                        u10421 1BEA  
                      u10405 1B86                        u10501 2EDA                        u10341 4A0E  
                      u10261 0A50                        u10181 0890                        u10430 1CF4  
                      u10350 4D56                        u10270 0A70                        u10190 08B4  
                      u10431 1CF0                        u10351 4D52                        u10271 0A6C  
                      u10191 08B0                        u10440 1D92                        u10360 4D7C  
                      u10520 2F1A                        u10280 0A9C                        u10441 1D8E  
                      u10361 4D76                        u10521 2F16                        u10281 0A98  
                      u10450 1E52                        u10370 4D8E                        u10530 2F3A  
                      u10514 2EF0                        u10290 0AB0                        u10371 4D8A  
                      u10531 2F36                        u10515 2EEC                        u10291 0AAC  
                      u10460 1E6E                        u10380 1B32                        u10540 2F5A  
                      u10461 1E6A                        u10541 2F56                        u10390 1B5C  
                      u10366 4D7E                        u10550 2F6A                        u10455 1E48  
                      u10391 1B58                        u10551 2F66                        u10471 2E10  
                      u10480 2E58                        u10560 4514                        u10385 1B28  
                      u10481 2E54                        u10561 4510                        u10570 2B76  
                      u10490 2E7C                        u10707 48F8                        u10571 2B72  
                      u10491 2E78                        u10580 2CB8                        u10717 4912  
                      u10581 2CB4                        u10590 2CEA                        u10727 4954  
                      u10591 2CE6                        u10647 4BA4                        u10737 542C  
                      u10657 45CC                        u10667 5342                        u10677 2E26  
                      u10687 4D64                        u10697 48DE         __size_of_BLED_Toggle 0042  
             __CFG_DEBUG$OFF 000000                        i2l331 50E4                        i2l333 50EC  
                      i2l334 511E       __end_of_LCD_SendNibble 5484                        _RCREG 000FAE  
                      _TMR0H 000FD7                        _TMR1H 000FCF                        _TMR1L 000FCE  
                      _SPBRG 000FAF                        _PORTB 000F81                __CFG_USBDIV$2 000000  
                      _TRISB 000F93                        _TRISD 000F95                        _TXREG 000FAD  
           TIMER0_SetReg@val 0097                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000             TIMER0_SetTime@CT 00BA  
           TIMER0_SetTime@MC 00B6                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000                        _addOx 3BF4               __CFG_EBTRB$OFF 000000  
                      _getWP 3066                        _lcd_c 00DD                        _lcd_r 0059  
                      _myISR 0008                        _atoui 45DC                        _count 00E3  
                      _precE 34E2                        _precF 36EC                        _precG 0CAE  
                      _precI 3FE6                        _precS 4CB8                        _space 00E5  
                      _toint 7E98              __end_of_searchc 4F12      __size_of_INTERRUPT_Init 0008  
                      _zeros 00E7      __size_of_INTERRUPT_Tmr0 0006                        itoa@i 0020  
                      tablat 000FF5              __end_of_reverse 4AAC              __end_of_lroundf 5258  
                      posc@a 000C                        posc@c 000A          __size_of_LED_Enable 0062  
                      plusw1 000FE3                        plusw2 000FDB          __size_of_LCD_Printf 0036  
             _TIMER0_SetTime 2B56                        ttemp5 005D                        ttemp6 0060  
                      ttemp7 0064                BLED_Color@red 0005                        status 000FD8  
            __end_of_upperCL 4B36                        wtemp8 005D               __CFG_ICPRT$OFF 000000  
             ?_LCD_WriteChar 0001               ?_LCD_WriteByte 0001                 ?_SERIAL_Init 0012  
            __initialization 4C40                 __end_of_main 4BBE                 __end_of_ftoa 2580  
               __end_of_itoa 3BF4                 __end_of_posc 4DFA         SERIAL_WriteChar@data 0004  
        SerialLCD_task@F3983 02C4            ??_DHT11_Wait4Resp 0006                       ??_main 01FC  
                     ??_ftoa 0059                       ??_itoa 0016                       ??_posc 000B  
              __activetblptr 000002             ftoa_sci@exponent 00B8                    ??_LCD_CLS 0008  
            ?_LCD_SendNibble 0001                    ??_LCD_Lat 0004               my_vsprintf@str 00BA  
          __end_of_LCD_Write 4A14                       ?_addOx 0008          my_vsprintf@int_temp 01DE  
                     ?_getWP 00A4                       ?_myISR 0001                       ?_atoui 000A  
               LCD_Printf@ap 0282             ?_LCD_DisplayCtrl 0008                       ?_precE 001F  
                     ?_precF 001F                       ?_precG 001F                       ?_precI 0008  
                     ?_precS 0008       __end_of_TIMER0_SetTime 2E0A                       i2l6600 51CA  
                     i2l6602 51D0                       i2l6604 51DA                       i2l6482 50E0  
                     i2l6484 50F4                       i2l6594 51A2                       i2l6596 51B0  
                     i2l6598 51B6                       i2l9456 5108          __size_of_TIMER0_End 0004  
        __size_of_TIMER0_Int 0040              LCD_SendCmd@data 0007                       _SPBRGH 000FB0  
           __end_of___xxtofl 3A6E                 ??_DHT11_MReq 0047                 ??_DHT11_Init 0004  
             __CFG_VREGEN$ON 000000               __CFG_XINST$OFF 000000               getWP@precision 00A8  
               LCD_Write@str 000F                 ??_BLED_Color 0006                       ___flge 4310  
                     ___fleq 4824                       _addSig 3D6C                SERIAL_Write@i 000A  
                  ??___aldiv 000C                    ??___almod 000C                    ??___fladd 003F  
                     addOx@k 0011                       ___wmul 53AC                    ??___fldiv 0026  
                  ??___flneg 0008               __CFG_STVREN$ON 000000                    ??___flmul 004F  
                  ??___flsub 0053                    ??___fltol 008F                       _alingL 005B  
                     _cleanS 4F68              ??_LCD_SetRowCol 0009                       _keyPad 00EB  
           __end_of_ftoa_sci 2B56                       clear_0 4C86                       clear_1 4C92  
                     clear_2 4C9E                       getWP@i 0024                       getWP@j 002A  
                     getWP@k 0026                       getWP@p 0028               getWP@width_str 001D  
                     _roundf 1AF2                       _strcat 5386                       _strcpy 4E5C  
                     _strlen 52FC                       atoui@i 0011             __end_of_setWidth 34E2  
                     precE@i 002B                       precE@j 002D                       precE@k 002F  
                     precF@i 002A                       precG@f 0028                       precF@j 0026  
                     precF@k 002E                       precE@p 0025                       precG@i 0034  
       __size_of_LCD_SendCmd 002A                       precG@j 0030                       precG@k 0032  
                     precF@p 0028                       precG@p 0026                       precI@i 0014  
                     precI@j 0010                       precI@k 000E                       precS@i 0010  
                  ??_searchc 000B                 __mediumconst 7E88           __end_of_DHT11_MReq 3066  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
         __end_of_DHT11_Init 54A4                    ??_reverse 0014                    ??_lroundf 0059  
     __size_of_DHT11_GetRHum 0012       __size_of_DHT11_GetTemp 0012             __end_of_roundStr 2876  
                  ??_upperCL 000A            ?_SERIAL_WriteChar 0001                 ?_my_vsprintf 00BA  
            ?_TIMER0_SetTime 0099           __end_of_BLED_Color 476E                   ___flge@ff1 0004  
                 ___flge@ff2 0008                 ___xxtofl@arg 001A                 ___xxtofl@exp 0019  
               ___xxtofl@val 0010                   ___fleq@ff1 0004                   ___fleq@ff2 0008  
         ??_SERIAL_WriteChar 0004                   __accesstop 0060      __end_of__initialization 4CAA  
                  ?_LCD_Init 0001              __CFG_PBADEN$OFF 000000                   ___flneg@f1 0004  
            ??_LCD_WriteChar 000E              ??_LCD_WriteByte 0006                ___rparam_used 000001  
                 ___fltol@f1 008B                 ftoa@exponent 009D                ?_SERIAL_Write 0008  
             __pcstackCOMRAM 0001                 __pidataBANK0 543A                 __pidataBANK2 5120  
              __end_of_addOx 3D6C                __end_of_getWP 32B6                __end_of_myISR 51E0  
              __end_of_atoui 46AC                __end_of_precE 36EC                __end_of_precF 38BA  
              __end_of_precG 1206                __end_of_precI 40FC                __end_of_precS 4D30  
               ??_LED_Enable 0004                 ??_LCD_Printf 0059                __end_of_toint 7E9C  
     my_vsprintf@double_temp 01E0            my_vsprintf@buffer 018E         my_vsprintf@char_temp 0180  
          my_vsprintf@format 0182            my_vsprintf@length 01D2            my_vsprintf@valist 00BE  
                 addSig@numS 001E            my_vsprintf@string 0100        __end_offtoa_sci@width 7EA0  
                    ??_addOx 000D                      ??_getWP 0016                      ??_myISR 0004  
                    ??_atoui 000C                      ??_precE 0023                      ??_precF 0023  
                    ??_precG 0023                      ??_precI 000C                      ??_precS 000C  
             _INTERRUPT_Init 5490               _INTERRUPT_Tmr0 5498                ?_TIMER0_SetPs 0001  
                 __pbssBANK0 00C2                   __pbssBANK2 02C4                   __pbssBANK3 0300  
         __size_of_dtll_task 00DC                   ??_LCD_Init 0008           __end_of_LED_Enable 4E5C  
         __end_of_LCD_Printf 52FC              my_vsprintf@expA 01D4              my_vsprintf@prec 01E6  
            my_vsprintf@tipo 7E89               ??_SERIAL_Write 000A                 ?_SYSTEM_Init 0001  
              _DHT11_GetRHum 5460                _DHT11_GetTemp 544E                      ?___flge 0004  
                    ?___fleq 0004                      ?_addSig 001E                LED_Enable@led 0006  
                    ?___wmul 0004         __size_of_SERIAL_Init 0082                      ?_cleanS 0008  
               ??_TIMER0_End 0004                 ??_TIMER0_Int 0007                LCD_Printf@fmt 01E8  
                    ?_roundf 0075                      ?_strcat 0012                      ?_strcpy 0008  
                    ?_strlen 0004           __size_of_normalize 0126                      _LCD_CLS 5332  
                    _LCD_Lat 5424                    ?___xxtofl 0010       __size_of_SERIAL_Printf 0036  
     __end_of_INTERRUPT_Init 5498       __end_of_INTERRUPT_Tmr0 549E             LCD_SendCmd@fbyte 0006  
             ??_TIMER0_SetPs 0004                      _PS_TMR0 00EA                      _PS_TMR1 00E9  
       my_vsprintf@uint_temp 01D0                    ?_ftoa_sci 00AC           __end_of_TIMER0_End 54A8  
         __end_of_TIMER0_Int 51A0              _DHT11_Wait4Resp 4D30                  setWidth@len 0010  
                setWidth@str 0008           LCD_DisplayCtrl@cmd 000B                      __Hparam 0000  
             ?_DHT11_GetRHum 0004                    ?_setWidth 0008                      __Lparam 0000  
             ?_DHT11_GetTemp 0004                ??_BLED_Enable 0004                      ___aldiv 40FC  
            __size_of___flge 0104              __size_of___fleq 00AA                      ___almod 4414  
                    ___fladd 1206              __size_of_addSig 0154                      ___fldiv 1EA4  
                    ___flneg 5258                      ___flmul 16C6                      ___flsub 5050  
                    ___fltol 4208              __size_of___wmul 0026              __size_of_cleanS 0054  
           ??_LCD_SendNibble 0005                    ?_roundStr 000E                ??_BLED_Toggle 0001  
                    addSig@k 0028           TIMER0_SetTime@time 0099           TIMER0_SetTime@tmax 009D  
         TIMER0_SetTime@tmin 00A1                      __pcinit 4C40                      __ramtop 0800  
          __end_of_dtll_task 45DC                      __ptext0 4B36                      __ptext1 4500  
                    __ptext2 5290                      __ptext3 5098                      __ptext4 540E  
                    __ptext5 52C6                      __ptext6 0012                      __ptext7 4AAC  
                    __ptext8 5386                      __ptext9 32B6                 _dht_humidity 00D5  
                  _T0CONbits 000FD5              __size_of_roundf 03B2              __size_of_strcat 0026  
            __size_of_strcpy 005C              __size_of_strlen 0036                    _T1CONbits 000FCD  
                 ??___xxtofl 0014                      cleanS@i 000D                      _searchc 4EB8  
           ___aldiv@dividend 0004                      _precInt 00E6              ?_INTERRUPT_Init 0001  
                    _reverse 4A14                      _lroundf 521E              ?_INTERRUPT_Tmr0 0001  
                    _numeral 005A                      _upperCL 4AAC      __end_ofmy_vsprintf@tipo 7E98  
                  _LCD_Write 4974               __pintcode_body 51A0                      atoui@vp 000F  
       end_of_initialization 4CAA                  reverse@F192 0284                   getWP@width 00A6  
                 ??_ftoa_sci 0059         __size_of_my_vsprintf 0C9C                      itoa@rem 001C  
                    itoa@num 00A6             BLED_Toggle@biled 0003                __Lmediumconst 7E88  
                    itoa@str 00A4                      int_func 51A0            __end_of_normalize 3FE6  
     __size_of_TIMER0_SetReg 000C         dtll_task@relativeHum 01F8                   ??_setWidth 000C  
              _SERIAL_Printf 5290                      posc@str 0008                    _RCSTAbits 000FAB  
           ___aldiv@quotient 000E                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE              BLED_Color@biled 0008  
                    roundf@e 007D                      roundf@u 0083              BLED_Color@green 0004  
                    roundf@x 0075                      roundf@y 0087                   ??_roundStr 0014  
                    strcpy@d 0010                      strlen@a 0006                      strcpy@s 000E  
                    strlen@s 0004                    _PORTBbits 000F81                    _PORTCbits 000F82  
        __end_of_BLED_Enable 5050                  ___fladd@grs 0046             ??_TIMER0_SetTime 0059  
        __end_of_BLED_Toggle 5120                ___xxtofl@sign 0018         __end_of_SERIAL_Write 50DE  
                  _TRISAbits 000F92                    _TRISBbits 000F93                    _TRISCbits 000F94  
                  _TRISEbits 000F96                  ___fldiv@grs 0031                  ___fldiv@rem 002A  
          __end_offtoa@width 7E9E                   ?_LCD_Write 000F      __end_of_DHT11_Wait4Resp 4D98  
           LCD_SetRowCol@cmd 000B             LCD_SetRowCol@col 0008             LCD_SetRowCol@row 000D  
            TIMER0_Int@t0_8b 0007              TIMER0_Int@t0_cs 0004              TIMER0_Int@t0_se 0005  
         ftoa_sci@digit_1711 00B4                  ___flmul@grs 0062         dtll_task@temperature 01F4  
          normalize@exponent 006D                    _TXSTAbits 000FAC              ??_DHT11_GetRHum 0008  
            ??_DHT11_GetTemp 0008               ?_SERIAL_Printf 01E8     __size_of_LCD_DisplayCtrl 0024  
          __size_of_LCD_Init 00A6               ftoa_sci@buffer 00AC    __size_of_SERIAL_WriteChar 0016  
       __size_of_SYSTEM_Init 0056               __end_of___flge 4414               __end_of___fleq 48CE  
             __end_of_addSig 3EC0         __end_of_TIMER0_SetPs 4824               __end_of___wmul 53D2  
       TIMER0_SetPs@prescale 0006                  _BAUDCONbits 000FB8               __end_of_cleanS 4FBC  
                 LCD_Write@i 0013                ??_LCD_SendCmd 0007              TIMER0_SetTime@e 00B5  
      __end_of_LCD_SetRowCol 5006                _TIMER0_SetReg 5484               __end_of_roundf 1EA4  
             __end_of_strcat 53AC                   ftoa@buffer 0093               __end_of_strcpy 4EB8  
             __end_of_strlen 5332          start_initialization 4C40                   ftoa@places 009F  
              setWidth@width 000A         LCD_DisplayCtrl@disOn 000A         LCD_DisplayCtrl@curOn 0008  
           setWidth@widthDif 000E             SERIAL_Printf@fmt 01E8       my_vsprintf@string_temp 018C  
         my_vsprintf@sformat 00BC        __end_of_LCD_WriteChar 521E        __end_of_LCD_WriteByte 540E  
              getWP@prec_str 0018                     ??___flge 000C                     ??___fleq 000C  
                   ??_addSig 0024               precE@precision 0021                  _BLED_Enable 5006  
                   ??___wmul 0008                  roundStr@len 0017                     ??_cleanS 000A  
                roundStr@prn 0012                  __pdataBANK0 00EB                  __pdataBANK2 0284  
           __CFG_LPT1OSC$OFF 000000      LCD_DisplayCtrl@curBlink 0009                  _BLED_Toggle 50DE  
                   ??_roundf 0053                     ??_strcat 0016               precF@precision 0021  
                   ??_strcpy 000C                     ??_strlen 0006               ?_TIMER0_SetReg 0097  
           my_vsprintf@F4000 00DF             my_vsprintf@F4003 0380                    ___fladd@a 003B  
           my_vsprintf@F3988 0300             my_vsprintf@F3996 00E1                    ___fladd@b 0037  
                   ?_LCD_CLS 0001                    ___fldiv@a 0022                    ___fldiv@b 001E  
                   ?_LCD_Lat 0001                    ___flmul@a 004B                    ___flmul@b 0047  
                __pbssCOMRAM 0059                    ___flsub@a 0071                    ___flsub@b 006D  
              __pcstackBANK0 0060                __pcstackBANK1 0100                __pcstackBANK2 0200  
        __end_of_LCD_SendCmd 5386               precG@precision 0021            __size_of___xxtofl 01B4  
                ??_LCD_Write 0011             ?_DHT11_Wait4Resp 0004             _SERIAL_Init$2747 0016  
           my_vsprintf@error 01D6             my_vsprintf@width 01DA                    addSig@len 0026  
                  addSig@num 0020                    addOx@type 000C              ??_SERIAL_Printf 0059  
        SERIAL_Printf@strout 0200            __size_of_ftoa_sci 02E0                ??_SERIAL_Init 0016  
                 searchc@str 0008                    __pintcode 0008               precI@precision 000A  
              __pmediumconst 7E88                     ?___aldiv 0004                     ?___almod 0004  
                   ?___fladd 0037                     ?___fldiv 001E                     ?___flneg 0004  
          __size_of_setWidth 022C                     ?___flmul 0047                     ?___flsub 006D  
                   ?___fltol 008B           LCD_SendNibble@data 0005            ??_LCD_DisplayCtrl 000A  
           ___almod@dividend 0004        __size_of_SERIAL_Write 0046             ??_INTERRUPT_Init 0004  
           ??_INTERRUPT_Tmr0 0004                    _itoa$1693 0018            __size_of_roundStr 02F6  
             normalize@value 006F              DHT11_MReq@F3989 00C2                     ?_searchc 0008  
                  _dtll_task 4500                     ?_reverse 0012                     ?_lroundf 0093  
             __size_of_addOx 0178               __size_of_getWP 0250                     ?_upperCL 0008  
             __size_of_myISR 51D8               __size_of_atoui 00D0               __size_of_precE 020A  
             __size_of_precF 01CE               __size_of_precG 0558               __size_of_precI 0116  
             __size_of_precS 0078                    getWP@F271 00C7                    getWP@F269 00CC  
                  cleanS@len 000B                    cleanS@str 0008           DHT11_MReq@checksum 0049  
            ___aldiv@divisor 0008              DHT11_MReq@error 0051              ___aldiv@counter 000C  
                   _LCD_Init 48CE               ___wmul@product 0008                     _LATBbits 000F8A  
                   _LATCbits 000F8B                     _LATDbits 000F8C                     _LATEbits 000F8D  
                  getWP@form 00A4                     _PIE1bits 000F9D                   reverse@str 0012  
      __size_of_TIMER0_SetPs 00B6                     _PIR1bits 000F9E                  DHT11_MReq@i 0052  
                DHT11_MReq@j 0054                     i2u713_40 51B0                     i2u713_41 51AC  
                   i2u714_40 51CA                     i2u714_41 51C6                 _SERIAL_Write 5098  
            SERIAL_Init@BAUD 0012                     _RCONbits 000FD0             _SERIAL_WriteChar 540E  
           __CFG_WDTPS$32768 000000                    _normalize 3EC0          __end_of_SERIAL_Init 4C40  
            ??_TIMER0_SetReg 0059          _TIMER0_SetTime$1449 00B1          _TIMER0_SetTime$2750 00AD  
        _TIMER0_SetTime$2748 00A5          _TIMER0_SetTime$2749 00A9                  _LCD_SendCmd 535C  
          ___wmul@multiplier 0004             __size_of_LCD_CLS 002A             __size_of_LCD_Lat 0016  
                 ?_dtll_task 0001                ftoa_sci@digit 00B2                ftoa_sci@value 00AE  
              ftoa_sci@width 7E9E                ??_my_vsprintf 00C0                  _INTCON2bits 000FF1  
                _INTCON3bits 000FF0                    copy_data0 4C54                    copy_data1 4C74  
               _TIMER0_SetPs 476E                    ftoa@digit 0099                    ftoa@value 0095  
                  ftoa@width 7E9C              SERIAL_Printf@ap 0282                   roundf@F525 00D1  
           LCD_Printf@strout 0200                   _DHT11_MReq 2E0A                   _DHT11_Init 549E  
DHT11_Wait4Resp@retryTimeout 0007                     __Hrparam 0000                    ftoa_sci@i 00B6  
                   __Lrparam 0000                   _BLED_Color 46AC                   ?_normalize 0053  
                  itoa@base_ 00AA             __size_of___aldiv 010C             __size_of___almod 00EC  
           __size_of___fladd 04C0           LCD_WriteChar@wData 000E             __size_of___fldiv 039A  
           __size_of___flneg 0038             __size_of___flmul 042C             __size_of___flsub 0048  
           __size_of___fltol 0108          DHT11_Wait4Resp@HtoL 0006                   upperCL@str 0008  
            SERIAL_Write@str 0008  DHT11_Wait4Resp@timeout_10us 0004                     addOx@hoS 0008  
                   addOx@len 000F                     addOx@num 000A                reverse@auxstr 0060  
                   ___xxtofl 38BA                   strcat@dest 0012                    precG@digS 002A  
                  precE@posE 0029                    precG@posE 002C             __size_of_searchc 005A  
    __size_of_LCD_SendNibble 0012                     __ptext10 4CB8                     __ptext11 3FE6  
                   __ptext20 53AC                     __ptext12 0CAE                     __ptext21 2876  
                   __ptext13 36EC                     __ptext30 3D6C                     __ptext22 3A6E  
                   __ptext14 34E2                     __ptext31 3BF4                     __ptext23 4A14  
                   __ptext15 2580                     __ptext40 544E                     __ptext32 52FC  
                   __ptext24 4E5C                     __ptext16 3066                     __ptext41 5460  
                   __ptext33 4974                     __ptext25 4414                     __ptext17 4EB8  
                   __ptext50 4208                     __ptext42 2B56                     __ptext34 51E0  
                   __ptext26 223E                     __ptext18 4D98                     __ptext51 38BA  
                   __ptext43 521E                     __ptext35 53F6                     __ptext27 3EC0  
                   __ptext19 45DC                     __ptext60 4DFA                     __ptext52 1EA4  
                   __ptext44 1AF2                     __ptext36 4FBC                     __ptext28 4824  
                   __ptext61 48CE                     __ptext53 5484                     __ptext45 5050  
                   __ptext37 5332                     __ptext29 4F68                     __ptext70 46AC  
                   __ptext62 5498                     __ptext54 54A4                     __ptext46 1206  
                   __ptext38 2E0A                     __ptext63 5490                     __ptext55 4F12  
                   __ptext47 5258                     __ptext39 4D30                     __ptext72 50DE  
                   __ptext64 549E                     __ptext56 476E                     __ptext48 16C6  
                   __ptext65 5006                     __ptext57 5160                     __ptext49 4310  
                   __ptext66 53D2                     __ptext58 4BBE                     __ptext67 535C  
                   __ptext59 40FC                     __ptext68 5472                     __ptext69 5424  
           __size_of_reverse 0098             __size_of_lroundf 003A                     _dht_temp 00D9  
             precS@precision 000A              ___almod@divisor 0008             __size_of_upperCL 008A  
            ___almod@counter 000C                   strcpy@dest 0008                    setWidth@j 0012  
                   _ftoa_sci 2876                __size_of_main 0088                __size_of_ftoa 0342  
              __size_of_itoa 0186                __size_of_posc 0062             BLED_Enable@biled 0006  
             roundStr@decnum 000E               DHT11_MReq@data 004C          __end_of_my_vsprintf 0CAE  
                   getWP@len 0022        __end_of_DHT11_GetRHum 5472                ??_SYSTEM_Init 001C  
                   _setWidth 32B6                  _SERIAL_Init 4BBE        __end_of_DHT11_GetTemp 5460  
               ?_BLED_Enable 0001                     int$flags 005C                     _roundStr 2580  
                 _LED_Enable 4DFA                 ?_BLED_Toggle 0001                   _LCD_Printf 52C6  
          DHT11_MReq@voltLen 004A                     atoui@num 000D                     atoui@str 000A  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2                  ??_dtll_task 01F2  
         LCD_WriteByte@wData 0006                    roundStr@e 0010                    roundStr@i 001B  
                  roundStr@k 001D                    roundStr@p 0019          SERIAL_Init@baudrate 001A  
                   intlevel2 0000                     precE@len 0027                     searchc@a 000C  
                   searchc@c 000A                    strcat@src 0014                     precF@len 002C  
                   precG@len 002E                     precE@str 001F                     precI@len 0012  
                   precF@str 001F                     precG@str 001F                     precI@str 0008  
                   precS@len 000E                     precS@str 0008      __size_of_TIMER0_SetTime 02B4  
            _LCD_DisplayCtrl 53D2                 normalize@val 0053       __size_of_LCD_SetRowCol 004A  
                ?_DHT11_MReq 0001                    strcpy@src 000A                  ?_DHT11_Init 0001  
                   reverse@i 00A2                     reverse@j 00A0                     lroundf@x 0093  
                ?_BLED_Color 0004                  ??_normalize 0055               ftoa@digit_1719 009B  
                 _TIMER0_End 54A4                   _TIMER0_Int 5160          __end_of_SYSTEM_Init 4F68  
                   upperCL@i 000B                 ___aldiv@sign 000D       __size_of_LCD_WriteChar 003E  
     __size_of_LCD_WriteByte 0018     __end_of_SERIAL_WriteChar 5424                ___fladd@signs 0043  
                _my_vsprintf 0012           __CFG_FOSC$HSPLL_HS 000000                 ___almod@sign 000D  
               ___fladd@aexp 0044                 ___fladd@bexp 0045        __end_of_SERIAL_Printf 52C6  
                _roundf$2751 007F     __size_of_DHT11_Wait4Resp 0068                  _roundf$2752 0079  
