

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Sep 04 21:59:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           ; Version 2.10
    89                           ; Generated 31/07/2019 GMT
    90                           ; 
    91                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F4550 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK0
   124  004EAE                     __pidataBANK0:
   125                           	opt callstack 0
   126                           
   127                           ;initializer for my_vprintf@F3551
   128  004EAE  20                 	db	32
   129  004EAF  00                 	db	0
   130  004EB0  00                 	db	0
   131  004EB1  00                 	db	0
   132  004EB2  00                 	db	0
   133  004EB3  00                 	db	0
   134  004EB4  00                 	db	0
   135  004EB5  00                 	db	0
   136  004EB6  00                 	db	0
   137  004EB7  00                 	db	0
   138  004EB8  00                 	db	0
   139  004EB9  00                 	db	0
   140  004EBA  00                 	db	0
   141  004EBB  00                 	db	0
   142  004EBC  00                 	db	0
   143  004EBD  00                 	db	0
   144  004EBE  00                 	db	0
   145  004EBF  00                 	db	0
   146  004EC0  00                 	db	0
   147  004EC1  00                 	db	0
   148  004EC2  00                 	db	0
   149  004EC3  00                 	db	0
   150  004EC4  00                 	db	0
   151  004EC5  00                 	db	0
   152  004EC6  00                 	db	0
   153  004EC7  00                 	db	0
   154  004EC8  00                 	db	0
   155  004EC9  00                 	db	0
   156  004ECA  00                 	db	0
   157  004ECB  00                 	db	0
   158  004ECC  00                 	db	0
   159  004ECD  00                 	db	0
   160  004ECE  00                 	db	0
   161  004ECF  00                 	db	0
   162  004ED0  00                 	db	0
   163  004ED1  00                 	db	0
   164  004ED2  00                 	db	0
   165  004ED3  00                 	db	0
   166  004ED4  00                 	db	0
   167  004ED5  00                 	db	0
   168  004ED6  00                 	db	0
   169  004ED7  00                 	db	0
   170  004ED8  00                 	db	0
   171  004ED9  00                 	db	0
   172  004EDA  00                 	db	0
   173  004EDB  00                 	db	0
   174  004EDC  00                 	db	0
   175  004EDD  00                 	db	0
   176  004EDE  00                 	db	0
   177  004EDF  00                 	db	0
   178  004EE0  00                 	db	0
   179  004EE1  00                 	db	0
   180  004EE2  00                 	db	0
   181  004EE3  00                 	db	0
   182  004EE4  00                 	db	0
   183  004EE5  00                 	db	0
   184  004EE6  00                 	db	0
   185  004EE7  00                 	db	0
   186  004EE8  00                 	db	0
   187  004EE9  00                 	db	0
   188  004EEA  00                 	db	0
   189  004EEB  00                 	db	0
   190  004EEC  00                 	db	0
   191  004EED  00                 	db	0
   192                           
   193                           ;initializer for _keyPad
   194  004EEE  31                 	db	49
   195  004EEF  32                 	db	50
   196  004EF0  33                 	db	51
   197  004EF1  41                 	db	65
   198  004EF2  34                 	db	52
   199  004EF3  35                 	db	53
   200  004EF4  36                 	db	54
   201  004EF5  42                 	db	66
   202  004EF6  37                 	db	55
   203  004EF7  38                 	db	56
   204  004EF8  39                 	db	57
   205  004EF9  43                 	db	67
   206  004EFA  2A                 	db	42
   207  004EFB  30                 	db	48
   208  004EFC  23                 	db	35
   209  004EFD  44                 	db	68
   210  004EFE  00                 	db	0
   211  004EFF  00                 	db	0
   212  004F00  00                 	db	0
   213  004F01  00                 	db	0
   214                           
   215                           ;initializer for _Pattern1
   216  004F02  0E                 	db	14
   217  004F03  0E                 	db	14
   218  004F04  04                 	db	4
   219  004F05  04                 	db	4
   220  004F06  1F                 	db	31
   221  004F07  04                 	db	4
   222  004F08  0A                 	db	10
   223  004F09  0A                 	db	10
   224                           
   225                           	psect	idataBANK2
   226  0052F6                     __pidataBANK2:
   227                           	opt callstack 0
   228                           
   229                           ;initializer for reverse@F192
   230  0052F6  20                 	db	32
   231  0052F7  00                 	db	0
   232  0052F8  00                 	db	0
   233  0052F9  00                 	db	0
   234  0052FA  00                 	db	0
   235  0052FB  00                 	db	0
   236  0052FC  00                 	db	0
   237  0052FD  00                 	db	0
   238  0052FE  00                 	db	0
   239  0052FF  00                 	db	0
   240  005300  00                 	db	0
   241  005301  00                 	db	0
   242  005302  00                 	db	0
   243  005303  00                 	db	0
   244  005304  00                 	db	0
   245  005305  00                 	db	0
   246  005306  00                 	db	0
   247  005307  00                 	db	0
   248  005308  00                 	db	0
   249  005309  00                 	db	0
   250  00530A  00                 	db	0
   251  00530B  00                 	db	0
   252  00530C  00                 	db	0
   253  00530D  00                 	db	0
   254  00530E  00                 	db	0
   255  00530F  00                 	db	0
   256  005310  00                 	db	0
   257  005311  00                 	db	0
   258  005312  00                 	db	0
   259  005313  00                 	db	0
   260  005314  00                 	db	0
   261  005315  00                 	db	0
   262  005316  00                 	db	0
   263  005317  00                 	db	0
   264  005318  00                 	db	0
   265  005319  00                 	db	0
   266  00531A  00                 	db	0
   267  00531B  00                 	db	0
   268  00531C  00                 	db	0
   269  00531D  00                 	db	0
   270  00531E  00                 	db	0
   271  00531F  00                 	db	0
   272  005320  00                 	db	0
   273  005321  00                 	db	0
   274  005322  00                 	db	0
   275  005323  00                 	db	0
   276  005324  00                 	db	0
   277  005325  00                 	db	0
   278  005326  00                 	db	0
   279  005327  00                 	db	0
   280  005328  00                 	db	0
   281  005329  00                 	db	0
   282  00532A  00                 	db	0
   283  00532B  00                 	db	0
   284  00532C  00                 	db	0
   285  00532D  00                 	db	0
   286  00532E  00                 	db	0
   287  00532F  00                 	db	0
   288  005330  00                 	db	0
   289  005331  00                 	db	0
   290  005332  00                 	db	0
   291  005333  00                 	db	0
   292  005334  00                 	db	0
   293  005335  00                 	db	0
   294                           
   295                           	psect	smallconst
   296  000800                     __psmallconst:
   297                           	opt callstack 0
   298  000800  00                 	db	0
   299  000801                     my_vprintf@tipo:
   300                           	opt callstack 0
   301  000801  25                 	db	37
   302  000802  63                 	db	99
   303  000803  73                 	db	115
   304  000804  64                 	db	100
   305  000805  69                 	db	105
   306  000806  78                 	db	120
   307  000807  58                 	db	88
   308  000808  6F                 	db	111
   309  000809  75                 	db	117
   310  00080A  66                 	db	102
   311  00080B  67                 	db	103
   312  00080C  47                 	db	71
   313  00080D  65                 	db	101
   314  00080E  45                 	db	69
   315  00080F  6E                 	db	110
   316  000810                     __end_ofmy_vprintf@tipo:
   317                           	opt callstack 0
   318  000810  0007               	dw	7
   319  000812                     __end_offtoa@width:
   320                           	opt callstack 0
   321  000812  0006               	dw	6
   322  000814                     __end_offtoa_sci@width:
   323                           	opt callstack 0
   324  0000                     _LATD	set	3980
   325  0000                     _LATDbits	set	3980
   326  0000                     _TRISD	set	3989
   327  0000                     _TMR1L	set	4046
   328  0000                     _TMR1H	set	4047
   329  0000                     _T1CONbits	set	4045
   330  0000                     _TRISAbits	set	3986
   331  0000                     _T0CONbits	set	4053
   332  0000                     _LATEbits	set	3981
   333  0000                     _TRISEbits	set	3990
   334  0000                     _PORTBbits	set	3969
   335  0000                     _LATBbits	set	3978
   336  0000                     _LATB	set	3978
   337  0000                     _TRISB	set	3987
   338  0000                     _PORTB	set	3969
   339  0000                     _PIE1bits	set	3997
   340  0000                     _INTCON3bits	set	4080
   341  0000                     _INTCON2bits	set	4081
   342  0000                     _TRISBbits	set	3987
   343  0000                     _RCONbits	set	4048
   344  0000                     _RCREG	set	4014
   345  0000                     _PIR1bits	set	3998
   346  0000                     _TXREG	set	4013
   347  0000                     _SPBRG	set	4015
   348  0000                     _SPBRGH	set	4016
   349  0000                     _BAUDCONbits	set	4024
   350  0000                     _TXSTAbits	set	4012
   351  0000                     _RCSTAbits	set	4011
   352  0000                     _TRISCbits	set	3988
   353  0000                     _LATCbits	set	3979
   354  0000                     _TMR0L	set	4054
   355  0000                     _TMR0H	set	4055
   356  0000                     _INTCONbits	set	4082
   357  000814                     STR_5:
   358  000814  4D                 	db	77	;'M'
   359  000815  6F                 	db	111	;'o'
   360  000816  74                 	db	116	;'t'
   361  000817  6F                 	db	111	;'o'
   362  000818  72                 	db	114	;'r'
   363  000819  20                 	db	32
   364  00081A  67                 	db	103	;'g'
   365  00081B  69                 	db	105	;'i'
   366  00081C  72                 	db	114	;'r'
   367  00081D  61                 	db	97	;'a'
   368  00081E  6E                 	db	110	;'n'
   369  00081F  64                 	db	100	;'d'
   370  000820  6F                 	db	111	;'o'
   371  000821  20                 	db	32
   372  000822  61                 	db	97	;'a'
   373  000823  20                 	db	32
   374  000824  6C                 	db	108	;'l'
   375  000825  61                 	db	97	;'a'
   376  000826  20                 	db	32
   377  000827  49                 	db	73	;'I'
   378  000828  7A                 	db	122	;'z'
   379  000829  71                 	db	113	;'q'
   380  00082A  75                 	db	117	;'u'
   381  00082B  69                 	db	105	;'i'
   382  00082C  65                 	db	101	;'e'
   383  00082D  72                 	db	114	;'r'
   384  00082E  64                 	db	100	;'d'
   385  00082F  61                 	db	97	;'a'
   386  000830  0A                 	db	10
   387  000831  0A                 	db	10
   388  000832  00                 	db	0
   389  000833                     STR_4:
   390  000833  4D                 	db	77	;'M'
   391  000834  6F                 	db	111	;'o'
   392  000835  74                 	db	116	;'t'
   393  000836  6F                 	db	111	;'o'
   394  000837  72                 	db	114	;'r'
   395  000838  20                 	db	32
   396  000839  67                 	db	103	;'g'
   397  00083A  69                 	db	105	;'i'
   398  00083B  72                 	db	114	;'r'
   399  00083C  61                 	db	97	;'a'
   400  00083D  6E                 	db	110	;'n'
   401  00083E  64                 	db	100	;'d'
   402  00083F  6F                 	db	111	;'o'
   403  000840  20                 	db	32
   404  000841  61                 	db	97	;'a'
   405  000842  20                 	db	32
   406  000843  6C                 	db	108	;'l'
   407  000844  61                 	db	97	;'a'
   408  000845  20                 	db	32
   409  000846  49                 	db	73	;'I'
   410  000847  7A                 	db	122	;'z'
   411  000848  71                 	db	113	;'q'
   412  000849  75                 	db	117	;'u'
   413  00084A  69                 	db	105	;'i'
   414  00084B  65                 	db	101	;'e'
   415  00084C  72                 	db	114	;'r'
   416  00084D  64                 	db	100	;'d'
   417  00084E  61                 	db	97	;'a'
   418  00084F  0A                 	db	10
   419  000850  0D                 	db	13
   420  000851  00                 	db	0
   421  000852                     STR_3:
   422  000852  4D                 	db	77	;'M'
   423  000853  6F                 	db	111	;'o'
   424  000854  74                 	db	116	;'t'
   425  000855  6F                 	db	111	;'o'
   426  000856  72                 	db	114	;'r'
   427  000857  20                 	db	32
   428  000858  67                 	db	103	;'g'
   429  000859  69                 	db	105	;'i'
   430  00085A  72                 	db	114	;'r'
   431  00085B  61                 	db	97	;'a'
   432  00085C  6E                 	db	110	;'n'
   433  00085D  64                 	db	100	;'d'
   434  00085E  6F                 	db	111	;'o'
   435  00085F  20                 	db	32
   436  000860  61                 	db	97	;'a'
   437  000861  20                 	db	32
   438  000862  6C                 	db	108	;'l'
   439  000863  61                 	db	97	;'a'
   440  000864  20                 	db	32
   441  000865  44                 	db	68	;'D'
   442  000866  65                 	db	101	;'e'
   443  000867  72                 	db	114	;'r'
   444  000868  65                 	db	101	;'e'
   445  000869  63                 	db	99	;'c'
   446  00086A  68                 	db	104	;'h'
   447  00086B  61                 	db	97	;'a'
   448  00086C  0A                 	db	10
   449  00086D  0A                 	db	10
   450  00086E  00                 	db	0
   451  00086F                     STR_2:
   452  00086F  4D                 	db	77	;'M'
   453  000870  6F                 	db	111	;'o'
   454  000871  74                 	db	116	;'t'
   455  000872  6F                 	db	111	;'o'
   456  000873  72                 	db	114	;'r'
   457  000874  20                 	db	32
   458  000875  67                 	db	103	;'g'
   459  000876  69                 	db	105	;'i'
   460  000877  72                 	db	114	;'r'
   461  000878  61                 	db	97	;'a'
   462  000879  6E                 	db	110	;'n'
   463  00087A  64                 	db	100	;'d'
   464  00087B  6F                 	db	111	;'o'
   465  00087C  20                 	db	32
   466  00087D  61                 	db	97	;'a'
   467  00087E  20                 	db	32
   468  00087F  6C                 	db	108	;'l'
   469  000880  61                 	db	97	;'a'
   470  000881  20                 	db	32
   471  000882  44                 	db	68	;'D'
   472  000883  65                 	db	101	;'e'
   473  000884  72                 	db	114	;'r'
   474  000885  65                 	db	101	;'e'
   475  000886  63                 	db	99	;'c'
   476  000887  68                 	db	104	;'h'
   477  000888  61                 	db	97	;'a'
   478  000889  0A                 	db	10
   479  00088A  0D                 	db	13
   480  00088B  00                 	db	0
   481  00088C                     STR_8:
   482  00088C  4C                 	db	76	;'L'
   483  00088D  61                 	db	97	;'a'
   484  00088E  20                 	db	32
   485  00088F  75                 	db	117	;'u'
   486  000890  6C                 	db	108	;'l'
   487  000891  74                 	db	116	;'t'
   488  000892  69                 	db	105	;'i'
   489  000893  6D                 	db	109	;'m'
   490  000894  61                 	db	97	;'a'
   491  000895  20                 	db	32
   492  000896  74                 	db	116	;'t'
   493  000897  65                 	db	101	;'e'
   494  000898  63                 	db	99	;'c'
   495  000899  6C                 	db	108	;'l'
   496  00089A  61                 	db	97	;'a'
   497  00089B  20                 	db	32
   498  00089C  66                 	db	102	;'f'
   499  00089D  75                 	db	117	;'u'
   500  00089E  65                 	db	101	;'e'
   501  00089F  20                 	db	32
   502  0008A0  25                 	db	37
   503  0008A1  75                 	db	117	;'u'
   504  0008A2  0A                 	db	10
   505  0008A3  0A                 	db	10
   506  0008A4  00                 	db	0
   507  0008A5                     STR_7:
   508  0008A5  4D                 	db	77	;'M'
   509  0008A6  6F                 	db	111	;'o'
   510  0008A7  74                 	db	116	;'t'
   511  0008A8  6F                 	db	111	;'o'
   512  0008A9  72                 	db	114	;'r'
   513  0008AA  20                 	db	32
   514  0008AB  64                 	db	100	;'d'
   515  0008AC  65                 	db	101	;'e'
   516  0008AD  74                 	db	116	;'t'
   517  0008AE  65                 	db	101	;'e'
   518  0008AF  6E                 	db	110	;'n'
   519  0008B0  69                 	db	105	;'i'
   520  0008B1  64                 	db	100	;'d'
   521  0008B2  6F                 	db	111	;'o'
   522  0008B3  0A                 	db	10
   523  0008B4  0A                 	db	10
   524  0008B5  00                 	db	0
   525  0008B6                     STR_6:
   526  0008B6  4D                 	db	77	;'M'
   527  0008B7  6F                 	db	111	;'o'
   528  0008B8  74                 	db	116	;'t'
   529  0008B9  6F                 	db	111	;'o'
   530  0008BA  72                 	db	114	;'r'
   531  0008BB  20                 	db	32
   532  0008BC  64                 	db	100	;'d'
   533  0008BD  65                 	db	101	;'e'
   534  0008BE  74                 	db	116	;'t'
   535  0008BF  65                 	db	101	;'e'
   536  0008C0  6E                 	db	110	;'n'
   537  0008C1  69                 	db	105	;'i'
   538  0008C2  64                 	db	100	;'d'
   539  0008C3  6F                 	db	111	;'o'
   540  0008C4  0A                 	db	10
   541  0008C5  00                 	db	0
   542  0008C6                     STR_9:
   543  0008C6  42                 	db	66	;'B'
   544  0008C7  49                 	db	73	;'I'
   545  0008C8  45                 	db	69	;'E'
   546  0008C9  4E                 	db	78	;'N'
   547  0008CA  56                 	db	86	;'V'
   548  0008CB  45                 	db	69	;'E'
   549  0008CC  4E                 	db	78	;'N'
   550  0008CD  49                 	db	73	;'I'
   551  0008CE  44                 	db	68	;'D'
   552  0008CF  4F                 	db	79	;'O'
   553  0008D0  0A                 	db	10
   554  0008D1  20                 	db	32
   555  0008D2  3A                 	db	58	;':'
   556  0008D3  29                 	db	41
   557  0008D4  00                 	db	0
   558  0008D5                     STR_1:
   559  0008D5  42                 	db	66	;'B'
   560  0008D6  49                 	db	73	;'I'
   561  0008D7  45                 	db	69	;'E'
   562  0008D8  4E                 	db	78	;'N'
   563  0008D9  56                 	db	86	;'V'
   564  0008DA  45                 	db	69	;'E'
   565  0008DB  4E                 	db	78	;'N'
   566  0008DC  49                 	db	73	;'I'
   567  0008DD  44                 	db	68	;'D'
   568  0008DE  4F                 	db	79	;'O'
   569  0008DF  0A                 	db	10
   570  0008E0  0A                 	db	10
   571  0008E1  00                 	db	0
   572  0008E2                     STR_11:
   573  0008E2  20                 	db	32
   574  0008E3  00                 	db	0
   575  0008E4                     STR_10:
   576  0008E4  25                 	db	37
   577  0008E5  00                 	db	0
   578                           
   579                           ; #config settings
   580  0008E6  00                 	db	0	; dummy byte at the end
   581  0000                     
   582                           	psect	cinit
   583  004DE0                     __pcinit:
   584                           	opt callstack 0
   585  004DE0                     start_initialization:
   586                           	opt callstack 0
   587  004DE0                     __initialization:
   588                           	opt callstack 0
   589                           
   590                           ; Initialize objects allocated to BANK2 (64 bytes)
   591                           ; load TBLPTR registers with __pidataBANK2
   592  004DE0  0EF6               	movlw	low __pidataBANK2
   593  004DE2  6EF6               	movwf	tblptrl,c
   594  004DE4  0E52               	movlw	high __pidataBANK2
   595  004DE6  6EF7               	movwf	tblptrh,c
   596  004DE8  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   597  004DEA  6EF8               	movwf	tblptru,c
   598  004DEC  EE02  F080         	lfsr	0,__pdataBANK2
   599  004DF0  EE10 F040          	lfsr	1,64
   600  004DF4                     copy_data0:
   601  004DF4  0009               	tblrd		*+
   602  004DF6  CFF5 FFEE          	movff	tablat,postinc0
   603  004DFA  50E5               	movf	postdec1,w,c
   604  004DFC  50E1               	movf	fsr1l,w,c
   605  004DFE  E1FA               	bnz	copy_data0
   606                           
   607                           ; Initialize objects allocated to BANK0 (92 bytes)
   608                           ; load TBLPTR registers with __pidataBANK0
   609  004E00  0EAE               	movlw	low __pidataBANK0
   610  004E02  6EF6               	movwf	tblptrl,c
   611  004E04  0E4E               	movlw	high __pidataBANK0
   612  004E06  6EF7               	movwf	tblptrh,c
   613  004E08  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   614  004E0A  6EF8               	movwf	tblptru,c
   615  004E0C  EE00  F060         	lfsr	0,__pdataBANK0
   616  004E10  EE10 F05C          	lfsr	1,92
   617  004E14                     copy_data1:
   618  004E14  0009               	tblrd		*+
   619  004E16  CFF5 FFEE          	movff	tablat,postinc0
   620  004E1A  50E5               	movf	postdec1,w,c
   621  004E1C  50E1               	movf	fsr1l,w,c
   622  004E1E  E1FA               	bnz	copy_data1
   623                           
   624                           ; Clear objects allocated to BANK2 (128 bytes)
   625  004E20  EE02  F000         	lfsr	0,__pbssBANK2
   626  004E24  0E80               	movlw	128
   627  004E26                     clear_0:
   628  004E26  6AEE               	clrf	postinc0,c
   629  004E28  06E8               	decf	wreg,f,c
   630  004E2A  E1FD               	bnz	clear_0
   631                           
   632                           ; Clear objects allocated to BANK0 (23 bytes)
   633  004E2C  EE00  F0BC         	lfsr	0,__pbssBANK0
   634  004E30  0E17               	movlw	23
   635  004E32                     clear_1:
   636  004E32  6AEE               	clrf	postinc0,c
   637  004E34  06E8               	decf	wreg,f,c
   638  004E36  E1FD               	bnz	clear_1
   639                           
   640                           ; Clear objects allocated to COMRAM (3 bytes)
   641  004E38  6A3C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   642  004E3A  6A3B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   643  004E3C  6A3A               	clrf	__pbssCOMRAM& (0+255),c
   644  004E3E                     end_of_initialization:
   645                           	opt callstack 0
   646  004E3E                     __end_of__initialization:
   647                           	opt callstack 0
   648  004E3E  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   649  004E40  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   650  004E42  0E00               	movlw	low (__Lmediumconst shr (0+16))
   651  004E44  6EF8               	movwf	tblptru,c
   652  004E46  0100               	movlb	0
   653  004E48  EFE8  F01A         	goto	_main	;jump to C main() function
   654                           
   655                           	psect	bssCOMRAM
   656  00003A                     __pbssCOMRAM:
   657                           	opt callstack 0
   658  00003A                     _lcd_r:
   659                           	opt callstack 0
   660  00003A                     	ds	1
   661  00003B                     _numeral:
   662                           	opt callstack 0
   663  00003B                     	ds	1
   664  00003C                     _alingL:
   665                           	opt callstack 0
   666  00003C                     	ds	1
   667                           
   668                           	psect	bssBANK0
   669  0000BC                     __pbssBANK0:
   670                           	opt callstack 0
   671  0000BC                     	ds	5
   672  0000C1                     	ds	5
   673  0000C6                     _lcd_c:
   674                           	opt callstack 0
   675  0000C6                     	ds	2
   676  0000C8                     	ds	2
   677  0000CA                     	ds	2
   678  0000CC                     _count:
   679                           	opt callstack 0
   680  0000CC                     	ds	2
   681  0000CE                     _space:
   682                           	opt callstack 0
   683  0000CE                     	ds	1
   684  0000CF                     _precInt:
   685                           	opt callstack 0
   686  0000CF                     	ds	1
   687  0000D0                     _zeros:
   688                           	opt callstack 0
   689  0000D0                     	ds	1
   690  0000D1                     _sig:
   691                           	opt callstack 0
   692  0000D1                     	ds	1
   693  0000D2                     _c:
   694                           	opt callstack 0
   695  0000D2                     	ds	1
   696                           
   697                           	psect	dataBANK0
   698  000060                     __pdataBANK0:
   699                           	opt callstack 0
   700  000060                     my_vprintf@F3551:
   701                           	opt callstack 0
   702  000060                     	ds	64
   703  0000A0                     _keyPad:
   704                           	opt callstack 0
   705  0000A0                     	ds	20
   706  0000B4                     _Pattern1:
   707                           	opt callstack 0
   708  0000B4                     	ds	8
   709                           
   710                           	psect	bssBANK2
   711  000200                     __pbssBANK2:
   712                           	opt callstack 0
   713  000200                     	ds	128
   714                           
   715                           	psect	dataBANK2
   716  000280                     __pdataBANK2:
   717                           	opt callstack 0
   718  000280                     reverse@F192:
   719                           	opt callstack 0
   720  000280                     	ds	64
   721                           
   722                           	psect	cstackBANK3
   723  000300                     __pcstackBANK3:
   724                           	opt callstack 0
   725  000300                     my_vprintf@string:
   726                           	opt callstack 0
   727                           
   728                           ; 128 bytes @ 0x0
   729  000300                     	ds	128
   730  000380                     my_vprintf@char_temp:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x80
   734  000380                     	ds	2
   735  000382                     my_vprintf@length:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x82
   739  000382                     	ds	2
   740  000384                     my_vprintf@format:
   741                           	opt callstack 0
   742                           
   743                           ; 10 bytes @ 0x84
   744  000384                     	ds	10
   745  00038E                     my_vprintf@string_temp:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x8E
   749  00038E                     	ds	2
   750  000390                     my_vprintf@buffer:
   751                           	opt callstack 0
   752                           
   753                           ; 64 bytes @ 0x90
   754  000390                     	ds	64
   755  0003D0                     my_vprintf@ch:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0xD0
   759  0003D0                     	ds	2
   760  0003D2                     my_vprintf@uint_temp:
   761                           	opt callstack 0
   762                           
   763                           ; 2 bytes @ 0xD2
   764  0003D2                     	ds	2
   765  0003D4                     my_vprintf@error:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0xD4
   769  0003D4                     	ds	2
   770  0003D6                     my_vprintf@expA:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0xD6
   774  0003D6                     	ds	2
   775  0003D8                     my_vprintf@x:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0xD8
   779  0003D8                     	ds	2
   780  0003DA                     my_vprintf@width:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0xDA
   784  0003DA                     	ds	2
   785  0003DC                     my_vprintf@j:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0xDC
   789  0003DC                     	ds	2
   790  0003DE                     my_vprintf@int_temp:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0xDE
   794  0003DE                     	ds	2
   795  0003E0                     my_vprintf@double_temp:
   796                           	opt callstack 0
   797                           
   798                           ; 4 bytes @ 0xE0
   799  0003E0                     	ds	4
   800  0003E4                     my_vprintf@i:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0xE4
   804  0003E4                     	ds	2
   805  0003E6                     my_vprintf@valist:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0xE6
   809  0003E6                     	ds	2
   810  0003E8                     my_vprintf@prec:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0xE8
   814  0003E8                     	ds	2
   815                           
   816                           	psect	cstackBANK1
   817  000100                     __pcstackBANK1:
   818                           	opt callstack 0
   819  000100                     reverse@auxstr:
   820                           	opt callstack 0
   821                           
   822                           ; 64 bytes @ 0x0
   823  000100                     	ds	64
   824  000140                     reverse@j:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x40
   828  000140                     	ds	2
   829  000142                     reverse@i:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x42
   833  000142                     	ds	2
   834                           
   835                           	psect	cstackBANK0
   836  0000D3                     __pcstackBANK0:
   837                           	opt callstack 0
   838  0000D3                     getWP@form:
   839                           	opt callstack 0
   840  0000D3                     itoa@str:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0x0
   844  0000D3                     	ds	2
   845  0000D5                     getWP@width:
   846                           	opt callstack 0
   847  0000D5                     itoa@num:
   848                           	opt callstack 0
   849                           
   850                           ; 4 bytes @ 0x2
   851  0000D5                     	ds	2
   852  0000D7                     getWP@precision:
   853                           	opt callstack 0
   854                           
   855                           ; 2 bytes @ 0x4
   856  0000D7                     	ds	2
   857  0000D9                     itoa@base_:
   858                           	opt callstack 0
   859                           
   860                           ; 2 bytes @ 0x6
   861  0000D9                     	ds	2
   862  0000DB                     ?_ftoa_sci:
   863                           	opt callstack 0
   864  0000DB                     ftoa_sci@buffer:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0x8
   868  0000DB                     	ds	2
   869  0000DD                     ftoa_sci@value:
   870                           	opt callstack 0
   871                           
   872                           ; 4 bytes @ 0xA
   873  0000DD                     	ds	4
   874  0000E1                     ?_my_vprintf:
   875                           	opt callstack 0
   876  0000E1                     my_vprintf@sformat:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0xE
   880  0000E1                     	ds	4
   881                           
   882                           	psect	cstackCOMRAM
   883  000001                     __pcstackCOMRAM:
   884                           	opt callstack 0
   885  000001                     ??_BLED_Toggle:
   886  000001                     
   887                           ; 1 bytes @ 0x0
   888  000001                     	ds	2
   889  000003                     BLED_Toggle@biled:
   890                           	opt callstack 0
   891                           
   892                           ; 1 bytes @ 0x2
   893  000003                     	ds	1
   894  000004                     ??_KBD_GetChar:
   895  000004                     ??_TIMER0_SetPs:
   896  000004                     ??_BLED_Enable:
   897  000004                     ??_LCD_Lat:
   898  000004                     ?_strlen:
   899                           	opt callstack 0
   900  000004                     ?___wmul:
   901                           	opt callstack 0
   902  000004                     ?___fladd:
   903                           	opt callstack 0
   904  000004                     ?___fldiv:
   905                           	opt callstack 0
   906  000004                     ?___flmul:
   907                           	opt callstack 0
   908  000004                     ?___aldiv:
   909                           	opt callstack 0
   910  000004                     ?___almod:
   911                           	opt callstack 0
   912  000004                     ?___flneg:
   913                           	opt callstack 0
   914  000004                     ?___xxtofl:
   915                           	opt callstack 0
   916  000004                     SERIAL_WriteChar@data:
   917                           	opt callstack 0
   918  000004                     KBD_InChar@newChar:
   919                           	opt callstack 0
   920  000004                     BLED_Color@green:
   921                           	opt callstack 0
   922  000004                     TIMER0_Int@t0_cs:
   923                           	opt callstack 0
   924  000004                     ___wmul@multiplier:
   925                           	opt callstack 0
   926  000004                     strlen@s:
   927                           	opt callstack 0
   928  000004                     ___aldiv@dividend:
   929                           	opt callstack 0
   930  000004                     ___almod@dividend:
   931                           	opt callstack 0
   932  000004                     ___fleq@ff1:
   933                           	opt callstack 0
   934  000004                     ___flge@ff1:
   935                           	opt callstack 0
   936  000004                     ___flneg@f1:
   937                           	opt callstack 0
   938  000004                     ___fladd@b:
   939                           	opt callstack 0
   940  000004                     ___fldiv@b:
   941                           	opt callstack 0
   942  000004                     ___flmul@b:
   943                           	opt callstack 0
   944  000004                     ___xxtofl@val:
   945                           	opt callstack 0
   946                           
   947                           ; 4 bytes @ 0x3
   948  000004                     	ds	1
   949  000005                     BLED_Color@red:
   950                           	opt callstack 0
   951  000005                     TIMER0_Int@t0_se:
   952                           	opt callstack 0
   953  000005                     LCD_SendNibble@data:
   954                           	opt callstack 0
   955                           
   956                           ; 1 bytes @ 0x4
   957  000005                     	ds	1
   958  000006                     ??_BLED_Color:
   959  000006                     BLED_Enable@biled:
   960                           	opt callstack 0
   961  000006                     TIMER0_Int@t0_psa:
   962                           	opt callstack 0
   963  000006                     TIMER0_SetPs@prescale:
   964                           	opt callstack 0
   965  000006                     LCD_SendCmd@fbyte:
   966                           	opt callstack 0
   967  000006                     LCD_WriteByte@wData:
   968                           	opt callstack 0
   969  000006                     ___wmul@multiplicand:
   970                           	opt callstack 0
   971  000006                     strlen@a:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x5
   975  000006                     	ds	1
   976  000007                     TIMER0_Int@t0_8b:
   977                           	opt callstack 0
   978  000007                     LCD_SendCmd@data:
   979                           	opt callstack 0
   980                           
   981                           ; 1 bytes @ 0x6
   982  000007                     	ds	1
   983  000008                     ??_LCD_CLS:
   984  000008                     ??_LCD_Init:
   985  000008                     ??_LCD_RH:
   986  000008                     ??___xxtofl:
   987  000008                     ?_posc:
   988                           	opt callstack 0
   989  000008                     KBD_GetChar@key:
   990                           	opt callstack 0
   991  000008                     BLED_Color@biled:
   992                           	opt callstack 0
   993  000008                     LCD_DisplayCtrl@curOn:
   994                           	opt callstack 0
   995  000008                     LCD_SetCGRAM@cmd:
   996                           	opt callstack 0
   997  000008                     LCD_SetRowCol@col:
   998                           	opt callstack 0
   999  000008                     SERIAL_Write@str:
  1000                           	opt callstack 0
  1001  000008                     searchc@str:
  1002                           	opt callstack 0
  1003  000008                     posc@str:
  1004                           	opt callstack 0
  1005  000008                     upperCL@str:
  1006                           	opt callstack 0
  1007  000008                     cleanS@str:
  1008                           	opt callstack 0
  1009  000008                     precI@str:
  1010                           	opt callstack 0
  1011  000008                     precS@str:
  1012                           	opt callstack 0
  1013  000008                     addOx@hoS:
  1014                           	opt callstack 0
  1015  000008                     setWidth@str:
  1016                           	opt callstack 0
  1017  000008                     ___wmul@product:
  1018                           	opt callstack 0
  1019  000008                     strcpy@dest:
  1020                           	opt callstack 0
  1021  000008                     ___aldiv@divisor:
  1022                           	opt callstack 0
  1023  000008                     ___almod@divisor:
  1024                           	opt callstack 0
  1025  000008                     ___fleq@ff2:
  1026                           	opt callstack 0
  1027  000008                     ___flge@ff2:
  1028                           	opt callstack 0
  1029  000008                     ___fladd@a:
  1030                           	opt callstack 0
  1031  000008                     ___fldiv@a:
  1032                           	opt callstack 0
  1033  000008                     ___flmul@a:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x7
  1037  000008                     	ds	1
  1038  000009                     ??_LCD_SetRowCol:
  1039  000009                     LCD_DisplayCtrl@curBlink:
  1040                           	opt callstack 0
  1041  000009                     LCD_SetCGRAM@address:
  1042                           	opt callstack 0
  1043  000009                     KBD_GetChar@row:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x8
  1047  000009                     	ds	1
  1048  00000A                     ??_cleanS:
  1049  00000A                     ?_atoui:
  1050                           	opt callstack 0
  1051  00000A                     searchc@c:
  1052                           	opt callstack 0
  1053  00000A                     posc@c:
  1054                           	opt callstack 0
  1055  00000A                     LCD_DisplayCtrl@disOn:
  1056                           	opt callstack 0
  1057  00000A                     SERIAL_Write@i:
  1058                           	opt callstack 0
  1059  00000A                     precI@precision:
  1060                           	opt callstack 0
  1061  00000A                     precS@precision:
  1062                           	opt callstack 0
  1063  00000A                     addOx@num:
  1064                           	opt callstack 0
  1065  00000A                     setWidth@width:
  1066                           	opt callstack 0
  1067  00000A                     atoui@str:
  1068                           	opt callstack 0
  1069  00000A                     strcpy@src:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x9
  1073  00000A                     	ds	1
  1074  00000B                     LCD_DisplayCtrl@cmd:
  1075                           	opt callstack 0
  1076  00000B                     KBD_GetChar@col:
  1077                           	opt callstack 0
  1078  00000B                     upperCL@i:
  1079                           	opt callstack 0
  1080  00000B                     cleanS@len:
  1081                           	opt callstack 0
  1082  00000B                     LCD_SetRowCol@cmd:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0xA
  1086  00000B                     	ds	1
  1087  00000C                     ??_atoui:
  1088  00000C                     ??_strcpy:
  1089  00000C                     ??___fladd:
  1090  00000C                     ??___fldiv:
  1091  00000C                     ??___flmul:
  1092  00000C                     ??_precI:
  1093  00000C                     ??_precS:
  1094  00000C                     ??_setWidth:
  1095  00000C                     ??___fleq:
  1096  00000C                     ??___flge:
  1097  00000C                     addOx@type:
  1098                           	opt callstack 0
  1099  00000C                     ___aldiv@counter:
  1100                           	opt callstack 0
  1101  00000C                     ___almod@counter:
  1102                           	opt callstack 0
  1103  00000C                     ___xxtofl@sign:
  1104                           	opt callstack 0
  1105  00000C                     searchc@a:
  1106                           	opt callstack 0
  1107  00000C                     posc@a:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 2 bytes @ 0xB
  1111  00000C                     	ds	1
  1112  00000D                     ??_addOx:
  1113  00000D                     LCD_SetRowCol@row:
  1114                           	opt callstack 0
  1115  00000D                     ___aldiv@sign:
  1116                           	opt callstack 0
  1117  00000D                     ___almod@sign:
  1118                           	opt callstack 0
  1119  00000D                     ___xxtofl@exp:
  1120                           	opt callstack 0
  1121  00000D                     cleanS@i:
  1122                           	opt callstack 0
  1123  00000D                     atoui@num:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0xC
  1127  00000D                     	ds	1
  1128  00000E                     ?_roundStr:
  1129                           	opt callstack 0
  1130  00000E                     LCD_WriteChar@wData:
  1131                           	opt callstack 0
  1132  00000E                     roundStr@decnum:
  1133                           	opt callstack 0
  1134  00000E                     precI@k:
  1135                           	opt callstack 0
  1136  00000E                     precS@len:
  1137                           	opt callstack 0
  1138  00000E                     setWidth@widthDif:
  1139                           	opt callstack 0
  1140  00000E                     CreateChar@pattern:
  1141                           	opt callstack 0
  1142  00000E                     strcpy@s:
  1143                           	opt callstack 0
  1144  00000E                     ___aldiv@quotient:
  1145                           	opt callstack 0
  1146  00000E                     ___xxtofl@arg:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 4 bytes @ 0xD
  1150  00000E                     	ds	1
  1151  00000F                     addOx@len:
  1152                           	opt callstack 0
  1153  00000F                     atoui@vp:
  1154                           	opt callstack 0
  1155  00000F                     LCD_Write@str:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0xE
  1159  00000F                     	ds	1
  1160  000010                     CreateChar@pos:
  1161                           	opt callstack 0
  1162  000010                     ___fladd@signs:
  1163                           	opt callstack 0
  1164  000010                     ___flmul@sign:
  1165                           	opt callstack 0
  1166  000010                     roundStr@e:
  1167                           	opt callstack 0
  1168  000010                     precI@j:
  1169                           	opt callstack 0
  1170  000010                     precS@i:
  1171                           	opt callstack 0
  1172  000010                     setWidth@len:
  1173                           	opt callstack 0
  1174  000010                     strcpy@d:
  1175                           	opt callstack 0
  1176  000010                     ___fldiv@rem:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 4 bytes @ 0xF
  1180  000010                     	ds	1
  1181  000011                     ??_LCD_Write:
  1182  000011                     ___fladd@aexp:
  1183                           	opt callstack 0
  1184  000011                     ___flmul@aexp:
  1185                           	opt callstack 0
  1186  000011                     addOx@k:
  1187                           	opt callstack 0
  1188  000011                     atoui@i:
  1189                           	opt callstack 0
  1190  000011                     CreateChar@i:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x10
  1194  000011                     	ds	1
  1195  000012                     ___fladd@bexp:
  1196                           	opt callstack 0
  1197  000012                     roundStr@prn:
  1198                           	opt callstack 0
  1199  000012                     precI@len:
  1200                           	opt callstack 0
  1201  000012                     addSig@numS:
  1202                           	opt callstack 0
  1203  000012                     setWidth@j:
  1204                           	opt callstack 0
  1205  000012                     reverse@str:
  1206                           	opt callstack 0
  1207  000012                     strcat@dest:
  1208                           	opt callstack 0
  1209  000012                     SERIAL_Init@BAUD:
  1210                           	opt callstack 0
  1211  000012                     ___flmul@grs:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x11
  1215  000012                     	ds	1
  1216  000013                     ___fladd@grs:
  1217                           	opt callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x12
  1220  000013                     	ds	1
  1221  000014                     ??_reverse:
  1222  000014                     ??_roundStr:
  1223  000014                     ___fldiv@sign:
  1224                           	opt callstack 0
  1225  000014                     precI@i:
  1226                           	opt callstack 0
  1227  000014                     strcat@src:
  1228                           	opt callstack 0
  1229  000014                     addSig@num:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x13
  1233  000014                     	ds	1
  1234  000015                     LCD_Write@i:
  1235                           	opt callstack 0
  1236  000015                     ___fldiv@new_exp:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x14
  1240  000015                     	ds	1
  1241  000016                     ??_getWP:
  1242  000016                     ___flmul@bexp:
  1243                           	opt callstack 0
  1244  000016                     _SERIAL_Init$2462:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x15
  1248  000016                     	ds	1
  1249  000017                     roundStr@len:
  1250                           	opt callstack 0
  1251  000017                     ___fldiv@grs:
  1252                           	opt callstack 0
  1253  000017                     ___flmul@prod:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x16
  1257  000017                     	ds	1
  1258  000018                     ??_addSig:
  1259  000018                     _itoa$1596:
  1260                           	opt callstack 0
  1261  000018                     getWP@prec_str:
  1262                           	opt callstack 0
  1263                           
  1264                           ; 5 bytes @ 0x17
  1265  000018                     	ds	1
  1266  000019                     roundStr@p:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x18
  1270  000019                     	ds	1
  1271  00001A                     SERIAL_Init@baudrate:
  1272                           	opt callstack 0
  1273  00001A                     addSig@len:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x19
  1277  00001A                     	ds	1
  1278  00001B                     ___fldiv@bexp:
  1279                           	opt callstack 0
  1280  00001B                     roundStr@i:
  1281                           	opt callstack 0
  1282  00001B                     ___flmul@temp:
  1283                           	opt callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x1A
  1286  00001B                     	ds	1
  1287  00001C                     ___fldiv@aexp:
  1288                           	opt callstack 0
  1289  00001C                     addSig@k:
  1290                           	opt callstack 0
  1291  00001C                     itoa@rem:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x1B
  1295  00001C                     	ds	1
  1296  00001D                     ?_normalize:
  1297                           	opt callstack 0
  1298  00001D                     ?___flsub:
  1299                           	opt callstack 0
  1300  00001D                     ?___fltol:
  1301                           	opt callstack 0
  1302  00001D                     roundStr@k:
  1303                           	opt callstack 0
  1304  00001D                     normalize@val:
  1305                           	opt callstack 0
  1306  00001D                     ___fltol@f1:
  1307                           	opt callstack 0
  1308  00001D                     ___flsub@b:
  1309                           	opt callstack 0
  1310  00001D                     getWP@width_str:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 5 bytes @ 0x1C
  1314  00001D                     	ds	2
  1315  00001F                     precF@str:
  1316                           	opt callstack 0
  1317  00001F                     precE@str:
  1318                           	opt callstack 0
  1319  00001F                     precG@str:
  1320                           	opt callstack 0
  1321  00001F                     normalize@exponent:
  1322                           	opt callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x1E
  1325  00001F                     	ds	1
  1326  000020                     itoa@i:
  1327                           	opt callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x1F
  1330  000020                     	ds	1
  1331  000021                     ??___fltol:
  1332  000021                     precF@precision:
  1333                           	opt callstack 0
  1334  000021                     precE@precision:
  1335                           	opt callstack 0
  1336  000021                     precG@precision:
  1337                           	opt callstack 0
  1338  000021                     normalize@value:
  1339                           	opt callstack 0
  1340  000021                     ___flsub@a:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 4 bytes @ 0x20
  1344  000021                     	ds	1
  1345  000022                     getWP@len:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x21
  1349  000022                     	ds	1
  1350  000023                     ??_precF:
  1351  000023                     ??_precE:
  1352  000023                     ??_precG:
  1353                           
  1354                           ; 1 bytes @ 0x22
  1355  000023                     	ds	1
  1356  000024                     getWP@i:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x23
  1360  000024                     	ds	1
  1361  000025                     ___fltol@sign1:
  1362                           	opt callstack 0
  1363  000025                     precE@p:
  1364                           	opt callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x24
  1367  000025                     	ds	1
  1368  000026                     ___fltol@exp1:
  1369                           	opt callstack 0
  1370  000026                     getWP@k:
  1371                           	opt callstack 0
  1372  000026                     precF@j:
  1373                           	opt callstack 0
  1374  000026                     precG@p:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x25
  1378  000026                     	ds	1
  1379  000027                     precE@len:
  1380                           	opt callstack 0
  1381  000027                     ftoa_sci@digit:
  1382                           	opt callstack 0
  1383  000027                     ftoa@buffer:
  1384                           	opt callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x26
  1387  000027                     	ds	1
  1388  000028                     getWP@p:
  1389                           	opt callstack 0
  1390  000028                     precF@p:
  1391                           	opt callstack 0
  1392  000028                     precG@f:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x27
  1396  000028                     	ds	1
  1397  000029                     precE@posE:
  1398                           	opt callstack 0
  1399  000029                     ftoa_sci@digit_1614:
  1400                           	opt callstack 0
  1401  000029                     ftoa@value:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 4 bytes @ 0x28
  1405  000029                     	ds	1
  1406  00002A                     getWP@j:
  1407                           	opt callstack 0
  1408  00002A                     precF@i:
  1409                           	opt callstack 0
  1410  00002A                     precG@digS:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x29
  1414  00002A                     	ds	1
  1415  00002B                     precE@i:
  1416                           	opt callstack 0
  1417  00002B                     ftoa_sci@i:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x2A
  1421  00002B                     	ds	1
  1422  00002C                     precF@len:
  1423                           	opt callstack 0
  1424  00002C                     precG@posE:
  1425                           	opt callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x2B
  1428  00002C                     	ds	1
  1429  00002D                     precE@j:
  1430                           	opt callstack 0
  1431  00002D                     ftoa_sci@exponent:
  1432                           	opt callstack 0
  1433  00002D                     ftoa@digit:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x2C
  1437  00002D                     	ds	1
  1438  00002E                     precF@k:
  1439                           	opt callstack 0
  1440  00002E                     precG@len:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x2D
  1444  00002E                     	ds	1
  1445  00002F                     precE@k:
  1446                           	opt callstack 0
  1447  00002F                     ftoa@digit_1622:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x2E
  1451  00002F                     	ds	1
  1452  000030                     precG@j:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x2F
  1456  000030                     	ds	1
  1457  000031                     ftoa@exponent:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x30
  1461  000031                     	ds	1
  1462  000032                     precG@k:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x31
  1466  000032                     	ds	1
  1467  000033                     ftoa@places:
  1468                           	opt callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x32
  1471  000033                     	ds	1
  1472  000034                     precG@i:
  1473                           	opt callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x33
  1476  000034                     	ds	2
  1477  000036                     ??_my_vprintf:
  1478                           
  1479                           ; 1 bytes @ 0x35
  1480  000036                     	ds	2
  1481  000038                     ??_main:
  1482                           
  1483                           ; 1 bytes @ 0x37
  1484  000038                     	ds	2
  1485                           
  1486 ;;
  1487 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1488 ;;
  1489 ;; *************** function _main *****************
  1490 ;; Defined at:
  1491 ;;		line 56 in file "src/main.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;		None
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1505 ;;      Params:         0       0       0       0       0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1507 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1508 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1509 ;;Total ram usage:        2 bytes
  1510 ;; Hardware stack levels required when called:    8
  1511 ;; This function calls:
  1512 ;;		_BLED_Color
  1513 ;;		_CreateChar
  1514 ;;		_KBD_GetChar
  1515 ;;		_KBD_InChar
  1516 ;;		_LCD_CLS
  1517 ;;		_LCD_DisplayCtrl
  1518 ;;		_LCD_SetRowCol
  1519 ;;		_LCD_Write
  1520 ;;		_SYSTEM_Init
  1521 ;;		_my_vprintf
  1522 ;; This function is called by:
  1523 ;;		Startup code after reset
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text0
  1528  0035D0                     __ptext0:
  1529                           	opt callstack 0
  1530  0035D0                     _main:
  1531                           	opt callstack 23
  1532  0035D0                     
  1533                           ;src/main.c: 58:     SYSTEM_Init();
  1534  0035D0  EC5E  F028         	call	_SYSTEM_Init	;wreg free
  1535  0035D4                     
  1536                           ;src/main.c: 60:     (TMR0H = 0x48);
  1537  0035D4  0E48               	movlw	72
  1538  0035D6  6ED7               	movwf	215,c	;volatile
  1539  0035D8                     
  1540                           ;src/main.c: 61:     (TMR0L = 0xE5);
  1541  0035D8  0EE5               	movlw	229
  1542  0035DA  6ED6               	movwf	214,c	;volatile
  1543                           
  1544                           ;src/main.c: 62:     BLED_Color(BL1,0,0);
  1545  0035DC  0E00               	movlw	0
  1546  0035DE  6E04               	movwf	BLED_Color@green^0,c
  1547  0035E0  0E00               	movlw	0
  1548  0035E2  6E05               	movwf	BLED_Color@red^0,c
  1549  0035E4  0E00               	movlw	0
  1550  0035E6  EC80  F024         	call	_BLED_Color
  1551  0035EA                     
  1552                           ;src/main.c: 64:     _delay((unsigned long)((1000)*(48000000/4000.0)));
  1553  0035EA  0E3D               	movlw	61
  1554  0035EC  6E39               	movwf	(??_main+1)^0,c
  1555  0035EE  0EE1               	movlw	225
  1556  0035F0  6E38               	movwf	??_main^0,c
  1557  0035F2  0E40               	movlw	64
  1558  0035F4                     u9857:
  1559  0035F4  2EE8               	decfsz	wreg,f,c
  1560  0035F6  D7FE               	bra	u9857
  1561  0035F8  2E38               	decfsz	??_main^0,f,c
  1562  0035FA  D7FC               	bra	u9857
  1563  0035FC  2E39               	decfsz	(??_main+1)^0,f,c
  1564  0035FE  D7FA               	bra	u9857
  1565  003600                     
  1566                           ;src/main.c: 65:     my_vprintf("BIENVENIDO\n\n");
  1567  003600  0ED5               	movlw	low STR_1
  1568  003602  0100               	movlb	0	; () banked
  1569  003604  6FE1               	movwf	my_vprintf@sformat& (0+255),b
  1570  003606  0E08               	movlw	high STR_1
  1571  003608  6FE2               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1572  00360A  EC74  F004         	call	_my_vprintf	;wreg free
  1573  00360E                     
  1574                           ;src/main.c: 67:     LCD_DisplayCtrl(1,0,0);
  1575  00360E  0E00               	movlw	0
  1576  003610  6E08               	movwf	LCD_DisplayCtrl@curOn^0,c
  1577  003612  0E00               	movlw	0
  1578  003614  6E09               	movwf	LCD_DisplayCtrl@curBlink^0,c
  1579  003616  0E01               	movlw	1
  1580  003618  EC6A  F02A         	call	_LCD_DisplayCtrl
  1581  00361C                     
  1582                           ;src/main.c: 68:     CreateChar (Pattern1, 0);
  1583  00361C  0EB4               	movlw	low _Pattern1
  1584  00361E  6E0E               	movwf	CreateChar@pattern^0,c
  1585  003620  0E00               	movlw	high _Pattern1
  1586  003622  6E0F               	movwf	(CreateChar@pattern+1)^0,c
  1587  003624  0E00               	movlw	0
  1588  003626  6E10               	movwf	CreateChar@pos^0,c
  1589  003628  ECE0  F027         	call	_CreateChar	;wreg free
  1590  00362C                     l8425:
  1591                           
  1592                           ;src/main.c: 71:     {;src/main.c: 72:         KBD_InChar();
  1593  00362C  EC35  F028         	call	_KBD_InChar	;wreg free
  1594  003630                     
  1595                           ;src/main.c: 73:         c = KBD_GetChar();
  1596  003630  EC9F  F01D         	call	_KBD_GetChar	;wreg free
  1597  003634  0100               	movlb	0	; () banked
  1598  003636  6FD2               	movwf	_c& (0+255),b
  1599                           
  1600                           ;src/main.c: 75:         switch (c)
  1601  003638  EFB5  F01B         	goto	l8485
  1602  00363C                     l8429:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;src/main.c: 78:                 LCD_Write("Motor girando a la Derecha\n\r");
  1606  00363C  0E6F               	movlw	low STR_2
  1607  00363E  6E0F               	movwf	LCD_Write@str^0,c
  1608  003640  0E08               	movlw	high STR_2
  1609  003642  6E10               	movwf	(LCD_Write@str+1)^0,c
  1610  003644  EC1E  F024         	call	_LCD_Write	;wreg free
  1611  003648                     
  1612                           ;src/main.c: 79:                 my_vprintf("Motor girando a la Derecha\n\n");
  1613  003648  0E52               	movlw	low STR_3
  1614  00364A  0100               	movlb	0	; () banked
  1615  00364C  6FE1               	movwf	my_vprintf@sformat& (0+255),b
  1616  00364E  0E08               	movlw	high STR_3
  1617  003650  6FE2               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1618  003652  EC74  F004         	call	_my_vprintf	;wreg free
  1619  003656                     
  1620                           ;src/main.c: 80:                 LATCbits.LATC1 = 0;
  1621  003656  928B               	bcf	139,1,c	;volatile
  1622  003658                     
  1623                           ;src/main.c: 81:                 LATCbits.LATC2 = 0;
  1624  003658  948B               	bcf	139,2,c	;volatile
  1625  00365A                     
  1626                           ;src/main.c: 82:                 _delay((unsigned long)((1000)*(48000000/4000.0)));
  1627  00365A  0E3D               	movlw	61
  1628  00365C  6E39               	movwf	(??_main+1)^0,c
  1629  00365E  0EE1               	movlw	225
  1630  003660  6E38               	movwf	??_main^0,c
  1631  003662  0E40               	movlw	64
  1632  003664                     u9867:
  1633  003664  2EE8               	decfsz	wreg,f,c
  1634  003666  D7FE               	bra	u9867
  1635  003668  2E38               	decfsz	??_main^0,f,c
  1636  00366A  D7FC               	bra	u9867
  1637  00366C  2E39               	decfsz	(??_main+1)^0,f,c
  1638  00366E  D7FA               	bra	u9867
  1639  003670                     
  1640                           ;src/main.c: 83:                 LATCbits.LATC1 = 0;
  1641  003670  928B               	bcf	139,1,c	;volatile
  1642  003672                     
  1643                           ;src/main.c: 84:                 LATCbits.LATC2 = 1;
  1644  003672  848B               	bsf	139,2,c	;volatile
  1645                           
  1646                           ;src/main.c: 85:                 break;
  1647  003674  EFCE  F01B         	goto	l8487
  1648  003678                     l8443:
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;src/main.c: 87:                 LCD_Write("Motor girando a la Izquierda\n\r");
  1652  003678  0E33               	movlw	low STR_4
  1653  00367A  6E0F               	movwf	LCD_Write@str^0,c
  1654  00367C  0E08               	movlw	high STR_4
  1655  00367E  6E10               	movwf	(LCD_Write@str+1)^0,c
  1656  003680  EC1E  F024         	call	_LCD_Write	;wreg free
  1657  003684                     
  1658                           ;src/main.c: 88:                 my_vprintf("Motor girando a la Izquierda\n\n");
  1659  003684  0E14               	movlw	low STR_5
  1660  003686  0100               	movlb	0	; () banked
  1661  003688  6FE1               	movwf	my_vprintf@sformat& (0+255),b
  1662  00368A  0E08               	movlw	high STR_5
  1663  00368C  6FE2               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1664  00368E  EC74  F004         	call	_my_vprintf	;wreg free
  1665  003692                     
  1666                           ;src/main.c: 89:                 LATCbits.LATC1 = 0;
  1667  003692  928B               	bcf	139,1,c	;volatile
  1668  003694                     
  1669                           ;src/main.c: 90:                 LATCbits.LATC2 = 0;
  1670  003694  948B               	bcf	139,2,c	;volatile
  1671  003696                     
  1672                           ;src/main.c: 91:                 _delay((unsigned long)((1000)*(48000000/4000.0)));
  1673  003696  0E3D               	movlw	61
  1674  003698  6E39               	movwf	(??_main+1)^0,c
  1675  00369A  0EE1               	movlw	225
  1676  00369C  6E38               	movwf	??_main^0,c
  1677  00369E  0E40               	movlw	64
  1678  0036A0                     u9877:
  1679  0036A0  2EE8               	decfsz	wreg,f,c
  1680  0036A2  D7FE               	bra	u9877
  1681  0036A4  2E38               	decfsz	??_main^0,f,c
  1682  0036A6  D7FC               	bra	u9877
  1683  0036A8  2E39               	decfsz	(??_main+1)^0,f,c
  1684  0036AA  D7FA               	bra	u9877
  1685  0036AC                     
  1686                           ;src/main.c: 92:                 LATCbits.LATC1 = 1;
  1687  0036AC  828B               	bsf	139,1,c	;volatile
  1688  0036AE                     
  1689                           ;src/main.c: 93:                 LATCbits.LATC2 = 0;
  1690  0036AE  948B               	bcf	139,2,c	;volatile
  1691                           
  1692                           ;src/main.c: 94:                 break;
  1693  0036B0  EFCE  F01B         	goto	l8487
  1694  0036B4                     l8457:
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;src/main.c: 96:                 LCD_Write("Motor detenido\n");
  1698  0036B4  0EB6               	movlw	low STR_6
  1699  0036B6  6E0F               	movwf	LCD_Write@str^0,c
  1700  0036B8  0E08               	movlw	high STR_6
  1701  0036BA  6E10               	movwf	(LCD_Write@str+1)^0,c
  1702  0036BC  EC1E  F024         	call	_LCD_Write	;wreg free
  1703  0036C0                     
  1704                           ;src/main.c: 97:                 my_vprintf("Motor detenido\n\n");
  1705  0036C0  0EA5               	movlw	low STR_7
  1706  0036C2  0100               	movlb	0	; () banked
  1707  0036C4  6FE1               	movwf	my_vprintf@sformat& (0+255),b
  1708  0036C6  0E08               	movlw	high STR_7
  1709  0036C8  6FE2               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1710  0036CA  EC74  F004         	call	_my_vprintf	;wreg free
  1711  0036CE                     
  1712                           ;src/main.c: 98:                 LATCbits.LATC1 = 0;
  1713  0036CE  928B               	bcf	139,1,c	;volatile
  1714  0036D0                     
  1715                           ;src/main.c: 99:                 LATCbits.LATC2 = 0;
  1716  0036D0  948B               	bcf	139,2,c	;volatile
  1717                           
  1718                           ;src/main.c: 100:                 break;
  1719  0036D2  EFCE  F01B         	goto	l8487
  1720  0036D6                     l8465:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;src/main.c: 102:                 my_vprintf("La ultima tecla fue %u\n\n", c);
  1724  0036D6  0E8C               	movlw	low STR_8
  1725  0036D8  6FE1               	movwf	my_vprintf@sformat& (0+255),b
  1726  0036DA  0E08               	movlw	high STR_8
  1727  0036DC  6FE2               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1728  0036DE  C0D2  F0E3         	movff	_c,?_my_vprintf+2
  1729  0036E2  6BE4               	clrf	(?_my_vprintf+3)& (0+255),b
  1730  0036E4  EC74  F004         	call	_my_vprintf	;wreg free
  1731  0036E8                     
  1732                           ;src/main.c: 103:                 if (c == '0')
  1733  0036E8  0E30               	movlw	48
  1734  0036EA  0100               	movlb	0	; () banked
  1735  0036EC  19D2               	xorwf	_c& (0+255),w,b
  1736  0036EE  A4D8               	btfss	status,2,c
  1737  0036F0  EF7C  F01B         	goto	u9811
  1738  0036F4  EF7E  F01B         	goto	u9810
  1739  0036F8                     u9811:
  1740  0036F8  EF82  F01B         	goto	l8471
  1741  0036FC                     u9810:
  1742  0036FC                     
  1743                           ; BSR set to: 0
  1744                           ;src/main.c: 104:                     LCD_CLS();
  1745  0036FC  EC07  F02A         	call	_LCD_CLS	;wreg free
  1746  003700  EFCE  F01B         	goto	l8487
  1747  003704                     l8471:
  1748                           
  1749                           ; BSR set to: 0
  1750  003704  0E2A               	movlw	42
  1751  003706  19D2               	xorwf	_c& (0+255),w,b
  1752  003708  A4D8               	btfss	status,2,c
  1753  00370A  EF89  F01B         	goto	u9821
  1754  00370E  EF8B  F01B         	goto	u9820
  1755  003712                     u9821:
  1756  003712  EF94  F01B         	goto	l8475
  1757  003716                     u9820:
  1758  003716                     
  1759                           ; BSR set to: 0
  1760                           ;src/main.c: 106:                     LCD_DisplayCtrl(0,0,0);
  1761  003716  0E00               	movlw	0
  1762  003718  6E08               	movwf	LCD_DisplayCtrl@curOn^0,c
  1763  00371A  0E00               	movlw	0
  1764  00371C  6E09               	movwf	LCD_DisplayCtrl@curBlink^0,c
  1765  00371E  0E00               	movlw	0
  1766  003720  EC6A  F02A         	call	_LCD_DisplayCtrl
  1767  003724  EFCE  F01B         	goto	l8487
  1768  003728                     l8475:
  1769                           
  1770                           ; BSR set to: 0
  1771  003728  0E23               	movlw	35
  1772  00372A  19D2               	xorwf	_c& (0+255),w,b
  1773  00372C  A4D8               	btfss	status,2,c
  1774  00372E  EF9B  F01B         	goto	u9831
  1775  003732  EF9D  F01B         	goto	u9830
  1776  003736                     u9831:
  1777  003736  EFA6  F01B         	goto	l8479
  1778  00373A                     u9830:
  1779  00373A                     
  1780                           ; BSR set to: 0
  1781                           ;src/main.c: 108:                     LCD_DisplayCtrl(1,1,1);
  1782  00373A  0E01               	movlw	1
  1783  00373C  6E08               	movwf	LCD_DisplayCtrl@curOn^0,c
  1784  00373E  0E01               	movlw	1
  1785  003740  6E09               	movwf	LCD_DisplayCtrl@curBlink^0,c
  1786  003742  0E01               	movlw	1
  1787  003744  EC6A  F02A         	call	_LCD_DisplayCtrl
  1788  003748  EFCE  F01B         	goto	l8487
  1789  00374C                     l8479:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;src/main.c: 110:                 {;src/main.c: 112:                     LCD_CLS();
  1793  00374C  EC07  F02A         	call	_LCD_CLS	;wreg free
  1794  003750                     
  1795                           ;src/main.c: 113:                     LCD_SetRowCol(0, 3);
  1796  003750  0E03               	movlw	3
  1797  003752  6E08               	movwf	LCD_SetRowCol@col^0,c
  1798  003754  0E00               	movlw	0
  1799  003756  ECA8  F028         	call	_LCD_SetRowCol
  1800  00375A                     
  1801                           ;src/main.c: 114:                     LCD_Write("BIENVENIDO\n :)");
  1802  00375A  0EC6               	movlw	low STR_9
  1803  00375C  6E0F               	movwf	LCD_Write@str^0,c
  1804  00375E  0E08               	movlw	high STR_9
  1805  003760  6E10               	movwf	(LCD_Write@str+1)^0,c
  1806  003762  EC1E  F024         	call	_LCD_Write	;wreg free
  1807  003766  EFCE  F01B         	goto	l8487
  1808  00376A                     l8485:
  1809                           
  1810                           ; BSR set to: 0
  1811  00376A  51D2               	movf	_c& (0+255),w,b
  1812  00376C  6E38               	movwf	??_main^0,c
  1813  00376E  6A39               	clrf	(??_main+1)^0,c
  1814                           
  1815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1816                           ; Switch size 1, requested type "simple"
  1817                           ; Number of cases is 1, Range of values is 0 to 0
  1818                           ; switch strategies available:
  1819                           ; Name         Instructions Cycles
  1820                           ; simple_byte            4     3 (average)
  1821                           ;	Chosen strategy is simple_byte
  1822  003770  5039               	movf	(??_main+1)^0,w,c
  1823  003772  0A00               	xorlw	0	; case 0
  1824  003774  B4D8               	btfsc	status,2,c
  1825  003776  EFBF  F01B         	goto	l8653
  1826  00377A  EF6B  F01B         	goto	l8465
  1827  00377E                     l8653:
  1828                           
  1829                           ; BSR set to: 0
  1830                           ; Switch size 1, requested type "simple"
  1831                           ; Number of cases is 3, Range of values is 65 to 67
  1832                           ; switch strategies available:
  1833                           ; Name         Instructions Cycles
  1834                           ; simple_byte           10     6 (average)
  1835                           ;	Chosen strategy is simple_byte
  1836  00377E  5038               	movf	??_main^0,w,c
  1837  003780  0A41               	xorlw	65	; case 65
  1838  003782  B4D8               	btfsc	status,2,c
  1839  003784  EF1E  F01B         	goto	l8429
  1840  003788  0A03               	xorlw	3	; case 66
  1841  00378A  B4D8               	btfsc	status,2,c
  1842  00378C  EF3C  F01B         	goto	l8443
  1843  003790  0A01               	xorlw	1	; case 67
  1844  003792  B4D8               	btfsc	status,2,c
  1845  003794  EF5A  F01B         	goto	l8457
  1846  003798  EF6B  F01B         	goto	l8465
  1847  00379C                     l8487:
  1848                           
  1849                           ;src/main.c: 117:         _delay((unsigned long)((500)*(48000000/4000.0)));
  1850  00379C  0E1F               	movlw	31
  1851  00379E  6E39               	movwf	(??_main+1)^0,c
  1852  0037A0  0E71               	movlw	113
  1853  0037A2  6E38               	movwf	??_main^0,c
  1854  0037A4  0E1E               	movlw	30
  1855  0037A6                     u9887:
  1856  0037A6  2EE8               	decfsz	wreg,f,c
  1857  0037A8  D7FE               	bra	u9887
  1858  0037AA  2E38               	decfsz	??_main^0,f,c
  1859  0037AC  D7FC               	bra	u9887
  1860  0037AE  2E39               	decfsz	(??_main+1)^0,f,c
  1861  0037B0  D7FA               	bra	u9887
  1862  0037B2  D000               	nop2	
  1863  0037B4  EF16  F01B         	goto	l8425
  1864  0037B8  EF07  F000         	goto	start
  1865  0037BC                     __end_of_main:
  1866                           	opt callstack 0
  1867                           
  1868 ;; *************** function _my_vprintf *****************
  1869 ;; Defined at:
  1870 ;;		line 8 in file "src/print/my_print.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  sformat         2   14[BANK0 ] PTR const unsigned char 
  1873 ;;		 -> STR_8(25), STR_7(17), STR_5(31), STR_3(29), 
  1874 ;;		 -> STR_1(13), 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  string        128    0[BANK3 ] unsigned char [128]
  1877 ;;  buffer         64  144[BANK3 ] unsigned char [64]
  1878 ;;  format         10  132[BANK3 ] unsigned char [10]
  1879 ;;  double_temp     4  224[BANK3 ] unsigned char [10]
  1880 ;;  prec            2  232[BANK3 ] int 
  1881 ;;  valist          2  230[BANK3 ] PTR void [1]
  1882 ;;		 -> ?_my_vprintf(2), 
  1883 ;;  i               2  228[BANK3 ] int 
  1884 ;;  int_temp        2  222[BANK3 ] int 
  1885 ;;  j               2  220[BANK3 ] int 
  1886 ;;  width           2  218[BANK3 ] int 
  1887 ;;  x               2  216[BANK3 ] int 
  1888 ;;  ch              2  208[BANK3 ] unsigned char [2]
  1889 ;;  expA            2  214[BANK3 ] int 
  1890 ;;  char_temp       2  128[BANK3 ] unsigned char [2]
  1891 ;;  error           2  212[BANK3 ] int 
  1892 ;;  uint_temp       2  210[BANK3 ] unsigned short 
  1893 ;;  string_temp     2  142[BANK3 ] PTR unsigned char 
  1894 ;;		 -> ?_my_vprintf(2), 
  1895 ;;  length          2  130[BANK3 ] int 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  2   14[BANK0 ] int 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1905 ;;      Params:         0       4       0       0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0     234       0       0       0       0
  1907 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1908 ;;      Totals:         2       4       0       0     234       0       0       0       0
  1909 ;;Total ram usage:      240 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    6
  1912 ;; This function calls:
  1913 ;;		_SERIAL_Write
  1914 ;;		___xxtofl
  1915 ;;		_addOx
  1916 ;;		_addSig
  1917 ;;		_cleanS
  1918 ;;		_ftoa
  1919 ;;		_ftoa_sci
  1920 ;;		_getWP
  1921 ;;		_itoa
  1922 ;;		_precE
  1923 ;;		_precF
  1924 ;;		_precG
  1925 ;;		_precI
  1926 ;;		_precS
  1927 ;;		_setWidth
  1928 ;;		_strcat
  1929 ;;		_strcpy
  1930 ;;		_strlen
  1931 ;;		_upperCL
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text1
  1938  0008E8                     __ptext1:
  1939                           	opt callstack 0
  1940  0008E8                     _my_vprintf:
  1941                           	opt callstack 24
  1942  0008E8                     
  1943                           ;src/print/my_print.c: 9:  va_list valist;;src/print/my_print.c: 11:  *valist = __va_sta
      +                          rt();
  1944  0008E8  0EE3               	movlw	low (?_my_vprintf+2)
  1945  0008EA  0103               	movlb	3	; () banked
  1946  0008EC  6FE6               	movwf	my_vprintf@valist& (0+255),b
  1947  0008EE  0E00               	movlw	high (?_my_vprintf+2)
  1948  0008F0  6FE7               	movwf	(my_vprintf@valist+1)& (0+255),b
  1949  0008F2                     
  1950                           ; BSR set to: 3
  1951                           ;src/print/my_print.c: 13:  const char tipo[]= {'%','c','s','d','i','x','X','o','u','f',
      +                          'g','G','e','E','n'};;src/print/my_print.c: 14:  char string[128] = "";
  1952  0008F2  EE23  F000         	lfsr	2,my_vprintf@string
  1953  0008F6  0E7F               	movlw	127
  1954  0008F8                     u9521:
  1955  0008F8  6ADE               	clrf	postinc2,c
  1956  0008FA  06E8               	decf	wreg,f,c
  1957  0008FC  E2FD               	bc	u9521
  1958  0008FE                     
  1959                           ; BSR set to: 3
  1960                           ;src/print/my_print.c: 15:  int length = 0;
  1961  0008FE  0E00               	movlw	0
  1962  000900  6F83               	movwf	(my_vprintf@length+1)& (0+255),b
  1963  000902  0E00               	movlw	0
  1964  000904  6F82               	movwf	my_vprintf@length& (0+255),b
  1965  000906                     
  1966                           ; BSR set to: 3
  1967                           ;src/print/my_print.c: 18:  int i, j, x;;src/print/my_print.c: 19:  char char_temp[2] = 
      +                          {0,0};
  1968  000906  0E00               	movlw	0
  1969  000908  6F81               	movwf	(my_vprintf@char_temp+1)& (0+255),b
  1970  00090A  0E00               	movlw	0
  1971  00090C  6F80               	movwf	my_vprintf@char_temp& (0+255),b
  1972  00090E                     
  1973                           ; BSR set to: 3
  1974                           ;src/print/my_print.c: 20:  char *string_temp;;src/print/my_print.c: 21:  double double_
      +                          temp;;src/print/my_print.c: 22:  char ch[2]={0,0};
  1975  00090E  0E00               	movlw	0
  1976  000910  6FD1               	movwf	(my_vprintf@ch+1)& (0+255),b
  1977  000912  0E00               	movlw	0
  1978  000914  6FD0               	movwf	my_vprintf@ch& (0+255),b
  1979  000916                     
  1980                           ; BSR set to: 3
  1981                           ;src/print/my_print.c: 23:  char format[10];;src/print/my_print.c: 24:  char buffer[64] 
      +                          = " ";
  1982  000916  EE20  F060         	lfsr	2,my_vprintf@F3551
  1983  00091A  EE13  F090         	lfsr	1,my_vprintf@buffer
  1984  00091E  0E3F               	movlw	63
  1985  000920                     u9531:
  1986  000920  CFDB FFE3          	movff	plusw2,plusw1
  1987  000924  06E8               	decf	wreg,f,c
  1988  000926  E2FC               	bc	u9531
  1989  000928                     
  1990                           ; BSR set to: 3
  1991                           ;src/print/my_print.c: 25:  int expA;;src/print/my_print.c: 26:  int prec;;src/print/my_
      +                          print.c: 27:  int width;;src/print/my_print.c: 28:  int error = 0;
  1992  000928  0E00               	movlw	0
  1993  00092A  6FD5               	movwf	(my_vprintf@error+1)& (0+255),b
  1994  00092C  0E00               	movlw	0
  1995  00092E  6FD4               	movwf	my_vprintf@error& (0+255),b
  1996                           
  1997                           ;src/print/my_print.c: 34:  while ( (ch[0] = *sformat++)) {
  1998  000930  EF19  F00A         	goto	l8397
  1999  000934                     l8125:
  2000                           
  2001                           ; BSR set to: 3
  2002                           ;src/print/my_print.c: 35:   if ( '%' == ch[0] ) {
  2003  000934  0E25               	movlw	37
  2004  000936  19D0               	xorwf	my_vprintf@ch& (0+255),w,b
  2005  000938  A4D8               	btfss	status,2,c
  2006  00093A  EFA1  F004         	goto	u9541
  2007  00093E  EFA3  F004         	goto	u9540
  2008  000942                     u9541:
  2009  000942  EF0C  F00A         	goto	l8393
  2010  000946                     u9540:
  2011  000946                     
  2012                           ; BSR set to: 3
  2013                           ;src/print/my_print.c: 36:    cleanS(buffer);
  2014  000946  0E90               	movlw	low my_vprintf@buffer
  2015  000948  6E08               	movwf	cleanS@str^0,c
  2016  00094A  0E03               	movlw	high my_vprintf@buffer
  2017  00094C  6E09               	movwf	(cleanS@str+1)^0,c
  2018  00094E  EC0B  F028         	call	_cleanS	;wreg free
  2019                           
  2020                           ;src/print/my_print.c: 37:    cleanS(format);
  2021  000952  0E84               	movlw	low my_vprintf@format
  2022  000954  6E08               	movwf	cleanS@str^0,c
  2023  000956  0E03               	movlw	high my_vprintf@format
  2024  000958  6E09               	movwf	(cleanS@str+1)^0,c
  2025  00095A  EC0B  F028         	call	_cleanS	;wreg free
  2026  00095E                     
  2027                           ;src/print/my_print.c: 38:    width = -1;
  2028  00095E  0103               	movlb	3	; () banked
  2029  000960  69DA               	setf	my_vprintf@width& (0+255),b
  2030  000962  69DB               	setf	(my_vprintf@width+1)& (0+255),b
  2031  000964                     
  2032                           ; BSR set to: 3
  2033                           ;src/print/my_print.c: 39:    prec = -1;
  2034  000964  69E8               	setf	my_vprintf@prec& (0+255),b
  2035  000966  69E9               	setf	(my_vprintf@prec+1)& (0+255),b
  2036  000968                     
  2037                           ; BSR set to: 3
  2038                           ;src/print/my_print.c: 41:    format[0]='%';
  2039  000968  0E25               	movlw	37
  2040  00096A  6F84               	movwf	my_vprintf@format& (0+255),b
  2041  00096C                     
  2042                           ; BSR set to: 3
  2043                           ;src/print/my_print.c: 42:    x = 0;
  2044  00096C  0E00               	movlw	0
  2045  00096E  6FD9               	movwf	(my_vprintf@x+1)& (0+255),b
  2046  000970  0E00               	movlw	0
  2047  000972  6FD8               	movwf	my_vprintf@x& (0+255),b
  2048  000974                     
  2049                           ; BSR set to: 3
  2050                           ;src/print/my_print.c: 43:    i = 1;
  2051  000974  0E00               	movlw	0
  2052  000976  6FE5               	movwf	(my_vprintf@i+1)& (0+255),b
  2053  000978  0E01               	movlw	1
  2054  00097A  6FE4               	movwf	my_vprintf@i& (0+255),b
  2055                           
  2056                           ;src/print/my_print.c: 45:    while (x==0) {
  2057  00097C  EF07  F005         	goto	l8159
  2058  000980                     l8139:
  2059                           
  2060                           ; BSR set to: 3
  2061                           ;src/print/my_print.c: 46:      format[i] = *sformat++;
  2062  000980  C0E1  FFF6         	movff	my_vprintf@sformat,tblptrl
  2063  000984  C0E2  FFF7         	movff	my_vprintf@sformat+1,tblptrh
  2064  000988                     	if	0	;tblptru may be non-zero
  2065  000988                     	endif
  2066  000988                     	if	0	;tblptru may be non-zero
  2067  000988                     	endif
  2068  000988  0E84               	movlw	low my_vprintf@format
  2069  00098A  25E4               	addwf	my_vprintf@i& (0+255),w,b
  2070  00098C  6ED9               	movwf	fsr2l,c
  2071  00098E  0E03               	movlw	high my_vprintf@format
  2072  000990  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2073  000992  6EDA               	movwf	fsr2h,c
  2074  000994  0008               	tblrd		*
  2075  000996  CFF5 FFDF          	movff	tablat,indf2
  2076  00099A                     
  2077                           ; BSR set to: 3
  2078  00099A  0100               	movlb	0	; () banked
  2079  00099C  4BE1               	infsnz	my_vprintf@sformat& (0+255),f,b
  2080  00099E  2BE2               	incf	(my_vprintf@sformat+1)& (0+255),f,b
  2081  0009A0                     
  2082                           ; BSR set to: 0
  2083                           ;src/print/my_print.c: 47:      for(j = 0; j < 15; j++) {
  2084  0009A0  0E00               	movlw	0
  2085  0009A2  0103               	movlb	3	; () banked
  2086  0009A4  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  2087  0009A6  0E00               	movlw	0
  2088  0009A8  6FDC               	movwf	my_vprintf@j& (0+255),b
  2089  0009AA                     l8145:
  2090                           
  2091                           ; BSR set to: 3
  2092  0009AA  BFDD               	btfsc	(my_vprintf@j+1)& (0+255),7,b
  2093  0009AC  EFE1  F004         	goto	u9551
  2094  0009B0  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  2095  0009B2  E109               	bnz	u9550
  2096  0009B4  0E0F               	movlw	15
  2097  0009B6  5DDC               	subwf	my_vprintf@j& (0+255),w,b
  2098  0009B8  A0D8               	btfss	status,0,c
  2099  0009BA  EFE1  F004         	goto	u9551
  2100  0009BE  EFE3  F004         	goto	u9550
  2101  0009C2                     u9551:
  2102  0009C2  EFE5  F004         	goto	l8149
  2103  0009C6                     u9550:
  2104  0009C6  EF05  F005         	goto	l8157
  2105  0009CA                     l8149:
  2106                           
  2107                           ; BSR set to: 3
  2108                           ;src/print/my_print.c: 48:         if (format[i] == tipo[j])
  2109  0009CA  0E84               	movlw	low my_vprintf@format
  2110  0009CC  25E4               	addwf	my_vprintf@i& (0+255),w,b
  2111  0009CE  6ED9               	movwf	fsr2l,c
  2112  0009D0  0E03               	movlw	high my_vprintf@format
  2113  0009D2  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2114  0009D4  6EDA               	movwf	fsr2h,c
  2115  0009D6  50DF               	movf	indf2,w,c
  2116  0009D8  6E36               	movwf	??_my_vprintf^0,c
  2117  0009DA  0E01               	movlw	low my_vprintf@tipo
  2118  0009DC  25DC               	addwf	my_vprintf@j& (0+255),w,b
  2119  0009DE  6EF6               	movwf	tblptrl,c
  2120  0009E0  0E08               	movlw	high my_vprintf@tipo
  2121  0009E2  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  2122  0009E4  6EF7               	movwf	tblptrh,c
  2123  0009E6                     	if	0	;There are less than 3 active tblptr bytes
  2124  0009E6                     	endif
  2125  0009E6  0008               	tblrd		*
  2126  0009E8  50F5               	movf	tablat,w,c
  2127  0009EA  1836               	xorwf	??_my_vprintf^0,w,c
  2128  0009EC  A4D8               	btfss	status,2,c
  2129  0009EE  EFFB  F004         	goto	u9561
  2130  0009F2  EFFD  F004         	goto	u9560
  2131  0009F6                     u9561:
  2132  0009F6  EF01  F005         	goto	l8153
  2133  0009FA                     u9560:
  2134  0009FA                     
  2135                           ; BSR set to: 3
  2136                           ;src/print/my_print.c: 49:       x = i;
  2137  0009FA  C3E4  F3D8         	movff	my_vprintf@i,my_vprintf@x
  2138  0009FE  C3E5  F3D9         	movff	my_vprintf@i+1,my_vprintf@x+1
  2139  000A02                     l8153:
  2140                           
  2141                           ; BSR set to: 3
  2142                           ;src/print/my_print.c: 50:      }
  2143  000A02  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  2144  000A04  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  2145  000A06  EFD5  F004         	goto	l8145
  2146  000A0A                     l8157:
  2147                           
  2148                           ; BSR set to: 3
  2149                           ;src/print/my_print.c: 51:      i++;
  2150  000A0A  4BE4               	infsnz	my_vprintf@i& (0+255),f,b
  2151  000A0C  2BE5               	incf	(my_vprintf@i+1)& (0+255),f,b
  2152  000A0E                     l8159:
  2153                           
  2154                           ; BSR set to: 3
  2155                           ;src/print/my_print.c: 45:    while (x==0) {
  2156  000A0E  51D8               	movf	my_vprintf@x& (0+255),w,b
  2157  000A10  11D9               	iorwf	(my_vprintf@x+1)& (0+255),w,b
  2158  000A12  B4D8               	btfsc	status,2,c
  2159  000A14  EF0E  F005         	goto	u9571
  2160  000A18  EF10  F005         	goto	u9570
  2161  000A1C                     u9571:
  2162  000A1C  EFC0  F004         	goto	l8139
  2163  000A20                     u9570:
  2164  000A20                     
  2165                           ; BSR set to: 3
  2166                           ;src/print/my_print.c: 55:    i=0;
  2167  000A20  0E00               	movlw	0
  2168  000A22  6FE5               	movwf	(my_vprintf@i+1)& (0+255),b
  2169  000A24  0E00               	movlw	0
  2170  000A26  6FE4               	movwf	my_vprintf@i& (0+255),b
  2171                           
  2172                           ;src/print/my_print.c: 56:    for (j=0; j < x; j++) {
  2173  000A28  0E00               	movlw	0
  2174  000A2A  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  2175  000A2C  0E00               	movlw	0
  2176  000A2E  6FDC               	movwf	my_vprintf@j& (0+255),b
  2177  000A30  EF79  F005         	goto	l8183
  2178  000A34                     l8163:
  2179                           
  2180                           ; BSR set to: 3
  2181                           ;src/print/my_print.c: 57:     if(format[j]=='*' && i==0)
  2182  000A34  0E84               	movlw	low my_vprintf@format
  2183  000A36  25DC               	addwf	my_vprintf@j& (0+255),w,b
  2184  000A38  6ED9               	movwf	fsr2l,c
  2185  000A3A  0E03               	movlw	high my_vprintf@format
  2186  000A3C  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  2187  000A3E  6EDA               	movwf	fsr2h,c
  2188  000A40  0E2A               	movlw	42
  2189  000A42  18DE               	xorwf	postinc2,w,c
  2190  000A44  A4D8               	btfss	status,2,c
  2191  000A46  EF27  F005         	goto	u9581
  2192  000A4A  EF29  F005         	goto	u9580
  2193  000A4E                     u9581:
  2194  000A4E  EF40  F005         	goto	l8171
  2195  000A52                     u9580:
  2196  000A52                     
  2197                           ; BSR set to: 3
  2198  000A52  51E4               	movf	my_vprintf@i& (0+255),w,b
  2199  000A54  11E5               	iorwf	(my_vprintf@i+1)& (0+255),w,b
  2200  000A56  A4D8               	btfss	status,2,c
  2201  000A58  EF30  F005         	goto	u9591
  2202  000A5C  EF32  F005         	goto	u9590
  2203  000A60                     u9591:
  2204  000A60  EF40  F005         	goto	l8171
  2205  000A64                     u9590:
  2206  000A64                     
  2207                           ; BSR set to: 3
  2208                           ;src/print/my_print.c: 58:      width = (*(int *)__va_arg(*(int **)valist, (int)0));
  2209  000A64  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2210  000A68  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2211  000A6C  CFDE F3DA          	movff	postinc2,my_vprintf@width
  2212  000A70  CFDD F3DB          	movff	postdec2,my_vprintf@width+1
  2213  000A74                     
  2214                           ; BSR set to: 3
  2215  000A74  0E02               	movlw	2
  2216  000A76  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2217  000A78  0E00               	movlw	0
  2218  000A7A  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2219  000A7C  EF77  F005         	goto	l656
  2220  000A80                     l8171:
  2221                           
  2222                           ; BSR set to: 3
  2223  000A80  0E84               	movlw	low my_vprintf@format
  2224  000A82  25DC               	addwf	my_vprintf@j& (0+255),w,b
  2225  000A84  6ED9               	movwf	fsr2l,c
  2226  000A86  0E03               	movlw	high my_vprintf@format
  2227  000A88  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  2228  000A8A  6EDA               	movwf	fsr2h,c
  2229  000A8C  0E2A               	movlw	42
  2230  000A8E  18DE               	xorwf	postinc2,w,c
  2231  000A90  A4D8               	btfss	status,2,c
  2232  000A92  EF4D  F005         	goto	u9601
  2233  000A96  EF4F  F005         	goto	u9600
  2234  000A9A                     u9601:
  2235  000A9A  EF66  F005         	goto	l8179
  2236  000A9E                     u9600:
  2237  000A9E                     
  2238                           ; BSR set to: 3
  2239  000A9E  05E4               	decf	my_vprintf@i& (0+255),w,b
  2240  000AA0  11E5               	iorwf	(my_vprintf@i+1)& (0+255),w,b
  2241  000AA2  A4D8               	btfss	status,2,c
  2242  000AA4  EF56  F005         	goto	u9611
  2243  000AA8  EF58  F005         	goto	u9610
  2244  000AAC                     u9611:
  2245  000AAC  EF66  F005         	goto	l8179
  2246  000AB0                     u9610:
  2247  000AB0                     
  2248                           ; BSR set to: 3
  2249                           ;src/print/my_print.c: 60:      prec = (*(int *)__va_arg(*(int **)valist, (int)0));
  2250  000AB0  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2251  000AB4  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2252  000AB8  CFDE F3E8          	movff	postinc2,my_vprintf@prec
  2253  000ABC  CFDD F3E9          	movff	postdec2,my_vprintf@prec+1
  2254  000AC0                     
  2255                           ; BSR set to: 3
  2256  000AC0  0E02               	movlw	2
  2257  000AC2  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2258  000AC4  0E00               	movlw	0
  2259  000AC6  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2260  000AC8  EF77  F005         	goto	l656
  2261  000ACC                     l8179:
  2262                           
  2263                           ; BSR set to: 3
  2264  000ACC  0E84               	movlw	low my_vprintf@format
  2265  000ACE  25DC               	addwf	my_vprintf@j& (0+255),w,b
  2266  000AD0  6ED9               	movwf	fsr2l,c
  2267  000AD2  0E03               	movlw	high my_vprintf@format
  2268  000AD4  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  2269  000AD6  6EDA               	movwf	fsr2h,c
  2270  000AD8  0E2E               	movlw	46
  2271  000ADA  18DE               	xorwf	postinc2,w,c
  2272  000ADC  A4D8               	btfss	status,2,c
  2273  000ADE  EF73  F005         	goto	u9621
  2274  000AE2  EF75  F005         	goto	u9620
  2275  000AE6                     u9621:
  2276  000AE6  EF77  F005         	goto	l656
  2277  000AEA                     u9620:
  2278  000AEA                     
  2279                           ; BSR set to: 3
  2280                           ;src/print/my_print.c: 62:      i++;
  2281  000AEA  4BE4               	infsnz	my_vprintf@i& (0+255),f,b
  2282  000AEC  2BE5               	incf	(my_vprintf@i+1)& (0+255),f,b
  2283  000AEE                     l656:
  2284                           
  2285                           ; BSR set to: 3
  2286                           ;src/print/my_print.c: 63:    }
  2287  000AEE  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  2288  000AF0  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  2289  000AF2                     l8183:
  2290                           
  2291                           ; BSR set to: 3
  2292  000AF2  51D8               	movf	my_vprintf@x& (0+255),w,b
  2293  000AF4  5DDC               	subwf	my_vprintf@j& (0+255),w,b
  2294  000AF6  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  2295  000AF8  0A80               	xorlw	128
  2296  000AFA  6E36               	movwf	??_my_vprintf^0,c
  2297  000AFC  51D9               	movf	(my_vprintf@x+1)& (0+255),w,b
  2298  000AFE  0A80               	xorlw	128
  2299  000B00  5836               	subwfb	??_my_vprintf^0,w,c
  2300  000B02  A0D8               	btfss	status,0,c
  2301  000B04  EF86  F005         	goto	u9631
  2302  000B08  EF88  F005         	goto	u9630
  2303  000B0C                     u9631:
  2304  000B0C  EF1A  F005         	goto	l8163
  2305  000B10                     u9630:
  2306  000B10                     
  2307                           ; BSR set to: 3
  2308                           ;src/print/my_print.c: 65:    getWP(format, &width, &prec);
  2309  000B10  0E84               	movlw	low my_vprintf@format
  2310  000B12  0100               	movlb	0	; () banked
  2311  000B14  6FD3               	movwf	getWP@form& (0+255),b
  2312  000B16  0E03               	movlw	high my_vprintf@format
  2313  000B18  6FD4               	movwf	(getWP@form+1)& (0+255),b
  2314  000B1A  0EDA               	movlw	low my_vprintf@width
  2315  000B1C  6FD5               	movwf	getWP@width& (0+255),b
  2316  000B1E  0E03               	movlw	high my_vprintf@width
  2317  000B20  6FD6               	movwf	(getWP@width+1)& (0+255),b
  2318  000B22  0EE8               	movlw	low my_vprintf@prec
  2319  000B24  6FD7               	movwf	getWP@precision& (0+255),b
  2320  000B26  0E03               	movlw	high my_vprintf@prec
  2321  000B28  6FD8               	movwf	(getWP@precision+1)& (0+255),b
  2322  000B2A  ECA5  F017         	call	_getWP	;wreg free
  2323  000B2E                     
  2324                           ;src/print/my_print.c: 68:    if (width >= 64)
  2325  000B2E  0103               	movlb	3	; () banked
  2326  000B30  BFDB               	btfsc	(my_vprintf@width+1)& (0+255),7,b
  2327  000B32  EFA4  F005         	goto	u9641
  2328  000B36  51DB               	movf	(my_vprintf@width+1)& (0+255),w,b
  2329  000B38  E109               	bnz	u9640
  2330  000B3A  0E40               	movlw	64
  2331  000B3C  5DDA               	subwf	my_vprintf@width& (0+255),w,b
  2332  000B3E  A0D8               	btfss	status,0,c
  2333  000B40  EFA4  F005         	goto	u9641
  2334  000B44  EFA6  F005         	goto	u9640
  2335  000B48                     u9641:
  2336  000B48  EFAA  F005         	goto	l8191
  2337  000B4C                     u9640:
  2338  000B4C                     
  2339                           ; BSR set to: 3
  2340                           ;src/print/my_print.c: 69:     width = 0;
  2341  000B4C  0E00               	movlw	0
  2342  000B4E  6FDB               	movwf	(my_vprintf@width+1)& (0+255),b
  2343  000B50  0E00               	movlw	0
  2344  000B52  6FDA               	movwf	my_vprintf@width& (0+255),b
  2345  000B54                     l8191:
  2346                           
  2347                           ; BSR set to: 3
  2348                           ;src/print/my_print.c: 70:    if (prec >= 64)
  2349  000B54  BFE9               	btfsc	(my_vprintf@prec+1)& (0+255),7,b
  2350  000B56  EFB6  F005         	goto	u9651
  2351  000B5A  51E9               	movf	(my_vprintf@prec+1)& (0+255),w,b
  2352  000B5C  E109               	bnz	u9650
  2353  000B5E  0E40               	movlw	64
  2354  000B60  5DE8               	subwf	my_vprintf@prec& (0+255),w,b
  2355  000B62  A0D8               	btfss	status,0,c
  2356  000B64  EFB6  F005         	goto	u9651
  2357  000B68  EFB8  F005         	goto	u9650
  2358  000B6C                     u9651:
  2359  000B6C  EF9C  F009         	goto	l8385
  2360  000B70                     u9650:
  2361  000B70                     
  2362                           ; BSR set to: 3
  2363                           ;src/print/my_print.c: 71:     prec = 0;
  2364  000B70  0E00               	movlw	0
  2365  000B72  6FE9               	movwf	(my_vprintf@prec+1)& (0+255),b
  2366  000B74  0E00               	movlw	0
  2367  000B76  6FE8               	movwf	my_vprintf@prec& (0+255),b
  2368  000B78  EF9C  F009         	goto	l8385
  2369  000B7C                     l8195:
  2370                           
  2371                           ; BSR set to: 3
  2372                           ;src/print/my_print.c: 75:      strcpy(buffer, "%");
  2373  000B7C  0E90               	movlw	low my_vprintf@buffer
  2374  000B7E  6E08               	movwf	strcpy@dest^0,c
  2375  000B80  0E03               	movlw	high my_vprintf@buffer
  2376  000B82  6E09               	movwf	(strcpy@dest+1)^0,c
  2377  000B84  0EE4               	movlw	low STR_10
  2378  000B86  6E0A               	movwf	strcpy@src^0,c
  2379  000B88  0E08               	movlw	high STR_10
  2380  000B8A  6E0B               	movwf	(strcpy@src+1)^0,c
  2381  000B8C  EC85  F027         	call	_strcpy	;wreg free
  2382                           
  2383                           ;src/print/my_print.c: 76:      break;
  2384  000B90  EFEB  F009         	goto	l8387
  2385  000B94                     l8197:
  2386                           
  2387                           ; BSR set to: 3
  2388                           ;src/print/my_print.c: 78:      char_temp[0] = (*(char *)__va_arg(*(char **)valist, (cha
      +                          r)0));
  2389  000B94  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2390  000B98  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2391  000B9C  50DF               	movf	indf2,w,c
  2392  000B9E  6F80               	movwf	my_vprintf@char_temp& (0+255),b
  2393  000BA0                     
  2394                           ; BSR set to: 3
  2395  000BA0  0E02               	movlw	2
  2396  000BA2  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2397  000BA4  0E00               	movlw	0
  2398  000BA6  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2399  000BA8                     
  2400                           ; BSR set to: 3
  2401                           ;src/print/my_print.c: 79:      strcpy(buffer, char_temp);
  2402  000BA8  0E90               	movlw	low my_vprintf@buffer
  2403  000BAA  6E08               	movwf	strcpy@dest^0,c
  2404  000BAC  0E03               	movlw	high my_vprintf@buffer
  2405  000BAE  6E09               	movwf	(strcpy@dest+1)^0,c
  2406  000BB0  0E80               	movlw	low my_vprintf@char_temp
  2407  000BB2  6E0A               	movwf	strcpy@src^0,c
  2408  000BB4  0E03               	movlw	high my_vprintf@char_temp
  2409  000BB6  6E0B               	movwf	(strcpy@src+1)^0,c
  2410  000BB8  EC85  F027         	call	_strcpy	;wreg free
  2411                           
  2412                           ;src/print/my_print.c: 80:      break;
  2413  000BBC  EFEB  F009         	goto	l8387
  2414  000BC0                     l8203:
  2415                           
  2416                           ; BSR set to: 3
  2417                           ;src/print/my_print.c: 82:      string_temp = (*(char * *)__va_arg(*(char * **)valist, (
      +                          char *)0));
  2418  000BC0  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2419  000BC4  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2420  000BC8  CFDE F38E          	movff	postinc2,my_vprintf@string_temp
  2421  000BCC  CFDD F38F          	movff	postdec2,my_vprintf@string_temp+1
  2422  000BD0                     
  2423                           ; BSR set to: 3
  2424  000BD0  0E02               	movlw	2
  2425  000BD2  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2426  000BD4  0E00               	movlw	0
  2427  000BD6  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2428  000BD8                     
  2429                           ; BSR set to: 3
  2430                           ;src/print/my_print.c: 83:      strcpy(buffer, string_temp);
  2431  000BD8  0E90               	movlw	low my_vprintf@buffer
  2432  000BDA  6E08               	movwf	strcpy@dest^0,c
  2433  000BDC  0E03               	movlw	high my_vprintf@buffer
  2434  000BDE  6E09               	movwf	(strcpy@dest+1)^0,c
  2435  000BE0  C38E  F00A         	movff	my_vprintf@string_temp,strcpy@src
  2436  000BE4  C38F  F00B         	movff	my_vprintf@string_temp+1,strcpy@src+1
  2437  000BE8  EC85  F027         	call	_strcpy	;wreg free
  2438  000BEC                     
  2439                           ;src/print/my_print.c: 84:      precS(buffer, &prec);
  2440  000BEC  0E90               	movlw	low my_vprintf@buffer
  2441  000BEE  6E08               	movwf	precS@str^0,c
  2442  000BF0  0E03               	movlw	high my_vprintf@buffer
  2443  000BF2  6E09               	movwf	(precS@str+1)^0,c
  2444  000BF4  0EE8               	movlw	low my_vprintf@prec
  2445  000BF6  6E0A               	movwf	precS@precision^0,c
  2446  000BF8  0E03               	movlw	high my_vprintf@prec
  2447  000BFA  6E0B               	movwf	(precS@precision+1)^0,c
  2448  000BFC  ECB4  F026         	call	_precS	;wreg free
  2449                           
  2450                           ;src/print/my_print.c: 85:      break;
  2451  000C00  EFEB  F009         	goto	l8387
  2452  000C04                     l8211:
  2453                           
  2454                           ; BSR set to: 3
  2455                           ;src/print/my_print.c: 87:      int_temp = (*(int *)__va_arg(*(int **)valist, (int)0));
  2456  000C04  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2457  000C08  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2458  000C0C  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2459  000C10  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2460  000C14                     
  2461                           ; BSR set to: 3
  2462  000C14  0E02               	movlw	2
  2463  000C16  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2464  000C18  0E00               	movlw	0
  2465  000C1A  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2466  000C1C                     
  2467                           ; BSR set to: 3
  2468                           ;src/print/my_print.c: 88:      itoa(buffer, int_temp, 10);
  2469  000C1C  0E90               	movlw	low my_vprintf@buffer
  2470  000C1E  0100               	movlb	0	; () banked
  2471  000C20  6FD3               	movwf	itoa@str& (0+255),b
  2472  000C22  0E03               	movlw	high my_vprintf@buffer
  2473  000C24  6FD4               	movwf	(itoa@str+1)& (0+255),b
  2474  000C26  C3DE  F0D5         	movff	my_vprintf@int_temp,itoa@num
  2475  000C2A  C3DF  F0D6         	movff	my_vprintf@int_temp+1,itoa@num+1
  2476  000C2E  0E00               	movlw	0
  2477  000C30  BFD6               	btfsc	(itoa@num+1)& (0+255),7,b
  2478  000C32  0EFF               	movlw	-1
  2479  000C34  6FD7               	movwf	(itoa@num+2)& (0+255),b
  2480  000C36  6FD8               	movwf	(itoa@num+3)& (0+255),b
  2481  000C38  0E00               	movlw	0
  2482  000C3A  6FDA               	movwf	(itoa@base_+1)& (0+255),b
  2483  000C3C  0E0A               	movlw	10
  2484  000C3E  6FD9               	movwf	itoa@base_& (0+255),b
  2485  000C40  EC71  F01E         	call	_itoa	;wreg free
  2486  000C44                     
  2487                           ;src/print/my_print.c: 89:      precI(buffer, &prec);
  2488  000C44  0E90               	movlw	low my_vprintf@buffer
  2489  000C46  6E08               	movwf	precI@str^0,c
  2490  000C48  0E03               	movlw	high my_vprintf@buffer
  2491  000C4A  6E09               	movwf	(precI@str+1)^0,c
  2492  000C4C  0EE8               	movlw	low my_vprintf@prec
  2493  000C4E  6E0A               	movwf	precI@precision^0,c
  2494  000C50  0E03               	movlw	high my_vprintf@prec
  2495  000C52  6E0B               	movwf	(precI@precision+1)^0,c
  2496  000C54  EC2A  F021         	call	_precI	;wreg free
  2497  000C58                     
  2498                           ;src/print/my_print.c: 90:      addSig(buffer, (double)int_temp);
  2499  000C58  0E90               	movlw	low my_vprintf@buffer
  2500  000C5A  6E12               	movwf	addSig@numS^0,c
  2501  000C5C  0E03               	movlw	high my_vprintf@buffer
  2502  000C5E  6E13               	movwf	(addSig@numS+1)^0,c
  2503  000C60  C3DE  F004         	movff	my_vprintf@int_temp,___xxtofl@val
  2504  000C64  C3DF  F005         	movff	my_vprintf@int_temp+1,___xxtofl@val+1
  2505  000C68  0E00               	movlw	0
  2506  000C6A  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  2507  000C6C  0EFF               	movlw	-1
  2508  000C6E  6E06               	movwf	(___xxtofl@val+2)^0,c
  2509  000C70  6E07               	movwf	(___xxtofl@val+3)^0,c
  2510  000C72  0E01               	movlw	1
  2511  000C74  ECC5  F01C         	call	___xxtofl
  2512  000C78  C004  F014         	movff	?___xxtofl,addSig@num
  2513  000C7C  C005  F015         	movff	?___xxtofl+1,addSig@num+1
  2514  000C80  C006  F016         	movff	?___xxtofl+2,addSig@num+2
  2515  000C84  C007  F017         	movff	?___xxtofl+3,addSig@num+3
  2516  000C88  ECF0  F01F         	call	_addSig	;wreg free
  2517                           
  2518                           ;src/print/my_print.c: 91:      break;
  2519  000C8C  EFEB  F009         	goto	l8387
  2520  000C90                     l8221:
  2521                           
  2522                           ; BSR set to: 3
  2523                           ;src/print/my_print.c: 93:      int_temp = (*(int *)__va_arg(*(int **)valist, (int)0));
  2524  000C90  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2525  000C94  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2526  000C98  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2527  000C9C  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2528  000CA0                     
  2529                           ; BSR set to: 3
  2530  000CA0  0E02               	movlw	2
  2531  000CA2  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2532  000CA4  0E00               	movlw	0
  2533  000CA6  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2534  000CA8                     
  2535                           ; BSR set to: 3
  2536                           ;src/print/my_print.c: 94:      itoa(buffer, int_temp, 10);
  2537  000CA8  0E90               	movlw	low my_vprintf@buffer
  2538  000CAA  0100               	movlb	0	; () banked
  2539  000CAC  6FD3               	movwf	itoa@str& (0+255),b
  2540  000CAE  0E03               	movlw	high my_vprintf@buffer
  2541  000CB0  6FD4               	movwf	(itoa@str+1)& (0+255),b
  2542  000CB2  C3DE  F0D5         	movff	my_vprintf@int_temp,itoa@num
  2543  000CB6  C3DF  F0D6         	movff	my_vprintf@int_temp+1,itoa@num+1
  2544  000CBA  0E00               	movlw	0
  2545  000CBC  BFD6               	btfsc	(itoa@num+1)& (0+255),7,b
  2546  000CBE  0EFF               	movlw	-1
  2547  000CC0  6FD7               	movwf	(itoa@num+2)& (0+255),b
  2548  000CC2  6FD8               	movwf	(itoa@num+3)& (0+255),b
  2549  000CC4  0E00               	movlw	0
  2550  000CC6  6FDA               	movwf	(itoa@base_+1)& (0+255),b
  2551  000CC8  0E0A               	movlw	10
  2552  000CCA  6FD9               	movwf	itoa@base_& (0+255),b
  2553  000CCC  EC71  F01E         	call	_itoa	;wreg free
  2554  000CD0                     
  2555                           ;src/print/my_print.c: 95:      precI(buffer, &prec);
  2556  000CD0  0E90               	movlw	low my_vprintf@buffer
  2557  000CD2  6E08               	movwf	precI@str^0,c
  2558  000CD4  0E03               	movlw	high my_vprintf@buffer
  2559  000CD6  6E09               	movwf	(precI@str+1)^0,c
  2560  000CD8  0EE8               	movlw	low my_vprintf@prec
  2561  000CDA  6E0A               	movwf	precI@precision^0,c
  2562  000CDC  0E03               	movlw	high my_vprintf@prec
  2563  000CDE  6E0B               	movwf	(precI@precision+1)^0,c
  2564  000CE0  EC2A  F021         	call	_precI	;wreg free
  2565  000CE4                     
  2566                           ;src/print/my_print.c: 96:      addSig(buffer, (double)int_temp);
  2567  000CE4  0E90               	movlw	low my_vprintf@buffer
  2568  000CE6  6E12               	movwf	addSig@numS^0,c
  2569  000CE8  0E03               	movlw	high my_vprintf@buffer
  2570  000CEA  6E13               	movwf	(addSig@numS+1)^0,c
  2571  000CEC  C3DE  F004         	movff	my_vprintf@int_temp,___xxtofl@val
  2572  000CF0  C3DF  F005         	movff	my_vprintf@int_temp+1,___xxtofl@val+1
  2573  000CF4  0E00               	movlw	0
  2574  000CF6  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  2575  000CF8  0EFF               	movlw	-1
  2576  000CFA  6E06               	movwf	(___xxtofl@val+2)^0,c
  2577  000CFC  6E07               	movwf	(___xxtofl@val+3)^0,c
  2578  000CFE  0E01               	movlw	1
  2579  000D00  ECC5  F01C         	call	___xxtofl
  2580  000D04  C004  F014         	movff	?___xxtofl,addSig@num
  2581  000D08  C005  F015         	movff	?___xxtofl+1,addSig@num+1
  2582  000D0C  C006  F016         	movff	?___xxtofl+2,addSig@num+2
  2583  000D10  C007  F017         	movff	?___xxtofl+3,addSig@num+3
  2584  000D14  ECF0  F01F         	call	_addSig	;wreg free
  2585                           
  2586                           ;src/print/my_print.c: 97:      break;
  2587  000D18  EFEB  F009         	goto	l8387
  2588  000D1C                     l8231:
  2589                           
  2590                           ; BSR set to: 3
  2591                           ;src/print/my_print.c: 99:      uint_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2592  000D1C  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2593  000D20  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2594  000D24  CFDE F3D2          	movff	postinc2,my_vprintf@uint_temp
  2595  000D28  CFDD F3D3          	movff	postdec2,my_vprintf@uint_temp+1
  2596  000D2C                     
  2597                           ; BSR set to: 3
  2598  000D2C  0E02               	movlw	2
  2599  000D2E  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2600  000D30  0E00               	movlw	0
  2601  000D32  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2602  000D34                     
  2603                           ; BSR set to: 3
  2604                           ;src/print/my_print.c: 100:      itoa(buffer, uint_temp, 10);
  2605  000D34  0E90               	movlw	low my_vprintf@buffer
  2606  000D36  0100               	movlb	0	; () banked
  2607  000D38  6FD3               	movwf	itoa@str& (0+255),b
  2608  000D3A  0E03               	movlw	high my_vprintf@buffer
  2609  000D3C  6FD4               	movwf	(itoa@str+1)& (0+255),b
  2610  000D3E  C3D2  F0D5         	movff	my_vprintf@uint_temp,itoa@num
  2611  000D42  C3D3  F0D6         	movff	my_vprintf@uint_temp+1,itoa@num+1
  2612  000D46  6BD7               	clrf	(itoa@num+2)& (0+255),b
  2613  000D48  6BD8               	clrf	(itoa@num+3)& (0+255),b
  2614  000D4A  0E00               	movlw	0
  2615  000D4C  6FDA               	movwf	(itoa@base_+1)& (0+255),b
  2616  000D4E  0E0A               	movlw	10
  2617  000D50  6FD9               	movwf	itoa@base_& (0+255),b
  2618  000D52  EC71  F01E         	call	_itoa	;wreg free
  2619  000D56                     
  2620                           ;src/print/my_print.c: 101:      precI(buffer, &prec);
  2621  000D56  0E90               	movlw	low my_vprintf@buffer
  2622  000D58  6E08               	movwf	precI@str^0,c
  2623  000D5A  0E03               	movlw	high my_vprintf@buffer
  2624  000D5C  6E09               	movwf	(precI@str+1)^0,c
  2625  000D5E  0EE8               	movlw	low my_vprintf@prec
  2626  000D60  6E0A               	movwf	precI@precision^0,c
  2627  000D62  0E03               	movlw	high my_vprintf@prec
  2628  000D64  6E0B               	movwf	(precI@precision+1)^0,c
  2629  000D66  EC2A  F021         	call	_precI	;wreg free
  2630                           
  2631                           ;src/print/my_print.c: 102:      break;
  2632  000D6A  EFEB  F009         	goto	l8387
  2633  000D6E                     l8239:
  2634                           
  2635                           ; BSR set to: 3
  2636                           ;src/print/my_print.c: 104:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2637  000D6E  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2638  000D72  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2639  000D76  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2640  000D7A  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2641  000D7E                     
  2642                           ; BSR set to: 3
  2643  000D7E  0E02               	movlw	2
  2644  000D80  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2645  000D82  0E00               	movlw	0
  2646  000D84  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2647  000D86                     
  2648                           ; BSR set to: 3
  2649                           ;src/print/my_print.c: 105:      itoa(buffer, int_temp, 16);
  2650  000D86  0E90               	movlw	low my_vprintf@buffer
  2651  000D88  0100               	movlb	0	; () banked
  2652  000D8A  6FD3               	movwf	itoa@str& (0+255),b
  2653  000D8C  0E03               	movlw	high my_vprintf@buffer
  2654  000D8E  6FD4               	movwf	(itoa@str+1)& (0+255),b
  2655  000D90  C3DE  F0D5         	movff	my_vprintf@int_temp,itoa@num
  2656  000D94  C3DF  F0D6         	movff	my_vprintf@int_temp+1,itoa@num+1
  2657  000D98  0E00               	movlw	0
  2658  000D9A  BFD6               	btfsc	(itoa@num+1)& (0+255),7,b
  2659  000D9C  0EFF               	movlw	-1
  2660  000D9E  6FD7               	movwf	(itoa@num+2)& (0+255),b
  2661  000DA0  6FD8               	movwf	(itoa@num+3)& (0+255),b
  2662  000DA2  0E00               	movlw	0
  2663  000DA4  6FDA               	movwf	(itoa@base_+1)& (0+255),b
  2664  000DA6  0E10               	movlw	16
  2665  000DA8  6FD9               	movwf	itoa@base_& (0+255),b
  2666  000DAA  EC71  F01E         	call	_itoa	;wreg free
  2667  000DAE                     
  2668                           ;src/print/my_print.c: 106:      precI(buffer, &prec);
  2669  000DAE  0E90               	movlw	low my_vprintf@buffer
  2670  000DB0  6E08               	movwf	precI@str^0,c
  2671  000DB2  0E03               	movlw	high my_vprintf@buffer
  2672  000DB4  6E09               	movwf	(precI@str+1)^0,c
  2673  000DB6  0EE8               	movlw	low my_vprintf@prec
  2674  000DB8  6E0A               	movwf	precI@precision^0,c
  2675  000DBA  0E03               	movlw	high my_vprintf@prec
  2676  000DBC  6E0B               	movwf	(precI@precision+1)^0,c
  2677  000DBE  EC2A  F021         	call	_precI	;wreg free
  2678  000DC2                     
  2679                           ;src/print/my_print.c: 107:      addOx(buffer, int_temp,'x');
  2680  000DC2  0E90               	movlw	low my_vprintf@buffer
  2681  000DC4  6E08               	movwf	addOx@hoS^0,c
  2682  000DC6  0E03               	movlw	high my_vprintf@buffer
  2683  000DC8  6E09               	movwf	(addOx@hoS+1)^0,c
  2684  000DCA  C3DE  F00A         	movff	my_vprintf@int_temp,addOx@num
  2685  000DCE  C3DF  F00B         	movff	my_vprintf@int_temp+1,addOx@num+1
  2686  000DD2  0E78               	movlw	120
  2687  000DD4  6E0C               	movwf	addOx@type^0,c
  2688  000DD6  EC34  F01F         	call	_addOx	;wreg free
  2689  000DDA                     l8249:
  2690                           
  2691                           ;src/print/my_print.c: 108:      upperCL(buffer);
  2692  000DDA  0E90               	movlw	low my_vprintf@buffer
  2693  000DDC  6E08               	movwf	upperCL@str^0,c
  2694  000DDE  0E03               	movlw	high my_vprintf@buffer
  2695  000DE0  6E09               	movwf	(upperCL@str+1)^0,c
  2696  000DE2  EC2E  F026         	call	_upperCL	;wreg free
  2697                           
  2698                           ;src/print/my_print.c: 110:      break;
  2699  000DE6  EFEB  F009         	goto	l8387
  2700  000DEA                     l8251:
  2701                           
  2702                           ; BSR set to: 3
  2703                           ;src/print/my_print.c: 112:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2704  000DEA  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2705  000DEE  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2706  000DF2  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2707  000DF6  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2708  000DFA                     
  2709                           ; BSR set to: 3
  2710  000DFA  0E02               	movlw	2
  2711  000DFC  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2712  000DFE  0E00               	movlw	0
  2713  000E00  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2714  000E02                     
  2715                           ; BSR set to: 3
  2716                           ;src/print/my_print.c: 113:      itoa(buffer, int_temp, 16);
  2717  000E02  0E90               	movlw	low my_vprintf@buffer
  2718  000E04  0100               	movlb	0	; () banked
  2719  000E06  6FD3               	movwf	itoa@str& (0+255),b
  2720  000E08  0E03               	movlw	high my_vprintf@buffer
  2721  000E0A  6FD4               	movwf	(itoa@str+1)& (0+255),b
  2722  000E0C  C3DE  F0D5         	movff	my_vprintf@int_temp,itoa@num
  2723  000E10  C3DF  F0D6         	movff	my_vprintf@int_temp+1,itoa@num+1
  2724  000E14  0E00               	movlw	0
  2725  000E16  BFD6               	btfsc	(itoa@num+1)& (0+255),7,b
  2726  000E18  0EFF               	movlw	-1
  2727  000E1A  6FD7               	movwf	(itoa@num+2)& (0+255),b
  2728  000E1C  6FD8               	movwf	(itoa@num+3)& (0+255),b
  2729  000E1E  0E00               	movlw	0
  2730  000E20  6FDA               	movwf	(itoa@base_+1)& (0+255),b
  2731  000E22  0E10               	movlw	16
  2732  000E24  6FD9               	movwf	itoa@base_& (0+255),b
  2733  000E26  EC71  F01E         	call	_itoa	;wreg free
  2734  000E2A                     
  2735                           ;src/print/my_print.c: 114:      precI(buffer, &prec);
  2736  000E2A  0E90               	movlw	low my_vprintf@buffer
  2737  000E2C  6E08               	movwf	precI@str^0,c
  2738  000E2E  0E03               	movlw	high my_vprintf@buffer
  2739  000E30  6E09               	movwf	(precI@str+1)^0,c
  2740  000E32  0EE8               	movlw	low my_vprintf@prec
  2741  000E34  6E0A               	movwf	precI@precision^0,c
  2742  000E36  0E03               	movlw	high my_vprintf@prec
  2743  000E38  6E0B               	movwf	(precI@precision+1)^0,c
  2744  000E3A  EC2A  F021         	call	_precI	;wreg free
  2745  000E3E                     
  2746                           ;src/print/my_print.c: 115:      addOx(buffer, int_temp,'x');
  2747  000E3E  0E90               	movlw	low my_vprintf@buffer
  2748  000E40  6E08               	movwf	addOx@hoS^0,c
  2749  000E42  0E03               	movlw	high my_vprintf@buffer
  2750  000E44  6E09               	movwf	(addOx@hoS+1)^0,c
  2751  000E46  C3DE  F00A         	movff	my_vprintf@int_temp,addOx@num
  2752  000E4A  C3DF  F00B         	movff	my_vprintf@int_temp+1,addOx@num+1
  2753  000E4E  0E78               	movlw	120
  2754  000E50  6E0C               	movwf	addOx@type^0,c
  2755  000E52  EC34  F01F         	call	_addOx	;wreg free
  2756                           
  2757                           ;src/print/my_print.c: 116:      break;
  2758  000E56  EFEB  F009         	goto	l8387
  2759  000E5A                     l8261:
  2760                           
  2761                           ; BSR set to: 3
  2762                           ;src/print/my_print.c: 118:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2763  000E5A  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2764  000E5E  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2765  000E62  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2766  000E66  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2767  000E6A                     
  2768                           ; BSR set to: 3
  2769  000E6A  0E02               	movlw	2
  2770  000E6C  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2771  000E6E  0E00               	movlw	0
  2772  000E70  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2773  000E72                     
  2774                           ; BSR set to: 3
  2775                           ;src/print/my_print.c: 119:      itoa(buffer, int_temp, 8);
  2776  000E72  0E90               	movlw	low my_vprintf@buffer
  2777  000E74  0100               	movlb	0	; () banked
  2778  000E76  6FD3               	movwf	itoa@str& (0+255),b
  2779  000E78  0E03               	movlw	high my_vprintf@buffer
  2780  000E7A  6FD4               	movwf	(itoa@str+1)& (0+255),b
  2781  000E7C  C3DE  F0D5         	movff	my_vprintf@int_temp,itoa@num
  2782  000E80  C3DF  F0D6         	movff	my_vprintf@int_temp+1,itoa@num+1
  2783  000E84  0E00               	movlw	0
  2784  000E86  BFD6               	btfsc	(itoa@num+1)& (0+255),7,b
  2785  000E88  0EFF               	movlw	-1
  2786  000E8A  6FD7               	movwf	(itoa@num+2)& (0+255),b
  2787  000E8C  6FD8               	movwf	(itoa@num+3)& (0+255),b
  2788  000E8E  0E00               	movlw	0
  2789  000E90  6FDA               	movwf	(itoa@base_+1)& (0+255),b
  2790  000E92  0E08               	movlw	8
  2791  000E94  6FD9               	movwf	itoa@base_& (0+255),b
  2792  000E96  EC71  F01E         	call	_itoa	;wreg free
  2793  000E9A                     
  2794                           ;src/print/my_print.c: 120:      precI(buffer, &prec);
  2795  000E9A  0E90               	movlw	low my_vprintf@buffer
  2796  000E9C  6E08               	movwf	precI@str^0,c
  2797  000E9E  0E03               	movlw	high my_vprintf@buffer
  2798  000EA0  6E09               	movwf	(precI@str+1)^0,c
  2799  000EA2  0EE8               	movlw	low my_vprintf@prec
  2800  000EA4  6E0A               	movwf	precI@precision^0,c
  2801  000EA6  0E03               	movlw	high my_vprintf@prec
  2802  000EA8  6E0B               	movwf	(precI@precision+1)^0,c
  2803  000EAA  EC2A  F021         	call	_precI	;wreg free
  2804  000EAE                     
  2805                           ;src/print/my_print.c: 121:      addOx(buffer, int_temp,'o');
  2806  000EAE  0E90               	movlw	low my_vprintf@buffer
  2807  000EB0  6E08               	movwf	addOx@hoS^0,c
  2808  000EB2  0E03               	movlw	high my_vprintf@buffer
  2809  000EB4  6E09               	movwf	(addOx@hoS+1)^0,c
  2810  000EB6  C3DE  F00A         	movff	my_vprintf@int_temp,addOx@num
  2811  000EBA  C3DF  F00B         	movff	my_vprintf@int_temp+1,addOx@num+1
  2812  000EBE  0E6F               	movlw	111
  2813  000EC0  6E0C               	movwf	addOx@type^0,c
  2814  000EC2  EC34  F01F         	call	_addOx	;wreg free
  2815                           
  2816                           ;src/print/my_print.c: 122:      break;
  2817  000EC6  EFEB  F009         	goto	l8387
  2818  000ECA                     l8271:
  2819                           
  2820                           ; BSR set to: 3
  2821                           ;src/print/my_print.c: 124:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2822  000ECA  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2823  000ECE  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2824  000ED2  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  2825  000ED6  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  2826  000EDA  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  2827  000EDE  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  2828  000EE2                     
  2829                           ; BSR set to: 3
  2830  000EE2  0E04               	movlw	4
  2831  000EE4  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2832  000EE6  0E00               	movlw	0
  2833  000EE8  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2834  000EEA                     
  2835                           ; BSR set to: 3
  2836                           ;src/print/my_print.c: 125:      ftoa(buffer, double_temp);
  2837  000EEA  0E90               	movlw	low my_vprintf@buffer
  2838  000EEC  6E27               	movwf	ftoa@buffer^0,c
  2839  000EEE  0E03               	movlw	high my_vprintf@buffer
  2840  000EF0  6E28               	movwf	(ftoa@buffer+1)^0,c
  2841  000EF2  C3E0  F029         	movff	my_vprintf@double_temp,ftoa@value
  2842  000EF6  C3E1  F02A         	movff	my_vprintf@double_temp+1,ftoa@value+1
  2843  000EFA  C3E2  F02B         	movff	my_vprintf@double_temp+2,ftoa@value+2
  2844  000EFE  C3E3  F02C         	movff	my_vprintf@double_temp+3,ftoa@value+3
  2845  000F02  EC21  F013         	call	_ftoa	;wreg free
  2846  000F06                     
  2847                           ;src/print/my_print.c: 126:      precF(buffer, &prec);
  2848  000F06  0E90               	movlw	low my_vprintf@buffer
  2849  000F08  6E1F               	movwf	precF@str^0,c
  2850  000F0A  0E03               	movlw	high my_vprintf@buffer
  2851  000F0C  6E20               	movwf	(precF@str+1)^0,c
  2852  000F0E  0EE8               	movlw	low my_vprintf@prec
  2853  000F10  6E21               	movwf	precF@precision^0,c
  2854  000F12  0E03               	movlw	high my_vprintf@prec
  2855  000F14  6E22               	movwf	(precF@precision+1)^0,c
  2856  000F16  ECDE  F01B         	call	_precF	;wreg free
  2857  000F1A                     l8279:
  2858                           
  2859                           ;src/print/my_print.c: 127:      addSig(buffer, double_temp);
  2860  000F1A  0E90               	movlw	low my_vprintf@buffer
  2861  000F1C  6E12               	movwf	addSig@numS^0,c
  2862  000F1E  0E03               	movlw	high my_vprintf@buffer
  2863  000F20  6E13               	movwf	(addSig@numS+1)^0,c
  2864  000F22  C3E0  F014         	movff	my_vprintf@double_temp,addSig@num
  2865  000F26  C3E1  F015         	movff	my_vprintf@double_temp+1,addSig@num+1
  2866  000F2A  C3E2  F016         	movff	my_vprintf@double_temp+2,addSig@num+2
  2867  000F2E  C3E3  F017         	movff	my_vprintf@double_temp+3,addSig@num+3
  2868  000F32  ECF0  F01F         	call	_addSig	;wreg free
  2869                           
  2870                           ;src/print/my_print.c: 128:      break;
  2871  000F36  EFEB  F009         	goto	l8387
  2872  000F3A                     l8281:
  2873                           
  2874                           ; BSR set to: 3
  2875                           ;src/print/my_print.c: 130:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2876  000F3A  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2877  000F3E  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2878  000F42  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  2879  000F46  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  2880  000F4A  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  2881  000F4E  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  2882  000F52                     
  2883                           ; BSR set to: 3
  2884  000F52  0E04               	movlw	4
  2885  000F54  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2886  000F56  0E00               	movlw	0
  2887  000F58  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2888  000F5A                     
  2889                           ; BSR set to: 3
  2890                           ;src/print/my_print.c: 131:      ftoa_sci(buffer, double_temp);
  2891  000F5A  0E90               	movlw	low my_vprintf@buffer
  2892  000F5C  0100               	movlb	0	; () banked
  2893  000F5E  6FDB               	movwf	ftoa_sci@buffer& (0+255),b
  2894  000F60  0E03               	movlw	high my_vprintf@buffer
  2895  000F62  6FDC               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2896  000F64  C3E0  F0DD         	movff	my_vprintf@double_temp,ftoa_sci@value
  2897  000F68  C3E1  F0DE         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2898  000F6C  C3E2  F0DF         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2899  000F70  C3E3  F0E0         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2900  000F74  EC35  F016         	call	_ftoa_sci	;wreg free
  2901  000F78                     
  2902                           ;src/print/my_print.c: 132:      precE(buffer, &prec);
  2903  000F78  0E90               	movlw	low my_vprintf@buffer
  2904  000F7A  6E1F               	movwf	precE@str^0,c
  2905  000F7C  0E03               	movlw	high my_vprintf@buffer
  2906  000F7E  6E20               	movwf	(precE@str+1)^0,c
  2907  000F80  0EE8               	movlw	low my_vprintf@prec
  2908  000F82  6E21               	movwf	precE@precision^0,c
  2909  000F84  0E03               	movlw	high my_vprintf@prec
  2910  000F86  6E22               	movwf	(precE@precision+1)^0,c
  2911  000F88  ECE3  F019         	call	_precE	;wreg free
  2912  000F8C  EF8D  F007         	goto	l8279
  2913  000F90                     l8291:
  2914                           
  2915                           ; BSR set to: 3
  2916                           ;src/print/my_print.c: 136:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2917  000F90  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2918  000F94  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2919  000F98  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  2920  000F9C  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  2921  000FA0  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  2922  000FA4  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  2923  000FA8                     
  2924                           ; BSR set to: 3
  2925  000FA8  0E04               	movlw	4
  2926  000FAA  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2927  000FAC  0E00               	movlw	0
  2928  000FAE  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2929  000FB0                     
  2930                           ; BSR set to: 3
  2931                           ;src/print/my_print.c: 137:      ftoa_sci(buffer, double_temp);
  2932  000FB0  0E90               	movlw	low my_vprintf@buffer
  2933  000FB2  0100               	movlb	0	; () banked
  2934  000FB4  6FDB               	movwf	ftoa_sci@buffer& (0+255),b
  2935  000FB6  0E03               	movlw	high my_vprintf@buffer
  2936  000FB8  6FDC               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2937  000FBA  C3E0  F0DD         	movff	my_vprintf@double_temp,ftoa_sci@value
  2938  000FBE  C3E1  F0DE         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2939  000FC2  C3E2  F0DF         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2940  000FC6  C3E3  F0E0         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2941  000FCA  EC35  F016         	call	_ftoa_sci	;wreg free
  2942  000FCE                     
  2943                           ;src/print/my_print.c: 138:      precE(buffer, &prec);
  2944  000FCE  0E90               	movlw	low my_vprintf@buffer
  2945  000FD0  6E1F               	movwf	precE@str^0,c
  2946  000FD2  0E03               	movlw	high my_vprintf@buffer
  2947  000FD4  6E20               	movwf	(precE@str+1)^0,c
  2948  000FD6  0EE8               	movlw	low my_vprintf@prec
  2949  000FD8  6E21               	movwf	precE@precision^0,c
  2950  000FDA  0E03               	movlw	high my_vprintf@prec
  2951  000FDC  6E22               	movwf	(precE@precision+1)^0,c
  2952  000FDE  ECE3  F019         	call	_precE	;wreg free
  2953  000FE2                     l8299:
  2954                           
  2955                           ;src/print/my_print.c: 139:      addSig(buffer, double_temp);
  2956  000FE2  0E90               	movlw	low my_vprintf@buffer
  2957  000FE4  6E12               	movwf	addSig@numS^0,c
  2958  000FE6  0E03               	movlw	high my_vprintf@buffer
  2959  000FE8  6E13               	movwf	(addSig@numS+1)^0,c
  2960  000FEA  C3E0  F014         	movff	my_vprintf@double_temp,addSig@num
  2961  000FEE  C3E1  F015         	movff	my_vprintf@double_temp+1,addSig@num+1
  2962  000FF2  C3E2  F016         	movff	my_vprintf@double_temp+2,addSig@num+2
  2963  000FF6  C3E3  F017         	movff	my_vprintf@double_temp+3,addSig@num+3
  2964  000FFA  ECF0  F01F         	call	_addSig	;wreg free
  2965  000FFE  EFED  F006         	goto	l8249
  2966  001002                     l8303:
  2967                           
  2968                           ; BSR set to: 3
  2969                           ;src/print/my_print.c: 143:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2970  001002  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2971  001006  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2972  00100A  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  2973  00100E  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  2974  001012  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  2975  001016  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  2976  00101A                     
  2977                           ; BSR set to: 3
  2978  00101A  0E04               	movlw	4
  2979  00101C  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2980  00101E  0E00               	movlw	0
  2981  001020  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2982  001022                     
  2983                           ; BSR set to: 3
  2984                           ;src/print/my_print.c: 144:      expA = ftoa_sci(buffer, double_temp);
  2985  001022  0E90               	movlw	low my_vprintf@buffer
  2986  001024  0100               	movlb	0	; () banked
  2987  001026  6FDB               	movwf	ftoa_sci@buffer& (0+255),b
  2988  001028  0E03               	movlw	high my_vprintf@buffer
  2989  00102A  6FDC               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2990  00102C  C3E0  F0DD         	movff	my_vprintf@double_temp,ftoa_sci@value
  2991  001030  C3E1  F0DE         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2992  001034  C3E2  F0DF         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2993  001038  C3E3  F0E0         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2994  00103C  EC35  F016         	call	_ftoa_sci	;wreg free
  2995  001040  C0DB  F3D6         	movff	?_ftoa_sci,my_vprintf@expA
  2996  001044  C0DC  F3D7         	movff	?_ftoa_sci+1,my_vprintf@expA+1
  2997  001048                     
  2998                           ;src/print/my_print.c: 145:      ftoa(buffer, double_temp);
  2999  001048  0E90               	movlw	low my_vprintf@buffer
  3000  00104A  6E27               	movwf	ftoa@buffer^0,c
  3001  00104C  0E03               	movlw	high my_vprintf@buffer
  3002  00104E  6E28               	movwf	(ftoa@buffer+1)^0,c
  3003  001050  C3E0  F029         	movff	my_vprintf@double_temp,ftoa@value
  3004  001054  C3E1  F02A         	movff	my_vprintf@double_temp+1,ftoa@value+1
  3005  001058  C3E2  F02B         	movff	my_vprintf@double_temp+2,ftoa@value+2
  3006  00105C  C3E3  F02C         	movff	my_vprintf@double_temp+3,ftoa@value+3
  3007  001060  EC21  F013         	call	_ftoa	;wreg free
  3008  001064                     
  3009                           ;src/print/my_print.c: 146:      j=0;
  3010  001064  0E00               	movlw	0
  3011  001066  0103               	movlb	3	; () banked
  3012  001068  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  3013  00106A  0E00               	movlw	0
  3014  00106C  6FDC               	movwf	my_vprintf@j& (0+255),b
  3015  00106E                     
  3016                           ; BSR set to: 3
  3017                           ;src/print/my_print.c: 147:      for (i=0;i<strlen(buffer);i++)
  3018  00106E  0E00               	movlw	0
  3019  001070  6FE5               	movwf	(my_vprintf@i+1)& (0+255),b
  3020  001072  0E00               	movlw	0
  3021  001074  6FE4               	movwf	my_vprintf@i& (0+255),b
  3022  001076  EF6E  F008         	goto	l8325
  3023  00107A                     l8315:
  3024                           
  3025                           ; BSR set to: 3
  3026                           ;src/print/my_print.c: 148:      {;src/print/my_print.c: 149:       if (buffer[i]=='.')
  3027  00107A  0E90               	movlw	low my_vprintf@buffer
  3028  00107C  25E4               	addwf	my_vprintf@i& (0+255),w,b
  3029  00107E  6ED9               	movwf	fsr2l,c
  3030  001080  0E03               	movlw	high my_vprintf@buffer
  3031  001082  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  3032  001084  6EDA               	movwf	fsr2h,c
  3033  001086  0E2E               	movlw	46
  3034  001088  18DE               	xorwf	postinc2,w,c
  3035  00108A  A4D8               	btfss	status,2,c
  3036  00108C  EF4A  F008         	goto	u9661
  3037  001090  EF4C  F008         	goto	u9660
  3038  001094                     u9661:
  3039  001094  EF4E  F008         	goto	l8319
  3040  001098                     u9660:
  3041  001098  EF80  F008         	goto	l8327
  3042  00109C                     l8319:
  3043                           
  3044                           ; BSR set to: 3
  3045                           ;src/print/my_print.c: 152:       if (buffer[i]>=48 && buffer[i]<=57)
  3046  00109C  0E90               	movlw	low my_vprintf@buffer
  3047  00109E  25E4               	addwf	my_vprintf@i& (0+255),w,b
  3048  0010A0  6ED9               	movwf	fsr2l,c
  3049  0010A2  0E03               	movlw	high my_vprintf@buffer
  3050  0010A4  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  3051  0010A6  6EDA               	movwf	fsr2h,c
  3052  0010A8  0E2F               	movlw	47
  3053  0010AA  64DF               	cpfsgt	indf2,c
  3054  0010AC  EF5A  F008         	goto	u9671
  3055  0010B0  EF5C  F008         	goto	u9670
  3056  0010B4                     u9671:
  3057  0010B4  EF6C  F008         	goto	l682
  3058  0010B8                     u9670:
  3059  0010B8                     
  3060                           ; BSR set to: 3
  3061  0010B8  0E90               	movlw	low my_vprintf@buffer
  3062  0010BA  25E4               	addwf	my_vprintf@i& (0+255),w,b
  3063  0010BC  6ED9               	movwf	fsr2l,c
  3064  0010BE  0E03               	movlw	high my_vprintf@buffer
  3065  0010C0  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  3066  0010C2  6EDA               	movwf	fsr2h,c
  3067  0010C4  0E3A               	movlw	58
  3068  0010C6  60DF               	cpfslt	indf2,c
  3069  0010C8  EF68  F008         	goto	u9681
  3070  0010CC  EF6A  F008         	goto	u9680
  3071  0010D0                     u9681:
  3072  0010D0  EF6C  F008         	goto	l682
  3073  0010D4                     u9680:
  3074  0010D4                     
  3075                           ; BSR set to: 3
  3076                           ;src/print/my_print.c: 153:        j++;
  3077  0010D4  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  3078  0010D6  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  3079  0010D8                     l682:
  3080                           
  3081                           ; BSR set to: 3
  3082                           ;src/print/my_print.c: 154:      }
  3083  0010D8  4BE4               	infsnz	my_vprintf@i& (0+255),f,b
  3084  0010DA  2BE5               	incf	(my_vprintf@i+1)& (0+255),f,b
  3085  0010DC                     l8325:
  3086                           
  3087                           ; BSR set to: 3
  3088  0010DC  0E90               	movlw	low my_vprintf@buffer
  3089  0010DE  6E04               	movwf	strlen@s^0,c
  3090  0010E0  0E03               	movlw	high my_vprintf@buffer
  3091  0010E2  6E05               	movwf	(strlen@s+1)^0,c
  3092  0010E4  ECD7  F029         	call	_strlen	;wreg free
  3093  0010E8  5004               	movf	?_strlen^0,w,c
  3094  0010EA  0103               	movlb	3	; () banked
  3095  0010EC  5DE4               	subwf	my_vprintf@i& (0+255),w,b
  3096  0010EE  5005               	movf	(?_strlen+1)^0,w,c
  3097  0010F0  59E5               	subwfb	(my_vprintf@i+1)& (0+255),w,b
  3098  0010F2  A0D8               	btfss	status,0,c
  3099  0010F4  EF7E  F008         	goto	u9691
  3100  0010F8  EF80  F008         	goto	u9690
  3101  0010FC                     u9691:
  3102  0010FC  EF3D  F008         	goto	l8315
  3103  001100                     u9690:
  3104  001100                     l8327:
  3105                           
  3106                           ; BSR set to: 3
  3107                           ;src/print/my_print.c: 155:      if (prec == -1)
  3108  001100  29E8               	incf	my_vprintf@prec& (0+255),w,b
  3109  001102  E106               	bnz	u9701
  3110  001104  29E9               	incf	(my_vprintf@prec+1)& (0+255),w,b
  3111  001106  A4D8               	btfss	status,2,c
  3112  001108  EF88  F008         	goto	u9701
  3113  00110C  EF8A  F008         	goto	u9700
  3114  001110                     u9701:
  3115  001110  EF8E  F008         	goto	l8331
  3116  001114                     u9700:
  3117  001114                     
  3118                           ; BSR set to: 3
  3119                           ;src/print/my_print.c: 156:       prec = 6;
  3120  001114  0E00               	movlw	0
  3121  001116  6FE9               	movwf	(my_vprintf@prec+1)& (0+255),b
  3122  001118  0E06               	movlw	6
  3123  00111A  6FE8               	movwf	my_vprintf@prec& (0+255),b
  3124  00111C                     l8331:
  3125                           
  3126                           ; BSR set to: 3
  3127                           ;src/print/my_print.c: 157:      if (expA <= -4 || j > prec)
  3128  00111C  AFD7               	btfss	(my_vprintf@expA+1)& (0+255),7,b
  3129  00111E  EF9C  F008         	goto	u9710
  3130  001122  0EFD               	movlw	253
  3131  001124  5DD6               	subwf	my_vprintf@expA& (0+255),w,b
  3132  001126  0EFF               	movlw	255
  3133  001128  59D7               	subwfb	(my_vprintf@expA+1)& (0+255),w,b
  3134  00112A  A0D8               	btfss	status,0,c
  3135  00112C  EF9A  F008         	goto	u9711
  3136  001130  EF9C  F008         	goto	u9710
  3137  001134                     u9711:
  3138  001134  EFAB  F008         	goto	l8335
  3139  001138                     u9710:
  3140  001138                     
  3141                           ; BSR set to: 3
  3142  001138  51DC               	movf	my_vprintf@j& (0+255),w,b
  3143  00113A  5DE8               	subwf	my_vprintf@prec& (0+255),w,b
  3144  00113C  51E9               	movf	(my_vprintf@prec+1)& (0+255),w,b
  3145  00113E  0A80               	xorlw	128
  3146  001140  6E36               	movwf	??_my_vprintf^0,c
  3147  001142  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  3148  001144  0A80               	xorlw	128
  3149  001146  5836               	subwfb	??_my_vprintf^0,w,c
  3150  001148  B0D8               	btfsc	status,0,c
  3151  00114A  EFA9  F008         	goto	u9721
  3152  00114E  EFAB  F008         	goto	u9720
  3153  001152                     u9721:
  3154  001152  EFBA  F008         	goto	l8337
  3155  001156                     u9720:
  3156  001156                     l8335:
  3157                           
  3158                           ; BSR set to: 3
  3159                           ;src/print/my_print.c: 158:       ftoa_sci(buffer, double_temp);
  3160  001156  0E90               	movlw	low my_vprintf@buffer
  3161  001158  0100               	movlb	0	; () banked
  3162  00115A  6FDB               	movwf	ftoa_sci@buffer& (0+255),b
  3163  00115C  0E03               	movlw	high my_vprintf@buffer
  3164  00115E  6FDC               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3165  001160  C3E0  F0DD         	movff	my_vprintf@double_temp,ftoa_sci@value
  3166  001164  C3E1  F0DE         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  3167  001168  C3E2  F0DF         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  3168  00116C  C3E3  F0E0         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  3169  001170  EC35  F016         	call	_ftoa_sci	;wreg free
  3170  001174                     l8337:
  3171                           
  3172                           ;src/print/my_print.c: 159:      precG(buffer, &prec);
  3173  001174  0E90               	movlw	low my_vprintf@buffer
  3174  001176  6E1F               	movwf	precG@str^0,c
  3175  001178  0E03               	movlw	high my_vprintf@buffer
  3176  00117A  6E20               	movwf	(precG@str+1)^0,c
  3177  00117C  0EE8               	movlw	low my_vprintf@prec
  3178  00117E  6E21               	movwf	precG@precision^0,c
  3179  001180  0E03               	movlw	high my_vprintf@prec
  3180  001182  6E22               	movwf	(precG@precision+1)^0,c
  3181  001184  EC33  F00A         	call	_precG	;wreg free
  3182  001188  EF8D  F007         	goto	l8279
  3183  00118C                     l8341:
  3184                           
  3185                           ; BSR set to: 3
  3186                           ;src/print/my_print.c: 163:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  3187  00118C  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  3188  001190  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  3189  001194  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  3190  001198  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  3191  00119C  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  3192  0011A0  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  3193  0011A4                     
  3194                           ; BSR set to: 3
  3195  0011A4  0E04               	movlw	4
  3196  0011A6  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  3197  0011A8  0E00               	movlw	0
  3198  0011AA  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  3199  0011AC                     
  3200                           ; BSR set to: 3
  3201                           ;src/print/my_print.c: 164:      expA = ftoa_sci(buffer, double_temp);
  3202  0011AC  0E90               	movlw	low my_vprintf@buffer
  3203  0011AE  0100               	movlb	0	; () banked
  3204  0011B0  6FDB               	movwf	ftoa_sci@buffer& (0+255),b
  3205  0011B2  0E03               	movlw	high my_vprintf@buffer
  3206  0011B4  6FDC               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3207  0011B6  C3E0  F0DD         	movff	my_vprintf@double_temp,ftoa_sci@value
  3208  0011BA  C3E1  F0DE         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  3209  0011BE  C3E2  F0DF         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  3210  0011C2  C3E3  F0E0         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  3211  0011C6  EC35  F016         	call	_ftoa_sci	;wreg free
  3212  0011CA  C0DB  F3D6         	movff	?_ftoa_sci,my_vprintf@expA
  3213  0011CE  C0DC  F3D7         	movff	?_ftoa_sci+1,my_vprintf@expA+1
  3214  0011D2                     
  3215                           ;src/print/my_print.c: 165:      ftoa(buffer, double_temp);
  3216  0011D2  0E90               	movlw	low my_vprintf@buffer
  3217  0011D4  6E27               	movwf	ftoa@buffer^0,c
  3218  0011D6  0E03               	movlw	high my_vprintf@buffer
  3219  0011D8  6E28               	movwf	(ftoa@buffer+1)^0,c
  3220  0011DA  C3E0  F029         	movff	my_vprintf@double_temp,ftoa@value
  3221  0011DE  C3E1  F02A         	movff	my_vprintf@double_temp+1,ftoa@value+1
  3222  0011E2  C3E2  F02B         	movff	my_vprintf@double_temp+2,ftoa@value+2
  3223  0011E6  C3E3  F02C         	movff	my_vprintf@double_temp+3,ftoa@value+3
  3224  0011EA  EC21  F013         	call	_ftoa	;wreg free
  3225  0011EE                     
  3226                           ;src/print/my_print.c: 166:      j=0;
  3227  0011EE  0E00               	movlw	0
  3228  0011F0  0103               	movlb	3	; () banked
  3229  0011F2  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  3230  0011F4  0E00               	movlw	0
  3231  0011F6  6FDC               	movwf	my_vprintf@j& (0+255),b
  3232  0011F8                     
  3233                           ; BSR set to: 3
  3234                           ;src/print/my_print.c: 167:      for (i=0;i<strlen(buffer);i++)
  3235  0011F8  0E00               	movlw	0
  3236  0011FA  6FE5               	movwf	(my_vprintf@i+1)& (0+255),b
  3237  0011FC  0E00               	movlw	0
  3238  0011FE  6FE4               	movwf	my_vprintf@i& (0+255),b
  3239  001200  EF33  F009         	goto	l8363
  3240  001204                     l8353:
  3241                           
  3242                           ; BSR set to: 3
  3243                           ;src/print/my_print.c: 168:      {;src/print/my_print.c: 169:       if (buffer[i]=='.')
  3244  001204  0E90               	movlw	low my_vprintf@buffer
  3245  001206  25E4               	addwf	my_vprintf@i& (0+255),w,b
  3246  001208  6ED9               	movwf	fsr2l,c
  3247  00120A  0E03               	movlw	high my_vprintf@buffer
  3248  00120C  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  3249  00120E  6EDA               	movwf	fsr2h,c
  3250  001210  0E2E               	movlw	46
  3251  001212  18DE               	xorwf	postinc2,w,c
  3252  001214  A4D8               	btfss	status,2,c
  3253  001216  EF0F  F009         	goto	u9731
  3254  00121A  EF11  F009         	goto	u9730
  3255  00121E                     u9731:
  3256  00121E  EF13  F009         	goto	l8357
  3257  001222                     u9730:
  3258  001222  EF45  F009         	goto	l8365
  3259  001226                     l8357:
  3260                           
  3261                           ; BSR set to: 3
  3262                           ;src/print/my_print.c: 172:       if (buffer[i]>=48 && buffer[i]<=57)
  3263  001226  0E90               	movlw	low my_vprintf@buffer
  3264  001228  25E4               	addwf	my_vprintf@i& (0+255),w,b
  3265  00122A  6ED9               	movwf	fsr2l,c
  3266  00122C  0E03               	movlw	high my_vprintf@buffer
  3267  00122E  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  3268  001230  6EDA               	movwf	fsr2h,c
  3269  001232  0E2F               	movlw	47
  3270  001234  64DF               	cpfsgt	indf2,c
  3271  001236  EF1F  F009         	goto	u9741
  3272  00123A  EF21  F009         	goto	u9740
  3273  00123E                     u9741:
  3274  00123E  EF31  F009         	goto	l692
  3275  001242                     u9740:
  3276  001242                     
  3277                           ; BSR set to: 3
  3278  001242  0E90               	movlw	low my_vprintf@buffer
  3279  001244  25E4               	addwf	my_vprintf@i& (0+255),w,b
  3280  001246  6ED9               	movwf	fsr2l,c
  3281  001248  0E03               	movlw	high my_vprintf@buffer
  3282  00124A  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  3283  00124C  6EDA               	movwf	fsr2h,c
  3284  00124E  0E3A               	movlw	58
  3285  001250  60DF               	cpfslt	indf2,c
  3286  001252  EF2D  F009         	goto	u9751
  3287  001256  EF2F  F009         	goto	u9750
  3288  00125A                     u9751:
  3289  00125A  EF31  F009         	goto	l692
  3290  00125E                     u9750:
  3291  00125E                     
  3292                           ; BSR set to: 3
  3293                           ;src/print/my_print.c: 173:        j++;
  3294  00125E  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  3295  001260  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  3296  001262                     l692:
  3297                           
  3298                           ; BSR set to: 3
  3299                           ;src/print/my_print.c: 174:      }
  3300  001262  4BE4               	infsnz	my_vprintf@i& (0+255),f,b
  3301  001264  2BE5               	incf	(my_vprintf@i+1)& (0+255),f,b
  3302  001266                     l8363:
  3303                           
  3304                           ; BSR set to: 3
  3305  001266  0E90               	movlw	low my_vprintf@buffer
  3306  001268  6E04               	movwf	strlen@s^0,c
  3307  00126A  0E03               	movlw	high my_vprintf@buffer
  3308  00126C  6E05               	movwf	(strlen@s+1)^0,c
  3309  00126E  ECD7  F029         	call	_strlen	;wreg free
  3310  001272  5004               	movf	?_strlen^0,w,c
  3311  001274  0103               	movlb	3	; () banked
  3312  001276  5DE4               	subwf	my_vprintf@i& (0+255),w,b
  3313  001278  5005               	movf	(?_strlen+1)^0,w,c
  3314  00127A  59E5               	subwfb	(my_vprintf@i+1)& (0+255),w,b
  3315  00127C  A0D8               	btfss	status,0,c
  3316  00127E  EF43  F009         	goto	u9761
  3317  001282  EF45  F009         	goto	u9760
  3318  001286                     u9761:
  3319  001286  EF02  F009         	goto	l8353
  3320  00128A                     u9760:
  3321  00128A                     l8365:
  3322                           
  3323                           ; BSR set to: 3
  3324                           ;src/print/my_print.c: 175:      if (prec == -1)
  3325  00128A  29E8               	incf	my_vprintf@prec& (0+255),w,b
  3326  00128C  E106               	bnz	u9771
  3327  00128E  29E9               	incf	(my_vprintf@prec+1)& (0+255),w,b
  3328  001290  A4D8               	btfss	status,2,c
  3329  001292  EF4D  F009         	goto	u9771
  3330  001296  EF4F  F009         	goto	u9770
  3331  00129A                     u9771:
  3332  00129A  EF53  F009         	goto	l8369
  3333  00129E                     u9770:
  3334  00129E                     
  3335                           ; BSR set to: 3
  3336                           ;src/print/my_print.c: 176:       prec = 6;
  3337  00129E  0E00               	movlw	0
  3338  0012A0  6FE9               	movwf	(my_vprintf@prec+1)& (0+255),b
  3339  0012A2  0E06               	movlw	6
  3340  0012A4  6FE8               	movwf	my_vprintf@prec& (0+255),b
  3341  0012A6                     l8369:
  3342                           
  3343                           ; BSR set to: 3
  3344                           ;src/print/my_print.c: 177:      if (expA <= -4 || j > prec)
  3345  0012A6  AFD7               	btfss	(my_vprintf@expA+1)& (0+255),7,b
  3346  0012A8  EF61  F009         	goto	u9780
  3347  0012AC  0EFD               	movlw	253
  3348  0012AE  5DD6               	subwf	my_vprintf@expA& (0+255),w,b
  3349  0012B0  0EFF               	movlw	255
  3350  0012B2  59D7               	subwfb	(my_vprintf@expA+1)& (0+255),w,b
  3351  0012B4  A0D8               	btfss	status,0,c
  3352  0012B6  EF5F  F009         	goto	u9781
  3353  0012BA  EF61  F009         	goto	u9780
  3354  0012BE                     u9781:
  3355  0012BE  EF70  F009         	goto	l8373
  3356  0012C2                     u9780:
  3357  0012C2                     
  3358                           ; BSR set to: 3
  3359  0012C2  51DC               	movf	my_vprintf@j& (0+255),w,b
  3360  0012C4  5DE8               	subwf	my_vprintf@prec& (0+255),w,b
  3361  0012C6  51E9               	movf	(my_vprintf@prec+1)& (0+255),w,b
  3362  0012C8  0A80               	xorlw	128
  3363  0012CA  6E36               	movwf	??_my_vprintf^0,c
  3364  0012CC  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  3365  0012CE  0A80               	xorlw	128
  3366  0012D0  5836               	subwfb	??_my_vprintf^0,w,c
  3367  0012D2  B0D8               	btfsc	status,0,c
  3368  0012D4  EF6E  F009         	goto	u9791
  3369  0012D8  EF70  F009         	goto	u9790
  3370  0012DC                     u9791:
  3371  0012DC  EF7F  F009         	goto	l8375
  3372  0012E0                     u9790:
  3373  0012E0                     l8373:
  3374                           
  3375                           ; BSR set to: 3
  3376                           ;src/print/my_print.c: 178:       ftoa_sci(buffer, double_temp);
  3377  0012E0  0E90               	movlw	low my_vprintf@buffer
  3378  0012E2  0100               	movlb	0	; () banked
  3379  0012E4  6FDB               	movwf	ftoa_sci@buffer& (0+255),b
  3380  0012E6  0E03               	movlw	high my_vprintf@buffer
  3381  0012E8  6FDC               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3382  0012EA  C3E0  F0DD         	movff	my_vprintf@double_temp,ftoa_sci@value
  3383  0012EE  C3E1  F0DE         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  3384  0012F2  C3E2  F0DF         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  3385  0012F6  C3E3  F0E0         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  3386  0012FA  EC35  F016         	call	_ftoa_sci	;wreg free
  3387  0012FE                     l8375:
  3388                           
  3389                           ;src/print/my_print.c: 179:      precG(buffer, &prec);
  3390  0012FE  0E90               	movlw	low my_vprintf@buffer
  3391  001300  6E1F               	movwf	precG@str^0,c
  3392  001302  0E03               	movlw	high my_vprintf@buffer
  3393  001304  6E20               	movwf	(precG@str+1)^0,c
  3394  001306  0EE8               	movlw	low my_vprintf@prec
  3395  001308  6E21               	movwf	precG@precision^0,c
  3396  00130A  0E03               	movlw	high my_vprintf@prec
  3397  00130C  6E22               	movwf	(precG@precision+1)^0,c
  3398  00130E  EC33  F00A         	call	_precG	;wreg free
  3399  001312  EFF1  F007         	goto	l8299
  3400  001316                     l8381:
  3401                           
  3402                           ; BSR set to: 3
  3403                           ;src/print/my_print.c: 184:      strcpy(buffer," ");
  3404  001316  0E90               	movlw	low my_vprintf@buffer
  3405  001318  6E08               	movwf	strcpy@dest^0,c
  3406  00131A  0E03               	movlw	high my_vprintf@buffer
  3407  00131C  6E09               	movwf	(strcpy@dest+1)^0,c
  3408  00131E  0EE2               	movlw	low STR_11
  3409  001320  6E0A               	movwf	strcpy@src^0,c
  3410  001322  0E08               	movlw	high STR_11
  3411  001324  6E0B               	movwf	(strcpy@src+1)^0,c
  3412  001326  EC85  F027         	call	_strcpy	;wreg free
  3413                           
  3414                           ;src/print/my_print.c: 185:      break;
  3415  00132A  EFEB  F009         	goto	l8387
  3416  00132E                     l8383:
  3417                           
  3418                           ; BSR set to: 3
  3419                           ;src/print/my_print.c: 187:      error--;
  3420  00132E  07D4               	decf	my_vprintf@error& (0+255),f,b
  3421  001330  A0D8               	btfss	status,0,c
  3422  001332  07D5               	decf	(my_vprintf@error+1)& (0+255),f,b
  3423                           
  3424                           ;src/print/my_print.c: 188:    }
  3425  001334  EFEB  F009         	goto	l8387
  3426  001338                     l8385:
  3427                           
  3428                           ; BSR set to: 3
  3429  001338  0E84               	movlw	low my_vprintf@format
  3430  00133A  25D8               	addwf	my_vprintf@x& (0+255),w,b
  3431  00133C  6ED9               	movwf	fsr2l,c
  3432  00133E  0E03               	movlw	high my_vprintf@format
  3433  001340  21D9               	addwfc	(my_vprintf@x+1)& (0+255),w,b
  3434  001342  6EDA               	movwf	fsr2h,c
  3435  001344  50DF               	movf	indf2,w,c
  3436  001346  6E36               	movwf	??_my_vprintf^0,c
  3437  001348  6A37               	clrf	(??_my_vprintf+1)^0,c
  3438                           
  3439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3440                           ; Switch size 1, requested type "simple"
  3441                           ; Number of cases is 1, Range of values is 0 to 0
  3442                           ; switch strategies available:
  3443                           ; Name         Instructions Cycles
  3444                           ; simple_byte            4     3 (average)
  3445                           ;	Chosen strategy is simple_byte
  3446  00134A  5037               	movf	(??_my_vprintf+1)^0,w,c
  3447  00134C  0A00               	xorlw	0	; case 0
  3448  00134E  B4D8               	btfsc	status,2,c
  3449  001350  EFAC  F009         	goto	l8655
  3450  001354  EF97  F009         	goto	l8383
  3451  001358                     l8655:
  3452                           
  3453                           ; BSR set to: 3
  3454                           ; Switch size 1, requested type "simple"
  3455                           ; Number of cases is 15, Range of values is 37 to 120
  3456                           ; switch strategies available:
  3457                           ; Name         Instructions Cycles
  3458                           ; simple_byte           46    24 (average)
  3459                           ;	Chosen strategy is simple_byte
  3460  001358  5036               	movf	??_my_vprintf^0,w,c
  3461  00135A  0A25               	xorlw	37	; case 37
  3462  00135C  B4D8               	btfsc	status,2,c
  3463  00135E  EFBE  F005         	goto	l8195
  3464  001362  0A60               	xorlw	96	; case 69
  3465  001364  B4D8               	btfsc	status,2,c
  3466  001366  EFC8  F007         	goto	l8291
  3467  00136A  0A02               	xorlw	2	; case 71
  3468  00136C  B4D8               	btfsc	status,2,c
  3469  00136E  EFC6  F008         	goto	l8341
  3470  001372  0A1F               	xorlw	31	; case 88
  3471  001374  B4D8               	btfsc	status,2,c
  3472  001376  EFB7  F006         	goto	l8239
  3473  00137A  0A3B               	xorlw	59	; case 99
  3474  00137C  B4D8               	btfsc	status,2,c
  3475  00137E  EFCA  F005         	goto	l8197
  3476  001382  0A07               	xorlw	7	; case 100
  3477  001384  B4D8               	btfsc	status,2,c
  3478  001386  EF02  F006         	goto	l8211
  3479  00138A  0A01               	xorlw	1	; case 101
  3480  00138C  B4D8               	btfsc	status,2,c
  3481  00138E  EF9D  F007         	goto	l8281
  3482  001392  0A03               	xorlw	3	; case 102
  3483  001394  B4D8               	btfsc	status,2,c
  3484  001396  EF65  F007         	goto	l8271
  3485  00139A  0A01               	xorlw	1	; case 103
  3486  00139C  B4D8               	btfsc	status,2,c
  3487  00139E  EF01  F008         	goto	l8303
  3488  0013A2  0A0E               	xorlw	14	; case 105
  3489  0013A4  B4D8               	btfsc	status,2,c
  3490  0013A6  EF48  F006         	goto	l8221
  3491  0013AA  0A07               	xorlw	7	; case 110
  3492  0013AC  B4D8               	btfsc	status,2,c
  3493  0013AE  EF8B  F009         	goto	l8381
  3494  0013B2  0A01               	xorlw	1	; case 111
  3495  0013B4  B4D8               	btfsc	status,2,c
  3496  0013B6  EF2D  F007         	goto	l8261
  3497  0013BA  0A1C               	xorlw	28	; case 115
  3498  0013BC  B4D8               	btfsc	status,2,c
  3499  0013BE  EFE0  F005         	goto	l8203
  3500  0013C2  0A06               	xorlw	6	; case 117
  3501  0013C4  B4D8               	btfsc	status,2,c
  3502  0013C6  EF8E  F006         	goto	l8231
  3503  0013CA  0A0D               	xorlw	13	; case 120
  3504  0013CC  B4D8               	btfsc	status,2,c
  3505  0013CE  EFF5  F006         	goto	l8251
  3506  0013D2  EF97  F009         	goto	l8383
  3507  0013D6                     l8387:
  3508                           
  3509                           ;src/print/my_print.c: 189:    setWidth(buffer, &width);
  3510  0013D6  0E90               	movlw	low my_vprintf@buffer
  3511  0013D8  6E08               	movwf	setWidth@str^0,c
  3512  0013DA  0E03               	movlw	high my_vprintf@buffer
  3513  0013DC  6E09               	movwf	(setWidth@str+1)^0,c
  3514  0013DE  0EDA               	movlw	low my_vprintf@width
  3515  0013E0  6E0A               	movwf	setWidth@width^0,c
  3516  0013E2  0E03               	movlw	high my_vprintf@width
  3517  0013E4  6E0B               	movwf	(setWidth@width+1)^0,c
  3518  0013E6  ECCD  F018         	call	_setWidth	;wreg free
  3519  0013EA                     
  3520                           ;src/print/my_print.c: 190:    strcat(string, buffer);
  3521  0013EA  0E00               	movlw	low my_vprintf@string
  3522  0013EC  6E12               	movwf	strcat@dest^0,c
  3523  0013EE  0E03               	movlw	high my_vprintf@string
  3524  0013F0  6E13               	movwf	(strcat@dest+1)^0,c
  3525  0013F2  0E90               	movlw	low my_vprintf@buffer
  3526  0013F4  6E14               	movwf	strcat@src^0,c
  3527  0013F6  0E03               	movlw	high my_vprintf@buffer
  3528  0013F8  6E15               	movwf	(strcat@src+1)^0,c
  3529  0013FA  EC31  F02A         	call	_strcat	;wreg free
  3530  0013FE                     
  3531                           ;src/print/my_print.c: 191:    length += strlen(buffer);
  3532  0013FE  0E90               	movlw	low my_vprintf@buffer
  3533  001400  6E04               	movwf	strlen@s^0,c
  3534  001402  0E03               	movlw	high my_vprintf@buffer
  3535  001404  6E05               	movwf	(strlen@s+1)^0,c
  3536  001406  ECD7  F029         	call	_strlen	;wreg free
  3537  00140A  5004               	movf	?_strlen^0,w,c
  3538  00140C  0103               	movlb	3	; () banked
  3539  00140E  2782               	addwf	my_vprintf@length& (0+255),f,b
  3540  001410  5005               	movf	(?_strlen+1)^0,w,c
  3541  001412  2383               	addwfc	(my_vprintf@length+1)& (0+255),f,b
  3542                           
  3543                           ;src/print/my_print.c: 193:   }
  3544  001414  EF19  F00A         	goto	l8397
  3545  001418                     l8393:
  3546                           
  3547                           ; BSR set to: 3
  3548                           ;src/print/my_print.c: 195:   {;src/print/my_print.c: 196:    strcat(string, ch);
  3549  001418  0E00               	movlw	low my_vprintf@string
  3550  00141A  6E12               	movwf	strcat@dest^0,c
  3551  00141C  0E03               	movlw	high my_vprintf@string
  3552  00141E  6E13               	movwf	(strcat@dest+1)^0,c
  3553  001420  0ED0               	movlw	low my_vprintf@ch
  3554  001422  6E14               	movwf	strcat@src^0,c
  3555  001424  0E03               	movlw	high my_vprintf@ch
  3556  001426  6E15               	movwf	(strcat@src+1)^0,c
  3557  001428  EC31  F02A         	call	_strcat	;wreg free
  3558  00142C                     
  3559                           ;src/print/my_print.c: 197:    length++;
  3560  00142C  0103               	movlb	3	; () banked
  3561  00142E  4B82               	infsnz	my_vprintf@length& (0+255),f,b
  3562  001430  2B83               	incf	(my_vprintf@length+1)& (0+255),f,b
  3563  001432                     l8397:
  3564                           
  3565                           ; BSR set to: 3
  3566                           ;src/print/my_print.c: 34:  while ( (ch[0] = *sformat++)) {
  3567  001432  C0E1  FFF6         	movff	my_vprintf@sformat,tblptrl
  3568  001436  C0E2  FFF7         	movff	my_vprintf@sformat+1,tblptrh
  3569  00143A  0100               	movlb	0	; () banked
  3570  00143C  4BE1               	infsnz	my_vprintf@sformat& (0+255),f,b
  3571  00143E  2BE2               	incf	(my_vprintf@sformat+1)& (0+255),f,b
  3572  001440                     	if	0	;tblptru may be non-zero
  3573  001440                     	endif
  3574  001440                     	if	0	;tblptru may be non-zero
  3575  001440                     	endif
  3576  001440  0008               	tblrd		*
  3577  001442  CFF5 F3D0          	movff	tablat,my_vprintf@ch
  3578  001446  0103               	movlb	3	; () banked
  3579  001448  51D0               	movf	my_vprintf@ch& (0+255),w,b
  3580  00144A  A4D8               	btfss	status,2,c
  3581  00144C  EF2A  F00A         	goto	u9801
  3582  001450  EF2C  F00A         	goto	u9800
  3583  001454                     u9801:
  3584  001454  EF9A  F004         	goto	l8125
  3585  001458                     u9800:
  3586  001458                     
  3587                           ; BSR set to: 3
  3588                           ;src/print/my_print.c: 203:  SERIAL_Write(string);
  3589  001458  0E00               	movlw	low my_vprintf@string
  3590  00145A  6E08               	movwf	SERIAL_Write@str^0,c
  3591  00145C  0E03               	movlw	high my_vprintf@string
  3592  00145E  6E09               	movwf	(SERIAL_Write@str+1)^0,c
  3593  001460  EC14  F029         	call	_SERIAL_Write	;wreg free
  3594  001464  0012               	return		;funcret
  3595  001466                     __end_of_my_vprintf:
  3596                           	opt callstack 0
  3597                           
  3598 ;; *************** function _upperCL *****************
  3599 ;; Defined at:
  3600 ;;		line 103 in file "src/print/format.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  str             2    7[COMRAM] PTR unsigned char 
  3603 ;;		 -> my_vprintf@buffer(64), 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  i               2   10[COMRAM] int 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3615 ;;      Params:         2       0       0       0       0       0       0       0       0
  3616 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3617 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3618 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3619 ;;Total ram usage:        5 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    3
  3622 ;; This function calls:
  3623 ;;		_strlen
  3624 ;; This function is called by:
  3625 ;;		_my_vprintf
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text2
  3630  004C5C                     __ptext2:
  3631                           	opt callstack 0
  3632  004C5C                     _upperCL:
  3633                           	opt callstack 26
  3634  004C5C                     
  3635                           ;src/print/format.c: 104:     int i;;src/print/format.c: 105:     for (i = 0; i <= strle
      +                          n(str);i++) {
  3636  004C5C  0E00               	movlw	0
  3637  004C5E  6E0C               	movwf	(upperCL@i+1)^0,c
  3638  004C60  0E00               	movlw	0
  3639  004C62  6E0B               	movwf	upperCL@i^0,c
  3640  004C64  EF61  F026         	goto	l7487
  3641  004C68                     l7479:
  3642                           
  3643                           ;src/print/format.c: 106:         if((str[i] >= 97) && (str[i] <= 122))
  3644  004C68  500B               	movf	upperCL@i^0,w,c
  3645  004C6A  2408               	addwf	upperCL@str^0,w,c
  3646  004C6C  6ED9               	movwf	fsr2l,c
  3647  004C6E  500C               	movf	(upperCL@i+1)^0,w,c
  3648  004C70  2009               	addwfc	(upperCL@str+1)^0,w,c
  3649  004C72  6EDA               	movwf	fsr2h,c
  3650  004C74  0E60               	movlw	96
  3651  004C76  64DF               	cpfsgt	indf2,c
  3652  004C78  EF40  F026         	goto	u8431
  3653  004C7C  EF42  F026         	goto	u8430
  3654  004C80                     u8431:
  3655  004C80  EF5F  F026         	goto	l7485
  3656  004C84                     u8430:
  3657  004C84  500B               	movf	upperCL@i^0,w,c
  3658  004C86  2408               	addwf	upperCL@str^0,w,c
  3659  004C88  6ED9               	movwf	fsr2l,c
  3660  004C8A  500C               	movf	(upperCL@i+1)^0,w,c
  3661  004C8C  2009               	addwfc	(upperCL@str+1)^0,w,c
  3662  004C8E  6EDA               	movwf	fsr2h,c
  3663  004C90  0E7B               	movlw	123
  3664  004C92  60DF               	cpfslt	indf2,c
  3665  004C94  EF4E  F026         	goto	u8441
  3666  004C98  EF50  F026         	goto	u8440
  3667  004C9C                     u8441:
  3668  004C9C  EF5F  F026         	goto	l7485
  3669  004CA0                     u8440:
  3670  004CA0                     
  3671                           ;src/print/format.c: 107:             str[i] = str[i] - 32;
  3672  004CA0  500B               	movf	upperCL@i^0,w,c
  3673  004CA2  2408               	addwf	upperCL@str^0,w,c
  3674  004CA4  6ED9               	movwf	fsr2l,c
  3675  004CA6  500C               	movf	(upperCL@i+1)^0,w,c
  3676  004CA8  2009               	addwfc	(upperCL@str+1)^0,w,c
  3677  004CAA  6EDA               	movwf	fsr2h,c
  3678  004CAC  500B               	movf	upperCL@i^0,w,c
  3679  004CAE  2408               	addwf	upperCL@str^0,w,c
  3680  004CB0  6EE1               	movwf	fsr1l,c
  3681  004CB2  500C               	movf	(upperCL@i+1)^0,w,c
  3682  004CB4  2009               	addwfc	(upperCL@str+1)^0,w,c
  3683  004CB6  6EE2               	movwf	fsr1h,c
  3684  004CB8  50E7               	movf	indf1,w,c
  3685  004CBA  0FE0               	addlw	224
  3686  004CBC  6EDF               	movwf	indf2,c
  3687  004CBE                     l7485:
  3688                           
  3689                           ;src/print/format.c: 108:     }
  3690  004CBE  4A0B               	infsnz	upperCL@i^0,f,c
  3691  004CC0  2A0C               	incf	(upperCL@i+1)^0,f,c
  3692  004CC2                     l7487:
  3693  004CC2  C008  F004         	movff	upperCL@str,strlen@s
  3694  004CC6  C009  F005         	movff	upperCL@str+1,strlen@s+1
  3695  004CCA  ECD7  F029         	call	_strlen	;wreg free
  3696  004CCE  500B               	movf	upperCL@i^0,w,c
  3697  004CD0  5C04               	subwf	?_strlen^0,w,c
  3698  004CD2  500C               	movf	(upperCL@i+1)^0,w,c
  3699  004CD4  5805               	subwfb	(?_strlen+1)^0,w,c
  3700  004CD6  B0D8               	btfsc	status,0,c
  3701  004CD8  EF70  F026         	goto	u8451
  3702  004CDC  EF72  F026         	goto	u8450
  3703  004CE0                     u8451:
  3704  004CE0  EF34  F026         	goto	l7479
  3705  004CE4                     u8450:
  3706  004CE4  0012               	return		;funcret
  3707  004CE6                     __end_of_upperCL:
  3708                           	opt callstack 0
  3709                           
  3710 ;; *************** function _strcat *****************
  3711 ;; Defined at:
  3712 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  dest            2   17[COMRAM] PTR unsigned char 
  3715 ;;		 -> my_vprintf@string(128), 
  3716 ;;  src             2   19[COMRAM] PTR const unsigned char 
  3717 ;;		 -> my_vprintf@buffer(64), my_vprintf@ch(2), 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  2   17[COMRAM] PTR unsigned char 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3729 ;;      Params:         4       0       0       0       0       0       0       0       0
  3730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3732 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3733 ;;Total ram usage:        4 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    3
  3736 ;; This function calls:
  3737 ;;		_strcpy
  3738 ;;		_strlen
  3739 ;; This function is called by:
  3740 ;;		_my_vprintf
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text3
  3745  005462                     __ptext3:
  3746                           	opt callstack 0
  3747  005462                     _strcat:
  3748                           	opt callstack 26
  3749  005462  C012  F004         	movff	strcat@dest,strlen@s
  3750  005466  C013  F005         	movff	strcat@dest+1,strlen@s+1
  3751  00546A  ECD7  F029         	call	_strlen	;wreg free
  3752  00546E  5004               	movf	?_strlen^0,w,c
  3753  005470  2412               	addwf	strcat@dest^0,w,c
  3754  005472  6E08               	movwf	strcpy@dest^0,c
  3755  005474  5005               	movf	(?_strlen+1)^0,w,c
  3756  005476  2013               	addwfc	(strcat@dest+1)^0,w,c
  3757  005478  6E09               	movwf	(strcpy@dest+1)^0,c
  3758  00547A  C014  F00A         	movff	strcat@src,strcpy@src
  3759  00547E  C015  F00B         	movff	strcat@src+1,strcpy@src+1
  3760  005482  EC85  F027         	call	_strcpy	;wreg free
  3761  005486  0012               	return		;funcret
  3762  005488                     __end_of_strcat:
  3763                           	opt callstack 0
  3764                           
  3765 ;; *************** function _setWidth *****************
  3766 ;; Defined at:
  3767 ;;		line 403 in file "src/print/format.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  str             2    7[COMRAM] PTR unsigned char 
  3770 ;;		 -> my_vprintf@buffer(64), 
  3771 ;;  width           2    9[COMRAM] PTR int 
  3772 ;;		 -> my_vprintf@width(2), 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  j               2   17[COMRAM] int 
  3775 ;;  len             2   15[COMRAM] int 
  3776 ;;  widthDif        2   13[COMRAM] int 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3786 ;;      Params:         4       0       0       0       0       0       0       0       0
  3787 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3788 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3789 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3790 ;;Total ram usage:       12 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    3
  3793 ;; This function calls:
  3794 ;;		_strlen
  3795 ;; This function is called by:
  3796 ;;		_my_vprintf
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text4
  3801  00319A                     __ptext4:
  3802                           	opt callstack 0
  3803  00319A                     _setWidth:
  3804                           	opt callstack 26
  3805  00319A                     
  3806                           ;src/print/format.c: 404:     int j;;src/print/format.c: 405:     int len = strlen(str);
  3807  00319A  C008  F004         	movff	setWidth@str,strlen@s
  3808  00319E  C009  F005         	movff	setWidth@str+1,strlen@s+1
  3809  0031A2  ECD7  F029         	call	_strlen	;wreg free
  3810  0031A6  C004  F010         	movff	?_strlen,setWidth@len
  3811  0031AA  C005  F011         	movff	?_strlen+1,setWidth@len+1
  3812  0031AE                     
  3813                           ;src/print/format.c: 406:     int widthDif;;src/print/format.c: 408:     widthDif = (*wi
      +                          dth) - len;
  3814  0031AE  C00A  FFD9         	movff	setWidth@width,fsr2l
  3815  0031B2  C00B  FFDA         	movff	setWidth@width+1,fsr2h
  3816  0031B6  CFDE F00C          	movff	postinc2,??_setWidth
  3817  0031BA  CFDD F00D          	movff	postdec2,??_setWidth+1
  3818  0031BE  5010               	movf	setWidth@len^0,w,c
  3819  0031C0  5C0C               	subwf	??_setWidth^0,w,c
  3820  0031C2  6E0E               	movwf	setWidth@widthDif^0,c
  3821  0031C4  5011               	movf	(setWidth@len+1)^0,w,c
  3822  0031C6  580D               	subwfb	(??_setWidth+1)^0,w,c
  3823  0031C8  6E0F               	movwf	(setWidth@widthDif+1)^0,c
  3824  0031CA                     
  3825                           ;src/print/format.c: 409:     if (widthDif > 0 && alingL == 1) {
  3826  0031CA  BE0F               	btfsc	(setWidth@widthDif+1)^0,7,c
  3827  0031CC  EFF0  F018         	goto	u9261
  3828  0031D0  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3829  0031D2  E108               	bnz	u9260
  3830  0031D4  040E               	decf	setWidth@widthDif^0,w,c
  3831  0031D6  A0D8               	btfss	status,0,c
  3832  0031D8  EFF0  F018         	goto	u9261
  3833  0031DC  EFF2  F018         	goto	u9260
  3834  0031E0                     u9261:
  3835  0031E0  EF1D  F019         	goto	l7903
  3836  0031E4                     u9260:
  3837  0031E4  043C               	decf	_alingL^0,w,c
  3838  0031E6  A4D8               	btfss	status,2,c
  3839  0031E8  EFF8  F018         	goto	u9271
  3840  0031EC  EFFA  F018         	goto	u9270
  3841  0031F0                     u9271:
  3842  0031F0  EF1D  F019         	goto	l7903
  3843  0031F4                     u9270:
  3844  0031F4                     
  3845                           ;src/print/format.c: 410:         for(j=0; j < widthDif; j++) {
  3846  0031F4  0E00               	movlw	0
  3847  0031F6  6E13               	movwf	(setWidth@j+1)^0,c
  3848  0031F8  0E00               	movlw	0
  3849  0031FA  6E12               	movwf	setWidth@j^0,c
  3850  0031FC  EF0C  F019         	goto	l7901
  3851  003200                     l7895:
  3852                           
  3853                           ;src/print/format.c: 412:             str[len] =' ';
  3854  003200  5010               	movf	setWidth@len^0,w,c
  3855  003202  2408               	addwf	setWidth@str^0,w,c
  3856  003204  6ED9               	movwf	fsr2l,c
  3857  003206  5011               	movf	(setWidth@len+1)^0,w,c
  3858  003208  2009               	addwfc	(setWidth@str+1)^0,w,c
  3859  00320A  6EDA               	movwf	fsr2h,c
  3860  00320C  0E20               	movlw	32
  3861  00320E  6EDF               	movwf	indf2,c
  3862  003210                     
  3863                           ;src/print/format.c: 413:             len++;
  3864  003210  4A10               	infsnz	setWidth@len^0,f,c
  3865  003212  2A11               	incf	(setWidth@len+1)^0,f,c
  3866  003214                     
  3867                           ;src/print/format.c: 414:         }
  3868  003214  4A12               	infsnz	setWidth@j^0,f,c
  3869  003216  2A13               	incf	(setWidth@j+1)^0,f,c
  3870  003218                     l7901:
  3871  003218  500E               	movf	setWidth@widthDif^0,w,c
  3872  00321A  5C12               	subwf	setWidth@j^0,w,c
  3873  00321C  5013               	movf	(setWidth@j+1)^0,w,c
  3874  00321E  0A80               	xorlw	128
  3875  003220  6E0C               	movwf	??_setWidth^0,c
  3876  003222  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3877  003224  0A80               	xorlw	128
  3878  003226  580C               	subwfb	??_setWidth^0,w,c
  3879  003228  A0D8               	btfss	status,0,c
  3880  00322A  EF19  F019         	goto	u9281
  3881  00322E  EF1B  F019         	goto	u9280
  3882  003232                     u9281:
  3883  003232  EF00  F019         	goto	l7895
  3884  003236                     u9280:
  3885  003236  EFE2  F019         	goto	l591
  3886  00323A                     l7903:
  3887  00323A  BE0F               	btfsc	(setWidth@widthDif+1)^0,7,c
  3888  00323C  EF28  F019         	goto	u9291
  3889  003240  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3890  003242  E108               	bnz	u9290
  3891  003244  040E               	decf	setWidth@widthDif^0,w,c
  3892  003246  A0D8               	btfss	status,0,c
  3893  003248  EF28  F019         	goto	u9291
  3894  00324C  EF2A  F019         	goto	u9290
  3895  003250                     u9291:
  3896  003250  EFE2  F019         	goto	l591
  3897  003254                     u9290:
  3898  003254  503C               	movf	_alingL^0,w,c
  3899  003256  A4D8               	btfss	status,2,c
  3900  003258  EF30  F019         	goto	u9301
  3901  00325C  EF32  F019         	goto	u9300
  3902  003260                     u9301:
  3903  003260  EFE2  F019         	goto	l591
  3904  003264                     u9300:
  3905  003264                     
  3906                           ;src/print/format.c: 417:         for(j = (*width)-1; j >= 0; j--) {
  3907  003264  C00A  FFD9         	movff	setWidth@width,fsr2l
  3908  003268  C00B  FFDA         	movff	setWidth@width+1,fsr2h
  3909  00326C  CFDE F00C          	movff	postinc2,??_setWidth
  3910  003270  CFDD F00D          	movff	postdec2,??_setWidth+1
  3911  003274  0EFF               	movlw	255
  3912  003276  240C               	addwf	??_setWidth^0,w,c
  3913  003278  6E12               	movwf	setWidth@j^0,c
  3914  00327A  0EFF               	movlw	255
  3915  00327C  200D               	addwfc	(??_setWidth+1)^0,w,c
  3916  00327E  6E13               	movwf	(setWidth@j+1)^0,c
  3917  003280                     l7909:
  3918  003280  BE13               	btfsc	(setWidth@j+1)^0,7,c
  3919  003282  EF47  F019         	goto	u9310
  3920  003286  EF45  F019         	goto	u9311
  3921  00328A                     u9311:
  3922  00328A  EF49  F019         	goto	l7913
  3923  00328E                     u9310:
  3924  00328E  EFE2  F019         	goto	l591
  3925  003292                     l7913:
  3926                           
  3927                           ;src/print/format.c: 418:             len--;
  3928  003292  0610               	decf	setWidth@len^0,f,c
  3929  003294  A0D8               	btfss	status,0,c
  3930  003296  0611               	decf	(setWidth@len+1)^0,f,c
  3931  003298                     
  3932                           ;src/print/format.c: 419:             if (zeros == 1 && precInt == 0) {
  3933  003298  0100               	movlb	0	; () banked
  3934  00329A  05D0               	decf	_zeros& (0+255),w,b
  3935  00329C  A4D8               	btfss	status,2,c
  3936  00329E  EF53  F019         	goto	u9321
  3937  0032A2  EF55  F019         	goto	u9320
  3938  0032A6                     u9321:
  3939  0032A6  EFC4  F019         	goto	l7935
  3940  0032AA                     u9320:
  3941  0032AA                     
  3942                           ; BSR set to: 0
  3943  0032AA  51CF               	movf	_precInt& (0+255),w,b
  3944  0032AC  A4D8               	btfss	status,2,c
  3945  0032AE  EF5B  F019         	goto	u9331
  3946  0032B2  EF5D  F019         	goto	u9330
  3947  0032B6                     u9331:
  3948  0032B6  EFC4  F019         	goto	l7935
  3949  0032BA                     u9330:
  3950  0032BA                     
  3951                           ; BSR set to: 0
  3952                           ;src/print/format.c: 420:                 if (j >= widthDif) {
  3953  0032BA  500E               	movf	setWidth@widthDif^0,w,c
  3954  0032BC  5C12               	subwf	setWidth@j^0,w,c
  3955  0032BE  5013               	movf	(setWidth@j+1)^0,w,c
  3956  0032C0  0A80               	xorlw	128
  3957  0032C2  6E0C               	movwf	??_setWidth^0,c
  3958  0032C4  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3959  0032C6  0A80               	xorlw	128
  3960  0032C8  580C               	subwfb	??_setWidth^0,w,c
  3961  0032CA  A0D8               	btfss	status,0,c
  3962  0032CC  EF6A  F019         	goto	u9341
  3963  0032D0  EF6C  F019         	goto	u9340
  3964  0032D4                     u9341:
  3965  0032D4  EFA4  F019         	goto	l7929
  3966  0032D8                     u9340:
  3967  0032D8                     
  3968                           ; BSR set to: 0
  3969                           ;src/print/format.c: 421:                     if (str[len] == '+' || str[len] == '-')
  3970  0032D8  5010               	movf	setWidth@len^0,w,c
  3971  0032DA  2408               	addwf	setWidth@str^0,w,c
  3972  0032DC  6ED9               	movwf	fsr2l,c
  3973  0032DE  5011               	movf	(setWidth@len+1)^0,w,c
  3974  0032E0  2009               	addwfc	(setWidth@str+1)^0,w,c
  3975  0032E2  6EDA               	movwf	fsr2h,c
  3976  0032E4  0E2B               	movlw	43
  3977  0032E6  18DE               	xorwf	postinc2,w,c
  3978  0032E8  B4D8               	btfsc	status,2,c
  3979  0032EA  EF79  F019         	goto	u9351
  3980  0032EE  EF7B  F019         	goto	u9350
  3981  0032F2                     u9351:
  3982  0032F2  EF8A  F019         	goto	l7925
  3983  0032F6                     u9350:
  3984  0032F6                     
  3985                           ; BSR set to: 0
  3986  0032F6  5010               	movf	setWidth@len^0,w,c
  3987  0032F8  2408               	addwf	setWidth@str^0,w,c
  3988  0032FA  6ED9               	movwf	fsr2l,c
  3989  0032FC  5011               	movf	(setWidth@len+1)^0,w,c
  3990  0032FE  2009               	addwfc	(setWidth@str+1)^0,w,c
  3991  003300  6EDA               	movwf	fsr2h,c
  3992  003302  0E2D               	movlw	45
  3993  003304  18DE               	xorwf	postinc2,w,c
  3994  003306  A4D8               	btfss	status,2,c
  3995  003308  EF88  F019         	goto	u9361
  3996  00330C  EF8A  F019         	goto	u9360
  3997  003310                     u9361:
  3998  003310  EF94  F019         	goto	l7927
  3999  003314                     u9360:
  4000  003314                     l7925:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;src/print/format.c: 422:                         str [j] = '0';
  4004  003314  5012               	movf	setWidth@j^0,w,c
  4005  003316  2408               	addwf	setWidth@str^0,w,c
  4006  003318  6ED9               	movwf	fsr2l,c
  4007  00331A  5013               	movf	(setWidth@j+1)^0,w,c
  4008  00331C  2009               	addwfc	(setWidth@str+1)^0,w,c
  4009  00331E  6EDA               	movwf	fsr2h,c
  4010  003320  0E30               	movlw	48
  4011  003322  6EDF               	movwf	indf2,c
  4012  003324  EFDD  F019         	goto	l7941
  4013  003328                     l7927:
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;src/print/format.c: 424:                         str[j] = str[len];
  4017  003328  5010               	movf	setWidth@len^0,w,c
  4018  00332A  2408               	addwf	setWidth@str^0,w,c
  4019  00332C  6ED9               	movwf	fsr2l,c
  4020  00332E  5011               	movf	(setWidth@len+1)^0,w,c
  4021  003330  2009               	addwfc	(setWidth@str+1)^0,w,c
  4022  003332  6EDA               	movwf	fsr2h,c
  4023  003334  5012               	movf	setWidth@j^0,w,c
  4024  003336  2408               	addwf	setWidth@str^0,w,c
  4025  003338  6EE1               	movwf	fsr1l,c
  4026  00333A  5013               	movf	(setWidth@j+1)^0,w,c
  4027  00333C  2009               	addwfc	(setWidth@str+1)^0,w,c
  4028  00333E  6EE2               	movwf	fsr1h,c
  4029  003340  CFDF FFE7          	movff	indf2,indf1
  4030  003344  EFDD  F019         	goto	l7941
  4031  003348                     l7929:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;src/print/format.c: 427:                     if (str[j] != '+' && str [j] != '-')
  4035  003348  5012               	movf	setWidth@j^0,w,c
  4036  00334A  2408               	addwf	setWidth@str^0,w,c
  4037  00334C  6ED9               	movwf	fsr2l,c
  4038  00334E  5013               	movf	(setWidth@j+1)^0,w,c
  4039  003350  2009               	addwfc	(setWidth@str+1)^0,w,c
  4040  003352  6EDA               	movwf	fsr2h,c
  4041  003354  0E2B               	movlw	43
  4042  003356  18DE               	xorwf	postinc2,w,c
  4043  003358  B4D8               	btfsc	status,2,c
  4044  00335A  EFB1  F019         	goto	u9371
  4045  00335E  EFB3  F019         	goto	u9370
  4046  003362                     u9371:
  4047  003362  EFDD  F019         	goto	l7941
  4048  003366                     u9370:
  4049  003366                     
  4050                           ; BSR set to: 0
  4051  003366  5012               	movf	setWidth@j^0,w,c
  4052  003368  2408               	addwf	setWidth@str^0,w,c
  4053  00336A  6ED9               	movwf	fsr2l,c
  4054  00336C  5013               	movf	(setWidth@j+1)^0,w,c
  4055  00336E  2009               	addwfc	(setWidth@str+1)^0,w,c
  4056  003370  6EDA               	movwf	fsr2h,c
  4057  003372  0E2D               	movlw	45
  4058  003374  18DE               	xorwf	postinc2,w,c
  4059  003376  B4D8               	btfsc	status,2,c
  4060  003378  EFC0  F019         	goto	u9381
  4061  00337C  EFC2  F019         	goto	u9380
  4062  003380                     u9381:
  4063  003380  EFDD  F019         	goto	l7941
  4064  003384                     u9380:
  4065  003384  EF8A  F019         	goto	l7925
  4066  003388                     l7935:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;src/print/format.c: 432:                 if (j >= widthDif)
  4070  003388  500E               	movf	setWidth@widthDif^0,w,c
  4071  00338A  5C12               	subwf	setWidth@j^0,w,c
  4072  00338C  5013               	movf	(setWidth@j+1)^0,w,c
  4073  00338E  0A80               	xorlw	128
  4074  003390  6E0C               	movwf	??_setWidth^0,c
  4075  003392  500F               	movf	(setWidth@widthDif+1)^0,w,c
  4076  003394  0A80               	xorlw	128
  4077  003396  580C               	subwfb	??_setWidth^0,w,c
  4078  003398  A0D8               	btfss	status,0,c
  4079  00339A  EFD1  F019         	goto	u9391
  4080  00339E  EFD3  F019         	goto	u9390
  4081  0033A2                     u9391:
  4082  0033A2  EFD5  F019         	goto	l7939
  4083  0033A6                     u9390:
  4084  0033A6  EF94  F019         	goto	l7927
  4085  0033AA                     l7939:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;src/print/format.c: 435:                     str[j] =' ';
  4089  0033AA  5012               	movf	setWidth@j^0,w,c
  4090  0033AC  2408               	addwf	setWidth@str^0,w,c
  4091  0033AE  6ED9               	movwf	fsr2l,c
  4092  0033B0  5013               	movf	(setWidth@j+1)^0,w,c
  4093  0033B2  2009               	addwfc	(setWidth@str+1)^0,w,c
  4094  0033B4  6EDA               	movwf	fsr2h,c
  4095  0033B6  0E20               	movlw	32
  4096  0033B8  6EDF               	movwf	indf2,c
  4097  0033BA                     l7941:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;src/print/format.c: 437:         }
  4101  0033BA  0612               	decf	setWidth@j^0,f,c
  4102  0033BC  A0D8               	btfss	status,0,c
  4103  0033BE  0613               	decf	(setWidth@j+1)^0,f,c
  4104  0033C0  EF40  F019         	goto	l7909
  4105  0033C4                     l591:
  4106  0033C4  0012               	return		;funcret
  4107  0033C6                     __end_of_setWidth:
  4108                           	opt callstack 0
  4109                           
  4110 ;; *************** function _precS *****************
  4111 ;; Defined at:
  4112 ;;		line 348 in file "src/print/format.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  str             2    7[COMRAM] PTR unsigned char 
  4115 ;;		 -> my_vprintf@buffer(64), 
  4116 ;;  precision       2    9[COMRAM] PTR int 
  4117 ;;		 -> my_vprintf@prec(2), 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  i               2   15[COMRAM] int 
  4120 ;;  len             2   13[COMRAM] int 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4130 ;;      Params:         4       0       0       0       0       0       0       0       0
  4131 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4132 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4133 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4134 ;;Total ram usage:       10 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    3
  4137 ;; This function calls:
  4138 ;;		_strlen
  4139 ;; This function is called by:
  4140 ;;		_my_vprintf
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text5
  4145  004D68                     __ptext5:
  4146                           	opt callstack 0
  4147  004D68                     _precS:
  4148                           	opt callstack 26
  4149  004D68                     
  4150                           ;src/print/format.c: 349:     int i;;src/print/format.c: 350:     int len = strlen(str);
  4151  004D68  C008  F004         	movff	precS@str,strlen@s
  4152  004D6C  C009  F005         	movff	precS@str+1,strlen@s+1
  4153  004D70  ECD7  F029         	call	_strlen	;wreg free
  4154  004D74  C004  F00E         	movff	?_strlen,precS@len
  4155  004D78  C005  F00F         	movff	?_strlen+1,precS@len+1
  4156  004D7C                     
  4157                           ;src/print/format.c: 352:     if ((*precision) != -1) {
  4158  004D7C  C00A  FFD9         	movff	precS@precision,fsr2l
  4159  004D80  C00B  FFDA         	movff	precS@precision+1,fsr2h
  4160  004D84  28DE               	incf	postinc2,w,c
  4161  004D86  E108               	bnz	u9090
  4162  004D88  28DE               	incf	postinc2,w,c
  4163  004D8A  B4D8               	btfsc	status,2,c
  4164  004D8C  EFCA  F026         	goto	u9091
  4165  004D90  EFCC  F026         	goto	u9090
  4166  004D94                     u9091:
  4167  004D94  EFEF  F026         	goto	l545
  4168  004D98                     u9090:
  4169  004D98                     
  4170                           ;src/print/format.c: 353:         for (i = (*precision); i < len;i++)
  4171  004D98  C00A  FFD9         	movff	precS@precision,fsr2l
  4172  004D9C  C00B  FFDA         	movff	precS@precision+1,fsr2h
  4173  004DA0  CFDE F010          	movff	postinc2,precS@i
  4174  004DA4  CFDD F011          	movff	postdec2,precS@i+1
  4175  004DA8  EFE0  F026         	goto	l7803
  4176  004DAC                     l7799:
  4177                           
  4178                           ;src/print/format.c: 354:             str[i] = 0;
  4179  004DAC  5010               	movf	precS@i^0,w,c
  4180  004DAE  2408               	addwf	precS@str^0,w,c
  4181  004DB0  6ED9               	movwf	fsr2l,c
  4182  004DB2  5011               	movf	(precS@i+1)^0,w,c
  4183  004DB4  2009               	addwfc	(precS@str+1)^0,w,c
  4184  004DB6  6EDA               	movwf	fsr2h,c
  4185  004DB8  0E00               	movlw	0
  4186  004DBA  6EDF               	movwf	indf2,c
  4187  004DBC  4A10               	infsnz	precS@i^0,f,c
  4188  004DBE  2A11               	incf	(precS@i+1)^0,f,c
  4189  004DC0                     l7803:
  4190  004DC0  500E               	movf	precS@len^0,w,c
  4191  004DC2  5C10               	subwf	precS@i^0,w,c
  4192  004DC4  5011               	movf	(precS@i+1)^0,w,c
  4193  004DC6  0A80               	xorlw	128
  4194  004DC8  6E0C               	movwf	??_precS^0,c
  4195  004DCA  500F               	movf	(precS@len+1)^0,w,c
  4196  004DCC  0A80               	xorlw	128
  4197  004DCE  580C               	subwfb	??_precS^0,w,c
  4198  004DD0  A0D8               	btfss	status,0,c
  4199  004DD2  EFED  F026         	goto	u9101
  4200  004DD6  EFEF  F026         	goto	u9100
  4201  004DDA                     u9101:
  4202  004DDA  EFD6  F026         	goto	l7799
  4203  004DDE                     u9100:
  4204  004DDE                     l545:
  4205  004DDE  0012               	return		;funcret
  4206  004DE0                     __end_of_precS:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function _precI *****************
  4210 ;; Defined at:
  4211 ;;		line 323 in file "src/print/format.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  str             2    7[COMRAM] PTR unsigned char 
  4214 ;;		 -> my_vprintf@buffer(64), 
  4215 ;;  precision       2    9[COMRAM] PTR int 
  4216 ;;		 -> my_vprintf@prec(2), 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  i               2   19[COMRAM] int 
  4219 ;;  len             2   17[COMRAM] int 
  4220 ;;  j               2   15[COMRAM] int 
  4221 ;;  k               2   13[COMRAM] int 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4231 ;;      Params:         4       0       0       0       0       0       0       0       0
  4232 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4233 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4234 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4235 ;;Total ram usage:       14 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    3
  4238 ;; This function calls:
  4239 ;;		_strlen
  4240 ;; This function is called by:
  4241 ;;		_my_vprintf
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text6
  4246  004254                     __ptext6:
  4247                           	opt callstack 0
  4248  004254                     _precI:
  4249                           	opt callstack 26
  4250  004254                     
  4251                           ;src/print/format.c: 324:     int i, j, k;;src/print/format.c: 325:     int len = strlen
      +                          (str);
  4252  004254  C008  F004         	movff	precI@str,strlen@s
  4253  004258  C009  F005         	movff	precI@str+1,strlen@s+1
  4254  00425C  ECD7  F029         	call	_strlen	;wreg free
  4255  004260  C004  F012         	movff	?_strlen,precI@len
  4256  004264  C005  F013         	movff	?_strlen+1,precI@len+1
  4257  004268                     
  4258                           ;src/print/format.c: 327:     if (*precision == -1)
  4259  004268  C00A  FFD9         	movff	precI@precision,fsr2l
  4260  00426C  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4261  004270  28DE               	incf	postinc2,w,c
  4262  004272  E106               	bnz	u9051
  4263  004274  28DE               	incf	postinc2,w,c
  4264  004276  A4D8               	btfss	status,2,c
  4265  004278  EF40  F021         	goto	u9051
  4266  00427C  EF42  F021         	goto	u9050
  4267  004280                     u9051:
  4268  004280  EF4C  F021         	goto	l7767
  4269  004284                     u9050:
  4270  004284                     
  4271                           ;src/print/format.c: 328:         (*precision) = 1;
  4272  004284  C00A  FFD9         	movff	precI@precision,fsr2l
  4273  004288  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4274  00428C  0E01               	movlw	1
  4275  00428E  6EDE               	movwf	postinc2,c
  4276  004290  0E00               	movlw	0
  4277  004292  6EDD               	movwf	postdec2,c
  4278  004294  EF4F  F021         	goto	l7769
  4279  004298                     l7767:
  4280                           
  4281                           ;src/print/format.c: 330:         precInt = 1;
  4282  004298  0E01               	movlw	1
  4283  00429A  0100               	movlb	0	; () banked
  4284  00429C  6FCF               	movwf	_precInt& (0+255),b
  4285  00429E                     l7769:
  4286                           
  4287                           ;src/print/format.c: 332:     j = (*precision) - len;
  4288  00429E  C00A  FFD9         	movff	precI@precision,fsr2l
  4289  0042A2  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4290  0042A6  CFDE F00C          	movff	postinc2,??_precI
  4291  0042AA  CFDD F00D          	movff	postdec2,??_precI+1
  4292  0042AE  5012               	movf	precI@len^0,w,c
  4293  0042B0  5C0C               	subwf	??_precI^0,w,c
  4294  0042B2  6E10               	movwf	precI@j^0,c
  4295  0042B4  5013               	movf	(precI@len+1)^0,w,c
  4296  0042B6  580D               	subwfb	(??_precI+1)^0,w,c
  4297  0042B8  6E11               	movwf	(precI@j+1)^0,c
  4298  0042BA                     
  4299                           ;src/print/format.c: 333:     k = len;
  4300  0042BA  C012  F00E         	movff	precI@len,precI@k
  4301  0042BE  C013  F00F         	movff	precI@len+1,precI@k+1
  4302  0042C2                     
  4303                           ;src/print/format.c: 334:     if(j > 0) {
  4304  0042C2  BE11               	btfsc	(precI@j+1)^0,7,c
  4305  0042C4  EF6C  F021         	goto	u9061
  4306  0042C8  5011               	movf	(precI@j+1)^0,w,c
  4307  0042CA  E108               	bnz	u9060
  4308  0042CC  0410               	decf	precI@j^0,w,c
  4309  0042CE  A0D8               	btfss	status,0,c
  4310  0042D0  EF6C  F021         	goto	u9061
  4311  0042D4  EF6E  F021         	goto	u9060
  4312  0042D8                     u9061:
  4313  0042D8  EFB4  F021         	goto	l538
  4314  0042DC                     u9060:
  4315  0042DC                     
  4316                           ;src/print/format.c: 335:         for(i = (*precision)-1; i >= 0; i--) {
  4317  0042DC  C00A  FFD9         	movff	precI@precision,fsr2l
  4318  0042E0  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4319  0042E4  CFDE F00C          	movff	postinc2,??_precI
  4320  0042E8  CFDD F00D          	movff	postdec2,??_precI+1
  4321  0042EC  0EFF               	movlw	255
  4322  0042EE  240C               	addwf	??_precI^0,w,c
  4323  0042F0  6E14               	movwf	precI@i^0,c
  4324  0042F2  0EFF               	movlw	255
  4325  0042F4  200D               	addwfc	(??_precI+1)^0,w,c
  4326  0042F6  6E15               	movwf	(precI@i+1)^0,c
  4327  0042F8                     l7777:
  4328  0042F8  BE15               	btfsc	(precI@i+1)^0,7,c
  4329  0042FA  EF83  F021         	goto	u9070
  4330  0042FE  EF81  F021         	goto	u9071
  4331  004302                     u9071:
  4332  004302  EF85  F021         	goto	l7781
  4333  004306                     u9070:
  4334  004306  EFB4  F021         	goto	l538
  4335  00430A                     l7781:
  4336                           
  4337                           ;src/print/format.c: 336:             k--;
  4338  00430A  060E               	decf	precI@k^0,f,c
  4339  00430C  A0D8               	btfss	status,0,c
  4340  00430E  060F               	decf	(precI@k+1)^0,f,c
  4341  004310                     
  4342                           ;src/print/format.c: 337:             if (i>=j)
  4343  004310  5010               	movf	precI@j^0,w,c
  4344  004312  5C14               	subwf	precI@i^0,w,c
  4345  004314  5015               	movf	(precI@i+1)^0,w,c
  4346  004316  0A80               	xorlw	128
  4347  004318  6E0C               	movwf	??_precI^0,c
  4348  00431A  5011               	movf	(precI@j+1)^0,w,c
  4349  00431C  0A80               	xorlw	128
  4350  00431E  580C               	subwfb	??_precI^0,w,c
  4351  004320  A0D8               	btfss	status,0,c
  4352  004322  EF95  F021         	goto	u9081
  4353  004326  EF97  F021         	goto	u9080
  4354  00432A                     u9081:
  4355  00432A  EFA7  F021         	goto	l7787
  4356  00432E                     u9080:
  4357  00432E                     
  4358                           ;src/print/format.c: 338:                 str[i] = str[k];
  4359  00432E  500E               	movf	precI@k^0,w,c
  4360  004330  2408               	addwf	precI@str^0,w,c
  4361  004332  6ED9               	movwf	fsr2l,c
  4362  004334  500F               	movf	(precI@k+1)^0,w,c
  4363  004336  2009               	addwfc	(precI@str+1)^0,w,c
  4364  004338  6EDA               	movwf	fsr2h,c
  4365  00433A  5014               	movf	precI@i^0,w,c
  4366  00433C  2408               	addwf	precI@str^0,w,c
  4367  00433E  6EE1               	movwf	fsr1l,c
  4368  004340  5015               	movf	(precI@i+1)^0,w,c
  4369  004342  2009               	addwfc	(precI@str+1)^0,w,c
  4370  004344  6EE2               	movwf	fsr1h,c
  4371  004346  CFDF FFE7          	movff	indf2,indf1
  4372  00434A  EFAF  F021         	goto	l7789
  4373  00434E                     l7787:
  4374                           
  4375                           ;src/print/format.c: 340:                 str[i] ='0';
  4376  00434E  5014               	movf	precI@i^0,w,c
  4377  004350  2408               	addwf	precI@str^0,w,c
  4378  004352  6ED9               	movwf	fsr2l,c
  4379  004354  5015               	movf	(precI@i+1)^0,w,c
  4380  004356  2009               	addwfc	(precI@str+1)^0,w,c
  4381  004358  6EDA               	movwf	fsr2h,c
  4382  00435A  0E30               	movlw	48
  4383  00435C  6EDF               	movwf	indf2,c
  4384  00435E                     l7789:
  4385                           
  4386                           ;src/print/format.c: 341:         }
  4387  00435E  0614               	decf	precI@i^0,f,c
  4388  004360  A0D8               	btfss	status,0,c
  4389  004362  0615               	decf	(precI@i+1)^0,f,c
  4390  004364  EF7C  F021         	goto	l7777
  4391  004368                     l538:
  4392  004368  0012               	return		;funcret
  4393  00436A                     __end_of_precI:
  4394                           	opt callstack 0
  4395                           
  4396 ;; *************** function _precG *****************
  4397 ;; Defined at:
  4398 ;;		line 239 in file "src/print/format.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  str             2   30[COMRAM] PTR unsigned char 
  4401 ;;		 -> my_vprintf@buffer(64), 
  4402 ;;  precision       2   32[COMRAM] PTR int 
  4403 ;;		 -> my_vprintf@prec(2), 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  i               2   51[COMRAM] int 
  4406 ;;  k               2   49[COMRAM] int 
  4407 ;;  j               2   47[COMRAM] int 
  4408 ;;  len             2   45[COMRAM] int 
  4409 ;;  posE            2   43[COMRAM] int 
  4410 ;;  digS            2   41[COMRAM] int 
  4411 ;;  f               2   39[COMRAM] int 
  4412 ;;  p               2   37[COMRAM] int 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4422 ;;      Params:         4       0       0       0       0       0       0       0       0
  4423 ;;      Locals:        16       0       0       0       0       0       0       0       0
  4424 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4425 ;;      Totals:        23       0       0       0       0       0       0       0       0
  4426 ;;Total ram usage:       23 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    5
  4429 ;; This function calls:
  4430 ;;		_posc
  4431 ;;		_roundStr
  4432 ;;		_strlen
  4433 ;; This function is called by:
  4434 ;;		_my_vprintf
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text7
  4439  001466                     __ptext7:
  4440                           	opt callstack 0
  4441  001466                     _precG:
  4442                           	opt callstack 24
  4443  001466                     
  4444                           ;src/print/format.c: 240:     int i, j, k;;src/print/format.c: 241:     int len = strlen
      +                          (str);
  4445  001466  C01F  F004         	movff	precG@str,strlen@s
  4446  00146A  C020  F005         	movff	precG@str+1,strlen@s+1
  4447  00146E  ECD7  F029         	call	_strlen	;wreg free
  4448  001472  C004  F02E         	movff	?_strlen,precG@len
  4449  001476  C005  F02F         	movff	?_strlen+1,precG@len+1
  4450                           
  4451                           ;src/print/format.c: 242:     int posE = posc(str,'e');
  4452  00147A  C01F  F008         	movff	precG@str,posc@str
  4453  00147E  C020  F009         	movff	precG@str+1,posc@str+1
  4454  001482  0E65               	movlw	101
  4455  001484  6E0A               	movwf	posc@c^0,c
  4456  001486  EC26  F027         	call	_posc	;wreg free
  4457  00148A  C008  F02C         	movff	?_posc,precG@posE
  4458  00148E  C009  F02D         	movff	?_posc+1,precG@posE+1
  4459                           
  4460                           ;src/print/format.c: 243:     int p = posc(str,'.');
  4461  001492  C01F  F008         	movff	precG@str,posc@str
  4462  001496  C020  F009         	movff	precG@str+1,posc@str+1
  4463  00149A  0E2E               	movlw	46
  4464  00149C  6E0A               	movwf	posc@c^0,c
  4465  00149E  EC26  F027         	call	_posc	;wreg free
  4466  0014A2  C008  F026         	movff	?_posc,precG@p
  4467  0014A6  C009  F027         	movff	?_posc+1,precG@p+1
  4468  0014AA                     
  4469                           ;src/print/format.c: 244:     int f = 0;
  4470  0014AA  0E00               	movlw	0
  4471  0014AC  6E29               	movwf	(precG@f+1)^0,c
  4472  0014AE  0E00               	movlw	0
  4473  0014B0  6E28               	movwf	precG@f^0,c
  4474  0014B2                     
  4475                           ;src/print/format.c: 245:     int digS = 0;
  4476  0014B2  0E00               	movlw	0
  4477  0014B4  6E2B               	movwf	(precG@digS+1)^0,c
  4478  0014B6  0E00               	movlw	0
  4479  0014B8  6E2A               	movwf	precG@digS^0,c
  4480  0014BA                     
  4481                           ;src/print/format.c: 247:     if ((*precision) == - 1)
  4482  0014BA  C021  FFD9         	movff	precG@precision,fsr2l
  4483  0014BE  C022  FFDA         	movff	precG@precision+1,fsr2h
  4484  0014C2  28DE               	incf	postinc2,w,c
  4485  0014C4  E106               	bnz	u8751
  4486  0014C6  28DE               	incf	postinc2,w,c
  4487  0014C8  A4D8               	btfss	status,2,c
  4488  0014CA  EF69  F00A         	goto	u8751
  4489  0014CE  EF6B  F00A         	goto	u8750
  4490  0014D2                     u8751:
  4491  0014D2  EF73  F00A         	goto	l7645
  4492  0014D6                     u8750:
  4493  0014D6                     
  4494                           ;src/print/format.c: 248:         (*precision) = 6;
  4495  0014D6  C021  FFD9         	movff	precG@precision,fsr2l
  4496  0014DA  C022  FFDA         	movff	precG@precision+1,fsr2h
  4497  0014DE  0E06               	movlw	6
  4498  0014E0  6EDE               	movwf	postinc2,c
  4499  0014E2  0E00               	movlw	0
  4500  0014E4  6EDD               	movwf	postdec2,c
  4501  0014E6                     l7645:
  4502                           
  4503                           ;src/print/format.c: 250:     k = (posE > 0)? posE : len;
  4504  0014E6  BE2D               	btfsc	(precG@posE+1)^0,7,c
  4505  0014E8  EF80  F00A         	goto	u8760
  4506  0014EC  502D               	movf	(precG@posE+1)^0,w,c
  4507  0014EE  E106               	bnz	u8761
  4508  0014F0  042C               	decf	precG@posE^0,w,c
  4509  0014F2  B0D8               	btfsc	status,0,c
  4510  0014F4  EF7E  F00A         	goto	u8761
  4511  0014F8  EF80  F00A         	goto	u8760
  4512  0014FC                     u8761:
  4513  0014FC  EF86  F00A         	goto	l482
  4514  001500                     u8760:
  4515  001500  C02E  F032         	movff	precG@len,precG@k
  4516  001504  C02F  F033         	movff	precG@len+1,precG@k+1
  4517  001508  EF8A  F00A         	goto	l7649
  4518  00150C                     l482:
  4519  00150C  C02C  F032         	movff	precG@posE,precG@k
  4520  001510  C02D  F033         	movff	precG@posE+1,precG@k+1
  4521  001514                     l7649:
  4522                           
  4523                           ;src/print/format.c: 254:     for (i = 0; i <= len;i++) {
  4524  001514  0E00               	movlw	0
  4525  001516  6E35               	movwf	(precG@i+1)^0,c
  4526  001518  0E00               	movlw	0
  4527  00151A  6E34               	movwf	precG@i^0,c
  4528  00151C  EFE8  F00A         	goto	l7671
  4529  001520                     l7651:
  4530                           
  4531                           ;src/print/format.c: 255:         if (str[i] >= 48 && str[i] <= 57) {
  4532  001520  5034               	movf	precG@i^0,w,c
  4533  001522  241F               	addwf	precG@str^0,w,c
  4534  001524  6ED9               	movwf	fsr2l,c
  4535  001526  5035               	movf	(precG@i+1)^0,w,c
  4536  001528  2020               	addwfc	(precG@str+1)^0,w,c
  4537  00152A  6EDA               	movwf	fsr2h,c
  4538  00152C  0E2F               	movlw	47
  4539  00152E  64DF               	cpfsgt	indf2,c
  4540  001530  EF9C  F00A         	goto	u8771
  4541  001534  EF9E  F00A         	goto	u8770
  4542  001538                     u8771:
  4543  001538  EFD5  F00A         	goto	l7665
  4544  00153C                     u8770:
  4545  00153C  5034               	movf	precG@i^0,w,c
  4546  00153E  241F               	addwf	precG@str^0,w,c
  4547  001540  6ED9               	movwf	fsr2l,c
  4548  001542  5035               	movf	(precG@i+1)^0,w,c
  4549  001544  2020               	addwfc	(precG@str+1)^0,w,c
  4550  001546  6EDA               	movwf	fsr2h,c
  4551  001548  0E3A               	movlw	58
  4552  00154A  60DF               	cpfslt	indf2,c
  4553  00154C  EFAA  F00A         	goto	u8781
  4554  001550  EFAC  F00A         	goto	u8780
  4555  001554                     u8781:
  4556  001554  EFD5  F00A         	goto	l7665
  4557  001558                     u8780:
  4558  001558                     
  4559                           ;src/print/format.c: 256:             if (!(str[i] == 48 && digS == 0)){
  4560  001558  5034               	movf	precG@i^0,w,c
  4561  00155A  241F               	addwf	precG@str^0,w,c
  4562  00155C  6ED9               	movwf	fsr2l,c
  4563  00155E  5035               	movf	(precG@i+1)^0,w,c
  4564  001560  2020               	addwfc	(precG@str+1)^0,w,c
  4565  001562  6EDA               	movwf	fsr2h,c
  4566  001564  0E30               	movlw	48
  4567  001566  18DE               	xorwf	postinc2,w,c
  4568  001568  A4D8               	btfss	status,2,c
  4569  00156A  EFB9  F00A         	goto	u8791
  4570  00156E  EFBB  F00A         	goto	u8790
  4571  001572                     u8791:
  4572  001572  EFC4  F00A         	goto	l7659
  4573  001576                     u8790:
  4574  001576  502A               	movf	precG@digS^0,w,c
  4575  001578  102B               	iorwf	(precG@digS+1)^0,w,c
  4576  00157A  B4D8               	btfsc	status,2,c
  4577  00157C  EFC2  F00A         	goto	u8801
  4578  001580  EFC4  F00A         	goto	u8800
  4579  001584                     u8801:
  4580  001584  EFE6  F00A         	goto	l7669
  4581  001588                     u8800:
  4582  001588                     l7659:
  4583                           
  4584                           ;src/print/format.c: 257:                 digS++;
  4585  001588  4A2A               	infsnz	precG@digS^0,f,c
  4586  00158A  2A2B               	incf	(precG@digS+1)^0,f,c
  4587  00158C                     
  4588                           ;src/print/format.c: 258:                 if (digS == 1)
  4589  00158C  042A               	decf	precG@digS^0,w,c
  4590  00158E  102B               	iorwf	(precG@digS+1)^0,w,c
  4591  001590  A4D8               	btfss	status,2,c
  4592  001592  EFCD  F00A         	goto	u8811
  4593  001596  EFCF  F00A         	goto	u8810
  4594  00159A                     u8811:
  4595  00159A  EFE6  F00A         	goto	l7669
  4596  00159E                     u8810:
  4597  00159E                     
  4598                           ;src/print/format.c: 259:                     f = i;
  4599  00159E  C034  F028         	movff	precG@i,precG@f
  4600  0015A2  C035  F029         	movff	precG@i+1,precG@f+1
  4601  0015A6  EFE6  F00A         	goto	l7669
  4602  0015AA                     l7665:
  4603  0015AA  5034               	movf	precG@i^0,w,c
  4604  0015AC  241F               	addwf	precG@str^0,w,c
  4605  0015AE  6ED9               	movwf	fsr2l,c
  4606  0015B0  5035               	movf	(precG@i+1)^0,w,c
  4607  0015B2  2020               	addwfc	(precG@str+1)^0,w,c
  4608  0015B4  6EDA               	movwf	fsr2h,c
  4609  0015B6  0E65               	movlw	101
  4610  0015B8  18DE               	xorwf	postinc2,w,c
  4611  0015BA  A4D8               	btfss	status,2,c
  4612  0015BC  EFE2  F00A         	goto	u8821
  4613  0015C0  EFE4  F00A         	goto	u8820
  4614  0015C4                     u8821:
  4615  0015C4  EFE6  F00A         	goto	l7669
  4616  0015C8                     u8820:
  4617  0015C8  EFF7  F00A         	goto	l7673
  4618  0015CC                     l7669:
  4619                           
  4620                           ;src/print/format.c: 264:     }
  4621  0015CC  4A34               	infsnz	precG@i^0,f,c
  4622  0015CE  2A35               	incf	(precG@i+1)^0,f,c
  4623  0015D0                     l7671:
  4624  0015D0  5034               	movf	precG@i^0,w,c
  4625  0015D2  5C2E               	subwf	precG@len^0,w,c
  4626  0015D4  502F               	movf	(precG@len+1)^0,w,c
  4627  0015D6  0A80               	xorlw	128
  4628  0015D8  6E23               	movwf	??_precG^0,c
  4629  0015DA  5035               	movf	(precG@i+1)^0,w,c
  4630  0015DC  0A80               	xorlw	128
  4631  0015DE  5823               	subwfb	??_precG^0,w,c
  4632  0015E0  B0D8               	btfsc	status,0,c
  4633  0015E2  EFF5  F00A         	goto	u8831
  4634  0015E6  EFF7  F00A         	goto	u8830
  4635  0015EA                     u8831:
  4636  0015EA  EF90  F00A         	goto	l7651
  4637  0015EE                     u8830:
  4638  0015EE                     l7673:
  4639                           
  4640                           ;src/print/format.c: 265:     for (i = k-1; i >= 0;i--) {
  4641  0015EE  0EFF               	movlw	255
  4642  0015F0  2432               	addwf	precG@k^0,w,c
  4643  0015F2  6E34               	movwf	precG@i^0,c
  4644  0015F4  0EFF               	movlw	255
  4645  0015F6  2033               	addwfc	(precG@k+1)^0,w,c
  4646  0015F8  6E35               	movwf	(precG@i+1)^0,c
  4647  0015FA  BE35               	btfsc	(precG@i+1)^0,7,c
  4648  0015FC  EF04  F00B         	goto	u8840
  4649  001600  EF02  F00B         	goto	u8841
  4650  001604                     u8841:
  4651  001604  EF06  F00B         	goto	l7677
  4652  001608                     u8840:
  4653  001608  EF51  F00B         	goto	l7691
  4654  00160C                     l7677:
  4655                           
  4656                           ;src/print/format.c: 266:         if (str[i] == 48)
  4657  00160C  5034               	movf	precG@i^0,w,c
  4658  00160E  241F               	addwf	precG@str^0,w,c
  4659  001610  6ED9               	movwf	fsr2l,c
  4660  001612  5035               	movf	(precG@i+1)^0,w,c
  4661  001614  2020               	addwfc	(precG@str+1)^0,w,c
  4662  001616  6EDA               	movwf	fsr2h,c
  4663  001618  0E30               	movlw	48
  4664  00161A  18DE               	xorwf	postinc2,w,c
  4665  00161C  A4D8               	btfss	status,2,c
  4666  00161E  EF13  F00B         	goto	u8851
  4667  001622  EF15  F00B         	goto	u8850
  4668  001626                     u8851:
  4669  001626  EF1A  F00B         	goto	l7681
  4670  00162A                     u8850:
  4671  00162A                     
  4672                           ;src/print/format.c: 267:             digS--;
  4673  00162A  062A               	decf	precG@digS^0,f,c
  4674  00162C  A0D8               	btfss	status,0,c
  4675  00162E  062B               	decf	(precG@digS+1)^0,f,c
  4676  001630  EF47  F00B         	goto	l7687
  4677  001634                     l7681:
  4678  001634  5034               	movf	precG@i^0,w,c
  4679  001636  241F               	addwf	precG@str^0,w,c
  4680  001638  6ED9               	movwf	fsr2l,c
  4681  00163A  5035               	movf	(precG@i+1)^0,w,c
  4682  00163C  2020               	addwfc	(precG@str+1)^0,w,c
  4683  00163E  6EDA               	movwf	fsr2h,c
  4684  001640  0E30               	movlw	48
  4685  001642  64DF               	cpfsgt	indf2,c
  4686  001644  EF26  F00B         	goto	u8861
  4687  001648  EF28  F00B         	goto	u8860
  4688  00164C                     u8861:
  4689  00164C  EF36  F00B         	goto	l7685
  4690  001650                     u8860:
  4691  001650  5034               	movf	precG@i^0,w,c
  4692  001652  241F               	addwf	precG@str^0,w,c
  4693  001654  6ED9               	movwf	fsr2l,c
  4694  001656  5035               	movf	(precG@i+1)^0,w,c
  4695  001658  2020               	addwfc	(precG@str+1)^0,w,c
  4696  00165A  6EDA               	movwf	fsr2h,c
  4697  00165C  0E39               	movlw	57
  4698  00165E  64DF               	cpfsgt	indf2,c
  4699  001660  EF34  F00B         	goto	u8871
  4700  001664  EF36  F00B         	goto	u8870
  4701  001668                     u8871:
  4702  001668  EF51  F00B         	goto	l7691
  4703  00166C                     u8870:
  4704  00166C                     l7685:
  4705  00166C  5034               	movf	precG@i^0,w,c
  4706  00166E  241F               	addwf	precG@str^0,w,c
  4707  001670  6ED9               	movwf	fsr2l,c
  4708  001672  5035               	movf	(precG@i+1)^0,w,c
  4709  001674  2020               	addwfc	(precG@str+1)^0,w,c
  4710  001676  6EDA               	movwf	fsr2h,c
  4711  001678  0E2E               	movlw	46
  4712  00167A  18DE               	xorwf	postinc2,w,c
  4713  00167C  A4D8               	btfss	status,2,c
  4714  00167E  EF43  F00B         	goto	u8881
  4715  001682  EF45  F00B         	goto	u8880
  4716  001686                     u8881:
  4717  001686  EF47  F00B         	goto	l7687
  4718  00168A                     u8880:
  4719  00168A  EF51  F00B         	goto	l7691
  4720  00168E                     l7687:
  4721                           
  4722                           ;src/print/format.c: 270:     }
  4723  00168E  0634               	decf	precG@i^0,f,c
  4724  001690  A0D8               	btfss	status,0,c
  4725  001692  0635               	decf	(precG@i+1)^0,f,c
  4726  001694  BE35               	btfsc	(precG@i+1)^0,7,c
  4727  001696  EF51  F00B         	goto	u8890
  4728  00169A  EF4F  F00B         	goto	u8891
  4729  00169E                     u8891:
  4730  00169E  EF06  F00B         	goto	l7677
  4731  0016A2                     u8890:
  4732  0016A2                     l7691:
  4733                           
  4734                           ;src/print/format.c: 272:     if (digS > (*precision)) {
  4735  0016A2  C021  FFD9         	movff	precG@precision,fsr2l
  4736  0016A6  C022  FFDA         	movff	precG@precision+1,fsr2h
  4737  0016AA  502A               	movf	precG@digS^0,w,c
  4738  0016AC  5CDE               	subwf	postinc2,w,c
  4739  0016AE  50DE               	movf	postinc2,w,c
  4740  0016B0  0A80               	xorlw	128
  4741  0016B2  6E25               	movwf	(??_precG+2)^0,c
  4742  0016B4  502B               	movf	(precG@digS+1)^0,w,c
  4743  0016B6  0A80               	xorlw	128
  4744  0016B8  5825               	subwfb	(??_precG+2)^0,w,c
  4745  0016BA  B0D8               	btfsc	status,0,c
  4746  0016BC  EF62  F00B         	goto	u8901
  4747  0016C0  EF64  F00B         	goto	u8900
  4748  0016C4                     u8901:
  4749  0016C4  EFDE  F00C         	goto	l528
  4750  0016C8                     u8900:
  4751  0016C8                     
  4752                           ;src/print/format.c: 273:         i = f + (*precision);
  4753  0016C8  C021  FFD9         	movff	precG@precision,fsr2l
  4754  0016CC  C022  FFDA         	movff	precG@precision+1,fsr2h
  4755  0016D0  CFDE F023          	movff	postinc2,??_precG
  4756  0016D4  CFDD F024          	movff	postdec2,??_precG+1
  4757  0016D8  5028               	movf	precG@f^0,w,c
  4758  0016DA  2423               	addwf	??_precG^0,w,c
  4759  0016DC  6E34               	movwf	precG@i^0,c
  4760  0016DE  5029               	movf	(precG@f+1)^0,w,c
  4761  0016E0  2024               	addwfc	(??_precG+1)^0,w,c
  4762  0016E2  6E35               	movwf	(precG@i+1)^0,c
  4763  0016E4                     
  4764                           ;src/print/format.c: 275:         if (f < p && i >= p)
  4765  0016E4  5026               	movf	precG@p^0,w,c
  4766  0016E6  5C28               	subwf	precG@f^0,w,c
  4767  0016E8  5029               	movf	(precG@f+1)^0,w,c
  4768  0016EA  0A80               	xorlw	128
  4769  0016EC  6E23               	movwf	??_precG^0,c
  4770  0016EE  5027               	movf	(precG@p+1)^0,w,c
  4771  0016F0  0A80               	xorlw	128
  4772  0016F2  5823               	subwfb	??_precG^0,w,c
  4773  0016F4  B0D8               	btfsc	status,0,c
  4774  0016F6  EF7F  F00B         	goto	u8911
  4775  0016FA  EF81  F00B         	goto	u8910
  4776  0016FE                     u8911:
  4777  0016FE  EF92  F00B         	goto	l7701
  4778  001702                     u8910:
  4779  001702  5026               	movf	precG@p^0,w,c
  4780  001704  5C34               	subwf	precG@i^0,w,c
  4781  001706  5035               	movf	(precG@i+1)^0,w,c
  4782  001708  0A80               	xorlw	128
  4783  00170A  6E23               	movwf	??_precG^0,c
  4784  00170C  5027               	movf	(precG@p+1)^0,w,c
  4785  00170E  0A80               	xorlw	128
  4786  001710  5823               	subwfb	??_precG^0,w,c
  4787  001712  A0D8               	btfss	status,0,c
  4788  001714  EF8E  F00B         	goto	u8921
  4789  001718  EF90  F00B         	goto	u8920
  4790  00171C                     u8921:
  4791  00171C  EF92  F00B         	goto	l7701
  4792  001720                     u8920:
  4793  001720                     
  4794                           ;src/print/format.c: 276:             i++;
  4795  001720  4A34               	infsnz	precG@i^0,f,c
  4796  001722  2A35               	incf	(precG@i+1)^0,f,c
  4797  001724                     l7701:
  4798                           
  4799                           ;src/print/format.c: 278:         j = k - i;
  4800  001724  5034               	movf	precG@i^0,w,c
  4801  001726  5C32               	subwf	precG@k^0,w,c
  4802  001728  6E30               	movwf	precG@j^0,c
  4803  00172A  5035               	movf	(precG@i+1)^0,w,c
  4804  00172C  5833               	subwfb	(precG@k+1)^0,w,c
  4805  00172E  6E31               	movwf	(precG@j+1)^0,c
  4806  001730                     
  4807                           ;src/print/format.c: 284:         if (j > 0) {
  4808  001730  BE31               	btfsc	(precG@j+1)^0,7,c
  4809  001732  EFA3  F00B         	goto	u8931
  4810  001736  5031               	movf	(precG@j+1)^0,w,c
  4811  001738  E108               	bnz	u8930
  4812  00173A  0430               	decf	precG@j^0,w,c
  4813  00173C  A0D8               	btfss	status,0,c
  4814  00173E  EFA3  F00B         	goto	u8931
  4815  001742  EFA5  F00B         	goto	u8930
  4816  001746                     u8931:
  4817  001746  EF30  F00C         	goto	l7729
  4818  00174A                     u8930:
  4819  00174A                     
  4820                           ;src/print/format.c: 286:             if (roundStr(str, posE, i) == 1) {
  4821  00174A  C01F  F00E         	movff	precG@str,roundStr@decnum
  4822  00174E  C020  F00F         	movff	precG@str+1,roundStr@decnum+1
  4823  001752  C02C  F010         	movff	precG@posE,roundStr@e
  4824  001756  C02D  F011         	movff	precG@posE+1,roundStr@e+1
  4825  00175A  C034  F012         	movff	precG@i,roundStr@prn
  4826  00175E  C035  F013         	movff	precG@i+1,roundStr@prn+1
  4827  001762  ECBA  F014         	call	_roundStr	;wreg free
  4828  001766  040E               	decf	?_roundStr^0,w,c
  4829  001768  100F               	iorwf	(?_roundStr+1)^0,w,c
  4830  00176A  A4D8               	btfss	status,2,c
  4831  00176C  EFBA  F00B         	goto	u8941
  4832  001770  EFBC  F00B         	goto	u8940
  4833  001774                     u8941:
  4834  001774  EF05  F00C         	goto	l7721
  4835  001778                     u8940:
  4836  001778                     
  4837                           ;src/print/format.c: 287:                 for (k = 0; k <= strlen(str);i++) {
  4838  001778  0E00               	movlw	0
  4839  00177A  6E33               	movwf	(precG@k+1)^0,c
  4840  00177C  0E00               	movlw	0
  4841  00177E  6E32               	movwf	precG@k^0,c
  4842  001780  EFE6  F00B         	goto	l7717
  4843  001784                     l7709:
  4844                           
  4845                           ;src/print/format.c: 288:                     if (str[k] >= 49 && str[k] <= 57) {
  4846  001784  5032               	movf	precG@k^0,w,c
  4847  001786  241F               	addwf	precG@str^0,w,c
  4848  001788  6ED9               	movwf	fsr2l,c
  4849  00178A  5033               	movf	(precG@k+1)^0,w,c
  4850  00178C  2020               	addwfc	(precG@str+1)^0,w,c
  4851  00178E  6EDA               	movwf	fsr2h,c
  4852  001790  0E30               	movlw	48
  4853  001792  64DF               	cpfsgt	indf2,c
  4854  001794  EFCE  F00B         	goto	u8951
  4855  001798  EFD0  F00B         	goto	u8950
  4856  00179C                     u8951:
  4857  00179C  EFE4  F00B         	goto	l7715
  4858  0017A0                     u8950:
  4859  0017A0  5032               	movf	precG@k^0,w,c
  4860  0017A2  241F               	addwf	precG@str^0,w,c
  4861  0017A4  6ED9               	movwf	fsr2l,c
  4862  0017A6  5033               	movf	(precG@k+1)^0,w,c
  4863  0017A8  2020               	addwfc	(precG@str+1)^0,w,c
  4864  0017AA  6EDA               	movwf	fsr2h,c
  4865  0017AC  0E3A               	movlw	58
  4866  0017AE  60DF               	cpfslt	indf2,c
  4867  0017B0  EFDC  F00B         	goto	u8961
  4868  0017B4  EFDE  F00B         	goto	u8960
  4869  0017B8                     u8961:
  4870  0017B8  EFE4  F00B         	goto	l7715
  4871  0017BC                     u8960:
  4872  0017BC                     
  4873                           ;src/print/format.c: 289:                             f = k;
  4874  0017BC  C032  F028         	movff	precG@k,precG@f
  4875  0017C0  C033  F029         	movff	precG@k+1,precG@f+1
  4876                           
  4877                           ;src/print/format.c: 290:                             break;
  4878  0017C4  EFF7  F00B         	goto	l7719
  4879  0017C8                     l7715:
  4880                           
  4881                           ;src/print/format.c: 292:                 }
  4882  0017C8  4A34               	infsnz	precG@i^0,f,c
  4883  0017CA  2A35               	incf	(precG@i+1)^0,f,c
  4884  0017CC                     l7717:
  4885  0017CC  C01F  F004         	movff	precG@str,strlen@s
  4886  0017D0  C020  F005         	movff	precG@str+1,strlen@s+1
  4887  0017D4  ECD7  F029         	call	_strlen	;wreg free
  4888  0017D8  5032               	movf	precG@k^0,w,c
  4889  0017DA  5C04               	subwf	?_strlen^0,w,c
  4890  0017DC  5033               	movf	(precG@k+1)^0,w,c
  4891  0017DE  5805               	subwfb	(?_strlen+1)^0,w,c
  4892  0017E0  B0D8               	btfsc	status,0,c
  4893  0017E2  EFF5  F00B         	goto	u8971
  4894  0017E6  EFF7  F00B         	goto	u8970
  4895  0017EA                     u8971:
  4896  0017EA  EFC2  F00B         	goto	l7709
  4897  0017EE                     u8970:
  4898  0017EE                     l7719:
  4899                           
  4900                           ;src/print/format.c: 293:                 i = f + (*precision);
  4901  0017EE  C021  FFD9         	movff	precG@precision,fsr2l
  4902  0017F2  C022  FFDA         	movff	precG@precision+1,fsr2h
  4903  0017F6  CFDE F023          	movff	postinc2,??_precG
  4904  0017FA  CFDD F024          	movff	postdec2,??_precG+1
  4905  0017FE  5028               	movf	precG@f^0,w,c
  4906  001800  2423               	addwf	??_precG^0,w,c
  4907  001802  6E34               	movwf	precG@i^0,c
  4908  001804  5029               	movf	(precG@f+1)^0,w,c
  4909  001806  2024               	addwfc	(??_precG+1)^0,w,c
  4910  001808  6E35               	movwf	(precG@i+1)^0,c
  4911  00180A                     l7721:
  4912                           
  4913                           ;src/print/format.c: 295:             for (k = i; k < len; k++)
  4914  00180A  C034  F032         	movff	precG@i,precG@k
  4915  00180E  C035  F033         	movff	precG@i+1,precG@k+1
  4916  001812  EF21  F00C         	goto	l7727
  4917  001816                     l7723:
  4918                           
  4919                           ;src/print/format.c: 296:                 str[k] = str[k+j];
  4920  001816  5032               	movf	precG@k^0,w,c
  4921  001818  241F               	addwf	precG@str^0,w,c
  4922  00181A  6E23               	movwf	??_precG^0,c
  4923  00181C  5033               	movf	(precG@k+1)^0,w,c
  4924  00181E  2020               	addwfc	(precG@str+1)^0,w,c
  4925  001820  6E24               	movwf	(??_precG+1)^0,c
  4926  001822  5030               	movf	precG@j^0,w,c
  4927  001824  2423               	addwf	??_precG^0,w,c
  4928  001826  6ED9               	movwf	fsr2l,c
  4929  001828  5031               	movf	(precG@j+1)^0,w,c
  4930  00182A  2024               	addwfc	(??_precG+1)^0,w,c
  4931  00182C  6EDA               	movwf	fsr2h,c
  4932  00182E  5032               	movf	precG@k^0,w,c
  4933  001830  241F               	addwf	precG@str^0,w,c
  4934  001832  6EE1               	movwf	fsr1l,c
  4935  001834  5033               	movf	(precG@k+1)^0,w,c
  4936  001836  2020               	addwfc	(precG@str+1)^0,w,c
  4937  001838  6EE2               	movwf	fsr1h,c
  4938  00183A  CFDF FFE7          	movff	indf2,indf1
  4939  00183E  4A32               	infsnz	precG@k^0,f,c
  4940  001840  2A33               	incf	(precG@k+1)^0,f,c
  4941  001842                     l7727:
  4942  001842  502E               	movf	precG@len^0,w,c
  4943  001844  5C32               	subwf	precG@k^0,w,c
  4944  001846  5033               	movf	(precG@k+1)^0,w,c
  4945  001848  0A80               	xorlw	128
  4946  00184A  6E23               	movwf	??_precG^0,c
  4947  00184C  502F               	movf	(precG@len+1)^0,w,c
  4948  00184E  0A80               	xorlw	128
  4949  001850  5823               	subwfb	??_precG^0,w,c
  4950  001852  A0D8               	btfss	status,0,c
  4951  001854  EF2E  F00C         	goto	u8981
  4952  001858  EF30  F00C         	goto	u8980
  4953  00185C                     u8981:
  4954  00185C  EF0B  F00C         	goto	l7723
  4955  001860                     u8980:
  4956  001860                     l7729:
  4957                           
  4958                           ;src/print/format.c: 300:         if (numeral == 0) {
  4959  001860  503B               	movf	_numeral^0,w,c
  4960  001862  A4D8               	btfss	status,2,c
  4961  001864  EF36  F00C         	goto	u8991
  4962  001868  EF38  F00C         	goto	u8990
  4963  00186C                     u8991:
  4964  00186C  EFDE  F00C         	goto	l528
  4965  001870                     u8990:
  4966  001870                     
  4967                           ;src/print/format.c: 301:             p = posc(str,'.');
  4968  001870  C01F  F008         	movff	precG@str,posc@str
  4969  001874  C020  F009         	movff	precG@str+1,posc@str+1
  4970  001878  0E2E               	movlw	46
  4971  00187A  6E0A               	movwf	posc@c^0,c
  4972  00187C  EC26  F027         	call	_posc	;wreg free
  4973  001880  C008  F026         	movff	?_posc,precG@p
  4974  001884  C009  F027         	movff	?_posc+1,precG@p+1
  4975                           
  4976                           ;src/print/format.c: 302:             len = strlen(str);
  4977  001888  C01F  F004         	movff	precG@str,strlen@s
  4978  00188C  C020  F005         	movff	precG@str+1,strlen@s+1
  4979  001890  ECD7  F029         	call	_strlen	;wreg free
  4980  001894  C004  F02E         	movff	?_strlen,precG@len
  4981  001898  C005  F02F         	movff	?_strlen+1,precG@len+1
  4982                           
  4983                           ;src/print/format.c: 303:             posE = posc(str,'e');
  4984  00189C  C01F  F008         	movff	precG@str,posc@str
  4985  0018A0  C020  F009         	movff	precG@str+1,posc@str+1
  4986  0018A4  0E65               	movlw	101
  4987  0018A6  6E0A               	movwf	posc@c^0,c
  4988  0018A8  EC26  F027         	call	_posc	;wreg free
  4989  0018AC  C008  F02C         	movff	?_posc,precG@posE
  4990  0018B0  C009  F02D         	movff	?_posc+1,precG@posE+1
  4991  0018B4                     
  4992                           ;src/print/format.c: 304:             k = (posE > 0)? posE : len;
  4993  0018B4  BE2D               	btfsc	(precG@posE+1)^0,7,c
  4994  0018B6  EF67  F00C         	goto	u9000
  4995  0018BA  502D               	movf	(precG@posE+1)^0,w,c
  4996  0018BC  E106               	bnz	u9001
  4997  0018BE  042C               	decf	precG@posE^0,w,c
  4998  0018C0  B0D8               	btfsc	status,0,c
  4999  0018C2  EF65  F00C         	goto	u9001
  5000  0018C6  EF67  F00C         	goto	u9000
  5001  0018CA                     u9001:
  5002  0018CA  EF6D  F00C         	goto	l517
  5003  0018CE                     u9000:
  5004  0018CE  C02E  F032         	movff	precG@len,precG@k
  5005  0018D2  C02F  F033         	movff	precG@len+1,precG@k+1
  5006  0018D6  EF71  F00C         	goto	l7737
  5007  0018DA                     l517:
  5008  0018DA  C02C  F032         	movff	precG@posE,precG@k
  5009  0018DE  C02D  F033         	movff	precG@posE+1,precG@k+1
  5010  0018E2                     l7737:
  5011                           
  5012                           ;src/print/format.c: 306:             for (j = k-1; j >= p; j--){
  5013  0018E2  0EFF               	movlw	255
  5014  0018E4  2432               	addwf	precG@k^0,w,c
  5015  0018E6  6E30               	movwf	precG@j^0,c
  5016  0018E8  0EFF               	movlw	255
  5017  0018EA  2033               	addwfc	(precG@k+1)^0,w,c
  5018  0018EC  6E31               	movwf	(precG@j+1)^0,c
  5019  0018EE  EFCF  F00C         	goto	l7759
  5020  0018F2                     l7739:
  5021                           
  5022                           ;src/print/format.c: 307:                 if (str[j] >= 49 && str[j] <= 57)
  5023  0018F2  5030               	movf	precG@j^0,w,c
  5024  0018F4  241F               	addwf	precG@str^0,w,c
  5025  0018F6  6ED9               	movwf	fsr2l,c
  5026  0018F8  5031               	movf	(precG@j+1)^0,w,c
  5027  0018FA  2020               	addwfc	(precG@str+1)^0,w,c
  5028  0018FC  6EDA               	movwf	fsr2h,c
  5029  0018FE  0E30               	movlw	48
  5030  001900  64DF               	cpfsgt	indf2,c
  5031  001902  EF85  F00C         	goto	u9011
  5032  001906  EF87  F00C         	goto	u9010
  5033  00190A                     u9011:
  5034  00190A  EF97  F00C         	goto	l7747
  5035  00190E                     u9010:
  5036  00190E  5030               	movf	precG@j^0,w,c
  5037  001910  241F               	addwf	precG@str^0,w,c
  5038  001912  6ED9               	movwf	fsr2l,c
  5039  001914  5031               	movf	(precG@j+1)^0,w,c
  5040  001916  2020               	addwfc	(precG@str+1)^0,w,c
  5041  001918  6EDA               	movwf	fsr2h,c
  5042  00191A  0E3A               	movlw	58
  5043  00191C  60DF               	cpfslt	indf2,c
  5044  00191E  EF93  F00C         	goto	u9021
  5045  001922  EF95  F00C         	goto	u9020
  5046  001926                     u9021:
  5047  001926  EF97  F00C         	goto	l7747
  5048  00192A                     u9020:
  5049  00192A  EFDE  F00C         	goto	l528
  5050  00192E                     l7747:
  5051                           
  5052                           ;src/print/format.c: 310:                     len = strlen(str);
  5053  00192E  C01F  F004         	movff	precG@str,strlen@s
  5054  001932  C020  F005         	movff	precG@str+1,strlen@s+1
  5055  001936  ECD7  F029         	call	_strlen	;wreg free
  5056  00193A  C004  F02E         	movff	?_strlen,precG@len
  5057  00193E  C005  F02F         	movff	?_strlen+1,precG@len+1
  5058  001942                     
  5059                           ;src/print/format.c: 311:                     for(i = j; i <= len; i++) {
  5060  001942  C030  F034         	movff	precG@j,precG@i
  5061  001946  C031  F035         	movff	precG@j+1,precG@i+1
  5062  00194A  EFBD  F00C         	goto	l7755
  5063  00194E                     l7751:
  5064                           
  5065                           ;src/print/format.c: 312:                         str[i] = str[i+1];
  5066  00194E  5034               	movf	precG@i^0,w,c
  5067  001950  241F               	addwf	precG@str^0,w,c
  5068  001952  6E23               	movwf	??_precG^0,c
  5069  001954  5035               	movf	(precG@i+1)^0,w,c
  5070  001956  2020               	addwfc	(precG@str+1)^0,w,c
  5071  001958  6E24               	movwf	(??_precG+1)^0,c
  5072  00195A  0E01               	movlw	1
  5073  00195C  2423               	addwf	??_precG^0,w,c
  5074  00195E  6ED9               	movwf	fsr2l,c
  5075  001960  0E00               	movlw	0
  5076  001962  2024               	addwfc	(??_precG+1)^0,w,c
  5077  001964  6EDA               	movwf	fsr2h,c
  5078  001966  5034               	movf	precG@i^0,w,c
  5079  001968  241F               	addwf	precG@str^0,w,c
  5080  00196A  6EE1               	movwf	fsr1l,c
  5081  00196C  5035               	movf	(precG@i+1)^0,w,c
  5082  00196E  2020               	addwfc	(precG@str+1)^0,w,c
  5083  001970  6EE2               	movwf	fsr1h,c
  5084  001972  CFDF FFE7          	movff	indf2,indf1
  5085  001976                     
  5086                           ;src/print/format.c: 313:                     }
  5087  001976  4A34               	infsnz	precG@i^0,f,c
  5088  001978  2A35               	incf	(precG@i+1)^0,f,c
  5089  00197A                     l7755:
  5090  00197A  5034               	movf	precG@i^0,w,c
  5091  00197C  5C2E               	subwf	precG@len^0,w,c
  5092  00197E  502F               	movf	(precG@len+1)^0,w,c
  5093  001980  0A80               	xorlw	128
  5094  001982  6E23               	movwf	??_precG^0,c
  5095  001984  5035               	movf	(precG@i+1)^0,w,c
  5096  001986  0A80               	xorlw	128
  5097  001988  5823               	subwfb	??_precG^0,w,c
  5098  00198A  B0D8               	btfsc	status,0,c
  5099  00198C  EFCA  F00C         	goto	u9031
  5100  001990  EFCC  F00C         	goto	u9030
  5101  001994                     u9031:
  5102  001994  EFA7  F00C         	goto	l7751
  5103  001998                     u9030:
  5104  001998                     
  5105                           ;src/print/format.c: 315:             }
  5106  001998  0630               	decf	precG@j^0,f,c
  5107  00199A  A0D8               	btfss	status,0,c
  5108  00199C  0631               	decf	(precG@j+1)^0,f,c
  5109  00199E                     l7759:
  5110  00199E  5026               	movf	precG@p^0,w,c
  5111  0019A0  5C30               	subwf	precG@j^0,w,c
  5112  0019A2  5031               	movf	(precG@j+1)^0,w,c
  5113  0019A4  0A80               	xorlw	128
  5114  0019A6  6E23               	movwf	??_precG^0,c
  5115  0019A8  5027               	movf	(precG@p+1)^0,w,c
  5116  0019AA  0A80               	xorlw	128
  5117  0019AC  5823               	subwfb	??_precG^0,w,c
  5118  0019AE  B0D8               	btfsc	status,0,c
  5119  0019B0  EFDC  F00C         	goto	u9041
  5120  0019B4  EFDE  F00C         	goto	u9040
  5121  0019B8                     u9041:
  5122  0019B8  EF79  F00C         	goto	l7739
  5123  0019BC                     u9040:
  5124  0019BC                     l528:
  5125  0019BC  0012               	return		;funcret
  5126  0019BE                     __end_of_precG:
  5127                           	opt callstack 0
  5128                           
  5129 ;; *************** function _precF *****************
  5130 ;; Defined at:
  5131 ;;		line 173 in file "src/print/format.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  str             2   30[COMRAM] PTR unsigned char 
  5134 ;;		 -> my_vprintf@buffer(64), 
  5135 ;;  precision       2   32[COMRAM] PTR int 
  5136 ;;		 -> my_vprintf@prec(2), 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  k               2   45[COMRAM] int 
  5139 ;;  len             2   43[COMRAM] int 
  5140 ;;  i               2   41[COMRAM] int 
  5141 ;;  p               2   39[COMRAM] int 
  5142 ;;  j               2   37[COMRAM] int 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5152 ;;      Params:         4       0       0       0       0       0       0       0       0
  5153 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5154 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5155 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5156 ;;Total ram usage:       17 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    5
  5159 ;; This function calls:
  5160 ;;		_posc
  5161 ;;		_roundStr
  5162 ;;		_searchc
  5163 ;;		_strlen
  5164 ;; This function is called by:
  5165 ;;		_my_vprintf
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text8
  5170  0037BC                     __ptext8:
  5171                           	opt callstack 0
  5172  0037BC                     _precF:
  5173                           	opt callstack 24
  5174  0037BC                     
  5175                           ;src/print/format.c: 174:     int i, j, k;;src/print/format.c: 175:     int len = strlen
      +                          (str);
  5176  0037BC  C01F  F004         	movff	precF@str,strlen@s
  5177  0037C0  C020  F005         	movff	precF@str+1,strlen@s+1
  5178  0037C4  ECD7  F029         	call	_strlen	;wreg free
  5179  0037C8  C004  F02C         	movff	?_strlen,precF@len
  5180  0037CC  C005  F02D         	movff	?_strlen+1,precF@len+1
  5181                           
  5182                           ;src/print/format.c: 176:     int p = posc(str,'.');
  5183  0037D0  C01F  F008         	movff	precF@str,posc@str
  5184  0037D4  C020  F009         	movff	precF@str+1,posc@str+1
  5185  0037D8  0E2E               	movlw	46
  5186  0037DA  6E0A               	movwf	posc@c^0,c
  5187  0037DC  EC26  F027         	call	_posc	;wreg free
  5188  0037E0  C008  F028         	movff	?_posc,precF@p
  5189  0037E4  C009  F029         	movff	?_posc+1,precF@p+1
  5190  0037E8                     
  5191                           ;src/print/format.c: 179:     if ((*precision) < 0)
  5192  0037E8  C021  FFD9         	movff	precF@precision,fsr2l
  5193  0037EC  C022  FFDA         	movff	precF@precision+1,fsr2h
  5194  0037F0  0E01               	movlw	1
  5195  0037F2  BEDB               	btfsc	plusw2,7,c
  5196  0037F4  EF00  F01C         	goto	u8590
  5197  0037F8  EFFE  F01B         	goto	u8591
  5198  0037FC                     u8591:
  5199  0037FC  EF08  F01C         	goto	l7561
  5200  003800                     u8590:
  5201  003800                     
  5202                           ;src/print/format.c: 180:         (*precision) = 4;
  5203  003800  C021  FFD9         	movff	precF@precision,fsr2l
  5204  003804  C022  FFDA         	movff	precF@precision+1,fsr2h
  5205  003808  0E04               	movlw	4
  5206  00380A  6EDE               	movwf	postinc2,c
  5207  00380C  0E00               	movlw	0
  5208  00380E  6EDD               	movwf	postdec2,c
  5209  003810                     l7561:
  5210                           
  5211                           ;src/print/format.c: 182:     i = p + (*precision) + 1;
  5212  003810  C021  FFD9         	movff	precF@precision,fsr2l
  5213  003814  C022  FFDA         	movff	precF@precision+1,fsr2h
  5214  003818  CFDE F023          	movff	postinc2,??_precF
  5215  00381C  CFDD F024          	movff	postdec2,??_precF+1
  5216  003820  5028               	movf	precF@p^0,w,c
  5217  003822  2623               	addwf	??_precF^0,f,c
  5218  003824  5029               	movf	(precF@p+1)^0,w,c
  5219  003826  2224               	addwfc	(??_precF+1)^0,f,c
  5220  003828  0E01               	movlw	1
  5221  00382A  2423               	addwf	??_precF^0,w,c
  5222  00382C  6E2A               	movwf	precF@i^0,c
  5223  00382E  0E00               	movlw	0
  5224  003830  2024               	addwfc	(??_precF+1)^0,w,c
  5225  003832  6E2B               	movwf	(precF@i+1)^0,c
  5226  003834                     
  5227                           ;src/print/format.c: 183:     j = len - i;
  5228  003834  502A               	movf	precF@i^0,w,c
  5229  003836  5C2C               	subwf	precF@len^0,w,c
  5230  003838  6E26               	movwf	precF@j^0,c
  5231  00383A  502B               	movf	(precF@i+1)^0,w,c
  5232  00383C  582D               	subwfb	(precF@len+1)^0,w,c
  5233  00383E  6E27               	movwf	(precF@j+1)^0,c
  5234  003840                     
  5235                           ;src/print/format.c: 186:     if(j > 0) {
  5236  003840  BE27               	btfsc	(precF@j+1)^0,7,c
  5237  003842  EF2B  F01C         	goto	u8601
  5238  003846  5027               	movf	(precF@j+1)^0,w,c
  5239  003848  E108               	bnz	u8600
  5240  00384A  0426               	decf	precF@j^0,w,c
  5241  00384C  A0D8               	btfss	status,0,c
  5242  00384E  EF2B  F01C         	goto	u8601
  5243  003852  EF2D  F01C         	goto	u8600
  5244  003856                     u8601:
  5245  003856  EF88  F01C         	goto	l7581
  5246  00385A                     u8600:
  5247  00385A                     
  5248                           ;src/print/format.c: 187:         roundStr(str, -1, i);
  5249  00385A  C01F  F00E         	movff	precF@str,roundStr@decnum
  5250  00385E  C020  F00F         	movff	precF@str+1,roundStr@decnum+1
  5251  003862  0EFF               	movlw	255
  5252  003864  6E11               	movwf	(roundStr@e+1)^0,c
  5253  003866  6810               	setf	roundStr@e^0,c
  5254  003868  C02A  F012         	movff	precF@i,roundStr@prn
  5255  00386C  C02B  F013         	movff	precF@i+1,roundStr@prn+1
  5256  003870  ECBA  F014         	call	_roundStr	;wreg free
  5257  003874                     
  5258                           ;src/print/format.c: 188:         i = ((*precision) == 0 && numeral == 0)? p : (p + (*pr
      +                          ecision) + 1);
  5259  003874  C021  FFD9         	movff	precF@precision,fsr2l
  5260  003878  C022  FFDA         	movff	precF@precision+1,fsr2h
  5261  00387C  50DE               	movf	postinc2,w,c
  5262  00387E  10DE               	iorwf	postinc2,w,c
  5263  003880  A4D8               	btfss	status,2,c
  5264  003882  EF45  F01C         	goto	u8611
  5265  003886  EF47  F01C         	goto	u8610
  5266  00388A                     u8611:
  5267  00388A  EF4F  F01C         	goto	l7573
  5268  00388E                     u8610:
  5269  00388E  503B               	movf	_numeral^0,w,c
  5270  003890  B4D8               	btfsc	status,2,c
  5271  003892  EF4D  F01C         	goto	u8621
  5272  003896  EF4F  F01C         	goto	u8620
  5273  00389A                     u8621:
  5274  00389A  EF63  F01C         	goto	l448
  5275  00389E                     u8620:
  5276  00389E                     l7573:
  5277  00389E  C021  FFD9         	movff	precF@precision,fsr2l
  5278  0038A2  C022  FFDA         	movff	precF@precision+1,fsr2h
  5279  0038A6  CFDE F023          	movff	postinc2,??_precF
  5280  0038AA  CFDD F024          	movff	postdec2,??_precF+1
  5281  0038AE  5028               	movf	precF@p^0,w,c
  5282  0038B0  2623               	addwf	??_precF^0,f,c
  5283  0038B2  5029               	movf	(precF@p+1)^0,w,c
  5284  0038B4  2224               	addwfc	(??_precF+1)^0,f,c
  5285  0038B6  0E01               	movlw	1
  5286  0038B8  2423               	addwf	??_precF^0,w,c
  5287  0038BA  6E2A               	movwf	precF@i^0,c
  5288  0038BC  0E00               	movlw	0
  5289  0038BE  2024               	addwfc	(??_precF+1)^0,w,c
  5290  0038C0  6E2B               	movwf	(precF@i+1)^0,c
  5291  0038C2  EF67  F01C         	goto	l450
  5292  0038C6                     l448:
  5293  0038C6  C028  F02A         	movff	precF@p,precF@i
  5294  0038CA  C029  F02B         	movff	precF@p+1,precF@i+1
  5295  0038CE                     l450:
  5296                           
  5297                           ;src/print/format.c: 189:         for (k = i; k < len; k++)
  5298  0038CE  C02A  F02E         	movff	precF@i,precF@k
  5299  0038D2  C02B  F02F         	movff	precF@i+1,precF@k+1
  5300  0038D6  EF77  F01C         	goto	l7579
  5301  0038DA                     l7575:
  5302                           
  5303                           ;src/print/format.c: 190:             str[k] = 0;
  5304  0038DA  502E               	movf	precF@k^0,w,c
  5305  0038DC  241F               	addwf	precF@str^0,w,c
  5306  0038DE  6ED9               	movwf	fsr2l,c
  5307  0038E0  502F               	movf	(precF@k+1)^0,w,c
  5308  0038E2  2020               	addwfc	(precF@str+1)^0,w,c
  5309  0038E4  6EDA               	movwf	fsr2h,c
  5310  0038E6  0E00               	movlw	0
  5311  0038E8  6EDF               	movwf	indf2,c
  5312  0038EA  4A2E               	infsnz	precF@k^0,f,c
  5313  0038EC  2A2F               	incf	(precF@k+1)^0,f,c
  5314  0038EE                     l7579:
  5315  0038EE  502C               	movf	precF@len^0,w,c
  5316  0038F0  5C2E               	subwf	precF@k^0,w,c
  5317  0038F2  502F               	movf	(precF@k+1)^0,w,c
  5318  0038F4  0A80               	xorlw	128
  5319  0038F6  6E23               	movwf	??_precF^0,c
  5320  0038F8  502D               	movf	(precF@len+1)^0,w,c
  5321  0038FA  0A80               	xorlw	128
  5322  0038FC  5823               	subwfb	??_precF^0,w,c
  5323  0038FE  A0D8               	btfss	status,0,c
  5324  003900  EF84  F01C         	goto	u8631
  5325  003904  EF86  F01C         	goto	u8630
  5326  003908                     u8631:
  5327  003908  EF6D  F01C         	goto	l7575
  5328  00390C                     u8630:
  5329  00390C  EFC4  F01C         	goto	l461
  5330  003910                     l7581:
  5331  003910  BE27               	btfsc	(precF@j+1)^0,7,c
  5332  003912  EF8F  F01C         	goto	u8640
  5333  003916  EF8D  F01C         	goto	u8641
  5334  00391A                     u8641:
  5335  00391A  EFC4  F01C         	goto	l461
  5336  00391E                     u8640:
  5337  00391E  C01F  F008         	movff	precF@str,searchc@str
  5338  003922  C020  F009         	movff	precF@str+1,searchc@str+1
  5339  003926  0E2E               	movlw	46
  5340  003928  6E0A               	movwf	searchc@c^0,c
  5341  00392A  ECB3  F027         	call	_searchc	;wreg free
  5342  00392E  0900               	iorlw	0
  5343  003930  B4D8               	btfsc	status,2,c
  5344  003932  EF9D  F01C         	goto	u8651
  5345  003936  EF9F  F01C         	goto	u8650
  5346  00393A                     u8651:
  5347  00393A  EFC4  F01C         	goto	l461
  5348  00393E                     u8650:
  5349  00393E                     
  5350                           ;src/print/format.c: 194:         for (k = len; k < len + (j * -1); k++)
  5351  00393E  C02C  F02E         	movff	precF@len,precF@k
  5352  003942  C02D  F02F         	movff	precF@len+1,precF@k+1
  5353  003946  EFAF  F01C         	goto	l7591
  5354  00394A                     l7587:
  5355                           
  5356                           ;src/print/format.c: 195:             str[k] = '0';
  5357  00394A  502E               	movf	precF@k^0,w,c
  5358  00394C  241F               	addwf	precF@str^0,w,c
  5359  00394E  6ED9               	movwf	fsr2l,c
  5360  003950  502F               	movf	(precF@k+1)^0,w,c
  5361  003952  2020               	addwfc	(precF@str+1)^0,w,c
  5362  003954  6EDA               	movwf	fsr2h,c
  5363  003956  0E30               	movlw	48
  5364  003958  6EDF               	movwf	indf2,c
  5365  00395A  4A2E               	infsnz	precF@k^0,f,c
  5366  00395C  2A2F               	incf	(precF@k+1)^0,f,c
  5367  00395E                     l7591:
  5368  00395E  5026               	movf	precF@j^0,w,c
  5369  003960  5C2C               	subwf	precF@len^0,w,c
  5370  003962  6E23               	movwf	??_precF^0,c
  5371  003964  5027               	movf	(precF@j+1)^0,w,c
  5372  003966  582D               	subwfb	(precF@len+1)^0,w,c
  5373  003968  6E24               	movwf	(??_precF+1)^0,c
  5374  00396A  5023               	movf	??_precF^0,w,c
  5375  00396C  5C2E               	subwf	precF@k^0,w,c
  5376  00396E  502F               	movf	(precF@k+1)^0,w,c
  5377  003970  0A80               	xorlw	128
  5378  003972  6E25               	movwf	(??_precF+2)^0,c
  5379  003974  5024               	movf	(??_precF+1)^0,w,c
  5380  003976  0A80               	xorlw	128
  5381  003978  5825               	subwfb	(??_precF+2)^0,w,c
  5382  00397A  A0D8               	btfss	status,0,c
  5383  00397C  EFC2  F01C         	goto	u8661
  5384  003980  EFC4  F01C         	goto	u8660
  5385  003984                     u8661:
  5386  003984  EFA5  F01C         	goto	l7587
  5387  003988                     u8660:
  5388  003988                     l461:
  5389  003988  0012               	return		;funcret
  5390  00398A                     __end_of_precF:
  5391                           	opt callstack 0
  5392                           
  5393 ;; *************** function _precE *****************
  5394 ;; Defined at:
  5395 ;;		line 202 in file "src/print/format.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  str             2   30[COMRAM] PTR unsigned char 
  5398 ;;		 -> my_vprintf@buffer(64), 
  5399 ;;  precision       2   32[COMRAM] PTR int 
  5400 ;;		 -> my_vprintf@prec(2), 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  k               2   46[COMRAM] int 
  5403 ;;  j               2   44[COMRAM] int 
  5404 ;;  i               2   42[COMRAM] int 
  5405 ;;  posE            2   40[COMRAM] int 
  5406 ;;  len             2   38[COMRAM] int 
  5407 ;;  p               2   36[COMRAM] int 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5417 ;;      Params:         4       0       0       0       0       0       0       0       0
  5418 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5419 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5420 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5421 ;;Total ram usage:       18 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    5
  5424 ;; This function calls:
  5425 ;;		_posc
  5426 ;;		_roundStr
  5427 ;;		_strlen
  5428 ;; This function is called by:
  5429 ;;		_my_vprintf
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text9
  5434  0033C6                     __ptext9:
  5435                           	opt callstack 0
  5436  0033C6                     _precE:
  5437                           	opt callstack 24
  5438  0033C6                     
  5439                           ;src/print/format.c: 203:     int i, j, k;;src/print/format.c: 204:     int len = strlen
      +                          (str);
  5440  0033C6  C01F  F004         	movff	precE@str,strlen@s
  5441  0033CA  C020  F005         	movff	precE@str+1,strlen@s+1
  5442  0033CE  ECD7  F029         	call	_strlen	;wreg free
  5443  0033D2  C004  F027         	movff	?_strlen,precE@len
  5444  0033D6  C005  F028         	movff	?_strlen+1,precE@len+1
  5445                           
  5446                           ;src/print/format.c: 205:     int posE = posc(str,'e');
  5447  0033DA  C01F  F008         	movff	precE@str,posc@str
  5448  0033DE  C020  F009         	movff	precE@str+1,posc@str+1
  5449  0033E2  0E65               	movlw	101
  5450  0033E4  6E0A               	movwf	posc@c^0,c
  5451  0033E6  EC26  F027         	call	_posc	;wreg free
  5452  0033EA  C008  F029         	movff	?_posc,precE@posE
  5453  0033EE  C009  F02A         	movff	?_posc+1,precE@posE+1
  5454                           
  5455                           ;src/print/format.c: 206:     int p = posc(str,'.');
  5456  0033F2  C01F  F008         	movff	precE@str,posc@str
  5457  0033F6  C020  F009         	movff	precE@str+1,posc@str+1
  5458  0033FA  0E2E               	movlw	46
  5459  0033FC  6E0A               	movwf	posc@c^0,c
  5460  0033FE  EC26  F027         	call	_posc	;wreg free
  5461  003402  C008  F025         	movff	?_posc,precE@p
  5462  003406  C009  F026         	movff	?_posc+1,precE@p+1
  5463  00340A                     
  5464                           ;src/print/format.c: 209:     if ((*precision) < 0)
  5465  00340A  C021  FFD9         	movff	precE@precision,fsr2l
  5466  00340E  C022  FFDA         	movff	precE@precision+1,fsr2h
  5467  003412  0E01               	movlw	1
  5468  003414  BEDB               	btfsc	plusw2,7,c
  5469  003416  EF11  F01A         	goto	u8670
  5470  00341A  EF0F  F01A         	goto	u8671
  5471  00341E                     u8671:
  5472  00341E  EF19  F01A         	goto	l7599
  5473  003422                     u8670:
  5474  003422                     
  5475                           ;src/print/format.c: 210:         (*precision) = 4;
  5476  003422  C021  FFD9         	movff	precE@precision,fsr2l
  5477  003426  C022  FFDA         	movff	precE@precision+1,fsr2h
  5478  00342A  0E04               	movlw	4
  5479  00342C  6EDE               	movwf	postinc2,c
  5480  00342E  0E00               	movlw	0
  5481  003430  6EDD               	movwf	postdec2,c
  5482  003432                     l7599:
  5483                           
  5484                           ;src/print/format.c: 212:     i = p + (*precision) + 1;
  5485  003432  C021  FFD9         	movff	precE@precision,fsr2l
  5486  003436  C022  FFDA         	movff	precE@precision+1,fsr2h
  5487  00343A  CFDE F023          	movff	postinc2,??_precE
  5488  00343E  CFDD F024          	movff	postdec2,??_precE+1
  5489  003442  5025               	movf	precE@p^0,w,c
  5490  003444  2623               	addwf	??_precE^0,f,c
  5491  003446  5026               	movf	(precE@p+1)^0,w,c
  5492  003448  2224               	addwfc	(??_precE+1)^0,f,c
  5493  00344A  0E01               	movlw	1
  5494  00344C  2423               	addwf	??_precE^0,w,c
  5495  00344E  6E2B               	movwf	precE@i^0,c
  5496  003450  0E00               	movlw	0
  5497  003452  2024               	addwfc	(??_precE+1)^0,w,c
  5498  003454  6E2C               	movwf	(precE@i+1)^0,c
  5499  003456                     
  5500                           ;src/print/format.c: 213:     j = posE - i;
  5501  003456  502B               	movf	precE@i^0,w,c
  5502  003458  5C29               	subwf	precE@posE^0,w,c
  5503  00345A  6E2D               	movwf	precE@j^0,c
  5504  00345C  502C               	movf	(precE@i+1)^0,w,c
  5505  00345E  582A               	subwfb	(precE@posE+1)^0,w,c
  5506  003460  6E2E               	movwf	(precE@j+1)^0,c
  5507  003462                     
  5508                           ;src/print/format.c: 216:     if (j > 0) {
  5509  003462  BE2E               	btfsc	(precE@j+1)^0,7,c
  5510  003464  EF3C  F01A         	goto	u8681
  5511  003468  502E               	movf	(precE@j+1)^0,w,c
  5512  00346A  E108               	bnz	u8680
  5513  00346C  042D               	decf	precE@j^0,w,c
  5514  00346E  A0D8               	btfss	status,0,c
  5515  003470  EF3C  F01A         	goto	u8681
  5516  003474  EF3E  F01A         	goto	u8680
  5517  003478                     u8681:
  5518  003478  EF93  F01A         	goto	l7621
  5519  00347C                     u8680:
  5520  00347C                     
  5521                           ;src/print/format.c: 217:         roundStr(str, posE, i);
  5522  00347C  C01F  F00E         	movff	precE@str,roundStr@decnum
  5523  003480  C020  F00F         	movff	precE@str+1,roundStr@decnum+1
  5524  003484  C029  F010         	movff	precE@posE,roundStr@e
  5525  003488  C02A  F011         	movff	precE@posE+1,roundStr@e+1
  5526  00348C  C02B  F012         	movff	precE@i,roundStr@prn
  5527  003490  C02C  F013         	movff	precE@i+1,roundStr@prn+1
  5528  003494  ECBA  F014         	call	_roundStr	;wreg free
  5529  003498                     
  5530                           ;src/print/format.c: 218:         if((*precision) == 0 && numeral == 0){
  5531  003498  C021  FFD9         	movff	precE@precision,fsr2l
  5532  00349C  C022  FFDA         	movff	precE@precision+1,fsr2h
  5533  0034A0  50DE               	movf	postinc2,w,c
  5534  0034A2  10DE               	iorwf	postinc2,w,c
  5535  0034A4  A4D8               	btfss	status,2,c
  5536  0034A6  EF57  F01A         	goto	u8691
  5537  0034AA  EF59  F01A         	goto	u8690
  5538  0034AE                     u8691:
  5539  0034AE  EF66  F01A         	goto	l7613
  5540  0034B2                     u8690:
  5541  0034B2  503B               	movf	_numeral^0,w,c
  5542  0034B4  A4D8               	btfss	status,2,c
  5543  0034B6  EF5F  F01A         	goto	u8701
  5544  0034BA  EF61  F01A         	goto	u8700
  5545  0034BE                     u8701:
  5546  0034BE  EF66  F01A         	goto	l7613
  5547  0034C2                     u8700:
  5548  0034C2                     
  5549                           ;src/print/format.c: 219:             i--;
  5550  0034C2  062B               	decf	precE@i^0,f,c
  5551  0034C4  A0D8               	btfss	status,0,c
  5552  0034C6  062C               	decf	(precE@i+1)^0,f,c
  5553                           
  5554                           ;src/print/format.c: 220:             j++;
  5555  0034C8  4A2D               	infsnz	precE@j^0,f,c
  5556  0034CA  2A2E               	incf	(precE@j+1)^0,f,c
  5557  0034CC                     l7613:
  5558                           
  5559                           ;src/print/format.c: 222:         for (k = i; k < len; k++)
  5560  0034CC  C02B  F02F         	movff	precE@i,precE@k
  5561  0034D0  C02C  F030         	movff	precE@i+1,precE@k+1
  5562  0034D4  EF82  F01A         	goto	l7619
  5563  0034D8                     l7615:
  5564                           
  5565                           ;src/print/format.c: 223:             str[k] = str[k+j];
  5566  0034D8  502F               	movf	precE@k^0,w,c
  5567  0034DA  241F               	addwf	precE@str^0,w,c
  5568  0034DC  6E23               	movwf	??_precE^0,c
  5569  0034DE  5030               	movf	(precE@k+1)^0,w,c
  5570  0034E0  2020               	addwfc	(precE@str+1)^0,w,c
  5571  0034E2  6E24               	movwf	(??_precE+1)^0,c
  5572  0034E4  502D               	movf	precE@j^0,w,c
  5573  0034E6  2423               	addwf	??_precE^0,w,c
  5574  0034E8  6ED9               	movwf	fsr2l,c
  5575  0034EA  502E               	movf	(precE@j+1)^0,w,c
  5576  0034EC  2024               	addwfc	(??_precE+1)^0,w,c
  5577  0034EE  6EDA               	movwf	fsr2h,c
  5578  0034F0  502F               	movf	precE@k^0,w,c
  5579  0034F2  241F               	addwf	precE@str^0,w,c
  5580  0034F4  6EE1               	movwf	fsr1l,c
  5581  0034F6  5030               	movf	(precE@k+1)^0,w,c
  5582  0034F8  2020               	addwfc	(precE@str+1)^0,w,c
  5583  0034FA  6EE2               	movwf	fsr1h,c
  5584  0034FC  CFDF FFE7          	movff	indf2,indf1
  5585  003500  4A2F               	infsnz	precE@k^0,f,c
  5586  003502  2A30               	incf	(precE@k+1)^0,f,c
  5587  003504                     l7619:
  5588  003504  5027               	movf	precE@len^0,w,c
  5589  003506  5C2F               	subwf	precE@k^0,w,c
  5590  003508  5030               	movf	(precE@k+1)^0,w,c
  5591  00350A  0A80               	xorlw	128
  5592  00350C  6E23               	movwf	??_precE^0,c
  5593  00350E  5028               	movf	(precE@len+1)^0,w,c
  5594  003510  0A80               	xorlw	128
  5595  003512  5823               	subwfb	??_precE^0,w,c
  5596  003514  A0D8               	btfss	status,0,c
  5597  003516  EF8F  F01A         	goto	u8711
  5598  00351A  EF91  F01A         	goto	u8710
  5599  00351E                     u8711:
  5600  00351E  EF6C  F01A         	goto	l7615
  5601  003522                     u8710:
  5602  003522  EFE7  F01A         	goto	l477
  5603  003526                     l7621:
  5604  003526  BE2E               	btfsc	(precE@j+1)^0,7,c
  5605  003528  EF9A  F01A         	goto	u8720
  5606  00352C  EF98  F01A         	goto	u8721
  5607  003530                     u8721:
  5608  003530  EFE7  F01A         	goto	l477
  5609  003534                     u8720:
  5610  003534                     
  5611                           ;src/print/format.c: 227:         for (k = len - 1 + (j * -1); k >= posE; k--) {
  5612  003534  502D               	movf	precE@j^0,w,c
  5613  003536  5C27               	subwf	precE@len^0,w,c
  5614  003538  6E23               	movwf	??_precE^0,c
  5615  00353A  502E               	movf	(precE@j+1)^0,w,c
  5616  00353C  5828               	subwfb	(precE@len+1)^0,w,c
  5617  00353E  6E24               	movwf	(??_precE+1)^0,c
  5618  003540  0EFF               	movlw	255
  5619  003542  2423               	addwf	??_precE^0,w,c
  5620  003544  6E2F               	movwf	precE@k^0,c
  5621  003546  0EFF               	movlw	255
  5622  003548  2024               	addwfc	(??_precE+1)^0,w,c
  5623  00354A  6E30               	movwf	(precE@k+1)^0,c
  5624  00354C  EFD8  F01A         	goto	l7633
  5625  003550                     l7625:
  5626                           
  5627                           ;src/print/format.c: 228:             if (k >= i)
  5628  003550  502B               	movf	precE@i^0,w,c
  5629  003552  5C2F               	subwf	precE@k^0,w,c
  5630  003554  5030               	movf	(precE@k+1)^0,w,c
  5631  003556  0A80               	xorlw	128
  5632  003558  6E23               	movwf	??_precE^0,c
  5633  00355A  502C               	movf	(precE@i+1)^0,w,c
  5634  00355C  0A80               	xorlw	128
  5635  00355E  5823               	subwfb	??_precE^0,w,c
  5636  003560  A0D8               	btfss	status,0,c
  5637  003562  EFB5  F01A         	goto	u8731
  5638  003566  EFB7  F01A         	goto	u8730
  5639  00356A                     u8731:
  5640  00356A  EFCD  F01A         	goto	l7629
  5641  00356E                     u8730:
  5642  00356E                     
  5643                           ;src/print/format.c: 229:                 str[k] = str[k+j];
  5644  00356E  502F               	movf	precE@k^0,w,c
  5645  003570  241F               	addwf	precE@str^0,w,c
  5646  003572  6E23               	movwf	??_precE^0,c
  5647  003574  5030               	movf	(precE@k+1)^0,w,c
  5648  003576  2020               	addwfc	(precE@str+1)^0,w,c
  5649  003578  6E24               	movwf	(??_precE+1)^0,c
  5650  00357A  502D               	movf	precE@j^0,w,c
  5651  00357C  2423               	addwf	??_precE^0,w,c
  5652  00357E  6ED9               	movwf	fsr2l,c
  5653  003580  502E               	movf	(precE@j+1)^0,w,c
  5654  003582  2024               	addwfc	(??_precE+1)^0,w,c
  5655  003584  6EDA               	movwf	fsr2h,c
  5656  003586  502F               	movf	precE@k^0,w,c
  5657  003588  241F               	addwf	precE@str^0,w,c
  5658  00358A  6EE1               	movwf	fsr1l,c
  5659  00358C  5030               	movf	(precE@k+1)^0,w,c
  5660  00358E  2020               	addwfc	(precE@str+1)^0,w,c
  5661  003590  6EE2               	movwf	fsr1h,c
  5662  003592  CFDF FFE7          	movff	indf2,indf1
  5663  003596  EFD5  F01A         	goto	l7631
  5664  00359A                     l7629:
  5665                           
  5666                           ;src/print/format.c: 231:                 str[k] = '0';
  5667  00359A  502F               	movf	precE@k^0,w,c
  5668  00359C  241F               	addwf	precE@str^0,w,c
  5669  00359E  6ED9               	movwf	fsr2l,c
  5670  0035A0  5030               	movf	(precE@k+1)^0,w,c
  5671  0035A2  2020               	addwfc	(precE@str+1)^0,w,c
  5672  0035A4  6EDA               	movwf	fsr2h,c
  5673  0035A6  0E30               	movlw	48
  5674  0035A8  6EDF               	movwf	indf2,c
  5675  0035AA                     l7631:
  5676                           
  5677                           ;src/print/format.c: 232:         }
  5678  0035AA  062F               	decf	precE@k^0,f,c
  5679  0035AC  A0D8               	btfss	status,0,c
  5680  0035AE  0630               	decf	(precE@k+1)^0,f,c
  5681  0035B0                     l7633:
  5682  0035B0  5029               	movf	precE@posE^0,w,c
  5683  0035B2  5C2F               	subwf	precE@k^0,w,c
  5684  0035B4  5030               	movf	(precE@k+1)^0,w,c
  5685  0035B6  0A80               	xorlw	128
  5686  0035B8  6E23               	movwf	??_precE^0,c
  5687  0035BA  502A               	movf	(precE@posE+1)^0,w,c
  5688  0035BC  0A80               	xorlw	128
  5689  0035BE  5823               	subwfb	??_precE^0,w,c
  5690  0035C0  B0D8               	btfsc	status,0,c
  5691  0035C2  EFE5  F01A         	goto	u8741
  5692  0035C6  EFE7  F01A         	goto	u8740
  5693  0035CA                     u8741:
  5694  0035CA  EFA8  F01A         	goto	l7625
  5695  0035CE                     u8740:
  5696  0035CE                     l477:
  5697  0035CE  0012               	return		;funcret
  5698  0035D0                     __end_of_precE:
  5699                           	opt callstack 0
  5700                           
  5701 ;; *************** function _roundStr *****************
  5702 ;; Defined at:
  5703 ;;		line 38 in file "src/print/format.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  decnum          2   13[COMRAM] PTR unsigned char 
  5706 ;;		 -> my_vprintf@buffer(64), 
  5707 ;;  e               2   15[COMRAM] int 
  5708 ;;  prn             2   17[COMRAM] int 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  k               2   28[COMRAM] int 
  5711 ;;  i               2   26[COMRAM] int 
  5712 ;;  p               2   24[COMRAM] int 
  5713 ;;  len             2   22[COMRAM] int 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  2   13[COMRAM] int 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5723 ;;      Params:         6       0       0       0       0       0       0       0       0
  5724 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5725 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5726 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5727 ;;Total ram usage:       17 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    4
  5730 ;; This function calls:
  5731 ;;		_posc
  5732 ;;		_strlen
  5733 ;; This function is called by:
  5734 ;;		_precF
  5735 ;;		_precE
  5736 ;;		_precG
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text10
  5741  002974                     __ptext10:
  5742                           	opt callstack 0
  5743  002974                     _roundStr:
  5744                           	opt callstack 24
  5745  002974                     
  5746                           ;src/print/format.c: 39:     int len = strlen(decnum);
  5747  002974  C00E  F004         	movff	roundStr@decnum,strlen@s
  5748  002978  C00F  F005         	movff	roundStr@decnum+1,strlen@s+1
  5749  00297C  ECD7  F029         	call	_strlen	;wreg free
  5750  002980  C004  F017         	movff	?_strlen,roundStr@len
  5751  002984  C005  F018         	movff	?_strlen+1,roundStr@len+1
  5752                           
  5753                           ;src/print/format.c: 40:     int p = posc(decnum,'.');
  5754  002988  C00E  F008         	movff	roundStr@decnum,posc@str
  5755  00298C  C00F  F009         	movff	roundStr@decnum+1,posc@str+1
  5756  002990  0E2E               	movlw	46
  5757  002992  6E0A               	movwf	posc@c^0,c
  5758  002994  EC26  F027         	call	_posc	;wreg free
  5759  002998  C008  F019         	movff	?_posc,roundStr@p
  5760  00299C  C009  F01A         	movff	?_posc+1,roundStr@p+1
  5761  0029A0                     
  5762                           ;src/print/format.c: 41:     int i, k;;src/print/format.c: 52:     for (k = prn - 1; k >
      +                          = 0; k--) {
  5763  0029A0  0EFF               	movlw	255
  5764  0029A2  2412               	addwf	roundStr@prn^0,w,c
  5765  0029A4  6E1D               	movwf	roundStr@k^0,c
  5766  0029A6  0EFF               	movlw	255
  5767  0029A8  2013               	addwfc	(roundStr@prn+1)^0,w,c
  5768  0029AA  6E1E               	movwf	(roundStr@k+1)^0,c
  5769  0029AC                     l7169:
  5770  0029AC  BE1E               	btfsc	(roundStr@k+1)^0,7,c
  5771  0029AE  EFDD  F014         	goto	u7960
  5772  0029B2  EFDB  F014         	goto	u7961
  5773  0029B6                     u7961:
  5774  0029B6  EFDF  F014         	goto	l7173
  5775  0029BA                     u7960:
  5776  0029BA  EF4E  F015         	goto	l7193
  5777  0029BE                     l7173:
  5778                           
  5779                           ;src/print/format.c: 53:         if (decnum[k] < '9' && decnum[k] != '.') {
  5780  0029BE  501D               	movf	roundStr@k^0,w,c
  5781  0029C0  240E               	addwf	roundStr@decnum^0,w,c
  5782  0029C2  6ED9               	movwf	fsr2l,c
  5783  0029C4  501E               	movf	(roundStr@k+1)^0,w,c
  5784  0029C6  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5785  0029C8  6EDA               	movwf	fsr2h,c
  5786  0029CA  0E39               	movlw	57
  5787  0029CC  60DF               	cpfslt	indf2,c
  5788  0029CE  EFEB  F014         	goto	u7971
  5789  0029D2  EFED  F014         	goto	u7970
  5790  0029D6                     u7971:
  5791  0029D6  EF49  F015         	goto	l7189
  5792  0029DA                     u7970:
  5793  0029DA  501D               	movf	roundStr@k^0,w,c
  5794  0029DC  240E               	addwf	roundStr@decnum^0,w,c
  5795  0029DE  6ED9               	movwf	fsr2l,c
  5796  0029E0  501E               	movf	(roundStr@k+1)^0,w,c
  5797  0029E2  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5798  0029E4  6EDA               	movwf	fsr2h,c
  5799  0029E6  0E2E               	movlw	46
  5800  0029E8  18DE               	xorwf	postinc2,w,c
  5801  0029EA  B4D8               	btfsc	status,2,c
  5802  0029EC  EFFA  F014         	goto	u7981
  5803  0029F0  EFFC  F014         	goto	u7980
  5804  0029F4                     u7981:
  5805  0029F4  EF49  F015         	goto	l7189
  5806  0029F8                     u7980:
  5807  0029F8                     
  5808                           ;src/print/format.c: 54:             if (decnum[prn] >= '5') {
  5809  0029F8  5012               	movf	roundStr@prn^0,w,c
  5810  0029FA  240E               	addwf	roundStr@decnum^0,w,c
  5811  0029FC  6ED9               	movwf	fsr2l,c
  5812  0029FE  5013               	movf	(roundStr@prn+1)^0,w,c
  5813  002A00  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5814  002A02  6EDA               	movwf	fsr2h,c
  5815  002A04  0E34               	movlw	52
  5816  002A06  64DF               	cpfsgt	indf2,c
  5817  002A08  EF08  F015         	goto	u7991
  5818  002A0C  EF0A  F015         	goto	u7990
  5819  002A10                     u7991:
  5820  002A10  EF4E  F015         	goto	l7193
  5821  002A14                     u7990:
  5822  002A14                     
  5823                           ;src/print/format.c: 55:                 decnum[k]++;
  5824  002A14  501D               	movf	roundStr@k^0,w,c
  5825  002A16  240E               	addwf	roundStr@decnum^0,w,c
  5826  002A18  6ED9               	movwf	fsr2l,c
  5827  002A1A  501E               	movf	(roundStr@k+1)^0,w,c
  5828  002A1C  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5829  002A1E  6EDA               	movwf	fsr2h,c
  5830  002A20  2ADF               	incf	indf2,f,c
  5831                           
  5832                           ;src/print/format.c: 56:                 while (k < prn) {
  5833  002A22  EF38  F015         	goto	l7187
  5834  002A26                     l7181:
  5835                           
  5836                           ;src/print/format.c: 57:                     if (decnum[k+1] != '.')
  5837  002A26  501D               	movf	roundStr@k^0,w,c
  5838  002A28  240E               	addwf	roundStr@decnum^0,w,c
  5839  002A2A  6E14               	movwf	??_roundStr^0,c
  5840  002A2C  501E               	movf	(roundStr@k+1)^0,w,c
  5841  002A2E  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5842  002A30  6E15               	movwf	(??_roundStr+1)^0,c
  5843  002A32  0E01               	movlw	1
  5844  002A34  2414               	addwf	??_roundStr^0,w,c
  5845  002A36  6ED9               	movwf	fsr2l,c
  5846  002A38  0E00               	movlw	0
  5847  002A3A  2015               	addwfc	(??_roundStr+1)^0,w,c
  5848  002A3C  6EDA               	movwf	fsr2h,c
  5849  002A3E  0E2E               	movlw	46
  5850  002A40  18DE               	xorwf	postinc2,w,c
  5851  002A42  B4D8               	btfsc	status,2,c
  5852  002A44  EF26  F015         	goto	u8001
  5853  002A48  EF28  F015         	goto	u8000
  5854  002A4C                     u8001:
  5855  002A4C  EF36  F015         	goto	l7185
  5856  002A50                     u8000:
  5857  002A50                     
  5858                           ;src/print/format.c: 58:                         decnum[k+1]='0';
  5859  002A50  501D               	movf	roundStr@k^0,w,c
  5860  002A52  240E               	addwf	roundStr@decnum^0,w,c
  5861  002A54  6E14               	movwf	??_roundStr^0,c
  5862  002A56  501E               	movf	(roundStr@k+1)^0,w,c
  5863  002A58  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5864  002A5A  6E15               	movwf	(??_roundStr+1)^0,c
  5865  002A5C  0E01               	movlw	1
  5866  002A5E  2414               	addwf	??_roundStr^0,w,c
  5867  002A60  6ED9               	movwf	fsr2l,c
  5868  002A62  0E00               	movlw	0
  5869  002A64  2015               	addwfc	(??_roundStr+1)^0,w,c
  5870  002A66  6EDA               	movwf	fsr2h,c
  5871  002A68  0E30               	movlw	48
  5872  002A6A  6EDF               	movwf	indf2,c
  5873  002A6C                     l7185:
  5874                           
  5875                           ;src/print/format.c: 59:                     k++;
  5876  002A6C  4A1D               	infsnz	roundStr@k^0,f,c
  5877  002A6E  2A1E               	incf	(roundStr@k+1)^0,f,c
  5878  002A70                     l7187:
  5879                           
  5880                           ;src/print/format.c: 56:                 while (k < prn) {
  5881  002A70  5012               	movf	roundStr@prn^0,w,c
  5882  002A72  5C1D               	subwf	roundStr@k^0,w,c
  5883  002A74  501E               	movf	(roundStr@k+1)^0,w,c
  5884  002A76  0A80               	xorlw	128
  5885  002A78  6E14               	movwf	??_roundStr^0,c
  5886  002A7A  5013               	movf	(roundStr@prn+1)^0,w,c
  5887  002A7C  0A80               	xorlw	128
  5888  002A7E  5814               	subwfb	??_roundStr^0,w,c
  5889  002A80  A0D8               	btfss	status,0,c
  5890  002A82  EF45  F015         	goto	u8011
  5891  002A86  EF47  F015         	goto	u8010
  5892  002A8A                     u8011:
  5893  002A8A  EF13  F015         	goto	l7181
  5894  002A8E                     u8010:
  5895  002A8E  EF4E  F015         	goto	l7193
  5896  002A92                     l7189:
  5897                           
  5898                           ;src/print/format.c: 64:     }
  5899  002A92  061D               	decf	roundStr@k^0,f,c
  5900  002A94  A0D8               	btfss	status,0,c
  5901  002A96  061E               	decf	(roundStr@k+1)^0,f,c
  5902  002A98  EFD6  F014         	goto	l7169
  5903  002A9C                     l7193:
  5904                           
  5905                           ;src/print/format.c: 67:     if (k == -1 && e == -1) {
  5906  002A9C  281D               	incf	roundStr@k^0,w,c
  5907  002A9E  E106               	bnz	u8021
  5908  002AA0  281E               	incf	(roundStr@k+1)^0,w,c
  5909  002AA2  A4D8               	btfss	status,2,c
  5910  002AA4  EF56  F015         	goto	u8021
  5911  002AA8  EF58  F015         	goto	u8020
  5912  002AAC                     u8021:
  5913  002AAC  EFE0  F015         	goto	l7225
  5914  002AB0                     u8020:
  5915  002AB0  2810               	incf	roundStr@e^0,w,c
  5916  002AB2  E106               	bnz	u8031
  5917  002AB4  2811               	incf	(roundStr@e+1)^0,w,c
  5918  002AB6  A4D8               	btfss	status,2,c
  5919  002AB8  EF60  F015         	goto	u8031
  5920  002ABC  EF62  F015         	goto	u8030
  5921  002AC0                     u8031:
  5922  002AC0  EFE0  F015         	goto	l7225
  5923  002AC4                     u8030:
  5924  002AC4                     
  5925                           ;src/print/format.c: 68:         if (decnum[0] == '+' || decnum[0] == '-') {
  5926  002AC4  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  5927  002AC8  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  5928  002ACC  0E2B               	movlw	43
  5929  002ACE  18DE               	xorwf	postinc2,w,c
  5930  002AD0  B4D8               	btfsc	status,2,c
  5931  002AD2  EF6D  F015         	goto	u8041
  5932  002AD6  EF6F  F015         	goto	u8040
  5933  002ADA                     u8041:
  5934  002ADA  EF7C  F015         	goto	l7201
  5935  002ADE                     u8040:
  5936  002ADE  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  5937  002AE2  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  5938  002AE6  0E2D               	movlw	45
  5939  002AE8  18DE               	xorwf	postinc2,w,c
  5940  002AEA  A4D8               	btfss	status,2,c
  5941  002AEC  EF7A  F015         	goto	u8051
  5942  002AF0  EF7C  F015         	goto	u8050
  5943  002AF4                     u8051:
  5944  002AF4  EF8A  F015         	goto	l7205
  5945  002AF8                     u8050:
  5946  002AF8                     l7201:
  5947                           
  5948                           ;src/print/format.c: 69:             decnum[1] = '1';
  5949  002AF8  EE20 F001          	lfsr	2,1
  5950  002AFC  500E               	movf	roundStr@decnum^0,w,c
  5951  002AFE  26D9               	addwf	fsr2l,f,c
  5952  002B00  500F               	movf	(roundStr@decnum+1)^0,w,c
  5953  002B02  22DA               	addwfc	fsr2h,f,c
  5954  002B04  0E31               	movlw	49
  5955  002B06  6EDF               	movwf	indf2,c
  5956  002B08                     
  5957                           ;src/print/format.c: 70:             i = 2;
  5958  002B08  0E00               	movlw	0
  5959  002B0A  6E1C               	movwf	(roundStr@i+1)^0,c
  5960  002B0C  0E02               	movlw	2
  5961  002B0E  6E1B               	movwf	roundStr@i^0,c
  5962                           
  5963                           ;src/print/format.c: 71:         }
  5964  002B10  EFCF  F015         	goto	l7223
  5965  002B14                     l7205:
  5966                           
  5967                           ;src/print/format.c: 73:             decnum[0] = '1';
  5968  002B14  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  5969  002B18  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  5970  002B1C  0E31               	movlw	49
  5971  002B1E  6EDF               	movwf	indf2,c
  5972  002B20                     
  5973                           ;src/print/format.c: 74:             i = 1;
  5974  002B20  0E00               	movlw	0
  5975  002B22  6E1C               	movwf	(roundStr@i+1)^0,c
  5976  002B24  0E01               	movlw	1
  5977  002B26  6E1B               	movwf	roundStr@i^0,c
  5978  002B28  EFCF  F015         	goto	l7223
  5979  002B2C                     l7209:
  5980                           
  5981                           ;src/print/format.c: 77:             if (decnum[i] == '.') {
  5982  002B2C  501B               	movf	roundStr@i^0,w,c
  5983  002B2E  240E               	addwf	roundStr@decnum^0,w,c
  5984  002B30  6ED9               	movwf	fsr2l,c
  5985  002B32  501C               	movf	(roundStr@i+1)^0,w,c
  5986  002B34  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5987  002B36  6EDA               	movwf	fsr2h,c
  5988  002B38  0E2E               	movlw	46
  5989  002B3A  18DE               	xorwf	postinc2,w,c
  5990  002B3C  A4D8               	btfss	status,2,c
  5991  002B3E  EFA3  F015         	goto	u8061
  5992  002B42  EFA5  F015         	goto	u8060
  5993  002B46                     u8061:
  5994  002B46  EFBF  F015         	goto	l7215
  5995  002B4A                     u8060:
  5996  002B4A                     
  5997                           ;src/print/format.c: 78:                 decnum[i]='0';
  5998  002B4A  501B               	movf	roundStr@i^0,w,c
  5999  002B4C  240E               	addwf	roundStr@decnum^0,w,c
  6000  002B4E  6ED9               	movwf	fsr2l,c
  6001  002B50  501C               	movf	(roundStr@i+1)^0,w,c
  6002  002B52  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6003  002B54  6EDA               	movwf	fsr2h,c
  6004  002B56  0E30               	movlw	48
  6005  002B58  6EDF               	movwf	indf2,c
  6006                           
  6007                           ;src/print/format.c: 79:                 decnum[i+1]='.';
  6008  002B5A  501B               	movf	roundStr@i^0,w,c
  6009  002B5C  240E               	addwf	roundStr@decnum^0,w,c
  6010  002B5E  6E14               	movwf	??_roundStr^0,c
  6011  002B60  501C               	movf	(roundStr@i+1)^0,w,c
  6012  002B62  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6013  002B64  6E15               	movwf	(??_roundStr+1)^0,c
  6014  002B66  0E01               	movlw	1
  6015  002B68  2414               	addwf	??_roundStr^0,w,c
  6016  002B6A  6ED9               	movwf	fsr2l,c
  6017  002B6C  0E00               	movlw	0
  6018  002B6E  2015               	addwfc	(??_roundStr+1)^0,w,c
  6019  002B70  6EDA               	movwf	fsr2h,c
  6020  002B72  0E2E               	movlw	46
  6021  002B74  6EDF               	movwf	indf2,c
  6022  002B76                     
  6023                           ;src/print/format.c: 80:                 i++;
  6024  002B76  4A1B               	infsnz	roundStr@i^0,f,c
  6025  002B78  2A1C               	incf	(roundStr@i+1)^0,f,c
  6026                           
  6027                           ;src/print/format.c: 81:             }
  6028  002B7A  EFC7  F015         	goto	l7217
  6029  002B7E                     l7215:
  6030                           
  6031                           ;src/print/format.c: 83:                 decnum[i]='0';
  6032  002B7E  501B               	movf	roundStr@i^0,w,c
  6033  002B80  240E               	addwf	roundStr@decnum^0,w,c
  6034  002B82  6ED9               	movwf	fsr2l,c
  6035  002B84  501C               	movf	(roundStr@i+1)^0,w,c
  6036  002B86  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6037  002B88  6EDA               	movwf	fsr2h,c
  6038  002B8A  0E30               	movlw	48
  6039  002B8C  6EDF               	movwf	indf2,c
  6040  002B8E                     l7217:
  6041                           
  6042                           ;src/print/format.c: 84:             i++;
  6043  002B8E  4A1B               	infsnz	roundStr@i^0,f,c
  6044  002B90  2A1C               	incf	(roundStr@i+1)^0,f,c
  6045  002B92                     
  6046                           ;src/print/format.c: 85:             return 1;
  6047  002B92  0E00               	movlw	0
  6048  002B94  6E0F               	movwf	(?_roundStr+1)^0,c
  6049  002B96  0E01               	movlw	1
  6050  002B98  6E0E               	movwf	?_roundStr^0,c
  6051  002B9A  EF34  F016         	goto	l404
  6052  002B9E                     l7223:
  6053                           
  6054                           ;src/print/format.c: 76:         while (i < len) {
  6055  002B9E  5017               	movf	roundStr@len^0,w,c
  6056  002BA0  5C1B               	subwf	roundStr@i^0,w,c
  6057  002BA2  501C               	movf	(roundStr@i+1)^0,w,c
  6058  002BA4  0A80               	xorlw	128
  6059  002BA6  6E14               	movwf	??_roundStr^0,c
  6060  002BA8  5018               	movf	(roundStr@len+1)^0,w,c
  6061  002BAA  0A80               	xorlw	128
  6062  002BAC  5814               	subwfb	??_roundStr^0,w,c
  6063  002BAE  A0D8               	btfss	status,0,c
  6064  002BB0  EFDC  F015         	goto	u8071
  6065  002BB4  EFDE  F015         	goto	u8070
  6066  002BB8                     u8071:
  6067  002BB8  EF96  F015         	goto	l7209
  6068  002BBC                     u8070:
  6069  002BBC  EF30  F016         	goto	l7241
  6070  002BC0                     l7225:
  6071  002BC0  281D               	incf	roundStr@k^0,w,c
  6072  002BC2  E106               	bnz	u8081
  6073  002BC4  281E               	incf	(roundStr@k+1)^0,w,c
  6074  002BC6  A4D8               	btfss	status,2,c
  6075  002BC8  EFE8  F015         	goto	u8081
  6076  002BCC  EFEA  F015         	goto	u8080
  6077  002BD0                     u8081:
  6078  002BD0  EF30  F016         	goto	l7241
  6079  002BD4                     u8080:
  6080  002BD4  2810               	incf	roundStr@e^0,w,c
  6081  002BD6  E108               	bnz	u8090
  6082  002BD8  2811               	incf	(roundStr@e+1)^0,w,c
  6083  002BDA  B4D8               	btfsc	status,2,c
  6084  002BDC  EFF2  F015         	goto	u8091
  6085  002BE0  EFF4  F015         	goto	u8090
  6086  002BE4                     u8091:
  6087  002BE4  EF30  F016         	goto	l7241
  6088  002BE8                     u8090:
  6089  002BE8                     
  6090                           ;src/print/format.c: 92:         decnum[p-1] = '1';
  6091  002BE8  5019               	movf	roundStr@p^0,w,c
  6092  002BEA  240E               	addwf	roundStr@decnum^0,w,c
  6093  002BEC  6E14               	movwf	??_roundStr^0,c
  6094  002BEE  501A               	movf	(roundStr@p+1)^0,w,c
  6095  002BF0  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6096  002BF2  6E15               	movwf	(??_roundStr+1)^0,c
  6097  002BF4  0EFF               	movlw	255
  6098  002BF6  2414               	addwf	??_roundStr^0,w,c
  6099  002BF8  6ED9               	movwf	fsr2l,c
  6100  002BFA  0EFF               	movlw	255
  6101  002BFC  2015               	addwfc	(??_roundStr+1)^0,w,c
  6102  002BFE  6EDA               	movwf	fsr2h,c
  6103  002C00  0E31               	movlw	49
  6104  002C02  6EDF               	movwf	indf2,c
  6105  002C04                     
  6106                           ;src/print/format.c: 93:         for(i = p+1;i < e;i++)
  6107  002C04  0E01               	movlw	1
  6108  002C06  2419               	addwf	roundStr@p^0,w,c
  6109  002C08  6E1B               	movwf	roundStr@i^0,c
  6110  002C0A  0E00               	movlw	0
  6111  002C0C  201A               	addwfc	(roundStr@p+1)^0,w,c
  6112  002C0E  6E1C               	movwf	(roundStr@i+1)^0,c
  6113  002C10  EF14  F016         	goto	l7237
  6114  002C14                     l7233:
  6115                           
  6116                           ;src/print/format.c: 94:             decnum[i] = '0';
  6117  002C14  501B               	movf	roundStr@i^0,w,c
  6118  002C16  240E               	addwf	roundStr@decnum^0,w,c
  6119  002C18  6ED9               	movwf	fsr2l,c
  6120  002C1A  501C               	movf	(roundStr@i+1)^0,w,c
  6121  002C1C  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6122  002C1E  6EDA               	movwf	fsr2h,c
  6123  002C20  0E30               	movlw	48
  6124  002C22  6EDF               	movwf	indf2,c
  6125  002C24  4A1B               	infsnz	roundStr@i^0,f,c
  6126  002C26  2A1C               	incf	(roundStr@i+1)^0,f,c
  6127  002C28                     l7237:
  6128  002C28  5010               	movf	roundStr@e^0,w,c
  6129  002C2A  5C1B               	subwf	roundStr@i^0,w,c
  6130  002C2C  501C               	movf	(roundStr@i+1)^0,w,c
  6131  002C2E  0A80               	xorlw	128
  6132  002C30  6E14               	movwf	??_roundStr^0,c
  6133  002C32  5011               	movf	(roundStr@e+1)^0,w,c
  6134  002C34  0A80               	xorlw	128
  6135  002C36  5814               	subwfb	??_roundStr^0,w,c
  6136  002C38  A0D8               	btfss	status,0,c
  6137  002C3A  EF21  F016         	goto	u8101
  6138  002C3E  EF23  F016         	goto	u8100
  6139  002C42                     u8101:
  6140  002C42  EF0A  F016         	goto	l7233
  6141  002C46                     u8100:
  6142  002C46                     
  6143                           ;src/print/format.c: 95:         decnum[e+2]++;
  6144  002C46  5010               	movf	roundStr@e^0,w,c
  6145  002C48  240E               	addwf	roundStr@decnum^0,w,c
  6146  002C4A  6E14               	movwf	??_roundStr^0,c
  6147  002C4C  5011               	movf	(roundStr@e+1)^0,w,c
  6148  002C4E  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  6149  002C50  6E15               	movwf	(??_roundStr+1)^0,c
  6150  002C52  0E02               	movlw	2
  6151  002C54  2414               	addwf	??_roundStr^0,w,c
  6152  002C56  6ED9               	movwf	fsr2l,c
  6153  002C58  0E00               	movlw	0
  6154  002C5A  2015               	addwfc	(??_roundStr+1)^0,w,c
  6155  002C5C  6EDA               	movwf	fsr2h,c
  6156  002C5E  2ADF               	incf	indf2,f,c
  6157  002C60                     l7241:
  6158                           
  6159                           ;src/print/format.c: 97:     return 0;
  6160  002C60  0E00               	movlw	0
  6161  002C62  6E0F               	movwf	(?_roundStr+1)^0,c
  6162  002C64  0E00               	movlw	0
  6163  002C66  6E0E               	movwf	?_roundStr^0,c
  6164  002C68                     l404:
  6165  002C68  0012               	return		;funcret
  6166  002C6A                     __end_of_roundStr:
  6167                           	opt callstack 0
  6168                           
  6169 ;; *************** function _getWP *****************
  6170 ;; Defined at:
  6171 ;;		line 125 in file "src/print/format.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  form            2    0[BANK0 ] PTR unsigned char 
  6174 ;;		 -> my_vprintf@format(10), 
  6175 ;;  width           2    2[BANK0 ] PTR int 
  6176 ;;		 -> my_vprintf@width(2), 
  6177 ;;  precision       2    4[BANK0 ] PTR int 
  6178 ;;		 -> my_vprintf@prec(2), 
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;  width_str       5   28[COMRAM] unsigned char [5]
  6181 ;;  prec_str        5   23[COMRAM] unsigned char [5]
  6182 ;;  j               2   41[COMRAM] int 
  6183 ;;  p               2   39[COMRAM] int 
  6184 ;;  k               2   37[COMRAM] int 
  6185 ;;  i               2   35[COMRAM] int 
  6186 ;;  len             2   33[COMRAM] int 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6196 ;;      Params:         0       6       0       0       0       0       0       0       0
  6197 ;;      Locals:        20       0       0       0       0       0       0       0       0
  6198 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6199 ;;      Totals:        22       6       0       0       0       0       0       0       0
  6200 ;;Total ram usage:       28 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    4
  6203 ;; This function calls:
  6204 ;;		_atoui
  6205 ;;		_posc
  6206 ;;		_reverse
  6207 ;;		_searchc
  6208 ;;		_strlen
  6209 ;; This function is called by:
  6210 ;;		_my_vprintf
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text11
  6215  002F4A                     __ptext11:
  6216                           	opt callstack 0
  6217  002F4A                     _getWP:
  6218                           	opt callstack 25
  6219  002F4A                     
  6220                           ;src/print/format.c: 126:     int i, j, k;;src/print/format.c: 127:     int p;;src/print
      +                          /format.c: 128:     int len = strlen(form);
  6221  002F4A  C0D3  F004         	movff	getWP@form,strlen@s
  6222  002F4E  C0D4  F005         	movff	getWP@form+1,strlen@s+1
  6223  002F52  ECD7  F029         	call	_strlen	;wreg free
  6224  002F56  C004  F022         	movff	?_strlen,getWP@len
  6225  002F5A  C005  F023         	movff	?_strlen+1,getWP@len+1
  6226  002F5E                     
  6227                           ;src/print/format.c: 129:     char width_str[5] = "";
  6228  002F5E  EE20  F01D         	lfsr	2,getWP@width_str
  6229  002F62  0E04               	movlw	4
  6230  002F64                     u8471:
  6231  002F64  6ADE               	clrf	postinc2,c
  6232  002F66  06E8               	decf	wreg,f,c
  6233  002F68  E2FD               	bc	u8471
  6234  002F6A                     
  6235                           ;src/print/format.c: 130:     char prec_str[5] = "";
  6236  002F6A  EE20  F018         	lfsr	2,getWP@prec_str
  6237  002F6E  0E04               	movlw	4
  6238  002F70                     u8481:
  6239  002F70  6ADE               	clrf	postinc2,c
  6240  002F72  06E8               	decf	wreg,f,c
  6241  002F74  E2FD               	bc	u8481
  6242  002F76                     
  6243                           ;src/print/format.c: 132:     i = 0;
  6244  002F76  0E00               	movlw	0
  6245  002F78  6E25               	movwf	(getWP@i+1)^0,c
  6246  002F7A  0E00               	movlw	0
  6247  002F7C  6E24               	movwf	getWP@i^0,c
  6248  002F7E                     
  6249                           ;src/print/format.c: 133:     k = 0;
  6250  002F7E  0E00               	movlw	0
  6251  002F80  6E27               	movwf	(getWP@k+1)^0,c
  6252  002F82  0E00               	movlw	0
  6253  002F84  6E26               	movwf	getWP@k^0,c
  6254  002F86                     
  6255                           ;src/print/format.c: 134:     zeros = 0;
  6256  002F86  0E00               	movlw	0
  6257  002F88  0100               	movlb	0	; () banked
  6258  002F8A  6FD0               	movwf	_zeros& (0+255),b
  6259  002F8C                     
  6260                           ; BSR set to: 0
  6261                           ;src/print/format.c: 135:     precInt = 0;
  6262  002F8C  0E00               	movlw	0
  6263  002F8E  6FCF               	movwf	_precInt& (0+255),b
  6264                           
  6265                           ;src/print/format.c: 137:     sig = searchc(form, '+');
  6266  002F90  C0D3  F008         	movff	getWP@form,searchc@str
  6267  002F94  C0D4  F009         	movff	getWP@form+1,searchc@str+1
  6268  002F98  0E2B               	movlw	43
  6269  002F9A  6E0A               	movwf	searchc@c^0,c
  6270  002F9C  ECB3  F027         	call	_searchc	;wreg free
  6271  002FA0  0100               	movlb	0	; () banked
  6272  002FA2  6FD1               	movwf	_sig& (0+255),b
  6273                           
  6274                           ;src/print/format.c: 138:     alingL = searchc(form, '-');
  6275  002FA4  C0D3  F008         	movff	getWP@form,searchc@str
  6276  002FA8  C0D4  F009         	movff	getWP@form+1,searchc@str+1
  6277  002FAC  0E2D               	movlw	45
  6278  002FAE  6E0A               	movwf	searchc@c^0,c
  6279  002FB0  ECB3  F027         	call	_searchc	;wreg free
  6280  002FB4  6E3C               	movwf	_alingL^0,c
  6281                           
  6282                           ;src/print/format.c: 139:     space = searchc(form, ' ');
  6283  002FB6  C0D3  F008         	movff	getWP@form,searchc@str
  6284  002FBA  C0D4  F009         	movff	getWP@form+1,searchc@str+1
  6285  002FBE  0E20               	movlw	32
  6286  002FC0  6E0A               	movwf	searchc@c^0,c
  6287  002FC2  ECB3  F027         	call	_searchc	;wreg free
  6288  002FC6  0100               	movlb	0	; () banked
  6289  002FC8  6FCE               	movwf	_space& (0+255),b
  6290                           
  6291                           ;src/print/format.c: 140:     numeral = searchc(form, '#');
  6292  002FCA  C0D3  F008         	movff	getWP@form,searchc@str
  6293  002FCE  C0D4  F009         	movff	getWP@form+1,searchc@str+1
  6294  002FD2  0E23               	movlw	35
  6295  002FD4  6E0A               	movwf	searchc@c^0,c
  6296  002FD6  ECB3  F027         	call	_searchc	;wreg free
  6297  002FDA  6E3B               	movwf	_numeral^0,c
  6298                           
  6299                           ;src/print/format.c: 142:     p = posc(form, '.');
  6300  002FDC  C0D3  F008         	movff	getWP@form,posc@str
  6301  002FE0  C0D4  F009         	movff	getWP@form+1,posc@str+1
  6302  002FE4  0E2E               	movlw	46
  6303  002FE6  6E0A               	movwf	posc@c^0,c
  6304  002FE8  EC26  F027         	call	_posc	;wreg free
  6305  002FEC  C008  F028         	movff	?_posc,getWP@p
  6306  002FF0  C009  F029         	movff	?_posc+1,getWP@p+1
  6307  002FF4                     
  6308                           ;src/print/format.c: 144:     for(j = 1; j < len; j++) {
  6309  002FF4  0E00               	movlw	0
  6310  002FF6  6E2B               	movwf	(getWP@j+1)^0,c
  6311  002FF8  0E01               	movlw	1
  6312  002FFA  6E2A               	movwf	getWP@j^0,c
  6313  002FFC  EF66  F018         	goto	l7535
  6314  003000                     l7515:
  6315                           
  6316                           ;src/print/format.c: 145:         if(form[j] >= '0' && form[j] <= '9') {
  6317  003000  502A               	movf	getWP@j^0,w,c
  6318  003002  0100               	movlb	0	; () banked
  6319  003004  25D3               	addwf	getWP@form& (0+255),w,b
  6320  003006  6ED9               	movwf	fsr2l,c
  6321  003008  502B               	movf	(getWP@j+1)^0,w,c
  6322  00300A  21D4               	addwfc	(getWP@form+1)& (0+255),w,b
  6323  00300C  6EDA               	movwf	fsr2h,c
  6324  00300E  0E2F               	movlw	47
  6325  003010  64DF               	cpfsgt	indf2,c
  6326  003012  EF0D  F018         	goto	u8491
  6327  003016  EF0F  F018         	goto	u8490
  6328  00301A                     u8491:
  6329  00301A  EF64  F018         	goto	l7533
  6330  00301E                     u8490:
  6331  00301E                     
  6332                           ; BSR set to: 0
  6333  00301E  502A               	movf	getWP@j^0,w,c
  6334  003020  25D3               	addwf	getWP@form& (0+255),w,b
  6335  003022  6ED9               	movwf	fsr2l,c
  6336  003024  502B               	movf	(getWP@j+1)^0,w,c
  6337  003026  21D4               	addwfc	(getWP@form+1)& (0+255),w,b
  6338  003028  6EDA               	movwf	fsr2h,c
  6339  00302A  0E3A               	movlw	58
  6340  00302C  60DF               	cpfslt	indf2,c
  6341  00302E  EF1B  F018         	goto	u8501
  6342  003032  EF1D  F018         	goto	u8500
  6343  003036                     u8501:
  6344  003036  EF64  F018         	goto	l7533
  6345  00303A                     u8500:
  6346  00303A                     
  6347                           ; BSR set to: 0
  6348                           ;src/print/format.c: 146:             if ((j < p)|| (p < 0)) {
  6349  00303A  5028               	movf	getWP@p^0,w,c
  6350  00303C  5C2A               	subwf	getWP@j^0,w,c
  6351  00303E  502B               	movf	(getWP@j+1)^0,w,c
  6352  003040  0A80               	xorlw	128
  6353  003042  6E16               	movwf	??_getWP^0,c
  6354  003044  5029               	movf	(getWP@p+1)^0,w,c
  6355  003046  0A80               	xorlw	128
  6356  003048  5816               	subwfb	??_getWP^0,w,c
  6357  00304A  A0D8               	btfss	status,0,c
  6358  00304C  EF2A  F018         	goto	u8511
  6359  003050  EF2C  F018         	goto	u8510
  6360  003054                     u8511:
  6361  003054  EF33  F018         	goto	l7523
  6362  003058                     u8510:
  6363  003058                     
  6364                           ; BSR set to: 0
  6365  003058  BE29               	btfsc	(getWP@p+1)^0,7,c
  6366  00305A  EF33  F018         	goto	u8520
  6367  00305E  EF31  F018         	goto	u8521
  6368  003062                     u8521:
  6369  003062  EF45  F018         	goto	l7527
  6370  003066                     u8520:
  6371  003066                     l7523:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;src/print/format.c: 147:                 width_str[i] = form[j];
  6375  003066  502A               	movf	getWP@j^0,w,c
  6376  003068  25D3               	addwf	getWP@form& (0+255),w,b
  6377  00306A  6ED9               	movwf	fsr2l,c
  6378  00306C  502B               	movf	(getWP@j+1)^0,w,c
  6379  00306E  21D4               	addwfc	(getWP@form+1)& (0+255),w,b
  6380  003070  6EDA               	movwf	fsr2h,c
  6381  003072  0E1D               	movlw	low getWP@width_str
  6382  003074  2424               	addwf	getWP@i^0,w,c
  6383  003076  6EE1               	movwf	fsr1l,c
  6384  003078  0E00               	movlw	high getWP@width_str
  6385  00307A  2025               	addwfc	(getWP@i+1)^0,w,c
  6386  00307C  6EE2               	movwf	fsr1h,c
  6387  00307E  CFDF FFE7          	movff	indf2,indf1
  6388  003082                     
  6389                           ; BSR set to: 0
  6390                           ;src/print/format.c: 148:                 i++;
  6391  003082  4A24               	infsnz	getWP@i^0,f,c
  6392  003084  2A25               	incf	(getWP@i+1)^0,f,c
  6393                           
  6394                           ;src/print/format.c: 149:             }
  6395  003086  EF64  F018         	goto	l7533
  6396  00308A                     l7527:
  6397                           
  6398                           ; BSR set to: 0
  6399  00308A  502A               	movf	getWP@j^0,w,c
  6400  00308C  5C28               	subwf	getWP@p^0,w,c
  6401  00308E  5029               	movf	(getWP@p+1)^0,w,c
  6402  003090  0A80               	xorlw	128
  6403  003092  6E16               	movwf	??_getWP^0,c
  6404  003094  502B               	movf	(getWP@j+1)^0,w,c
  6405  003096  0A80               	xorlw	128
  6406  003098  5816               	subwfb	??_getWP^0,w,c
  6407  00309A  B0D8               	btfsc	status,0,c
  6408  00309C  EF52  F018         	goto	u8531
  6409  0030A0  EF54  F018         	goto	u8530
  6410  0030A4                     u8531:
  6411  0030A4  EF64  F018         	goto	l7533
  6412  0030A8                     u8530:
  6413  0030A8                     
  6414                           ; BSR set to: 0
  6415                           ;src/print/format.c: 151:                 prec_str[k] = form[j];
  6416  0030A8  502A               	movf	getWP@j^0,w,c
  6417  0030AA  25D3               	addwf	getWP@form& (0+255),w,b
  6418  0030AC  6ED9               	movwf	fsr2l,c
  6419  0030AE  502B               	movf	(getWP@j+1)^0,w,c
  6420  0030B0  21D4               	addwfc	(getWP@form+1)& (0+255),w,b
  6421  0030B2  6EDA               	movwf	fsr2h,c
  6422  0030B4  0E18               	movlw	low getWP@prec_str
  6423  0030B6  2426               	addwf	getWP@k^0,w,c
  6424  0030B8  6EE1               	movwf	fsr1l,c
  6425  0030BA  0E00               	movlw	high getWP@prec_str
  6426  0030BC  2027               	addwfc	(getWP@k+1)^0,w,c
  6427  0030BE  6EE2               	movwf	fsr1h,c
  6428  0030C0  CFDF FFE7          	movff	indf2,indf1
  6429  0030C4                     
  6430                           ; BSR set to: 0
  6431                           ;src/print/format.c: 152:                 k++;
  6432  0030C4  4A26               	infsnz	getWP@k^0,f,c
  6433  0030C6  2A27               	incf	(getWP@k+1)^0,f,c
  6434  0030C8                     l7533:
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;src/print/format.c: 155:     }
  6438  0030C8  4A2A               	infsnz	getWP@j^0,f,c
  6439  0030CA  2A2B               	incf	(getWP@j+1)^0,f,c
  6440  0030CC                     l7535:
  6441  0030CC  5022               	movf	getWP@len^0,w,c
  6442  0030CE  5C2A               	subwf	getWP@j^0,w,c
  6443  0030D0  502B               	movf	(getWP@j+1)^0,w,c
  6444  0030D2  0A80               	xorlw	128
  6445  0030D4  6E16               	movwf	??_getWP^0,c
  6446  0030D6  5023               	movf	(getWP@len+1)^0,w,c
  6447  0030D8  0A80               	xorlw	128
  6448  0030DA  5816               	subwfb	??_getWP^0,w,c
  6449  0030DC  A0D8               	btfss	status,0,c
  6450  0030DE  EF73  F018         	goto	u8541
  6451  0030E2  EF75  F018         	goto	u8540
  6452  0030E6                     u8541:
  6453  0030E6  EF00  F018         	goto	l7515
  6454  0030EA                     u8540:
  6455  0030EA                     
  6456                           ;src/print/format.c: 157:     if(width_str[0] == '0')
  6457  0030EA  0E30               	movlw	48
  6458  0030EC  181D               	xorwf	getWP@width_str^0,w,c
  6459  0030EE  A4D8               	btfss	status,2,c
  6460  0030F0  EF7C  F018         	goto	u8551
  6461  0030F4  EF7E  F018         	goto	u8550
  6462  0030F8                     u8551:
  6463  0030F8  EF81  F018         	goto	l7541
  6464  0030FC                     u8550:
  6465  0030FC                     
  6466                           ;src/print/format.c: 158:       zeros = 1;
  6467  0030FC  0E01               	movlw	1
  6468  0030FE  0100               	movlb	0	; () banked
  6469  003100  6FD0               	movwf	_zeros& (0+255),b
  6470  003102                     l7541:
  6471                           
  6472                           ;src/print/format.c: 160:     reverse(width_str);
  6473  003102  0E1D               	movlw	low getWP@width_str
  6474  003104  6E12               	movwf	reverse@str^0,c
  6475  003106  0E00               	movlw	high getWP@width_str
  6476  003108  6E13               	movwf	(reverse@str+1)^0,c
  6477  00310A  ECE2  F025         	call	_reverse	;wreg free
  6478  00310E                     
  6479                           ;src/print/format.c: 161:     reverse(prec_str);
  6480  00310E  0E18               	movlw	low getWP@prec_str
  6481  003110  6E12               	movwf	reverse@str^0,c
  6482  003112  0E00               	movlw	high getWP@prec_str
  6483  003114  6E13               	movwf	(reverse@str+1)^0,c
  6484  003116  ECE2  F025         	call	_reverse	;wreg free
  6485  00311A                     
  6486                           ;src/print/format.c: 163:     if ((*width) == -1)
  6487  00311A  C0D5  FFD9         	movff	getWP@width,fsr2l
  6488  00311E  C0D6  FFDA         	movff	getWP@width+1,fsr2h
  6489  003122  28DE               	incf	postinc2,w,c
  6490  003124  E106               	bnz	u8561
  6491  003126  28DE               	incf	postinc2,w,c
  6492  003128  A4D8               	btfss	status,2,c
  6493  00312A  EF99  F018         	goto	u8561
  6494  00312E  EF9B  F018         	goto	u8560
  6495  003132                     u8561:
  6496  003132  EFA9  F018         	goto	l7549
  6497  003136                     u8560:
  6498  003136                     
  6499                           ;src/print/format.c: 164:         (*width) = atoui(width_str);
  6500  003136  0E1D               	movlw	low getWP@width_str
  6501  003138  6E0A               	movwf	atoui@str^0,c
  6502  00313A  0E00               	movlw	high getWP@width_str
  6503  00313C  6E0B               	movwf	(atoui@str+1)^0,c
  6504  00313E  ECB6  F023         	call	_atoui	;wreg free
  6505  003142  C0D5  FFD9         	movff	getWP@width,fsr2l
  6506  003146  C0D6  FFDA         	movff	getWP@width+1,fsr2h
  6507  00314A  C00A  FFDE         	movff	?_atoui,postinc2
  6508  00314E  C00B  FFDD         	movff	?_atoui+1,postdec2
  6509  003152                     l7549:
  6510                           
  6511                           ;src/print/format.c: 166:     if (p >= 0 && (*precision) == -1)
  6512  003152  BE29               	btfsc	(getWP@p+1)^0,7,c
  6513  003154  EFAE  F018         	goto	u8571
  6514  003158  EFB0  F018         	goto	u8570
  6515  00315C                     u8571:
  6516  00315C  EFCC  F018         	goto	l442
  6517  003160                     u8570:
  6518  003160  C0D7  FFD9         	movff	getWP@precision,fsr2l
  6519  003164  C0D8  FFDA         	movff	getWP@precision+1,fsr2h
  6520  003168  28DE               	incf	postinc2,w,c
  6521  00316A  E106               	bnz	u8581
  6522  00316C  28DE               	incf	postinc2,w,c
  6523  00316E  A4D8               	btfss	status,2,c
  6524  003170  EFBC  F018         	goto	u8581
  6525  003174  EFBE  F018         	goto	u8580
  6526  003178                     u8581:
  6527  003178  EFCC  F018         	goto	l442
  6528  00317C                     u8580:
  6529  00317C                     
  6530                           ;src/print/format.c: 167:         (*precision) = atoui(prec_str);
  6531  00317C  0E18               	movlw	low getWP@prec_str
  6532  00317E  6E0A               	movwf	atoui@str^0,c
  6533  003180  0E00               	movlw	high getWP@prec_str
  6534  003182  6E0B               	movwf	(atoui@str+1)^0,c
  6535  003184  ECB6  F023         	call	_atoui	;wreg free
  6536  003188  C0D7  FFD9         	movff	getWP@precision,fsr2l
  6537  00318C  C0D8  FFDA         	movff	getWP@precision+1,fsr2h
  6538  003190  C00A  FFDE         	movff	?_atoui,postinc2
  6539  003194  C00B  FFDD         	movff	?_atoui+1,postdec2
  6540  003198                     l442:
  6541  003198  0012               	return		;funcret
  6542  00319A                     __end_of_getWP:
  6543                           	opt callstack 0
  6544                           
  6545 ;; *************** function _searchc *****************
  6546 ;; Defined at:
  6547 ;;		line 11 in file "src/print/format.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  str             2    7[COMRAM] PTR unsigned char 
  6550 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), 
  6551 ;;  c               1    9[COMRAM] unsigned char 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  a               2   11[COMRAM] int 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  1    wreg      _Bool 
  6556 ;; Registers used:
  6557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6563 ;;      Params:         3       0       0       0       0       0       0       0       0
  6564 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6565 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6566 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6567 ;;Total ram usage:        6 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    3
  6570 ;; This function calls:
  6571 ;;		_strlen
  6572 ;; This function is called by:
  6573 ;;		_getWP
  6574 ;;		_precF
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text12
  6579  004F66                     __ptext12:
  6580                           	opt callstack 0
  6581  004F66                     _searchc:
  6582                           	opt callstack 25
  6583  004F66                     
  6584                           ;src/print/format.c: 12:     int a;;src/print/format.c: 13:     for(a = 0; a < strlen(st
      +                          r); a++)
  6585  004F66  0E00               	movlw	0
  6586  004F68  6E0D               	movwf	(searchc@a+1)^0,c
  6587  004F6A  0E00               	movlw	0
  6588  004F6C  6E0C               	movwf	searchc@a^0,c
  6589  004F6E  EFCD  F027         	goto	l7159
  6590  004F72                     l7151:
  6591                           
  6592                           ;src/print/format.c: 14:     {;src/print/format.c: 15:         if (str[a]==c)
  6593  004F72  500C               	movf	searchc@a^0,w,c
  6594  004F74  2408               	addwf	searchc@str^0,w,c
  6595  004F76  6ED9               	movwf	fsr2l,c
  6596  004F78  500D               	movf	(searchc@a+1)^0,w,c
  6597  004F7A  2009               	addwfc	(searchc@str+1)^0,w,c
  6598  004F7C  6EDA               	movwf	fsr2h,c
  6599  004F7E  500A               	movf	searchc@c^0,w,c
  6600  004F80  18DE               	xorwf	postinc2,w,c
  6601  004F82  A4D8               	btfss	status,2,c
  6602  004F84  EFC6  F027         	goto	u7941
  6603  004F88  EFC8  F027         	goto	u7940
  6604  004F8C                     u7941:
  6605  004F8C  EFCB  F027         	goto	l7157
  6606  004F90                     u7940:
  6607  004F90                     
  6608                           ;src/print/format.c: 16:             return 1;
  6609  004F90  0E01               	movlw	1
  6610  004F92  EFDF  F027         	goto	l376
  6611  004F96                     l7157:
  6612                           
  6613                           ;src/print/format.c: 17:     }
  6614  004F96  4A0C               	infsnz	searchc@a^0,f,c
  6615  004F98  2A0D               	incf	(searchc@a+1)^0,f,c
  6616  004F9A                     l7159:
  6617  004F9A  C008  F004         	movff	searchc@str,strlen@s
  6618  004F9E  C009  F005         	movff	searchc@str+1,strlen@s+1
  6619  004FA2  ECD7  F029         	call	_strlen	;wreg free
  6620  004FA6  5004               	movf	?_strlen^0,w,c
  6621  004FA8  5C0C               	subwf	searchc@a^0,w,c
  6622  004FAA  5005               	movf	(?_strlen+1)^0,w,c
  6623  004FAC  580D               	subwfb	(searchc@a+1)^0,w,c
  6624  004FAE  A0D8               	btfss	status,0,c
  6625  004FB0  EFDC  F027         	goto	u7951
  6626  004FB4  EFDE  F027         	goto	u7950
  6627  004FB8                     u7951:
  6628  004FB8  EFB9  F027         	goto	l7151
  6629  004FBC                     u7950:
  6630  004FBC                     
  6631                           ;src/print/format.c: 18:     return 0;
  6632  004FBC  0E00               	movlw	0
  6633  004FBE                     l376:
  6634  004FBE  0012               	return		;funcret
  6635  004FC0                     __end_of_searchc:
  6636                           	opt callstack 0
  6637                           
  6638 ;; *************** function _posc *****************
  6639 ;; Defined at:
  6640 ;;		line 24 in file "src/print/format.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  str             2    7[COMRAM] PTR unsigned char 
  6643 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), 
  6644 ;;  c               1    9[COMRAM] unsigned char 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  a               2   11[COMRAM] int 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  2    7[COMRAM] int 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6656 ;;      Params:         3       0       0       0       0       0       0       0       0
  6657 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6658 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6659 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6660 ;;Total ram usage:        6 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    3
  6663 ;; This function calls:
  6664 ;;		_strlen
  6665 ;; This function is called by:
  6666 ;;		_roundStr
  6667 ;;		_getWP
  6668 ;;		_precF
  6669 ;;		_precE
  6670 ;;		_precG
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text13
  6675  004E4C                     __ptext13:
  6676                           	opt callstack 0
  6677  004E4C                     _posc:
  6678                           	opt callstack 24
  6679  004E4C                     
  6680                           ;src/print/format.c: 25:     int a;;src/print/format.c: 26:     for(a = 0; a < strlen(st
      +                          r); a++)
  6681  004E4C  0E00               	movlw	0
  6682  004E4E  6E0D               	movwf	(posc@a+1)^0,c
  6683  004E50  0E00               	movlw	0
  6684  004E52  6E0C               	movwf	posc@a^0,c
  6685  004E54  EF43  F027         	goto	l6551
  6686  004E58                     l6545:
  6687                           
  6688                           ;src/print/format.c: 27:     {;src/print/format.c: 28:         if (str[a]==c)
  6689  004E58  500C               	movf	posc@a^0,w,c
  6690  004E5A  2408               	addwf	posc@str^0,w,c
  6691  004E5C  6ED9               	movwf	fsr2l,c
  6692  004E5E  500D               	movf	(posc@a+1)^0,w,c
  6693  004E60  2009               	addwfc	(posc@str+1)^0,w,c
  6694  004E62  6EDA               	movwf	fsr2h,c
  6695  004E64  500A               	movf	posc@c^0,w,c
  6696  004E66  18DE               	xorwf	postinc2,w,c
  6697  004E68  A4D8               	btfss	status,2,c
  6698  004E6A  EF39  F027         	goto	u6911
  6699  004E6E  EF3B  F027         	goto	u6910
  6700  004E72                     u6911:
  6701  004E72  EF41  F027         	goto	l6549
  6702  004E76                     u6910:
  6703  004E76                     
  6704                           ;src/print/format.c: 29:             return a;
  6705  004E76  C00C  F008         	movff	posc@a,?_posc
  6706  004E7A  C00D  F009         	movff	posc@a+1,?_posc+1
  6707  004E7E  EF56  F027         	goto	l383
  6708  004E82                     l6549:
  6709                           
  6710                           ;src/print/format.c: 30:     }
  6711  004E82  4A0C               	infsnz	posc@a^0,f,c
  6712  004E84  2A0D               	incf	(posc@a+1)^0,f,c
  6713  004E86                     l6551:
  6714  004E86  C008  F004         	movff	posc@str,strlen@s
  6715  004E8A  C009  F005         	movff	posc@str+1,strlen@s+1
  6716  004E8E  ECD7  F029         	call	_strlen	;wreg free
  6717  004E92  5004               	movf	?_strlen^0,w,c
  6718  004E94  5C0C               	subwf	posc@a^0,w,c
  6719  004E96  5005               	movf	(?_strlen+1)^0,w,c
  6720  004E98  580D               	subwfb	(posc@a+1)^0,w,c
  6721  004E9A  A0D8               	btfss	status,0,c
  6722  004E9C  EF52  F027         	goto	u6921
  6723  004EA0  EF54  F027         	goto	u6920
  6724  004EA4                     u6921:
  6725  004EA4  EF2C  F027         	goto	l6545
  6726  004EA8                     u6920:
  6727  004EA8                     
  6728                           ;src/print/format.c: 31:     return -1;
  6729  004EA8  6808               	setf	?_posc^0,c
  6730  004EAA  6809               	setf	(?_posc+1)^0,c
  6731  004EAC                     l383:
  6732  004EAC  0012               	return		;funcret
  6733  004EAE                     __end_of_posc:
  6734                           	opt callstack 0
  6735                           
  6736 ;; *************** function _atoui *****************
  6737 ;; Defined at:
  6738 ;;		line 57 in file "src/print/toString.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  str             2    9[COMRAM] PTR unsigned char 
  6741 ;;		 -> getWP@prec_str(5), getWP@width_str(5), 
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;  i               2   16[COMRAM] int 
  6744 ;;  vp              2   14[COMRAM] int 
  6745 ;;  num             2   12[COMRAM] int 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  2    9[COMRAM] int 
  6748 ;; Registers used:
  6749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6755 ;;      Params:         2       0       0       0       0       0       0       0       0
  6756 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6757 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6758 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6759 ;;Total ram usage:        9 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:    3
  6762 ;; This function calls:
  6763 ;;		___wmul
  6764 ;;		_strlen
  6765 ;; This function is called by:
  6766 ;;		_getWP
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text14
  6771  00476C                     __ptext14:
  6772                           	opt callstack 0
  6773  00476C                     _atoui:
  6774                           	opt callstack 25
  6775  00476C                     
  6776                           ;src/print/toString.c: 58:     int i;;src/print/toString.c: 59:     int num = 0;
  6777  00476C  0E00               	movlw	0
  6778  00476E  6E0E               	movwf	(atoui@num+1)^0,c
  6779  004770  0E00               	movlw	0
  6780  004772  6E0D               	movwf	atoui@num^0,c
  6781                           
  6782                           ;src/print/toString.c: 60:     int vp = 1;
  6783  004774  0E00               	movlw	0
  6784  004776  6E10               	movwf	(atoui@vp+1)^0,c
  6785  004778  0E01               	movlw	1
  6786  00477A  6E0F               	movwf	atoui@vp^0,c
  6787                           
  6788                           ;src/print/toString.c: 62:     for (i = 0; i < strlen(str); i++) {
  6789  00477C  0E00               	movlw	0
  6790  00477E  6E12               	movwf	(atoui@i+1)^0,c
  6791  004780  0E00               	movlw	0
  6792  004782  6E11               	movwf	atoui@i^0,c
  6793  004784  EF08  F024         	goto	l7257
  6794  004788                     l7247:
  6795                           
  6796                           ;src/print/toString.c: 63:         if(str[i] >= '0' && str[i] <= '9'){
  6797  004788  5011               	movf	atoui@i^0,w,c
  6798  00478A  240A               	addwf	atoui@str^0,w,c
  6799  00478C  6ED9               	movwf	fsr2l,c
  6800  00478E  5012               	movf	(atoui@i+1)^0,w,c
  6801  004790  200B               	addwfc	(atoui@str+1)^0,w,c
  6802  004792  6EDA               	movwf	fsr2h,c
  6803  004794  0E2F               	movlw	47
  6804  004796  64DF               	cpfsgt	indf2,c
  6805  004798  EFD0  F023         	goto	u8111
  6806  00479C  EFD2  F023         	goto	u8110
  6807  0047A0                     u8111:
  6808  0047A0  EF19  F024         	goto	l736
  6809  0047A4                     u8110:
  6810  0047A4  5011               	movf	atoui@i^0,w,c
  6811  0047A6  240A               	addwf	atoui@str^0,w,c
  6812  0047A8  6ED9               	movwf	fsr2l,c
  6813  0047AA  5012               	movf	(atoui@i+1)^0,w,c
  6814  0047AC  200B               	addwfc	(atoui@str+1)^0,w,c
  6815  0047AE  6EDA               	movwf	fsr2h,c
  6816  0047B0  0E3A               	movlw	58
  6817  0047B2  60DF               	cpfslt	indf2,c
  6818  0047B4  EFDE  F023         	goto	u8121
  6819  0047B8  EFE0  F023         	goto	u8120
  6820  0047BC                     u8121:
  6821  0047BC  EF19  F024         	goto	l736
  6822  0047C0                     u8120:
  6823  0047C0                     
  6824                           ;src/print/toString.c: 64:             num += (str[i] - 48) * vp;
  6825  0047C0  5011               	movf	atoui@i^0,w,c
  6826  0047C2  240A               	addwf	atoui@str^0,w,c
  6827  0047C4  6ED9               	movwf	fsr2l,c
  6828  0047C6  5012               	movf	(atoui@i+1)^0,w,c
  6829  0047C8  200B               	addwfc	(atoui@str+1)^0,w,c
  6830  0047CA  6EDA               	movwf	fsr2h,c
  6831  0047CC  50DF               	movf	indf2,w,c
  6832  0047CE  6E0C               	movwf	??_atoui^0,c
  6833  0047D0  0ED0               	movlw	208
  6834  0047D2  240C               	addwf	??_atoui^0,w,c
  6835  0047D4  6E04               	movwf	___wmul@multiplier^0,c
  6836  0047D6  6A05               	clrf	(___wmul@multiplier+1)^0,c
  6837  0047D8  0EFF               	movlw	255
  6838  0047DA  2205               	addwfc	(___wmul@multiplier+1)^0,f,c
  6839  0047DC  C00F  F006         	movff	atoui@vp,___wmul@multiplicand
  6840  0047E0  C010  F007         	movff	atoui@vp+1,___wmul@multiplicand+1
  6841  0047E4  EC44  F02A         	call	___wmul	;wreg free
  6842  0047E8  5004               	movf	?___wmul^0,w,c
  6843  0047EA  260D               	addwf	atoui@num^0,f,c
  6844  0047EC  5005               	movf	(?___wmul+1)^0,w,c
  6845  0047EE  220E               	addwfc	(atoui@num+1)^0,f,c
  6846  0047F0                     
  6847                           ;src/print/toString.c: 65:             vp *= 10;
  6848  0047F0  C00F  F004         	movff	atoui@vp,___wmul@multiplier
  6849  0047F4  C010  F005         	movff	atoui@vp+1,___wmul@multiplier+1
  6850  0047F8  0E00               	movlw	0
  6851  0047FA  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  6852  0047FC  0E0A               	movlw	10
  6853  0047FE  6E06               	movwf	___wmul@multiplicand^0,c
  6854  004800  EC44  F02A         	call	___wmul	;wreg free
  6855  004804  C004  F00F         	movff	?___wmul,atoui@vp
  6856  004808  C005  F010         	movff	?___wmul+1,atoui@vp+1
  6857  00480C                     
  6858                           ;src/print/toString.c: 69:     }
  6859  00480C  4A11               	infsnz	atoui@i^0,f,c
  6860  00480E  2A12               	incf	(atoui@i+1)^0,f,c
  6861  004810                     l7257:
  6862  004810  C00A  F004         	movff	atoui@str,strlen@s
  6863  004814  C00B  F005         	movff	atoui@str+1,strlen@s+1
  6864  004818  ECD7  F029         	call	_strlen	;wreg free
  6865  00481C  5004               	movf	?_strlen^0,w,c
  6866  00481E  5C11               	subwf	atoui@i^0,w,c
  6867  004820  5005               	movf	(?_strlen+1)^0,w,c
  6868  004822  5812               	subwfb	(atoui@i+1)^0,w,c
  6869  004824  A0D8               	btfss	status,0,c
  6870  004826  EF17  F024         	goto	u8131
  6871  00482A  EF19  F024         	goto	u8130
  6872  00482E                     u8131:
  6873  00482E  EFC4  F023         	goto	l7247
  6874  004832                     u8130:
  6875  004832                     l736:
  6876                           
  6877                           ;src/print/toString.c: 70:     return num;
  6878  004832  C00D  F00A         	movff	atoui@num,?_atoui
  6879  004836  C00E  F00B         	movff	atoui@num+1,?_atoui+1
  6880  00483A  0012               	return		;funcret
  6881  00483C                     __end_of_atoui:
  6882                           	opt callstack 0
  6883                           
  6884 ;; *************** function ___wmul *****************
  6885 ;; Defined at:
  6886 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  multiplier      2    3[COMRAM] unsigned int 
  6889 ;;  multiplicand    2    5[COMRAM] unsigned int 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  product         2    7[COMRAM] unsigned int 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  2    3[COMRAM] unsigned int 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0, prodl, prodh
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6901 ;;      Params:         4       0       0       0       0       0       0       0       0
  6902 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6904 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6905 ;;Total ram usage:        6 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; Hardware stack levels required when called:    2
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		_atoui
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text15
  6916  005488                     __ptext15:
  6917                           	opt callstack 0
  6918  005488                     ___wmul:
  6919                           	opt callstack 25
  6920  005488  5004               	movf	___wmul@multiplier^0,w,c
  6921  00548A  0206               	mulwf	___wmul@multiplicand^0,c
  6922  00548C  CFF3 F008          	movff	prodl,___wmul@product
  6923  005490  CFF4 F009          	movff	prodh,___wmul@product+1
  6924  005494  5004               	movf	___wmul@multiplier^0,w,c
  6925  005496  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  6926  005498  50F3               	movf	243,w,c
  6927  00549A  2609               	addwf	(___wmul@product+1)^0,f,c
  6928  00549C  5005               	movf	(___wmul@multiplier+1)^0,w,c
  6929  00549E  0206               	mulwf	___wmul@multiplicand^0,c
  6930  0054A0  50F3               	movf	243,w,c
  6931  0054A2  2609               	addwf	(___wmul@product+1)^0,f,c
  6932  0054A4  C008  F004         	movff	___wmul@product,?___wmul
  6933  0054A8  C009  F005         	movff	___wmul@product+1,?___wmul+1
  6934  0054AC  0012               	return		;funcret
  6935  0054AE                     __end_of___wmul:
  6936                           	opt callstack 0
  6937                           
  6938 ;; *************** function _ftoa_sci *****************
  6939 ;; Defined at:
  6940 ;;		line 97 in file "src/print/toString.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  buffer          2    8[BANK0 ] PTR unsigned char 
  6943 ;;		 -> my_vprintf@buffer(64), 
  6944 ;;  value           4   10[BANK0 ] PTR unsigned char 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  digit           2   40[COMRAM] int 
  6947 ;;  exponent        2   44[COMRAM] int 
  6948 ;;  i               2   42[COMRAM] int 
  6949 ;;  digit           2   38[COMRAM] int 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  2    8[BANK0 ] int 
  6952 ;; Registers used:
  6953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6959 ;;      Params:         0       6       0       0       0       0       0       0       0
  6960 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6962 ;;      Totals:         8       6       0       0       0       0       0       0       0
  6963 ;;Total ram usage:       14 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    5
  6966 ;; This function calls:
  6967 ;;		___fleq
  6968 ;;		___flmul
  6969 ;;		___flneg
  6970 ;;		___flsub
  6971 ;;		___fltol
  6972 ;;		___xxtofl
  6973 ;;		_itoa
  6974 ;;		_normalize
  6975 ;; This function is called by:
  6976 ;;		_my_vprintf
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text16
  6981  002C6A                     __ptext16:
  6982                           	opt callstack 0
  6983  002C6A                     _ftoa_sci:
  6984                           	opt callstack 24
  6985  002C6A                     
  6986                           ;src/print/toString.c: 101:     static const int width = 6;;src/print/toString.c: 103:  
      +                             if (value == 0.0) {
  6987  002C6A  C0DD  F004         	movff	ftoa_sci@value,___fleq@ff1
  6988  002C6E  C0DE  F005         	movff	ftoa_sci@value+1,___fleq@ff1+1
  6989  002C72  C0DF  F006         	movff	ftoa_sci@value+2,___fleq@ff1+2
  6990  002C76  C0E0  F007         	movff	ftoa_sci@value+3,___fleq@ff1+3
  6991  002C7A  0E00               	movlw	0
  6992  002C7C  6E08               	movwf	___fleq@ff2^0,c
  6993  002C7E  0E00               	movlw	0
  6994  002C80  6E09               	movwf	(___fleq@ff2+1)^0,c
  6995  002C82  0E00               	movlw	0
  6996  002C84  6E0A               	movwf	(___fleq@ff2+2)^0,c
  6997  002C86  0E00               	movlw	0
  6998  002C88  6E0B               	movwf	(___fleq@ff2+3)^0,c
  6999  002C8A  EC3A  F025         	call	___fleq	;wreg free
  7000  002C8E  A0D8               	btfss	status,0,c
  7001  002C90  EF4C  F016         	goto	u9481
  7002  002C94  EF4E  F016         	goto	u9480
  7003  002C98                     u9481:
  7004  002C98  EF63  F016         	goto	l8029
  7005  002C9C                     u9480:
  7006  002C9C                     
  7007                           ;src/print/toString.c: 104:         buffer[0] = '0';
  7008  002C9C  C0DB  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7009  002CA0  C0DC  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7010  002CA4  0E30               	movlw	48
  7011  002CA6  6EDF               	movwf	indf2,c
  7012  002CA8                     
  7013                           ;src/print/toString.c: 105:         buffer[1] = '\0';
  7014  002CA8  0100               	movlb	0	; () banked
  7015  002CAA  EE20 F001          	lfsr	2,1
  7016  002CAE  51DB               	movf	ftoa_sci@buffer& (0+255),w,b
  7017  002CB0  26D9               	addwf	fsr2l,f,c
  7018  002CB2  51DC               	movf	(ftoa_sci@buffer+1)& (0+255),w,b
  7019  002CB4  22DA               	addwfc	fsr2h,f,c
  7020  002CB6  0E00               	movlw	0
  7021  002CB8  6EDF               	movwf	indf2,c
  7022  002CBA                     
  7023                           ; BSR set to: 0
  7024                           ;src/print/toString.c: 106:         return 0;
  7025  002CBA  0E00               	movlw	0
  7026  002CBC  6FDC               	movwf	(?_ftoa_sci+1)& (0+255),b
  7027  002CBE  0E00               	movlw	0
  7028  002CC0  6FDB               	movwf	?_ftoa_sci& (0+255),b
  7029  002CC2  EFA4  F017         	goto	l752
  7030  002CC6                     l8029:
  7031                           
  7032                           ;src/print/toString.c: 109:     if (value < 0.0) {
  7033  002CC6  0100               	movlb	0	; () banked
  7034  002CC8  BFE0               	btfsc	(ftoa_sci@value+3)& (0+255),7,b
  7035  002CCA  EF6B  F016         	goto	u9490
  7036  002CCE  EF69  F016         	goto	u9491
  7037  002CD2                     u9491:
  7038  002CD2  EF7D  F016         	goto	l8033
  7039  002CD6                     u9490:
  7040  002CD6                     
  7041                           ; BSR set to: 0
  7042                           ;src/print/toString.c: 110:         value = -value;
  7043  002CD6  C0DD  F004         	movff	ftoa_sci@value,___flneg@f1
  7044  002CDA  C0DE  F005         	movff	ftoa_sci@value+1,___flneg@f1+1
  7045  002CDE  C0DF  F006         	movff	ftoa_sci@value+2,___flneg@f1+2
  7046  002CE2  C0E0  F007         	movff	ftoa_sci@value+3,___flneg@f1+3
  7047  002CE6  ECBB  F029         	call	___flneg	;wreg free
  7048  002CEA  C004  F0DD         	movff	?___flneg,ftoa_sci@value
  7049  002CEE  C005  F0DE         	movff	?___flneg+1,ftoa_sci@value+1
  7050  002CF2  C006  F0DF         	movff	?___flneg+2,ftoa_sci@value+2
  7051  002CF6  C007  F0E0         	movff	?___flneg+3,ftoa_sci@value+3
  7052  002CFA                     l8033:
  7053                           
  7054                           ;src/print/toString.c: 113:     exponent = normalize(&value);
  7055  002CFA  0EDD               	movlw	low ftoa_sci@value
  7056  002CFC  6E1D               	movwf	normalize@val^0,c
  7057  002CFE  0E00               	movlw	high ftoa_sci@value
  7058  002D00  6E1E               	movwf	(normalize@val+1)^0,c
  7059  002D02  EC9A  F020         	call	_normalize	;wreg free
  7060  002D06  C01D  F02D         	movff	?_normalize,ftoa_sci@exponent
  7061  002D0A  C01E  F02E         	movff	?_normalize+1,ftoa_sci@exponent+1
  7062  002D0E                     
  7063                           ;src/print/toString.c: 115:     int digit = value * 10.0;
  7064  002D0E  0E00               	movlw	0
  7065  002D10  6E08               	movwf	___flmul@a^0,c
  7066  002D12  0E00               	movlw	0
  7067  002D14  6E09               	movwf	(___flmul@a+1)^0,c
  7068  002D16  0E20               	movlw	32
  7069  002D18  6E0A               	movwf	(___flmul@a+2)^0,c
  7070  002D1A  0E41               	movlw	65
  7071  002D1C  6E0B               	movwf	(___flmul@a+3)^0,c
  7072  002D1E  C0DD  F004         	movff	ftoa_sci@value,___flmul@b
  7073  002D22  C0DE  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  7074  002D26  C0DF  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  7075  002D2A  C0E0  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  7076  002D2E  EC3F  F00F         	call	___flmul	;wreg free
  7077  002D32  C004  F01D         	movff	?___flmul,___fltol@f1
  7078  002D36  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  7079  002D3A  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  7080  002D3E  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  7081  002D42  EC3B  F022         	call	___fltol	;wreg free
  7082  002D46  C01D  F027         	movff	?___fltol,ftoa_sci@digit
  7083  002D4A  C01E  F028         	movff	?___fltol+1,ftoa_sci@digit+1
  7084  002D4E                     
  7085                           ;src/print/toString.c: 116:     *buffer++ = digit + '0';
  7086  002D4E  5027               	movf	ftoa_sci@digit^0,w,c
  7087  002D50  0F30               	addlw	48
  7088  002D52  C0DB  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7089  002D56  C0DC  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7090  002D5A  6EDF               	movwf	indf2,c
  7091  002D5C  0100               	movlb	0	; () banked
  7092  002D5E  4BDB               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7093  002D60  2BDC               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7094  002D62                     
  7095                           ; BSR set to: 0
  7096                           ;src/print/toString.c: 117:     value = value * 10.0 - digit;
  7097  002D62  0E00               	movlw	0
  7098  002D64  6E08               	movwf	___flmul@a^0,c
  7099  002D66  0E00               	movlw	0
  7100  002D68  6E09               	movwf	(___flmul@a+1)^0,c
  7101  002D6A  0E20               	movlw	32
  7102  002D6C  6E0A               	movwf	(___flmul@a+2)^0,c
  7103  002D6E  0E41               	movlw	65
  7104  002D70  6E0B               	movwf	(___flmul@a+3)^0,c
  7105  002D72  C0DD  F004         	movff	ftoa_sci@value,___flmul@b
  7106  002D76  C0DE  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  7107  002D7A  C0DF  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  7108  002D7E  C0E0  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  7109  002D82  EC3F  F00F         	call	___flmul	;wreg free
  7110  002D86  C004  F01D         	movff	?___flmul,___flsub@b
  7111  002D8A  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  7112  002D8E  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  7113  002D92  C007  F020         	movff	?___flmul+3,___flsub@b+3
  7114  002D96  C027  F004         	movff	ftoa_sci@digit,___xxtofl@val
  7115  002D9A  C028  F005         	movff	ftoa_sci@digit+1,___xxtofl@val+1
  7116  002D9E  0E00               	movlw	0
  7117  002DA0  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  7118  002DA2  0EFF               	movlw	-1
  7119  002DA4  6E06               	movwf	(___xxtofl@val+2)^0,c
  7120  002DA6  6E07               	movwf	(___xxtofl@val+3)^0,c
  7121  002DA8  0E01               	movlw	1
  7122  002DAA  ECC5  F01C         	call	___xxtofl
  7123  002DAE  C004  F021         	movff	?___xxtofl,___flsub@a
  7124  002DB2  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  7125  002DB6  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  7126  002DBA  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  7127  002DBE  ECF1  F028         	call	___flsub	;wreg free
  7128  002DC2  C01D  F0DD         	movff	?___flsub,ftoa_sci@value
  7129  002DC6  C01E  F0DE         	movff	?___flsub+1,ftoa_sci@value+1
  7130  002DCA  C01F  F0DF         	movff	?___flsub+2,ftoa_sci@value+2
  7131  002DCE  C020  F0E0         	movff	?___flsub+3,ftoa_sci@value+3
  7132  002DD2                     
  7133                           ;src/print/toString.c: 118:     --exponent;
  7134  002DD2  062D               	decf	ftoa_sci@exponent^0,f,c
  7135  002DD4  A0D8               	btfss	status,0,c
  7136  002DD6  062E               	decf	(ftoa_sci@exponent+1)^0,f,c
  7137  002DD8                     
  7138                           ;src/print/toString.c: 120:     *buffer++ = '.';
  7139  002DD8  C0DB  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7140  002DDC  C0DC  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7141  002DE0  0E2E               	movlw	46
  7142  002DE2  6EDF               	movwf	indf2,c
  7143  002DE4  0100               	movlb	0	; () banked
  7144  002DE6  4BDB               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7145  002DE8  2BDC               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7146  002DEA                     
  7147                           ; BSR set to: 0
  7148                           ;src/print/toString.c: 121:     int i;;src/print/toString.c: 122:     for (i = 0; i < wi
      +                          dth; i++) {
  7149  002DEA  0E00               	movlw	0
  7150  002DEC  6E2C               	movwf	(ftoa_sci@i+1)^0,c
  7151  002DEE  0E00               	movlw	0
  7152  002DF0  6E2B               	movwf	ftoa_sci@i^0,c
  7153  002DF2                     l8055:
  7154                           
  7155                           ;src/print/toString.c: 123:         int digit = value * 10.0;
  7156  002DF2  0E00               	movlw	0
  7157  002DF4  6E08               	movwf	___flmul@a^0,c
  7158  002DF6  0E00               	movlw	0
  7159  002DF8  6E09               	movwf	(___flmul@a+1)^0,c
  7160  002DFA  0E20               	movlw	32
  7161  002DFC  6E0A               	movwf	(___flmul@a+2)^0,c
  7162  002DFE  0E41               	movlw	65
  7163  002E00  6E0B               	movwf	(___flmul@a+3)^0,c
  7164  002E02  C0DD  F004         	movff	ftoa_sci@value,___flmul@b
  7165  002E06  C0DE  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  7166  002E0A  C0DF  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  7167  002E0E  C0E0  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  7168  002E12  EC3F  F00F         	call	___flmul	;wreg free
  7169  002E16  C004  F01D         	movff	?___flmul,___fltol@f1
  7170  002E1A  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  7171  002E1E  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  7172  002E22  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  7173  002E26  EC3B  F022         	call	___fltol	;wreg free
  7174  002E2A  C01D  F029         	movff	?___fltol,ftoa_sci@digit_1614
  7175  002E2E  C01E  F02A         	movff	?___fltol+1,ftoa_sci@digit_1614+1
  7176  002E32                     
  7177                           ;src/print/toString.c: 124:         *buffer++ = digit + '0';
  7178  002E32  5029               	movf	ftoa_sci@digit_1614^0,w,c
  7179  002E34  0F30               	addlw	48
  7180  002E36  C0DB  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7181  002E3A  C0DC  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7182  002E3E  6EDF               	movwf	indf2,c
  7183  002E40  0100               	movlb	0	; () banked
  7184  002E42  4BDB               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7185  002E44  2BDC               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7186  002E46                     
  7187                           ; BSR set to: 0
  7188                           ;src/print/toString.c: 125:         value = value * 10.0 - digit;
  7189  002E46  0E00               	movlw	0
  7190  002E48  6E08               	movwf	___flmul@a^0,c
  7191  002E4A  0E00               	movlw	0
  7192  002E4C  6E09               	movwf	(___flmul@a+1)^0,c
  7193  002E4E  0E20               	movlw	32
  7194  002E50  6E0A               	movwf	(___flmul@a+2)^0,c
  7195  002E52  0E41               	movlw	65
  7196  002E54  6E0B               	movwf	(___flmul@a+3)^0,c
  7197  002E56  C0DD  F004         	movff	ftoa_sci@value,___flmul@b
  7198  002E5A  C0DE  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  7199  002E5E  C0DF  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  7200  002E62  C0E0  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  7201  002E66  EC3F  F00F         	call	___flmul	;wreg free
  7202  002E6A  C004  F01D         	movff	?___flmul,___flsub@b
  7203  002E6E  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  7204  002E72  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  7205  002E76  C007  F020         	movff	?___flmul+3,___flsub@b+3
  7206  002E7A  C029  F004         	movff	ftoa_sci@digit_1614,___xxtofl@val
  7207  002E7E  C02A  F005         	movff	ftoa_sci@digit_1614+1,___xxtofl@val+1
  7208  002E82  0E00               	movlw	0
  7209  002E84  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  7210  002E86  0EFF               	movlw	-1
  7211  002E88  6E06               	movwf	(___xxtofl@val+2)^0,c
  7212  002E8A  6E07               	movwf	(___xxtofl@val+3)^0,c
  7213  002E8C  0E01               	movlw	1
  7214  002E8E  ECC5  F01C         	call	___xxtofl
  7215  002E92  C004  F021         	movff	?___xxtofl,___flsub@a
  7216  002E96  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  7217  002E9A  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  7218  002E9E  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  7219  002EA2  ECF1  F028         	call	___flsub	;wreg free
  7220  002EA6  C01D  F0DD         	movff	?___flsub,ftoa_sci@value
  7221  002EAA  C01E  F0DE         	movff	?___flsub+1,ftoa_sci@value+1
  7222  002EAE  C01F  F0DF         	movff	?___flsub+2,ftoa_sci@value+2
  7223  002EB2  C020  F0E0         	movff	?___flsub+3,ftoa_sci@value+3
  7224  002EB6                     
  7225                           ;src/print/toString.c: 126:     }
  7226  002EB6  4A2B               	infsnz	ftoa_sci@i^0,f,c
  7227  002EB8  2A2C               	incf	(ftoa_sci@i+1)^0,f,c
  7228  002EBA  BE2C               	btfsc	(ftoa_sci@i+1)^0,7,c
  7229  002EBC  EF69  F017         	goto	u9501
  7230  002EC0  502C               	movf	(ftoa_sci@i+1)^0,w,c
  7231  002EC2  E109               	bnz	u9500
  7232  002EC4  0E06               	movlw	6
  7233  002EC6  5C2B               	subwf	ftoa_sci@i^0,w,c
  7234  002EC8  A0D8               	btfss	status,0,c
  7235  002ECA  EF69  F017         	goto	u9501
  7236  002ECE  EF6B  F017         	goto	u9500
  7237  002ED2                     u9501:
  7238  002ED2  EFF9  F016         	goto	l8055
  7239  002ED6                     u9500:
  7240  002ED6                     
  7241                           ;src/print/toString.c: 128:     *buffer++ = 'e';
  7242  002ED6  C0DB  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7243  002EDA  C0DC  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7244  002EDE  0E65               	movlw	101
  7245  002EE0  6EDF               	movwf	indf2,c
  7246  002EE2  0100               	movlb	0	; () banked
  7247  002EE4  4BDB               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7248  002EE6  2BDC               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7249  002EE8                     
  7250                           ; BSR set to: 0
  7251                           ;src/print/toString.c: 129:     if (exponent >= 0)
  7252  002EE8  BE2E               	btfsc	(ftoa_sci@exponent+1)^0,7,c
  7253  002EEA  EF79  F017         	goto	u9511
  7254  002EEE  EF7B  F017         	goto	u9510
  7255  002EF2                     u9511:
  7256  002EF2  EF85  F017         	goto	l8077
  7257  002EF6                     u9510:
  7258  002EF6                     
  7259                           ; BSR set to: 0
  7260                           ;src/print/toString.c: 130:         *buffer++ = '+';
  7261  002EF6  C0DB  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7262  002EFA  C0DC  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7263  002EFE  0E2B               	movlw	43
  7264  002F00  6EDF               	movwf	indf2,c
  7265  002F02                     l8075:
  7266                           
  7267                           ; BSR set to: 0
  7268  002F02  4BDB               	infsnz	ftoa_sci@buffer& (0+255),f,b
  7269  002F04  2BDC               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  7270  002F06  EF8D  F017         	goto	l8081
  7271  002F0A                     l8077:
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;src/print/toString.c: 132:         *buffer++ = '-';
  7275  002F0A  C0DB  FFD9         	movff	ftoa_sci@buffer,fsr2l
  7276  002F0E  C0DC  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  7277  002F12  0E2D               	movlw	45
  7278  002F14  6EDF               	movwf	indf2,c
  7279  002F16  EF81  F017         	goto	l8075
  7280  002F1A                     l8081:
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;src/print/toString.c: 133:     itoa(buffer, exponent, 10);
  7284  002F1A  C0DB  F0D3         	movff	ftoa_sci@buffer,itoa@str
  7285  002F1E  C0DC  F0D4         	movff	ftoa_sci@buffer+1,itoa@str+1
  7286  002F22  C02D  F0D5         	movff	ftoa_sci@exponent,itoa@num
  7287  002F26  C02E  F0D6         	movff	ftoa_sci@exponent+1,itoa@num+1
  7288  002F2A  0E00               	movlw	0
  7289  002F2C  BFD6               	btfsc	(itoa@num+1)& (0+255),7,b
  7290  002F2E  0EFF               	movlw	-1
  7291  002F30  6FD7               	movwf	(itoa@num+2)& (0+255),b
  7292  002F32  6FD8               	movwf	(itoa@num+3)& (0+255),b
  7293  002F34  0E00               	movlw	0
  7294  002F36  6FDA               	movwf	(itoa@base_+1)& (0+255),b
  7295  002F38  0E0A               	movlw	10
  7296  002F3A  6FD9               	movwf	itoa@base_& (0+255),b
  7297  002F3C  EC71  F01E         	call	_itoa	;wreg free
  7298  002F40                     
  7299                           ;src/print/toString.c: 134:     return exponent;
  7300  002F40  C02D  F0DB         	movff	ftoa_sci@exponent,?_ftoa_sci
  7301  002F44  C02E  F0DC         	movff	ftoa_sci@exponent+1,?_ftoa_sci+1
  7302  002F48                     l752:
  7303  002F48  0012               	return		;funcret
  7304  002F4A                     __end_of_ftoa_sci:
  7305                           	opt callstack 0
  7306                           
  7307 ;; *************** function _itoa *****************
  7308 ;; Defined at:
  7309 ;;		line 22 in file "src/print/toString.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  str             2    0[BANK0 ] PTR unsigned char 
  7312 ;;		 -> my_vprintf@buffer(64), 
  7313 ;;  num             4    2[BANK0 ] long 
  7314 ;;  base_           2    6[BANK0 ] int 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  rem             4   27[COMRAM] long 
  7317 ;;  i               2   31[COMRAM] int 
  7318 ;;  isNegative      2    0        int 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  2    0[BANK0 ] PTR unsigned char 
  7321 ;; Registers used:
  7322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7328 ;;      Params:         0       8       0       0       0       0       0       0       0
  7329 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7331 ;;      Totals:        12       8       0       0       0       0       0       0       0
  7332 ;;Total ram usage:       20 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; Hardware stack levels required when called:    4
  7335 ;; This function calls:
  7336 ;;		___aldiv
  7337 ;;		___almod
  7338 ;;		_reverse
  7339 ;; This function is called by:
  7340 ;;		_my_vprintf
  7341 ;;		_ftoa_sci
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text17
  7346  003CE2                     __ptext17:
  7347                           	opt callstack 0
  7348  003CE2                     _itoa:
  7349                           	opt callstack 25
  7350  003CE2                     
  7351                           ;src/print/toString.c: 23:     int i = 0;
  7352  003CE2  0E00               	movlw	0
  7353  003CE4  6E21               	movwf	(itoa@i+1)^0,c
  7354  003CE6  0E00               	movlw	0
  7355  003CE8  6E20               	movwf	itoa@i^0,c
  7356  003CEA                     
  7357                           ;src/print/toString.c: 27:     if (num == 0) {
  7358  003CEA  0100               	movlb	0	; () banked
  7359  003CEC  51D5               	movf	itoa@num& (0+255),w,b
  7360  003CEE  11D6               	iorwf	(itoa@num+1)& (0+255),w,b
  7361  003CF0  11D7               	iorwf	(itoa@num+2)& (0+255),w,b
  7362  003CF2  11D8               	iorwf	(itoa@num+3)& (0+255),w,b
  7363  003CF4  A4D8               	btfss	status,2,c
  7364  003CF6  EF7F  F01E         	goto	u8141
  7365  003CFA  EF81  F01E         	goto	u8140
  7366  003CFE                     u8141:
  7367  003CFE  EF93  F01E         	goto	l7271
  7368  003D02                     u8140:
  7369  003D02                     
  7370                           ; BSR set to: 0
  7371                           ;src/print/toString.c: 28:         str[i++] = '0';
  7372  003D02  C0D3  FFD9         	movff	itoa@str,fsr2l
  7373  003D06  C0D4  FFDA         	movff	itoa@str+1,fsr2h
  7374  003D0A  0E30               	movlw	48
  7375  003D0C  6EDF               	movwf	indf2,c
  7376  003D0E                     
  7377                           ; BSR set to: 0
  7378  003D0E  4A20               	infsnz	itoa@i^0,f,c
  7379  003D10  2A21               	incf	(itoa@i+1)^0,f,c
  7380  003D12                     
  7381                           ; BSR set to: 0
  7382                           ;src/print/toString.c: 29:         str[i] = '\0';
  7383  003D12  5020               	movf	itoa@i^0,w,c
  7384  003D14  25D3               	addwf	itoa@str& (0+255),w,b
  7385  003D16  6ED9               	movwf	fsr2l,c
  7386  003D18  5021               	movf	(itoa@i+1)^0,w,c
  7387  003D1A  21D4               	addwfc	(itoa@str+1)& (0+255),w,b
  7388  003D1C  6EDA               	movwf	fsr2h,c
  7389  003D1E  0E00               	movlw	0
  7390  003D20  6EDF               	movwf	indf2,c
  7391  003D22  EF33  F01F         	goto	l721
  7392  003D26                     l7271:
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;src/print/toString.c: 34:     if (num < 0 && base_ == 10) {
  7396  003D26  BFD8               	btfsc	(itoa@num+3)& (0+255),7,b
  7397  003D28  EF9A  F01E         	goto	u8150
  7398  003D2C  EF98  F01E         	goto	u8151
  7399  003D30                     u8151:
  7400  003D30  EF19  F01F         	goto	l7293
  7401  003D34                     u8150:
  7402  003D34                     
  7403                           ; BSR set to: 0
  7404  003D34  0E0A               	movlw	10
  7405  003D36  19D9               	xorwf	itoa@base_& (0+255),w,b
  7406  003D38  11DA               	iorwf	(itoa@base_+1)& (0+255),w,b
  7407  003D3A  A4D8               	btfss	status,2,c
  7408  003D3C  EFA2  F01E         	goto	u8161
  7409  003D40  EFA4  F01E         	goto	u8160
  7410  003D44                     u8161:
  7411  003D44  EF19  F01F         	goto	l7293
  7412  003D48                     u8160:
  7413  003D48                     
  7414                           ; BSR set to: 0
  7415                           ;src/print/toString.c: 36:         num = -num;
  7416  003D48  1FD8               	comf	(itoa@num+3)& (0+255),f,b
  7417  003D4A  1FD7               	comf	(itoa@num+2)& (0+255),f,b
  7418  003D4C  1FD6               	comf	(itoa@num+1)& (0+255),f,b
  7419  003D4E  6DD5               	negf	itoa@num& (0+255),b
  7420  003D50  0E00               	movlw	0
  7421  003D52  23D6               	addwfc	(itoa@num+1)& (0+255),f,b
  7422  003D54  23D7               	addwfc	(itoa@num+2)& (0+255),f,b
  7423  003D56  23D8               	addwfc	(itoa@num+3)& (0+255),f,b
  7424  003D58  EF19  F01F         	goto	l7293
  7425  003D5C                     l7279:
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;src/print/toString.c: 41:         long rem = num % base_;
  7429  003D5C  C0D5  F004         	movff	itoa@num,___almod@dividend
  7430  003D60  C0D6  F005         	movff	itoa@num+1,___almod@dividend+1
  7431  003D64  C0D7  F006         	movff	itoa@num+2,___almod@dividend+2
  7432  003D68  C0D8  F007         	movff	itoa@num+3,___almod@dividend+3
  7433  003D6C  C0D9  F008         	movff	itoa@base_,___almod@divisor
  7434  003D70  C0DA  F009         	movff	itoa@base_+1,___almod@divisor+1
  7435  003D74  0E00               	movlw	0
  7436  003D76  BE09               	btfsc	(___almod@divisor+1)^0,7,c
  7437  003D78  0EFF               	movlw	-1
  7438  003D7A  6E0A               	movwf	(___almod@divisor+2)^0,c
  7439  003D7C  6E0B               	movwf	(___almod@divisor+3)^0,c
  7440  003D7E  EC40  F023         	call	___almod	;wreg free
  7441  003D82  C004  F01C         	movff	?___almod,itoa@rem
  7442  003D86  C005  F01D         	movff	?___almod+1,itoa@rem+1
  7443  003D8A  C006  F01E         	movff	?___almod+2,itoa@rem+2
  7444  003D8E  C007  F01F         	movff	?___almod+3,itoa@rem+3
  7445  003D92                     
  7446                           ;src/print/toString.c: 42:         str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';
  7447  003D92  BE1F               	btfsc	(itoa@rem+3)^0,7,c
  7448  003D94  EFD9  F01E         	goto	u8170
  7449  003D98  501F               	movf	(itoa@rem+3)^0,w,c
  7450  003D9A  101E               	iorwf	(itoa@rem+2)^0,w,c
  7451  003D9C  101D               	iorwf	(itoa@rem+1)^0,w,c
  7452  003D9E  E107               	bnz	u8171
  7453  003DA0  0E0A               	movlw	10
  7454  003DA2  5C1C               	subwf	itoa@rem^0,w,c
  7455  003DA4  B0D8               	btfsc	status,0,c
  7456  003DA6  EFD7  F01E         	goto	u8171
  7457  003DAA  EFD9  F01E         	goto	u8170
  7458  003DAE                     u8171:
  7459  003DAE  EFE7  F01E         	goto	l7285
  7460  003DB2                     u8170:
  7461  003DB2  0E30               	movlw	48
  7462  003DB4  241C               	addwf	itoa@rem^0,w,c
  7463  003DB6  6E18               	movwf	_itoa$1596^0,c
  7464  003DB8  0E00               	movlw	0
  7465  003DBA  201D               	addwfc	(itoa@rem+1)^0,w,c
  7466  003DBC  6E19               	movwf	(_itoa$1596+1)^0,c
  7467  003DBE  0E00               	movlw	0
  7468  003DC0  201E               	addwfc	(itoa@rem+2)^0,w,c
  7469  003DC2  6E1A               	movwf	(_itoa$1596+2)^0,c
  7470  003DC4  0E00               	movlw	0
  7471  003DC6  201F               	addwfc	(itoa@rem+3)^0,w,c
  7472  003DC8  6E1B               	movwf	(_itoa$1596+3)^0,c
  7473  003DCA  EFF3  F01E         	goto	l7287
  7474  003DCE                     l7285:
  7475  003DCE  0E57               	movlw	87
  7476  003DD0  241C               	addwf	itoa@rem^0,w,c
  7477  003DD2  6E18               	movwf	_itoa$1596^0,c
  7478  003DD4  0E00               	movlw	0
  7479  003DD6  201D               	addwfc	(itoa@rem+1)^0,w,c
  7480  003DD8  6E19               	movwf	(_itoa$1596+1)^0,c
  7481  003DDA  0E00               	movlw	0
  7482  003DDC  201E               	addwfc	(itoa@rem+2)^0,w,c
  7483  003DDE  6E1A               	movwf	(_itoa$1596+2)^0,c
  7484  003DE0  0E00               	movlw	0
  7485  003DE2  201F               	addwfc	(itoa@rem+3)^0,w,c
  7486  003DE4  6E1B               	movwf	(_itoa$1596+3)^0,c
  7487  003DE6                     l7287:
  7488  003DE6  5020               	movf	itoa@i^0,w,c
  7489  003DE8  0100               	movlb	0	; () banked
  7490  003DEA  25D3               	addwf	itoa@str& (0+255),w,b
  7491  003DEC  6ED9               	movwf	fsr2l,c
  7492  003DEE  5021               	movf	(itoa@i+1)^0,w,c
  7493  003DF0  21D4               	addwfc	(itoa@str+1)& (0+255),w,b
  7494  003DF2  6EDA               	movwf	fsr2h,c
  7495  003DF4  C018  FFDF         	movff	_itoa$1596,indf2
  7496  003DF8                     
  7497                           ; BSR set to: 0
  7498  003DF8  4A20               	infsnz	itoa@i^0,f,c
  7499  003DFA  2A21               	incf	(itoa@i+1)^0,f,c
  7500  003DFC                     
  7501                           ; BSR set to: 0
  7502                           ;src/print/toString.c: 43:         num = num/base_;
  7503  003DFC  C0D5  F004         	movff	itoa@num,___aldiv@dividend
  7504  003E00  C0D6  F005         	movff	itoa@num+1,___aldiv@dividend+1
  7505  003E04  C0D7  F006         	movff	itoa@num+2,___aldiv@dividend+2
  7506  003E08  C0D8  F007         	movff	itoa@num+3,___aldiv@dividend+3
  7507  003E0C  C0D9  F008         	movff	itoa@base_,___aldiv@divisor
  7508  003E10  C0DA  F009         	movff	itoa@base_+1,___aldiv@divisor+1
  7509  003E14  0E00               	movlw	0
  7510  003E16  BE09               	btfsc	(___aldiv@divisor+1)^0,7,c
  7511  003E18  0EFF               	movlw	-1
  7512  003E1A  6E0A               	movwf	(___aldiv@divisor+2)^0,c
  7513  003E1C  6E0B               	movwf	(___aldiv@divisor+3)^0,c
  7514  003E1E  ECB5  F021         	call	___aldiv	;wreg free
  7515  003E22  C004  F0D5         	movff	?___aldiv,itoa@num
  7516  003E26  C005  F0D6         	movff	?___aldiv+1,itoa@num+1
  7517  003E2A  C006  F0D7         	movff	?___aldiv+2,itoa@num+2
  7518  003E2E  C007  F0D8         	movff	?___aldiv+3,itoa@num+3
  7519  003E32                     l7293:
  7520                           
  7521                           ;src/print/toString.c: 40:     while (num != 0) {
  7522  003E32  0100               	movlb	0	; () banked
  7523  003E34  51D5               	movf	itoa@num& (0+255),w,b
  7524  003E36  11D6               	iorwf	(itoa@num+1)& (0+255),w,b
  7525  003E38  11D7               	iorwf	(itoa@num+2)& (0+255),w,b
  7526  003E3A  11D8               	iorwf	(itoa@num+3)& (0+255),w,b
  7527  003E3C  A4D8               	btfss	status,2,c
  7528  003E3E  EF23  F01F         	goto	u8181
  7529  003E42  EF25  F01F         	goto	u8180
  7530  003E46                     u8181:
  7531  003E46  EFAE  F01E         	goto	l7279
  7532  003E4A                     u8180:
  7533  003E4A                     
  7534                           ; BSR set to: 0
  7535                           ;src/print/toString.c: 46:     str[i] = '\0';
  7536  003E4A  5020               	movf	itoa@i^0,w,c
  7537  003E4C  25D3               	addwf	itoa@str& (0+255),w,b
  7538  003E4E  6ED9               	movwf	fsr2l,c
  7539  003E50  5021               	movf	(itoa@i+1)^0,w,c
  7540  003E52  21D4               	addwfc	(itoa@str+1)& (0+255),w,b
  7541  003E54  6EDA               	movwf	fsr2h,c
  7542  003E56  0E00               	movlw	0
  7543  003E58  6EDF               	movwf	indf2,c
  7544  003E5A                     
  7545                           ; BSR set to: 0
  7546                           ;src/print/toString.c: 49:     reverse(str);
  7547  003E5A  C0D3  F012         	movff	itoa@str,reverse@str
  7548  003E5E  C0D4  F013         	movff	itoa@str+1,reverse@str+1
  7549  003E62  ECE2  F025         	call	_reverse	;wreg free
  7550  003E66                     l721:
  7551  003E66  0012               	return		;funcret
  7552  003E68                     __end_of_itoa:
  7553                           	opt callstack 0
  7554                           
  7555 ;; *************** function _reverse *****************
  7556 ;; Defined at:
  7557 ;;		line 8 in file "src/print/toString.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  str             2   17[COMRAM] PTR unsigned char 
  7560 ;;		 -> my_vprintf@buffer(64), getWP@prec_str(5), getWP@width_str(5), 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  auxstr         64    0[BANK1 ] unsigned char [64]
  7563 ;;  i               2   66[BANK1 ] int 
  7564 ;;  j               2   64[BANK1 ] int 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7574 ;;      Params:         2       0       0       0       0       0       0       0       0
  7575 ;;      Locals:         0       0      68       0       0       0       0       0       0
  7576 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7577 ;;      Totals:         4       0      68       0       0       0       0       0       0
  7578 ;;Total ram usage:       72 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    3
  7581 ;; This function calls:
  7582 ;;		_strcpy
  7583 ;;		_strlen
  7584 ;; This function is called by:
  7585 ;;		_getWP
  7586 ;;		_itoa
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text18
  7591  004BC4                     __ptext18:
  7592                           	opt callstack 0
  7593  004BC4                     _reverse:
  7594                           	opt callstack 25
  7595  004BC4                     
  7596                           ;src/print/toString.c: 9:     int i;;src/print/toString.c: 10:     int j = strlen(str) -
      +                          1;
  7597  004BC4  C012  F004         	movff	reverse@str,strlen@s
  7598  004BC8  C013  F005         	movff	reverse@str+1,strlen@s+1
  7599  004BCC  ECD7  F029         	call	_strlen	;wreg free
  7600  004BD0  0EFF               	movlw	255
  7601  004BD2  2404               	addwf	?_strlen^0,w,c
  7602  004BD4  0101               	movlb	1	; () banked
  7603  004BD6  6F40               	movwf	reverse@j& (0+255),b
  7604  004BD8  0EFF               	movlw	255
  7605  004BDA  2005               	addwfc	(?_strlen+1)^0,w,c
  7606  004BDC  6F41               	movwf	(reverse@j+1)& (0+255),b
  7607  004BDE                     
  7608                           ; BSR set to: 1
  7609                           ;src/print/toString.c: 11:     char auxstr[64] = " ";
  7610  004BDE  EE22  F080         	lfsr	2,reverse@F192
  7611  004BE2  EE11  F000         	lfsr	1,reverse@auxstr
  7612  004BE6  0E3F               	movlw	63
  7613  004BE8                     u6931:
  7614  004BE8  CFDB FFE3          	movff	plusw2,plusw1
  7615  004BEC  06E8               	decf	wreg,f,c
  7616  004BEE  E2FC               	bc	u6931
  7617  004BF0                     
  7618                           ; BSR set to: 1
  7619                           ;src/print/toString.c: 13:     for(i = 0; i <= j;i++)
  7620  004BF0  0E00               	movlw	0
  7621  004BF2  6F43               	movwf	(reverse@i+1)& (0+255),b
  7622  004BF4  0E00               	movlw	0
  7623  004BF6  6F42               	movwf	reverse@i& (0+255),b
  7624  004BF8  EF14  F026         	goto	l6563
  7625  004BFC                     l6559:
  7626                           
  7627                           ; BSR set to: 1
  7628                           ;src/print/toString.c: 14:          auxstr[i] = str[j-i];
  7629  004BFC  5142               	movf	reverse@i& (0+255),w,b
  7630  004BFE  5C12               	subwf	reverse@str^0,w,c
  7631  004C00  6E14               	movwf	??_reverse^0,c
  7632  004C02  5143               	movf	(reverse@i+1)& (0+255),w,b
  7633  004C04  5813               	subwfb	(reverse@str+1)^0,w,c
  7634  004C06  6E15               	movwf	(??_reverse+1)^0,c
  7635  004C08  5140               	movf	reverse@j& (0+255),w,b
  7636  004C0A  2414               	addwf	??_reverse^0,w,c
  7637  004C0C  6ED9               	movwf	fsr2l,c
  7638  004C0E  5141               	movf	(reverse@j+1)& (0+255),w,b
  7639  004C10  2015               	addwfc	(??_reverse+1)^0,w,c
  7640  004C12  6EDA               	movwf	fsr2h,c
  7641  004C14  0E00               	movlw	low reverse@auxstr
  7642  004C16  2542               	addwf	reverse@i& (0+255),w,b
  7643  004C18  6EE1               	movwf	fsr1l,c
  7644  004C1A  0E01               	movlw	high reverse@auxstr
  7645  004C1C  2143               	addwfc	(reverse@i+1)& (0+255),w,b
  7646  004C1E  6EE2               	movwf	fsr1h,c
  7647  004C20  CFDF FFE7          	movff	indf2,indf1
  7648  004C24                     
  7649                           ; BSR set to: 1
  7650  004C24  4B42               	infsnz	reverse@i& (0+255),f,b
  7651  004C26  2B43               	incf	(reverse@i+1)& (0+255),f,b
  7652  004C28                     l6563:
  7653                           
  7654                           ; BSR set to: 1
  7655  004C28  5142               	movf	reverse@i& (0+255),w,b
  7656  004C2A  5D40               	subwf	reverse@j& (0+255),w,b
  7657  004C2C  5141               	movf	(reverse@j+1)& (0+255),w,b
  7658  004C2E  0A80               	xorlw	128
  7659  004C30  6E14               	movwf	??_reverse^0,c
  7660  004C32  5143               	movf	(reverse@i+1)& (0+255),w,b
  7661  004C34  0A80               	xorlw	128
  7662  004C36  5814               	subwfb	??_reverse^0,w,c
  7663  004C38  B0D8               	btfsc	status,0,c
  7664  004C3A  EF21  F026         	goto	u6941
  7665  004C3E  EF23  F026         	goto	u6940
  7666  004C42                     u6941:
  7667  004C42  EFFE  F025         	goto	l6559
  7668  004C46                     u6940:
  7669  004C46                     
  7670                           ; BSR set to: 1
  7671                           ;src/print/toString.c: 16:     strcpy(str, auxstr);
  7672  004C46  C012  F008         	movff	reverse@str,strcpy@dest
  7673  004C4A  C013  F009         	movff	reverse@str+1,strcpy@dest+1
  7674  004C4E  0E00               	movlw	low reverse@auxstr
  7675  004C50  6E0A               	movwf	strcpy@src^0,c
  7676  004C52  0E01               	movlw	high reverse@auxstr
  7677  004C54  6E0B               	movwf	(strcpy@src+1)^0,c
  7678  004C56  EC85  F027         	call	_strcpy	;wreg free
  7679  004C5A  0012               	return		;funcret
  7680  004C5C                     __end_of_reverse:
  7681                           	opt callstack 0
  7682                           
  7683 ;; *************** function _strcpy *****************
  7684 ;; Defined at:
  7685 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;  dest            2    7[COMRAM] PTR unsigned char 
  7688 ;;		 -> my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), getWP@width_str(5), 
  7689 ;;  src             2    9[COMRAM] PTR const unsigned char 
  7690 ;;		 -> reverse@auxstr(64), STR_11(2), STR_10(2), my_vprintf@buffer(64), 
  7691 ;;		 -> my_vprintf@ch(2), my_vprintf@char_temp(2), ?_my_vprintf(2), 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  d               2   15[COMRAM] PTR unsigned char 
  7694 ;;		 -> my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), getWP@width_str(5), 
  7695 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7696 ;;		 -> reverse@auxstr(64), STR_11(2), STR_10(2), my_vprintf@buffer(64), 
  7697 ;;		 -> my_vprintf@ch(2), my_vprintf@char_temp(2), ?_my_vprintf(2), 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  2    7[COMRAM] PTR unsigned char 
  7700 ;; Registers used:
  7701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7707 ;;      Params:         4       0       0       0       0       0       0       0       0
  7708 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7709 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7710 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7711 ;;Total ram usage:       10 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:    2
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_my_vprintf
  7718 ;;		_reverse
  7719 ;;		_strcat
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           	psect	text19
  7724  004F0A                     __ptext19:
  7725                           	opt callstack 0
  7726  004F0A                     _strcpy:
  7727                           	opt callstack 27
  7728  004F0A  C00A  F00E         	movff	strcpy@src,strcpy@s
  7729  004F0E  C00B  F00F         	movff	strcpy@src+1,strcpy@s+1
  7730  004F12  C008  F010         	movff	strcpy@dest,strcpy@d
  7731  004F16  C009  F011         	movff	strcpy@dest+1,strcpy@d+1
  7732  004F1A                     l6541:
  7733  004F1A  500E               	movf	strcpy@s^0,w,c
  7734  004F1C  6E0C               	movwf	??_strcpy^0,c
  7735  004F1E  500F               	movf	(strcpy@s+1)^0,w,c
  7736  004F20  6E0D               	movwf	(??_strcpy+1)^0,c
  7737  004F22  4A0E               	infsnz	strcpy@s^0,f,c
  7738  004F24  2A0F               	incf	(strcpy@s+1)^0,f,c
  7739  004F26  C00C  FFF6         	movff	??_strcpy,tblptrl
  7740  004F2A  C00D  FFF7         	movff	??_strcpy+1,tblptrh
  7741  004F2E  6AF8               	clrf	tblptru,c
  7742  004F30  C010  FFD9         	movff	strcpy@d,fsr2l
  7743  004F34  C011  FFDA         	movff	strcpy@d+1,fsr2h
  7744  004F38  4A10               	infsnz	strcpy@d^0,f,c
  7745  004F3A  2A11               	incf	(strcpy@d+1)^0,f,c
  7746  004F3C  0E07               	movlw	(high __ramtop+-1)
  7747  004F3E  64F7               	cpfsgt	tblptrh,c
  7748  004F40  D003               	bra	u6897
  7749  004F42  0008               	tblrd		*
  7750  004F44  50F5               	movf	tablat,w,c
  7751  004F46  D005               	bra	u6890
  7752  004F48                     u6897:
  7753  004F48  CFF6 FFE1          	movff	tblptrl,fsr1l
  7754  004F4C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7755  004F50  50E7               	movf	indf1,w,c
  7756  004F52                     u6890:
  7757  004F52  6EDF               	movwf	indf2,c
  7758  004F54  50DF               	movf	indf2,w,c
  7759  004F56  A4D8               	btfss	status,2,c
  7760  004F58  EFB0  F027         	goto	u6901
  7761  004F5C  EFB2  F027         	goto	u6900
  7762  004F60                     u6901:
  7763  004F60  EF8D  F027         	goto	l6541
  7764  004F64                     u6900:
  7765  004F64  0012               	return		;funcret
  7766  004F66                     __end_of_strcpy:
  7767                           	opt callstack 0
  7768                           
  7769 ;; *************** function ___almod *****************
  7770 ;; Defined at:
  7771 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  dividend        4    3[COMRAM] long 
  7774 ;;  divisor         4    7[COMRAM] long 
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;  sign            1   12[COMRAM] unsigned char 
  7777 ;;  counter         1   11[COMRAM] unsigned char 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  4    3[COMRAM] long 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2, status,0
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7787 ;;      Params:         8       0       0       0       0       0       0       0       0
  7788 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7790 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7791 ;;Total ram usage:       10 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    2
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_itoa
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text20
  7802  004680                     __ptext20:
  7803                           	opt callstack 0
  7804  004680                     ___almod:
  7805                           	opt callstack 26
  7806  004680  0E00               	movlw	0
  7807  004682  6E0D               	movwf	___almod@sign^0,c
  7808  004684  BE07               	btfsc	(___almod@dividend+3)^0,7,c
  7809  004686  EF49  F023         	goto	u7010
  7810  00468A  EF47  F023         	goto	u7011
  7811  00468E                     u7011:
  7812  00468E  EF53  F023         	goto	l6625
  7813  004692                     u7010:
  7814  004692  1E07               	comf	(___almod@dividend+3)^0,f,c
  7815  004694  1E06               	comf	(___almod@dividend+2)^0,f,c
  7816  004696  1E05               	comf	(___almod@dividend+1)^0,f,c
  7817  004698  6C04               	negf	___almod@dividend^0,c
  7818  00469A  0E00               	movlw	0
  7819  00469C  2205               	addwfc	(___almod@dividend+1)^0,f,c
  7820  00469E  2206               	addwfc	(___almod@dividend+2)^0,f,c
  7821  0046A0  2207               	addwfc	(___almod@dividend+3)^0,f,c
  7822  0046A2  0E01               	movlw	1
  7823  0046A4  6E0D               	movwf	___almod@sign^0,c
  7824  0046A6                     l6625:
  7825  0046A6  BE0B               	btfsc	(___almod@divisor+3)^0,7,c
  7826  0046A8  EF5A  F023         	goto	u7020
  7827  0046AC  EF58  F023         	goto	u7021
  7828  0046B0                     u7021:
  7829  0046B0  EF62  F023         	goto	l6629
  7830  0046B4                     u7020:
  7831  0046B4  1E0B               	comf	(___almod@divisor+3)^0,f,c
  7832  0046B6  1E0A               	comf	(___almod@divisor+2)^0,f,c
  7833  0046B8  1E09               	comf	(___almod@divisor+1)^0,f,c
  7834  0046BA  6C08               	negf	___almod@divisor^0,c
  7835  0046BC  0E00               	movlw	0
  7836  0046BE  2209               	addwfc	(___almod@divisor+1)^0,f,c
  7837  0046C0  220A               	addwfc	(___almod@divisor+2)^0,f,c
  7838  0046C2  220B               	addwfc	(___almod@divisor+3)^0,f,c
  7839  0046C4                     l6629:
  7840  0046C4  5008               	movf	___almod@divisor^0,w,c
  7841  0046C6  1009               	iorwf	(___almod@divisor+1)^0,w,c
  7842  0046C8  100A               	iorwf	(___almod@divisor+2)^0,w,c
  7843  0046CA  100B               	iorwf	(___almod@divisor+3)^0,w,c
  7844  0046CC  B4D8               	btfsc	status,2,c
  7845  0046CE  EF6B  F023         	goto	u7031
  7846  0046D2  EF6D  F023         	goto	u7030
  7847  0046D6                     u7031:
  7848  0046D6  EF9D  F023         	goto	l6645
  7849  0046DA                     u7030:
  7850  0046DA  0E01               	movlw	1
  7851  0046DC  6E0C               	movwf	___almod@counter^0,c
  7852  0046DE  EF77  F023         	goto	l6635
  7853  0046E2                     l6633:
  7854  0046E2  90D8               	bcf	status,0,c
  7855  0046E4  3608               	rlcf	___almod@divisor^0,f,c
  7856  0046E6  3609               	rlcf	(___almod@divisor+1)^0,f,c
  7857  0046E8  360A               	rlcf	(___almod@divisor+2)^0,f,c
  7858  0046EA  360B               	rlcf	(___almod@divisor+3)^0,f,c
  7859  0046EC  2A0C               	incf	___almod@counter^0,f,c
  7860  0046EE                     l6635:
  7861  0046EE  AE0B               	btfss	(___almod@divisor+3)^0,7,c
  7862  0046F0  EF7C  F023         	goto	u7041
  7863  0046F4  EF7E  F023         	goto	u7040
  7864  0046F8                     u7041:
  7865  0046F8  EF71  F023         	goto	l6633
  7866  0046FC                     u7040:
  7867  0046FC                     l6637:
  7868  0046FC  5008               	movf	___almod@divisor^0,w,c
  7869  0046FE  5C04               	subwf	___almod@dividend^0,w,c
  7870  004700  5009               	movf	(___almod@divisor+1)^0,w,c
  7871  004702  5805               	subwfb	(___almod@dividend+1)^0,w,c
  7872  004704  500A               	movf	(___almod@divisor+2)^0,w,c
  7873  004706  5806               	subwfb	(___almod@dividend+2)^0,w,c
  7874  004708  500B               	movf	(___almod@divisor+3)^0,w,c
  7875  00470A  5807               	subwfb	(___almod@dividend+3)^0,w,c
  7876  00470C  A0D8               	btfss	status,0,c
  7877  00470E  EF8B  F023         	goto	u7051
  7878  004712  EF8D  F023         	goto	u7050
  7879  004716                     u7051:
  7880  004716  EF95  F023         	goto	l6641
  7881  00471A                     u7050:
  7882  00471A  5008               	movf	___almod@divisor^0,w,c
  7883  00471C  5E04               	subwf	___almod@dividend^0,f,c
  7884  00471E  5009               	movf	(___almod@divisor+1)^0,w,c
  7885  004720  5A05               	subwfb	(___almod@dividend+1)^0,f,c
  7886  004722  500A               	movf	(___almod@divisor+2)^0,w,c
  7887  004724  5A06               	subwfb	(___almod@dividend+2)^0,f,c
  7888  004726  500B               	movf	(___almod@divisor+3)^0,w,c
  7889  004728  5A07               	subwfb	(___almod@dividend+3)^0,f,c
  7890  00472A                     l6641:
  7891  00472A  90D8               	bcf	status,0,c
  7892  00472C  320B               	rrcf	(___almod@divisor+3)^0,f,c
  7893  00472E  320A               	rrcf	(___almod@divisor+2)^0,f,c
  7894  004730  3209               	rrcf	(___almod@divisor+1)^0,f,c
  7895  004732  3208               	rrcf	___almod@divisor^0,f,c
  7896  004734  2E0C               	decfsz	___almod@counter^0,f,c
  7897  004736  EF7E  F023         	goto	l6637
  7898  00473A                     l6645:
  7899  00473A  500D               	movf	___almod@sign^0,w,c
  7900  00473C  B4D8               	btfsc	status,2,c
  7901  00473E  EFA3  F023         	goto	u7061
  7902  004742  EFA5  F023         	goto	u7060
  7903  004746                     u7061:
  7904  004746  EFAD  F023         	goto	l6649
  7905  00474A                     u7060:
  7906  00474A  1E07               	comf	(___almod@dividend+3)^0,f,c
  7907  00474C  1E06               	comf	(___almod@dividend+2)^0,f,c
  7908  00474E  1E05               	comf	(___almod@dividend+1)^0,f,c
  7909  004750  6C04               	negf	___almod@dividend^0,c
  7910  004752  0E00               	movlw	0
  7911  004754  2205               	addwfc	(___almod@dividend+1)^0,f,c
  7912  004756  2206               	addwfc	(___almod@dividend+2)^0,f,c
  7913  004758  2207               	addwfc	(___almod@dividend+3)^0,f,c
  7914  00475A                     l6649:
  7915  00475A  C004  F004         	movff	___almod@dividend,?___almod
  7916  00475E  C005  F005         	movff	___almod@dividend+1,?___almod+1
  7917  004762  C006  F006         	movff	___almod@dividend+2,?___almod+2
  7918  004766  C007  F007         	movff	___almod@dividend+3,?___almod+3
  7919  00476A  0012               	return		;funcret
  7920  00476C                     __end_of___almod:
  7921                           	opt callstack 0
  7922                           
  7923 ;; *************** function _ftoa *****************
  7924 ;; Defined at:
  7925 ;;		line 140 in file "src/print/toString.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  buffer          2   38[COMRAM] PTR unsigned char 
  7928 ;;		 -> my_vprintf@buffer(64), 
  7929 ;;  value           4   40[COMRAM] PTR unsigned char 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  digit           2   46[COMRAM] int 
  7932 ;;  digit           2   44[COMRAM] int 
  7933 ;;  places          2   50[COMRAM] int 
  7934 ;;  exponent        2   48[COMRAM] int 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      void 
  7937 ;; Registers used:
  7938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7944 ;;      Params:         6       0       0       0       0       0       0       0       0
  7945 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7947 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7948 ;;Total ram usage:       14 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    4
  7951 ;; This function calls:
  7952 ;;		___fleq
  7953 ;;		___flmul
  7954 ;;		___flneg
  7955 ;;		___flsub
  7956 ;;		___fltol
  7957 ;;		___xxtofl
  7958 ;;		_normalize
  7959 ;; This function is called by:
  7960 ;;		_my_vprintf
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text21
  7965  002642                     __ptext21:
  7966                           	opt callstack 0
  7967  002642                     _ftoa:
  7968                           	opt callstack 25
  7969  002642                     
  7970                           ;src/print/toString.c: 145:     int places = 0;
  7971  002642  0E00               	movlw	0
  7972  002644  6E34               	movwf	(ftoa@places+1)^0,c
  7973  002646  0E00               	movlw	0
  7974  002648  6E33               	movwf	ftoa@places^0,c
  7975  00264A                     
  7976                           ;src/print/toString.c: 146:     static const int width = 7;;src/print/toString.c: 148:  
      +                             if (value == 0.0) {
  7977  00264A  C029  F004         	movff	ftoa@value,___fleq@ff1
  7978  00264E  C02A  F005         	movff	ftoa@value+1,___fleq@ff1+1
  7979  002652  C02B  F006         	movff	ftoa@value+2,___fleq@ff1+2
  7980  002656  C02C  F007         	movff	ftoa@value+3,___fleq@ff1+3
  7981  00265A  0E00               	movlw	0
  7982  00265C  6E08               	movwf	___fleq@ff2^0,c
  7983  00265E  0E00               	movlw	0
  7984  002660  6E09               	movwf	(___fleq@ff2+1)^0,c
  7985  002662  0E00               	movlw	0
  7986  002664  6E0A               	movwf	(___fleq@ff2+2)^0,c
  7987  002666  0E00               	movlw	0
  7988  002668  6E0B               	movwf	(___fleq@ff2+3)^0,c
  7989  00266A  EC3A  F025         	call	___fleq	;wreg free
  7990  00266E  A0D8               	btfss	status,0,c
  7991  002670  EF3C  F013         	goto	u9401
  7992  002674  EF3E  F013         	goto	u9400
  7993  002678                     u9401:
  7994  002678  EF5E  F013         	goto	l7959
  7995  00267C                     u9400:
  7996  00267C                     
  7997                           ;src/print/toString.c: 149:         buffer[0] = '0';
  7998  00267C  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7999  002680  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  8000  002684  0E30               	movlw	48
  8001  002686  6EDF               	movwf	indf2,c
  8002  002688                     
  8003                           ;src/print/toString.c: 150:         buffer[1] = '.';
  8004  002688  EE20 F001          	lfsr	2,1
  8005  00268C  5027               	movf	ftoa@buffer^0,w,c
  8006  00268E  26D9               	addwf	fsr2l,f,c
  8007  002690  5028               	movf	(ftoa@buffer+1)^0,w,c
  8008  002692  22DA               	addwfc	fsr2h,f,c
  8009  002694  0E2E               	movlw	46
  8010  002696  6EDF               	movwf	indf2,c
  8011  002698                     
  8012                           ;src/print/toString.c: 151:         buffer[2] = '0';
  8013  002698  EE20 F002          	lfsr	2,2
  8014  00269C  5027               	movf	ftoa@buffer^0,w,c
  8015  00269E  26D9               	addwf	fsr2l,f,c
  8016  0026A0  5028               	movf	(ftoa@buffer+1)^0,w,c
  8017  0026A2  22DA               	addwfc	fsr2h,f,c
  8018  0026A4  0E30               	movlw	48
  8019  0026A6  6EDF               	movwf	indf2,c
  8020  0026A8                     
  8021                           ;src/print/toString.c: 152:         buffer[3] = '\0';
  8022  0026A8  EE20 F003          	lfsr	2,3
  8023  0026AC  5027               	movf	ftoa@buffer^0,w,c
  8024  0026AE  26D9               	addwf	fsr2l,f,c
  8025  0026B0  5028               	movf	(ftoa@buffer+1)^0,w,c
  8026  0026B2  22DA               	addwfc	fsr2h,f,c
  8027  0026B4  0E00               	movlw	0
  8028  0026B6  6EDF               	movwf	indf2,c
  8029  0026B8  EFB9  F014         	goto	l763
  8030  0026BC                     l7959:
  8031                           
  8032                           ;src/print/toString.c: 156:     if (value < 0.0) {
  8033  0026BC  BE2C               	btfsc	(ftoa@value+3)^0,7,c
  8034  0026BE  EF65  F013         	goto	u9410
  8035  0026C2  EF63  F013         	goto	u9411
  8036  0026C6                     u9411:
  8037  0026C6  EF77  F013         	goto	l7963
  8038  0026CA                     u9410:
  8039  0026CA                     
  8040                           ;src/print/toString.c: 157:         value = -value;
  8041  0026CA  C029  F004         	movff	ftoa@value,___flneg@f1
  8042  0026CE  C02A  F005         	movff	ftoa@value+1,___flneg@f1+1
  8043  0026D2  C02B  F006         	movff	ftoa@value+2,___flneg@f1+2
  8044  0026D6  C02C  F007         	movff	ftoa@value+3,___flneg@f1+3
  8045  0026DA  ECBB  F029         	call	___flneg	;wreg free
  8046  0026DE  C004  F029         	movff	?___flneg,ftoa@value
  8047  0026E2  C005  F02A         	movff	?___flneg+1,ftoa@value+1
  8048  0026E6  C006  F02B         	movff	?___flneg+2,ftoa@value+2
  8049  0026EA  C007  F02C         	movff	?___flneg+3,ftoa@value+3
  8050  0026EE                     l7963:
  8051                           
  8052                           ;src/print/toString.c: 160:     exponent = normalize(&value);
  8053  0026EE  0E29               	movlw	low ftoa@value
  8054  0026F0  6E1D               	movwf	normalize@val^0,c
  8055  0026F2  0E00               	movlw	high ftoa@value
  8056  0026F4  6E1E               	movwf	(normalize@val+1)^0,c
  8057  0026F6  EC9A  F020         	call	_normalize	;wreg free
  8058  0026FA  C01D  F031         	movff	?_normalize,ftoa@exponent
  8059  0026FE  C01E  F032         	movff	?_normalize+1,ftoa@exponent+1
  8060                           
  8061                           ;src/print/toString.c: 162:     while (exponent > 0) {
  8062  002702  EFE9  F013         	goto	l7977
  8063  002706                     l7965:
  8064                           
  8065                           ;src/print/toString.c: 163:         int digit = value * 10;
  8066  002706  0E00               	movlw	0
  8067  002708  6E08               	movwf	___flmul@a^0,c
  8068  00270A  0E00               	movlw	0
  8069  00270C  6E09               	movwf	(___flmul@a+1)^0,c
  8070  00270E  0E20               	movlw	32
  8071  002710  6E0A               	movwf	(___flmul@a+2)^0,c
  8072  002712  0E41               	movlw	65
  8073  002714  6E0B               	movwf	(___flmul@a+3)^0,c
  8074  002716  C029  F004         	movff	ftoa@value,___flmul@b
  8075  00271A  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  8076  00271E  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  8077  002722  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  8078  002726  EC3F  F00F         	call	___flmul	;wreg free
  8079  00272A  C004  F01D         	movff	?___flmul,___fltol@f1
  8080  00272E  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  8081  002732  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  8082  002736  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  8083  00273A  EC3B  F022         	call	___fltol	;wreg free
  8084  00273E  C01D  F02D         	movff	?___fltol,ftoa@digit
  8085  002742  C01E  F02E         	movff	?___fltol+1,ftoa@digit+1
  8086  002746                     
  8087                           ;src/print/toString.c: 164:         *buffer++ = digit + '0';
  8088  002746  502D               	movf	ftoa@digit^0,w,c
  8089  002748  0F30               	addlw	48
  8090  00274A  C027  FFD9         	movff	ftoa@buffer,fsr2l
  8091  00274E  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  8092  002752  6EDF               	movwf	indf2,c
  8093  002754  4A27               	infsnz	ftoa@buffer^0,f,c
  8094  002756  2A28               	incf	(ftoa@buffer+1)^0,f,c
  8095  002758                     
  8096                           ;src/print/toString.c: 165:         value = value * 10 - digit;
  8097  002758  0E00               	movlw	0
  8098  00275A  6E08               	movwf	___flmul@a^0,c
  8099  00275C  0E00               	movlw	0
  8100  00275E  6E09               	movwf	(___flmul@a+1)^0,c
  8101  002760  0E20               	movlw	32
  8102  002762  6E0A               	movwf	(___flmul@a+2)^0,c
  8103  002764  0E41               	movlw	65
  8104  002766  6E0B               	movwf	(___flmul@a+3)^0,c
  8105  002768  C029  F004         	movff	ftoa@value,___flmul@b
  8106  00276C  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  8107  002770  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  8108  002774  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  8109  002778  EC3F  F00F         	call	___flmul	;wreg free
  8110  00277C  C004  F01D         	movff	?___flmul,___flsub@b
  8111  002780  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  8112  002784  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  8113  002788  C007  F020         	movff	?___flmul+3,___flsub@b+3
  8114  00278C  C02D  F004         	movff	ftoa@digit,___xxtofl@val
  8115  002790  C02E  F005         	movff	ftoa@digit+1,___xxtofl@val+1
  8116  002794  0E00               	movlw	0
  8117  002796  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  8118  002798  0EFF               	movlw	-1
  8119  00279A  6E06               	movwf	(___xxtofl@val+2)^0,c
  8120  00279C  6E07               	movwf	(___xxtofl@val+3)^0,c
  8121  00279E  0E01               	movlw	1
  8122  0027A0  ECC5  F01C         	call	___xxtofl
  8123  0027A4  C004  F021         	movff	?___xxtofl,___flsub@a
  8124  0027A8  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  8125  0027AC  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  8126  0027B0  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  8127  0027B4  ECF1  F028         	call	___flsub	;wreg free
  8128  0027B8  C01D  F029         	movff	?___flsub,ftoa@value
  8129  0027BC  C01E  F02A         	movff	?___flsub+1,ftoa@value+1
  8130  0027C0  C01F  F02B         	movff	?___flsub+2,ftoa@value+2
  8131  0027C4  C020  F02C         	movff	?___flsub+3,ftoa@value+3
  8132  0027C8                     
  8133                           ;src/print/toString.c: 166:         ++places;
  8134  0027C8  4A33               	infsnz	ftoa@places^0,f,c
  8135  0027CA  2A34               	incf	(ftoa@places+1)^0,f,c
  8136  0027CC                     
  8137                           ;src/print/toString.c: 167:         --exponent;
  8138  0027CC  0631               	decf	ftoa@exponent^0,f,c
  8139  0027CE  A0D8               	btfss	status,0,c
  8140  0027D0  0632               	decf	(ftoa@exponent+1)^0,f,c
  8141  0027D2                     l7977:
  8142                           
  8143                           ;src/print/toString.c: 162:     while (exponent > 0) {
  8144  0027D2  BE32               	btfsc	(ftoa@exponent+1)^0,7,c
  8145  0027D4  EFF6  F013         	goto	u9420
  8146  0027D8  5032               	movf	(ftoa@exponent+1)^0,w,c
  8147  0027DA  E106               	bnz	u9421
  8148  0027DC  0431               	decf	ftoa@exponent^0,w,c
  8149  0027DE  B0D8               	btfsc	status,0,c
  8150  0027E0  EFF4  F013         	goto	u9421
  8151  0027E4  EFF6  F013         	goto	u9420
  8152  0027E8                     u9421:
  8153  0027E8  EF83  F013         	goto	l7965
  8154  0027EC                     u9420:
  8155  0027EC                     
  8156                           ;src/print/toString.c: 170:     if (places == 0)
  8157  0027EC  5033               	movf	ftoa@places^0,w,c
  8158  0027EE  1034               	iorwf	(ftoa@places+1)^0,w,c
  8159  0027F0  A4D8               	btfss	status,2,c
  8160  0027F2  EFFD  F013         	goto	u9431
  8161  0027F6  EFFF  F013         	goto	u9430
  8162  0027FA                     u9431:
  8163  0027FA  EF07  F014         	goto	l7985
  8164  0027FE                     u9430:
  8165  0027FE                     
  8166                           ;src/print/toString.c: 171:         *buffer++ = '0';
  8167  0027FE  C027  FFD9         	movff	ftoa@buffer,fsr2l
  8168  002802  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  8169  002806  0E30               	movlw	48
  8170  002808  6EDF               	movwf	indf2,c
  8171  00280A  4A27               	infsnz	ftoa@buffer^0,f,c
  8172  00280C  2A28               	incf	(ftoa@buffer+1)^0,f,c
  8173  00280E                     l7985:
  8174                           
  8175                           ;src/print/toString.c: 172:     if (places < width)
  8176  00280E  BE34               	btfsc	(ftoa@places+1)^0,7,c
  8177  002810  EF15  F014         	goto	u9440
  8178  002814  5034               	movf	(ftoa@places+1)^0,w,c
  8179  002816  E107               	bnz	u9441
  8180  002818  0E07               	movlw	7
  8181  00281A  5C33               	subwf	ftoa@places^0,w,c
  8182  00281C  B0D8               	btfsc	status,0,c
  8183  00281E  EF13  F014         	goto	u9441
  8184  002822  EF15  F014         	goto	u9440
  8185  002826                     u9441:
  8186  002826  EF2B  F014         	goto	l7999
  8187  00282A                     u9440:
  8188  00282A                     
  8189                           ;src/print/toString.c: 173:         *buffer++ = '.';
  8190  00282A  C027  FFD9         	movff	ftoa@buffer,fsr2l
  8191  00282E  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  8192  002832  0E2E               	movlw	46
  8193  002834  6EDF               	movwf	indf2,c
  8194  002836  4A27               	infsnz	ftoa@buffer^0,f,c
  8195  002838  2A28               	incf	(ftoa@buffer+1)^0,f,c
  8196  00283A  EF2B  F014         	goto	l7999
  8197  00283E                     l7991:
  8198                           
  8199                           ;src/print/toString.c: 176:         *buffer++ = '0';
  8200  00283E  C027  FFD9         	movff	ftoa@buffer,fsr2l
  8201  002842  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  8202  002846  0E30               	movlw	48
  8203  002848  6EDF               	movwf	indf2,c
  8204  00284A  4A27               	infsnz	ftoa@buffer^0,f,c
  8205  00284C  2A28               	incf	(ftoa@buffer+1)^0,f,c
  8206  00284E                     
  8207                           ;src/print/toString.c: 177:         ++exponent;
  8208  00284E  4A31               	infsnz	ftoa@exponent^0,f,c
  8209  002850  2A32               	incf	(ftoa@exponent+1)^0,f,c
  8210  002852                     
  8211                           ;src/print/toString.c: 178:         ++places;
  8212  002852  4A33               	infsnz	ftoa@places^0,f,c
  8213  002854  2A34               	incf	(ftoa@places+1)^0,f,c
  8214  002856                     l7999:
  8215                           
  8216                           ;src/print/toString.c: 175:     while ((exponent < 0) && (places < width)) {
  8217  002856  BE32               	btfsc	(ftoa@exponent+1)^0,7,c
  8218  002858  EF32  F014         	goto	u9450
  8219  00285C  EF30  F014         	goto	u9451
  8220  002860                     u9451:
  8221  002860  EFA5  F014         	goto	l8013
  8222  002864                     u9450:
  8223  002864  BE34               	btfsc	(ftoa@places+1)^0,7,c
  8224  002866  EF3E  F014         	goto	u9461
  8225  00286A  5034               	movf	(ftoa@places+1)^0,w,c
  8226  00286C  E109               	bnz	u9460
  8227  00286E  0E07               	movlw	7
  8228  002870  5C33               	subwf	ftoa@places^0,w,c
  8229  002872  A0D8               	btfss	status,0,c
  8230  002874  EF3E  F014         	goto	u9461
  8231  002878  EF40  F014         	goto	u9460
  8232  00287C                     u9461:
  8233  00287C  EF1F  F014         	goto	l7991
  8234  002880                     u9460:
  8235  002880  EFA5  F014         	goto	l8013
  8236  002884                     l8003:
  8237                           
  8238                           ;src/print/toString.c: 182:         int digit = value * 10.0;
  8239  002884  0E00               	movlw	0
  8240  002886  6E08               	movwf	___flmul@a^0,c
  8241  002888  0E00               	movlw	0
  8242  00288A  6E09               	movwf	(___flmul@a+1)^0,c
  8243  00288C  0E20               	movlw	32
  8244  00288E  6E0A               	movwf	(___flmul@a+2)^0,c
  8245  002890  0E41               	movlw	65
  8246  002892  6E0B               	movwf	(___flmul@a+3)^0,c
  8247  002894  C029  F004         	movff	ftoa@value,___flmul@b
  8248  002898  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  8249  00289C  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  8250  0028A0  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  8251  0028A4  EC3F  F00F         	call	___flmul	;wreg free
  8252  0028A8  C004  F01D         	movff	?___flmul,___fltol@f1
  8253  0028AC  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  8254  0028B0  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  8255  0028B4  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  8256  0028B8  EC3B  F022         	call	___fltol	;wreg free
  8257  0028BC  C01D  F02F         	movff	?___fltol,ftoa@digit_1622
  8258  0028C0  C01E  F030         	movff	?___fltol+1,ftoa@digit_1622+1
  8259  0028C4                     
  8260                           ;src/print/toString.c: 183:         *buffer++ = digit + '0';
  8261  0028C4  502F               	movf	ftoa@digit_1622^0,w,c
  8262  0028C6  0F30               	addlw	48
  8263  0028C8  C027  FFD9         	movff	ftoa@buffer,fsr2l
  8264  0028CC  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  8265  0028D0  6EDF               	movwf	indf2,c
  8266  0028D2  4A27               	infsnz	ftoa@buffer^0,f,c
  8267  0028D4  2A28               	incf	(ftoa@buffer+1)^0,f,c
  8268  0028D6                     
  8269                           ;src/print/toString.c: 184:         value = value * 10.0 - digit;
  8270  0028D6  0E00               	movlw	0
  8271  0028D8  6E08               	movwf	___flmul@a^0,c
  8272  0028DA  0E00               	movlw	0
  8273  0028DC  6E09               	movwf	(___flmul@a+1)^0,c
  8274  0028DE  0E20               	movlw	32
  8275  0028E0  6E0A               	movwf	(___flmul@a+2)^0,c
  8276  0028E2  0E41               	movlw	65
  8277  0028E4  6E0B               	movwf	(___flmul@a+3)^0,c
  8278  0028E6  C029  F004         	movff	ftoa@value,___flmul@b
  8279  0028EA  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  8280  0028EE  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  8281  0028F2  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  8282  0028F6  EC3F  F00F         	call	___flmul	;wreg free
  8283  0028FA  C004  F01D         	movff	?___flmul,___flsub@b
  8284  0028FE  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  8285  002902  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  8286  002906  C007  F020         	movff	?___flmul+3,___flsub@b+3
  8287  00290A  C02F  F004         	movff	ftoa@digit_1622,___xxtofl@val
  8288  00290E  C030  F005         	movff	ftoa@digit_1622+1,___xxtofl@val+1
  8289  002912  0E00               	movlw	0
  8290  002914  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  8291  002916  0EFF               	movlw	-1
  8292  002918  6E06               	movwf	(___xxtofl@val+2)^0,c
  8293  00291A  6E07               	movwf	(___xxtofl@val+3)^0,c
  8294  00291C  0E01               	movlw	1
  8295  00291E  ECC5  F01C         	call	___xxtofl
  8296  002922  C004  F021         	movff	?___xxtofl,___flsub@a
  8297  002926  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  8298  00292A  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  8299  00292E  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  8300  002932  ECF1  F028         	call	___flsub	;wreg free
  8301  002936  C01D  F029         	movff	?___flsub,ftoa@value
  8302  00293A  C01E  F02A         	movff	?___flsub+1,ftoa@value+1
  8303  00293E  C01F  F02B         	movff	?___flsub+2,ftoa@value+2
  8304  002942  C020  F02C         	movff	?___flsub+3,ftoa@value+3
  8305  002946                     
  8306                           ;src/print/toString.c: 185:         ++places;
  8307  002946  4A33               	infsnz	ftoa@places^0,f,c
  8308  002948  2A34               	incf	(ftoa@places+1)^0,f,c
  8309  00294A                     l8013:
  8310                           
  8311                           ;src/print/toString.c: 181:     while (places < width) {
  8312  00294A  BE34               	btfsc	(ftoa@places+1)^0,7,c
  8313  00294C  EFB1  F014         	goto	u9471
  8314  002950  5034               	movf	(ftoa@places+1)^0,w,c
  8315  002952  E109               	bnz	u9470
  8316  002954  0E07               	movlw	7
  8317  002956  5C33               	subwf	ftoa@places^0,w,c
  8318  002958  A0D8               	btfss	status,0,c
  8319  00295A  EFB1  F014         	goto	u9471
  8320  00295E  EFB3  F014         	goto	u9470
  8321  002962                     u9471:
  8322  002962  EF42  F014         	goto	l8003
  8323  002966                     u9470:
  8324  002966                     
  8325                           ;src/print/toString.c: 187:     *buffer = '\0';
  8326  002966  C027  FFD9         	movff	ftoa@buffer,fsr2l
  8327  00296A  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  8328  00296E  0E00               	movlw	0
  8329  002970  6EDF               	movwf	indf2,c
  8330  002972                     l763:
  8331  002972  0012               	return		;funcret
  8332  002974                     __end_of_ftoa:
  8333                           	opt callstack 0
  8334                           
  8335 ;; *************** function _normalize *****************
  8336 ;; Defined at:
  8337 ;;		line 76 in file "src/print/toString.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  val             2   28[COMRAM] PTR 
  8340 ;;		 -> ftoa@value(4), ftoa_sci@value(4), 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  value           4   32[COMRAM] PTR 
  8343 ;;  exponent        2   30[COMRAM] int 
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  2   28[COMRAM] int 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8353 ;;      Params:         2       0       0       0       0       0       0       0       0
  8354 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8356 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8357 ;;Total ram usage:        8 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    3
  8360 ;; This function calls:
  8361 ;;		___fldiv
  8362 ;;		___flge
  8363 ;;		___flmul
  8364 ;; This function is called by:
  8365 ;;		_ftoa_sci
  8366 ;;		_ftoa
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text22
  8371  004134                     __ptext22:
  8372                           	opt callstack 0
  8373  004134                     _normalize:
  8374                           	opt callstack 25
  8375  004134                     
  8376                           ;src/print/toString.c: 77:     int exponent = 0;
  8377  004134  0E00               	movlw	0
  8378  004136  6E20               	movwf	(normalize@exponent+1)^0,c
  8379  004138  0E00               	movlw	0
  8380  00413A  6E1F               	movwf	normalize@exponent^0,c
  8381  00413C                     
  8382                           ;src/print/toString.c: 78:     double value = *val;
  8383  00413C  C01D  FFD9         	movff	normalize@val,fsr2l
  8384  004140  C01E  FFDA         	movff	normalize@val+1,fsr2h
  8385  004144  CFDE F021          	movff	postinc2,normalize@value
  8386  004148  CFDE F022          	movff	postinc2,normalize@value+1
  8387  00414C  CFDE F023          	movff	postinc2,normalize@value+2
  8388  004150  CFDE F024          	movff	postinc2,normalize@value+3
  8389                           
  8390                           ;src/print/toString.c: 80:     while (value >= 1.0) {
  8391  004154  EFC8  F020         	goto	l7309
  8392  004158                     l7305:
  8393                           
  8394                           ;src/print/toString.c: 81:         value /= 10.0;
  8395  004158  C021  F004         	movff	normalize@value,___fldiv@b
  8396  00415C  C022  F005         	movff	normalize@value+1,___fldiv@b+1
  8397  004160  C023  F006         	movff	normalize@value+2,___fldiv@b+2
  8398  004164  C024  F007         	movff	normalize@value+3,___fldiv@b+3
  8399  004168  0E00               	movlw	0
  8400  00416A  6E08               	movwf	___fldiv@a^0,c
  8401  00416C  0E00               	movlw	0
  8402  00416E  6E09               	movwf	(___fldiv@a+1)^0,c
  8403  004170  0E20               	movlw	32
  8404  004172  6E0A               	movwf	(___fldiv@a+2)^0,c
  8405  004174  0E41               	movlw	65
  8406  004176  6E0B               	movwf	(___fldiv@a+3)^0,c
  8407  004178  EC54  F011         	call	___fldiv	;wreg free
  8408  00417C  C004  F021         	movff	?___fldiv,normalize@value
  8409  004180  C005  F022         	movff	?___fldiv+1,normalize@value+1
  8410  004184  C006  F023         	movff	?___fldiv+2,normalize@value+2
  8411  004188  C007  F024         	movff	?___fldiv+3,normalize@value+3
  8412  00418C                     
  8413                           ;src/print/toString.c: 82:         ++exponent;
  8414  00418C  4A1F               	infsnz	normalize@exponent^0,f,c
  8415  00418E  2A20               	incf	(normalize@exponent+1)^0,f,c
  8416  004190                     l7309:
  8417                           
  8418                           ;src/print/toString.c: 80:     while (value >= 1.0) {
  8419  004190  C021  F004         	movff	normalize@value,___flge@ff1
  8420  004194  C022  F005         	movff	normalize@value+1,___flge@ff1+1
  8421  004198  C023  F006         	movff	normalize@value+2,___flge@ff1+2
  8422  00419C  C024  F007         	movff	normalize@value+3,___flge@ff1+3
  8423  0041A0  0E00               	movlw	0
  8424  0041A2  6E08               	movwf	___flge@ff2^0,c
  8425  0041A4  0E00               	movlw	0
  8426  0041A6  6E09               	movwf	(___flge@ff2+1)^0,c
  8427  0041A8  0E80               	movlw	128
  8428  0041AA  6E0A               	movwf	(___flge@ff2+2)^0,c
  8429  0041AC  0E3F               	movlw	63
  8430  0041AE  6E0B               	movwf	(___flge@ff2+3)^0,c
  8431  0041B0  ECBE  F022         	call	___flge	;wreg free
  8432  0041B4  B0D8               	btfsc	status,0,c
  8433  0041B6  EFDF  F020         	goto	u8191
  8434  0041BA  EFE1  F020         	goto	u8190
  8435  0041BE                     u8191:
  8436  0041BE  EFAC  F020         	goto	l7305
  8437  0041C2                     u8190:
  8438  0041C2  EF00  F021         	goto	l7315
  8439  0041C6                     l7311:
  8440                           
  8441                           ;src/print/toString.c: 86:         value *= 10.0;
  8442  0041C6  C021  F004         	movff	normalize@value,___flmul@b
  8443  0041CA  C022  F005         	movff	normalize@value+1,___flmul@b+1
  8444  0041CE  C023  F006         	movff	normalize@value+2,___flmul@b+2
  8445  0041D2  C024  F007         	movff	normalize@value+3,___flmul@b+3
  8446  0041D6  0E00               	movlw	0
  8447  0041D8  6E08               	movwf	___flmul@a^0,c
  8448  0041DA  0E00               	movlw	0
  8449  0041DC  6E09               	movwf	(___flmul@a+1)^0,c
  8450  0041DE  0E20               	movlw	32
  8451  0041E0  6E0A               	movwf	(___flmul@a+2)^0,c
  8452  0041E2  0E41               	movlw	65
  8453  0041E4  6E0B               	movwf	(___flmul@a+3)^0,c
  8454  0041E6  EC3F  F00F         	call	___flmul	;wreg free
  8455  0041EA  C004  F021         	movff	?___flmul,normalize@value
  8456  0041EE  C005  F022         	movff	?___flmul+1,normalize@value+1
  8457  0041F2  C006  F023         	movff	?___flmul+2,normalize@value+2
  8458  0041F6  C007  F024         	movff	?___flmul+3,normalize@value+3
  8459  0041FA                     
  8460                           ;src/print/toString.c: 87:         --exponent;
  8461  0041FA  061F               	decf	normalize@exponent^0,f,c
  8462  0041FC  A0D8               	btfss	status,0,c
  8463  0041FE  0620               	decf	(normalize@exponent+1)^0,f,c
  8464  004200                     l7315:
  8465                           
  8466                           ;src/print/toString.c: 85:     while (value < 0.1) {
  8467  004200  C021  F004         	movff	normalize@value,___flge@ff1
  8468  004204  C022  F005         	movff	normalize@value+1,___flge@ff1+1
  8469  004208  C023  F006         	movff	normalize@value+2,___flge@ff1+2
  8470  00420C  C024  F007         	movff	normalize@value+3,___flge@ff1+3
  8471  004210  0ECD               	movlw	205
  8472  004212  6E08               	movwf	___flge@ff2^0,c
  8473  004214  0ECC               	movlw	204
  8474  004216  6E09               	movwf	(___flge@ff2+1)^0,c
  8475  004218  0ECC               	movlw	204
  8476  00421A  6E0A               	movwf	(___flge@ff2+2)^0,c
  8477  00421C  0E3D               	movlw	61
  8478  00421E  6E0B               	movwf	(___flge@ff2+3)^0,c
  8479  004220  ECBE  F022         	call	___flge	;wreg free
  8480  004224  A0D8               	btfss	status,0,c
  8481  004226  EF17  F021         	goto	u8201
  8482  00422A  EF19  F021         	goto	u8200
  8483  00422E                     u8201:
  8484  00422E  EFE3  F020         	goto	l7311
  8485  004232                     u8200:
  8486  004232                     
  8487                           ;src/print/toString.c: 89:     *val = value;
  8488  004232  C01D  FFD9         	movff	normalize@val,fsr2l
  8489  004236  C01E  FFDA         	movff	normalize@val+1,fsr2h
  8490  00423A  C021  FFDE         	movff	normalize@value,postinc2
  8491  00423E  C022  FFDE         	movff	normalize@value+1,postinc2
  8492  004242  C023  FFDE         	movff	normalize@value+2,postinc2
  8493  004246  C024  FFDE         	movff	normalize@value+3,postinc2
  8494  00424A                     
  8495                           ;src/print/toString.c: 91:     return exponent;
  8496  00424A  C01F  F01D         	movff	normalize@exponent,?_normalize
  8497  00424E  C020  F01E         	movff	normalize@exponent+1,?_normalize+1
  8498  004252  0012               	return		;funcret
  8499  004254                     __end_of_normalize:
  8500                           	opt callstack 0
  8501                           
  8502 ;; *************** function ___flmul *****************
  8503 ;; Defined at:
  8504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  b               4    3[COMRAM] int 
  8507 ;;  a               4    7[COMRAM] int 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  prod            4   22[COMRAM] struct .
  8510 ;;  grs             4   17[COMRAM] unsigned long 
  8511 ;;  temp            2   26[COMRAM] struct .
  8512 ;;  bexp            1   21[COMRAM] unsigned char 
  8513 ;;  aexp            1   16[COMRAM] unsigned char 
  8514 ;;  sign            1   15[COMRAM] unsigned char 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  4    3[COMRAM] unsigned char 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0, prodl, prodh
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8524 ;;      Params:         8       0       0       0       0       0       0       0       0
  8525 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8526 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8527 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8528 ;;Total ram usage:       25 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:    2
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_normalize
  8535 ;;		_ftoa_sci
  8536 ;;		_ftoa
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           	psect	text23
  8541  001E7E                     __ptext23:
  8542                           	opt callstack 0
  8543  001E7E                     ___flmul:
  8544                           	opt callstack 25
  8545  001E7E  5007               	movf	(___flmul@b+3)^0,w,c
  8546  001E80  0B80               	andlw	128
  8547  001E82  6E10               	movwf	___flmul@sign^0,c
  8548  001E84  5007               	movf	(___flmul@b+3)^0,w,c
  8549  001E86  2407               	addwf	(___flmul@b+3)^0,w,c
  8550  001E88  6E16               	movwf	___flmul@bexp^0,c
  8551  001E8A  AE06               	btfss	(___flmul@b+2)^0,7,c
  8552  001E8C  EF4A  F00F         	goto	u7691
  8553  001E90  EF4C  F00F         	goto	u7690
  8554  001E94                     u7691:
  8555  001E94  EF4D  F00F         	goto	l6999
  8556  001E98                     u7690:
  8557  001E98  8016               	bsf	___flmul@bexp^0,0,c
  8558  001E9A                     l6999:
  8559  001E9A  5016               	movf	___flmul@bexp^0,w,c
  8560  001E9C  B4D8               	btfsc	status,2,c
  8561  001E9E  EF53  F00F         	goto	u7701
  8562  001EA2  EF55  F00F         	goto	u7700
  8563  001EA6                     u7701:
  8564  001EA6  EF68  F00F         	goto	l7007
  8565  001EAA                     u7700:
  8566  001EAA  2816               	incf	___flmul@bexp^0,w,c
  8567  001EAC  A4D8               	btfss	status,2,c
  8568  001EAE  EF5B  F00F         	goto	u7711
  8569  001EB2  EF5D  F00F         	goto	u7710
  8570  001EB6                     u7711:
  8571  001EB6  EF65  F00F         	goto	l7005
  8572  001EBA                     u7710:
  8573  001EBA  0E00               	movlw	0
  8574  001EBC  6E04               	movwf	___flmul@b^0,c
  8575  001EBE  0E00               	movlw	0
  8576  001EC0  6E05               	movwf	(___flmul@b+1)^0,c
  8577  001EC2  0E00               	movlw	0
  8578  001EC4  6E06               	movwf	(___flmul@b+2)^0,c
  8579  001EC6  0E00               	movlw	0
  8580  001EC8  6E07               	movwf	(___flmul@b+3)^0,c
  8581  001ECA                     l7005:
  8582  001ECA  8E06               	bsf	(___flmul@b+2)^0,7,c
  8583  001ECC  EF70  F00F         	goto	l7009
  8584  001ED0                     l7007:
  8585  001ED0  0E00               	movlw	0
  8586  001ED2  6E04               	movwf	___flmul@b^0,c
  8587  001ED4  0E00               	movlw	0
  8588  001ED6  6E05               	movwf	(___flmul@b+1)^0,c
  8589  001ED8  0E00               	movlw	0
  8590  001EDA  6E06               	movwf	(___flmul@b+2)^0,c
  8591  001EDC  0E00               	movlw	0
  8592  001EDE  6E07               	movwf	(___flmul@b+3)^0,c
  8593  001EE0                     l7009:
  8594  001EE0  500B               	movf	(___flmul@a+3)^0,w,c
  8595  001EE2  0B80               	andlw	128
  8596  001EE4  1A10               	xorwf	___flmul@sign^0,f,c
  8597  001EE6  500B               	movf	(___flmul@a+3)^0,w,c
  8598  001EE8  240B               	addwf	(___flmul@a+3)^0,w,c
  8599  001EEA  6E11               	movwf	___flmul@aexp^0,c
  8600  001EEC  AE0A               	btfss	(___flmul@a+2)^0,7,c
  8601  001EEE  EF7B  F00F         	goto	u7721
  8602  001EF2  EF7D  F00F         	goto	u7720
  8603  001EF6                     u7721:
  8604  001EF6  EF7E  F00F         	goto	l7017
  8605  001EFA                     u7720:
  8606  001EFA  8011               	bsf	___flmul@aexp^0,0,c
  8607  001EFC                     l7017:
  8608  001EFC  5011               	movf	___flmul@aexp^0,w,c
  8609  001EFE  B4D8               	btfsc	status,2,c
  8610  001F00  EF84  F00F         	goto	u7731
  8611  001F04  EF86  F00F         	goto	u7730
  8612  001F08                     u7731:
  8613  001F08  EF99  F00F         	goto	l7025
  8614  001F0C                     u7730:
  8615  001F0C  2811               	incf	___flmul@aexp^0,w,c
  8616  001F0E  A4D8               	btfss	status,2,c
  8617  001F10  EF8C  F00F         	goto	u7741
  8618  001F14  EF8E  F00F         	goto	u7740
  8619  001F18                     u7741:
  8620  001F18  EF96  F00F         	goto	l7023
  8621  001F1C                     u7740:
  8622  001F1C  0E00               	movlw	0
  8623  001F1E  6E08               	movwf	___flmul@a^0,c
  8624  001F20  0E00               	movlw	0
  8625  001F22  6E09               	movwf	(___flmul@a+1)^0,c
  8626  001F24  0E00               	movlw	0
  8627  001F26  6E0A               	movwf	(___flmul@a+2)^0,c
  8628  001F28  0E00               	movlw	0
  8629  001F2A  6E0B               	movwf	(___flmul@a+3)^0,c
  8630  001F2C                     l7023:
  8631  001F2C  8E0A               	bsf	(___flmul@a+2)^0,7,c
  8632  001F2E  EFA1  F00F         	goto	l1473
  8633  001F32                     l7025:
  8634  001F32  0E00               	movlw	0
  8635  001F34  6E08               	movwf	___flmul@a^0,c
  8636  001F36  0E00               	movlw	0
  8637  001F38  6E09               	movwf	(___flmul@a+1)^0,c
  8638  001F3A  0E00               	movlw	0
  8639  001F3C  6E0A               	movwf	(___flmul@a+2)^0,c
  8640  001F3E  0E00               	movlw	0
  8641  001F40  6E0B               	movwf	(___flmul@a+3)^0,c
  8642  001F42                     l1473:
  8643  001F42  5011               	movf	___flmul@aexp^0,w,c
  8644  001F44  B4D8               	btfsc	status,2,c
  8645  001F46  EFA7  F00F         	goto	u7751
  8646  001F4A  EFA9  F00F         	goto	u7750
  8647  001F4E                     u7751:
  8648  001F4E  EFB1  F00F         	goto	l7029
  8649  001F52                     u7750:
  8650  001F52  5016               	movf	___flmul@bexp^0,w,c
  8651  001F54  A4D8               	btfss	status,2,c
  8652  001F56  EFAF  F00F         	goto	u7761
  8653  001F5A  EFB1  F00F         	goto	u7760
  8654  001F5E                     u7761:
  8655  001F5E  EFBB  F00F         	goto	l7033
  8656  001F62                     u7760:
  8657  001F62                     l7029:
  8658  001F62  0E00               	movlw	0
  8659  001F64  6E04               	movwf	?___flmul^0,c
  8660  001F66  0E00               	movlw	0
  8661  001F68  6E05               	movwf	(?___flmul+1)^0,c
  8662  001F6A  0E00               	movlw	0
  8663  001F6C  6E06               	movwf	(?___flmul+2)^0,c
  8664  001F6E  0E00               	movlw	0
  8665  001F70  6E07               	movwf	(?___flmul+3)^0,c
  8666  001F72  EF53  F011         	goto	l1477
  8667  001F76                     l7033:
  8668  001F76  500A               	movf	(___flmul@a+2)^0,w,c
  8669  001F78  0204               	mulwf	___flmul@b^0,c
  8670  001F7A  CFF3 F01B          	movff	prodl,___flmul@temp
  8671  001F7E  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8672  001F82  501B               	movf	___flmul@temp^0,w,c
  8673  001F84  6E12               	movwf	___flmul@grs^0,c
  8674  001F86  6A13               	clrf	(___flmul@grs+1)^0,c
  8675  001F88  6A14               	clrf	(___flmul@grs+2)^0,c
  8676  001F8A  6A15               	clrf	(___flmul@grs+3)^0,c
  8677  001F8C  501C               	movf	(___flmul@temp+1)^0,w,c
  8678  001F8E  6E17               	movwf	___flmul@prod^0,c
  8679  001F90  6A18               	clrf	(___flmul@prod+1)^0,c
  8680  001F92  6A19               	clrf	(___flmul@prod+2)^0,c
  8681  001F94  6A1A               	clrf	(___flmul@prod+3)^0,c
  8682  001F96  5009               	movf	(___flmul@a+1)^0,w,c
  8683  001F98  0205               	mulwf	(___flmul@b+1)^0,c
  8684  001F9A  CFF3 F01B          	movff	prodl,___flmul@temp
  8685  001F9E  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8686  001FA2  501B               	movf	___flmul@temp^0,w,c
  8687  001FA4  2612               	addwf	___flmul@grs^0,f,c
  8688  001FA6  0E00               	movlw	0
  8689  001FA8  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8690  001FAA  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8691  001FAC  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8692  001FAE  501C               	movf	(___flmul@temp+1)^0,w,c
  8693  001FB0  2617               	addwf	___flmul@prod^0,f,c
  8694  001FB2  0E00               	movlw	0
  8695  001FB4  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8696  001FB6  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8697  001FB8  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8698  001FBA  5008               	movf	___flmul@a^0,w,c
  8699  001FBC  0206               	mulwf	(___flmul@b+2)^0,c
  8700  001FBE  CFF3 F01B          	movff	prodl,___flmul@temp
  8701  001FC2  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8702  001FC6  501B               	movf	___flmul@temp^0,w,c
  8703  001FC8  2612               	addwf	___flmul@grs^0,f,c
  8704  001FCA  0E00               	movlw	0
  8705  001FCC  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8706  001FCE  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8707  001FD0  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8708  001FD2  501C               	movf	(___flmul@temp+1)^0,w,c
  8709  001FD4  2617               	addwf	___flmul@prod^0,f,c
  8710  001FD6  0E00               	movlw	0
  8711  001FD8  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8712  001FDA  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8713  001FDC  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8714  001FDE  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8715  001FE2  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8716  001FE6  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8717  001FEA  6A12               	clrf	___flmul@grs^0,c
  8718  001FEC  5008               	movf	___flmul@a^0,w,c
  8719  001FEE  0205               	mulwf	(___flmul@b+1)^0,c
  8720  001FF0  CFF3 F01B          	movff	prodl,___flmul@temp
  8721  001FF4  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8722  001FF8  501B               	movf	___flmul@temp^0,w,c
  8723  001FFA  2612               	addwf	___flmul@grs^0,f,c
  8724  001FFC  501C               	movf	(___flmul@temp+1)^0,w,c
  8725  001FFE  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8726  002000  0E00               	movlw	0
  8727  002002  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8728  002004  0E00               	movlw	0
  8729  002006  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8730  002008  5009               	movf	(___flmul@a+1)^0,w,c
  8731  00200A  0204               	mulwf	___flmul@b^0,c
  8732  00200C  CFF3 F01B          	movff	prodl,___flmul@temp
  8733  002010  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8734  002014  501B               	movf	___flmul@temp^0,w,c
  8735  002016  2612               	addwf	___flmul@grs^0,f,c
  8736  002018  501C               	movf	(___flmul@temp+1)^0,w,c
  8737  00201A  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8738  00201C  0E00               	movlw	0
  8739  00201E  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8740  002020  0E00               	movlw	0
  8741  002022  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8742  002024  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8743  002028  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8744  00202C  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8745  002030  6A12               	clrf	___flmul@grs^0,c
  8746  002032  5008               	movf	___flmul@a^0,w,c
  8747  002034  0204               	mulwf	___flmul@b^0,c
  8748  002036  CFF3 F01B          	movff	prodl,___flmul@temp
  8749  00203A  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8750  00203E  501B               	movf	___flmul@temp^0,w,c
  8751  002040  2612               	addwf	___flmul@grs^0,f,c
  8752  002042  501C               	movf	(___flmul@temp+1)^0,w,c
  8753  002044  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8754  002046  0E00               	movlw	0
  8755  002048  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8756  00204A  0E00               	movlw	0
  8757  00204C  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8758  00204E  500A               	movf	(___flmul@a+2)^0,w,c
  8759  002050  0205               	mulwf	(___flmul@b+1)^0,c
  8760  002052  CFF3 F01B          	movff	prodl,___flmul@temp
  8761  002056  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8762  00205A  501B               	movf	___flmul@temp^0,w,c
  8763  00205C  2617               	addwf	___flmul@prod^0,f,c
  8764  00205E  501C               	movf	(___flmul@temp+1)^0,w,c
  8765  002060  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8766  002062  0E00               	movlw	0
  8767  002064  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8768  002066  0E00               	movlw	0
  8769  002068  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8770  00206A  5009               	movf	(___flmul@a+1)^0,w,c
  8771  00206C  0206               	mulwf	(___flmul@b+2)^0,c
  8772  00206E  CFF3 F01B          	movff	prodl,___flmul@temp
  8773  002072  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8774  002076  501B               	movf	___flmul@temp^0,w,c
  8775  002078  2617               	addwf	___flmul@prod^0,f,c
  8776  00207A  501C               	movf	(___flmul@temp+1)^0,w,c
  8777  00207C  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8778  00207E  0E00               	movlw	0
  8779  002080  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8780  002082  0E00               	movlw	0
  8781  002084  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8782  002086  500A               	movf	(___flmul@a+2)^0,w,c
  8783  002088  0206               	mulwf	(___flmul@b+2)^0,c
  8784  00208A  CFF3 F01B          	movff	prodl,___flmul@temp
  8785  00208E  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8786  002092  501B               	movf	___flmul@temp^0,w,c
  8787  002094  6E0C               	movwf	??___flmul^0,c
  8788  002096  501C               	movf	(___flmul@temp+1)^0,w,c
  8789  002098  6E0D               	movwf	(??___flmul+1)^0,c
  8790  00209A  6A0E               	clrf	(??___flmul+2)^0,c
  8791  00209C  6A0F               	clrf	(??___flmul+3)^0,c
  8792  00209E  C00E  F00F         	movff	??___flmul+2,??___flmul+3
  8793  0020A2  C00D  F00E         	movff	??___flmul+1,??___flmul+2
  8794  0020A6  C00C  F00D         	movff	??___flmul,??___flmul+1
  8795  0020AA  6A0C               	clrf	??___flmul^0,c
  8796  0020AC  500C               	movf	??___flmul^0,w,c
  8797  0020AE  2617               	addwf	___flmul@prod^0,f,c
  8798  0020B0  500D               	movf	(??___flmul+1)^0,w,c
  8799  0020B2  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8800  0020B4  500E               	movf	(??___flmul+2)^0,w,c
  8801  0020B6  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8802  0020B8  500F               	movf	(??___flmul+3)^0,w,c
  8803  0020BA  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8804  0020BC  C012  F00C         	movff	___flmul@grs,??___flmul
  8805  0020C0  C013  F00D         	movff	___flmul@grs+1,??___flmul+1
  8806  0020C4  C014  F00E         	movff	___flmul@grs+2,??___flmul+2
  8807  0020C8  C015  F00F         	movff	___flmul@grs+3,??___flmul+3
  8808  0020CC  0E19               	movlw	25
  8809  0020CE  EF6E  F010         	goto	u7770
  8810  0020D2                     u7775:
  8811  0020D2  90D8               	bcf	status,0,c
  8812  0020D4  320F               	rrcf	(??___flmul+3)^0,f,c
  8813  0020D6  320E               	rrcf	(??___flmul+2)^0,f,c
  8814  0020D8  320D               	rrcf	(??___flmul+1)^0,f,c
  8815  0020DA  320C               	rrcf	??___flmul^0,f,c
  8816  0020DC                     u7770:
  8817  0020DC  2EE8               	decfsz	wreg,f,c
  8818  0020DE  EF69  F010         	goto	u7775
  8819  0020E2  500C               	movf	??___flmul^0,w,c
  8820  0020E4  2617               	addwf	___flmul@prod^0,f,c
  8821  0020E6  500D               	movf	(??___flmul+1)^0,w,c
  8822  0020E8  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8823  0020EA  500E               	movf	(??___flmul+2)^0,w,c
  8824  0020EC  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8825  0020EE  500F               	movf	(??___flmul+3)^0,w,c
  8826  0020F0  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8827  0020F2  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8828  0020F6  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8829  0020FA  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8830  0020FE  6A12               	clrf	___flmul@grs^0,c
  8831  002100  5011               	movf	___flmul@aexp^0,w,c
  8832  002102  C016  F00C         	movff	___flmul@bexp,??___flmul
  8833  002106  6A0D               	clrf	(??___flmul+1)^0,c
  8834  002108  260C               	addwf	??___flmul^0,f,c
  8835  00210A  0E00               	movlw	0
  8836  00210C  220D               	addwfc	(??___flmul+1)^0,f,c
  8837  00210E  0E82               	movlw	130
  8838  002110  240C               	addwf	??___flmul^0,w,c
  8839  002112  6E1B               	movwf	___flmul@temp^0,c
  8840  002114  0EFF               	movlw	255
  8841  002116  200D               	addwfc	(??___flmul+1)^0,w,c
  8842  002118  6E1C               	movwf	(___flmul@temp+1)^0,c
  8843  00211A  EFA4  F010         	goto	l7081
  8844  00211E                     l7075:
  8845  00211E  90D8               	bcf	status,0,c
  8846  002120  3617               	rlcf	___flmul@prod^0,f,c
  8847  002122  3618               	rlcf	(___flmul@prod+1)^0,f,c
  8848  002124  3619               	rlcf	(___flmul@prod+2)^0,f,c
  8849  002126  361A               	rlcf	(___flmul@prod+3)^0,f,c
  8850  002128  AE15               	btfss	(___flmul@grs+3)^0,7,c
  8851  00212A  EF99  F010         	goto	u7781
  8852  00212E  EF9B  F010         	goto	u7780
  8853  002132                     u7781:
  8854  002132  EF9C  F010         	goto	l1480
  8855  002136                     u7780:
  8856  002136  8017               	bsf	___flmul@prod^0,0,c
  8857  002138                     l1480:
  8858  002138  90D8               	bcf	status,0,c
  8859  00213A  3612               	rlcf	___flmul@grs^0,f,c
  8860  00213C  3613               	rlcf	(___flmul@grs+1)^0,f,c
  8861  00213E  3614               	rlcf	(___flmul@grs+2)^0,f,c
  8862  002140  3615               	rlcf	(___flmul@grs+3)^0,f,c
  8863  002142  061B               	decf	___flmul@temp^0,f,c
  8864  002144  A0D8               	btfss	status,0,c
  8865  002146  061C               	decf	(___flmul@temp+1)^0,f,c
  8866  002148                     l7081:
  8867  002148  AE19               	btfss	(___flmul@prod+2)^0,7,c
  8868  00214A  EFA9  F010         	goto	u7791
  8869  00214E  EFAB  F010         	goto	u7790
  8870  002152                     u7791:
  8871  002152  EF8F  F010         	goto	l7075
  8872  002156                     u7790:
  8873  002156  0E00               	movlw	0
  8874  002158  6E11               	movwf	___flmul@aexp^0,c
  8875  00215A  AE15               	btfss	(___flmul@grs+3)^0,7,c
  8876  00215C  EFB2  F010         	goto	u7801
  8877  002160  EFB4  F010         	goto	u7800
  8878  002164                     u7801:
  8879  002164  EFD8  F010         	goto	l1482
  8880  002168                     u7800:
  8881  002168  0EFF               	movlw	255
  8882  00216A  1412               	andwf	___flmul@grs^0,w,c
  8883  00216C  6E0C               	movwf	??___flmul^0,c
  8884  00216E  0EFF               	movlw	255
  8885  002170  1413               	andwf	(___flmul@grs+1)^0,w,c
  8886  002172  6E0D               	movwf	(??___flmul+1)^0,c
  8887  002174  0EFF               	movlw	255
  8888  002176  1414               	andwf	(___flmul@grs+2)^0,w,c
  8889  002178  6E0E               	movwf	(??___flmul+2)^0,c
  8890  00217A  0E7F               	movlw	127
  8891  00217C  1415               	andwf	(___flmul@grs+3)^0,w,c
  8892  00217E  6E0F               	movwf	(??___flmul+3)^0,c
  8893  002180  500C               	movf	??___flmul^0,w,c
  8894  002182  100D               	iorwf	(??___flmul+1)^0,w,c
  8895  002184  100E               	iorwf	(??___flmul+2)^0,w,c
  8896  002186  100F               	iorwf	(??___flmul+3)^0,w,c
  8897  002188  B4D8               	btfsc	status,2,c
  8898  00218A  EFC9  F010         	goto	u7811
  8899  00218E  EFCB  F010         	goto	u7810
  8900  002192                     u7811:
  8901  002192  EFCF  F010         	goto	l1483
  8902  002196                     u7810:
  8903  002196                     l7089:
  8904  002196  0E01               	movlw	1
  8905  002198  6E11               	movwf	___flmul@aexp^0,c
  8906  00219A  EFD8  F010         	goto	l1482
  8907  00219E                     l1483:
  8908  00219E  A017               	btfss	___flmul@prod^0,0,c
  8909  0021A0  EFD4  F010         	goto	u7821
  8910  0021A4  EFD6  F010         	goto	u7820
  8911  0021A8                     u7821:
  8912  0021A8  EFD8  F010         	goto	l1482
  8913  0021AC                     u7820:
  8914  0021AC  EFCB  F010         	goto	l7089
  8915  0021B0                     l1482:
  8916  0021B0  5011               	movf	___flmul@aexp^0,w,c
  8917  0021B2  B4D8               	btfsc	status,2,c
  8918  0021B4  EFDE  F010         	goto	u7831
  8919  0021B8  EFE0  F010         	goto	u7830
  8920  0021BC                     u7831:
  8921  0021BC  EF04  F011         	goto	l7101
  8922  0021C0                     u7830:
  8923  0021C0  0E01               	movlw	1
  8924  0021C2  2617               	addwf	___flmul@prod^0,f,c
  8925  0021C4  0E00               	movlw	0
  8926  0021C6  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8927  0021C8  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8928  0021CA  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8929  0021CC  A01A               	btfss	(___flmul@prod+3)^0,0,c
  8930  0021CE  EFEB  F010         	goto	u7841
  8931  0021D2  EFED  F010         	goto	u7840
  8932  0021D6                     u7841:
  8933  0021D6  EF04  F011         	goto	l7101
  8934  0021DA                     u7840:
  8935  0021DA  C017  F00C         	movff	___flmul@prod,??___flmul
  8936  0021DE  C018  F00D         	movff	___flmul@prod+1,??___flmul+1
  8937  0021E2  C019  F00E         	movff	___flmul@prod+2,??___flmul+2
  8938  0021E6  C01A  F00F         	movff	___flmul@prod+3,??___flmul+3
  8939  0021EA  340F               	rlcf	(??___flmul+3)^0,w,c
  8940  0021EC  320F               	rrcf	(??___flmul+3)^0,f,c
  8941  0021EE  320E               	rrcf	(??___flmul+2)^0,f,c
  8942  0021F0  320D               	rrcf	(??___flmul+1)^0,f,c
  8943  0021F2  320C               	rrcf	??___flmul^0,f,c
  8944  0021F4  C00C  F017         	movff	??___flmul,___flmul@prod
  8945  0021F8  C00D  F018         	movff	??___flmul+1,___flmul@prod+1
  8946  0021FC  C00E  F019         	movff	??___flmul+2,___flmul@prod+2
  8947  002200  C00F  F01A         	movff	??___flmul+3,___flmul@prod+3
  8948  002204  4A1B               	infsnz	___flmul@temp^0,f,c
  8949  002206  2A1C               	incf	(___flmul@temp+1)^0,f,c
  8950  002208                     l7101:
  8951  002208  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  8952  00220A  EF0F  F011         	goto	u7851
  8953  00220E  501C               	movf	(___flmul@temp+1)^0,w,c
  8954  002210  E108               	bnz	u7850
  8955  002212  281B               	incf	___flmul@temp^0,w,c
  8956  002214  A0D8               	btfss	status,0,c
  8957  002216  EF0F  F011         	goto	u7851
  8958  00221A  EF11  F011         	goto	u7850
  8959  00221E                     u7851:
  8960  00221E  EF1B  F011         	goto	l7105
  8961  002222                     u7850:
  8962  002222  0E00               	movlw	0
  8963  002224  6E17               	movwf	___flmul@prod^0,c
  8964  002226  0E00               	movlw	0
  8965  002228  6E18               	movwf	(___flmul@prod+1)^0,c
  8966  00222A  0E80               	movlw	128
  8967  00222C  6E19               	movwf	(___flmul@prod+2)^0,c
  8968  00222E  0E7F               	movlw	127
  8969  002230  6E1A               	movwf	(___flmul@prod+3)^0,c
  8970  002232  EF49  F011         	goto	l7117
  8971  002236                     l7105:
  8972  002236  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  8973  002238  EF28  F011         	goto	u7860
  8974  00223C  501C               	movf	(___flmul@temp+1)^0,w,c
  8975  00223E  E106               	bnz	u7861
  8976  002240  041B               	decf	___flmul@temp^0,w,c
  8977  002242  B0D8               	btfsc	status,0,c
  8978  002244  EF26  F011         	goto	u7861
  8979  002248  EF28  F011         	goto	u7860
  8980  00224C                     u7861:
  8981  00224C  EF34  F011         	goto	l1490
  8982  002250                     u7860:
  8983  002250  0E00               	movlw	0
  8984  002252  6E17               	movwf	___flmul@prod^0,c
  8985  002254  0E00               	movlw	0
  8986  002256  6E18               	movwf	(___flmul@prod+1)^0,c
  8987  002258  0E00               	movlw	0
  8988  00225A  6E19               	movwf	(___flmul@prod+2)^0,c
  8989  00225C  0E00               	movlw	0
  8990  00225E  6E1A               	movwf	(___flmul@prod+3)^0,c
  8991  002260  0E00               	movlw	0
  8992  002262  6E10               	movwf	___flmul@sign^0,c
  8993  002264  EF49  F011         	goto	l7117
  8994  002268                     l1490:
  8995  002268  C01B  F016         	movff	___flmul@temp,___flmul@bexp
  8996  00226C  0EFF               	movlw	255
  8997  00226E  1617               	andwf	___flmul@prod^0,f,c
  8998  002270  0EFF               	movlw	255
  8999  002272  1618               	andwf	(___flmul@prod+1)^0,f,c
  9000  002274  0E7F               	movlw	127
  9001  002276  1619               	andwf	(___flmul@prod+2)^0,f,c
  9002  002278  0E00               	movlw	0
  9003  00227A  161A               	andwf	(___flmul@prod+3)^0,f,c
  9004  00227C  A016               	btfss	___flmul@bexp^0,0,c
  9005  00227E  EF43  F011         	goto	u7871
  9006  002282  EF45  F011         	goto	u7870
  9007  002286                     u7871:
  9008  002286  EF46  F011         	goto	l7115
  9009  00228A                     u7870:
  9010  00228A  8E19               	bsf	(___flmul@prod+2)^0,7,c
  9011  00228C                     l7115:
  9012  00228C  90D8               	bcf	status,0,c
  9013  00228E  3016               	rrcf	___flmul@bexp^0,w,c
  9014  002290  6E1A               	movwf	(___flmul@prod+3)^0,c
  9015  002292                     l7117:
  9016  002292  5010               	movf	___flmul@sign^0,w,c
  9017  002294  121A               	iorwf	(___flmul@prod+3)^0,f,c
  9018  002296  C017  F004         	movff	___flmul@prod,?___flmul
  9019  00229A  C018  F005         	movff	___flmul@prod+1,?___flmul+1
  9020  00229E  C019  F006         	movff	___flmul@prod+2,?___flmul+2
  9021  0022A2  C01A  F007         	movff	___flmul@prod+3,?___flmul+3
  9022  0022A6                     l1477:
  9023  0022A6  0012               	return		;funcret
  9024  0022A8                     __end_of___flmul:
  9025                           	opt callstack 0
  9026                           
  9027 ;; *************** function ___fldiv *****************
  9028 ;; Defined at:
  9029 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  b               4    3[COMRAM] unsigned char 
  9032 ;;  a               4    7[COMRAM] unsigned char 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  grs             4   22[COMRAM] unsigned long 
  9035 ;;  rem             4   15[COMRAM] unsigned long 
  9036 ;;  new_exp         2   20[COMRAM] short 
  9037 ;;  aexp            1   27[COMRAM] unsigned char 
  9038 ;;  bexp            1   26[COMRAM] unsigned char 
  9039 ;;  sign            1   19[COMRAM] unsigned char 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  4    3[COMRAM] unsigned char 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9049 ;;      Params:         8       0       0       0       0       0       0       0       0
  9050 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9051 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9052 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9053 ;;Total ram usage:       25 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    2
  9056 ;; This function calls:
  9057 ;;		Nothing
  9058 ;; This function is called by:
  9059 ;;		_normalize
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text24
  9064  0022A8                     __ptext24:
  9065                           	opt callstack 0
  9066  0022A8                     ___fldiv:
  9067                           	opt callstack 25
  9068  0022A8  5007               	movf	(___fldiv@b+3)^0,w,c
  9069  0022AA  0B80               	andlw	128
  9070  0022AC  6E14               	movwf	___fldiv@sign^0,c
  9071  0022AE  5007               	movf	(___fldiv@b+3)^0,w,c
  9072  0022B0  2407               	addwf	(___fldiv@b+3)^0,w,c
  9073  0022B2  6E1B               	movwf	___fldiv@bexp^0,c
  9074  0022B4  AE06               	btfss	(___fldiv@b+2)^0,7,c
  9075  0022B6  EF5F  F011         	goto	u7461
  9076  0022BA  EF61  F011         	goto	u7460
  9077  0022BE                     u7461:
  9078  0022BE  EF62  F011         	goto	l6861
  9079  0022C2                     u7460:
  9080  0022C2  801B               	bsf	___fldiv@bexp^0,0,c
  9081  0022C4                     l6861:
  9082  0022C4  501B               	movf	___fldiv@bexp^0,w,c
  9083  0022C6  B4D8               	btfsc	status,2,c
  9084  0022C8  EF68  F011         	goto	u7471
  9085  0022CC  EF6A  F011         	goto	u7470
  9086  0022D0                     u7471:
  9087  0022D0  EF7F  F011         	goto	l6871
  9088  0022D4                     u7470:
  9089  0022D4  281B               	incf	___fldiv@bexp^0,w,c
  9090  0022D6  A4D8               	btfss	status,2,c
  9091  0022D8  EF70  F011         	goto	u7481
  9092  0022DC  EF72  F011         	goto	u7480
  9093  0022E0                     u7481:
  9094  0022E0  EF7A  F011         	goto	l6867
  9095  0022E4                     u7480:
  9096  0022E4  0E00               	movlw	0
  9097  0022E6  6E04               	movwf	___fldiv@b^0,c
  9098  0022E8  0E00               	movlw	0
  9099  0022EA  6E05               	movwf	(___fldiv@b+1)^0,c
  9100  0022EC  0E00               	movlw	0
  9101  0022EE  6E06               	movwf	(___fldiv@b+2)^0,c
  9102  0022F0  0E00               	movlw	0
  9103  0022F2  6E07               	movwf	(___fldiv@b+3)^0,c
  9104  0022F4                     l6867:
  9105  0022F4  8E06               	bsf	(___fldiv@b+2)^0,7,c
  9106  0022F6  0E00               	movlw	0
  9107  0022F8  6E07               	movwf	(___fldiv@b+3)^0,c
  9108  0022FA  EF87  F011         	goto	l6873
  9109  0022FE                     l6871:
  9110  0022FE  0E00               	movlw	0
  9111  002300  6E04               	movwf	___fldiv@b^0,c
  9112  002302  0E00               	movlw	0
  9113  002304  6E05               	movwf	(___fldiv@b+1)^0,c
  9114  002306  0E00               	movlw	0
  9115  002308  6E06               	movwf	(___fldiv@b+2)^0,c
  9116  00230A  0E00               	movlw	0
  9117  00230C  6E07               	movwf	(___fldiv@b+3)^0,c
  9118  00230E                     l6873:
  9119  00230E  500B               	movf	(___fldiv@a+3)^0,w,c
  9120  002310  0B80               	andlw	128
  9121  002312  1A14               	xorwf	___fldiv@sign^0,f,c
  9122  002314  500B               	movf	(___fldiv@a+3)^0,w,c
  9123  002316  240B               	addwf	(___fldiv@a+3)^0,w,c
  9124  002318  6E1C               	movwf	___fldiv@aexp^0,c
  9125  00231A  AE0A               	btfss	(___fldiv@a+2)^0,7,c
  9126  00231C  EF92  F011         	goto	u7491
  9127  002320  EF94  F011         	goto	u7490
  9128  002324                     u7491:
  9129  002324  EF95  F011         	goto	l6881
  9130  002328                     u7490:
  9131  002328  801C               	bsf	___fldiv@aexp^0,0,c
  9132  00232A                     l6881:
  9133  00232A  501C               	movf	___fldiv@aexp^0,w,c
  9134  00232C  B4D8               	btfsc	status,2,c
  9135  00232E  EF9B  F011         	goto	u7501
  9136  002332  EF9D  F011         	goto	u7500
  9137  002336                     u7501:
  9138  002336  EFB2  F011         	goto	l6891
  9139  00233A                     u7500:
  9140  00233A  281C               	incf	___fldiv@aexp^0,w,c
  9141  00233C  A4D8               	btfss	status,2,c
  9142  00233E  EFA3  F011         	goto	u7511
  9143  002342  EFA5  F011         	goto	u7510
  9144  002346                     u7511:
  9145  002346  EFAD  F011         	goto	l6887
  9146  00234A                     u7510:
  9147  00234A  0E00               	movlw	0
  9148  00234C  6E08               	movwf	___fldiv@a^0,c
  9149  00234E  0E00               	movlw	0
  9150  002350  6E09               	movwf	(___fldiv@a+1)^0,c
  9151  002352  0E00               	movlw	0
  9152  002354  6E0A               	movwf	(___fldiv@a+2)^0,c
  9153  002356  0E00               	movlw	0
  9154  002358  6E0B               	movwf	(___fldiv@a+3)^0,c
  9155  00235A                     l6887:
  9156  00235A  8E0A               	bsf	(___fldiv@a+2)^0,7,c
  9157  00235C  0E00               	movlw	0
  9158  00235E  6E0B               	movwf	(___fldiv@a+3)^0,c
  9159  002360  EFBA  F011         	goto	l6893
  9160  002364                     l6891:
  9161  002364  0E00               	movlw	0
  9162  002366  6E08               	movwf	___fldiv@a^0,c
  9163  002368  0E00               	movlw	0
  9164  00236A  6E09               	movwf	(___fldiv@a+1)^0,c
  9165  00236C  0E00               	movlw	0
  9166  00236E  6E0A               	movwf	(___fldiv@a+2)^0,c
  9167  002370  0E00               	movlw	0
  9168  002372  6E0B               	movwf	(___fldiv@a+3)^0,c
  9169  002374                     l6893:
  9170  002374  5008               	movf	___fldiv@a^0,w,c
  9171  002376  1009               	iorwf	(___fldiv@a+1)^0,w,c
  9172  002378  100A               	iorwf	(___fldiv@a+2)^0,w,c
  9173  00237A  100B               	iorwf	(___fldiv@a+3)^0,w,c
  9174  00237C  A4D8               	btfss	status,2,c
  9175  00237E  EFC3  F011         	goto	u7521
  9176  002382  EFC5  F011         	goto	u7520
  9177  002386                     u7521:
  9178  002386  EFDD  F011         	goto	l6905
  9179  00238A                     u7520:
  9180  00238A  0E00               	movlw	0
  9181  00238C  6E04               	movwf	___fldiv@b^0,c
  9182  00238E  0E00               	movlw	0
  9183  002390  6E05               	movwf	(___fldiv@b+1)^0,c
  9184  002392  0E00               	movlw	0
  9185  002394  6E06               	movwf	(___fldiv@b+2)^0,c
  9186  002396  0E00               	movlw	0
  9187  002398  6E07               	movwf	(___fldiv@b+3)^0,c
  9188  00239A  0E80               	movlw	128
  9189  00239C  1206               	iorwf	(___fldiv@b+2)^0,f,c
  9190  00239E  0E7F               	movlw	127
  9191  0023A0  1207               	iorwf	(___fldiv@b+3)^0,f,c
  9192  0023A2                     l6899:
  9193  0023A2  5014               	movf	___fldiv@sign^0,w,c
  9194  0023A4  1207               	iorwf	(___fldiv@b+3)^0,f,c
  9195  0023A6  C004  F004         	movff	___fldiv@b,?___fldiv
  9196  0023AA  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
  9197  0023AE  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
  9198  0023B2  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
  9199  0023B6  EF20  F013         	goto	l1441
  9200  0023BA                     l6905:
  9201  0023BA  501B               	movf	___fldiv@bexp^0,w,c
  9202  0023BC  A4D8               	btfss	status,2,c
  9203  0023BE  EFE3  F011         	goto	u7531
  9204  0023C2  EFE5  F011         	goto	u7530
  9205  0023C6                     u7531:
  9206  0023C6  EFEF  F011         	goto	l6913
  9207  0023CA                     u7530:
  9208  0023CA  0E00               	movlw	0
  9209  0023CC  6E04               	movwf	?___fldiv^0,c
  9210  0023CE  0E00               	movlw	0
  9211  0023D0  6E05               	movwf	(?___fldiv+1)^0,c
  9212  0023D2  0E00               	movlw	0
  9213  0023D4  6E06               	movwf	(?___fldiv+2)^0,c
  9214  0023D6  0E00               	movlw	0
  9215  0023D8  6E07               	movwf	(?___fldiv+3)^0,c
  9216  0023DA  EF20  F013         	goto	l1441
  9217  0023DE                     l6913:
  9218  0023DE  501C               	movf	___fldiv@aexp^0,w,c
  9219  0023E0  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
  9220  0023E4  6A0D               	clrf	(??___fldiv+1)^0,c
  9221  0023E6  5E0C               	subwf	??___fldiv^0,f,c
  9222  0023E8  0E00               	movlw	0
  9223  0023EA  5A0D               	subwfb	(??___fldiv+1)^0,f,c
  9224  0023EC  0E7F               	movlw	127
  9225  0023EE  240C               	addwf	??___fldiv^0,w,c
  9226  0023F0  6E15               	movwf	___fldiv@new_exp^0,c
  9227  0023F2  0E00               	movlw	0
  9228  0023F4  200D               	addwfc	(??___fldiv+1)^0,w,c
  9229  0023F6  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  9230  0023F8  C004  F010         	movff	___fldiv@b,___fldiv@rem
  9231  0023FC  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
  9232  002400  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
  9233  002404  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
  9234  002408  0E00               	movlw	0
  9235  00240A  6E04               	movwf	___fldiv@b^0,c
  9236  00240C  0E00               	movlw	0
  9237  00240E  6E05               	movwf	(___fldiv@b+1)^0,c
  9238  002410  0E00               	movlw	0
  9239  002412  6E06               	movwf	(___fldiv@b+2)^0,c
  9240  002414  0E00               	movlw	0
  9241  002416  6E07               	movwf	(___fldiv@b+3)^0,c
  9242  002418  0E00               	movlw	0
  9243  00241A  6E17               	movwf	___fldiv@grs^0,c
  9244  00241C  0E00               	movlw	0
  9245  00241E  6E18               	movwf	(___fldiv@grs+1)^0,c
  9246  002420  0E00               	movlw	0
  9247  002422  6E19               	movwf	(___fldiv@grs+2)^0,c
  9248  002424  0E00               	movlw	0
  9249  002426  6E1A               	movwf	(___fldiv@grs+3)^0,c
  9250  002428  0E00               	movlw	0
  9251  00242A  6E1C               	movwf	___fldiv@aexp^0,c
  9252  00242C  EF50  F012         	goto	l1443
  9253  002430                     l6923:
  9254  002430  501C               	movf	___fldiv@aexp^0,w,c
  9255  002432  B4D8               	btfsc	status,2,c
  9256  002434  EF1E  F012         	goto	u7541
  9257  002438  EF20  F012         	goto	u7540
  9258  00243C                     u7541:
  9259  00243C  EF37  F012         	goto	l6931
  9260  002440                     u7540:
  9261  002440  90D8               	bcf	status,0,c
  9262  002442  3610               	rlcf	___fldiv@rem^0,f,c
  9263  002444  3611               	rlcf	(___fldiv@rem+1)^0,f,c
  9264  002446  3612               	rlcf	(___fldiv@rem+2)^0,f,c
  9265  002448  3613               	rlcf	(___fldiv@rem+3)^0,f,c
  9266  00244A  90D8               	bcf	status,0,c
  9267  00244C  3604               	rlcf	___fldiv@b^0,f,c
  9268  00244E  3605               	rlcf	(___fldiv@b+1)^0,f,c
  9269  002450  3606               	rlcf	(___fldiv@b+2)^0,f,c
  9270  002452  3607               	rlcf	(___fldiv@b+3)^0,f,c
  9271  002454  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  9272  002456  EF2F  F012         	goto	u7551
  9273  00245A  EF31  F012         	goto	u7550
  9274  00245E                     u7551:
  9275  00245E  EF32  F012         	goto	l1446
  9276  002462                     u7550:
  9277  002462  8004               	bsf	___fldiv@b^0,0,c
  9278  002464                     l1446:
  9279  002464  90D8               	bcf	status,0,c
  9280  002466  3617               	rlcf	___fldiv@grs^0,f,c
  9281  002468  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  9282  00246A  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  9283  00246C  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  9284  00246E                     l6931:
  9285  00246E  5008               	movf	___fldiv@a^0,w,c
  9286  002470  5C10               	subwf	___fldiv@rem^0,w,c
  9287  002472  5009               	movf	(___fldiv@a+1)^0,w,c
  9288  002474  5811               	subwfb	(___fldiv@rem+1)^0,w,c
  9289  002476  500A               	movf	(___fldiv@a+2)^0,w,c
  9290  002478  5812               	subwfb	(___fldiv@rem+2)^0,w,c
  9291  00247A  500B               	movf	(___fldiv@a+3)^0,w,c
  9292  00247C  5813               	subwfb	(___fldiv@rem+3)^0,w,c
  9293  00247E  A0D8               	btfss	status,0,c
  9294  002480  EF44  F012         	goto	u7561
  9295  002484  EF46  F012         	goto	u7560
  9296  002488                     u7561:
  9297  002488  EF4F  F012         	goto	l6937
  9298  00248C                     u7560:
  9299  00248C  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
  9300  00248E  5008               	movf	___fldiv@a^0,w,c
  9301  002490  5E10               	subwf	___fldiv@rem^0,f,c
  9302  002492  5009               	movf	(___fldiv@a+1)^0,w,c
  9303  002494  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
  9304  002496  500A               	movf	(___fldiv@a+2)^0,w,c
  9305  002498  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
  9306  00249A  500B               	movf	(___fldiv@a+3)^0,w,c
  9307  00249C  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
  9308  00249E                     l6937:
  9309  00249E  2A1C               	incf	___fldiv@aexp^0,f,c
  9310  0024A0                     l1443:
  9311  0024A0  0E19               	movlw	25
  9312  0024A2  641C               	cpfsgt	___fldiv@aexp^0,c
  9313  0024A4  EF56  F012         	goto	u7571
  9314  0024A8  EF58  F012         	goto	u7570
  9315  0024AC                     u7571:
  9316  0024AC  EF18  F012         	goto	l6923
  9317  0024B0                     u7570:
  9318  0024B0  5010               	movf	___fldiv@rem^0,w,c
  9319  0024B2  1011               	iorwf	(___fldiv@rem+1)^0,w,c
  9320  0024B4  1012               	iorwf	(___fldiv@rem+2)^0,w,c
  9321  0024B6  1013               	iorwf	(___fldiv@rem+3)^0,w,c
  9322  0024B8  B4D8               	btfsc	status,2,c
  9323  0024BA  EF61  F012         	goto	u7581
  9324  0024BE  EF63  F012         	goto	u7580
  9325  0024C2                     u7581:
  9326  0024C2  EF7B  F012         	goto	l6949
  9327  0024C6                     u7580:
  9328  0024C6  8017               	bsf	___fldiv@grs^0,0,c
  9329  0024C8  EF7B  F012         	goto	l6949
  9330  0024CC                     l6943:
  9331  0024CC  90D8               	bcf	status,0,c
  9332  0024CE  3604               	rlcf	___fldiv@b^0,f,c
  9333  0024D0  3605               	rlcf	(___fldiv@b+1)^0,f,c
  9334  0024D2  3606               	rlcf	(___fldiv@b+2)^0,f,c
  9335  0024D4  3607               	rlcf	(___fldiv@b+3)^0,f,c
  9336  0024D6  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  9337  0024D8  EF70  F012         	goto	u7591
  9338  0024DC  EF72  F012         	goto	u7590
  9339  0024E0                     u7591:
  9340  0024E0  EF73  F012         	goto	l1452
  9341  0024E4                     u7590:
  9342  0024E4  8004               	bsf	___fldiv@b^0,0,c
  9343  0024E6                     l1452:
  9344  0024E6  90D8               	bcf	status,0,c
  9345  0024E8  3617               	rlcf	___fldiv@grs^0,f,c
  9346  0024EA  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  9347  0024EC  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  9348  0024EE  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  9349  0024F0  0615               	decf	___fldiv@new_exp^0,f,c
  9350  0024F2  A0D8               	btfss	status,0,c
  9351  0024F4  0616               	decf	(___fldiv@new_exp+1)^0,f,c
  9352  0024F6                     l6949:
  9353  0024F6  AE06               	btfss	(___fldiv@b+2)^0,7,c
  9354  0024F8  EF80  F012         	goto	u7601
  9355  0024FC  EF82  F012         	goto	u7600
  9356  002500                     u7601:
  9357  002500  EF66  F012         	goto	l6943
  9358  002504                     u7600:
  9359  002504  0E00               	movlw	0
  9360  002506  6E1C               	movwf	___fldiv@aexp^0,c
  9361  002508  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  9362  00250A  EF89  F012         	goto	u7611
  9363  00250E  EF8B  F012         	goto	u7610
  9364  002512                     u7611:
  9365  002512  EFAF  F012         	goto	l1454
  9366  002516                     u7610:
  9367  002516  0EFF               	movlw	255
  9368  002518  1417               	andwf	___fldiv@grs^0,w,c
  9369  00251A  6E0C               	movwf	??___fldiv^0,c
  9370  00251C  0EFF               	movlw	255
  9371  00251E  1418               	andwf	(___fldiv@grs+1)^0,w,c
  9372  002520  6E0D               	movwf	(??___fldiv+1)^0,c
  9373  002522  0EFF               	movlw	255
  9374  002524  1419               	andwf	(___fldiv@grs+2)^0,w,c
  9375  002526  6E0E               	movwf	(??___fldiv+2)^0,c
  9376  002528  0E7F               	movlw	127
  9377  00252A  141A               	andwf	(___fldiv@grs+3)^0,w,c
  9378  00252C  6E0F               	movwf	(??___fldiv+3)^0,c
  9379  00252E  500C               	movf	??___fldiv^0,w,c
  9380  002530  100D               	iorwf	(??___fldiv+1)^0,w,c
  9381  002532  100E               	iorwf	(??___fldiv+2)^0,w,c
  9382  002534  100F               	iorwf	(??___fldiv+3)^0,w,c
  9383  002536  B4D8               	btfsc	status,2,c
  9384  002538  EFA0  F012         	goto	u7621
  9385  00253C  EFA2  F012         	goto	u7620
  9386  002540                     u7621:
  9387  002540  EFA6  F012         	goto	l1455
  9388  002544                     u7620:
  9389  002544                     l6957:
  9390  002544  0E01               	movlw	1
  9391  002546  6E1C               	movwf	___fldiv@aexp^0,c
  9392  002548  EFAF  F012         	goto	l1454
  9393  00254C                     l1455:
  9394  00254C  A004               	btfss	___fldiv@b^0,0,c
  9395  00254E  EFAB  F012         	goto	u7631
  9396  002552  EFAD  F012         	goto	u7630
  9397  002556                     u7631:
  9398  002556  EFAF  F012         	goto	l1454
  9399  00255A                     u7630:
  9400  00255A  EFA2  F012         	goto	l6957
  9401  00255E                     l1454:
  9402  00255E  501C               	movf	___fldiv@aexp^0,w,c
  9403  002560  B4D8               	btfsc	status,2,c
  9404  002562  EFB5  F012         	goto	u7641
  9405  002566  EFB7  F012         	goto	u7640
  9406  00256A                     u7641:
  9407  00256A  EFDB  F012         	goto	l6969
  9408  00256E                     u7640:
  9409  00256E  0E01               	movlw	1
  9410  002570  2604               	addwf	___fldiv@b^0,f,c
  9411  002572  0E00               	movlw	0
  9412  002574  2205               	addwfc	(___fldiv@b+1)^0,f,c
  9413  002576  2206               	addwfc	(___fldiv@b+2)^0,f,c
  9414  002578  2207               	addwfc	(___fldiv@b+3)^0,f,c
  9415  00257A  A007               	btfss	(___fldiv@b+3)^0,0,c
  9416  00257C  EFC2  F012         	goto	u7651
  9417  002580  EFC4  F012         	goto	u7650
  9418  002584                     u7651:
  9419  002584  EFDB  F012         	goto	l6969
  9420  002588                     u7650:
  9421  002588  C004  F00C         	movff	___fldiv@b,??___fldiv
  9422  00258C  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
  9423  002590  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
  9424  002594  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
  9425  002598  340F               	rlcf	(??___fldiv+3)^0,w,c
  9426  00259A  320F               	rrcf	(??___fldiv+3)^0,f,c
  9427  00259C  320E               	rrcf	(??___fldiv+2)^0,f,c
  9428  00259E  320D               	rrcf	(??___fldiv+1)^0,f,c
  9429  0025A0  320C               	rrcf	??___fldiv^0,f,c
  9430  0025A2  C00C  F004         	movff	??___fldiv,___fldiv@b
  9431  0025A6  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
  9432  0025AA  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
  9433  0025AE  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
  9434  0025B2  4A15               	infsnz	___fldiv@new_exp^0,f,c
  9435  0025B4  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
  9436  0025B6                     l6969:
  9437  0025B6  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9438  0025B8  EFE6  F012         	goto	u7661
  9439  0025BC  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  9440  0025BE  E108               	bnz	u7660
  9441  0025C0  2815               	incf	___fldiv@new_exp^0,w,c
  9442  0025C2  A0D8               	btfss	status,0,c
  9443  0025C4  EFE6  F012         	goto	u7661
  9444  0025C8  EFE8  F012         	goto	u7660
  9445  0025CC                     u7661:
  9446  0025CC  EFF3  F012         	goto	l6973
  9447  0025D0                     u7660:
  9448  0025D0  0E00               	movlw	0
  9449  0025D2  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  9450  0025D4  6815               	setf	___fldiv@new_exp^0,c
  9451  0025D6  0E00               	movlw	0
  9452  0025D8  6E04               	movwf	___fldiv@b^0,c
  9453  0025DA  0E00               	movlw	0
  9454  0025DC  6E05               	movwf	(___fldiv@b+1)^0,c
  9455  0025DE  0E00               	movlw	0
  9456  0025E0  6E06               	movwf	(___fldiv@b+2)^0,c
  9457  0025E2  0E00               	movlw	0
  9458  0025E4  6E07               	movwf	(___fldiv@b+3)^0,c
  9459  0025E6                     l6973:
  9460  0025E6  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9461  0025E8  EF00  F013         	goto	u7670
  9462  0025EC  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  9463  0025EE  E106               	bnz	u7671
  9464  0025F0  0415               	decf	___fldiv@new_exp^0,w,c
  9465  0025F2  B0D8               	btfsc	status,0,c
  9466  0025F4  EFFE  F012         	goto	u7671
  9467  0025F8  EF00  F013         	goto	u7670
  9468  0025FC                     u7671:
  9469  0025FC  EF0E  F013         	goto	l6977
  9470  002600                     u7670:
  9471  002600  0E00               	movlw	0
  9472  002602  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  9473  002604  0E00               	movlw	0
  9474  002606  6E15               	movwf	___fldiv@new_exp^0,c
  9475  002608  0E00               	movlw	0
  9476  00260A  6E04               	movwf	___fldiv@b^0,c
  9477  00260C  0E00               	movlw	0
  9478  00260E  6E05               	movwf	(___fldiv@b+1)^0,c
  9479  002610  0E00               	movlw	0
  9480  002612  6E06               	movwf	(___fldiv@b+2)^0,c
  9481  002614  0E00               	movlw	0
  9482  002616  6E07               	movwf	(___fldiv@b+3)^0,c
  9483  002618  0E00               	movlw	0
  9484  00261A  6E14               	movwf	___fldiv@sign^0,c
  9485  00261C                     l6977:
  9486  00261C  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
  9487  002620  A01B               	btfss	___fldiv@bexp^0,0,c
  9488  002622  EF15  F013         	goto	u7681
  9489  002626  EF17  F013         	goto	u7680
  9490  00262A                     u7681:
  9491  00262A  EF1A  F013         	goto	l6983
  9492  00262E                     u7680:
  9493  00262E  8E06               	bsf	(___fldiv@b+2)^0,7,c
  9494  002630  EF1B  F013         	goto	l6985
  9495  002634                     l6983:
  9496  002634  9E06               	bcf	(___fldiv@b+2)^0,7,c
  9497  002636                     l6985:
  9498  002636  90D8               	bcf	status,0,c
  9499  002638  301B               	rrcf	___fldiv@bexp^0,w,c
  9500  00263A  6E07               	movwf	(___fldiv@b+3)^0,c
  9501  00263C  EFD1  F011         	goto	l6899
  9502  002640                     l1441:
  9503  002640  0012               	return		;funcret
  9504  002642                     __end_of___fldiv:
  9505                           	opt callstack 0
  9506                           
  9507 ;; *************** function ___xxtofl *****************
  9508 ;; Defined at:
  9509 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  sign            1    wreg     unsigned char 
  9512 ;;  val             4    3[COMRAM] long 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;  sign            1   11[COMRAM] unsigned char 
  9515 ;;  arg             4   13[COMRAM] unsigned long 
  9516 ;;  exp             1   12[COMRAM] unsigned char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  4    3[COMRAM] unsigned char 
  9519 ;; Registers used:
  9520 ;;		wreg, status,2, status,0
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9526 ;;      Params:         4       0       0       0       0       0       0       0       0
  9527 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9528 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9529 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9530 ;;Total ram usage:       14 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:    2
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_my_vprintf
  9537 ;;		_ftoa_sci
  9538 ;;		_ftoa
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           	psect	text25
  9543  00398A                     __ptext25:
  9544                           	opt callstack 0
  9545  00398A                     ___xxtofl:
  9546                           	opt callstack 26
  9547                           
  9548                           ;incstack = 0
  9549                           ;___xxtofl@sign stored from wreg
  9550  00398A  6E0C               	movwf	___xxtofl@sign^0,c
  9551  00398C  500C               	movf	___xxtofl@sign^0,w,c
  9552  00398E  B4D8               	btfsc	status,2,c
  9553  003990  EFCC  F01C         	goto	u8321
  9554  003994  EFCE  F01C         	goto	u8320
  9555  003998                     u8321:
  9556  003998  EFF0  F01C         	goto	l1514
  9557  00399C                     u8320:
  9558  00399C  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  9559  00399E  EFD5  F01C         	goto	u8330
  9560  0039A2  EFD3  F01C         	goto	u8331
  9561  0039A6                     u8331:
  9562  0039A6  EFF0  F01C         	goto	l1514
  9563  0039AA                     u8330:
  9564  0039AA  C004  F008         	movff	___xxtofl@val,??___xxtofl
  9565  0039AE  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  9566  0039B2  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  9567  0039B6  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  9568  0039BA  1E08               	comf	??___xxtofl^0,f,c
  9569  0039BC  1E09               	comf	(??___xxtofl+1)^0,f,c
  9570  0039BE  1E0A               	comf	(??___xxtofl+2)^0,f,c
  9571  0039C0  1E0B               	comf	(??___xxtofl+3)^0,f,c
  9572  0039C2  2A08               	incf	??___xxtofl^0,f,c
  9573  0039C4  0E00               	movlw	0
  9574  0039C6  2209               	addwfc	(??___xxtofl+1)^0,f,c
  9575  0039C8  220A               	addwfc	(??___xxtofl+2)^0,f,c
  9576  0039CA  220B               	addwfc	(??___xxtofl+3)^0,f,c
  9577  0039CC  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  9578  0039D0  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  9579  0039D4  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  9580  0039D8  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  9581  0039DC  EFF8  F01C         	goto	l7403
  9582  0039E0                     l1514:
  9583  0039E0  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  9584  0039E4  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9585  0039E8  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9586  0039EC  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9587  0039F0                     l7403:
  9588  0039F0  5004               	movf	___xxtofl@val^0,w,c
  9589  0039F2  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  9590  0039F4  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  9591  0039F6  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  9592  0039F8  A4D8               	btfss	status,2,c
  9593  0039FA  EF01  F01D         	goto	u8341
  9594  0039FE  EF03  F01D         	goto	u8340
  9595  003A02                     u8341:
  9596  003A02  EF0D  F01D         	goto	l7409
  9597  003A06                     u8340:
  9598  003A06  0E00               	movlw	0
  9599  003A08  6E04               	movwf	?___xxtofl^0,c
  9600  003A0A  0E00               	movlw	0
  9601  003A0C  6E05               	movwf	(?___xxtofl+1)^0,c
  9602  003A0E  0E00               	movlw	0
  9603  003A10  6E06               	movwf	(?___xxtofl+2)^0,c
  9604  003A12  0E00               	movlw	0
  9605  003A14  6E07               	movwf	(?___xxtofl+3)^0,c
  9606  003A16  EF9E  F01D         	goto	l1517
  9607  003A1A                     l7409:
  9608  003A1A  0E96               	movlw	150
  9609  003A1C  6E0D               	movwf	___xxtofl@exp^0,c
  9610  003A1E  EF17  F01D         	goto	l7413
  9611  003A22                     l7411:
  9612  003A22  2A0D               	incf	___xxtofl@exp^0,f,c
  9613  003A24  90D8               	bcf	status,0,c
  9614  003A26  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  9615  003A28  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  9616  003A2A  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  9617  003A2C  320E               	rrcf	___xxtofl@arg^0,f,c
  9618  003A2E                     l7413:
  9619  003A2E  0E00               	movlw	0
  9620  003A30  140E               	andwf	___xxtofl@arg^0,w,c
  9621  003A32  6E08               	movwf	??___xxtofl^0,c
  9622  003A34  0E00               	movlw	0
  9623  003A36  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  9624  003A38  6E09               	movwf	(??___xxtofl+1)^0,c
  9625  003A3A  0E00               	movlw	0
  9626  003A3C  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  9627  003A3E  6E0A               	movwf	(??___xxtofl+2)^0,c
  9628  003A40  0EFE               	movlw	254
  9629  003A42  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  9630  003A44  6E0B               	movwf	(??___xxtofl+3)^0,c
  9631  003A46  5008               	movf	??___xxtofl^0,w,c
  9632  003A48  1009               	iorwf	(??___xxtofl+1)^0,w,c
  9633  003A4A  100A               	iorwf	(??___xxtofl+2)^0,w,c
  9634  003A4C  100B               	iorwf	(??___xxtofl+3)^0,w,c
  9635  003A4E  A4D8               	btfss	status,2,c
  9636  003A50  EF2C  F01D         	goto	u8351
  9637  003A54  EF2E  F01D         	goto	u8350
  9638  003A58                     u8351:
  9639  003A58  EF11  F01D         	goto	l7411
  9640  003A5C                     u8350:
  9641  003A5C  EF3C  F01D         	goto	l1521
  9642  003A60                     l7415:
  9643  003A60  2A0D               	incf	___xxtofl@exp^0,f,c
  9644  003A62  0E01               	movlw	1
  9645  003A64  260E               	addwf	___xxtofl@arg^0,f,c
  9646  003A66  0E00               	movlw	0
  9647  003A68  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  9648  003A6A  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  9649  003A6C  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  9650  003A6E  90D8               	bcf	status,0,c
  9651  003A70  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  9652  003A72  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  9653  003A74  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  9654  003A76  320E               	rrcf	___xxtofl@arg^0,f,c
  9655  003A78                     l1521:
  9656  003A78  0E00               	movlw	0
  9657  003A7A  140E               	andwf	___xxtofl@arg^0,w,c
  9658  003A7C  6E08               	movwf	??___xxtofl^0,c
  9659  003A7E  0E00               	movlw	0
  9660  003A80  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  9661  003A82  6E09               	movwf	(??___xxtofl+1)^0,c
  9662  003A84  0E00               	movlw	0
  9663  003A86  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  9664  003A88  6E0A               	movwf	(??___xxtofl+2)^0,c
  9665  003A8A  0EFF               	movlw	255
  9666  003A8C  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  9667  003A8E  6E0B               	movwf	(??___xxtofl+3)^0,c
  9668  003A90  5008               	movf	??___xxtofl^0,w,c
  9669  003A92  1009               	iorwf	(??___xxtofl+1)^0,w,c
  9670  003A94  100A               	iorwf	(??___xxtofl+2)^0,w,c
  9671  003A96  100B               	iorwf	(??___xxtofl+3)^0,w,c
  9672  003A98  A4D8               	btfss	status,2,c
  9673  003A9A  EF51  F01D         	goto	u8361
  9674  003A9E  EF53  F01D         	goto	u8360
  9675  003AA2                     u8361:
  9676  003AA2  EF30  F01D         	goto	l7415
  9677  003AA6                     u8360:
  9678  003AA6  EF5B  F01D         	goto	l7423
  9679  003AAA                     l7421:
  9680  003AAA  060D               	decf	___xxtofl@exp^0,f,c
  9681  003AAC  90D8               	bcf	status,0,c
  9682  003AAE  360E               	rlcf	___xxtofl@arg^0,f,c
  9683  003AB0  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  9684  003AB2  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  9685  003AB4  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  9686  003AB6                     l7423:
  9687  003AB6  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  9688  003AB8  EF60  F01D         	goto	u8371
  9689  003ABC  EF62  F01D         	goto	u8370
  9690  003AC0                     u8371:
  9691  003AC0  EF6A  F01D         	goto	l1528
  9692  003AC4                     u8370:
  9693  003AC4  0E02               	movlw	2
  9694  003AC6  600D               	cpfslt	___xxtofl@exp^0,c
  9695  003AC8  EF68  F01D         	goto	u8381
  9696  003ACC  EF6A  F01D         	goto	u8380
  9697  003AD0                     u8381:
  9698  003AD0  EF55  F01D         	goto	l7421
  9699  003AD4                     u8380:
  9700  003AD4                     l1528:
  9701  003AD4  B00D               	btfsc	___xxtofl@exp^0,0,c
  9702  003AD6  EF6F  F01D         	goto	u8391
  9703  003ADA  EF71  F01D         	goto	u8390
  9704  003ADE                     u8391:
  9705  003ADE  EF72  F01D         	goto	l7429
  9706  003AE2                     u8390:
  9707  003AE2  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  9708  003AE4                     l7429:
  9709  003AE4  90D8               	bcf	status,0,c
  9710  003AE6  320D               	rrcf	___xxtofl@exp^0,f,c
  9711  003AE8  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  9712  003AEC  6A09               	clrf	(??___xxtofl+1)^0,c
  9713  003AEE  6A0A               	clrf	(??___xxtofl+2)^0,c
  9714  003AF0  6A0B               	clrf	(??___xxtofl+3)^0,c
  9715  003AF2  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  9716  003AF6  6A0A               	clrf	(??___xxtofl+2)^0,c
  9717  003AF8  6A09               	clrf	(??___xxtofl+1)^0,c
  9718  003AFA  6A08               	clrf	??___xxtofl^0,c
  9719  003AFC  5008               	movf	??___xxtofl^0,w,c
  9720  003AFE  120E               	iorwf	___xxtofl@arg^0,f,c
  9721  003B00  5009               	movf	(??___xxtofl+1)^0,w,c
  9722  003B02  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  9723  003B04  500A               	movf	(??___xxtofl+2)^0,w,c
  9724  003B06  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  9725  003B08  500B               	movf	(??___xxtofl+3)^0,w,c
  9726  003B0A  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  9727  003B0C  500C               	movf	___xxtofl@sign^0,w,c
  9728  003B0E  B4D8               	btfsc	status,2,c
  9729  003B10  EF8C  F01D         	goto	u8401
  9730  003B14  EF8E  F01D         	goto	u8400
  9731  003B18                     u8401:
  9732  003B18  EF96  F01D         	goto	l7439
  9733  003B1C                     u8400:
  9734  003B1C  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  9735  003B1E  EF95  F01D         	goto	u8410
  9736  003B22  EF93  F01D         	goto	u8411
  9737  003B26                     u8411:
  9738  003B26  EF96  F01D         	goto	l7439
  9739  003B2A                     u8410:
  9740  003B2A  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  9741  003B2C                     l7439:
  9742  003B2C  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  9743  003B30  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  9744  003B34  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  9745  003B38  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  9746  003B3C                     l1517:
  9747  003B3C  0012               	return		;funcret
  9748  003B3E                     __end_of___xxtofl:
  9749                           	opt callstack 0
  9750                           
  9751 ;; *************** function ___fltol *****************
  9752 ;; Defined at:
  9753 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  f1              4   28[COMRAM] unsigned char 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;  exp1            1   37[COMRAM] unsigned char 
  9758 ;;  sign1           1   36[COMRAM] unsigned char 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  4   28[COMRAM] long 
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9768 ;;      Params:         4       0       0       0       0       0       0       0       0
  9769 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9770 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9771 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9772 ;;Total ram usage:       10 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; Hardware stack levels required when called:    2
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		_ftoa_sci
  9779 ;;		_ftoa
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text26
  9784  004476                     __ptext26:
  9785                           	opt callstack 0
  9786  004476                     ___fltol:
  9787                           	opt callstack 26
  9788  004476  341F               	rlcf	(___fltol@f1+2)^0,w,c
  9789  004478  3420               	rlcf	(___fltol@f1+3)^0,w,c
  9790  00447A  6E26               	movwf	___fltol@exp1^0,c
  9791  00447C  5026               	movf	___fltol@exp1^0,w,c
  9792  00447E  A4D8               	btfss	status,2,c
  9793  004480  EF44  F022         	goto	u8251
  9794  004484  EF46  F022         	goto	u8250
  9795  004488                     u8251:
  9796  004488  EF50  F022         	goto	l7359
  9797  00448C                     u8250:
  9798  00448C                     l7355:
  9799  00448C  0E00               	movlw	0
  9800  00448E  6E1D               	movwf	?___fltol^0,c
  9801  004490  0E00               	movlw	0
  9802  004492  6E1E               	movwf	(?___fltol+1)^0,c
  9803  004494  0E00               	movlw	0
  9804  004496  6E1F               	movwf	(?___fltol+2)^0,c
  9805  004498  0E00               	movlw	0
  9806  00449A  6E20               	movwf	(?___fltol+3)^0,c
  9807  00449C  EFBD  F022         	goto	l1156
  9808  0044A0                     l7359:
  9809  0044A0  C01D  F021         	movff	___fltol@f1,??___fltol
  9810  0044A4  C01E  F022         	movff	___fltol@f1+1,??___fltol+1
  9811  0044A8  C01F  F023         	movff	___fltol@f1+2,??___fltol+2
  9812  0044AC  C020  F024         	movff	___fltol@f1+3,??___fltol+3
  9813  0044B0  0E20               	movlw	32
  9814  0044B2  EF60  F022         	goto	u8260
  9815  0044B6                     u8265:
  9816  0044B6  90D8               	bcf	status,0,c
  9817  0044B8  3224               	rrcf	(??___fltol+3)^0,f,c
  9818  0044BA  3223               	rrcf	(??___fltol+2)^0,f,c
  9819  0044BC  3222               	rrcf	(??___fltol+1)^0,f,c
  9820  0044BE  3221               	rrcf	??___fltol^0,f,c
  9821  0044C0                     u8260:
  9822  0044C0  2EE8               	decfsz	wreg,f,c
  9823  0044C2  EF5B  F022         	goto	u8265
  9824  0044C6  5021               	movf	??___fltol^0,w,c
  9825  0044C8  6E25               	movwf	___fltol@sign1^0,c
  9826  0044CA  8E1F               	bsf	(___fltol@f1+2)^0,7,c
  9827  0044CC  0EFF               	movlw	255
  9828  0044CE  161D               	andwf	___fltol@f1^0,f,c
  9829  0044D0  0EFF               	movlw	255
  9830  0044D2  161E               	andwf	(___fltol@f1+1)^0,f,c
  9831  0044D4  0EFF               	movlw	255
  9832  0044D6  161F               	andwf	(___fltol@f1+2)^0,f,c
  9833  0044D8  0E00               	movlw	0
  9834  0044DA  1620               	andwf	(___fltol@f1+3)^0,f,c
  9835  0044DC  0E96               	movlw	150
  9836  0044DE  5E26               	subwf	___fltol@exp1^0,f,c
  9837  0044E0  BE26               	btfsc	___fltol@exp1^0,7,c
  9838  0044E2  EF77  F022         	goto	u8270
  9839  0044E6  EF75  F022         	goto	u8271
  9840  0044EA                     u8271:
  9841  0044EA  EF8D  F022         	goto	l7379
  9842  0044EE                     u8270:
  9843  0044EE  5026               	movf	___fltol@exp1^0,w,c
  9844  0044F0  0A80               	xorlw	128
  9845  0044F2  0F97               	addlw	151
  9846  0044F4  B0D8               	btfsc	status,0,c
  9847  0044F6  EF7F  F022         	goto	u8281
  9848  0044FA  EF81  F022         	goto	u8280
  9849  0044FE                     u8281:
  9850  0044FE  EF83  F022         	goto	l7375
  9851  004502                     u8280:
  9852  004502  EF46  F022         	goto	l7355
  9853  004506                     l7375:
  9854  004506  90D8               	bcf	status,0,c
  9855  004508  3220               	rrcf	(___fltol@f1+3)^0,f,c
  9856  00450A  321F               	rrcf	(___fltol@f1+2)^0,f,c
  9857  00450C  321E               	rrcf	(___fltol@f1+1)^0,f,c
  9858  00450E  321D               	rrcf	___fltol@f1^0,f,c
  9859  004510  3E26               	incfsz	___fltol@exp1^0,f,c
  9860  004512  EF83  F022         	goto	l7375
  9861  004516  EFA5  F022         	goto	l7389
  9862  00451A                     l7379:
  9863  00451A  0E1F               	movlw	31
  9864  00451C  6426               	cpfsgt	___fltol@exp1^0,c
  9865  00451E  EF93  F022         	goto	u8291
  9866  004522  EF95  F022         	goto	u8290
  9867  004526                     u8291:
  9868  004526  EF9D  F022         	goto	l7387
  9869  00452A                     u8290:
  9870  00452A  EF46  F022         	goto	l7355
  9871  00452E                     l7385:
  9872  00452E  90D8               	bcf	status,0,c
  9873  004530  361D               	rlcf	___fltol@f1^0,f,c
  9874  004532  361E               	rlcf	(___fltol@f1+1)^0,f,c
  9875  004534  361F               	rlcf	(___fltol@f1+2)^0,f,c
  9876  004536  3620               	rlcf	(___fltol@f1+3)^0,f,c
  9877  004538  0626               	decf	___fltol@exp1^0,f,c
  9878  00453A                     l7387:
  9879  00453A  5026               	movf	___fltol@exp1^0,w,c
  9880  00453C  A4D8               	btfss	status,2,c
  9881  00453E  EFA3  F022         	goto	u8301
  9882  004542  EFA5  F022         	goto	u8300
  9883  004546                     u8301:
  9884  004546  EF97  F022         	goto	l7385
  9885  00454A                     u8300:
  9886  00454A                     l7389:
  9887  00454A  5025               	movf	___fltol@sign1^0,w,c
  9888  00454C  B4D8               	btfsc	status,2,c
  9889  00454E  EFAB  F022         	goto	u8311
  9890  004552  EFAD  F022         	goto	u8310
  9891  004556                     u8311:
  9892  004556  EFB5  F022         	goto	l7393
  9893  00455A                     u8310:
  9894  00455A  1E20               	comf	(___fltol@f1+3)^0,f,c
  9895  00455C  1E1F               	comf	(___fltol@f1+2)^0,f,c
  9896  00455E  1E1E               	comf	(___fltol@f1+1)^0,f,c
  9897  004560  6C1D               	negf	___fltol@f1^0,c
  9898  004562  0E00               	movlw	0
  9899  004564  221E               	addwfc	(___fltol@f1+1)^0,f,c
  9900  004566  221F               	addwfc	(___fltol@f1+2)^0,f,c
  9901  004568  2220               	addwfc	(___fltol@f1+3)^0,f,c
  9902  00456A                     l7393:
  9903  00456A  C01D  F01D         	movff	___fltol@f1,?___fltol
  9904  00456E  C01E  F01E         	movff	___fltol@f1+1,?___fltol+1
  9905  004572  C01F  F01F         	movff	___fltol@f1+2,?___fltol+2
  9906  004576  C020  F020         	movff	___fltol@f1+3,?___fltol+3
  9907  00457A                     l1156:
  9908  00457A  0012               	return		;funcret
  9909  00457C                     __end_of___fltol:
  9910                           	opt callstack 0
  9911                           
  9912 ;; *************** function ___flsub *****************
  9913 ;; Defined at:
  9914 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  b               4   28[COMRAM] long 
  9917 ;;  a               4   32[COMRAM] long 
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;		None
  9920 ;; Return value:  Size  Location     Type
  9921 ;;                  4   28[COMRAM] long 
  9922 ;; Registers used:
  9923 ;;		wreg, status,2, status,0, cstack
  9924 ;; Tracked objects:
  9925 ;;		On entry : 0/0
  9926 ;;		On exit  : 0/0
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9929 ;;      Params:         8       0       0       0       0       0       0       0       0
  9930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9932 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9933 ;;Total ram usage:        8 bytes
  9934 ;; Hardware stack levels used:    1
  9935 ;; Hardware stack levels required when called:    3
  9936 ;; This function calls:
  9937 ;;		___fladd
  9938 ;; This function is called by:
  9939 ;;		_ftoa_sci
  9940 ;;		_ftoa
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943                           
  9944                           	psect	text27
  9945  0051E2                     __ptext27:
  9946                           	opt callstack 0
  9947  0051E2                     ___flsub:
  9948                           	opt callstack 25
  9949  0051E2  0E00               	movlw	0
  9950  0051E4  1A21               	xorwf	___flsub@a^0,f,c
  9951  0051E6  0E00               	movlw	0
  9952  0051E8  1A22               	xorwf	(___flsub@a+1)^0,f,c
  9953  0051EA  0E00               	movlw	0
  9954  0051EC  1A23               	xorwf	(___flsub@a+2)^0,f,c
  9955  0051EE  0E80               	movlw	128
  9956  0051F0  1A24               	xorwf	(___flsub@a+3)^0,f,c
  9957  0051F2  C01D  F004         	movff	___flsub@b,___fladd@b
  9958  0051F6  C01E  F005         	movff	___flsub@b+1,___fladd@b+1
  9959  0051FA  C01F  F006         	movff	___flsub@b+2,___fladd@b+2
  9960  0051FE  C020  F007         	movff	___flsub@b+3,___fladd@b+3
  9961  005202  C021  F008         	movff	___flsub@a,___fladd@a
  9962  005206  C022  F009         	movff	___flsub@a+1,___fladd@a+1
  9963  00520A  C023  F00A         	movff	___flsub@a+2,___fladd@a+2
  9964  00520E  C024  F00B         	movff	___flsub@a+3,___fladd@a+3
  9965  005212  ECDF  F00C         	call	___fladd	;wreg free
  9966  005216  C004  F01D         	movff	?___fladd,?___flsub
  9967  00521A  C005  F01E         	movff	?___fladd+1,?___flsub+1
  9968  00521E  C006  F01F         	movff	?___fladd+2,?___flsub+2
  9969  005222  C007  F020         	movff	?___fladd+3,?___flsub+3
  9970  005226  0012               	return		;funcret
  9971  005228                     __end_of___flsub:
  9972                           	opt callstack 0
  9973                           
  9974 ;; *************** function ___fladd *****************
  9975 ;; Defined at:
  9976 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;  b               4    3[COMRAM] long 
  9979 ;;  a               4    7[COMRAM] long 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;  grs             1   18[COMRAM] unsigned char 
  9982 ;;  bexp            1   17[COMRAM] unsigned char 
  9983 ;;  aexp            1   16[COMRAM] unsigned char 
  9984 ;;  signs           1   15[COMRAM] unsigned char 
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  4    3[COMRAM] unsigned char 
  9987 ;; Registers used:
  9988 ;;		wreg, status,2, status,0
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9994 ;;      Params:         8       0       0       0       0       0       0       0       0
  9995 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9996 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9997 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9998 ;;Total ram usage:       16 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; Hardware stack levels required when called:    2
 10001 ;; This function calls:
 10002 ;;		Nothing
 10003 ;; This function is called by:
 10004 ;;		___flsub
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text28
 10009  0019BE                     __ptext28:
 10010                           	opt callstack 0
 10011  0019BE                     ___fladd:
 10012                           	opt callstack 25
 10013  0019BE  5007               	movf	(___fladd@b+3)^0,w,c
 10014  0019C0  0B80               	andlw	128
 10015  0019C2  6E10               	movwf	___fladd@signs^0,c
 10016  0019C4  5007               	movf	(___fladd@b+3)^0,w,c
 10017  0019C6  2407               	addwf	(___fladd@b+3)^0,w,c
 10018  0019C8  6E12               	movwf	___fladd@bexp^0,c
 10019  0019CA  AE06               	btfss	(___fladd@b+2)^0,7,c
 10020  0019CC  EFEA  F00C         	goto	u7071
 10021  0019D0  EFEC  F00C         	goto	u7070
 10022  0019D4                     u7071:
 10023  0019D4  EFED  F00C         	goto	l6659
 10024  0019D8                     u7070:
 10025  0019D8  8012               	bsf	___fladd@bexp^0,0,c
 10026  0019DA                     l6659:
 10027  0019DA  5012               	movf	___fladd@bexp^0,w,c
 10028  0019DC  B4D8               	btfsc	status,2,c
 10029  0019DE  EFF3  F00C         	goto	u7081
 10030  0019E2  EFF5  F00C         	goto	u7080
 10031  0019E6                     u7081:
 10032  0019E6  EF0A  F00D         	goto	l6669
 10033  0019EA                     u7080:
 10034  0019EA  2812               	incf	___fladd@bexp^0,w,c
 10035  0019EC  A4D8               	btfss	status,2,c
 10036  0019EE  EFFB  F00C         	goto	u7091
 10037  0019F2  EFFD  F00C         	goto	u7090
 10038  0019F6                     u7091:
 10039  0019F6  EF05  F00D         	goto	l6665
 10040  0019FA                     u7090:
 10041  0019FA  0E00               	movlw	0
 10042  0019FC  6E04               	movwf	___fladd@b^0,c
 10043  0019FE  0E00               	movlw	0
 10044  001A00  6E05               	movwf	(___fladd@b+1)^0,c
 10045  001A02  0E00               	movlw	0
 10046  001A04  6E06               	movwf	(___fladd@b+2)^0,c
 10047  001A06  0E00               	movlw	0
 10048  001A08  6E07               	movwf	(___fladd@b+3)^0,c
 10049  001A0A                     l6665:
 10050  001A0A  8E06               	bsf	(___fladd@b+2)^0,7,c
 10051  001A0C  0E00               	movlw	0
 10052  001A0E  6E07               	movwf	(___fladd@b+3)^0,c
 10053  001A10  EF12  F00D         	goto	l6671
 10054  001A14                     l6669:
 10055  001A14  0E00               	movlw	0
 10056  001A16  6E04               	movwf	___fladd@b^0,c
 10057  001A18  0E00               	movlw	0
 10058  001A1A  6E05               	movwf	(___fladd@b+1)^0,c
 10059  001A1C  0E00               	movlw	0
 10060  001A1E  6E06               	movwf	(___fladd@b+2)^0,c
 10061  001A20  0E00               	movlw	0
 10062  001A22  6E07               	movwf	(___fladd@b+3)^0,c
 10063  001A24                     l6671:
 10064  001A24  500B               	movf	(___fladd@a+3)^0,w,c
 10065  001A26  0B80               	andlw	128
 10066  001A28  6E11               	movwf	___fladd@aexp^0,c
 10067  001A2A  5010               	movf	___fladd@signs^0,w,c
 10068  001A2C  1811               	xorwf	___fladd@aexp^0,w,c
 10069  001A2E  B4D8               	btfsc	status,2,c
 10070  001A30  EF1C  F00D         	goto	u7101
 10071  001A34  EF1E  F00D         	goto	u7100
 10072  001A38                     u7101:
 10073  001A38  EF1F  F00D         	goto	l6677
 10074  001A3C                     u7100:
 10075  001A3C  8C10               	bsf	___fladd@signs^0,6,c
 10076  001A3E                     l6677:
 10077  001A3E  500B               	movf	(___fladd@a+3)^0,w,c
 10078  001A40  240B               	addwf	(___fladd@a+3)^0,w,c
 10079  001A42  6E11               	movwf	___fladd@aexp^0,c
 10080  001A44  AE0A               	btfss	(___fladd@a+2)^0,7,c
 10081  001A46  EF27  F00D         	goto	u7111
 10082  001A4A  EF29  F00D         	goto	u7110
 10083  001A4E                     u7111:
 10084  001A4E  EF2A  F00D         	goto	l6683
 10085  001A52                     u7110:
 10086  001A52  8011               	bsf	___fladd@aexp^0,0,c
 10087  001A54                     l6683:
 10088  001A54  5011               	movf	___fladd@aexp^0,w,c
 10089  001A56  B4D8               	btfsc	status,2,c
 10090  001A58  EF30  F00D         	goto	u7121
 10091  001A5C  EF32  F00D         	goto	u7120
 10092  001A60                     u7121:
 10093  001A60  EF47  F00D         	goto	l6693
 10094  001A64                     u7120:
 10095  001A64  2811               	incf	___fladd@aexp^0,w,c
 10096  001A66  A4D8               	btfss	status,2,c
 10097  001A68  EF38  F00D         	goto	u7131
 10098  001A6C  EF3A  F00D         	goto	u7130
 10099  001A70                     u7131:
 10100  001A70  EF42  F00D         	goto	l6689
 10101  001A74                     u7130:
 10102  001A74  0E00               	movlw	0
 10103  001A76  6E08               	movwf	___fladd@a^0,c
 10104  001A78  0E00               	movlw	0
 10105  001A7A  6E09               	movwf	(___fladd@a+1)^0,c
 10106  001A7C  0E00               	movlw	0
 10107  001A7E  6E0A               	movwf	(___fladd@a+2)^0,c
 10108  001A80  0E00               	movlw	0
 10109  001A82  6E0B               	movwf	(___fladd@a+3)^0,c
 10110  001A84                     l6689:
 10111  001A84  8E0A               	bsf	(___fladd@a+2)^0,7,c
 10112  001A86  0E00               	movlw	0
 10113  001A88  6E0B               	movwf	(___fladd@a+3)^0,c
 10114  001A8A  EF4F  F00D         	goto	l6695
 10115  001A8E                     l6693:
 10116  001A8E  0E00               	movlw	0
 10117  001A90  6E08               	movwf	___fladd@a^0,c
 10118  001A92  0E00               	movlw	0
 10119  001A94  6E09               	movwf	(___fladd@a+1)^0,c
 10120  001A96  0E00               	movlw	0
 10121  001A98  6E0A               	movwf	(___fladd@a+2)^0,c
 10122  001A9A  0E00               	movlw	0
 10123  001A9C  6E0B               	movwf	(___fladd@a+3)^0,c
 10124  001A9E                     l6695:
 10125  001A9E  5012               	movf	___fladd@bexp^0,w,c
 10126  001AA0  5C11               	subwf	___fladd@aexp^0,w,c
 10127  001AA2  B0D8               	btfsc	status,0,c
 10128  001AA4  EF56  F00D         	goto	u7141
 10129  001AA8  EF58  F00D         	goto	u7140
 10130  001AAC                     u7141:
 10131  001AAC  EF7F  F00D         	goto	l6731
 10132  001AB0                     u7140:
 10133  001AB0  AC10               	btfss	___fladd@signs^0,6,c
 10134  001AB2  EF5D  F00D         	goto	u7151
 10135  001AB6  EF5F  F00D         	goto	u7150
 10136  001ABA                     u7151:
 10137  001ABA  EF61  F00D         	goto	l6701
 10138  001ABE                     u7150:
 10139  001ABE  0E80               	movlw	128
 10140  001AC0  1A10               	xorwf	___fladd@signs^0,f,c
 10141  001AC2                     l6701:
 10142  001AC2  C012  F013         	movff	___fladd@bexp,___fladd@grs
 10143  001AC6  C011  F012         	movff	___fladd@aexp,___fladd@bexp
 10144  001ACA  C013  F011         	movff	___fladd@grs,___fladd@aexp
 10145  001ACE  C004  F013         	movff	___fladd@b,___fladd@grs
 10146  001AD2  C008  F004         	movff	___fladd@a,___fladd@b
 10147  001AD6  C013  F008         	movff	___fladd@grs,___fladd@a
 10148  001ADA  C005  F013         	movff	___fladd@b+1,___fladd@grs
 10149  001ADE  C009  F005         	movff	___fladd@a+1,___fladd@b+1
 10150  001AE2  C013  F009         	movff	___fladd@grs,___fladd@a+1
 10151  001AE6  C006  F013         	movff	___fladd@b+2,___fladd@grs
 10152  001AEA  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
 10153  001AEE  C013  F00A         	movff	___fladd@grs,___fladd@a+2
 10154  001AF2  C007  F013         	movff	___fladd@b+3,___fladd@grs
 10155  001AF6  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
 10156  001AFA  C013  F00B         	movff	___fladd@grs,___fladd@a+3
 10157  001AFE                     l6731:
 10158  001AFE  0E00               	movlw	0
 10159  001B00  6E13               	movwf	___fladd@grs^0,c
 10160  001B02  5012               	movf	___fladd@bexp^0,w,c
 10161  001B04  C011  F00C         	movff	___fladd@aexp,??___fladd
 10162  001B08  6A0D               	clrf	(??___fladd+1)^0,c
 10163  001B0A  5E0C               	subwf	??___fladd^0,f,c
 10164  001B0C  0E00               	movlw	0
 10165  001B0E  5A0D               	subwfb	(??___fladd+1)^0,f,c
 10166  001B10  BE0D               	btfsc	(??___fladd+1)^0,7,c
 10167  001B12  EF94  F00D         	goto	u7161
 10168  001B16  500D               	movf	(??___fladd+1)^0,w,c
 10169  001B18  E109               	bnz	u7160
 10170  001B1A  0E1A               	movlw	26
 10171  001B1C  5C0C               	subwf	??___fladd^0,w,c
 10172  001B1E  A0D8               	btfss	status,0,c
 10173  001B20  EF94  F00D         	goto	u7161
 10174  001B24  EF96  F00D         	goto	u7160
 10175  001B28                     u7161:
 10176  001B28  EFCD  F00D         	goto	l1388
 10177  001B2C                     u7160:
 10178  001B2C  5004               	movf	___fladd@b^0,w,c
 10179  001B2E  1005               	iorwf	(___fladd@b+1)^0,w,c
 10180  001B30  1006               	iorwf	(___fladd@b+2)^0,w,c
 10181  001B32  1007               	iorwf	(___fladd@b+3)^0,w,c
 10182  001B34  A4D8               	btfss	status,2,c
 10183  001B36  EF9F  F00D         	goto	u7171
 10184  001B3A  EFA2  F00D         	goto	u7170
 10185  001B3E                     u7171:
 10186  001B3E  0E01               	movlw	1
 10187  001B40  EFA3  F00D         	goto	u7180
 10188  001B44                     u7170:
 10189  001B44  0E00               	movlw	0
 10190  001B46                     u7180:
 10191  001B46  6E13               	movwf	___fladd@grs^0,c
 10192  001B48  0E00               	movlw	0
 10193  001B4A  6E04               	movwf	___fladd@b^0,c
 10194  001B4C  0E00               	movlw	0
 10195  001B4E  6E05               	movwf	(___fladd@b+1)^0,c
 10196  001B50  0E00               	movlw	0
 10197  001B52  6E06               	movwf	(___fladd@b+2)^0,c
 10198  001B54  0E00               	movlw	0
 10199  001B56  6E07               	movwf	(___fladd@b+3)^0,c
 10200  001B58  C011  F012         	movff	___fladd@aexp,___fladd@bexp
 10201  001B5C  EFD6  F00D         	goto	l1387
 10202  001B60                     l1389:
 10203  001B60  A013               	btfss	___fladd@grs^0,0,c
 10204  001B62  EFB5  F00D         	goto	u7191
 10205  001B66  EFB7  F00D         	goto	u7190
 10206  001B6A                     u7191:
 10207  001B6A  EFBD  F00D         	goto	l6743
 10208  001B6E                     u7190:
 10209  001B6E  90D8               	bcf	status,0,c
 10210  001B70  3013               	rrcf	___fladd@grs^0,w,c
 10211  001B72  0901               	iorlw	1
 10212  001B74  6E13               	movwf	___fladd@grs^0,c
 10213  001B76  EFBF  F00D         	goto	l6745
 10214  001B7A                     l6743:
 10215  001B7A  90D8               	bcf	status,0,c
 10216  001B7C  3213               	rrcf	___fladd@grs^0,f,c
 10217  001B7E                     l6745:
 10218  001B7E  A004               	btfss	___fladd@b^0,0,c
 10219  001B80  EFC4  F00D         	goto	u7201
 10220  001B84  EFC6  F00D         	goto	u7200
 10221  001B88                     u7201:
 10222  001B88  EFC7  F00D         	goto	l6749
 10223  001B8C                     u7200:
 10224  001B8C  8E13               	bsf	___fladd@grs^0,7,c
 10225  001B8E                     l6749:
 10226  001B8E  3407               	rlcf	(___fladd@b+3)^0,w,c
 10227  001B90  3207               	rrcf	(___fladd@b+3)^0,f,c
 10228  001B92  3206               	rrcf	(___fladd@b+2)^0,f,c
 10229  001B94  3205               	rrcf	(___fladd@b+1)^0,f,c
 10230  001B96  3204               	rrcf	___fladd@b^0,f,c
 10231  001B98  2A12               	incf	___fladd@bexp^0,f,c
 10232  001B9A                     l1388:
 10233  001B9A  5011               	movf	___fladd@aexp^0,w,c
 10234  001B9C  5C12               	subwf	___fladd@bexp^0,w,c
 10235  001B9E  A0D8               	btfss	status,0,c
 10236  001BA0  EFD4  F00D         	goto	u7211
 10237  001BA4  EFD6  F00D         	goto	u7210
 10238  001BA8                     u7211:
 10239  001BA8  EFB0  F00D         	goto	l1389
 10240  001BAC                     u7210:
 10241  001BAC                     l1387:
 10242  001BAC  BC10               	btfsc	___fladd@signs^0,6,c
 10243  001BAE  EFDB  F00D         	goto	u7221
 10244  001BB2  EFDD  F00D         	goto	u7220
 10245  001BB6                     u7221:
 10246  001BB6  EF1D  F00E         	goto	l6777
 10247  001BBA                     u7220:
 10248  001BBA  5012               	movf	___fladd@bexp^0,w,c
 10249  001BBC  A4D8               	btfss	status,2,c
 10250  001BBE  EFE3  F00D         	goto	u7231
 10251  001BC2  EFE5  F00D         	goto	u7230
 10252  001BC6                     u7231:
 10253  001BC6  EFEF  F00D         	goto	l6759
 10254  001BCA                     u7230:
 10255  001BCA  0E00               	movlw	0
 10256  001BCC  6E04               	movwf	?___fladd^0,c
 10257  001BCE  0E00               	movlw	0
 10258  001BD0  6E05               	movwf	(?___fladd+1)^0,c
 10259  001BD2  0E00               	movlw	0
 10260  001BD4  6E06               	movwf	(?___fladd+2)^0,c
 10261  001BD6  0E00               	movlw	0
 10262  001BD8  6E07               	movwf	(?___fladd+3)^0,c
 10263  001BDA  EF3E  F00F         	goto	l1396
 10264  001BDE                     l6759:
 10265  001BDE  5008               	movf	___fladd@a^0,w,c
 10266  001BE0  2604               	addwf	___fladd@b^0,f,c
 10267  001BE2  5009               	movf	(___fladd@a+1)^0,w,c
 10268  001BE4  2205               	addwfc	(___fladd@b+1)^0,f,c
 10269  001BE6  500A               	movf	(___fladd@a+2)^0,w,c
 10270  001BE8  2206               	addwfc	(___fladd@b+2)^0,f,c
 10271  001BEA  500B               	movf	(___fladd@a+3)^0,w,c
 10272  001BEC  2207               	addwfc	(___fladd@b+3)^0,f,c
 10273  001BEE  A007               	btfss	(___fladd@b+3)^0,0,c
 10274  001BF0  EFFC  F00D         	goto	u7241
 10275  001BF4  EFFE  F00D         	goto	u7240
 10276  001BF8                     u7241:
 10277  001BF8  EFAA  F00E         	goto	l6813
 10278  001BFC                     u7240:
 10279  001BFC  A013               	btfss	___fladd@grs^0,0,c
 10280  001BFE  EF03  F00E         	goto	u7251
 10281  001C02  EF05  F00E         	goto	u7250
 10282  001C06                     u7251:
 10283  001C06  EF0B  F00E         	goto	l6767
 10284  001C0A                     u7250:
 10285  001C0A  90D8               	bcf	status,0,c
 10286  001C0C  3013               	rrcf	___fladd@grs^0,w,c
 10287  001C0E  0901               	iorlw	1
 10288  001C10  6E13               	movwf	___fladd@grs^0,c
 10289  001C12  EF0D  F00E         	goto	l6769
 10290  001C16                     l6767:
 10291  001C16  90D8               	bcf	status,0,c
 10292  001C18  3213               	rrcf	___fladd@grs^0,f,c
 10293  001C1A                     l6769:
 10294  001C1A  A004               	btfss	___fladd@b^0,0,c
 10295  001C1C  EF12  F00E         	goto	u7261
 10296  001C20  EF14  F00E         	goto	u7260
 10297  001C24                     u7261:
 10298  001C24  EF15  F00E         	goto	l6773
 10299  001C28                     u7260:
 10300  001C28  8E13               	bsf	___fladd@grs^0,7,c
 10301  001C2A                     l6773:
 10302  001C2A  3407               	rlcf	(___fladd@b+3)^0,w,c
 10303  001C2C  3207               	rrcf	(___fladd@b+3)^0,f,c
 10304  001C2E  3206               	rrcf	(___fladd@b+2)^0,f,c
 10305  001C30  3205               	rrcf	(___fladd@b+1)^0,f,c
 10306  001C32  3204               	rrcf	___fladd@b^0,f,c
 10307  001C34  2A12               	incf	___fladd@bexp^0,f,c
 10308  001C36  EFAA  F00E         	goto	l6813
 10309  001C3A                     l6777:
 10310  001C3A  5008               	movf	___fladd@a^0,w,c
 10311  001C3C  5C04               	subwf	___fladd@b^0,w,c
 10312  001C3E  5009               	movf	(___fladd@a+1)^0,w,c
 10313  001C40  5805               	subwfb	(___fladd@b+1)^0,w,c
 10314  001C42  500A               	movf	(___fladd@a+2)^0,w,c
 10315  001C44  5806               	subwfb	(___fladd@b+2)^0,w,c
 10316  001C46  5007               	movf	(___fladd@b+3)^0,w,c
 10317  001C48  0A80               	xorlw	128
 10318  001C4A  6E0C               	movwf	??___fladd^0,c
 10319  001C4C  500B               	movf	(___fladd@a+3)^0,w,c
 10320  001C4E  0A80               	xorlw	128
 10321  001C50  580C               	subwfb	??___fladd^0,w,c
 10322  001C52  B0D8               	btfsc	status,0,c
 10323  001C54  EF2E  F00E         	goto	u7271
 10324  001C58  EF30  F00E         	goto	u7270
 10325  001C5C                     u7271:
 10326  001C5C  EF5B  F00E         	goto	l6787
 10327  001C60                     u7270:
 10328  001C60  5004               	movf	___fladd@b^0,w,c
 10329  001C62  5C08               	subwf	___fladd@a^0,w,c
 10330  001C64  6E0C               	movwf	??___fladd^0,c
 10331  001C66  5005               	movf	(___fladd@b+1)^0,w,c
 10332  001C68  5809               	subwfb	(___fladd@a+1)^0,w,c
 10333  001C6A  6E0D               	movwf	(??___fladd+1)^0,c
 10334  001C6C  5006               	movf	(___fladd@b+2)^0,w,c
 10335  001C6E  580A               	subwfb	(___fladd@a+2)^0,w,c
 10336  001C70  6E0E               	movwf	(??___fladd+2)^0,c
 10337  001C72  5007               	movf	(___fladd@b+3)^0,w,c
 10338  001C74  580B               	subwfb	(___fladd@a+3)^0,w,c
 10339  001C76  6E0F               	movwf	(??___fladd+3)^0,c
 10340  001C78  0EFF               	movlw	255
 10341  001C7A  240C               	addwf	??___fladd^0,w,c
 10342  001C7C  6E04               	movwf	___fladd@b^0,c
 10343  001C7E  0EFF               	movlw	255
 10344  001C80  200D               	addwfc	(??___fladd+1)^0,w,c
 10345  001C82  6E05               	movwf	(___fladd@b+1)^0,c
 10346  001C84  0EFF               	movlw	255
 10347  001C86  200E               	addwfc	(??___fladd+2)^0,w,c
 10348  001C88  6E06               	movwf	(___fladd@b+2)^0,c
 10349  001C8A  0EFF               	movlw	255
 10350  001C8C  200F               	addwfc	(??___fladd+3)^0,w,c
 10351  001C8E  6E07               	movwf	(___fladd@b+3)^0,c
 10352  001C90  0E80               	movlw	128
 10353  001C92  1A10               	xorwf	___fladd@signs^0,f,c
 10354  001C94  6C13               	negf	___fladd@grs^0,c
 10355  001C96  5013               	movf	___fladd@grs^0,w,c
 10356  001C98  A4D8               	btfss	status,2,c
 10357  001C9A  EF51  F00E         	goto	u7281
 10358  001C9E  EF53  F00E         	goto	u7280
 10359  001CA2                     u7281:
 10360  001CA2  EF63  F00E         	goto	l1404
 10361  001CA6                     u7280:
 10362  001CA6  0E01               	movlw	1
 10363  001CA8  2604               	addwf	___fladd@b^0,f,c
 10364  001CAA  0E00               	movlw	0
 10365  001CAC  2205               	addwfc	(___fladd@b+1)^0,f,c
 10366  001CAE  2206               	addwfc	(___fladd@b+2)^0,f,c
 10367  001CB0  2207               	addwfc	(___fladd@b+3)^0,f,c
 10368  001CB2  EF63  F00E         	goto	l1404
 10369  001CB6                     l6787:
 10370  001CB6  5008               	movf	___fladd@a^0,w,c
 10371  001CB8  5E04               	subwf	___fladd@b^0,f,c
 10372  001CBA  5009               	movf	(___fladd@a+1)^0,w,c
 10373  001CBC  5A05               	subwfb	(___fladd@b+1)^0,f,c
 10374  001CBE  500A               	movf	(___fladd@a+2)^0,w,c
 10375  001CC0  5A06               	subwfb	(___fladd@b+2)^0,f,c
 10376  001CC2  500B               	movf	(___fladd@a+3)^0,w,c
 10377  001CC4  5A07               	subwfb	(___fladd@b+3)^0,f,c
 10378  001CC6                     l1404:
 10379  001CC6  5004               	movf	___fladd@b^0,w,c
 10380  001CC8  1005               	iorwf	(___fladd@b+1)^0,w,c
 10381  001CCA  1006               	iorwf	(___fladd@b+2)^0,w,c
 10382  001CCC  1007               	iorwf	(___fladd@b+3)^0,w,c
 10383  001CCE  A4D8               	btfss	status,2,c
 10384  001CD0  EF6C  F00E         	goto	u7291
 10385  001CD4  EF6E  F00E         	goto	u7290
 10386  001CD8                     u7291:
 10387  001CD8  EFA3  F00E         	goto	l6811
 10388  001CDC                     u7290:
 10389  001CDC  5013               	movf	___fladd@grs^0,w,c
 10390  001CDE  A4D8               	btfss	status,2,c
 10391  001CE0  EF74  F00E         	goto	u7301
 10392  001CE4  EF76  F00E         	goto	u7300
 10393  001CE8                     u7301:
 10394  001CE8  EFA3  F00E         	goto	l6811
 10395  001CEC                     u7300:
 10396  001CEC  0E00               	movlw	0
 10397  001CEE  6E04               	movwf	?___fladd^0,c
 10398  001CF0  0E00               	movlw	0
 10399  001CF2  6E05               	movwf	(?___fladd+1)^0,c
 10400  001CF4  0E00               	movlw	0
 10401  001CF6  6E06               	movwf	(?___fladd+2)^0,c
 10402  001CF8  0E00               	movlw	0
 10403  001CFA  6E07               	movwf	(?___fladd+3)^0,c
 10404  001CFC  EF3E  F00F         	goto	l1396
 10405  001D00                     l6795:
 10406  001D00  90D8               	bcf	status,0,c
 10407  001D02  3604               	rlcf	___fladd@b^0,f,c
 10408  001D04  3605               	rlcf	(___fladd@b+1)^0,f,c
 10409  001D06  3606               	rlcf	(___fladd@b+2)^0,f,c
 10410  001D08  3607               	rlcf	(___fladd@b+3)^0,f,c
 10411  001D0A  AE13               	btfss	___fladd@grs^0,7,c
 10412  001D0C  EF8A  F00E         	goto	u7311
 10413  001D10  EF8C  F00E         	goto	u7310
 10414  001D14                     u7311:
 10415  001D14  EF8D  F00E         	goto	l6801
 10416  001D18                     u7310:
 10417  001D18  8004               	bsf	___fladd@b^0,0,c
 10418  001D1A                     l6801:
 10419  001D1A  A013               	btfss	___fladd@grs^0,0,c
 10420  001D1C  EF92  F00E         	goto	u7321
 10421  001D20  EF94  F00E         	goto	u7320
 10422  001D24                     u7321:
 10423  001D24  EF98  F00E         	goto	l6805
 10424  001D28                     u7320:
 10425  001D28  80D8               	bsf	status,0,c
 10426  001D2A  3613               	rlcf	___fladd@grs^0,f,c
 10427  001D2C  EF9A  F00E         	goto	l6807
 10428  001D30                     l6805:
 10429  001D30  90D8               	bcf	status,0,c
 10430  001D32  3613               	rlcf	___fladd@grs^0,f,c
 10431  001D34                     l6807:
 10432  001D34  5012               	movf	___fladd@bexp^0,w,c
 10433  001D36  B4D8               	btfsc	status,2,c
 10434  001D38  EFA0  F00E         	goto	u7331
 10435  001D3C  EFA2  F00E         	goto	u7330
 10436  001D40                     u7331:
 10437  001D40  EFA3  F00E         	goto	l6811
 10438  001D44                     u7330:
 10439  001D44  0612               	decf	___fladd@bexp^0,f,c
 10440  001D46                     l6811:
 10441  001D46  AE06               	btfss	(___fladd@b+2)^0,7,c
 10442  001D48  EFA8  F00E         	goto	u7341
 10443  001D4C  EFAA  F00E         	goto	u7340
 10444  001D50                     u7341:
 10445  001D50  EF80  F00E         	goto	l6795
 10446  001D54                     u7340:
 10447  001D54                     l6813:
 10448  001D54  0E00               	movlw	0
 10449  001D56  6E11               	movwf	___fladd@aexp^0,c
 10450  001D58  AE13               	btfss	___fladd@grs^0,7,c
 10451  001D5A  EFB1  F00E         	goto	u7351
 10452  001D5E  EFB3  F00E         	goto	u7350
 10453  001D62                     u7351:
 10454  001D62  EFCB  F00E         	goto	l1413
 10455  001D66                     u7350:
 10456  001D66  C013  F00C         	movff	___fladd@grs,??___fladd
 10457  001D6A  0E7F               	movlw	127
 10458  001D6C  160C               	andwf	??___fladd^0,f,c
 10459  001D6E  B4D8               	btfsc	status,2,c
 10460  001D70  EFBC  F00E         	goto	u7361
 10461  001D74  EFBE  F00E         	goto	u7360
 10462  001D78                     u7361:
 10463  001D78  EFC2  F00E         	goto	l1414
 10464  001D7C                     u7360:
 10465  001D7C                     l6819:
 10466  001D7C  0E01               	movlw	1
 10467  001D7E  6E11               	movwf	___fladd@aexp^0,c
 10468  001D80  EFCB  F00E         	goto	l1413
 10469  001D84                     l1414:
 10470  001D84  A004               	btfss	___fladd@b^0,0,c
 10471  001D86  EFC7  F00E         	goto	u7371
 10472  001D8A  EFC9  F00E         	goto	u7370
 10473  001D8E                     u7371:
 10474  001D8E  EFCB  F00E         	goto	l1413
 10475  001D92                     u7370:
 10476  001D92  EFBE  F00E         	goto	l6819
 10477  001D96                     l1413:
 10478  001D96  5011               	movf	___fladd@aexp^0,w,c
 10479  001D98  B4D8               	btfsc	status,2,c
 10480  001D9A  EFD1  F00E         	goto	u7381
 10481  001D9E  EFD3  F00E         	goto	u7380
 10482  001DA2                     u7381:
 10483  001DA2  EFFE  F00E         	goto	l6831
 10484  001DA6                     u7380:
 10485  001DA6  0E01               	movlw	1
 10486  001DA8  2604               	addwf	___fladd@b^0,f,c
 10487  001DAA  0E00               	movlw	0
 10488  001DAC  2205               	addwfc	(___fladd@b+1)^0,f,c
 10489  001DAE  2206               	addwfc	(___fladd@b+2)^0,f,c
 10490  001DB0  2207               	addwfc	(___fladd@b+3)^0,f,c
 10491  001DB2  A007               	btfss	(___fladd@b+3)^0,0,c
 10492  001DB4  EFDE  F00E         	goto	u7391
 10493  001DB8  EFE0  F00E         	goto	u7390
 10494  001DBC                     u7391:
 10495  001DBC  EFFE  F00E         	goto	l6831
 10496  001DC0                     u7390:
 10497  001DC0  C004  F00C         	movff	___fladd@b,??___fladd
 10498  001DC4  C005  F00D         	movff	___fladd@b+1,??___fladd+1
 10499  001DC8  C006  F00E         	movff	___fladd@b+2,??___fladd+2
 10500  001DCC  C007  F00F         	movff	___fladd@b+3,??___fladd+3
 10501  001DD0  340F               	rlcf	(??___fladd+3)^0,w,c
 10502  001DD2  320F               	rrcf	(??___fladd+3)^0,f,c
 10503  001DD4  320E               	rrcf	(??___fladd+2)^0,f,c
 10504  001DD6  320D               	rrcf	(??___fladd+1)^0,f,c
 10505  001DD8  320C               	rrcf	??___fladd^0,f,c
 10506  001DDA  C00C  F004         	movff	??___fladd,___fladd@b
 10507  001DDE  C00D  F005         	movff	??___fladd+1,___fladd@b+1
 10508  001DE2  C00E  F006         	movff	??___fladd+2,___fladd@b+2
 10509  001DE6  C00F  F007         	movff	??___fladd+3,___fladd@b+3
 10510  001DEA  2812               	incf	___fladd@bexp^0,w,c
 10511  001DEC  B4D8               	btfsc	status,2,c
 10512  001DEE  EFFB  F00E         	goto	u7401
 10513  001DF2  EFFD  F00E         	goto	u7400
 10514  001DF6                     u7401:
 10515  001DF6  EFFE  F00E         	goto	l6831
 10516  001DFA                     u7400:
 10517  001DFA  2A12               	incf	___fladd@bexp^0,f,c
 10518  001DFC                     l6831:
 10519  001DFC  2812               	incf	___fladd@bexp^0,w,c
 10520  001DFE  B4D8               	btfsc	status,2,c
 10521  001E00  EF04  F00F         	goto	u7411
 10522  001E04  EF06  F00F         	goto	u7410
 10523  001E08                     u7411:
 10524  001E08  EF0E  F00F         	goto	l6835
 10525  001E0C                     u7410:
 10526  001E0C  5012               	movf	___fladd@bexp^0,w,c
 10527  001E0E  A4D8               	btfss	status,2,c
 10528  001E10  EF0C  F00F         	goto	u7421
 10529  001E14  EF0E  F00F         	goto	u7420
 10530  001E18                     u7421:
 10531  001E18  EF20  F00F         	goto	l6839
 10532  001E1C                     u7420:
 10533  001E1C                     l6835:
 10534  001E1C  0E00               	movlw	0
 10535  001E1E  6E04               	movwf	___fladd@b^0,c
 10536  001E20  0E00               	movlw	0
 10537  001E22  6E05               	movwf	(___fladd@b+1)^0,c
 10538  001E24  0E00               	movlw	0
 10539  001E26  6E06               	movwf	(___fladd@b+2)^0,c
 10540  001E28  0E00               	movlw	0
 10541  001E2A  6E07               	movwf	(___fladd@b+3)^0,c
 10542  001E2C  5012               	movf	___fladd@bexp^0,w,c
 10543  001E2E  A4D8               	btfss	status,2,c
 10544  001E30  EF1C  F00F         	goto	u7431
 10545  001E34  EF1E  F00F         	goto	u7430
 10546  001E38                     u7431:
 10547  001E38  EF20  F00F         	goto	l6839
 10548  001E3C                     u7430:
 10549  001E3C  0E00               	movlw	0
 10550  001E3E  6E10               	movwf	___fladd@signs^0,c
 10551  001E40                     l6839:
 10552  001E40  A012               	btfss	___fladd@bexp^0,0,c
 10553  001E42  EF25  F00F         	goto	u7441
 10554  001E46  EF27  F00F         	goto	u7440
 10555  001E4A                     u7441:
 10556  001E4A  EF2A  F00F         	goto	l6843
 10557  001E4E                     u7440:
 10558  001E4E  8E06               	bsf	(___fladd@b+2)^0,7,c
 10559  001E50  EF2B  F00F         	goto	l6845
 10560  001E54                     l6843:
 10561  001E54  9E06               	bcf	(___fladd@b+2)^0,7,c
 10562  001E56                     l6845:
 10563  001E56  90D8               	bcf	status,0,c
 10564  001E58  3012               	rrcf	___fladd@bexp^0,w,c
 10565  001E5A  6E07               	movwf	(___fladd@b+3)^0,c
 10566  001E5C  AE10               	btfss	___fladd@signs^0,7,c
 10567  001E5E  EF33  F00F         	goto	u7451
 10568  001E62  EF35  F00F         	goto	u7450
 10569  001E66                     u7451:
 10570  001E66  EF36  F00F         	goto	l6851
 10571  001E6A                     u7450:
 10572  001E6A  8E07               	bsf	(___fladd@b+3)^0,7,c
 10573  001E6C                     l6851:
 10574  001E6C  C004  F004         	movff	___fladd@b,?___fladd
 10575  001E70  C005  F005         	movff	___fladd@b+1,?___fladd+1
 10576  001E74  C006  F006         	movff	___fladd@b+2,?___fladd+2
 10577  001E78  C007  F007         	movff	___fladd@b+3,?___fladd+3
 10578  001E7C                     l1396:
 10579  001E7C  0012               	return		;funcret
 10580  001E7E                     __end_of___fladd:
 10581                           	opt callstack 0
 10582                           
 10583 ;; *************** function ___flneg *****************
 10584 ;; Defined at:
 10585 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 10586 ;; Parameters:    Size  Location     Type
 10587 ;;  f1              4    3[COMRAM] unsigned char 
 10588 ;; Auto vars:     Size  Location     Type
 10589 ;;		None
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  4    3[COMRAM] unsigned char 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10599 ;;      Params:         4       0       0       0       0       0       0       0       0
 10600 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10601 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10602 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10603 ;;Total ram usage:        4 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; Hardware stack levels required when called:    2
 10606 ;; This function calls:
 10607 ;;		Nothing
 10608 ;; This function is called by:
 10609 ;;		_ftoa_sci
 10610 ;;		_ftoa
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text29
 10615  005376                     __ptext29:
 10616                           	opt callstack 0
 10617  005376                     ___flneg:
 10618                           	opt callstack 26
 10619  005376  5004               	movf	___flneg@f1^0,w,c
 10620  005378  1005               	iorwf	(___flneg@f1+1)^0,w,c
 10621  00537A  1006               	iorwf	(___flneg@f1+2)^0,w,c
 10622  00537C  1007               	iorwf	(___flneg@f1+3)^0,w,c
 10623  00537E  B4D8               	btfsc	status,2,c
 10624  005380  EFC4  F029         	goto	u8241
 10625  005384  EFC6  F029         	goto	u8240
 10626  005388                     u8241:
 10627  005388  EFCE  F029         	goto	l7349
 10628  00538C                     u8240:
 10629  00538C  0E00               	movlw	0
 10630  00538E  1A04               	xorwf	___flneg@f1^0,f,c
 10631  005390  0E00               	movlw	0
 10632  005392  1A05               	xorwf	(___flneg@f1+1)^0,f,c
 10633  005394  0E00               	movlw	0
 10634  005396  1A06               	xorwf	(___flneg@f1+2)^0,f,c
 10635  005398  0E80               	movlw	128
 10636  00539A  1A07               	xorwf	(___flneg@f1+3)^0,f,c
 10637  00539C                     l7349:
 10638  00539C  C004  F004         	movff	___flneg@f1,?___flneg
 10639  0053A0  C005  F005         	movff	___flneg@f1+1,?___flneg+1
 10640  0053A4  C006  F006         	movff	___flneg@f1+2,?___flneg+2
 10641  0053A8  C007  F007         	movff	___flneg@f1+3,?___flneg+3
 10642  0053AC  0012               	return		;funcret
 10643  0053AE                     __end_of___flneg:
 10644                           	opt callstack 0
 10645                           
 10646 ;; *************** function ___fleq *****************
 10647 ;; Defined at:
 10648 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;  ff1             4    3[COMRAM] unsigned char 
 10651 ;;  ff2             4    7[COMRAM] unsigned char 
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;		None
 10654 ;; Return value:  Size  Location     Type
 10655 ;;		None               void
 10656 ;; Registers used:
 10657 ;;		wreg, status,2, status,0
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10663 ;;      Params:         8       0       0       0       0       0       0       0       0
 10664 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10665 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10666 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10667 ;;Total ram usage:       12 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; Hardware stack levels required when called:    2
 10670 ;; This function calls:
 10671 ;;		Nothing
 10672 ;; This function is called by:
 10673 ;;		_ftoa_sci
 10674 ;;		_ftoa
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text30
 10679  004A74                     __ptext30:
 10680                           	opt callstack 0
 10681  004A74                     ___fleq:
 10682                           	opt callstack 26
 10683  004A74  0E00               	movlw	0
 10684  004A76  1404               	andwf	___fleq@ff1^0,w,c
 10685  004A78  6E0C               	movwf	??___fleq^0,c
 10686  004A7A  0E00               	movlw	0
 10687  004A7C  1405               	andwf	(___fleq@ff1+1)^0,w,c
 10688  004A7E  6E0D               	movwf	(??___fleq+1)^0,c
 10689  004A80  0E80               	movlw	128
 10690  004A82  1406               	andwf	(___fleq@ff1+2)^0,w,c
 10691  004A84  6E0E               	movwf	(??___fleq+2)^0,c
 10692  004A86  0E7F               	movlw	127
 10693  004A88  1407               	andwf	(___fleq@ff1+3)^0,w,c
 10694  004A8A  6E0F               	movwf	(??___fleq+3)^0,c
 10695  004A8C  500C               	movf	??___fleq^0,w,c
 10696  004A8E  100D               	iorwf	(??___fleq+1)^0,w,c
 10697  004A90  100E               	iorwf	(??___fleq+2)^0,w,c
 10698  004A92  100F               	iorwf	(??___fleq+3)^0,w,c
 10699  004A94  A4D8               	btfss	status,2,c
 10700  004A96  EF4F  F025         	goto	u8211
 10701  004A9A  EF51  F025         	goto	u8210
 10702  004A9E                     u8211:
 10703  004A9E  EF59  F025         	goto	l7333
 10704  004AA2                     u8210:
 10705  004AA2  0E00               	movlw	0
 10706  004AA4  6E04               	movwf	___fleq@ff1^0,c
 10707  004AA6  0E00               	movlw	0
 10708  004AA8  6E05               	movwf	(___fleq@ff1+1)^0,c
 10709  004AAA  0E00               	movlw	0
 10710  004AAC  6E06               	movwf	(___fleq@ff1+2)^0,c
 10711  004AAE  0E00               	movlw	0
 10712  004AB0  6E07               	movwf	(___fleq@ff1+3)^0,c
 10713  004AB2                     l7333:
 10714  004AB2  0E00               	movlw	0
 10715  004AB4  1408               	andwf	___fleq@ff2^0,w,c
 10716  004AB6  6E0C               	movwf	??___fleq^0,c
 10717  004AB8  0E00               	movlw	0
 10718  004ABA  1409               	andwf	(___fleq@ff2+1)^0,w,c
 10719  004ABC  6E0D               	movwf	(??___fleq+1)^0,c
 10720  004ABE  0E80               	movlw	128
 10721  004AC0  140A               	andwf	(___fleq@ff2+2)^0,w,c
 10722  004AC2  6E0E               	movwf	(??___fleq+2)^0,c
 10723  004AC4  0E7F               	movlw	127
 10724  004AC6  140B               	andwf	(___fleq@ff2+3)^0,w,c
 10725  004AC8  6E0F               	movwf	(??___fleq+3)^0,c
 10726  004ACA  500C               	movf	??___fleq^0,w,c
 10727  004ACC  100D               	iorwf	(??___fleq+1)^0,w,c
 10728  004ACE  100E               	iorwf	(??___fleq+2)^0,w,c
 10729  004AD0  100F               	iorwf	(??___fleq+3)^0,w,c
 10730  004AD2  A4D8               	btfss	status,2,c
 10731  004AD4  EF6E  F025         	goto	u8221
 10732  004AD8  EF70  F025         	goto	u8220
 10733  004ADC                     u8221:
 10734  004ADC  EF78  F025         	goto	l7337
 10735  004AE0                     u8220:
 10736  004AE0  0E00               	movlw	0
 10737  004AE2  6E08               	movwf	___fleq@ff2^0,c
 10738  004AE4  0E00               	movlw	0
 10739  004AE6  6E09               	movwf	(___fleq@ff2+1)^0,c
 10740  004AE8  0E00               	movlw	0
 10741  004AEA  6E0A               	movwf	(___fleq@ff2+2)^0,c
 10742  004AEC  0E00               	movlw	0
 10743  004AEE  6E0B               	movwf	(___fleq@ff2+3)^0,c
 10744  004AF0                     l7337:
 10745  004AF0  5008               	movf	___fleq@ff2^0,w,c
 10746  004AF2  1804               	xorwf	___fleq@ff1^0,w,c
 10747  004AF4  E10F               	bnz	u8230
 10748  004AF6  5009               	movf	(___fleq@ff2+1)^0,w,c
 10749  004AF8  1805               	xorwf	(___fleq@ff1+1)^0,w,c
 10750  004AFA  E10C               	bnz	u8230
 10751  004AFC  500A               	movf	(___fleq@ff2+2)^0,w,c
 10752  004AFE  1806               	xorwf	(___fleq@ff1+2)^0,w,c
 10753  004B00  E109               	bnz	u8230
 10754  004B02  500B               	movf	(___fleq@ff2+3)^0,w,c
 10755  004B04  1807               	xorwf	(___fleq@ff1+3)^0,w,c
 10756  004B06  B4D8               	btfsc	status,2,c
 10757  004B08  EF88  F025         	goto	u8231
 10758  004B0C  EF8A  F025         	goto	u8230
 10759  004B10                     u8231:
 10760  004B10  EF8D  F025         	goto	l7341
 10761  004B14                     u8230:
 10762  004B14  90D8               	bcf	status,0,c
 10763  004B16  EF8E  F025         	goto	l1118
 10764  004B1A                     l7341:
 10765  004B1A  80D8               	bsf	status,0,c
 10766  004B1C                     l1118:
 10767  004B1C  0012               	return		;funcret
 10768  004B1E                     __end_of___fleq:
 10769                           	opt callstack 0
 10770                           
 10771 ;; *************** function _cleanS *****************
 10772 ;; Defined at:
 10773 ;;		line 115 in file "src/print/format.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;  str             2    7[COMRAM] PTR unsigned char 
 10776 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), 
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;  i               2   12[COMRAM] int 
 10779 ;;  len             2   10[COMRAM] int 
 10780 ;; Return value:  Size  Location     Type
 10781 ;;                  1    wreg      void 
 10782 ;; Registers used:
 10783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10784 ;; Tracked objects:
 10785 ;;		On entry : 0/0
 10786 ;;		On exit  : 0/0
 10787 ;;		Unchanged: 0/0
 10788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10789 ;;      Params:         2       0       0       0       0       0       0       0       0
 10790 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10791 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10792 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10793 ;;Total ram usage:        7 bytes
 10794 ;; Hardware stack levels used:    1
 10795 ;; Hardware stack levels required when called:    3
 10796 ;; This function calls:
 10797 ;;		_strlen
 10798 ;; This function is called by:
 10799 ;;		_my_vprintf
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text31
 10804  005016                     __ptext31:
 10805                           	opt callstack 0
 10806  005016                     _cleanS:
 10807                           	opt callstack 26
 10808  005016                     
 10809                           ;src/print/format.c: 116:     int i,len;;src/print/format.c: 117:     len = strlen(str);
 10810  005016  C008  F004         	movff	cleanS@str,strlen@s
 10811  00501A  C009  F005         	movff	cleanS@str+1,strlen@s+1
 10812  00501E  ECD7  F029         	call	_strlen	;wreg free
 10813  005022  C004  F00B         	movff	?_strlen,cleanS@len
 10814  005026  C005  F00C         	movff	?_strlen+1,cleanS@len+1
 10815  00502A                     
 10816                           ;src/print/format.c: 118:     for(i=0;i<len;i++)
 10817  00502A  0E00               	movlw	0
 10818  00502C  6E0E               	movwf	(cleanS@i+1)^0,c
 10819  00502E  0E00               	movlw	0
 10820  005030  6E0D               	movwf	cleanS@i^0,c
 10821  005032  EF25  F028         	goto	l7497
 10822  005036                     l7493:
 10823                           
 10824                           ;src/print/format.c: 119:         str[i] = 0;
 10825  005036  500D               	movf	cleanS@i^0,w,c
 10826  005038  2408               	addwf	cleanS@str^0,w,c
 10827  00503A  6ED9               	movwf	fsr2l,c
 10828  00503C  500E               	movf	(cleanS@i+1)^0,w,c
 10829  00503E  2009               	addwfc	(cleanS@str+1)^0,w,c
 10830  005040  6EDA               	movwf	fsr2h,c
 10831  005042  0E00               	movlw	0
 10832  005044  6EDF               	movwf	indf2,c
 10833  005046  4A0D               	infsnz	cleanS@i^0,f,c
 10834  005048  2A0E               	incf	(cleanS@i+1)^0,f,c
 10835  00504A                     l7497:
 10836  00504A  500B               	movf	cleanS@len^0,w,c
 10837  00504C  5C0D               	subwf	cleanS@i^0,w,c
 10838  00504E  500E               	movf	(cleanS@i+1)^0,w,c
 10839  005050  0A80               	xorlw	128
 10840  005052  6E0A               	movwf	??_cleanS^0,c
 10841  005054  500C               	movf	(cleanS@len+1)^0,w,c
 10842  005056  0A80               	xorlw	128
 10843  005058  580A               	subwfb	??_cleanS^0,w,c
 10844  00505A  A0D8               	btfss	status,0,c
 10845  00505C  EF32  F028         	goto	u8461
 10846  005060  EF34  F028         	goto	u8460
 10847  005064                     u8461:
 10848  005064  EF1B  F028         	goto	l7493
 10849  005068                     u8460:
 10850  005068  0012               	return		;funcret
 10851  00506A                     __end_of_cleanS:
 10852                           	opt callstack 0
 10853                           
 10854 ;; *************** function _addSig *****************
 10855 ;; Defined at:
 10856 ;;		line 361 in file "src/print/format.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  numS            2   17[COMRAM] PTR unsigned char 
 10859 ;;		 -> my_vprintf@buffer(64), 
 10860 ;;  num             4   19[COMRAM] PTR unsigned char 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  k               2   27[COMRAM] int 
 10863 ;;  len             2   25[COMRAM] int 
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      void 
 10866 ;; Registers used:
 10867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10873 ;;      Params:         6       0       0       0       0       0       0       0       0
 10874 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10875 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10876 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10877 ;;Total ram usage:       12 bytes
 10878 ;; Hardware stack levels used:    1
 10879 ;; Hardware stack levels required when called:    3
 10880 ;; This function calls:
 10881 ;;		___flge
 10882 ;;		_strlen
 10883 ;; This function is called by:
 10884 ;;		_my_vprintf
 10885 ;; This function uses a non-reentrant model
 10886 ;;
 10887                           
 10888                           	psect	text32
 10889  003FE0                     __ptext32:
 10890                           	opt callstack 0
 10891  003FE0                     _addSig:
 10892                           	opt callstack 26
 10893  003FE0                     
 10894                           ;src/print/format.c: 362:     int k;;src/print/format.c: 363:     int len = strlen(numS)
      +                          ;
 10895  003FE0  C012  F004         	movff	addSig@numS,strlen@s
 10896  003FE4  C013  F005         	movff	addSig@numS+1,strlen@s+1
 10897  003FE8  ECD7  F029         	call	_strlen	;wreg free
 10898  003FEC  C004  F01A         	movff	?_strlen,addSig@len
 10899  003FF0  C005  F01B         	movff	?_strlen+1,addSig@len+1
 10900  003FF4                     
 10901                           ;src/print/format.c: 365:     if(sig==1 || num < 0.0) {
 10902  003FF4  0100               	movlb	0	; () banked
 10903  003FF6  05D1               	decf	_sig& (0+255),w,b
 10904  003FF8  B4D8               	btfsc	status,2,c
 10905  003FFA  EF01  F020         	goto	u9111
 10906  003FFE  EF03  F020         	goto	u9110
 10907  004002                     u9111:
 10908  004002  EF0A  F020         	goto	l550
 10909  004006                     u9110:
 10910  004006                     
 10911                           ; BSR set to: 0
 10912  004006  BE17               	btfsc	(addSig@num+3)^0,7,c
 10913  004008  EF0A  F020         	goto	u9120
 10914  00400C  EF08  F020         	goto	u9121
 10915  004010                     u9121:
 10916  004010  EF5F  F020         	goto	l7827
 10917  004014                     u9120:
 10918  004014                     l550:
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;src/print/format.c: 366:         for(k = len;k > 0;k--)
 10922  004014  C01A  F01C         	movff	addSig@len,addSig@k
 10923  004018  C01B  F01D         	movff	addSig@len+1,addSig@k+1
 10924  00401C                     l7811:
 10925  00401C  BE1D               	btfsc	(addSig@k+1)^0,7,c
 10926  00401E  EF1B  F020         	goto	u9130
 10927  004022  501D               	movf	(addSig@k+1)^0,w,c
 10928  004024  E106               	bnz	u9131
 10929  004026  041C               	decf	addSig@k^0,w,c
 10930  004028  B0D8               	btfsc	status,0,c
 10931  00402A  EF19  F020         	goto	u9131
 10932  00402E  EF1B  F020         	goto	u9130
 10933  004032                     u9131:
 10934  004032  EF1D  F020         	goto	l7815
 10935  004036                     u9130:
 10936  004036  EF36  F020         	goto	l7821
 10937  00403A                     l7815:
 10938                           
 10939                           ;src/print/format.c: 367:             numS[k]=numS[k-1];
 10940  00403A  501C               	movf	addSig@k^0,w,c
 10941  00403C  2412               	addwf	addSig@numS^0,w,c
 10942  00403E  6E18               	movwf	??_addSig^0,c
 10943  004040  501D               	movf	(addSig@k+1)^0,w,c
 10944  004042  2013               	addwfc	(addSig@numS+1)^0,w,c
 10945  004044  6E19               	movwf	(??_addSig+1)^0,c
 10946  004046  0EFF               	movlw	255
 10947  004048  2418               	addwf	??_addSig^0,w,c
 10948  00404A  6ED9               	movwf	fsr2l,c
 10949  00404C  0EFF               	movlw	255
 10950  00404E  2019               	addwfc	(??_addSig+1)^0,w,c
 10951  004050  6EDA               	movwf	fsr2h,c
 10952  004052  501C               	movf	addSig@k^0,w,c
 10953  004054  2412               	addwf	addSig@numS^0,w,c
 10954  004056  6EE1               	movwf	fsr1l,c
 10955  004058  501D               	movf	(addSig@k+1)^0,w,c
 10956  00405A  2013               	addwfc	(addSig@numS+1)^0,w,c
 10957  00405C  6EE2               	movwf	fsr1h,c
 10958  00405E  CFDF FFE7          	movff	indf2,indf1
 10959  004062  061C               	decf	addSig@k^0,f,c
 10960  004064  A0D8               	btfss	status,0,c
 10961  004066  061D               	decf	(addSig@k+1)^0,f,c
 10962  004068  EF0E  F020         	goto	l7811
 10963  00406C                     l7821:
 10964                           
 10965                           ;src/print/format.c: 368:         if (num > 0)
 10966  00406C  0E00               	movlw	0
 10967  00406E  6E04               	movwf	___flge@ff1^0,c
 10968  004070  0E00               	movlw	0
 10969  004072  6E05               	movwf	(___flge@ff1+1)^0,c
 10970  004074  0E00               	movlw	0
 10971  004076  6E06               	movwf	(___flge@ff1+2)^0,c
 10972  004078  0E00               	movlw	0
 10973  00407A  6E07               	movwf	(___flge@ff1+3)^0,c
 10974  00407C  C014  F008         	movff	addSig@num,___flge@ff2
 10975  004080  C015  F009         	movff	addSig@num+1,___flge@ff2+1
 10976  004084  C016  F00A         	movff	addSig@num+2,___flge@ff2+2
 10977  004088  C017  F00B         	movff	addSig@num+3,___flge@ff2+3
 10978  00408C  ECBE  F022         	call	___flge	;wreg free
 10979  004090  B0D8               	btfsc	status,0,c
 10980  004092  EF4D  F020         	goto	u9141
 10981  004096  EF4F  F020         	goto	u9140
 10982  00409A                     u9141:
 10983  00409A  EF57  F020         	goto	l7825
 10984  00409E                     u9140:
 10985  00409E                     
 10986                           ;src/print/format.c: 369:             numS[0]= '+';
 10987  00409E  C012  FFD9         	movff	addSig@numS,fsr2l
 10988  0040A2  C013  FFDA         	movff	addSig@numS+1,fsr2h
 10989  0040A6  0E2B               	movlw	43
 10990  0040A8  6EDF               	movwf	indf2,c
 10991  0040AA  EF99  F020         	goto	l559
 10992  0040AE                     l7825:
 10993                           
 10994                           ;src/print/format.c: 371:             numS[0]= '-';
 10995  0040AE  C012  FFD9         	movff	addSig@numS,fsr2l
 10996  0040B2  C013  FFDA         	movff	addSig@numS+1,fsr2h
 10997  0040B6  0E2D               	movlw	45
 10998  0040B8  6EDF               	movwf	indf2,c
 10999  0040BA  EF99  F020         	goto	l559
 11000  0040BE                     l7827:
 11001                           
 11002                           ; BSR set to: 0
 11003  0040BE  05CE               	decf	_space& (0+255),w,b
 11004  0040C0  A4D8               	btfss	status,2,c
 11005  0040C2  EF65  F020         	goto	u9151
 11006  0040C6  EF67  F020         	goto	u9150
 11007  0040CA                     u9151:
 11008  0040CA  EF99  F020         	goto	l559
 11009  0040CE                     u9150:
 11010  0040CE                     
 11011                           ; BSR set to: 0
 11012                           ;src/print/format.c: 374:         for(k = len;k > 0;k--)
 11013  0040CE  C01A  F01C         	movff	addSig@len,addSig@k
 11014  0040D2  C01B  F01D         	movff	addSig@len+1,addSig@k+1
 11015  0040D6                     l7831:
 11016  0040D6  BE1D               	btfsc	(addSig@k+1)^0,7,c
 11017  0040D8  EF78  F020         	goto	u9160
 11018  0040DC  501D               	movf	(addSig@k+1)^0,w,c
 11019  0040DE  E106               	bnz	u9161
 11020  0040E0  041C               	decf	addSig@k^0,w,c
 11021  0040E2  B0D8               	btfsc	status,0,c
 11022  0040E4  EF76  F020         	goto	u9161
 11023  0040E8  EF78  F020         	goto	u9160
 11024  0040EC                     u9161:
 11025  0040EC  EF7A  F020         	goto	l7835
 11026  0040F0                     u9160:
 11027  0040F0  EF93  F020         	goto	l7841
 11028  0040F4                     l7835:
 11029                           
 11030                           ;src/print/format.c: 375:             numS[k]=numS[k-1];
 11031  0040F4  501C               	movf	addSig@k^0,w,c
 11032  0040F6  2412               	addwf	addSig@numS^0,w,c
 11033  0040F8  6E18               	movwf	??_addSig^0,c
 11034  0040FA  501D               	movf	(addSig@k+1)^0,w,c
 11035  0040FC  2013               	addwfc	(addSig@numS+1)^0,w,c
 11036  0040FE  6E19               	movwf	(??_addSig+1)^0,c
 11037  004100  0EFF               	movlw	255
 11038  004102  2418               	addwf	??_addSig^0,w,c
 11039  004104  6ED9               	movwf	fsr2l,c
 11040  004106  0EFF               	movlw	255
 11041  004108  2019               	addwfc	(??_addSig+1)^0,w,c
 11042  00410A  6EDA               	movwf	fsr2h,c
 11043  00410C  501C               	movf	addSig@k^0,w,c
 11044  00410E  2412               	addwf	addSig@numS^0,w,c
 11045  004110  6EE1               	movwf	fsr1l,c
 11046  004112  501D               	movf	(addSig@k+1)^0,w,c
 11047  004114  2013               	addwfc	(addSig@numS+1)^0,w,c
 11048  004116  6EE2               	movwf	fsr1h,c
 11049  004118  CFDF FFE7          	movff	indf2,indf1
 11050  00411C  061C               	decf	addSig@k^0,f,c
 11051  00411E  A0D8               	btfss	status,0,c
 11052  004120  061D               	decf	(addSig@k+1)^0,f,c
 11053  004122  EF6B  F020         	goto	l7831
 11054  004126                     l7841:
 11055                           
 11056                           ;src/print/format.c: 376:         numS[0]= ' ';
 11057  004126  C012  FFD9         	movff	addSig@numS,fsr2l
 11058  00412A  C013  FFDA         	movff	addSig@numS+1,fsr2h
 11059  00412E  0E20               	movlw	32
 11060  004130  6EDF               	movwf	indf2,c
 11061  004132                     l559:
 11062  004132  0012               	return		;funcret
 11063  004134                     __end_of_addSig:
 11064                           	opt callstack 0
 11065                           
 11066 ;; *************** function ___flge *****************
 11067 ;; Defined at:
 11068 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  ff1             4    3[COMRAM] void 
 11071 ;;  ff2             4    7[COMRAM] void 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;		None
 11074 ;; Return value:  Size  Location     Type
 11075 ;;		None               void
 11076 ;; Registers used:
 11077 ;;		wreg, status,2, status,0
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11083 ;;      Params:         8       0       0       0       0       0       0       0       0
 11084 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11085 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11086 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11087 ;;Total ram usage:       12 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; Hardware stack levels required when called:    2
 11090 ;; This function calls:
 11091 ;;		Nothing
 11092 ;; This function is called by:
 11093 ;;		_addSig
 11094 ;;		_normalize
 11095 ;; This function uses a non-reentrant model
 11096 ;;
 11097                           
 11098                           	psect	text33
 11099  00457C                     __ptext33:
 11100                           	opt callstack 0
 11101  00457C                     ___flge:
 11102                           	opt callstack 25
 11103  00457C  0E00               	movlw	0
 11104  00457E  1404               	andwf	___flge@ff1^0,w,c
 11105  004580  6E0C               	movwf	??___flge^0,c
 11106  004582  0E00               	movlw	0
 11107  004584  1405               	andwf	(___flge@ff1+1)^0,w,c
 11108  004586  6E0D               	movwf	(??___flge+1)^0,c
 11109  004588  0E80               	movlw	128
 11110  00458A  1406               	andwf	(___flge@ff1+2)^0,w,c
 11111  00458C  6E0E               	movwf	(??___flge+2)^0,c
 11112  00458E  0E7F               	movlw	127
 11113  004590  1407               	andwf	(___flge@ff1+3)^0,w,c
 11114  004592  6E0F               	movwf	(??___flge+3)^0,c
 11115  004594  500C               	movf	??___flge^0,w,c
 11116  004596  100D               	iorwf	(??___flge+1)^0,w,c
 11117  004598  100E               	iorwf	(??___flge+2)^0,w,c
 11118  00459A  100F               	iorwf	(??___flge+3)^0,w,c
 11119  00459C  A4D8               	btfss	status,2,c
 11120  00459E  EFD3  F022         	goto	u7881
 11121  0045A2  EFD5  F022         	goto	u7880
 11122  0045A6                     u7881:
 11123  0045A6  EFDD  F022         	goto	l7127
 11124  0045AA                     u7880:
 11125  0045AA  0E00               	movlw	0
 11126  0045AC  6E04               	movwf	___flge@ff1^0,c
 11127  0045AE  0E00               	movlw	0
 11128  0045B0  6E05               	movwf	(___flge@ff1+1)^0,c
 11129  0045B2  0E00               	movlw	0
 11130  0045B4  6E06               	movwf	(___flge@ff1+2)^0,c
 11131  0045B6  0E00               	movlw	0
 11132  0045B8  6E07               	movwf	(___flge@ff1+3)^0,c
 11133  0045BA                     l7127:
 11134  0045BA  0E00               	movlw	0
 11135  0045BC  1408               	andwf	___flge@ff2^0,w,c
 11136  0045BE  6E0C               	movwf	??___flge^0,c
 11137  0045C0  0E00               	movlw	0
 11138  0045C2  1409               	andwf	(___flge@ff2+1)^0,w,c
 11139  0045C4  6E0D               	movwf	(??___flge+1)^0,c
 11140  0045C6  0E80               	movlw	128
 11141  0045C8  140A               	andwf	(___flge@ff2+2)^0,w,c
 11142  0045CA  6E0E               	movwf	(??___flge+2)^0,c
 11143  0045CC  0E7F               	movlw	127
 11144  0045CE  140B               	andwf	(___flge@ff2+3)^0,w,c
 11145  0045D0  6E0F               	movwf	(??___flge+3)^0,c
 11146  0045D2  500C               	movf	??___flge^0,w,c
 11147  0045D4  100D               	iorwf	(??___flge+1)^0,w,c
 11148  0045D6  100E               	iorwf	(??___flge+2)^0,w,c
 11149  0045D8  100F               	iorwf	(??___flge+3)^0,w,c
 11150  0045DA  A4D8               	btfss	status,2,c
 11151  0045DC  EFF2  F022         	goto	u7891
 11152  0045E0  EFF4  F022         	goto	u7890
 11153  0045E4                     u7891:
 11154  0045E4  EFFC  F022         	goto	l7131
 11155  0045E8                     u7890:
 11156  0045E8  0E00               	movlw	0
 11157  0045EA  6E08               	movwf	___flge@ff2^0,c
 11158  0045EC  0E00               	movlw	0
 11159  0045EE  6E09               	movwf	(___flge@ff2+1)^0,c
 11160  0045F0  0E00               	movlw	0
 11161  0045F2  6E0A               	movwf	(___flge@ff2+2)^0,c
 11162  0045F4  0E00               	movlw	0
 11163  0045F6  6E0B               	movwf	(___flge@ff2+3)^0,c
 11164  0045F8                     l7131:
 11165  0045F8  AE07               	btfss	(___flge@ff1+3)^0,7,c
 11166  0045FA  EF01  F023         	goto	u7901
 11167  0045FE  EF03  F023         	goto	u7900
 11168  004602                     u7901:
 11169  004602  EF0C  F023         	goto	l7135
 11170  004606                     u7900:
 11171  004606  6C04               	negf	___flge@ff1^0,c
 11172  004608  1E05               	comf	(___flge@ff1+1)^0,f,c
 11173  00460A  B0D8               	btfsc	status,0,c
 11174  00460C  2A05               	incf	(___flge@ff1+1)^0,f,c
 11175  00460E  1E06               	comf	(___flge@ff1+2)^0,f,c
 11176  004610  B0D8               	btfsc	status,0,c
 11177  004612  2A06               	incf	(___flge@ff1+2)^0,f,c
 11178  004614  0E80               	movlw	128
 11179  004616  5607               	subfwb	(___flge@ff1+3)^0,f,c
 11180  004618                     l7135:
 11181  004618  AE0B               	btfss	(___flge@ff2+3)^0,7,c
 11182  00461A  EF11  F023         	goto	u7911
 11183  00461E  EF13  F023         	goto	u7910
 11184  004622                     u7911:
 11185  004622  EF1C  F023         	goto	l1124
 11186  004626                     u7910:
 11187  004626  6C08               	negf	___flge@ff2^0,c
 11188  004628  1E09               	comf	(___flge@ff2+1)^0,f,c
 11189  00462A  B0D8               	btfsc	status,0,c
 11190  00462C  2A09               	incf	(___flge@ff2+1)^0,f,c
 11191  00462E  1E0A               	comf	(___flge@ff2+2)^0,f,c
 11192  004630  B0D8               	btfsc	status,0,c
 11193  004632  2A0A               	incf	(___flge@ff2+2)^0,f,c
 11194  004634  0E80               	movlw	128
 11195  004636  560B               	subfwb	(___flge@ff2+3)^0,f,c
 11196  004638                     l1124:
 11197  004638  0E00               	movlw	0
 11198  00463A  1A04               	xorwf	___flge@ff1^0,f,c
 11199  00463C  0E00               	movlw	0
 11200  00463E  1A05               	xorwf	(___flge@ff1+1)^0,f,c
 11201  004640  0E00               	movlw	0
 11202  004642  1A06               	xorwf	(___flge@ff1+2)^0,f,c
 11203  004644  0E80               	movlw	128
 11204  004646  1A07               	xorwf	(___flge@ff1+3)^0,f,c
 11205  004648  0E00               	movlw	0
 11206  00464A  1A08               	xorwf	___flge@ff2^0,f,c
 11207  00464C  0E00               	movlw	0
 11208  00464E  1A09               	xorwf	(___flge@ff2+1)^0,f,c
 11209  004650  0E00               	movlw	0
 11210  004652  1A0A               	xorwf	(___flge@ff2+2)^0,f,c
 11211  004654  0E80               	movlw	128
 11212  004656  1A0B               	xorwf	(___flge@ff2+3)^0,f,c
 11213  004658  5008               	movf	___flge@ff2^0,w,c
 11214  00465A  5C04               	subwf	___flge@ff1^0,w,c
 11215  00465C  5009               	movf	(___flge@ff2+1)^0,w,c
 11216  00465E  5805               	subwfb	(___flge@ff1+1)^0,w,c
 11217  004660  500A               	movf	(___flge@ff2+2)^0,w,c
 11218  004662  5806               	subwfb	(___flge@ff1+2)^0,w,c
 11219  004664  500B               	movf	(___flge@ff2+3)^0,w,c
 11220  004666  5807               	subwfb	(___flge@ff1+3)^0,w,c
 11221  004668  B0D8               	btfsc	status,0,c
 11222  00466A  EF39  F023         	goto	u7921
 11223  00466E  EF3B  F023         	goto	u7920
 11224  004672                     u7921:
 11225  004672  EF3E  F023         	goto	l7141
 11226  004676                     u7920:
 11227  004676  90D8               	bcf	status,0,c
 11228  004678  EF3F  F023         	goto	l1129
 11229  00467C                     l7141:
 11230  00467C  80D8               	bsf	status,0,c
 11231  00467E                     l1129:
 11232  00467E  0012               	return		;funcret
 11233  004680                     __end_of___flge:
 11234                           	opt callstack 0
 11235                           
 11236 ;; *************** function _addOx *****************
 11237 ;; Defined at:
 11238 ;;		line 383 in file "src/print/format.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;  hoS             2    7[COMRAM] PTR unsigned char 
 11241 ;;		 -> my_vprintf@buffer(64), 
 11242 ;;  num             2    9[COMRAM] int 
 11243 ;;  type            1   11[COMRAM] unsigned char 
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;  k               2   16[COMRAM] int 
 11246 ;;  len             2   14[COMRAM] int 
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  1    wreg      void 
 11249 ;; Registers used:
 11250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11256 ;;      Params:         5       0       0       0       0       0       0       0       0
 11257 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11258 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11259 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11260 ;;Total ram usage:       11 bytes
 11261 ;; Hardware stack levels used:    1
 11262 ;; Hardware stack levels required when called:    3
 11263 ;; This function calls:
 11264 ;;		_strlen
 11265 ;; This function is called by:
 11266 ;;		_my_vprintf
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text34
 11271  003E68                     __ptext34:
 11272                           	opt callstack 0
 11273  003E68                     _addOx:
 11274                           	opt callstack 26
 11275  003E68                     
 11276                           ;src/print/format.c: 384:     int k;;src/print/format.c: 385:     int len = strlen(hoS);
 11277  003E68  C008  F004         	movff	addOx@hoS,strlen@s
 11278  003E6C  C009  F005         	movff	addOx@hoS+1,strlen@s+1
 11279  003E70  ECD7  F029         	call	_strlen	;wreg free
 11280  003E74  C004  F00F         	movff	?_strlen,addOx@len
 11281  003E78  C005  F010         	movff	?_strlen+1,addOx@len+1
 11282  003E7C                     
 11283                           ;src/print/format.c: 387:     if(numeral == 1 && num != 0 && type=='x') {
 11284  003E7C  043B               	decf	_numeral^0,w,c
 11285  003E7E  A4D8               	btfss	status,2,c
 11286  003E80  EF44  F01F         	goto	u9171
 11287  003E84  EF46  F01F         	goto	u9170
 11288  003E88                     u9171:
 11289  003E88  EFA3  F01F         	goto	l7865
 11290  003E8C                     u9170:
 11291  003E8C  500A               	movf	addOx@num^0,w,c
 11292  003E8E  100B               	iorwf	(addOx@num+1)^0,w,c
 11293  003E90  B4D8               	btfsc	status,2,c
 11294  003E92  EF4D  F01F         	goto	u9181
 11295  003E96  EF4F  F01F         	goto	u9180
 11296  003E9A                     u9181:
 11297  003E9A  EFA3  F01F         	goto	l7865
 11298  003E9E                     u9180:
 11299  003E9E  0E78               	movlw	120
 11300  003EA0  180C               	xorwf	addOx@type^0,w,c
 11301  003EA2  A4D8               	btfss	status,2,c
 11302  003EA4  EF56  F01F         	goto	u9191
 11303  003EA8  EF58  F01F         	goto	u9190
 11304  003EAC                     u9191:
 11305  003EAC  EFA3  F01F         	goto	l7865
 11306  003EB0                     u9190:
 11307  003EB0                     
 11308                           ;src/print/format.c: 388:         for(k = len+1;k > 1;k--)
 11309  003EB0  0E01               	movlw	1
 11310  003EB2  240F               	addwf	addOx@len^0,w,c
 11311  003EB4  6E11               	movwf	addOx@k^0,c
 11312  003EB6  0E00               	movlw	0
 11313  003EB8  2010               	addwfc	(addOx@len+1)^0,w,c
 11314  003EBA  6E12               	movwf	(addOx@k+1)^0,c
 11315  003EBC  BE12               	btfsc	(addOx@k+1)^0,7,c
 11316  003EBE  EF6C  F01F         	goto	u9200
 11317  003EC2  5012               	movf	(addOx@k+1)^0,w,c
 11318  003EC4  E107               	bnz	u9201
 11319  003EC6  0E02               	movlw	2
 11320  003EC8  5C11               	subwf	addOx@k^0,w,c
 11321  003ECA  B0D8               	btfsc	status,0,c
 11322  003ECC  EF6A  F01F         	goto	u9201
 11323  003ED0  EF6C  F01F         	goto	u9200
 11324  003ED4                     u9201:
 11325  003ED4  EF6E  F01F         	goto	l7855
 11326  003ED8                     u9200:
 11327  003ED8  EF93  F01F         	goto	l7861
 11328  003EDC                     l7855:
 11329                           
 11330                           ;src/print/format.c: 389:             hoS[k]=hoS[k-2];
 11331  003EDC  5011               	movf	addOx@k^0,w,c
 11332  003EDE  2408               	addwf	addOx@hoS^0,w,c
 11333  003EE0  6E0D               	movwf	??_addOx^0,c
 11334  003EE2  5012               	movf	(addOx@k+1)^0,w,c
 11335  003EE4  2009               	addwfc	(addOx@hoS+1)^0,w,c
 11336  003EE6  6E0E               	movwf	(??_addOx+1)^0,c
 11337  003EE8  0EFE               	movlw	254
 11338  003EEA  240D               	addwf	??_addOx^0,w,c
 11339  003EEC  6ED9               	movwf	fsr2l,c
 11340  003EEE  0EFF               	movlw	255
 11341  003EF0  200E               	addwfc	(??_addOx+1)^0,w,c
 11342  003EF2  6EDA               	movwf	fsr2h,c
 11343  003EF4  5011               	movf	addOx@k^0,w,c
 11344  003EF6  2408               	addwf	addOx@hoS^0,w,c
 11345  003EF8  6EE1               	movwf	fsr1l,c
 11346  003EFA  5012               	movf	(addOx@k+1)^0,w,c
 11347  003EFC  2009               	addwfc	(addOx@hoS+1)^0,w,c
 11348  003EFE  6EE2               	movwf	fsr1h,c
 11349  003F00  CFDF FFE7          	movff	indf2,indf1
 11350  003F04  0611               	decf	addOx@k^0,f,c
 11351  003F06  A0D8               	btfss	status,0,c
 11352  003F08  0612               	decf	(addOx@k+1)^0,f,c
 11353  003F0A  BE12               	btfsc	(addOx@k+1)^0,7,c
 11354  003F0C  EF93  F01F         	goto	u9210
 11355  003F10  5012               	movf	(addOx@k+1)^0,w,c
 11356  003F12  E107               	bnz	u9211
 11357  003F14  0E02               	movlw	2
 11358  003F16  5C11               	subwf	addOx@k^0,w,c
 11359  003F18  B0D8               	btfsc	status,0,c
 11360  003F1A  EF91  F01F         	goto	u9211
 11361  003F1E  EF93  F01F         	goto	u9210
 11362  003F22                     u9211:
 11363  003F22  EF6E  F01F         	goto	l7855
 11364  003F26                     u9210:
 11365  003F26                     l7861:
 11366                           
 11367                           ;src/print/format.c: 390:         hoS[0]= '0';
 11368  003F26  C008  FFD9         	movff	addOx@hoS,fsr2l
 11369  003F2A  C009  FFDA         	movff	addOx@hoS+1,fsr2h
 11370  003F2E  0E30               	movlw	48
 11371  003F30  6EDF               	movwf	indf2,c
 11372  003F32                     
 11373                           ;src/print/format.c: 391:         hoS[1]= 'x';
 11374  003F32  EE20 F001          	lfsr	2,1
 11375  003F36  5008               	movf	addOx@hoS^0,w,c
 11376  003F38  26D9               	addwf	fsr2l,f,c
 11377  003F3A  5009               	movf	(addOx@hoS+1)^0,w,c
 11378  003F3C  22DA               	addwfc	fsr2h,f,c
 11379  003F3E  0E78               	movlw	120
 11380  003F40  6EDF               	movwf	indf2,c
 11381                           
 11382                           ;src/print/format.c: 392:     }
 11383  003F42  EFEF  F01F         	goto	l569
 11384  003F46                     l7865:
 11385  003F46  043B               	decf	_numeral^0,w,c
 11386  003F48  A4D8               	btfss	status,2,c
 11387  003F4A  EFA9  F01F         	goto	u9221
 11388  003F4E  EFAB  F01F         	goto	u9220
 11389  003F52                     u9221:
 11390  003F52  EFEF  F01F         	goto	l569
 11391  003F56                     u9220:
 11392  003F56  500A               	movf	addOx@num^0,w,c
 11393  003F58  100B               	iorwf	(addOx@num+1)^0,w,c
 11394  003F5A  B4D8               	btfsc	status,2,c
 11395  003F5C  EFB2  F01F         	goto	u9231
 11396  003F60  EFB4  F01F         	goto	u9230
 11397  003F64                     u9231:
 11398  003F64  EFEF  F01F         	goto	l569
 11399  003F68                     u9230:
 11400  003F68  0E6F               	movlw	111
 11401  003F6A  180C               	xorwf	addOx@type^0,w,c
 11402  003F6C  A4D8               	btfss	status,2,c
 11403  003F6E  EFBB  F01F         	goto	u9241
 11404  003F72  EFBD  F01F         	goto	u9240
 11405  003F76                     u9241:
 11406  003F76  EFEF  F01F         	goto	l569
 11407  003F7A                     u9240:
 11408  003F7A                     
 11409                           ;src/print/format.c: 394:         for(k = len;k > 0;k--)
 11410  003F7A  C00F  F011         	movff	addOx@len,addOx@k
 11411  003F7E  C010  F012         	movff	addOx@len+1,addOx@k+1
 11412  003F82                     l7873:
 11413  003F82  BE12               	btfsc	(addOx@k+1)^0,7,c
 11414  003F84  EFCE  F01F         	goto	u9250
 11415  003F88  5012               	movf	(addOx@k+1)^0,w,c
 11416  003F8A  E106               	bnz	u9251
 11417  003F8C  0411               	decf	addOx@k^0,w,c
 11418  003F8E  B0D8               	btfsc	status,0,c
 11419  003F90  EFCC  F01F         	goto	u9251
 11420  003F94  EFCE  F01F         	goto	u9250
 11421  003F98                     u9251:
 11422  003F98  EFD0  F01F         	goto	l7877
 11423  003F9C                     u9250:
 11424  003F9C  EFE9  F01F         	goto	l7883
 11425  003FA0                     l7877:
 11426                           
 11427                           ;src/print/format.c: 395:             hoS[k]=hoS[k-1];
 11428  003FA0  5011               	movf	addOx@k^0,w,c
 11429  003FA2  2408               	addwf	addOx@hoS^0,w,c
 11430  003FA4  6E0D               	movwf	??_addOx^0,c
 11431  003FA6  5012               	movf	(addOx@k+1)^0,w,c
 11432  003FA8  2009               	addwfc	(addOx@hoS+1)^0,w,c
 11433  003FAA  6E0E               	movwf	(??_addOx+1)^0,c
 11434  003FAC  0EFF               	movlw	255
 11435  003FAE  240D               	addwf	??_addOx^0,w,c
 11436  003FB0  6ED9               	movwf	fsr2l,c
 11437  003FB2  0EFF               	movlw	255
 11438  003FB4  200E               	addwfc	(??_addOx+1)^0,w,c
 11439  003FB6  6EDA               	movwf	fsr2h,c
 11440  003FB8  5011               	movf	addOx@k^0,w,c
 11441  003FBA  2408               	addwf	addOx@hoS^0,w,c
 11442  003FBC  6EE1               	movwf	fsr1l,c
 11443  003FBE  5012               	movf	(addOx@k+1)^0,w,c
 11444  003FC0  2009               	addwfc	(addOx@hoS+1)^0,w,c
 11445  003FC2  6EE2               	movwf	fsr1h,c
 11446  003FC4  CFDF FFE7          	movff	indf2,indf1
 11447  003FC8  0611               	decf	addOx@k^0,f,c
 11448  003FCA  A0D8               	btfss	status,0,c
 11449  003FCC  0612               	decf	(addOx@k+1)^0,f,c
 11450  003FCE  EFC1  F01F         	goto	l7873
 11451  003FD2                     l7883:
 11452                           
 11453                           ;src/print/format.c: 396:         hoS[0]= '0';
 11454  003FD2  C008  FFD9         	movff	addOx@hoS,fsr2l
 11455  003FD6  C009  FFDA         	movff	addOx@hoS+1,fsr2h
 11456  003FDA  0E30               	movlw	48
 11457  003FDC  6EDF               	movwf	indf2,c
 11458  003FDE                     l569:
 11459  003FDE  0012               	return		;funcret
 11460  003FE0                     __end_of_addOx:
 11461                           	opt callstack 0
 11462                           
 11463 ;; *************** function _SERIAL_Write *****************
 11464 ;; Defined at:
 11465 ;;		line 33 in file "src/serial.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;  str             2    7[COMRAM] PTR unsigned char 
 11468 ;;		 -> my_vprintf@string(128), 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;  i               2    9[COMRAM] int 
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      void 
 11473 ;; Registers used:
 11474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11480 ;;      Params:         2       0       0       0       0       0       0       0       0
 11481 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11483 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11484 ;;Total ram usage:        4 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:    3
 11487 ;; This function calls:
 11488 ;;		_SERIAL_WriteChar
 11489 ;;		_strlen
 11490 ;; This function is called by:
 11491 ;;		_my_vprintf
 11492 ;; This function uses a non-reentrant model
 11493 ;;
 11494                           
 11495                           	psect	text35
 11496  005228                     __ptext35:
 11497                           	opt callstack 0
 11498  005228                     _SERIAL_Write:
 11499                           	opt callstack 26
 11500  005228                     
 11501                           ;src/serial.c: 34:     int i;;src/serial.c: 35:     for (i = 0; i < strlen(str); i++)
 11502  005228  0E00               	movlw	0
 11503  00522A  6E0B               	movwf	(SERIAL_Write@i+1)^0,c
 11504  00522C  0E00               	movlw	0
 11505  00522E  6E0A               	movwf	SERIAL_Write@i^0,c
 11506  005230  EF25  F029         	goto	l7475
 11507  005234                     l7471:
 11508                           
 11509                           ;src/serial.c: 36:     {;src/serial.c: 37:         SERIAL_WriteChar(str[i]);
 11510  005234  500A               	movf	SERIAL_Write@i^0,w,c
 11511  005236  2408               	addwf	SERIAL_Write@str^0,w,c
 11512  005238  6ED9               	movwf	fsr2l,c
 11513  00523A  500B               	movf	(SERIAL_Write@i+1)^0,w,c
 11514  00523C  2009               	addwfc	(SERIAL_Write@str+1)^0,w,c
 11515  00523E  6EDA               	movwf	fsr2h,c
 11516  005240  50DF               	movf	indf2,w,c
 11517  005242  EC88  F02A         	call	_SERIAL_WriteChar
 11518  005246                     
 11519                           ;src/serial.c: 38:     }
 11520  005246  4A0A               	infsnz	SERIAL_Write@i^0,f,c
 11521  005248  2A0B               	incf	(SERIAL_Write@i+1)^0,f,c
 11522  00524A                     l7475:
 11523  00524A  C008  F004         	movff	SERIAL_Write@str,strlen@s
 11524  00524E  C009  F005         	movff	SERIAL_Write@str+1,strlen@s+1
 11525  005252  ECD7  F029         	call	_strlen	;wreg free
 11526  005256  5004               	movf	?_strlen^0,w,c
 11527  005258  5C0A               	subwf	SERIAL_Write@i^0,w,c
 11528  00525A  5005               	movf	(?_strlen+1)^0,w,c
 11529  00525C  580B               	subwfb	(SERIAL_Write@i+1)^0,w,c
 11530  00525E  A0D8               	btfss	status,0,c
 11531  005260  EF34  F029         	goto	u8421
 11532  005264  EF36  F029         	goto	u8420
 11533  005268                     u8421:
 11534  005268  EF1A  F029         	goto	l7471
 11535  00526C                     u8420:
 11536  00526C  0012               	return		;funcret
 11537  00526E                     __end_of_SERIAL_Write:
 11538                           	opt callstack 0
 11539                           
 11540 ;; *************** function _strlen *****************
 11541 ;; Defined at:
 11542 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  s               2    3[COMRAM] PTR const unsigned char 
 11545 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), 
 11546 ;;		 -> getWP@width_str(5), 
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;  a               2    5[COMRAM] PTR const unsigned char 
 11549 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), 
 11550 ;;		 -> getWP@width_str(5), 
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  2    3[COMRAM] unsigned int 
 11553 ;; Registers used:
 11554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11560 ;;      Params:         2       0       0       0       0       0       0       0       0
 11561 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11562 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11563 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11564 ;;Total ram usage:        4 bytes
 11565 ;; Hardware stack levels used:    1
 11566 ;; Hardware stack levels required when called:    2
 11567 ;; This function calls:
 11568 ;;		Nothing
 11569 ;; This function is called by:
 11570 ;;		_SERIAL_Write
 11571 ;;		_searchc
 11572 ;;		_posc
 11573 ;;		_roundStr
 11574 ;;		_upperCL
 11575 ;;		_cleanS
 11576 ;;		_getWP
 11577 ;;		_precF
 11578 ;;		_precE
 11579 ;;		_precG
 11580 ;;		_precI
 11581 ;;		_precS
 11582 ;;		_addSig
 11583 ;;		_addOx
 11584 ;;		_setWidth
 11585 ;;		_my_vprintf
 11586 ;;		_reverse
 11587 ;;		_atoui
 11588 ;;		_strcat
 11589 ;;		_SERIAL_WriteLine
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text36
 11594  0053AE                     __ptext36:
 11595                           	opt callstack 0
 11596  0053AE                     _strlen:
 11597                           	opt callstack 26
 11598  0053AE  C004  F006         	movff	strlen@s,strlen@a
 11599  0053B2  C005  F007         	movff	strlen@s+1,strlen@a+1
 11600  0053B6  EFDF  F029         	goto	l6533
 11601  0053BA                     l6531:
 11602  0053BA  4A04               	infsnz	strlen@s^0,f,c
 11603  0053BC  2A05               	incf	(strlen@s+1)^0,f,c
 11604  0053BE                     l6533:
 11605  0053BE  C004  FFD9         	movff	strlen@s,fsr2l
 11606  0053C2  C005  FFDA         	movff	strlen@s+1,fsr2h
 11607  0053C6  50DF               	movf	indf2,w,c
 11608  0053C8  A4D8               	btfss	status,2,c
 11609  0053CA  EFE9  F029         	goto	u6881
 11610  0053CE  EFEB  F029         	goto	u6880
 11611  0053D2                     u6881:
 11612  0053D2  EFDD  F029         	goto	l6531
 11613  0053D6                     u6880:
 11614  0053D6  5006               	movf	strlen@a^0,w,c
 11615  0053D8  5C04               	subwf	strlen@s^0,w,c
 11616  0053DA  6E04               	movwf	?_strlen^0,c
 11617  0053DC  5007               	movf	(strlen@a+1)^0,w,c
 11618  0053DE  5805               	subwfb	(strlen@s+1)^0,w,c
 11619  0053E0  6E05               	movwf	(?_strlen+1)^0,c
 11620  0053E2  0012               	return		;funcret
 11621  0053E4                     __end_of_strlen:
 11622                           	opt callstack 0
 11623                           
 11624 ;; *************** function _SERIAL_WriteChar *****************
 11625 ;; Defined at:
 11626 ;;		line 28 in file "src/serial.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;  data            1    wreg     unsigned char 
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;  data            1    3[COMRAM] unsigned char 
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  1    wreg      void 
 11633 ;; Registers used:
 11634 ;;		wreg
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11640 ;;      Params:         0       0       0       0       0       0       0       0       0
 11641 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11643 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11644 ;;Total ram usage:        1 bytes
 11645 ;; Hardware stack levels used:    1
 11646 ;; Hardware stack levels required when called:    2
 11647 ;; This function calls:
 11648 ;;		Nothing
 11649 ;; This function is called by:
 11650 ;;		_SERIAL_Write
 11651 ;;		_SERIAL_WriteLine
 11652 ;; This function uses a non-reentrant model
 11653 ;;
 11654                           
 11655                           	psect	text37
 11656  005510                     __ptext37:
 11657                           	opt callstack 0
 11658  005510                     _SERIAL_WriteChar:
 11659                           	opt callstack 26
 11660                           
 11661                           ;incstack = 0
 11662                           ;SERIAL_WriteChar@data stored from wreg
 11663  005510  6E04               	movwf	SERIAL_WriteChar@data^0,c
 11664  005512                     l91:
 11665  005512  A2AC               	btfss	172,1,c	;volatile
 11666  005514  EF8E  F02A         	goto	u7931
 11667  005518  EF90  F02A         	goto	u7930
 11668  00551C                     u7931:
 11669  00551C  EF89  F02A         	goto	l91
 11670  005520                     u7930:
 11671  005520                     
 11672                           ;src/serial.c: 30:     TXREG = data;
 11673  005520  C004  FFAD         	movff	SERIAL_WriteChar@data,4013	;volatile
 11674  005524  0012               	return		;funcret
 11675  005526                     __end_of_SERIAL_WriteChar:
 11676                           	opt callstack 0
 11677                           
 11678 ;; *************** function _SYSTEM_Init *****************
 11679 ;; Defined at:
 11680 ;;		line 110 in file "src/system.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;		None
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;		None
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  1    wreg      void 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2, status,0, cstack
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11694 ;;      Params:         0       0       0       0       0       0       0       0       0
 11695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11697 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11698 ;;Total ram usage:        0 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:    6
 11701 ;; This function calls:
 11702 ;;		_BLED_Enable
 11703 ;;		_INTERRUPT_Init
 11704 ;;		_INTERRUPT_Tmr0
 11705 ;;		_KBD_Init
 11706 ;;		_LCD_Init
 11707 ;;		_SERIAL_Init
 11708 ;;		_TIMER0_Int
 11709 ;;		_TIMER0_SetPs
 11710 ;; This function is called by:
 11711 ;;		_main
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text38
 11716  0050BC                     __ptext38:
 11717                           	opt callstack 0
 11718  0050BC                     _SYSTEM_Init:
 11719                           	opt callstack 24
 11720  0050BC                     
 11721                           ;src/system.c: 112:     LCD_Init();
 11722  0050BC  EC8F  F025         	call	_LCD_Init	;wreg free
 11723  0050C0                     
 11724                           ;src/system.c: 113:     KBD_Init();
 11725  0050C0  ECA7  F02A         	call	_KBD_Init	;wreg free
 11726  0050C4                     
 11727                           ;src/system.c: 115:     INTERRUPT_Init();
 11728  0050C4  ECAF  F02A         	call	_INTERRUPT_Init	;wreg free
 11729  0050C8                     
 11730                           ;src/system.c: 119:     TIMER0_Int(0, 0, 0, 0);
 11731  0050C8  0E00               	movlw	0
 11732  0050CA  6E04               	movwf	TIMER0_Int@t0_cs^0,c
 11733  0050CC  0E00               	movlw	0
 11734  0050CE  6E05               	movwf	TIMER0_Int@t0_se^0,c
 11735  0050D0  0E00               	movlw	0
 11736  0050D2  6E06               	movwf	TIMER0_Int@t0_psa^0,c
 11737  0050D4  0E00               	movlw	0
 11738  0050D6  EC9B  F029         	call	_TIMER0_Int
 11739  0050DA                     
 11740                           ;src/system.c: 120:     TIMER0_SetPs(PS6);
 11741  0050DA  0E06               	movlw	6
 11742  0050DC  ECE1  F024         	call	_TIMER0_SetPs
 11743                           
 11744                           ;src/system.c: 121:     INTERRUPT_Tmr0();
 11745  0050E0  ECB3  F02A         	call	_INTERRUPT_Tmr0	;wreg free
 11746  0050E4                     
 11747                           ;src/system.c: 127:     BLED_Enable(BL1);
 11748  0050E4  0E00               	movlw	0
 11749  0050E6  EC83  F028         	call	_BLED_Enable
 11750  0050EA                     
 11751                           ;src/system.c: 128:     BLED_Enable(BL2);
 11752  0050EA  0E01               	movlw	1
 11753  0050EC  EC83  F028         	call	_BLED_Enable
 11754  0050F0                     
 11755                           ;src/system.c: 133:     SERIAL_Init(9600);
 11756  0050F0  0E80               	movlw	128
 11757  0050F2  6E12               	movwf	SERIAL_Init@BAUD^0,c
 11758  0050F4  0E25               	movlw	37
 11759  0050F6  6E13               	movwf	(SERIAL_Init@BAUD+1)^0,c
 11760  0050F8  0E00               	movlw	0
 11761  0050FA  6E14               	movwf	(SERIAL_Init@BAUD+2)^0,c
 11762  0050FC  0E00               	movlw	0
 11763  0050FE  6E15               	movwf	(SERIAL_Init@BAUD+3)^0,c
 11764  005100  EC73  F026         	call	_SERIAL_Init	;wreg free
 11765  005104  0012               	return		;funcret
 11766  005106                     __end_of_SYSTEM_Init:
 11767                           	opt callstack 0
 11768                           
 11769 ;; *************** function _TIMER0_SetPs *****************
 11770 ;; Defined at:
 11771 ;;		line 14 in file "src/timer.c"
 11772 ;; Parameters:    Size  Location     Type
 11773 ;;  prescale        1    wreg     enum E3190
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;  prescale        1    5[COMRAM] enum E3190
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  1    wreg      void 
 11778 ;; Registers used:
 11779 ;;		wreg, status,2, status,0
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11785 ;;      Params:         0       0       0       0       0       0       0       0       0
 11786 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11787 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11788 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11789 ;;Total ram usage:        3 bytes
 11790 ;; Hardware stack levels used:    1
 11791 ;; Hardware stack levels required when called:    2
 11792 ;; This function calls:
 11793 ;;		Nothing
 11794 ;; This function is called by:
 11795 ;;		_SYSTEM_Init
 11796 ;; This function uses a non-reentrant model
 11797 ;;
 11798                           
 11799                           	psect	text39
 11800  0049C2                     __ptext39:
 11801                           	opt callstack 0
 11802  0049C2                     _TIMER0_SetPs:
 11803                           	opt callstack 27
 11804                           
 11805                           ;incstack = 0
 11806                           ;TIMER0_SetPs@prescale stored from wreg
 11807  0049C2  6E06               	movwf	TIMER0_SetPs@prescale^0,c
 11808  0049C4                     
 11809                           ;src/timer.c: 14: void TIMER0_SetPs(PRESCALE prescale);src/timer.c: 15: {;src/timer.c: 1
      +                          6:     switch (prescale)
 11810  0049C4  EF0C  F025         	goto	l5151
 11811  0049C8                     l327:
 11812                           
 11813                           ;src/timer.c: 19:             T0CONbits.T0PS0 = 0;
 11814  0049C8  90D5               	bcf	213,0,c	;volatile
 11815                           
 11816                           ;src/timer.c: 20:             T0CONbits.T0PS1 = 0;
 11817  0049CA  92D5               	bcf	213,1,c	;volatile
 11818                           
 11819                           ;src/timer.c: 21:             T0CONbits.T0PS2 = 0;
 11820  0049CC  94D5               	bcf	213,2,c	;volatile
 11821                           
 11822                           ;src/timer.c: 22:             break;
 11823  0049CE  EF39  F025         	goto	l336
 11824  0049D2                     l329:
 11825                           
 11826                           ;src/timer.c: 24:             T0CONbits.T0PS0 = 1;
 11827  0049D2  80D5               	bsf	213,0,c	;volatile
 11828                           
 11829                           ;src/timer.c: 25:             T0CONbits.T0PS1 = 0;
 11830  0049D4  92D5               	bcf	213,1,c	;volatile
 11831                           
 11832                           ;src/timer.c: 26:             T0CONbits.T0PS2 = 0;
 11833  0049D6  94D5               	bcf	213,2,c	;volatile
 11834                           
 11835                           ;src/timer.c: 27:             break;
 11836  0049D8  EF39  F025         	goto	l336
 11837  0049DC                     l330:
 11838                           
 11839                           ;src/timer.c: 29:             T0CONbits.T0PS0 = 0;
 11840  0049DC  90D5               	bcf	213,0,c	;volatile
 11841                           
 11842                           ;src/timer.c: 30:             T0CONbits.T0PS1 = 1;
 11843  0049DE  82D5               	bsf	213,1,c	;volatile
 11844                           
 11845                           ;src/timer.c: 31:             T0CONbits.T0PS2 = 0;
 11846  0049E0  94D5               	bcf	213,2,c	;volatile
 11847                           
 11848                           ;src/timer.c: 32:             break;
 11849  0049E2  EF39  F025         	goto	l336
 11850  0049E6                     l331:
 11851                           
 11852                           ;src/timer.c: 34:             T0CONbits.T0PS0 = 1;
 11853  0049E6  80D5               	bsf	213,0,c	;volatile
 11854                           
 11855                           ;src/timer.c: 35:             T0CONbits.T0PS1 = 1;
 11856  0049E8  82D5               	bsf	213,1,c	;volatile
 11857                           
 11858                           ;src/timer.c: 36:             T0CONbits.T0PS2 = 0;
 11859  0049EA  94D5               	bcf	213,2,c	;volatile
 11860                           
 11861                           ;src/timer.c: 37:             break;
 11862  0049EC  EF39  F025         	goto	l336
 11863  0049F0                     l332:
 11864                           
 11865                           ;src/timer.c: 39:             T0CONbits.T0PS0 = 0;
 11866  0049F0  90D5               	bcf	213,0,c	;volatile
 11867                           
 11868                           ;src/timer.c: 40:             T0CONbits.T0PS1 = 0;
 11869  0049F2  92D5               	bcf	213,1,c	;volatile
 11870                           
 11871                           ;src/timer.c: 41:             T0CONbits.T0PS2 = 1;
 11872  0049F4  84D5               	bsf	213,2,c	;volatile
 11873                           
 11874                           ;src/timer.c: 42:             break;
 11875  0049F6  EF39  F025         	goto	l336
 11876  0049FA                     l333:
 11877                           
 11878                           ;src/timer.c: 44:             T0CONbits.T0PS0 = 1;
 11879  0049FA  80D5               	bsf	213,0,c	;volatile
 11880                           
 11881                           ;src/timer.c: 45:             T0CONbits.T0PS1 = 0;
 11882  0049FC  92D5               	bcf	213,1,c	;volatile
 11883                           
 11884                           ;src/timer.c: 46:             T0CONbits.T0PS2 = 1;
 11885  0049FE  84D5               	bsf	213,2,c	;volatile
 11886                           
 11887                           ;src/timer.c: 47:             break;
 11888  004A00  EF39  F025         	goto	l336
 11889  004A04                     l334:
 11890                           
 11891                           ;src/timer.c: 49:             T0CONbits.T0PS0 = 0;
 11892  004A04  90D5               	bcf	213,0,c	;volatile
 11893                           
 11894                           ;src/timer.c: 50:             T0CONbits.T0PS1 = 1;
 11895  004A06  82D5               	bsf	213,1,c	;volatile
 11896                           
 11897                           ;src/timer.c: 51:             T0CONbits.T0PS2 = 1;
 11898  004A08  84D5               	bsf	213,2,c	;volatile
 11899                           
 11900                           ;src/timer.c: 52:             break;
 11901  004A0A  EF39  F025         	goto	l336
 11902  004A0E                     l335:
 11903                           
 11904                           ;src/timer.c: 54:             T0CONbits.T0PS0 = 1;
 11905  004A0E  80D5               	bsf	213,0,c	;volatile
 11906                           
 11907                           ;src/timer.c: 55:             T0CONbits.T0PS1 = 1;
 11908  004A10  82D5               	bsf	213,1,c	;volatile
 11909                           
 11910                           ;src/timer.c: 56:             T0CONbits.T0PS2 = 1;
 11911  004A12  84D5               	bsf	213,2,c	;volatile
 11912                           
 11913                           ;src/timer.c: 57:     }
 11914  004A14  EF39  F025         	goto	l336
 11915  004A18                     l5151:
 11916  004A18  5006               	movf	TIMER0_SetPs@prescale^0,w,c
 11917  004A1A  6E04               	movwf	??_TIMER0_SetPs^0,c
 11918  004A1C  6A05               	clrf	(??_TIMER0_SetPs+1)^0,c
 11919                           
 11920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11921                           ; Switch size 1, requested type "simple"
 11922                           ; Number of cases is 1, Range of values is 0 to 0
 11923                           ; switch strategies available:
 11924                           ; Name         Instructions Cycles
 11925                           ; simple_byte            4     3 (average)
 11926                           ;	Chosen strategy is simple_byte
 11927  004A1E  5005               	movf	(??_TIMER0_SetPs+1)^0,w,c
 11928  004A20  0A00               	xorlw	0	; case 0
 11929  004A22  B4D8               	btfsc	status,2,c
 11930  004A24  EF16  F025         	goto	l8657
 11931  004A28  EF39  F025         	goto	l336
 11932  004A2C                     l8657:
 11933                           
 11934                           ; Switch size 1, requested type "simple"
 11935                           ; Number of cases is 8, Range of values is 0 to 7
 11936                           ; switch strategies available:
 11937                           ; Name         Instructions Cycles
 11938                           ; simple_byte           25    13 (average)
 11939                           ;	Chosen strategy is simple_byte
 11940  004A2C  5004               	movf	??_TIMER0_SetPs^0,w,c
 11941  004A2E  0A00               	xorlw	0	; case 0
 11942  004A30  B4D8               	btfsc	status,2,c
 11943  004A32  EFE4  F024         	goto	l327
 11944  004A36  0A01               	xorlw	1	; case 1
 11945  004A38  B4D8               	btfsc	status,2,c
 11946  004A3A  EFE9  F024         	goto	l329
 11947  004A3E  0A03               	xorlw	3	; case 2
 11948  004A40  B4D8               	btfsc	status,2,c
 11949  004A42  EFEE  F024         	goto	l330
 11950  004A46  0A01               	xorlw	1	; case 3
 11951  004A48  B4D8               	btfsc	status,2,c
 11952  004A4A  EFF3  F024         	goto	l331
 11953  004A4E  0A07               	xorlw	7	; case 4
 11954  004A50  B4D8               	btfsc	status,2,c
 11955  004A52  EFF8  F024         	goto	l332
 11956  004A56  0A01               	xorlw	1	; case 5
 11957  004A58  B4D8               	btfsc	status,2,c
 11958  004A5A  EFFD  F024         	goto	l333
 11959  004A5E  0A03               	xorlw	3	; case 6
 11960  004A60  B4D8               	btfsc	status,2,c
 11961  004A62  EF02  F025         	goto	l334
 11962  004A66  0A01               	xorlw	1	; case 7
 11963  004A68  B4D8               	btfsc	status,2,c
 11964  004A6A  EF07  F025         	goto	l335
 11965  004A6E  EF39  F025         	goto	l336
 11966  004A72                     l336:
 11967  004A72  0012               	return		;funcret
 11968  004A74                     __end_of_TIMER0_SetPs:
 11969                           	opt callstack 0
 11970                           
 11971 ;; *************** function _TIMER0_Int *****************
 11972 ;; Defined at:
 11973 ;;		line 3 in file "src/timer.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  t0_8b           1    wreg     _Bool 
 11976 ;;  t0_cs           1    3[COMRAM] _Bool 
 11977 ;;  t0_se           1    4[COMRAM] _Bool 
 11978 ;;  t0_psa          1    5[COMRAM] _Bool 
 11979 ;; Auto vars:     Size  Location     Type
 11980 ;;  t0_8b           1    6[COMRAM] _Bool 
 11981 ;; Return value:  Size  Location     Type
 11982 ;;                  1    wreg      void 
 11983 ;; Registers used:
 11984 ;;		wreg, status,2
 11985 ;; Tracked objects:
 11986 ;;		On entry : 0/0
 11987 ;;		On exit  : 0/0
 11988 ;;		Unchanged: 0/0
 11989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11990 ;;      Params:         3       0       0       0       0       0       0       0       0
 11991 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11992 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11993 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11994 ;;Total ram usage:        4 bytes
 11995 ;; Hardware stack levels used:    1
 11996 ;; Hardware stack levels required when called:    2
 11997 ;; This function calls:
 11998 ;;		Nothing
 11999 ;; This function is called by:
 12000 ;;		_SYSTEM_Init
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           	psect	text40
 12005  005336                     __ptext40:
 12006                           	opt callstack 0
 12007  005336                     _TIMER0_Int:
 12008                           	opt callstack 27
 12009                           
 12010                           ;incstack = 0
 12011                           ;TIMER0_Int@t0_8b stored from wreg
 12012  005336  6E07               	movwf	TIMER0_Int@t0_8b^0,c
 12013  005338                     
 12014                           ;src/timer.c: 3: void TIMER0_Int(_Bool t0_8b, _Bool t0_cs, _Bool t0_se, _Bool t0_psa);sr
      +                          c/timer.c: 4: {;src/timer.c: 5:     T0CONbits.TMR0ON = 1;
 12015  005338  8ED5               	bsf	213,7,c	;volatile
 12016  00533A                     
 12017                           ;src/timer.c: 6:     T0CONbits.T08BIT = t0_8b;
 12018  00533A  B007               	btfsc	TIMER0_Int@t0_8b^0,0,c
 12019  00533C  D002               	bra	u5085
 12020  00533E  9CD5               	bcf	213,6,c	;volatile
 12021  005340  D001               	bra	u5086
 12022  005342                     u5085:
 12023  005342  8CD5               	bsf	213,6,c	;volatile
 12024  005344                     u5086:
 12025  005344                     
 12026                           ;src/timer.c: 7:     T0CONbits.T0CS = t0_cs;
 12027  005344  B004               	btfsc	TIMER0_Int@t0_cs^0,0,c
 12028  005346  D002               	bra	u5095
 12029  005348  9AD5               	bcf	213,5,c	;volatile
 12030  00534A  D001               	bra	u5096
 12031  00534C                     u5095:
 12032  00534C  8AD5               	bsf	213,5,c	;volatile
 12033  00534E                     u5096:
 12034  00534E                     
 12035                           ;src/timer.c: 8:     T0CONbits.T0SE = t0_se;
 12036  00534E  B005               	btfsc	TIMER0_Int@t0_se^0,0,c
 12037  005350  D002               	bra	u5105
 12038  005352  98D5               	bcf	213,4,c	;volatile
 12039  005354  D001               	bra	u5106
 12040  005356                     u5105:
 12041  005356  88D5               	bsf	213,4,c	;volatile
 12042  005358                     u5106:
 12043  005358                     
 12044                           ;src/timer.c: 9:     T0CONbits.PSA = t0_psa;
 12045  005358  B006               	btfsc	TIMER0_Int@t0_psa^0,0,c
 12046  00535A  D002               	bra	u5115
 12047  00535C  96D5               	bcf	213,3,c	;volatile
 12048  00535E  D001               	bra	u5116
 12049  005360                     u5115:
 12050  005360  86D5               	bsf	213,3,c	;volatile
 12051  005362                     u5116:
 12052  005362                     
 12053                           ;src/timer.c: 10:     if (t0_cs)
 12054  005362  5004               	movf	TIMER0_Int@t0_cs^0,w,c
 12055  005364  B4D8               	btfsc	status,2,c
 12056  005366  EFB7  F029         	goto	u5121
 12057  00536A  EFB9  F029         	goto	u5120
 12058  00536E                     u5121:
 12059  00536E  EFBA  F029         	goto	l323
 12060  005372                     u5120:
 12061  005372                     
 12062                           ;src/timer.c: 11:         TRISAbits.RA4 = 1;
 12063  005372  8892               	bsf	146,4,c	;volatile
 12064  005374                     l323:
 12065  005374  0012               	return		;funcret
 12066  005376                     __end_of_TIMER0_Int:
 12067                           	opt callstack 0
 12068                           
 12069 ;; *************** function _SERIAL_Init *****************
 12070 ;; Defined at:
 12071 ;;		line 3 in file "src/serial.c"
 12072 ;; Parameters:    Size  Location     Type
 12073 ;;  BAUD            4   17[COMRAM] long 
 12074 ;; Auto vars:     Size  Location     Type
 12075 ;;  baudrate        2   25[COMRAM] unsigned short 
 12076 ;; Return value:  Size  Location     Type
 12077 ;;                  1    wreg      void 
 12078 ;; Registers used:
 12079 ;;		wreg, status,2, status,0, cstack
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/0
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12085 ;;      Params:         4       0       0       0       0       0       0       0       0
 12086 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12087 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12088 ;;      Totals:        10       0       0       0       0       0       0       0       0
 12089 ;;Total ram usage:       10 bytes
 12090 ;; Hardware stack levels used:    1
 12091 ;; Hardware stack levels required when called:    3
 12092 ;; This function calls:
 12093 ;;		___aldiv
 12094 ;; This function is called by:
 12095 ;;		_SYSTEM_Init
 12096 ;; This function uses a non-reentrant model
 12097 ;;
 12098                           
 12099                           	psect	text41
 12100  004CE6                     __ptext41:
 12101                           	opt callstack 0
 12102  004CE6                     _SERIAL_Init:
 12103                           	opt callstack 26
 12104  004CE6                     
 12105                           ;src/serial.c: 3: void SERIAL_Init(long BAUD);src/serial.c: 4: {;src/serial.c: 6:     ui
      +                          nt16_t baudrate = (((48000000/BAUD)/4)-1);
 12106  004CE6  C012  F008         	movff	SERIAL_Init@BAUD,___aldiv@divisor
 12107  004CEA  C013  F009         	movff	SERIAL_Init@BAUD+1,___aldiv@divisor+1
 12108  004CEE  C014  F00A         	movff	SERIAL_Init@BAUD+2,___aldiv@divisor+2
 12109  004CF2  C015  F00B         	movff	SERIAL_Init@BAUD+3,___aldiv@divisor+3
 12110  004CF6  0E00               	movlw	0
 12111  004CF8  6E04               	movwf	___aldiv@dividend^0,c
 12112  004CFA  0E6C               	movlw	108
 12113  004CFC  6E05               	movwf	(___aldiv@dividend+1)^0,c
 12114  004CFE  0EDC               	movlw	220
 12115  004D00  6E06               	movwf	(___aldiv@dividend+2)^0,c
 12116  004D02  0E02               	movlw	2
 12117  004D04  6E07               	movwf	(___aldiv@dividend+3)^0,c
 12118  004D06  ECB5  F021         	call	___aldiv	;wreg free
 12119  004D0A  C004  F016         	movff	?___aldiv,_SERIAL_Init$2462
 12120  004D0E  C005  F017         	movff	?___aldiv+1,_SERIAL_Init$2462+1
 12121  004D12  C006  F018         	movff	?___aldiv+2,_SERIAL_Init$2462+2
 12122  004D16  C007  F019         	movff	?___aldiv+3,_SERIAL_Init$2462+3
 12123                           
 12124                           ;src/serial.c: 3: void SERIAL_Init(long BAUD);src/serial.c: 4: {;src/serial.c: 6:     ui
      +                          nt16_t baudrate = (((48000000/BAUD)/4)-1);
 12125  004D1A  C016  F004         	movff	_SERIAL_Init$2462,___aldiv@dividend
 12126  004D1E  C017  F005         	movff	_SERIAL_Init$2462+1,___aldiv@dividend+1
 12127  004D22  C018  F006         	movff	_SERIAL_Init$2462+2,___aldiv@dividend+2
 12128  004D26  C019  F007         	movff	_SERIAL_Init$2462+3,___aldiv@dividend+3
 12129  004D2A  0E04               	movlw	4
 12130  004D2C  6E08               	movwf	___aldiv@divisor^0,c
 12131  004D2E  0E00               	movlw	0
 12132  004D30  6E09               	movwf	(___aldiv@divisor+1)^0,c
 12133  004D32  0E00               	movlw	0
 12134  004D34  6E0A               	movwf	(___aldiv@divisor+2)^0,c
 12135  004D36  0E00               	movlw	0
 12136  004D38  6E0B               	movwf	(___aldiv@divisor+3)^0,c
 12137  004D3A  ECB5  F021         	call	___aldiv	;wreg free
 12138  004D3E  0EFF               	movlw	255
 12139  004D40  2404               	addwf	?___aldiv^0,w,c
 12140  004D42  6E1A               	movwf	SERIAL_Init@baudrate^0,c
 12141  004D44  0EFF               	movlw	255
 12142  004D46  2005               	addwfc	(?___aldiv+1)^0,w,c
 12143  004D48  6E1B               	movwf	(SERIAL_Init@baudrate+1)^0,c
 12144  004D4A                     
 12145                           ;src/serial.c: 8:     TRISCbits.RC6 = 1;
 12146  004D4A  8C94               	bsf	148,6,c	;volatile
 12147  004D4C                     
 12148                           ;src/serial.c: 9:     TRISCbits.RC7 = 1;
 12149  004D4C  8E94               	bsf	148,7,c	;volatile
 12150  004D4E                     
 12151                           ;src/serial.c: 12:     RCSTAbits.SPEN = 1;
 12152  004D4E  8EAB               	bsf	171,7,c	;volatile
 12153  004D50                     
 12154                           ;src/serial.c: 13:     TXSTAbits.SYNC = 0;
 12155  004D50  98AC               	bcf	172,4,c	;volatile
 12156  004D52                     
 12157                           ;src/serial.c: 14:     TXSTAbits.BRGH = 1;
 12158  004D52  84AC               	bsf	172,2,c	;volatile
 12159  004D54                     
 12160                           ;src/serial.c: 15:     BAUDCONbits.BRG16 = 1;
 12161  004D54  86B8               	bsf	184,3,c	;volatile
 12162  004D56                     
 12163                           ;src/serial.c: 16:     SPBRGH = baudrate >> 8;
 12164  004D56  501B               	movf	(SERIAL_Init@baudrate+1)^0,w,c
 12165  004D58  6EB0               	movwf	176,c	;volatile
 12166  004D5A                     
 12167                           ;src/serial.c: 17:     SPBRG = baudrate;
 12168  004D5A  C01A  FFAF         	movff	SERIAL_Init@baudrate,4015	;volatile
 12169  004D5E                     
 12170                           ;src/serial.c: 20:     TXSTAbits.TX9 = 0;
 12171  004D5E  9CAC               	bcf	172,6,c	;volatile
 12172  004D60                     
 12173                           ;src/serial.c: 21:     TXSTAbits.TXEN = 1;
 12174  004D60  8AAC               	bsf	172,5,c	;volatile
 12175  004D62                     
 12176                           ;src/serial.c: 24:     RCSTAbits.RC9 = 0;
 12177  004D62  9CAB               	bcf	171,6,c	;volatile
 12178  004D64                     
 12179                           ;src/serial.c: 25:     RCSTAbits.CREN = 1;
 12180  004D64  88AB               	bsf	171,4,c	;volatile
 12181  004D66  0012               	return		;funcret
 12182  004D68                     __end_of_SERIAL_Init:
 12183                           	opt callstack 0
 12184                           
 12185 ;; *************** function ___aldiv *****************
 12186 ;; Defined at:
 12187 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12188 ;; Parameters:    Size  Location     Type
 12189 ;;  dividend        4    3[COMRAM] long 
 12190 ;;  divisor         4    7[COMRAM] long 
 12191 ;; Auto vars:     Size  Location     Type
 12192 ;;  quotient        4   13[COMRAM] long 
 12193 ;;  sign            1   12[COMRAM] unsigned char 
 12194 ;;  counter         1   11[COMRAM] unsigned char 
 12195 ;; Return value:  Size  Location     Type
 12196 ;;                  4    3[COMRAM] long 
 12197 ;; Registers used:
 12198 ;;		wreg, status,2, status,0
 12199 ;; Tracked objects:
 12200 ;;		On entry : 0/0
 12201 ;;		On exit  : 0/0
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12204 ;;      Params:         8       0       0       0       0       0       0       0       0
 12205 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12206 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12207 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12208 ;;Total ram usage:       14 bytes
 12209 ;; Hardware stack levels used:    1
 12210 ;; Hardware stack levels required when called:    2
 12211 ;; This function calls:
 12212 ;;		Nothing
 12213 ;; This function is called by:
 12214 ;;		_SERIAL_Init
 12215 ;;		_itoa
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text42
 12220  00436A                     __ptext42:
 12221                           	opt callstack 0
 12222  00436A                     ___aldiv:
 12223                           	opt callstack 26
 12224  00436A  0E00               	movlw	0
 12225  00436C  6E0D               	movwf	___aldiv@sign^0,c
 12226  00436E  BE0B               	btfsc	(___aldiv@divisor+3)^0,7,c
 12227  004370  EFBE  F021         	goto	u6950
 12228  004374  EFBC  F021         	goto	u6951
 12229  004378                     u6951:
 12230  004378  EFC8  F021         	goto	l6581
 12231  00437C                     u6950:
 12232  00437C  1E0B               	comf	(___aldiv@divisor+3)^0,f,c
 12233  00437E  1E0A               	comf	(___aldiv@divisor+2)^0,f,c
 12234  004380  1E09               	comf	(___aldiv@divisor+1)^0,f,c
 12235  004382  6C08               	negf	___aldiv@divisor^0,c
 12236  004384  0E00               	movlw	0
 12237  004386  2209               	addwfc	(___aldiv@divisor+1)^0,f,c
 12238  004388  220A               	addwfc	(___aldiv@divisor+2)^0,f,c
 12239  00438A  220B               	addwfc	(___aldiv@divisor+3)^0,f,c
 12240  00438C  0E01               	movlw	1
 12241  00438E  6E0D               	movwf	___aldiv@sign^0,c
 12242  004390                     l6581:
 12243  004390  BE07               	btfsc	(___aldiv@dividend+3)^0,7,c
 12244  004392  EFCF  F021         	goto	u6960
 12245  004396  EFCD  F021         	goto	u6961
 12246  00439A                     u6961:
 12247  00439A  EFD9  F021         	goto	l6587
 12248  00439E                     u6960:
 12249  00439E  1E07               	comf	(___aldiv@dividend+3)^0,f,c
 12250  0043A0  1E06               	comf	(___aldiv@dividend+2)^0,f,c
 12251  0043A2  1E05               	comf	(___aldiv@dividend+1)^0,f,c
 12252  0043A4  6C04               	negf	___aldiv@dividend^0,c
 12253  0043A6  0E00               	movlw	0
 12254  0043A8  2205               	addwfc	(___aldiv@dividend+1)^0,f,c
 12255  0043AA  2206               	addwfc	(___aldiv@dividend+2)^0,f,c
 12256  0043AC  2207               	addwfc	(___aldiv@dividend+3)^0,f,c
 12257  0043AE  0E01               	movlw	1
 12258  0043B0  1A0D               	xorwf	___aldiv@sign^0,f,c
 12259  0043B2                     l6587:
 12260  0043B2  0E00               	movlw	0
 12261  0043B4  6E0E               	movwf	___aldiv@quotient^0,c
 12262  0043B6  0E00               	movlw	0
 12263  0043B8  6E0F               	movwf	(___aldiv@quotient+1)^0,c
 12264  0043BA  0E00               	movlw	0
 12265  0043BC  6E10               	movwf	(___aldiv@quotient+2)^0,c
 12266  0043BE  0E00               	movlw	0
 12267  0043C0  6E11               	movwf	(___aldiv@quotient+3)^0,c
 12268  0043C2  5008               	movf	___aldiv@divisor^0,w,c
 12269  0043C4  1009               	iorwf	(___aldiv@divisor+1)^0,w,c
 12270  0043C6  100A               	iorwf	(___aldiv@divisor+2)^0,w,c
 12271  0043C8  100B               	iorwf	(___aldiv@divisor+3)^0,w,c
 12272  0043CA  B4D8               	btfsc	status,2,c
 12273  0043CC  EFEA  F021         	goto	u6971
 12274  0043D0  EFEC  F021         	goto	u6970
 12275  0043D4                     u6971:
 12276  0043D4  EF22  F022         	goto	l6609
 12277  0043D8                     u6970:
 12278  0043D8  0E01               	movlw	1
 12279  0043DA  6E0C               	movwf	___aldiv@counter^0,c
 12280  0043DC  EFF6  F021         	goto	l6595
 12281  0043E0                     l6593:
 12282  0043E0  90D8               	bcf	status,0,c
 12283  0043E2  3608               	rlcf	___aldiv@divisor^0,f,c
 12284  0043E4  3609               	rlcf	(___aldiv@divisor+1)^0,f,c
 12285  0043E6  360A               	rlcf	(___aldiv@divisor+2)^0,f,c
 12286  0043E8  360B               	rlcf	(___aldiv@divisor+3)^0,f,c
 12287  0043EA  2A0C               	incf	___aldiv@counter^0,f,c
 12288  0043EC                     l6595:
 12289  0043EC  AE0B               	btfss	(___aldiv@divisor+3)^0,7,c
 12290  0043EE  EFFB  F021         	goto	u6981
 12291  0043F2  EFFD  F021         	goto	u6980
 12292  0043F6                     u6981:
 12293  0043F6  EFF0  F021         	goto	l6593
 12294  0043FA                     u6980:
 12295  0043FA                     l6597:
 12296  0043FA  90D8               	bcf	status,0,c
 12297  0043FC  360E               	rlcf	___aldiv@quotient^0,f,c
 12298  0043FE  360F               	rlcf	(___aldiv@quotient+1)^0,f,c
 12299  004400  3610               	rlcf	(___aldiv@quotient+2)^0,f,c
 12300  004402  3611               	rlcf	(___aldiv@quotient+3)^0,f,c
 12301  004404  5008               	movf	___aldiv@divisor^0,w,c
 12302  004406  5C04               	subwf	___aldiv@dividend^0,w,c
 12303  004408  5009               	movf	(___aldiv@divisor+1)^0,w,c
 12304  00440A  5805               	subwfb	(___aldiv@dividend+1)^0,w,c
 12305  00440C  500A               	movf	(___aldiv@divisor+2)^0,w,c
 12306  00440E  5806               	subwfb	(___aldiv@dividend+2)^0,w,c
 12307  004410  500B               	movf	(___aldiv@divisor+3)^0,w,c
 12308  004412  5807               	subwfb	(___aldiv@dividend+3)^0,w,c
 12309  004414  A0D8               	btfss	status,0,c
 12310  004416  EF0F  F022         	goto	u6991
 12311  00441A  EF11  F022         	goto	u6990
 12312  00441E                     u6991:
 12313  00441E  EF1A  F022         	goto	l6605
 12314  004422                     u6990:
 12315  004422  5008               	movf	___aldiv@divisor^0,w,c
 12316  004424  5E04               	subwf	___aldiv@dividend^0,f,c
 12317  004426  5009               	movf	(___aldiv@divisor+1)^0,w,c
 12318  004428  5A05               	subwfb	(___aldiv@dividend+1)^0,f,c
 12319  00442A  500A               	movf	(___aldiv@divisor+2)^0,w,c
 12320  00442C  5A06               	subwfb	(___aldiv@dividend+2)^0,f,c
 12321  00442E  500B               	movf	(___aldiv@divisor+3)^0,w,c
 12322  004430  5A07               	subwfb	(___aldiv@dividend+3)^0,f,c
 12323  004432  800E               	bsf	___aldiv@quotient^0,0,c
 12324  004434                     l6605:
 12325  004434  90D8               	bcf	status,0,c
 12326  004436  320B               	rrcf	(___aldiv@divisor+3)^0,f,c
 12327  004438  320A               	rrcf	(___aldiv@divisor+2)^0,f,c
 12328  00443A  3209               	rrcf	(___aldiv@divisor+1)^0,f,c
 12329  00443C  3208               	rrcf	___aldiv@divisor^0,f,c
 12330  00443E  2E0C               	decfsz	___aldiv@counter^0,f,c
 12331  004440  EFFD  F021         	goto	l6597
 12332  004444                     l6609:
 12333  004444  500D               	movf	___aldiv@sign^0,w,c
 12334  004446  B4D8               	btfsc	status,2,c
 12335  004448  EF28  F022         	goto	u7001
 12336  00444C  EF2A  F022         	goto	u7000
 12337  004450                     u7001:
 12338  004450  EF32  F022         	goto	l6613
 12339  004454                     u7000:
 12340  004454  1E11               	comf	(___aldiv@quotient+3)^0,f,c
 12341  004456  1E10               	comf	(___aldiv@quotient+2)^0,f,c
 12342  004458  1E0F               	comf	(___aldiv@quotient+1)^0,f,c
 12343  00445A  6C0E               	negf	___aldiv@quotient^0,c
 12344  00445C  0E00               	movlw	0
 12345  00445E  220F               	addwfc	(___aldiv@quotient+1)^0,f,c
 12346  004460  2210               	addwfc	(___aldiv@quotient+2)^0,f,c
 12347  004462  2211               	addwfc	(___aldiv@quotient+3)^0,f,c
 12348  004464                     l6613:
 12349  004464  C00E  F004         	movff	___aldiv@quotient,?___aldiv
 12350  004468  C00F  F005         	movff	___aldiv@quotient+1,?___aldiv+1
 12351  00446C  C010  F006         	movff	___aldiv@quotient+2,?___aldiv+2
 12352  004470  C011  F007         	movff	___aldiv@quotient+3,?___aldiv+3
 12353  004474  0012               	return		;funcret
 12354  004476                     __end_of___aldiv:
 12355                           	opt callstack 0
 12356                           
 12357 ;; *************** function _LCD_Init *****************
 12358 ;; Defined at:
 12359 ;;		line 6 in file "src/lcd.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		wreg, status,2, status,0, cstack
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12373 ;;      Params:         0       0       0       0       0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12375 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12376 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12377 ;;Total ram usage:        1 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:    5
 12380 ;; This function calls:
 12381 ;;		_LCD_SendCmd
 12382 ;; This function is called by:
 12383 ;;		_SYSTEM_Init
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text43
 12388  004B1E                     __ptext43:
 12389                           	opt callstack 0
 12390  004B1E                     _LCD_Init:
 12391                           	opt callstack 24
 12392  004B1E                     
 12393                           ;src/lcd.c: 8:     TRISD = 0x00;
 12394  004B1E  0E00               	movlw	0
 12395  004B20  6E95               	movwf	149,c	;volatile
 12396  004B22                     
 12397                           ;src/lcd.c: 9:     LATDbits.LATD2 = 0;
 12398  004B22  948C               	bcf	140,2,c	;volatile
 12399  004B24                     
 12400                           ;src/lcd.c: 10:     LATDbits.LATD0 = 0;
 12401  004B24  908C               	bcf	140,0,c	;volatile
 12402  004B26                     
 12403                           ;src/lcd.c: 11:     LATDbits.LATD1 = 0;
 12404  004B26  928C               	bcf	140,1,c	;volatile
 12405  004B28                     
 12406                           ;src/lcd.c: 13:     _delay((unsigned long)((15)*(48000000/4000.0)));
 12407  004B28  0EEA               	movlw	234
 12408  004B2A  6E08               	movwf	??_LCD_Init^0,c
 12409  004B2C  0EC3               	movlw	195
 12410  004B2E                     u9897:
 12411  004B2E  2EE8               	decfsz	wreg,f,c
 12412  004B30  D7FE               	bra	u9897
 12413  004B32  2E08               	decfsz	??_LCD_Init^0,f,c
 12414  004B34  D7FC               	bra	u9897
 12415  004B36  F000               	nop	
 12416  004B38                     
 12417                           ;src/lcd.c: 14:     LCD_SendCmd(0x03,0);
 12418  004B38  0E00               	movlw	0
 12419  004B3A  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 12420  004B3C  0E03               	movlw	3
 12421  004B3E  EC1C  F02A         	call	_LCD_SendCmd
 12422  004B42                     
 12423                           ;src/lcd.c: 15:     _delay((unsigned long)((4)*(48000000/4000.0)));
 12424  004B42  0E3F               	movlw	63
 12425  004B44  6E08               	movwf	??_LCD_Init^0,c
 12426  004B46  0E55               	movlw	85
 12427  004B48                     u9907:
 12428  004B48  2EE8               	decfsz	wreg,f,c
 12429  004B4A  D7FE               	bra	u9907
 12430  004B4C  2E08               	decfsz	??_LCD_Init^0,f,c
 12431  004B4E  D7FC               	bra	u9907
 12432  004B50  F000               	nop	
 12433  004B52                     
 12434                           ;src/lcd.c: 16:     LCD_SendCmd(0x03,0);
 12435  004B52  0E00               	movlw	0
 12436  004B54  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 12437  004B56  0E03               	movlw	3
 12438  004B58  EC1C  F02A         	call	_LCD_SendCmd
 12439  004B5C                     
 12440                           ;src/lcd.c: 17:     _delay((unsigned long)((4)*(48000000/4000.0)));
 12441  004B5C  0E3F               	movlw	63
 12442  004B5E  6E08               	movwf	??_LCD_Init^0,c
 12443  004B60  0E55               	movlw	85
 12444  004B62                     u9917:
 12445  004B62  2EE8               	decfsz	wreg,f,c
 12446  004B64  D7FE               	bra	u9917
 12447  004B66  2E08               	decfsz	??_LCD_Init^0,f,c
 12448  004B68  D7FC               	bra	u9917
 12449  004B6A  F000               	nop	
 12450  004B6C                     
 12451                           ;src/lcd.c: 18:     LCD_SendCmd(0x03,0);
 12452  004B6C  0E00               	movlw	0
 12453  004B6E  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 12454  004B70  0E03               	movlw	3
 12455  004B72  EC1C  F02A         	call	_LCD_SendCmd
 12456  004B76                     
 12457                           ;src/lcd.c: 19:     LCD_SendCmd(0x02,0);
 12458  004B76  0E00               	movlw	0
 12459  004B78  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 12460  004B7A  0E02               	movlw	2
 12461  004B7C  EC1C  F02A         	call	_LCD_SendCmd
 12462  004B80                     
 12463                           ;src/lcd.c: 20:     LCD_SendCmd(0x28,1);
 12464  004B80  0E01               	movlw	1
 12465  004B82  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 12466  004B84  0E28               	movlw	40
 12467  004B86  EC1C  F02A         	call	_LCD_SendCmd
 12468  004B8A                     
 12469                           ;src/lcd.c: 21:     LCD_SendCmd(0x0E,1);
 12470  004B8A  0E01               	movlw	1
 12471  004B8C  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 12472  004B8E  0E0E               	movlw	14
 12473  004B90  EC1C  F02A         	call	_LCD_SendCmd
 12474  004B94                     
 12475                           ;src/lcd.c: 22:     LCD_SendCmd(0x01,1);
 12476  004B94  0E01               	movlw	1
 12477  004B96  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 12478  004B98  0E01               	movlw	1
 12479  004B9A  EC1C  F02A         	call	_LCD_SendCmd
 12480  004B9E                     
 12481                           ;src/lcd.c: 23:     _delay((unsigned long)((1)*(48000000/4000.0)));
 12482  004B9E  0E10               	movlw	16
 12483  004BA0  6E08               	movwf	??_LCD_Init^0,c
 12484  004BA2  0E94               	movlw	148
 12485  004BA4                     u9927:
 12486  004BA4  2EE8               	decfsz	wreg,f,c
 12487  004BA6  D7FE               	bra	u9927
 12488  004BA8  2E08               	decfsz	??_LCD_Init^0,f,c
 12489  004BAA  D7FC               	bra	u9927
 12490  004BAC  D000               	nop2	
 12491  004BAE                     
 12492                           ;src/lcd.c: 24:     LCD_SendCmd(0x06,1);
 12493  004BAE  0E01               	movlw	1
 12494  004BB0  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 12495  004BB2  0E06               	movlw	6
 12496  004BB4  EC1C  F02A         	call	_LCD_SendCmd
 12497  004BB8                     
 12498                           ;src/lcd.c: 25:     LCD_SendCmd(0x80,1);
 12499  004BB8  0E01               	movlw	1
 12500  004BBA  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 12501  004BBC  0E80               	movlw	128
 12502  004BBE  EC1C  F02A         	call	_LCD_SendCmd
 12503  004BC2  0012               	return		;funcret
 12504  004BC4                     __end_of_LCD_Init:
 12505                           	opt callstack 0
 12506                           
 12507 ;; *************** function _KBD_Init *****************
 12508 ;; Defined at:
 12509 ;;		line 13 in file "src/kbd.c"
 12510 ;; Parameters:    Size  Location     Type
 12511 ;;		None
 12512 ;; Auto vars:     Size  Location     Type
 12513 ;;		None
 12514 ;; Return value:  Size  Location     Type
 12515 ;;                  1    wreg      void 
 12516 ;; Registers used:
 12517 ;;		wreg, status,2
 12518 ;; Tracked objects:
 12519 ;;		On entry : 0/0
 12520 ;;		On exit  : 0/0
 12521 ;;		Unchanged: 0/0
 12522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12523 ;;      Params:         0       0       0       0       0       0       0       0       0
 12524 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12525 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12526 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12527 ;;Total ram usage:        0 bytes
 12528 ;; Hardware stack levels used:    1
 12529 ;; Hardware stack levels required when called:    2
 12530 ;; This function calls:
 12531 ;;		Nothing
 12532 ;; This function is called by:
 12533 ;;		_SYSTEM_Init
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text44
 12538  00554E                     __ptext44:
 12539                           	opt callstack 0
 12540  00554E                     _KBD_Init:
 12541                           	opt callstack 27
 12542  00554E                     
 12543                           ;src/kbd.c: 15:     PORTB = 0x00;
 12544  00554E  0E00               	movlw	0
 12545  005550  6E81               	movwf	129,c	;volatile
 12546                           
 12547                           ;src/kbd.c: 16:     TRISB = 0XF0;
 12548  005552  0EF0               	movlw	240
 12549  005554  6E93               	movwf	147,c	;volatile
 12550                           
 12551                           ;src/kbd.c: 17:     LATB = 0x00;
 12552  005556  0E00               	movlw	0
 12553  005558  6E8A               	movwf	138,c	;volatile
 12554  00555A                     
 12555                           ;src/kbd.c: 18:     INTCON2bits.RBPU = 0;
 12556  00555A  9EF1               	bcf	241,7,c	;volatile
 12557  00555C  0012               	return		;funcret
 12558  00555E                     __end_of_KBD_Init:
 12559                           	opt callstack 0
 12560                           
 12561 ;; *************** function _INTERRUPT_Tmr0 *****************
 12562 ;; Defined at:
 12563 ;;		line 44 in file "src/interrupts.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;		None
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;		None
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  1    wreg      void 
 12570 ;; Registers used:
 12571 ;;		None
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0
 12578 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12580 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12581 ;;Total ram usage:        0 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    2
 12584 ;; This function calls:
 12585 ;;		Nothing
 12586 ;; This function is called by:
 12587 ;;		_SYSTEM_Init
 12588 ;; This function uses a non-reentrant model
 12589 ;;
 12590                           
 12591                           	psect	text45
 12592  005566                     __ptext45:
 12593                           	opt callstack 0
 12594  005566                     _INTERRUPT_Tmr0:
 12595                           	opt callstack 27
 12596  005566                     
 12597                           ;src/interrupts.c: 46:  INTCONbits.TMR0IE = 1;
 12598  005566  8AF2               	bsf	242,5,c	;volatile
 12599                           
 12600                           ;src/interrupts.c: 47:  INTCONbits.TMR0IF = 0;
 12601  005568  94F2               	bcf	242,2,c	;volatile
 12602  00556A  0012               	return		;funcret
 12603  00556C                     __end_of_INTERRUPT_Tmr0:
 12604                           	opt callstack 0
 12605                           
 12606 ;; *************** function _INTERRUPT_Init *****************
 12607 ;; Defined at:
 12608 ;;		line 3 in file "src/interrupts.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;		None
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1    wreg      void 
 12615 ;; Registers used:
 12616 ;;		None
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12622 ;;      Params:         0       0       0       0       0       0       0       0       0
 12623 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12625 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12626 ;;Total ram usage:        0 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    2
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_SYSTEM_Init
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text46
 12637  00555E                     __ptext46:
 12638                           	opt callstack 0
 12639  00555E                     _INTERRUPT_Init:
 12640                           	opt callstack 27
 12641  00555E                     
 12642                           ;src/interrupts.c: 5:  RCONbits.IPEN = 0;
 12643  00555E  9ED0               	bcf	208,7,c	;volatile
 12644                           
 12645                           ;src/interrupts.c: 7:     INTCONbits.GIEH = 1;
 12646  005560  8EF2               	bsf	242,7,c	;volatile
 12647                           
 12648                           ;src/interrupts.c: 8:     INTCONbits.GIEL = 1;
 12649  005562  8CF2               	bsf	242,6,c	;volatile
 12650  005564  0012               	return		;funcret
 12651  005566                     __end_of_INTERRUPT_Init:
 12652                           	opt callstack 0
 12653                           
 12654 ;; *************** function _BLED_Enable *****************
 12655 ;; Defined at:
 12656 ;;		line 79 in file "src/leds.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;  biled           1    wreg     enum E3166
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;  biled           1    5[COMRAM] enum E3166
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  1    wreg      void 
 12663 ;; Registers used:
 12664 ;;		wreg, status,2, status,0
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12670 ;;      Params:         0       0       0       0       0       0       0       0       0
 12671 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12672 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12673 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12674 ;;Total ram usage:        3 bytes
 12675 ;; Hardware stack levels used:    1
 12676 ;; Hardware stack levels required when called:    2
 12677 ;; This function calls:
 12678 ;;		Nothing
 12679 ;; This function is called by:
 12680 ;;		_SYSTEM_Init
 12681 ;; This function uses a non-reentrant model
 12682 ;;
 12683                           
 12684                           	psect	text47
 12685  005106                     __ptext47:
 12686                           	opt callstack 0
 12687  005106                     _BLED_Enable:
 12688                           	opt callstack 27
 12689                           
 12690                           ;incstack = 0
 12691                           ;BLED_Enable@biled stored from wreg
 12692  005106  6E06               	movwf	BLED_Enable@biled^0,c
 12693  005108                     
 12694                           ;src/leds.c: 79: void BLED_Enable(BILED biled);src/leds.c: 80: {;src/leds.c: 81:     swi
      +                          tch (biled)
 12695  005108  EF92  F028         	goto	l5161
 12696  00510C                     l292:
 12697                           
 12698                           ;src/leds.c: 84:             TRISEbits.RE1 = 0;
 12699  00510C  9296               	bcf	150,1,c	;volatile
 12700                           
 12701                           ;src/leds.c: 85:             TRISEbits.RE0 = 0;
 12702  00510E  9096               	bcf	150,0,c	;volatile
 12703                           
 12704                           ;src/leds.c: 86:             LATEbits.LATE1 = 0;
 12705  005110  928D               	bcf	141,1,c	;volatile
 12706                           
 12707                           ;src/leds.c: 87:             LATEbits.LATE0 = 0;
 12708  005112  908D               	bcf	141,0,c	;volatile
 12709                           
 12710                           ;src/leds.c: 88:             break;
 12711  005114  EFA7  F028         	goto	l295
 12712  005118                     l294:
 12713                           
 12714                           ;src/leds.c: 90:             TRISCbits.RC2 = 0;
 12715  005118  9494               	bcf	148,2,c	;volatile
 12716                           
 12717                           ;src/leds.c: 91:             TRISCbits.RC1 = 0;
 12718  00511A  9294               	bcf	148,1,c	;volatile
 12719                           
 12720                           ;src/leds.c: 92:             LATCbits.LATC2 = 0;
 12721  00511C  948B               	bcf	139,2,c	;volatile
 12722                           
 12723                           ;src/leds.c: 93:             LATCbits.LATC1 = 0;
 12724  00511E  928B               	bcf	139,1,c	;volatile
 12725                           
 12726                           ;src/leds.c: 94:     }
 12727  005120  EFA7  F028         	goto	l295
 12728  005124                     l5161:
 12729  005124  5006               	movf	BLED_Enable@biled^0,w,c
 12730  005126  6E04               	movwf	??_BLED_Enable^0,c
 12731  005128  6A05               	clrf	(??_BLED_Enable+1)^0,c
 12732                           
 12733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12734                           ; Switch size 1, requested type "simple"
 12735                           ; Number of cases is 1, Range of values is 0 to 0
 12736                           ; switch strategies available:
 12737                           ; Name         Instructions Cycles
 12738                           ; simple_byte            4     3 (average)
 12739                           ;	Chosen strategy is simple_byte
 12740  00512A  5005               	movf	(??_BLED_Enable+1)^0,w,c
 12741  00512C  0A00               	xorlw	0	; case 0
 12742  00512E  B4D8               	btfsc	status,2,c
 12743  005130  EF9C  F028         	goto	l8659
 12744  005134  EFA7  F028         	goto	l295
 12745  005138                     l8659:
 12746                           
 12747                           ; Switch size 1, requested type "simple"
 12748                           ; Number of cases is 2, Range of values is 0 to 1
 12749                           ; switch strategies available:
 12750                           ; Name         Instructions Cycles
 12751                           ; simple_byte            7     4 (average)
 12752                           ;	Chosen strategy is simple_byte
 12753  005138  5004               	movf	??_BLED_Enable^0,w,c
 12754  00513A  0A00               	xorlw	0	; case 0
 12755  00513C  B4D8               	btfsc	status,2,c
 12756  00513E  EF86  F028         	goto	l292
 12757  005142  0A01               	xorlw	1	; case 1
 12758  005144  B4D8               	btfsc	status,2,c
 12759  005146  EF8C  F028         	goto	l294
 12760  00514A  EFA7  F028         	goto	l295
 12761  00514E                     l295:
 12762  00514E  0012               	return		;funcret
 12763  005150                     __end_of_BLED_Enable:
 12764                           	opt callstack 0
 12765                           
 12766 ;; *************** function _LCD_Write *****************
 12767 ;; Defined at:
 12768 ;;		line 153 in file "src/lcd.c"
 12769 ;; Parameters:    Size  Location     Type
 12770 ;;  str             2   14[COMRAM] PTR unsigned char 
 12771 ;;		 -> STR_9(15), STR_6(16), STR_4(31), STR_2(29), 
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;  i               2   20[COMRAM] int 
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  1    wreg      void 
 12776 ;; Registers used:
 12777 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12783 ;;      Params:         2       0       0       0       0       0       0       0       0
 12784 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12785 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12786 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12787 ;;Total ram usage:        8 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; Hardware stack levels required when called:    7
 12790 ;; This function calls:
 12791 ;;		_LCD_SetRowCol
 12792 ;;		_LCD_WriteChar
 12793 ;; This function is called by:
 12794 ;;		_main
 12795 ;; This function uses a non-reentrant model
 12796 ;;
 12797                           
 12798                           	psect	text48
 12799  00483C                     __ptext48:
 12800                           	opt callstack 0
 12801  00483C                     _LCD_Write:
 12802                           	opt callstack 23
 12803  00483C                     
 12804                           ;src/lcd.c: 153: void LCD_Write(char *str);src/lcd.c: 154: {;src/lcd.c: 155:     int i =
      +                           0;
 12805  00483C  0E00               	movlw	0
 12806  00483E  6E16               	movwf	(LCD_Write@i+1)^0,c
 12807  004840  0E00               	movlw	0
 12808  004842  6E15               	movwf	LCD_Write@i^0,c
 12809                           
 12810                           ;src/lcd.c: 156:     while(str[i] != 0)
 12811  004844  EF6B  F024         	goto	l6243
 12812  004848                     l6229:
 12813                           
 12814                           ;src/lcd.c: 161:                 lcd_r ^= 1;
 12815  004848  0E01               	movlw	1
 12816  00484A  1A3A               	xorwf	_lcd_r^0,f,c
 12817  00484C                     
 12818                           ;src/lcd.c: 162:                 LCD_SetRowCol(lcd_r, lcd_c);
 12819  00484C  C0C6  F008         	movff	_lcd_c,LCD_SetRowCol@col
 12820  004850  503A               	movf	_lcd_r^0,w,c
 12821  004852  ECA8  F028         	call	_LCD_SetRowCol
 12822                           
 12823                           ;src/lcd.c: 163:                 break;
 12824  004856  EF69  F024         	goto	l6241
 12825  00485A                     l6233:
 12826                           
 12827                           ;src/lcd.c: 165:                 lcd_c = 0;
 12828  00485A  0E00               	movlw	0
 12829  00485C  0100               	movlb	0	; () banked
 12830  00485E  6FC7               	movwf	(_lcd_c+1)& (0+255),b
 12831  004860  0E00               	movlw	0
 12832  004862  6FC6               	movwf	_lcd_c& (0+255),b
 12833  004864                     
 12834                           ; BSR set to: 0
 12835                           ;src/lcd.c: 166:                 LCD_SetRowCol(lcd_r, lcd_c);
 12836  004864  C0C6  F008         	movff	_lcd_c,LCD_SetRowCol@col
 12837  004868  503A               	movf	_lcd_r^0,w,c
 12838  00486A  ECA8  F028         	call	_LCD_SetRowCol
 12839                           
 12840                           ;src/lcd.c: 167:                 break;
 12841  00486E  EF69  F024         	goto	l6241
 12842  004872                     l6237:
 12843                           
 12844                           ;src/lcd.c: 169:                 LCD_WriteChar(str[i]);
 12845  004872  5015               	movf	LCD_Write@i^0,w,c
 12846  004874  240F               	addwf	LCD_Write@str^0,w,c
 12847  004876  6E11               	movwf	??_LCD_Write^0,c
 12848  004878  5016               	movf	(LCD_Write@i+1)^0,w,c
 12849  00487A  2010               	addwfc	(LCD_Write@str+1)^0,w,c
 12850  00487C  6E12               	movwf	(??_LCD_Write+1)^0,c
 12851  00487E  C011  FFF6         	movff	??_LCD_Write,tblptrl
 12852  004882  C012  FFF7         	movff	??_LCD_Write+1,tblptrh
 12853  004886                     	if	0	;tblptru may be non-zero
 12854  004886                     	endif
 12855  004886                     	if	0	;tblptru may be non-zero
 12856  004886                     	endif
 12857  004886  0008               	tblrd		*
 12858  004888  50F5               	movf	tablat,w,c
 12859  00488A  EC37  F029         	call	_LCD_WriteChar
 12860                           
 12861                           ;src/lcd.c: 170:         }
 12862  00488E  EF69  F024         	goto	l6241
 12863  004892                     l6239:
 12864  004892  5015               	movf	LCD_Write@i^0,w,c
 12865  004894  240F               	addwf	LCD_Write@str^0,w,c
 12866  004896  6E11               	movwf	??_LCD_Write^0,c
 12867  004898  5016               	movf	(LCD_Write@i+1)^0,w,c
 12868  00489A  2010               	addwfc	(LCD_Write@str+1)^0,w,c
 12869  00489C  6E12               	movwf	(??_LCD_Write+1)^0,c
 12870  00489E  C011  FFF6         	movff	??_LCD_Write,tblptrl
 12871  0048A2  C012  FFF7         	movff	??_LCD_Write+1,tblptrh
 12872  0048A6                     	if	0	;tblptru may be non-zero
 12873  0048A6                     	endif
 12874  0048A6                     	if	0	;tblptru may be non-zero
 12875  0048A6                     	endif
 12876  0048A6  0008               	tblrd		*
 12877  0048A8  50F5               	movf	tablat,w,c
 12878  0048AA  6E13               	movwf	(??_LCD_Write+2)^0,c
 12879  0048AC  6A14               	clrf	(??_LCD_Write+3)^0,c
 12880                           
 12881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12882                           ; Switch size 1, requested type "simple"
 12883                           ; Number of cases is 1, Range of values is 0 to 0
 12884                           ; switch strategies available:
 12885                           ; Name         Instructions Cycles
 12886                           ; simple_byte            4     3 (average)
 12887                           ;	Chosen strategy is simple_byte
 12888  0048AE  5014               	movf	(??_LCD_Write+3)^0,w,c
 12889  0048B0  0A00               	xorlw	0	; case 0
 12890  0048B2  B4D8               	btfsc	status,2,c
 12891  0048B4  EF5E  F024         	goto	l8661
 12892  0048B8  EF39  F024         	goto	l6237
 12893  0048BC                     l8661:
 12894                           
 12895                           ; Switch size 1, requested type "simple"
 12896                           ; Number of cases is 2, Range of values is 10 to 13
 12897                           ; switch strategies available:
 12898                           ; Name         Instructions Cycles
 12899                           ; simple_byte            7     4 (average)
 12900                           ;	Chosen strategy is simple_byte
 12901  0048BC  5013               	movf	(??_LCD_Write+2)^0,w,c
 12902  0048BE  0A0A               	xorlw	10	; case 10
 12903  0048C0  B4D8               	btfsc	status,2,c
 12904  0048C2  EF24  F024         	goto	l6229
 12905  0048C6  0A07               	xorlw	7	; case 13
 12906  0048C8  B4D8               	btfsc	status,2,c
 12907  0048CA  EF2D  F024         	goto	l6233
 12908  0048CE  EF39  F024         	goto	l6237
 12909  0048D2                     l6241:
 12910                           
 12911                           ;src/lcd.c: 171:         i++;
 12912  0048D2  4A15               	infsnz	LCD_Write@i^0,f,c
 12913  0048D4  2A16               	incf	(LCD_Write@i+1)^0,f,c
 12914  0048D6                     l6243:
 12915                           
 12916                           ;src/lcd.c: 156:     while(str[i] != 0)
 12917  0048D6  5015               	movf	LCD_Write@i^0,w,c
 12918  0048D8  240F               	addwf	LCD_Write@str^0,w,c
 12919  0048DA  6E11               	movwf	??_LCD_Write^0,c
 12920  0048DC  5016               	movf	(LCD_Write@i+1)^0,w,c
 12921  0048DE  2010               	addwfc	(LCD_Write@str+1)^0,w,c
 12922  0048E0  6E12               	movwf	(??_LCD_Write+1)^0,c
 12923  0048E2  C011  FFF6         	movff	??_LCD_Write,tblptrl
 12924  0048E6  C012  FFF7         	movff	??_LCD_Write+1,tblptrh
 12925  0048EA                     	if	0	;tblptru may be non-zero
 12926  0048EA                     	endif
 12927  0048EA                     	if	0	;tblptru may be non-zero
 12928  0048EA                     	endif
 12929  0048EA  0008               	tblrd		*
 12930  0048EC  50F5               	movf	tablat,w,c
 12931  0048EE  0900               	iorlw	0
 12932  0048F0  A4D8               	btfss	status,2,c
 12933  0048F2  EF7D  F024         	goto	u6811
 12934  0048F6  EF7F  F024         	goto	u6810
 12935  0048FA                     u6811:
 12936  0048FA  EF49  F024         	goto	l6239
 12937  0048FE                     u6810:
 12938  0048FE  0012               	return		;funcret
 12939  004900                     __end_of_LCD_Write:
 12940                           	opt callstack 0
 12941                           
 12942 ;; *************** function _LCD_WriteChar *****************
 12943 ;; Defined at:
 12944 ;;		line 62 in file "src/lcd.c"
 12945 ;; Parameters:    Size  Location     Type
 12946 ;;  wData           1    wreg     unsigned char 
 12947 ;; Auto vars:     Size  Location     Type
 12948 ;;  wData           1   13[COMRAM] unsigned char 
 12949 ;; Return value:  Size  Location     Type
 12950 ;;                  1    wreg      void 
 12951 ;; Registers used:
 12952 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12953 ;; Tracked objects:
 12954 ;;		On entry : 0/0
 12955 ;;		On exit  : 0/0
 12956 ;;		Unchanged: 0/0
 12957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12958 ;;      Params:         0       0       0       0       0       0       0       0       0
 12959 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12960 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12961 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12962 ;;Total ram usage:        1 bytes
 12963 ;; Hardware stack levels used:    1
 12964 ;; Hardware stack levels required when called:    6
 12965 ;; This function calls:
 12966 ;;		_LCD_RH
 12967 ;;		_LCD_SetRowCol
 12968 ;;		_LCD_WriteByte
 12969 ;; This function is called by:
 12970 ;;		_LCD_Write
 12971 ;; This function uses a non-reentrant model
 12972 ;;
 12973                           
 12974                           	psect	text49
 12975  00526E                     __ptext49:
 12976                           	opt callstack 0
 12977  00526E                     _LCD_WriteChar:
 12978                           	opt callstack 23
 12979                           
 12980                           ;incstack = 0
 12981                           ;LCD_WriteChar@wData stored from wreg
 12982  00526E  6E0E               	movwf	LCD_WriteChar@wData^0,c
 12983  005270                     
 12984                           ;src/lcd.c: 62: void LCD_WriteChar(char wData);src/lcd.c: 63: {;src/lcd.c: 65:     LCD_W
      +                          riteByte(wData);
 12985  005270  500E               	movf	LCD_WriteChar@wData^0,w,c
 12986  005272  EC7C  F02A         	call	_LCD_WriteByte
 12987  005276                     
 12988                           ;src/lcd.c: 66:     lcd_c++;
 12989  005276  0100               	movlb	0	; () banked
 12990  005278  4BC6               	infsnz	_lcd_c& (0+255),f,b
 12991  00527A  2BC7               	incf	(_lcd_c+1)& (0+255),f,b
 12992  00527C                     
 12993                           ; BSR set to: 0
 12994                           ;src/lcd.c: 68:     if (lcd_c == 16 )
 12995  00527C  0E10               	movlw	16
 12996  00527E  19C6               	xorwf	_lcd_c& (0+255),w,b
 12997  005280  11C7               	iorwf	(_lcd_c+1)& (0+255),w,b
 12998  005282  A4D8               	btfss	status,2,c
 12999  005284  EF46  F029         	goto	u6221
 13000  005288  EF48  F029         	goto	u6220
 13001  00528C                     u6221:
 13002  00528C  EF59  F029         	goto	l817
 13003  005290                     u6220:
 13004  005290                     
 13005                           ; BSR set to: 0
 13006                           ;src/lcd.c: 69:     {;src/lcd.c: 70:         if(lcd_r == 0)
 13007  005290  503A               	movf	_lcd_r^0,w,c
 13008  005292  A4D8               	btfss	status,2,c
 13009  005294  EF4E  F029         	goto	u6231
 13010  005298  EF50  F029         	goto	u6230
 13011  00529C                     u6231:
 13012  00529C  EF57  F029         	goto	l5791
 13013  0052A0                     u6230:
 13014  0052A0                     
 13015                           ; BSR set to: 0
 13016                           ;src/lcd.c: 71:             LCD_SetRowCol(1,0);
 13017  0052A0  0E00               	movlw	0
 13018  0052A2  6E08               	movwf	LCD_SetRowCol@col^0,c
 13019  0052A4  0E01               	movlw	1
 13020  0052A6  ECA8  F028         	call	_LCD_SetRowCol
 13021  0052AA  EF59  F029         	goto	l817
 13022  0052AE                     l5791:
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;src/lcd.c: 73:             LCD_RH();
 13026  0052AE  ECF2  F029         	call	_LCD_RH	;wreg free
 13027  0052B2                     l817:
 13028  0052B2  0012               	return		;funcret
 13029  0052B4                     __end_of_LCD_WriteChar:
 13030                           	opt callstack 0
 13031                           
 13032 ;; *************** function _LCD_RH *****************
 13033 ;; Defined at:
 13034 ;;		line 85 in file "src/lcd.c"
 13035 ;; Parameters:    Size  Location     Type
 13036 ;;		None
 13037 ;; Auto vars:     Size  Location     Type
 13038 ;;		None
 13039 ;; Return value:  Size  Location     Type
 13040 ;;                  1    wreg      void 
 13041 ;; Registers used:
 13042 ;;		wreg, status,2, status,0, cstack
 13043 ;; Tracked objects:
 13044 ;;		On entry : 0/0
 13045 ;;		On exit  : 0/0
 13046 ;;		Unchanged: 0/0
 13047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13048 ;;      Params:         0       0       0       0       0       0       0       0       0
 13049 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13050 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13051 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13052 ;;Total ram usage:        1 bytes
 13053 ;; Hardware stack levels used:    1
 13054 ;; Hardware stack levels required when called:    5
 13055 ;; This function calls:
 13056 ;;		_LCD_SendCmd
 13057 ;; This function is called by:
 13058 ;;		_LCD_WriteChar
 13059 ;; This function uses a non-reentrant model
 13060 ;;
 13061                           
 13062                           	psect	text50
 13063  0053E4                     __ptext50:
 13064                           	opt callstack 0
 13065  0053E4                     _LCD_RH:
 13066                           	opt callstack 23
 13067  0053E4                     
 13068                           ;src/lcd.c: 87:     LCD_SendCmd(0x02,1);
 13069  0053E4  0E01               	movlw	1
 13070  0053E6  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 13071  0053E8  0E02               	movlw	2
 13072  0053EA  EC1C  F02A         	call	_LCD_SendCmd
 13073  0053EE                     
 13074                           ;src/lcd.c: 88:     _delay((unsigned long)((1)*(48000000/4000.0)));
 13075  0053EE  0E10               	movlw	16
 13076  0053F0  6E08               	movwf	??_LCD_RH^0,c
 13077  0053F2  0E94               	movlw	148
 13078  0053F4                     u9937:
 13079  0053F4  2EE8               	decfsz	wreg,f,c
 13080  0053F6  D7FE               	bra	u9937
 13081  0053F8  2E08               	decfsz	??_LCD_RH^0,f,c
 13082  0053FA  D7FC               	bra	u9937
 13083  0053FC  D000               	nop2	
 13084  0053FE                     
 13085                           ;src/lcd.c: 89:     lcd_c = 0;
 13086  0053FE  0E00               	movlw	0
 13087  005400  0100               	movlb	0	; () banked
 13088  005402  6FC7               	movwf	(_lcd_c+1)& (0+255),b
 13089  005404  0E00               	movlw	0
 13090  005406  6FC6               	movwf	_lcd_c& (0+255),b
 13091  005408                     
 13092                           ; BSR set to: 0
 13093                           ;src/lcd.c: 90:     lcd_r = 0;
 13094  005408  0E00               	movlw	0
 13095  00540A  6E3A               	movwf	_lcd_r^0,c
 13096  00540C                     
 13097                           ; BSR set to: 0
 13098  00540C  0012               	return		;funcret
 13099  00540E                     __end_of_LCD_RH:
 13100                           	opt callstack 0
 13101                           
 13102 ;; *************** function _LCD_DisplayCtrl *****************
 13103 ;; Defined at:
 13104 ;;		line 94 in file "src/lcd.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  disOn           1    wreg     _Bool 
 13107 ;;  curOn           1    7[COMRAM] _Bool 
 13108 ;;  curBlink        1    8[COMRAM] _Bool 
 13109 ;; Auto vars:     Size  Location     Type
 13110 ;;  disOn           1    9[COMRAM] _Bool 
 13111 ;;  cmd             1   10[COMRAM] unsigned char 
 13112 ;; Return value:  Size  Location     Type
 13113 ;;                  1    wreg      void 
 13114 ;; Registers used:
 13115 ;;		wreg, status,2, status,0, cstack
 13116 ;; Tracked objects:
 13117 ;;		On entry : 0/0
 13118 ;;		On exit  : 0/0
 13119 ;;		Unchanged: 0/0
 13120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13121 ;;      Params:         2       0       0       0       0       0       0       0       0
 13122 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13123 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13124 ;;      Totals:         4       0       0       0       0       0       0       0       0
 13125 ;;Total ram usage:        4 bytes
 13126 ;; Hardware stack levels used:    1
 13127 ;; Hardware stack levels required when called:    5
 13128 ;; This function calls:
 13129 ;;		_LCD_SendCmd
 13130 ;; This function is called by:
 13131 ;;		_main
 13132 ;; This function uses a non-reentrant model
 13133 ;;
 13134                           
 13135                           	psect	text51
 13136  0054D4                     __ptext51:
 13137                           	opt callstack 0
 13138  0054D4                     _LCD_DisplayCtrl:
 13139                           	opt callstack 25
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;incstack = 0
 13143                           ;LCD_DisplayCtrl@disOn stored from wreg
 13144  0054D4  6E0A               	movwf	LCD_DisplayCtrl@disOn^0,c
 13145  0054D6                     
 13146                           ;src/lcd.c: 94: void LCD_DisplayCtrl(_Bool disOn, _Bool curOn, _Bool curBlink);src/lcd.c
      +                          : 95: {;src/lcd.c: 96:     uint8_t cmd = 0b00001000;
 13147  0054D6  0E08               	movlw	8
 13148  0054D8  6E0B               	movwf	LCD_DisplayCtrl@cmd^0,c
 13149  0054DA                     
 13150                           ;src/lcd.c: 97:     cmd |= (disOn << 2);
 13151  0054DA  440A               	rlncf	LCD_DisplayCtrl@disOn^0,w,c
 13152  0054DC  46E8               	rlncf	wreg,f,c
 13153  0054DE  0BFC               	andlw	252
 13154  0054E0  120B               	iorwf	LCD_DisplayCtrl@cmd^0,f,c
 13155  0054E2                     
 13156                           ;src/lcd.c: 98:     cmd |= (curOn << 1);
 13157  0054E2  5008               	movf	LCD_DisplayCtrl@curOn^0,w,c
 13158  0054E4  2408               	addwf	LCD_DisplayCtrl@curOn^0,w,c
 13159  0054E6  120B               	iorwf	LCD_DisplayCtrl@cmd^0,f,c
 13160  0054E8                     
 13161                           ;src/lcd.c: 99:     cmd |= (curBlink << 0);
 13162  0054E8  5009               	movf	LCD_DisplayCtrl@curBlink^0,w,c
 13163  0054EA  120B               	iorwf	LCD_DisplayCtrl@cmd^0,f,c
 13164  0054EC                     
 13165                           ;src/lcd.c: 100:     LCD_SendCmd(cmd,1);
 13166  0054EC  0E01               	movlw	1
 13167  0054EE  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 13168  0054F0  500B               	movf	LCD_DisplayCtrl@cmd^0,w,c
 13169  0054F2  EC1C  F02A         	call	_LCD_SendCmd
 13170  0054F6  0012               	return		;funcret
 13171  0054F8                     __end_of_LCD_DisplayCtrl:
 13172                           	opt callstack 0
 13173                           
 13174 ;; *************** function _LCD_CLS *****************
 13175 ;; Defined at:
 13176 ;;		line 77 in file "src/lcd.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;		None
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;		None
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  1    wreg      void 
 13183 ;; Registers used:
 13184 ;;		wreg, status,2, status,0, cstack
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13190 ;;      Params:         0       0       0       0       0       0       0       0       0
 13191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13192 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13193 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13194 ;;Total ram usage:        1 bytes
 13195 ;; Hardware stack levels used:    1
 13196 ;; Hardware stack levels required when called:    5
 13197 ;; This function calls:
 13198 ;;		_LCD_SendCmd
 13199 ;; This function is called by:
 13200 ;;		_main
 13201 ;; This function uses a non-reentrant model
 13202 ;;
 13203                           
 13204                           	psect	text52
 13205  00540E                     __ptext52:
 13206                           	opt callstack 0
 13207  00540E                     _LCD_CLS:
 13208                           	opt callstack 25
 13209  00540E                     
 13210                           ;src/lcd.c: 79:     LCD_SendCmd(0x01,1);
 13211  00540E  0E01               	movlw	1
 13212  005410  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 13213  005412  0E01               	movlw	1
 13214  005414  EC1C  F02A         	call	_LCD_SendCmd
 13215  005418                     
 13216                           ;src/lcd.c: 80:     _delay((unsigned long)((1)*(48000000/4000.0)));
 13217  005418  0E10               	movlw	16
 13218  00541A  6E08               	movwf	??_LCD_CLS^0,c
 13219  00541C  0E94               	movlw	148
 13220  00541E                     u9947:
 13221  00541E  2EE8               	decfsz	wreg,f,c
 13222  005420  D7FE               	bra	u9947
 13223  005422  2E08               	decfsz	??_LCD_CLS^0,f,c
 13224  005424  D7FC               	bra	u9947
 13225  005426  D000               	nop2	
 13226  005428                     
 13227                           ;src/lcd.c: 81:     lcd_c = 0;
 13228  005428  0E00               	movlw	0
 13229  00542A  0100               	movlb	0	; () banked
 13230  00542C  6FC7               	movwf	(_lcd_c+1)& (0+255),b
 13231  00542E  0E00               	movlw	0
 13232  005430  6FC6               	movwf	_lcd_c& (0+255),b
 13233  005432                     
 13234                           ; BSR set to: 0
 13235                           ;src/lcd.c: 82:     lcd_r = 0;
 13236  005432  0E00               	movlw	0
 13237  005434  6E3A               	movwf	_lcd_r^0,c
 13238  005436                     
 13239                           ; BSR set to: 0
 13240  005436  0012               	return		;funcret
 13241  005438                     __end_of_LCD_CLS:
 13242                           	opt callstack 0
 13243                           
 13244 ;; *************** function _KBD_InChar *****************
 13245 ;; Defined at:
 13246 ;;		line 66 in file "src/kbd.c"
 13247 ;; Parameters:    Size  Location     Type
 13248 ;;		None
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;  newChar         1    3[COMRAM] unsigned char 
 13251 ;; Return value:  Size  Location     Type
 13252 ;;                  1    wreg      void 
 13253 ;; Registers used:
 13254 ;;		wreg, status,2, status,0
 13255 ;; Tracked objects:
 13256 ;;		On entry : 0/0
 13257 ;;		On exit  : 0/0
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13260 ;;      Params:         0       0       0       0       0       0       0       0       0
 13261 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13262 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13263 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13264 ;;Total ram usage:        1 bytes
 13265 ;; Hardware stack levels used:    1
 13266 ;; Hardware stack levels required when called:    2
 13267 ;; This function calls:
 13268 ;;		Nothing
 13269 ;; This function is called by:
 13270 ;;		_main
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           	psect	text53
 13275  00506A                     __ptext53:
 13276                           	opt callstack 0
 13277  00506A                     _KBD_InChar:
 13278                           	opt callstack 28
 13279  00506A                     l212:
 13280  00506A                     
 13281                           ;src/kbd.c: 69:     {;src/kbd.c: 70:         uint8_t newChar= (PORTB & 0xF0)>> 4;
 13282  00506A  3881               	swapf	129,w,c	;volatile
 13283  00506C  0B0F               	andlw	15
 13284  00506E  0B0F               	andlw	15
 13285  005070  6E04               	movwf	KBD_InChar@newChar^0,c
 13286                           
 13287                           ;src/kbd.c: 71:         if(newChar == 14 || newChar == 13 || newChar == 11 || newChar ==
      +                           7)
 13288  005072  0E0E               	movlw	14
 13289  005074  1804               	xorwf	KBD_InChar@newChar^0,w,c
 13290  005076  B4D8               	btfsc	status,2,c
 13291  005078  EF40  F028         	goto	u6631
 13292  00507C  EF42  F028         	goto	u6630
 13293  005080                     u6631:
 13294  005080  EF5D  F028         	goto	l216
 13295  005084                     u6630:
 13296  005084  0E0D               	movlw	13
 13297  005086  1804               	xorwf	KBD_InChar@newChar^0,w,c
 13298  005088  B4D8               	btfsc	status,2,c
 13299  00508A  EF49  F028         	goto	u6641
 13300  00508E  EF4B  F028         	goto	u6640
 13301  005092                     u6641:
 13302  005092  EF5D  F028         	goto	l216
 13303  005096                     u6640:
 13304  005096  0E0B               	movlw	11
 13305  005098  1804               	xorwf	KBD_InChar@newChar^0,w,c
 13306  00509A  B4D8               	btfsc	status,2,c
 13307  00509C  EF52  F028         	goto	u6651
 13308  0050A0  EF54  F028         	goto	u6650
 13309  0050A4                     u6651:
 13310  0050A4  EF5D  F028         	goto	l216
 13311  0050A8                     u6650:
 13312  0050A8  0E07               	movlw	7
 13313  0050AA  1804               	xorwf	KBD_InChar@newChar^0,w,c
 13314  0050AC  A4D8               	btfss	status,2,c
 13315  0050AE  EF5B  F028         	goto	u6661
 13316  0050B2  EF5D  F028         	goto	u6660
 13317  0050B6                     u6661:
 13318  0050B6  EF35  F028         	goto	l212
 13319  0050BA                     u6660:
 13320  0050BA                     l216:
 13321  0050BA  0012               	return		;funcret
 13322  0050BC                     __end_of_KBD_InChar:
 13323                           	opt callstack 0
 13324                           
 13325 ;; *************** function _KBD_GetChar *****************
 13326 ;; Defined at:
 13327 ;;		line 21 in file "src/kbd.c"
 13328 ;; Parameters:    Size  Location     Type
 13329 ;;		None
 13330 ;; Auto vars:     Size  Location     Type
 13331 ;;  col             2   10[COMRAM] int 
 13332 ;;  row             2    8[COMRAM] int 
 13333 ;;  key             1    7[COMRAM] unsigned char 
 13334 ;; Return value:  Size  Location     Type
 13335 ;;                  1    wreg      unsigned char 
 13336 ;; Registers used:
 13337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13338 ;; Tracked objects:
 13339 ;;		On entry : 0/0
 13340 ;;		On exit  : 0/0
 13341 ;;		Unchanged: 0/0
 13342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13343 ;;      Params:         0       0       0       0       0       0       0       0       0
 13344 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13345 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13346 ;;      Totals:         9       0       0       0       0       0       0       0       0
 13347 ;;Total ram usage:        9 bytes
 13348 ;; Hardware stack levels used:    1
 13349 ;; Hardware stack levels required when called:    2
 13350 ;; This function calls:
 13351 ;;		Nothing
 13352 ;; This function is called by:
 13353 ;;		_main
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357                           	psect	text54
 13358  003B3E                     __ptext54:
 13359                           	opt callstack 0
 13360  003B3E                     _KBD_GetChar:
 13361                           	opt callstack 28
 13362  003B3E                     
 13363                           ;src/kbd.c: 24:     int row = 0, col = 0;
 13364  003B3E  0E00               	movlw	0
 13365  003B40  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 13366  003B42  0E00               	movlw	0
 13367  003B44  6E09               	movwf	KBD_GetChar@row^0,c
 13368  003B46  0E00               	movlw	0
 13369  003B48  6E0C               	movwf	(KBD_GetChar@col+1)^0,c
 13370  003B4A  0E00               	movlw	0
 13371  003B4C  6E0B               	movwf	KBD_GetChar@col^0,c
 13372                           
 13373                           ;src/kbd.c: 26:     for(col = 0; col <= 3; col++)
 13374  003B4E  0E00               	movlw	0
 13375  003B50  6E0C               	movwf	(KBD_GetChar@col+1)^0,c
 13376  003B52  0E00               	movlw	0
 13377  003B54  6E0B               	movwf	KBD_GetChar@col^0,c
 13378  003B56                     l6185:
 13379                           
 13380                           ;src/kbd.c: 27:     {;src/kbd.c: 28:         LATBbits.LATB3 = col == 0? 0:1;
 13381  003B56  500B               	movf	KBD_GetChar@col^0,w,c
 13382  003B58  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 13383  003B5A  A4D8               	btfss	status,2,c
 13384  003B5C  EFB2  F01D         	goto	u6671
 13385  003B60  EFB6  F01D         	goto	u6670
 13386  003B64                     u6671:
 13387  003B64  6A04               	clrf	??_KBD_GetChar^0,c
 13388  003B66  2A04               	incf	??_KBD_GetChar^0,f,c
 13389  003B68  EFB7  F01D         	goto	u6688
 13390  003B6C                     u6670:
 13391  003B6C  6A04               	clrf	??_KBD_GetChar^0,c
 13392  003B6E                     u6688:
 13393  003B6E  4604               	rlncf	??_KBD_GetChar^0,f,c
 13394  003B70  4604               	rlncf	??_KBD_GetChar^0,f,c
 13395  003B72  4604               	rlncf	??_KBD_GetChar^0,f,c
 13396  003B74  508A               	movf	138,w,c	;volatile
 13397  003B76  1804               	xorwf	??_KBD_GetChar^0,w,c
 13398  003B78  0BF7               	andlw	-9
 13399  003B7A  1804               	xorwf	??_KBD_GetChar^0,w,c
 13400  003B7C  6E8A               	movwf	138,c	;volatile
 13401                           
 13402                           ;src/kbd.c: 29:         LATBbits.LATB2 = col == 1? 0:1;
 13403  003B7E  040B               	decf	KBD_GetChar@col^0,w,c
 13404  003B80  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 13405  003B82  A4D8               	btfss	status,2,c
 13406  003B84  EFC6  F01D         	goto	u6691
 13407  003B88  EFCA  F01D         	goto	u6690
 13408  003B8C                     u6691:
 13409  003B8C  6A04               	clrf	??_KBD_GetChar^0,c
 13410  003B8E  2A04               	incf	??_KBD_GetChar^0,f,c
 13411  003B90  EFCB  F01D         	goto	u6708
 13412  003B94                     u6690:
 13413  003B94  6A04               	clrf	??_KBD_GetChar^0,c
 13414  003B96                     u6708:
 13415  003B96  4604               	rlncf	??_KBD_GetChar^0,f,c
 13416  003B98  4604               	rlncf	??_KBD_GetChar^0,f,c
 13417  003B9A  508A               	movf	138,w,c	;volatile
 13418  003B9C  1804               	xorwf	??_KBD_GetChar^0,w,c
 13419  003B9E  0BFB               	andlw	-5
 13420  003BA0  1804               	xorwf	??_KBD_GetChar^0,w,c
 13421  003BA2  6E8A               	movwf	138,c	;volatile
 13422                           
 13423                           ;src/kbd.c: 30:         LATBbits.LATB1 = col == 2? 0:1;
 13424  003BA4  0E02               	movlw	2
 13425  003BA6  180B               	xorwf	KBD_GetChar@col^0,w,c
 13426  003BA8  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 13427  003BAA  A4D8               	btfss	status,2,c
 13428  003BAC  EFDA  F01D         	goto	u6711
 13429  003BB0  EFDE  F01D         	goto	u6710
 13430  003BB4                     u6711:
 13431  003BB4  6A04               	clrf	??_KBD_GetChar^0,c
 13432  003BB6  2A04               	incf	??_KBD_GetChar^0,f,c
 13433  003BB8  EFDF  F01D         	goto	u6728
 13434  003BBC                     u6710:
 13435  003BBC  6A04               	clrf	??_KBD_GetChar^0,c
 13436  003BBE                     u6728:
 13437  003BBE  4604               	rlncf	??_KBD_GetChar^0,f,c
 13438  003BC0  508A               	movf	138,w,c	;volatile
 13439  003BC2  1804               	xorwf	??_KBD_GetChar^0,w,c
 13440  003BC4  0BFD               	andlw	-3
 13441  003BC6  1804               	xorwf	??_KBD_GetChar^0,w,c
 13442  003BC8  6E8A               	movwf	138,c	;volatile
 13443                           
 13444                           ;src/kbd.c: 31:         LATBbits.LATB0 = col == 3? 0:1;
 13445  003BCA  0E03               	movlw	3
 13446  003BCC  180B               	xorwf	KBD_GetChar@col^0,w,c
 13447  003BCE  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 13448  003BD0  A4D8               	btfss	status,2,c
 13449  003BD2  EFED  F01D         	goto	u6731
 13450  003BD6  EFF1  F01D         	goto	u6730
 13451  003BDA                     u6731:
 13452  003BDA  6A04               	clrf	??_KBD_GetChar^0,c
 13453  003BDC  2A04               	incf	??_KBD_GetChar^0,f,c
 13454  003BDE  EFF2  F01D         	goto	u6748
 13455  003BE2                     u6730:
 13456  003BE2  6A04               	clrf	??_KBD_GetChar^0,c
 13457  003BE4                     u6748:
 13458  003BE4  508A               	movf	138,w,c	;volatile
 13459  003BE6  1804               	xorwf	??_KBD_GetChar^0,w,c
 13460  003BE8  0BFE               	andlw	-2
 13461  003BEA  1804               	xorwf	??_KBD_GetChar^0,w,c
 13462  003BEC  6E8A               	movwf	138,c	;volatile
 13463  003BEE                     
 13464                           ;src/kbd.c: 32:         _delay((unsigned long)((10)*(48000000/4000.0)));
 13465  003BEE  0E9C               	movlw	156
 13466  003BF0  6E04               	movwf	??_KBD_GetChar^0,c
 13467  003BF2  0ED7               	movlw	215
 13468  003BF4                     u9957:
 13469  003BF4  2EE8               	decfsz	wreg,f,c
 13470  003BF6  D7FE               	bra	u9957
 13471  003BF8  2E04               	decfsz	??_KBD_GetChar^0,f,c
 13472  003BFA  D7FC               	bra	u9957
 13473  003BFC  F000               	nop	
 13474  003BFE                     
 13475                           ;src/kbd.c: 34:         if(!PORTBbits.RB7)
 13476  003BFE  BE81               	btfsc	129,7,c	;volatile
 13477  003C00  EF04  F01E         	goto	u6751
 13478  003C04  EF06  F01E         	goto	u6750
 13479  003C08                     u6751:
 13480  003C08  EF0C  F01E         	goto	l201
 13481  003C0C                     u6750:
 13482  003C0C                     
 13483                           ;src/kbd.c: 35:         {;src/kbd.c: 36:             row = 0;
 13484  003C0C  0E00               	movlw	0
 13485  003C0E  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 13486  003C10  0E00               	movlw	0
 13487  003C12  6E09               	movwf	KBD_GetChar@row^0,c
 13488                           
 13489                           ;src/kbd.c: 37:             break;
 13490  003C14  EF51  F01E         	goto	l6213
 13491  003C18                     l201:
 13492  003C18  BC81               	btfsc	129,6,c	;volatile
 13493  003C1A  EF11  F01E         	goto	u6761
 13494  003C1E  EF13  F01E         	goto	u6760
 13495  003C22                     u6761:
 13496  003C22  EF19  F01E         	goto	l203
 13497  003C26                     u6760:
 13498  003C26                     
 13499                           ;src/kbd.c: 40:         {;src/kbd.c: 41:             row = 1;
 13500  003C26  0E00               	movlw	0
 13501  003C28  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 13502  003C2A  0E01               	movlw	1
 13503  003C2C  6E09               	movwf	KBD_GetChar@row^0,c
 13504                           
 13505                           ;src/kbd.c: 42:             break;
 13506  003C2E  EF51  F01E         	goto	l6213
 13507  003C32                     l203:
 13508  003C32  BA81               	btfsc	129,5,c	;volatile
 13509  003C34  EF1E  F01E         	goto	u6771
 13510  003C38  EF20  F01E         	goto	u6770
 13511  003C3C                     u6771:
 13512  003C3C  EF26  F01E         	goto	l205
 13513  003C40                     u6770:
 13514  003C40                     
 13515                           ;src/kbd.c: 45:         {;src/kbd.c: 46:             row = 2;
 13516  003C40  0E00               	movlw	0
 13517  003C42  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 13518  003C44  0E02               	movlw	2
 13519  003C46  6E09               	movwf	KBD_GetChar@row^0,c
 13520                           
 13521                           ;src/kbd.c: 47:             break;
 13522  003C48  EF51  F01E         	goto	l6213
 13523  003C4C                     l205:
 13524  003C4C  B881               	btfsc	129,4,c	;volatile
 13525  003C4E  EF2B  F01E         	goto	u6781
 13526  003C52  EF2D  F01E         	goto	u6780
 13527  003C56                     u6781:
 13528  003C56  EF33  F01E         	goto	l204
 13529  003C5A                     u6780:
 13530  003C5A                     
 13531                           ;src/kbd.c: 50:         {;src/kbd.c: 51:             row = 3;
 13532  003C5A  0E00               	movlw	0
 13533  003C5C  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 13534  003C5E  0E03               	movlw	3
 13535  003C60  6E09               	movwf	KBD_GetChar@row^0,c
 13536                           
 13537                           ;src/kbd.c: 52:             break;
 13538  003C62  EF51  F01E         	goto	l6213
 13539  003C66                     l204:
 13540  003C66                     
 13541                           ;src/kbd.c: 54:         if (col == 3)
 13542  003C66  0E03               	movlw	3
 13543  003C68  180B               	xorwf	KBD_GetChar@col^0,w,c
 13544  003C6A  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 13545  003C6C  A4D8               	btfss	status,2,c
 13546  003C6E  EF3B  F01E         	goto	u6791
 13547  003C72  EF3D  F01E         	goto	u6790
 13548  003C76                     u6791:
 13549  003C76  EF41  F01E         	goto	l6209
 13550  003C7A                     u6790:
 13551  003C7A                     
 13552                           ;src/kbd.c: 55:             row = 4;
 13553  003C7A  0E00               	movlw	0
 13554  003C7C  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 13555  003C7E  0E04               	movlw	4
 13556  003C80  6E09               	movwf	KBD_GetChar@row^0,c
 13557  003C82                     l6209:
 13558                           
 13559                           ;src/kbd.c: 56:     }
 13560  003C82  4A0B               	infsnz	KBD_GetChar@col^0,f,c
 13561  003C84  2A0C               	incf	(KBD_GetChar@col+1)^0,f,c
 13562  003C86  BE0C               	btfsc	(KBD_GetChar@col+1)^0,7,c
 13563  003C88  EF4F  F01E         	goto	u6801
 13564  003C8C  500C               	movf	(KBD_GetChar@col+1)^0,w,c
 13565  003C8E  E109               	bnz	u6800
 13566  003C90  0E04               	movlw	4
 13567  003C92  5C0B               	subwf	KBD_GetChar@col^0,w,c
 13568  003C94  A0D8               	btfss	status,0,c
 13569  003C96  EF4F  F01E         	goto	u6801
 13570  003C9A  EF51  F01E         	goto	u6800
 13571  003C9E                     u6801:
 13572  003C9E  EFAB  F01D         	goto	l6185
 13573  003CA2                     u6800:
 13574  003CA2                     l6213:
 13575                           
 13576                           ;src/kbd.c: 57:     key = keyPad[row][col];
 13577  003CA2  C009  F004         	movff	KBD_GetChar@row,??_KBD_GetChar
 13578  003CA6  C00A  F005         	movff	KBD_GetChar@row+1,??_KBD_GetChar+1
 13579  003CAA  90D8               	bcf	status,0,c
 13580  003CAC  3604               	rlcf	??_KBD_GetChar^0,f,c
 13581  003CAE  3605               	rlcf	(??_KBD_GetChar+1)^0,f,c
 13582  003CB0  90D8               	bcf	status,0,c
 13583  003CB2  3604               	rlcf	??_KBD_GetChar^0,f,c
 13584  003CB4  3605               	rlcf	(??_KBD_GetChar+1)^0,f,c
 13585  003CB6  0EA0               	movlw	low _keyPad
 13586  003CB8  6E06               	movwf	(??_KBD_GetChar+2)^0,c
 13587  003CBA  0E00               	movlw	high _keyPad
 13588  003CBC  6E07               	movwf	(??_KBD_GetChar+3)^0,c
 13589  003CBE  5004               	movf	??_KBD_GetChar^0,w,c
 13590  003CC0  2606               	addwf	(??_KBD_GetChar+2)^0,f,c
 13591  003CC2  5005               	movf	(??_KBD_GetChar+1)^0,w,c
 13592  003CC4  2207               	addwfc	(??_KBD_GetChar+3)^0,f,c
 13593  003CC6  500B               	movf	KBD_GetChar@col^0,w,c
 13594  003CC8  2406               	addwf	(??_KBD_GetChar+2)^0,w,c
 13595  003CCA  6ED9               	movwf	fsr2l,c
 13596  003CCC  500C               	movf	(KBD_GetChar@col+1)^0,w,c
 13597  003CCE  2007               	addwfc	(??_KBD_GetChar+3)^0,w,c
 13598  003CD0  6EDA               	movwf	fsr2h,c
 13599  003CD2  50DF               	movf	indf2,w,c
 13600  003CD4  6E08               	movwf	KBD_GetChar@key^0,c
 13601  003CD6                     
 13602                           ;src/kbd.c: 59:     LATBbits.LATB3 = 0;
 13603  003CD6  968A               	bcf	138,3,c	;volatile
 13604  003CD8                     
 13605                           ;src/kbd.c: 60:     LATBbits.LATB2 = 0;
 13606  003CD8  948A               	bcf	138,2,c	;volatile
 13607  003CDA                     
 13608                           ;src/kbd.c: 61:     LATBbits.LATB1 = 0;
 13609  003CDA  928A               	bcf	138,1,c	;volatile
 13610  003CDC                     
 13611                           ;src/kbd.c: 62:     LATBbits.LATB0 = 0;
 13612  003CDC  908A               	bcf	138,0,c	;volatile
 13613  003CDE                     
 13614                           ;src/kbd.c: 63:     return key;
 13615  003CDE  5008               	movf	KBD_GetChar@key^0,w,c
 13616  003CE0  0012               	return		;funcret
 13617  003CE2                     __end_of_KBD_GetChar:
 13618                           	opt callstack 0
 13619                           
 13620 ;; *************** function _CreateChar *****************
 13621 ;; Defined at:
 13622 ;;		line 140 in file "src/lcd.c"
 13623 ;; Parameters:    Size  Location     Type
 13624 ;;  pattern         2   13[COMRAM] PTR unsigned char 
 13625 ;;		 -> Pattern1(8), 
 13626 ;;  pos             1   15[COMRAM] unsigned char 
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;  i               2   16[COMRAM] int 
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  1    wreg      void 
 13631 ;; Registers used:
 13632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13638 ;;      Params:         3       0       0       0       0       0       0       0       0
 13639 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13640 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13641 ;;      Totals:         5       0       0       0       0       0       0       0       0
 13642 ;;Total ram usage:        5 bytes
 13643 ;; Hardware stack levels used:    1
 13644 ;; Hardware stack levels required when called:    6
 13645 ;; This function calls:
 13646 ;;		_LCD_SetCGRAM
 13647 ;;		_LCD_SetRowCol
 13648 ;;		_LCD_WriteByte
 13649 ;; This function is called by:
 13650 ;;		_main
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654                           	psect	text55
 13655  004FC0                     __ptext55:
 13656                           	opt callstack 0
 13657  004FC0                     _CreateChar:
 13658                           	opt callstack 24
 13659  004FC0                     
 13660                           ;src/lcd.c: 143:     pos *= 8;
 13661  004FC0  0E08               	movlw	8
 13662  004FC2  0210               	mulwf	CreateChar@pos^0,c
 13663  004FC4  50F3               	movf	prodl,w,c
 13664  004FC6  6E10               	movwf	CreateChar@pos^0,c
 13665  004FC8                     
 13666                           ;src/lcd.c: 145:     for (i=0; i<8; i++)
 13667  004FC8  0E00               	movlw	0
 13668  004FCA  6E12               	movwf	(CreateChar@i+1)^0,c
 13669  004FCC  0E00               	movlw	0
 13670  004FCE  6E11               	movwf	CreateChar@i^0,c
 13671  004FD0                     l6161:
 13672                           
 13673                           ;src/lcd.c: 146:     {;src/lcd.c: 147:         LCD_SetCGRAM (pos+i);
 13674  004FD0  5010               	movf	CreateChar@pos^0,w,c
 13675  004FD2  2411               	addwf	CreateChar@i^0,w,c
 13676  004FD4  EC57  F02A         	call	_LCD_SetCGRAM
 13677  004FD8                     
 13678                           ;src/lcd.c: 148:         LCD_WriteByte (pattern[i]);
 13679  004FD8  5011               	movf	CreateChar@i^0,w,c
 13680  004FDA  240E               	addwf	CreateChar@pattern^0,w,c
 13681  004FDC  6ED9               	movwf	fsr2l,c
 13682  004FDE  5012               	movf	(CreateChar@i+1)^0,w,c
 13683  004FE0  200F               	addwfc	(CreateChar@pattern+1)^0,w,c
 13684  004FE2  6EDA               	movwf	fsr2h,c
 13685  004FE4  50DF               	movf	indf2,w,c
 13686  004FE6  EC7C  F02A         	call	_LCD_WriteByte
 13687  004FEA                     
 13688                           ;src/lcd.c: 149:     }
 13689  004FEA  4A11               	infsnz	CreateChar@i^0,f,c
 13690  004FEC  2A12               	incf	(CreateChar@i+1)^0,f,c
 13691  004FEE  BE12               	btfsc	(CreateChar@i+1)^0,7,c
 13692  004FF0  EF03  F028         	goto	u6621
 13693  004FF4  5012               	movf	(CreateChar@i+1)^0,w,c
 13694  004FF6  E109               	bnz	u6620
 13695  004FF8  0E08               	movlw	8
 13696  004FFA  5C11               	subwf	CreateChar@i^0,w,c
 13697  004FFC  A0D8               	btfss	status,0,c
 13698  004FFE  EF03  F028         	goto	u6621
 13699  005002  EF05  F028         	goto	u6620
 13700  005006                     u6621:
 13701  005006  EFE8  F027         	goto	l6161
 13702  00500A                     u6620:
 13703  00500A                     
 13704                           ;src/lcd.c: 150:     LCD_SetRowCol(lcd_r, lcd_c);
 13705  00500A  C0C6  F008         	movff	_lcd_c,LCD_SetRowCol@col
 13706  00500E  503A               	movf	_lcd_r^0,w,c
 13707  005010  ECA8  F028         	call	_LCD_SetRowCol
 13708  005014  0012               	return		;funcret
 13709  005016                     __end_of_CreateChar:
 13710                           	opt callstack 0
 13711                           
 13712 ;; *************** function _LCD_WriteByte *****************
 13713 ;; Defined at:
 13714 ;;		line 54 in file "src/lcd.c"
 13715 ;; Parameters:    Size  Location     Type
 13716 ;;  wData           1    wreg     unsigned char 
 13717 ;; Auto vars:     Size  Location     Type
 13718 ;;  wData           1    5[COMRAM] unsigned char 
 13719 ;; Return value:  Size  Location     Type
 13720 ;;                  1    wreg      void 
 13721 ;; Registers used:
 13722 ;;		wreg, status,2, status,0, cstack
 13723 ;; Tracked objects:
 13724 ;;		On entry : 0/0
 13725 ;;		On exit  : 0/0
 13726 ;;		Unchanged: 0/0
 13727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13728 ;;      Params:         0       0       0       0       0       0       0       0       0
 13729 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13730 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13731 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13732 ;;Total ram usage:        1 bytes
 13733 ;; Hardware stack levels used:    1
 13734 ;; Hardware stack levels required when called:    4
 13735 ;; This function calls:
 13736 ;;		_LCD_SendNibble
 13737 ;; This function is called by:
 13738 ;;		_LCD_WriteChar
 13739 ;;		_CreateChar
 13740 ;; This function uses a non-reentrant model
 13741 ;;
 13742                           
 13743                           	psect	text56
 13744  0054F8                     __ptext56:
 13745                           	opt callstack 0
 13746  0054F8                     _LCD_WriteByte:
 13747                           	opt callstack 24
 13748                           
 13749                           ;incstack = 0
 13750                           ;LCD_WriteByte@wData stored from wreg
 13751  0054F8  6E06               	movwf	LCD_WriteByte@wData^0,c
 13752  0054FA                     
 13753                           ;src/lcd.c: 54: void LCD_WriteByte(char wData);src/lcd.c: 55: {;src/lcd.c: 56:     LATDb
      +                          its.LATD1 = 1;
 13754  0054FA  828C               	bsf	140,1,c	;volatile
 13755  0054FC                     
 13756                           ;src/lcd.c: 57:     LCD_SendNibble(wData);
 13757  0054FC  5006               	movf	LCD_WriteByte@wData^0,w,c
 13758  0054FE  EC9E  F02A         	call	_LCD_SendNibble
 13759  005502                     
 13760                           ;src/lcd.c: 58:     wData <<= 4;
 13761  005502  3A06               	swapf	LCD_WriteByte@wData^0,f,c
 13762  005504  0EF0               	movlw	240
 13763  005506  1606               	andwf	LCD_WriteByte@wData^0,f,c
 13764  005508                     
 13765                           ;src/lcd.c: 59:     LCD_SendNibble(wData);
 13766  005508  5006               	movf	LCD_WriteByte@wData^0,w,c
 13767  00550A  EC9E  F02A         	call	_LCD_SendNibble
 13768  00550E  0012               	return		;funcret
 13769  005510                     __end_of_LCD_WriteByte:
 13770                           	opt callstack 0
 13771                           
 13772 ;; *************** function _LCD_SetRowCol *****************
 13773 ;; Defined at:
 13774 ;;		line 129 in file "src/lcd.c"
 13775 ;; Parameters:    Size  Location     Type
 13776 ;;  row             1    wreg     _Bool 
 13777 ;;  col             1    7[COMRAM] unsigned char 
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;  row             1   12[COMRAM] _Bool 
 13780 ;;  cmd             2   10[COMRAM] int 
 13781 ;; Return value:  Size  Location     Type
 13782 ;;                  1    wreg      void 
 13783 ;; Registers used:
 13784 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13785 ;; Tracked objects:
 13786 ;;		On entry : 0/0
 13787 ;;		On exit  : 0/0
 13788 ;;		Unchanged: 0/0
 13789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13790 ;;      Params:         1       0       0       0       0       0       0       0       0
 13791 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13792 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13793 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13794 ;;Total ram usage:        6 bytes
 13795 ;; Hardware stack levels used:    1
 13796 ;; Hardware stack levels required when called:    5
 13797 ;; This function calls:
 13798 ;;		_LCD_SendCmd
 13799 ;; This function is called by:
 13800 ;;		_main
 13801 ;;		_LCD_WriteChar
 13802 ;;		_CreateChar
 13803 ;;		_LCD_Write
 13804 ;; This function uses a non-reentrant model
 13805 ;;
 13806                           
 13807                           	psect	text57
 13808  005150                     __ptext57:
 13809                           	opt callstack 0
 13810  005150                     _LCD_SetRowCol:
 13811                           	opt callstack 23
 13812                           
 13813                           ;incstack = 0
 13814                           ;LCD_SetRowCol@row stored from wreg
 13815  005150  6E0D               	movwf	LCD_SetRowCol@row^0,c
 13816  005152                     
 13817                           ;src/lcd.c: 129: void LCD_SetRowCol(_Bool row, uint8_t col);src/lcd.c: 130: {;src/lcd.c:
      +                           131:     if (col < 16)
 13818  005152  0E10               	movlw	16
 13819  005154  6008               	cpfslt	LCD_SetRowCol@col^0,c
 13820  005156  EFAF  F028         	goto	u4571
 13821  00515A  EFB1  F028         	goto	u4570
 13822  00515E                     u4571:
 13823  00515E  EFCC  F028         	goto	l840
 13824  005162                     u4570:
 13825  005162                     
 13826                           ;src/lcd.c: 132:     {;src/lcd.c: 133:         int cmd = ((row * 64) + col) + 128;
 13827  005162  500D               	movf	LCD_SetRowCol@row^0,w,c
 13828  005164  0D40               	mullw	64
 13829  005166  CFF3 F009          	movff	prodl,??_LCD_SetRowCol
 13830  00516A  CFF4 F00A          	movff	prodh,??_LCD_SetRowCol+1
 13831  00516E  5008               	movf	LCD_SetRowCol@col^0,w,c
 13832  005170  2609               	addwf	??_LCD_SetRowCol^0,f,c
 13833  005172  0E00               	movlw	0
 13834  005174  220A               	addwfc	(??_LCD_SetRowCol+1)^0,f,c
 13835  005176  0E80               	movlw	128
 13836  005178  2409               	addwf	??_LCD_SetRowCol^0,w,c
 13837  00517A  6E0B               	movwf	LCD_SetRowCol@cmd^0,c
 13838  00517C  0E00               	movlw	0
 13839  00517E  200A               	addwfc	(??_LCD_SetRowCol+1)^0,w,c
 13840  005180  6E0C               	movwf	(LCD_SetRowCol@cmd+1)^0,c
 13841  005182                     
 13842                           ;src/lcd.c: 134:         LCD_SendCmd(cmd, 1);
 13843  005182  0E01               	movlw	1
 13844  005184  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 13845  005186  500B               	movf	LCD_SetRowCol@cmd^0,w,c
 13846  005188  EC1C  F02A         	call	_LCD_SendCmd
 13847  00518C                     
 13848                           ;src/lcd.c: 135:         lcd_c = col;
 13849  00518C  C008  F0C6         	movff	LCD_SetRowCol@col,_lcd_c
 13850  005190  0100               	movlb	0	; () banked
 13851  005192  6BC7               	clrf	(_lcd_c+1)& (0+255),b
 13852  005194                     
 13853                           ; BSR set to: 0
 13854                           ;src/lcd.c: 136:         lcd_r = row;
 13855  005194  C00D  F03A         	movff	LCD_SetRowCol@row,_lcd_r
 13856  005198                     l840:
 13857  005198  0012               	return		;funcret
 13858  00519A                     __end_of_LCD_SetRowCol:
 13859                           	opt callstack 0
 13860                           
 13861 ;; *************** function _LCD_SetCGRAM *****************
 13862 ;; Defined at:
 13863 ;;		line 119 in file "src/lcd.c"
 13864 ;; Parameters:    Size  Location     Type
 13865 ;;  address         1    wreg     unsigned char 
 13866 ;; Auto vars:     Size  Location     Type
 13867 ;;  address         1    8[COMRAM] unsigned char 
 13868 ;;  cmd             1    7[COMRAM] unsigned char 
 13869 ;; Return value:  Size  Location     Type
 13870 ;;                  1    wreg      void 
 13871 ;; Registers used:
 13872 ;;		wreg, status,2, status,0, cstack
 13873 ;; Tracked objects:
 13874 ;;		On entry : 0/0
 13875 ;;		On exit  : 0/0
 13876 ;;		Unchanged: 0/0
 13877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13878 ;;      Params:         0       0       0       0       0       0       0       0       0
 13879 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13881 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13882 ;;Total ram usage:        2 bytes
 13883 ;; Hardware stack levels used:    1
 13884 ;; Hardware stack levels required when called:    5
 13885 ;; This function calls:
 13886 ;;		_LCD_SendCmd
 13887 ;; This function is called by:
 13888 ;;		_CreateChar
 13889 ;; This function uses a non-reentrant model
 13890 ;;
 13891                           
 13892                           	psect	text58
 13893  0054AE                     __ptext58:
 13894                           	opt callstack 0
 13895  0054AE                     _LCD_SetCGRAM:
 13896                           	opt callstack 24
 13897                           
 13898                           ;incstack = 0
 13899                           ;LCD_SetCGRAM@address stored from wreg
 13900  0054AE  6E09               	movwf	LCD_SetCGRAM@address^0,c
 13901  0054B0                     
 13902                           ;src/lcd.c: 119: void LCD_SetCGRAM(uint8_t address);src/lcd.c: 120: {;src/lcd.c: 121:   
      +                            if (address < 0b01000000)
 13903  0054B0  0E40               	movlw	64
 13904  0054B2  6009               	cpfslt	LCD_SetCGRAM@address^0,c
 13905  0054B4  EF5E  F02A         	goto	u6241
 13906  0054B8  EF60  F02A         	goto	u6240
 13907  0054BC                     u6241:
 13908  0054BC  EF69  F02A         	goto	l836
 13909  0054C0                     u6240:
 13910  0054C0                     
 13911                           ;src/lcd.c: 122:     {;src/lcd.c: 123:         uint8_t cmd = 0b01000000;
 13912  0054C0  0E40               	movlw	64
 13913  0054C2  6E08               	movwf	LCD_SetCGRAM@cmd^0,c
 13914  0054C4                     
 13915                           ;src/lcd.c: 124:         cmd |= address;
 13916  0054C4  5009               	movf	LCD_SetCGRAM@address^0,w,c
 13917  0054C6  1208               	iorwf	LCD_SetCGRAM@cmd^0,f,c
 13918  0054C8                     
 13919                           ;src/lcd.c: 125:         LCD_SendCmd(cmd,1);
 13920  0054C8  0E01               	movlw	1
 13921  0054CA  6E06               	movwf	LCD_SendCmd@fbyte^0,c
 13922  0054CC  5008               	movf	LCD_SetCGRAM@cmd^0,w,c
 13923  0054CE  EC1C  F02A         	call	_LCD_SendCmd
 13924  0054D2                     l836:
 13925  0054D2  0012               	return		;funcret
 13926  0054D4                     __end_of_LCD_SetCGRAM:
 13927                           	opt callstack 0
 13928                           
 13929 ;; *************** function _LCD_SendCmd *****************
 13930 ;; Defined at:
 13931 ;;		line 43 in file "src/lcd.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  data            1    wreg     unsigned char 
 13934 ;;  fbyte           1    5[COMRAM] _Bool 
 13935 ;; Auto vars:     Size  Location     Type
 13936 ;;  data            1    6[COMRAM] unsigned char 
 13937 ;; Return value:  Size  Location     Type
 13938 ;;                  1    wreg      void 
 13939 ;; Registers used:
 13940 ;;		wreg, status,2, status,0, cstack
 13941 ;; Tracked objects:
 13942 ;;		On entry : 0/0
 13943 ;;		On exit  : 0/0
 13944 ;;		Unchanged: 0/0
 13945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13946 ;;      Params:         1       0       0       0       0       0       0       0       0
 13947 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13948 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13949 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13950 ;;Total ram usage:        2 bytes
 13951 ;; Hardware stack levels used:    1
 13952 ;; Hardware stack levels required when called:    4
 13953 ;; This function calls:
 13954 ;;		_LCD_SendNibble
 13955 ;; This function is called by:
 13956 ;;		_LCD_Init
 13957 ;;		_LCD_CLS
 13958 ;;		_LCD_RH
 13959 ;;		_LCD_DisplayCtrl
 13960 ;;		_LCD_SetCGRAM
 13961 ;;		_LCD_SetRowCol
 13962 ;;		_LCD_DisplayShift
 13963 ;;		_LCD_EntryMode
 13964 ;; This function uses a non-reentrant model
 13965 ;;
 13966                           
 13967                           	psect	text59
 13968  005438                     __ptext59:
 13969                           	opt callstack 0
 13970  005438                     _LCD_SendCmd:
 13971                           	opt callstack 24
 13972                           
 13973                           ;incstack = 0
 13974                           ;LCD_SendCmd@data stored from wreg
 13975  005438  6E07               	movwf	LCD_SendCmd@data^0,c
 13976  00543A                     
 13977                           ;src/lcd.c: 43: void LCD_SendCmd(uint8_t data,_Bool fbyte);src/lcd.c: 44: {;src/lcd.c: 4
      +                          5:     LATDbits.LATD2 = 0;
 13978  00543A  948C               	bcf	140,2,c	;volatile
 13979                           
 13980                           ;src/lcd.c: 46:     LATDbits.LATD1 = 0;
 13981  00543C  928C               	bcf	140,1,c	;volatile
 13982  00543E                     
 13983                           ;src/lcd.c: 47:     if(fbyte)
 13984  00543E  5006               	movf	LCD_SendCmd@fbyte^0,w,c
 13985  005440  B4D8               	btfsc	status,2,c
 13986  005442  EF25  F02A         	goto	u3581
 13987  005446  EF27  F02A         	goto	u3580
 13988  00544A                     u3581:
 13989  00544A  EF2A  F02A         	goto	l4155
 13990  00544E                     u3580:
 13991  00544E                     
 13992                           ;src/lcd.c: 48:         LCD_SendNibble(data);
 13993  00544E  5007               	movf	LCD_SendCmd@data^0,w,c
 13994  005450  EC9E  F02A         	call	_LCD_SendNibble
 13995  005454                     l4155:
 13996                           
 13997                           ;src/lcd.c: 49:     data <<= 4;
 13998  005454  3A07               	swapf	LCD_SendCmd@data^0,f,c
 13999  005456  0EF0               	movlw	240
 14000  005458  1607               	andwf	LCD_SendCmd@data^0,f,c
 14001  00545A                     
 14002                           ;src/lcd.c: 50:     LCD_SendNibble(data);
 14003  00545A  5007               	movf	LCD_SendCmd@data^0,w,c
 14004  00545C  EC9E  F02A         	call	_LCD_SendNibble
 14005  005460  0012               	return		;funcret
 14006  005462                     __end_of_LCD_SendCmd:
 14007                           	opt callstack 0
 14008                           
 14009 ;; *************** function _LCD_SendNibble *****************
 14010 ;; Defined at:
 14011 ;;		line 36 in file "src/lcd.c"
 14012 ;; Parameters:    Size  Location     Type
 14013 ;;  data            1    wreg     unsigned char 
 14014 ;; Auto vars:     Size  Location     Type
 14015 ;;  data            1    4[COMRAM] unsigned char 
 14016 ;; Return value:  Size  Location     Type
 14017 ;;                  1    wreg      void 
 14018 ;; Registers used:
 14019 ;;		wreg, status,2, status,0, cstack
 14020 ;; Tracked objects:
 14021 ;;		On entry : 0/0
 14022 ;;		On exit  : 0/0
 14023 ;;		Unchanged: 0/0
 14024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14025 ;;      Params:         0       0       0       0       0       0       0       0       0
 14026 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14027 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14028 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14029 ;;Total ram usage:        1 bytes
 14030 ;; Hardware stack levels used:    1
 14031 ;; Hardware stack levels required when called:    3
 14032 ;; This function calls:
 14033 ;;		_LCD_Lat
 14034 ;; This function is called by:
 14035 ;;		_LCD_SendCmd
 14036 ;;		_LCD_WriteByte
 14037 ;; This function uses a non-reentrant model
 14038 ;;
 14039                           
 14040                           	psect	text60
 14041  00553C                     __ptext60:
 14042                           	opt callstack 0
 14043  00553C                     _LCD_SendNibble:
 14044                           	opt callstack 24
 14045                           
 14046                           ;incstack = 0
 14047                           ;LCD_SendNibble@data stored from wreg
 14048  00553C  6E05               	movwf	LCD_SendNibble@data^0,c
 14049  00553E                     
 14050                           ;src/lcd.c: 36: void LCD_SendNibble(uint8_t data);src/lcd.c: 37: {;src/lcd.c: 38:     LA
      +                          TD &= 0x0F;
 14051  00553E  0E0F               	movlw	15
 14052  005540  168C               	andwf	140,f,c	;volatile
 14053                           
 14054                           ;src/lcd.c: 39:     LATD |= (data & 0xF0);
 14055  005542  5005               	movf	LCD_SendNibble@data^0,w,c
 14056  005544  0BF0               	andlw	240
 14057  005546  128C               	iorwf	140,f,c	;volatile
 14058  005548                     
 14059                           ;src/lcd.c: 40:     LCD_Lat();
 14060  005548  EC93  F02A         	call	_LCD_Lat	;wreg free
 14061  00554C  0012               	return		;funcret
 14062  00554E                     __end_of_LCD_SendNibble:
 14063                           	opt callstack 0
 14064                           
 14065 ;; *************** function _LCD_Lat *****************
 14066 ;; Defined at:
 14067 ;;		line 28 in file "src/lcd.c"
 14068 ;; Parameters:    Size  Location     Type
 14069 ;;		None
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;		None
 14072 ;; Return value:  Size  Location     Type
 14073 ;;                  1    wreg      void 
 14074 ;; Registers used:
 14075 ;;		wreg
 14076 ;; Tracked objects:
 14077 ;;		On entry : 0/0
 14078 ;;		On exit  : 0/0
 14079 ;;		Unchanged: 0/0
 14080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14081 ;;      Params:         0       0       0       0       0       0       0       0       0
 14082 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14083 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14084 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14085 ;;Total ram usage:        1 bytes
 14086 ;; Hardware stack levels used:    1
 14087 ;; Hardware stack levels required when called:    2
 14088 ;; This function calls:
 14089 ;;		Nothing
 14090 ;; This function is called by:
 14091 ;;		_LCD_SendNibble
 14092 ;; This function uses a non-reentrant model
 14093 ;;
 14094                           
 14095                           	psect	text61
 14096  005526                     __ptext61:
 14097                           	opt callstack 0
 14098  005526                     _LCD_Lat:
 14099                           	opt callstack 24
 14100  005526                     
 14101                           ;src/lcd.c: 30:     LATDbits.LATD0 = 1;
 14102  005526  808C               	bsf	140,0,c	;volatile
 14103  005528                     
 14104                           ;src/lcd.c: 31:     _delay((unsigned long)((1)*(48000000/4000.0)));
 14105  005528  0E10               	movlw	16
 14106  00552A  6E04               	movwf	??_LCD_Lat^0,c
 14107  00552C  0E94               	movlw	148
 14108  00552E                     u9967:
 14109  00552E  2EE8               	decfsz	wreg,f,c
 14110  005530  D7FE               	bra	u9967
 14111  005532  2E04               	decfsz	??_LCD_Lat^0,f,c
 14112  005534  D7FC               	bra	u9967
 14113  005536  D000               	nop2	
 14114  005538                     
 14115                           ;src/lcd.c: 32:     LATDbits.LATD0 = 0;
 14116  005538  908C               	bcf	140,0,c	;volatile
 14117  00553A  0012               	return		;funcret
 14118  00553C                     __end_of_LCD_Lat:
 14119                           	opt callstack 0
 14120                           
 14121 ;; *************** function _BLED_Color *****************
 14122 ;; Defined at:
 14123 ;;		line 97 in file "src/leds.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;  biled           1    wreg     enum E3166
 14126 ;;  green           1    3[COMRAM] _Bool 
 14127 ;;  red             1    4[COMRAM] _Bool 
 14128 ;; Auto vars:     Size  Location     Type
 14129 ;;  biled           1    7[COMRAM] enum E3166
 14130 ;; Return value:  Size  Location     Type
 14131 ;;                  1    wreg      void 
 14132 ;; Registers used:
 14133 ;;		wreg, status,2, status,0
 14134 ;; Tracked objects:
 14135 ;;		On entry : 0/0
 14136 ;;		On exit  : 0/0
 14137 ;;		Unchanged: 0/0
 14138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14139 ;;      Params:         2       0       0       0       0       0       0       0       0
 14140 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14141 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14142 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14143 ;;Total ram usage:        5 bytes
 14144 ;; Hardware stack levels used:    1
 14145 ;; Hardware stack levels required when called:    2
 14146 ;; This function calls:
 14147 ;;		Nothing
 14148 ;; This function is called by:
 14149 ;;		_main
 14150 ;; This function uses a non-reentrant model
 14151 ;;
 14152                           
 14153                           	psect	text62
 14154  004900                     __ptext62:
 14155                           	opt callstack 0
 14156  004900                     _BLED_Color:
 14157                           	opt callstack 28
 14158                           
 14159                           ;incstack = 0
 14160                           ;BLED_Color@biled stored from wreg
 14161  004900  6E08               	movwf	BLED_Color@biled^0,c
 14162  004902                     
 14163                           ;src/leds.c: 97: void BLED_Color(BILED biled, _Bool green, _Bool red);src/leds.c: 98: {;
      +                          src/leds.c: 99:     switch (biled)
 14164  004902  EFCB  F024         	goto	l5831
 14165  004906                     l5827:
 14166                           
 14167                           ;src/leds.c: 102:             LATEbits.LATE1 = (green? 1 : 0);
 14168  004906  5004               	movf	BLED_Color@green^0,w,c
 14169  004908  A4D8               	btfss	status,2,c
 14170  00490A  EF89  F024         	goto	u6251
 14171  00490E  EF8D  F024         	goto	u6250
 14172  004912                     u6251:
 14173  004912  6A06               	clrf	??_BLED_Color^0,c
 14174  004914  2A06               	incf	??_BLED_Color^0,f,c
 14175  004916  EF8E  F024         	goto	u6268
 14176  00491A                     u6250:
 14177  00491A  6A06               	clrf	??_BLED_Color^0,c
 14178  00491C                     u6268:
 14179  00491C  4606               	rlncf	??_BLED_Color^0,f,c
 14180  00491E  508D               	movf	141,w,c	;volatile
 14181  004920  1806               	xorwf	??_BLED_Color^0,w,c
 14182  004922  0BFD               	andlw	-3
 14183  004924  1806               	xorwf	??_BLED_Color^0,w,c
 14184  004926  6E8D               	movwf	141,c	;volatile
 14185                           
 14186                           ;src/leds.c: 103:             LATEbits.LATE0 = (red? 1 : 0);
 14187  004928  5005               	movf	BLED_Color@red^0,w,c
 14188  00492A  A4D8               	btfss	status,2,c
 14189  00492C  EF9A  F024         	goto	u6271
 14190  004930  EF9E  F024         	goto	u6270
 14191  004934                     u6271:
 14192  004934  6A06               	clrf	??_BLED_Color^0,c
 14193  004936  2A06               	incf	??_BLED_Color^0,f,c
 14194  004938  EF9F  F024         	goto	u6288
 14195  00493C                     u6270:
 14196  00493C  6A06               	clrf	??_BLED_Color^0,c
 14197  00493E                     u6288:
 14198  00493E  508D               	movf	141,w,c	;volatile
 14199  004940  1806               	xorwf	??_BLED_Color^0,w,c
 14200  004942  0BFE               	andlw	-2
 14201  004944  1806               	xorwf	??_BLED_Color^0,w,c
 14202  004946  6E8D               	movwf	141,c	;volatile
 14203                           
 14204                           ;src/leds.c: 104:             break;
 14205  004948  EFE0  F024         	goto	l302
 14206  00494C                     l5829:
 14207                           
 14208                           ;src/leds.c: 106:             LATCbits.LATC2 = (green? 1 : 0);
 14209  00494C  5004               	movf	BLED_Color@green^0,w,c
 14210  00494E  A4D8               	btfss	status,2,c
 14211  004950  EFAC  F024         	goto	u6291
 14212  004954  EFB0  F024         	goto	u6290
 14213  004958                     u6291:
 14214  004958  6A06               	clrf	??_BLED_Color^0,c
 14215  00495A  2A06               	incf	??_BLED_Color^0,f,c
 14216  00495C  EFB1  F024         	goto	u6308
 14217  004960                     u6290:
 14218  004960  6A06               	clrf	??_BLED_Color^0,c
 14219  004962                     u6308:
 14220  004962  4606               	rlncf	??_BLED_Color^0,f,c
 14221  004964  4606               	rlncf	??_BLED_Color^0,f,c
 14222  004966  508B               	movf	139,w,c	;volatile
 14223  004968  1806               	xorwf	??_BLED_Color^0,w,c
 14224  00496A  0BFB               	andlw	-5
 14225  00496C  1806               	xorwf	??_BLED_Color^0,w,c
 14226  00496E  6E8B               	movwf	139,c	;volatile
 14227                           
 14228                           ;src/leds.c: 107:             LATCbits.LATC1 = (red? 1 : 0);
 14229  004970  5005               	movf	BLED_Color@red^0,w,c
 14230  004972  A4D8               	btfss	status,2,c
 14231  004974  EFBE  F024         	goto	u6311
 14232  004978  EFC2  F024         	goto	u6310
 14233  00497C                     u6311:
 14234  00497C  6A06               	clrf	??_BLED_Color^0,c
 14235  00497E  2A06               	incf	??_BLED_Color^0,f,c
 14236  004980  EFC3  F024         	goto	u6328
 14237  004984                     u6310:
 14238  004984  6A06               	clrf	??_BLED_Color^0,c
 14239  004986                     u6328:
 14240  004986  4606               	rlncf	??_BLED_Color^0,f,c
 14241  004988  508B               	movf	139,w,c	;volatile
 14242  00498A  1806               	xorwf	??_BLED_Color^0,w,c
 14243  00498C  0BFD               	andlw	-3
 14244  00498E  1806               	xorwf	??_BLED_Color^0,w,c
 14245  004990  6E8B               	movwf	139,c	;volatile
 14246                           
 14247                           ;src/leds.c: 108:     }
 14248  004992  EFE0  F024         	goto	l302
 14249  004996                     l5831:
 14250  004996  5008               	movf	BLED_Color@biled^0,w,c
 14251  004998  6E06               	movwf	??_BLED_Color^0,c
 14252  00499A  6A07               	clrf	(??_BLED_Color+1)^0,c
 14253                           
 14254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14255                           ; Switch size 1, requested type "simple"
 14256                           ; Number of cases is 1, Range of values is 0 to 0
 14257                           ; switch strategies available:
 14258                           ; Name         Instructions Cycles
 14259                           ; simple_byte            4     3 (average)
 14260                           ;	Chosen strategy is simple_byte
 14261  00499C  5007               	movf	(??_BLED_Color+1)^0,w,c
 14262  00499E  0A00               	xorlw	0	; case 0
 14263  0049A0  B4D8               	btfsc	status,2,c
 14264  0049A2  EFD5  F024         	goto	l8663
 14265  0049A6  EFE0  F024         	goto	l302
 14266  0049AA                     l8663:
 14267                           
 14268                           ; Switch size 1, requested type "simple"
 14269                           ; Number of cases is 2, Range of values is 0 to 1
 14270                           ; switch strategies available:
 14271                           ; Name         Instructions Cycles
 14272                           ; simple_byte            7     4 (average)
 14273                           ;	Chosen strategy is simple_byte
 14274  0049AA  5006               	movf	??_BLED_Color^0,w,c
 14275  0049AC  0A00               	xorlw	0	; case 0
 14276  0049AE  B4D8               	btfsc	status,2,c
 14277  0049B0  EF83  F024         	goto	l5827
 14278  0049B4  0A01               	xorlw	1	; case 1
 14279  0049B6  B4D8               	btfsc	status,2,c
 14280  0049B8  EFA6  F024         	goto	l5829
 14281  0049BC  EFE0  F024         	goto	l302
 14282  0049C0                     l302:
 14283  0049C0  0012               	return		;funcret
 14284  0049C2                     __end_of_BLED_Color:
 14285                           	opt callstack 0
 14286                           
 14287 ;; *************** function _myISR *****************
 14288 ;; Defined at:
 14289 ;;		line 26 in file "src/main.c"
 14290 ;; Parameters:    Size  Location     Type
 14291 ;;		None
 14292 ;; Auto vars:     Size  Location     Type
 14293 ;;		None
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1    wreg      void 
 14296 ;; Registers used:
 14297 ;;		wreg, status,2, status,0, cstack
 14298 ;; Tracked objects:
 14299 ;;		On entry : 0/0
 14300 ;;		On exit  : 0/0
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14303 ;;      Params:         0       0       0       0       0       0       0       0       0
 14304 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14305 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14306 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14307 ;;Total ram usage:        0 bytes
 14308 ;; Hardware stack levels used:    1
 14309 ;; Hardware stack levels required when called:    1
 14310 ;; This function calls:
 14311 ;;		_BLED_Toggle
 14312 ;; This function is called by:
 14313 ;;		Interrupt level 2
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           	psect	intcode
 14318  000008                     __pintcode:
 14319                           	opt callstack 0
 14320  000008                     _myISR:
 14321                           	opt callstack 23
 14322                           
 14323                           ;incstack = 0
 14324  000008  823D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14325  00000A  EDCD  F028         	call	int_func,f	;refresh shadow registers
 14326                           
 14327                           	psect	intcode_body
 14328  00519A                     __pintcode_body:
 14329                           	opt callstack 23
 14330  00519A                     int_func:
 14331                           	opt callstack 23
 14332  00519A  0006               	pop		; remove dummy address from shadow register refresh
 14333  00519C                     
 14334                           ;src/main.c: 28:     if (INTCONbits.TMR0IF)
 14335  00519C  A4F2               	btfss	242,2,c	;volatile
 14336  00519E  EFD3  F028         	goto	i2u682_41
 14337  0051A2  EFD5  F028         	goto	i2u682_40
 14338  0051A6                     i2u682_41:
 14339  0051A6  EFEF  F028         	goto	i2l45
 14340  0051AA                     i2u682_40:
 14341  0051AA                     
 14342                           ;src/main.c: 29:     {;src/main.c: 30:         (TMR0H = 0x48);
 14343  0051AA  0E48               	movlw	72
 14344  0051AC  6ED7               	movwf	215,c	;volatile
 14345                           
 14346                           ;src/main.c: 31:         (TMR0L = 0xE5);
 14347  0051AE  0EE5               	movlw	229
 14348  0051B0  6ED6               	movwf	214,c	;volatile
 14349  0051B2                     
 14350                           ;src/main.c: 32:         count++;
 14351  0051B2  0100               	movlb	0	; () banked
 14352  0051B4  4BCC               	infsnz	_count& (0+255),f,b
 14353  0051B6  2BCD               	incf	(_count+1)& (0+255),f,b
 14354  0051B8                     
 14355                           ; BSR set to: 0
 14356                           ;src/main.c: 33:         if(count == 2)
 14357  0051B8  0E02               	movlw	2
 14358  0051BA  19CC               	xorwf	_count& (0+255),w,b
 14359  0051BC  11CD               	iorwf	(_count+1)& (0+255),w,b
 14360  0051BE  A4D8               	btfss	status,2,c
 14361  0051C0  EFE4  F028         	goto	i2u683_41
 14362  0051C4  EFE6  F028         	goto	i2u683_40
 14363  0051C8                     i2u683_41:
 14364  0051C8  EFEE  F028         	goto	i2l6269
 14365  0051CC                     i2u683_40:
 14366  0051CC                     
 14367                           ; BSR set to: 0
 14368                           ;src/main.c: 34:         {;src/main.c: 35:             BLED_Toggle(BL1);
 14369  0051CC  0E00               	movlw	0
 14370  0051CE  EC5A  F029         	call	_BLED_Toggle
 14371  0051D2                     
 14372                           ;src/main.c: 36:             count = 0;
 14373  0051D2  0E00               	movlw	0
 14374  0051D4  0100               	movlb	0	; () banked
 14375  0051D6  6FCD               	movwf	(_count+1)& (0+255),b
 14376  0051D8  0E00               	movlw	0
 14377  0051DA  6FCC               	movwf	_count& (0+255),b
 14378  0051DC                     i2l6269:
 14379                           
 14380                           ; BSR set to: 0
 14381                           ;src/main.c: 38:         INTCONbits.TMR0IF = 0;
 14382  0051DC  94F2               	bcf	242,2,c	;volatile
 14383  0051DE                     i2l45:
 14384  0051DE  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14385  0051E0  0011               	retfie		f
 14386  0051E2                     __end_of_myISR:
 14387                           	opt callstack 0
 14388                           
 14389 ;; *************** function _BLED_Toggle *****************
 14390 ;; Defined at:
 14391 ;;		line 111 in file "src/leds.c"
 14392 ;; Parameters:    Size  Location     Type
 14393 ;;  biled           1    wreg     enum E3166
 14394 ;; Auto vars:     Size  Location     Type
 14395 ;;  biled           1    2[COMRAM] enum E3166
 14396 ;; Return value:  Size  Location     Type
 14397 ;;                  1    wreg      void 
 14398 ;; Registers used:
 14399 ;;		wreg, status,2, status,0
 14400 ;; Tracked objects:
 14401 ;;		On entry : 0/0
 14402 ;;		On exit  : 0/0
 14403 ;;		Unchanged: 0/0
 14404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14405 ;;      Params:         0       0       0       0       0       0       0       0       0
 14406 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14407 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14408 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14409 ;;Total ram usage:        3 bytes
 14410 ;; Hardware stack levels used:    1
 14411 ;; This function calls:
 14412 ;;		Nothing
 14413 ;; This function is called by:
 14414 ;;		_myISR
 14415 ;; This function uses a non-reentrant model
 14416 ;;
 14417                           
 14418                           	psect	text64
 14419  0052B4                     __ptext64:
 14420                           	opt callstack 0
 14421  0052B4                     _BLED_Toggle:
 14422                           	opt callstack 23
 14423                           
 14424                           ;incstack = 0
 14425                           ;BLED_Toggle@biled stored from wreg
 14426  0052B4  6E03               	movwf	BLED_Toggle@biled^0,c
 14427  0052B6                     
 14428                           ;src/leds.c: 111: void BLED_Toggle(BILED biled);src/leds.c: 112: {;src/leds.c: 113:     
      +                          switch (biled)
 14429  0052B6  EF65  F029         	goto	i2l5803
 14430  0052BA                     i2l306:
 14431                           
 14432                           ;src/leds.c: 116:             LATEbits.LATE1 ^= 1;
 14433  0052BA  728D               	btg	141,1,c	;volatile
 14434                           
 14435                           ;src/leds.c: 117:             LATEbits.LATE0 ^= 1;
 14436  0052BC  708D               	btg	141,0,c	;volatile
 14437                           
 14438                           ;src/leds.c: 118:             break;
 14439  0052BE  EF7A  F029         	goto	i2l309
 14440  0052C2                     i2l308:
 14441                           
 14442                           ;src/leds.c: 120:             LATCbits.LATC2 ^= 1;
 14443  0052C2  748B               	btg	139,2,c	;volatile
 14444                           
 14445                           ;src/leds.c: 121:             LATCbits.LATC1 ^= 1;
 14446  0052C4  728B               	btg	139,1,c	;volatile
 14447                           
 14448                           ;src/leds.c: 122:     }
 14449  0052C6  EF7A  F029         	goto	i2l309
 14450  0052CA                     i2l5803:
 14451  0052CA  5003               	movf	BLED_Toggle@biled^0,w,c
 14452  0052CC  6E01               	movwf	??_BLED_Toggle^0,c
 14453  0052CE  6A02               	clrf	(??_BLED_Toggle+1)^0,c
 14454                           
 14455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14456                           ; Switch size 1, requested type "simple"
 14457                           ; Number of cases is 1, Range of values is 0 to 0
 14458                           ; switch strategies available:
 14459                           ; Name         Instructions Cycles
 14460                           ; simple_byte            4     3 (average)
 14461                           ;	Chosen strategy is simple_byte
 14462  0052D0  5002               	movf	(??_BLED_Toggle+1)^0,w,c
 14463  0052D2  0A00               	xorlw	0	; case 0
 14464  0052D4  B4D8               	btfsc	status,2,c
 14465  0052D6  EF6F  F029         	goto	i2l8665
 14466  0052DA  EF7A  F029         	goto	i2l309
 14467  0052DE                     i2l8665:
 14468                           
 14469                           ; Switch size 1, requested type "simple"
 14470                           ; Number of cases is 2, Range of values is 0 to 1
 14471                           ; switch strategies available:
 14472                           ; Name         Instructions Cycles
 14473                           ; simple_byte            7     4 (average)
 14474                           ;	Chosen strategy is simple_byte
 14475  0052DE  5001               	movf	??_BLED_Toggle^0,w,c
 14476  0052E0  0A00               	xorlw	0	; case 0
 14477  0052E2  B4D8               	btfsc	status,2,c
 14478  0052E4  EF5D  F029         	goto	i2l306
 14479  0052E8  0A01               	xorlw	1	; case 1
 14480  0052EA  B4D8               	btfsc	status,2,c
 14481  0052EC  EF61  F029         	goto	i2l308
 14482  0052F0  EF7A  F029         	goto	i2l309
 14483  0052F4                     i2l309:
 14484  0052F4  0012               	return		;funcret
 14485  0052F6                     __end_of_BLED_Toggle:
 14486                           	opt callstack 0
 14487                           
 14488                           	psect	rparam
 14489  0000                     
 14490                           	psect	temp
 14491  00003D                     btemp:
 14492                           	opt callstack 0
 14493  00003D                     	ds	1
 14494  0000                     int$flags	set	btemp
 14495  0000                     wtemp8	set	btemp+1
 14496  0000                     ttemp5	set	btemp+1
 14497  0000                     ttemp6	set	btemp+4
 14498  0000                     ttemp7	set	btemp+8
 14499                           tosu	equ	0xFFF
 14500                           tosh	equ	0xFFE
 14501                           tosl	equ	0xFFD
 14502                           stkptr	equ	0xFFC
 14503                           pclatu	equ	0xFFB
 14504                           pclath	equ	0xFFA
 14505                           pcl	equ	0xFF9
 14506                           tblptru	equ	0xFF8
 14507                           tblptrh	equ	0xFF7
 14508                           tblptrl	equ	0xFF6
 14509                           tablat	equ	0xFF5
 14510                           prodh	equ	0xFF4
 14511                           prodl	equ	0xFF3
 14512                           indf0	equ	0xFEF
 14513                           postinc0	equ	0xFEE
 14514                           postdec0	equ	0xFED
 14515                           preinc0	equ	0xFEC
 14516                           plusw0	equ	0xFEB
 14517                           fsr0h	equ	0xFEA
 14518                           fsr0l	equ	0xFE9
 14519                           wreg	equ	0xFE8
 14520                           indf1	equ	0xFE7
 14521                           postinc1	equ	0xFE6
 14522                           postdec1	equ	0xFE5
 14523                           preinc1	equ	0xFE4
 14524                           plusw1	equ	0xFE3
 14525                           fsr1h	equ	0xFE2
 14526                           fsr1l	equ	0xFE1
 14527                           bsr	equ	0xFE0
 14528                           indf2	equ	0xFDF
 14529                           postinc2	equ	0xFDE
 14530                           postdec2	equ	0xFDD
 14531                           preinc2	equ	0xFDC
 14532                           plusw2	equ	0xFDB
 14533                           fsr2h	equ	0xFDA
 14534                           fsr2l	equ	0xFD9
 14535                           status	equ	0xFD8


Data Sizes:
    Strings     210
    Constant    19
    Data        156
    BSS         154
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      60
    BANK0           160     18     133
    BANK1           256     68      68
    BANK2           256      0     192
    BANK3           256    234     234
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 64
		 -> reverse@auxstr(BANK1[64]), STR_11(CODE[2]), STR_10(CODE[2]), my_vprintf@buffer(BANK3[64]), 
		 -> my_vprintf@ch(BANK3[2]), my_vprintf@char_temp(BANK3[2]), ?_my_vprintf(BANK0[2]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> reverse@auxstr(BANK1[64]), STR_11(CODE[2]), STR_10(CODE[2]), my_vprintf@buffer(BANK3[64]), 
		 -> my_vprintf@ch(BANK3[2]), my_vprintf@char_temp(BANK3[2]), ?_my_vprintf(BANK0[2]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), my_vprintf@ch(BANK3[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@string(BANK3[128]), 

    LCD_Write@str	PTR unsigned char  size(2) Largest target is 31
		 -> STR_9(CODE[15]), STR_6(CODE[16]), STR_4(CODE[31]), STR_2(CODE[29]), 

    CreateChar@pattern	PTR unsigned char  size(2) Largest target is 8
		 -> Pattern1(BANK0[8]), 

    ftoa@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    ftoa_sci@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    normalize@val	PTR  size(2) Largest target is 4
		 -> ftoa@value(COMRAM[4]), ftoa_sci@value(BANK0[4]), 

    atoui@str	PTR unsigned char  size(2) Largest target is 5
		 -> getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    itoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    reverse@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@string(BANK3[128]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    my_vprintf@string_temp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_my_vprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    my_vprintf@sformat	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_8(CODE[25]), STR_7(CODE[17]), STR_5(CODE[31]), STR_3(CODE[29]), 
		 -> STR_1(CODE[13]), 

    my_vprintf@valist	PTR void [1] size(2) Largest target is 2
		 -> ?_my_vprintf(BANK0[2]), 

    setWidth@width	PTR int  size(2) Largest target is 2
		 -> my_vprintf@width(BANK3[2]), 

    setWidth@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    addOx@hoS	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    addSig@numS	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precS@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precS@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precI@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precI@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precG@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precG@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precE@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precE@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precF@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precF@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    getWP@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    getWP@width	PTR int  size(2) Largest target is 2
		 -> my_vprintf@width(BANK3[2]), 

    getWP@form	PTR unsigned char  size(2) Largest target is 10
		 -> my_vprintf@format(BANK3[10]), 

    cleanS@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), 

    upperCL@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    roundStr@decnum	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    posc@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), 

    searchc@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), 

    SERIAL_Write@str	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@string(BANK3[128]), 


Critical Paths under _main in COMRAM

    _main->_my_vprintf
    _my_vprintf->_precG
    _upperCL->_strlen
    _strcat->_strcpy
    _setWidth->_strlen
    _precS->_strlen
    _precI->_strlen
    _precG->_roundStr
    _precF->_roundStr
    _precE->_roundStr
    _roundStr->_posc
    _getWP->_reverse
    _searchc->_strlen
    _posc->_strlen
    _atoui->___wmul
    _ftoa_sci->___fltol
    _itoa->_reverse
    _reverse->_strcpy
    _strcpy->_strlen
    _ftoa->___fltol
    _normalize->___fldiv
    _normalize->___flmul
    ___fltol->___flmul
    ___flsub->___flmul
    _cleanS->_strlen
    _addSig->___xxtofl
    _addOx->_strlen
    _SERIAL_Write->_strlen
    _SYSTEM_Init->_SERIAL_Init
    _SERIAL_Init->___aldiv
    _LCD_Init->_LCD_SendCmd
    _LCD_Write->_LCD_WriteChar
    _LCD_WriteChar->_LCD_SetRowCol
    _LCD_RH->_LCD_SendCmd
    _LCD_DisplayCtrl->_LCD_SendCmd
    _LCD_CLS->_LCD_SendCmd
    _CreateChar->_LCD_SetRowCol
    _LCD_WriteByte->_LCD_SendNibble
    _LCD_SetRowCol->_LCD_SendCmd
    _LCD_SetCGRAM->_LCD_SendCmd
    _LCD_SendCmd->_LCD_SendNibble
    _LCD_SendNibble->_LCD_Lat

Critical Paths under _myISR in COMRAM

    _myISR->_BLED_Toggle

Critical Paths under _main in BANK0

    _main->_my_vprintf
    _my_vprintf->_ftoa_sci
    _ftoa_sci->_itoa

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    _getWP->_reverse
    _itoa->_reverse

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_my_vprintf

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  191259
                                             55 COMRAM     2     2      0
                         _BLED_Color
                         _CreateChar
                        _KBD_GetChar
                         _KBD_InChar
                            _LCD_CLS
                    _LCD_DisplayCtrl
                      _LCD_SetRowCol
                          _LCD_Write
                        _SYSTEM_Init
                         _my_vprintf
 ---------------------------------------------------------------------------------
 (1) _my_vprintf                                         240   236      4  173795
                                             53 COMRAM     2     2      0
                                             14 BANK0      4     0      4
                                              0 BANK3    234   234      0
                       _SERIAL_Write
                           ___xxtofl
                              _addOx
                             _addSig
                             _cleanS
                               _ftoa
                           _ftoa_sci
                              _getWP
                               _itoa
                              _precE
                              _precF
                              _precG
                              _precI
                              _precS
                           _setWidth
                             _strcat
                             _strcpy
                             _strlen
                            _upperCL
 ---------------------------------------------------------------------------------
 (2) _upperCL                                              5     3      2    2966
                                              7 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    4057
                                             17 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _setWidth                                            12     8      4    3762
                                              7 COMRAM    12     8      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precS                                               10     6      4    2786
                                              7 COMRAM    10     6      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precI                                               14    10      4    4036
                                              7 COMRAM    14    10      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precG                                               23    19      4   18476
                                             30 COMRAM    23    19      4
                               _posc
                           _roundStr
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precF                                               17    13      4   19932
                                             30 COMRAM    17    13      4
                               _posc
                           _roundStr
                            _searchc
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precE                                               18    14      4   16922
                                             30 COMRAM    18    14      4
                               _posc
                           _roundStr
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _roundStr                                            17    11      6    8841
                                             13 COMRAM    17    11      6
                               _posc
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _getWP                                               28    22      6   19161
                                             21 COMRAM    22    22      0
                                              0 BANK0      6     0      6
                              _atoui
                               _posc
                            _reverse
                            _searchc
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _searchc                                              6     3      3    3441
                                              7 COMRAM     6     3      3
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _posc                                                 6     3      3    4192
                                              7 COMRAM     6     3      3
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _atoui                                                9     7      2    3511
                                              9 COMRAM     9     7      2
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     592
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ftoa_sci                                            14     8      6   28431
                                             38 COMRAM     8     8      0
                                              8 BANK0      6     0      6
                             ___fleq
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _itoa
                          _normalize
 ---------------------------------------------------------------------------------
 (2) _itoa                                                20    12      8    8412
                                             21 COMRAM    12    12      0
                                              0 BANK0      8     0      8
                            ___aldiv
                            ___almod
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                             72    70      2    4198
                                             17 COMRAM     4     2      2
                                              0 BANK1     68    68      0
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                              10     6      4    1217
                                              7 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     613
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                14     8      6   19547
                                             38 COMRAM    14     8      6
                             ___fleq
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _normalize
 ---------------------------------------------------------------------------------
 (3) _normalize                                            8     6      2    7208
                                             28 COMRAM     8     6      2
                            ___fldiv
                             ___flge
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3953
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1016
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     697
                                             28 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4187
                                             28 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3262
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     245
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _cleanS                                               7     5      2    2724
                                              7 COMRAM     7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _addSig                                              12     6      6    5081
                                             17 COMRAM    12     6      6
                             ___flge
                           ___xxtofl (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     806
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _addOx                                               11     6      5    3887
                                              7 COMRAM    11     6      5
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SERIAL_Write                                         4     2      2    2631
                                              7 COMRAM     4     2      2
                   _SERIAL_WriteChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    2380
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SERIAL_WriteChar                                     1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Init                                          0     0      0    2892
                        _BLED_Enable
                     _INTERRUPT_Init
                     _INTERRUPT_Tmr0
                           _KBD_Init
                           _LCD_Init
                        _SERIAL_Init
                         _TIMER0_Int
                       _TIMER0_SetPs
 ---------------------------------------------------------------------------------
 (2) _TIMER0_SetPs                                         3     3      0      22
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_Int                                           4     1      3     338
                                              3 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _SERIAL_Init                                         10     6      4    1205
                                             17 COMRAM    10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     985
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0    1305
                                              7 COMRAM     1     1      0
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (2) _KBD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Tmr0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BLED_Enable                                          3     3      0      22
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            8     6      2    5468
                                             14 COMRAM     8     6      2
                      _LCD_SetRowCol
                      _LCD_WriteChar
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteChar                                        1     1      0    3212
                                             13 COMRAM     1     1      0
                             _LCD_RH
                      _LCD_SetRowCol
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (3) _LCD_RH                                               1     1      0    1305
                                              7 COMRAM     1     1      0
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_DisplayCtrl                                      4     2      2    1853
                                              7 COMRAM     4     2      2
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_CLS                                              1     1      0    1305
                                              7 COMRAM     1     1      0
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (1) _KBD_InChar                                           1     1      0      89
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _KBD_GetChar                                          9     9      0     231
                                              3 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _CreateChar                                           5     2      3    3546
                                             13 COMRAM     5     2      3
                       _LCD_SetCGRAM
                      _LCD_SetRowCol
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteByte                                        1     1      0      67
                                              5 COMRAM     1     1      0
                     _LCD_SendNibble
 ---------------------------------------------------------------------------------
 (3) _LCD_SetRowCol                                        6     5      1    1818
                                              7 COMRAM     6     5      1
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_SetCGRAM                                         2     2      0    1373
                                              7 COMRAM     2     2      0
                        _LCD_SendCmd
 ---------------------------------------------------------------------------------
 (3) _LCD_SendCmd                                          2     1      1    1305
                                              5 COMRAM     2     1      1
                     _LCD_SendNibble
 ---------------------------------------------------------------------------------
 (4) _LCD_SendNibble                                       1     1      0      22
                                              4 COMRAM     1     1      0
                            _LCD_Lat
 ---------------------------------------------------------------------------------
 (5) _LCD_Lat                                              1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BLED_Color                                           5     3      2     262
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myISR                                                0     0      0      22
                        _BLED_Toggle
 ---------------------------------------------------------------------------------
 (8) _BLED_Toggle                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BLED_Color
   _CreateChar
     _LCD_SetCGRAM
       _LCD_SendCmd
         _LCD_SendNibble
           _LCD_Lat
     _LCD_SetRowCol
       _LCD_SendCmd
         _LCD_SendNibble
           _LCD_Lat
     _LCD_WriteByte
       _LCD_SendNibble
         _LCD_Lat
   _KBD_GetChar
   _KBD_InChar
   _LCD_CLS
     _LCD_SendCmd
       _LCD_SendNibble
         _LCD_Lat
   _LCD_DisplayCtrl
     _LCD_SendCmd
       _LCD_SendNibble
         _LCD_Lat
   _LCD_SetRowCol
     _LCD_SendCmd
       _LCD_SendNibble
         _LCD_Lat
   _LCD_Write
     _LCD_SetRowCol
       _LCD_SendCmd
         _LCD_SendNibble
           _LCD_Lat
     _LCD_WriteChar
       _LCD_RH
         _LCD_SendCmd
           _LCD_SendNibble
             _LCD_Lat
       _LCD_SetRowCol
         _LCD_SendCmd
           _LCD_SendNibble
             _LCD_Lat
       _LCD_WriteByte
         _LCD_SendNibble
           _LCD_Lat
   _SYSTEM_Init
     _BLED_Enable
     _INTERRUPT_Init
     _INTERRUPT_Tmr0
     _KBD_Init
     _LCD_Init
       _LCD_SendCmd
         _LCD_SendNibble
           _LCD_Lat
     _SERIAL_Init
       ___aldiv
     _TIMER0_Int
     _TIMER0_SetPs
   _my_vprintf
     _SERIAL_Write
       _SERIAL_WriteChar
       _strlen
     ___xxtofl
     _addOx
       _strlen
     _addSig
       ___flge
       ___xxtofl (ARG)
       _strlen (ARG)
     _cleanS
       _strlen
     _ftoa
       ___fleq
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
       ___xxtofl
       _normalize
         ___fldiv
         ___flge
         ___flmul
     _ftoa_sci
       ___fleq
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
       ___xxtofl
       _itoa
         ___aldiv
         ___almod
         _reverse
           _strcpy
             _strlen (ARG)
           _strlen
       _normalize
         ___fldiv
         ___flge
         ___flmul
     _getWP
       _atoui
         ___wmul
         _strlen
       _posc
         _strlen
       _reverse
         _strcpy
           _strlen (ARG)
         _strlen
       _searchc
         _strlen
       _strlen
     _itoa
       ___aldiv
       ___almod
       _reverse
         _strcpy
           _strlen (ARG)
         _strlen
     _precE
       _posc
         _strlen
       _roundStr
         _posc
           _strlen
         _strlen
       _strlen
     _precF
       _posc
         _strlen
       _roundStr
         _posc
           _strlen
         _strlen
       _searchc
         _strlen
       _strlen
     _precG
       _posc
         _strlen
       _roundStr
         _posc
           _strlen
         _strlen
       _strlen
     _precI
       _strlen
     _precS
       _strlen
     _setWidth
       _strlen
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strcpy
       _strlen (ARG)
     _strlen
     _upperCL
       _strlen

 _myISR (ROOT)
   _BLED_Toggle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     EA      EA      11       91.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     44      44       7       26.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      3C       1       63.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AF      20        0.0%
DATA                 0      0     2AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Sep 04 21:59:19 2020

             ___fldiv@aexp 001C               ___fldiv@bexp 001B                          _c 00D2  
             ___fldiv@sign 0014                         l91 5512                         l94 5524  
                       l88 4D66                __CFG_BOR$ON 000000        ___wmul@multiplicand 0006  
              __CFG_BORV$3 000000               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000               ?_LCD_SendCmd 0006  
                      l100 526C                        l201 3C18                        l203 3C32  
                      l204 3C66                        l212 506A                        l205 3C4C  
                      l302 49C0                        l216 50BA                        l144 5104  
                      l209 3CE0                        l330 49DC                        l323 5374  
                      l331 49E6                        l332 49F0                        l404 2C68  
                      l333 49FA                        l174 556A                        l334 4A04  
                      l159 5564                        l335 4A0E                        l327 49C8  
                      l423 5068                        l336 4A72                        l329 49D2  
                      l417 4CE4                        l442 3198                        l450 38CE  
                      l292 510C                        l196 555C                        l461 3988  
                      l517 18DA                        l294 5118                        l550 4014  
                      l295 514E                        l383 4EAC                        l384 4EA8  
                      l376 4FBE                        l448 38C6                        l528 19BC  
                      l801 553A                        l721 3E66                        l545 4DDE  
                      l705 1464                        l482 150C                        l538 4368  
                      l811 550E              _LCD_SetRowCol 5150                        l804 554C  
                      l820 5436                        l717 4C5A                        l477 35CE  
                      l823 540C                        l559 4132                        l591 33C4  
                      l808 5460                        l840 5198                        l752 2F48  
                      l736 4832                        l656 0AEE                        l817 52B2  
                      l569 3FDE                        l737 483A                        l826 54F6  
                      l746 4252                        l682 10D8                        l763 2972  
                      l836 54D2                        l692 1262                        l845 5014  
                      l951 476A                        l856 48FE                        l938 4474  
                      l859 54AC                        l798 4BC2               __CFG_CPB$OFF 000000  
             __CFG_CPD$OFF 000000               my_vprintf@ch 03D0                        _sig 00D1  
         TIMER0_Int@t0_psa 0006                        wreg 000FE8              ?_LCD_SetCGRAM 0001  
           _LCD_SendNibble 553C               ___flmul@aexp 0011               ___flmul@bexp 0016  
             ___flmul@sign 0010               ___flmul@temp 001B               ___flmul@prod 0017  
          __end_of_LCD_CLS 5438               __CFG_LVP$OFF 000000    __end_of_LCD_DisplayCtrl 54F8  
          __end_of_LCD_Lat 553C        __size_of_BLED_Color 00C2               ___fltol@exp1 0026  
             __CFG_WDT$OFF 000000                       l1124 4638                       l1133 53AC  
                     l1118 4B1C                       l1129 467E                       l1404 1CC6  
                     l1156 457A                       l1413 1D96                       l1414 1D84  
                     l1521 3A78                       l1441 2640                       l1514 39E0  
                     l1443 24A0                       l1452 24E6                       l4101 5526  
                     l1429 5226                       l1517 3B3C                       l1454 255E  
                     l1446 2464                       l4103 5528                       l1455 254C  
                     l1543 4F64                       l1528 3AD4                       l1480 2138  
                     l4105 5538                       l4121 553E                       l1473 1F42  
                     l1537 5486                       l1490 2268                       l1482 21B0  
                     l4123 5548                       l1387 1BAC                       l1483 219E  
                     l1396 1E7C                       l1388 1B9A                       l5101 4B26  
                     l1549 53E2                       l1389 1B60                       l1477 22A6  
                     l4151 543E                       l5111 4B5C                       l5103 4B28  
                     l4153 544E                       l5121 4B94                       l5113 4B6C  
                     l5105 4B38                       l4155 5454                       l5131 555A  
                     l5123 4B9E                       l5115 4B76                       l5107 4B42  
                     l4157 545A                       l4149 543A                       l5133 555E  
                     l5125 4BAE                       l5117 4B80                       l5109 4B52  
                     l5141 534E                       l5127 4BB8                       l5119 4B8A  
                     l5143 5358                       l5135 5338                       l5151 4A18  
                     l5161 5124                       l5129 554E                       l5145 5362  
                     l5137 533A                       l7001 1EAA                       l6211 3C86  
                     l6203 3C5A                       l5147 5372                       l5139 5344  
                     l7011 1EE6                       l7003 1EBA                       l6221 3CDC  
                     l6205 3C66                       l6213 3CA2                       l6141 54D6  
                     l5157 5566                       l5149 49C4                       l7101 2208  
                     l7021 1F1C                       l7013 1EEC                       l7005 1ECA  
                     l6151 4FC0                       l6223 3CDE                       l6215 3CD6  
                     l6207 3C7A                       l6143 54DA                       l6231 484C  
                     l5159 5108                       l5095 4B1E                       l7111 227C  
                     l7103 2222                       l7023 1F2C                       l7015 1EFA  
                     l7007 1ED0                       l6161 4FD0                       l6153 4FC0  
                     l6217 3CD8                       l6209 3C82                       l6145 54E2  
                     l6233 485A                       l6241 48D2                       l5097 4B22  
                     l7113 228A                       l7105 2236                       l7041 1FAE  
                     l7033 1F76                       l7025 1F32                       l7017 1EFC  
                     l7009 1EE0                       l8001 2864                       l7201 2AF8  
                     l6163 4FD8                       l6155 4FC8                       l6219 3CDA  
                     l6171 506A                       l6251 5418                       l6147 54E8  
                     l6235 4864                       l6243 48D6                       l6227 483C  
                     l5099 4B24                       l7131 45F8                       l7123 457C  
                     l7115 228C                       l7107 2250                       l7051 1FF8  
                     l7043 1FC6                       l7035 1F82                       l7027 1F52  
                     l7019 1F0C                       l8011 2946                       l8003 2884  
                     l7211 2B4A                       l7203 2B08                       l4741 5182  
                     l6165 4FEA                       l6173 5084                       l6253 5428  
                     l6149 54EC                       l6237 4872                       l6229 4848  
                     l8101 50E4                       l7141 467C                       l7133 4606  
                     l7125 45AA                       l7109 226C                       l7117 2292  
                     l7061 204E                       l7053 2008                       l7045 1FD2  
                     l7037 1F8C                       l7029 1F62                       l7301 4134  
                     l8005 28C4                       l8013 294A                       l8021 2C9C  
                     l7213 2B76                       l7205 2B14                       l4743 518C  
                     l6167 4FEE                       l6191 3C0C                       l6175 5096  
                     l6255 5432                       l6239 4892                       l8103 50EA  
                     l7135 4618                       l7127 45BA                       l7119 2296  
                     l7071 20F2                       l7063 206A                       l7055 2014  
                     l7047 1FDE                       l7039 1FA2                       l7311 41C6  
                     l7303 413C                       l8015 2966                       l8007 28D2  
                     l8031 2CD6                       l8023 2CA8                       l7151 4F72  
                     l7231 2C04                       l7215 2B7E                       l7207 2B20  
                     l7223 2B9E                       l8111 08FE                       l4745 5194  
                     l4737 5152                       l6169 500A                       l6185 3B56  
                     l6177 50A8                       l6249 540E                       l6601 4422  
                     l8105 50F0                       l7145 5512                       l7137 4626  
                     l7129 45E8                       l7401 39AA                       l7081 2148  
                     l7073 2100                       l7065 2076                       l7057 2024  
                     l7049 1FEC                       l7313 41FA                       l7305 4158  
                     l8009 28D6                       l8041 2D62                       l8033 2CFA  
                     l8025 2CBA                       l8017 2C6A                       l7161 4FBC  
                     l7153 4F90                       l7233 2C14                       l7241 2C60  
                     l7217 2B8E                       l7209 2B2C                       l7225 2BC0  
                     l8201 0BA8                       l8121 0916                       l8113 0906  
                     l4739 5162                       l4931 5508                       l6195 3C26  
                     l6187 3BEE                       l6179 3B3E                       l6611 4454  
                     l6603 4432                       l7147 5520                       l6531 53BA  
                     l7139 4676                       l7331 4AA2                       l7323 51E2  
                     l7411 3A22                       l7403 39F0                       l7083 2156  
                     l7075 211E                       l7067 2092                       l7059 203E  
                     l7315 4200                       l7307 418C                       l8043 2DD2  
                     l8035 2D0E                       l8019 2C6A                       l7251 47C0  
                     l7235 2C24                       l7227 2BD4                       l7219 2B92  
                     l8211 0C04                       l8203 0BC0                       l8131 0964  
                     l8123 0928                       l8115 0906                       l8107 08E8  
                     l4925 54FA                       l6189 3BFE                       l4933 53E4  
                     l6613 4464                       l6605 4434                       l6533 53BE  
                     l7341 4B1A                       l7333 4AB2                       l6701 1AC2  
                     l7325 51F2                       l7421 3AAA                       l7413 3A2E  
                     l7405 3A06                       l7093 21C0                       l7085 215A  
                     l7077 2128                       l7069 20BC                       l7317 4232  
                     l7309 4190                       l6621 4692                       l6541 4F1A  
                     l7261 3CEA                       l8061 2E46                       l8045 2DD8  
                     l8037 2D4E                       l8029 2CC6                       l7253 47F0  
                     l7245 476C                       l7157 4F96                       l7149 4F66  
                     l7501 2F5E                       l7237 2C28                       l7229 2BE8  
                     l7181 2A26                       l7173 29BE                       l7165 2974  
                     l8221 0C90                       l8213 0C14                       l8205 0BD0  
                     l8141 099A                       l8133 0968                       l8125 0934  
                     l8117 0906                       l8109 08F2                       l5831 4996  
                     l4927 54FC                       l6199 3C40                       l4935 53EE  
                     l6607 443E                       l6535 53D6                       l7335 4AE0  
                     l6711 1AD6                       l6703 1AC6                       l7431 3AE8  
                     l7423 3AB6                       l7415 3A60                       l7095 21CC  
                     l7087 2168                       l7079 2136                       l7319 424A  
                     l6631 46DA                       l6623 46A2                       l7263 3D02  
                     l7271 3D26                       l8071 2EE8                       l8063 2EB6  
                     l8055 2DF2                       l8047 2DE4                       l8039 2D5C  
                     l7255 480C                       l7247 4788                       l6551 4E86  
                     l6543 4E4C                       l7159 4F9A                       l7511 2F8C  
                     l7503 2F6A                       l7239 2C46                       l7183 2A50  
                     l7175 29DA                       l7167 29A0                       l8311 1064  
                     l8303 1002                       l8231 0D1C                       l8223 0CA0  
                     l8215 0C1C                       l8207 0BD8                       l8151 09FA  
                     l8143 09A0                       l8135 096C                       l8127 0946  
                     l8119 090E                       l5825 4902                       l4929 5502  
                     l4937 53FE                       l6609 4444                       l6529 53AE  
                     l7337 4AF0                       l7329 4A74                       l7345 5376  
                     l6801 1D1A                       l6721 1AEA                       l6713 1ADA  
                     l6705 1ACA                       l7361 44CA                       l7353 4476  
                     l7433 3B0C                       l7425 3AC4                       l7417 3A62  
                     l7409 3A1A                       l7097 21DA                       l7089 2196  
                     l6641 472A                       l6633 46E2                       l6625 46A6  
                     l6617 4680                       l6561 4C24                       l6553 4BC4  
                     l7281 3D92                       l7273 3D34                       l7265 3D0E  
                     l8081 2F1A                       l8073 2EF6                       l8065 2EBA  
                     l8057 2E32                       l8049 2DEA                       l7249 47A4  
                     l7257 4810                       l6545 4E58                       l7521 3058  
                     l7513 2FF4                       l7505 2F76                       l7185 2A6C  
                     l7177 29F8                       l7193 2A9C                       l7169 29AC  
                     l7601 3456                       l8321 10B8                       l8313 106E  
                     l8305 101A                       l8241 0D7E                       l8233 0D2C  
                     l8225 0CA8                       l8217 0C44                       l8209 0BEC  
                     l8161 0A20                       l8153 0A02                       l8145 09AA  
                     l8137 0974                       l8129 095E                       l5827 4906  
                     l4939 5408                       l7451 4D50                       l7443 4CE6  
                     l8091 50BC                       l7339 4B14                       l7347 538C  
                     l6803 1D28                       l6811 1D46                       l6723 1AEE  
                     l6715 1ADE                       l6707 1ACE                       l6731 1AFE  
                     l7363 44CC                       l7355 448C                       l7435 3B1C  
                     l7427 3AE2                       l7419 3A6E                       l7099 2204  
                     l6643 4734                       l6635 46EE                       l6627 46B4  
                     l6619 4684                       l6539 4F0A                       l6563 4C28  
                     l6555 4BDE                       l7291 3DFC                       l7283 3DB2  
                     l7275 3D48                       l7267 3D12                       l7259 3CE2  
                     l8083 2F40                       l8075 2F02                       l8067 2ED6  
                     l8059 2E40                       l6547 4E76                       l7531 30C4  
                     l7523 3066                       l7515 3000                       l7507 2F7E  
                     l7195 2AB0                       l7187 2A70                       l7179 2A14  
                     l7611 34C2                       l7603 3462                       l8331 111C  
                     l8323 10D4                       l8315 107A                       l8307 1022  
                     l8251 0DEA                       l8243 0D86                       l8235 0D34  
                     l8227 0CD0                       l8219 0C58                       l8171 0A80  
                     l8163 0A34                       l8139 0980                       l8411 35D0  
                     l5829 494C                       l5781 5270                       l6581 4390  
                     l6573 436A                       l7461 4D5E                       l7453 4D52  
                     l7445 4D4A                       l8093 50C0                       l7349 539C  
                     l6805 1D30                       l6813 1D54                       l6741 1B6E  
                     l6733 1B02                       l6725 1AF2                       l6717 1AE2  
                     l6709 1AD2                       l6661 19EA                       l6653 19BE  
                     l7365 44DC                       l7437 3B2A                       l7429 3AE4  
                     l6901 23A6                       l6637 46FC                       l6645 473A  
                     l6629 46C4                       l6565 4C46                       l6557 4BF0  
                     l7285 3DCE                       l7277 3D48                       l7293 3E32  
                     l8077 2F0A                       l8069 2EE2                       l6549 4E82  
                     l7541 3102                       l7525 3082                       l7517 301E  
                     l7533 30C8                       l7509 2F86                       l7197 2AC4  
                     l7189 2A92                       l7613 34CC                       l7605 347C  
                     l7621 3526                       l7701 1724                       l8341 118C  
                     l8333 1138                       l8325 10DC                       l8309 1048  
                     l8261 0E5A                       l8253 0DFA                       l8245 0DAE  
                     l8237 0D56                       l8229 0CE4                       l8181 0AEA  
                     l8173 0A9E                       l8165 0A52                       l8157 0A0A  
                     l8149 09CA                       l8421 360E                       l8413 35D4  
                     l5791 52AE                       l5783 5276                       l6591 43D8  
                     l6583 439E                       l6575 436E                       l7463 4D60  
                     l7455 4D54                       l7447 4D4C                       l8095 50C4  
                     l7471 5234                       l6823 1DA6                       l6831 1DFC  
                     l6815 1D58                       l6807 1D34                       l6751 1B98  
                     l6743 1B7A                       l6735 1B2C                       l6727 1AF6  
                     l6719 1AE6                       l6671 1A24                       l6663 19FA  
                     l6655 19CA                       l7391 455A                       l7375 4506  
                     l7367 44E0                       l7359 44A0                       l7439 3B2C  
                     l6647 474A                       l6639 471A                       l6559 4BFC  
                     l7295 3E4A                       l7287 3DE6                       l7279 3D5C  
                     l6567 5488                       l7551 3160                       l7543 310E  
                     l7527 308A                       l7519 303A                       l7535 30CC  
                     l7199 2ADE                       l7631 35AA                       l7623 3534  
                     l7615 34D8                       l7607 3498                       l7711 17A0  
                     l7703 1730                       l8087 5462                       l8351 11F8  
                     l8343 11A4                       l8335 1156                       l8327 1100  
                     l8319 109C                       l8271 0ECA                       l8263 0E6A  
                     l8255 0E02                       l8247 0DC2                       l8239 0D6E  
                     l8191 0B54                       l8175 0AB0                       l8167 0A64  
                     l8183 0AF2                       l8159 0A0E                       l8431 3648  
                     l8423 361C                       l8415 35D8                       l5793 54B0  
                     l5785 527C                       l6593 43E0                       l6585 43AE  
                     l6577 437C                       l7465 4D62                       l7457 4D56  
                     l7449 4D4E                       l8097 50C8                       l7473 5246  
                     l6841 1E4E                       l6833 1E0C                       l6825 1DB2  
                     l6817 1D66                       l6809 1D44                       l6761 1BEE  
                     l6753 1BBA                       l6745 1B7E                       l6737 1B48  
                     l6729 1AFA                       l6681 1A52                       l6673 1A2A  
                     l6665 1A0A                       l6657 19D8                       l7393 456A  
                     l7385 452E                       l7377 4510                       l7369 44EE  
                     l6921 2428                       l6913 23DE                       l6905 23BA  
                     l6649 475A                       l7297 3E5A                       l7289 3DF8  
                     l6569 54A4                       l7553 317C                       l7545 311A  
                     l7537 30EA                       l7529 30A8                       l7625 3550  
                     l7633 35B0                       l7617 3500                       l7609 34B2  
                     l7561 3810                       l7713 17BC                       l7721 180A  
                     l7705 174A                       l7641 14BA                       l7801 4DBC  
                     l7481 4C84                       l8361 125E                       l8353 1204  
                     l8345 11AC                       l8337 1174                       l8329 1114  
                     l8281 0F3A                       l8273 0EE2                       l8265 0E72  
                     l8257 0E2A                       l8249 0DDA                       l8193 0B70  
                     l8185 0B10                       l8177 0AC0                       l8169 0A74  
                     l8441 3672                       l8433 3656                       l8425 362C  
                     l8417 35EA                       l5795 54C0                       l5787 5290  
                     l6595 43EC                       l6587 43B2                       l6579 438C  
                     l7467 4D64                       l7459 4D5A                       l8099 50DA  
                     l7475 524A                       l7811 401C                       l7491 502A  
                     l6851 1E6C                       l6843 1E54                       l6835 1E1C  
                     l6827 1DC0                       l6819 1D7C                       l6771 1C28  
                     l6763 1BFC                       l6755 1BCA                       l6747 1B8C  
                     l6739 1B58                       l6691 1A86                       l6683 1A54  
                     l6675 1A3C                       l6667 1A0C                       l6659 19DA  
                     l7387 453A                       l7379 451A                       l6931 246E  
                     l6923 2430                       l6915 23F8                       l6907 23CA  
                     l7547 3136                       l7539 30FC                       l7627 356E  
                     l7619 3504                       l7571 388E                       l7563 3834  
                     l7555 37BC                       l7731 1870                       l7723 1816  
                     l7715 17C8                       l7707 1778                       l7651 1520  
                     l7643 14D6                       l7635 1466                       l7803 4DC0  
                     l7483 4CA0                       l8371 12C2                       l8363 1266  
                     l8347 11D2                       l8291 0F90                       l8283 0F52  
                     l8275 0EEA                       l8267 0E9A                       l8259 0E3E  
                     l8195 0B7C                       l8187 0B2E                       l8179 0ACC  
                     l8451 3696                       l8443 3678                       l8435 3658  
                     l8427 3630                       l8419 3600                       l5797 54C4  
                     l5789 52A0                       l6597 43FA                       l6589 43C2  
                     l7469 5228                       l7821 406C                       l7805 3FE0  
                     l7493 5036                       l6845 1E56                       l6837 1E3C  
                     l6829 1DFA                       l6781 1C94                       l6773 1C2A  
                     l6765 1C0A                       l6749 1B8E                       l6685 1A64  
                     l6693 1A8E                       l6677 1A3E                       l6669 1A14  
                     l7389 454A                       l7397 398C                       l6941 24C6  
                     l6933 248C                       l6925 2440                       l6917 2408  
                     l6909 23CA                       l6861 22C4                       l7549 3152  
                     l7629 359A                       l7573 389E                       l7581 3910  
                     l7565 3840                       l7557 37E8                       l7741 190E  
                     l7733 18B4                       l7725 183E                       l7709 1784  
                     l7717 17CC                       l7661 158C                       l7653 153C  
                     l7645 14E6                       l7637 14AA                       l7901 3218  
                     l7485 4CBE                       l7477 4C5C                       l8381 1316  
                     l8373 12E0                       l8365 128A                       l8357 1226  
                     l8349 11EE                       l8293 0FA8                       l8285 0F5A  
                     l8277 0F06                       l8269 0EAE                       l8197 0B94  
                     l8189 0B4C                       l8461 36CE                       l8453 36AC  
                     l8445 3684                       l8437 365A                       l8429 363C  
                     l5799 54C8                       l6599 4404                       l7831 40D6  
                     l7823 409E                       l7815 403A                       l7807 3FF4  
                     l7495 5046                       l6847 1E5C                       l6839 1E40  
                     l6791 1CEC                       l6783 1C96                       l6775 1C34  
                     l6767 1C16                       l6759 1BDE                       l6695 1A9E  
                     l6687 1A74                       l6679 1A44                       l7399 399C  
                     l6951 2504                       l6943 24CC                       l6935 248E  
                     l6927 2454                       l6919 2418                       l6863 22D4  
                     l6871 22FE                       l6855 22A8                       l7591 395E  
                     l7583 391E                       l7575 38DA                       l7567 385A  
                     l7559 3800                       l7751 194E                       l7735 18CE  
                     l7727 1842                       l7719 17EE                       l7663 159E  
                     l7655 1558                       l7671 15D0                       l7647 1500  
                     l7639 14B2                       l7903 323A                       l7479 4C68  
                     l7487 4CC2                       l8391 13FE                       l8383 132E  
                     l8375 12FE                       l8367 129E                       l8359 1242  
                     l8295 0FB0                       l8287 0F78                       l8279 0F1A  
                     l8199 0BA0                       l8471 3704                       l8463 36D0  
                     l8455 36AE                       l8447 3692                       l8439 3670  
                     l7841 4126                       l7825 40AE                       l7817 4062  
                     l7809 4006                       l7497 504A                       l7489 5016  
                     l6849 1E6A                       l6785 1CA6                       l6769 1C1A  
                     l6777 1C3A                       l6697 1AB0                       l6689 1A84  
                     l6961 256E                       l6953 2508                       l6945 24D6  
                     l6937 249E                       l6929 2462                       l6881 232A  
                     l6873 230E                       l6865 22E4                       l6857 22B4  
                     l7593 33C6                       l7585 393E                       l7577 38EA  
                     l7569 3874                       l7753 1976                       l7737 18E2  
                     l7729 1860                       l7681 1634                       l7673 15EE  
                     l7657 1576                       l7665 15AA                       l7649 1514  
                     l7761 4254                       l7921 32D8                       l7913 3292  
                     l7905 3254                       l8369 12A6                       l8297 0FCE  
                     l8385 1338                       l8393 1418                       l8481 3750  
                     l8473 3716                       l8465 36D6                       l8457 36B4  
                     l8449 3694                       l7851 3EB0                       l7843 3E68  
                     l7835 40F4                       l7827 40BE                       l6795 1D00  
                     l6779 1C60                       l6787 1CB6                       l6699 1ABE  
                     l6971 25D0                       l6963 257A                       l6955 2516  
                     l6947 24E4                       l6939 24B0                       l6883 233A  
                     l6891 2364                       l6875 2314                       l6867 22F4  
                     l6859 22C2                       l7499 2F4A                       l7595 340A  
                     l7587 394A                       l7579 38EE                       l7755 197A  
                     l7747 192E                       l7739 18F2                       l7683 1650  
                     l7691 16A2                       l7659 1588                       l7771 42BA  
                     l7763 4268                       l7931 3366                       l7923 32F6  
                     l7915 3298                       l7907 3264                       l8395 142C  
                     l8299 0FE2                       l8387 13D6                       l8483 375A  
                     l8475 3728                       l8467 36E8                       l8459 36C0  
                     l8661 48BC                       l7861 3F26                       l7845 3E7C  
                     l7837 411C                       l7829 40CE                       l6797 1D0A  
                     l6789 1CDC                       l6981 262E                       l6973 25E6  
                     l6965 2588                       l6957 2544                       l6949 24F6  
                     l6893 2374                       l6885 234A                       l6877 231A  
                     l6869 22F6                       l7597 3422                       l7589 395A  
                     l7757 1998                       l7749 1942                       l7693 16C8  
                     l7685 166C                       l7677 160C                       l7669 15CC  
                     l7781 430A                       l7773 42C2                       l7765 4284  
                     l7941 33BA                       l7925 3314                       l7917 32AA  
                     l7909 3280                       l8389 13EA                       l8397 1432  
                     l8653 377E                       l8477 373A                       l8469 36FC  
                     l8485 376A                       l8663 49AA                       l7871 3F7A  
                     l7863 3F32                       l7855 3EDC                       l7847 3E8C  
                     l6799 1D18                       l6983 2634                       l6975 2600  
                     l6967 25B2                       l6895 238A                       l6887 235A  
                     l6879 2328                       l7951 2688                       l7599 3432  
                     l7759 199E                       l7695 16E4                       l7687 168E  
                     l7679 162A                       l7783 4310                       l7775 42DC  
                     l7767 4298                       l7927 3328                       l7919 32BA  
                     l7935 3388                       l8399 1458                       l8655 1358  
                     l8479 374C                       l8487 379C                       l8657 4A2C  
                     l7873 3F82                       l7857 3F04                       l7849 3E9E  
                     l7865 3F46                       l6985 2636                       l6977 261C  
                     l6969 25B6                       l6897 239A                       l6889 235C  
                     l6993 1E7E                       l7961 26CA                       l7953 2698  
                     l7945 2642                       l7697 1702                       l7689 1694  
                     l7785 432E                       l7777 42F8                       l7769 429E  
                     l7793 4D68                       l7929 3348                       l8659 5138  
                     l7883 3FD2                       l7867 3F56                       l7859 3F0A  
                     l6979 2620                       l6899 23A2                       l6995 1E8A  
                     l7971 2758                       l7963 26EE                       l7955 26A8  
                     l7947 264A                       l7699 1720                       l7787 434E  
                     l7795 4D7C                       l7939 33AA                       l7891 31E4  
                     l7877 3FA0                       l7869 3F68                       l6997 1E98  
                     l7981 27FE                       l7973 27C8                       l7965 2706  
                     l7949 267C                       l7789 435E                       l7797 4D98  
                     l7893 31F4                       l7885 319A                       l7879 3FC8  
                     l6999 1E9A                       l7991 283E                       l7983 280A  
                     l7975 27CC                       l7967 2746                       l7959 26BC  
                     l7799 4DAC                       l7895 3200                       l7887 31AE  
                     l7993 284A                       l7985 280E                       l7969 2754  
                     l7977 27D2                       l7897 3210                       l7889 31CA  
                     l7995 284E                       l7987 282A                       l7979 27EC  
                     l7899 3214                       l7997 2852                       l7989 2836  
                     l7999 2856                       STR_1 08D5                       STR_2 086F  
                     STR_3 0852                       STR_4 0833                       STR_5 0814  
                     STR_6 08B6                       STR_7 08A5                       STR_8 088C  
                     STR_9 08C6                       _LATB 000F8A                       _LATD 000F8C  
                     u5120 5372                       u5121 536E                       u5105 5356  
                     u5106 5358                       u5115 5360                       u5116 5362  
                     u7000 4454                       u7001 4450                       u7010 4692  
                     u7011 468E                       u3580 544E                       u6220 5290  
                     u7100 1A3C                       u7020 46B4                       u3581 544A  
                     u6221 528C                       u5085 5342                       u7101 1A38  
                     u7021 46B0                       u6310 4984                       u6230 52A0  
                     u5086 5344                       u7110 1A52                       u7030 46DA  
                     u6311 497C                       u6231 529C                       u5095 534C  
                     u7111 1A4E                       u7031 46D6                       u6240 54C0  
                     u5096 534E                       u7200 1B8C                       u7120 1A64  
                     u7040 46FC                       u8000 2A50                       u6241 54BC  
                     u7201 1B88                       u7121 1A60                       u7041 46F8  
                     u8001 2A4C                       u6250 491A                       u4570 5162  
                     u7210 1BAC                       u7130 1A74                       u7050 471A  
                     u8010 2A8E                       u6251 4912                       u4571 515E  
                     u7211 1BA8                       u7131 1A70                       u7051 4716  
                     u8011 2A8A                       u6308 4962                       u7300 1CEC  
                     u7220 1BBA                       u7140 1AB0                       u7060 474A  
                     u8100 2C46                       u8020 2AB0                       u7301 1CE8  
                     u7221 1BB6                       u7141 1AAC                       u7061 4746  
                     u8101 2C42                       u8021 2AAC                       u6270 493C  
                     u7310 1D18                       u7230 1BCA                       u7150 1ABE  
                     u7070 19D8                       u8110 47A4                       u8030 2AC4  
                     u6271 4934                       u7311 1D14                       u7231 1BC6  
                     u7151 1ABA                       u7071 19D4                       u8111 47A0  
                     u8031 2AC0                       u6328 4986                       u7400 1DFA  
                     u7320 1D28                       u7240 1BFC                       u7160 1B2C  
                     u7080 19EA                       u8200 4232                       u8120 47C0  
                     u8040 2ADE                       u9000 18CE                       u7401 1DF6  
                     u7321 1D24                       u7241 1BF8                       u7161 1B28  
                     u7081 19E6                       u8201 422E                       u8121 47BC  
                     u8041 2ADA                       u9001 18CA                       u6290 4960  
                     u8210 4AA2                       u7410 1E0C                       u7330 1D44  
                     u7250 1C0A                       u7170 1B44                       u7090 19FA  
                     u8130 4832                       u8050 2AF8                       u9010 190E  
                     u6291 4958                       u8211 4A9E                       u7411 1E08  
                     u7331 1D40                       u7251 1C06                       u7171 1B3E  
                     u7091 19F6                       u8131 482E                       u8051 2AF4  
                     u9011 190A                       u6268 491C                       u6620 500A  
                     u8220 4AE0                       u7420 1E1C                       u7340 1D54  
                     u7260 1C28                       u7180 1B46                       u8300 454A  
                     u7500 233A                       u8140 3D02                       u8060 2B4A  
                     u9020 192A                       u9100 4DDE                       i2l45 51DE  
                     u6621 5006                       u8221 4ADC                       u7421 1E18  
                     u7341 1D50                       u7261 1C24                       u8301 4546  
                     u7501 2336                       u8141 3CFE                       u8061 2B46  
                     u9021 1926                       u9101 4DDA                       u6710 3BBC  
                     u6630 5084                       u9110 4006                       u8230 4B14  
                     u7430 1E3C                       u7350 1D66                       u7270 1C60  
                     u7190 1B6E                       u8310 455A                       u7510 234A  
                     u8150 3D34                       u8070 2BBC                       u9030 1998  
                     u6711 3BB4                       u6631 5080                       u9111 4002  
                     u8231 4B10                       u7431 1E38                       u7351 1D62  
                     u7271 1C5C                       u7191 1B6A                       u8311 4556  
                     u7511 2346                       u8151 3D30                       u8071 2BB8  
                     u9031 1994                       u6288 493E                       u6800 3CA2  
                     u6640 5096                       u9200 3ED8                       u9120 4014  
                     u8240 538C                       u7440 1E4E                       u7360 1D7C  
                     u7280 1CA6                       u8400 3B1C                       u8320 399C  
                     u7600 2504                       u7520 238A                       u8160 3D48  
                     u8080 2BD4                       u9040 19BC                       u6801 3C9E  
                     u6641 5092                       u9201 3ED4                       u9121 4010  
                     u8241 5388                       u7441 1E4A                       u7361 1D78  
                     u7281 1CA2                       u8401 3B18                       u8321 3998  
                     u7601 2500                       u7521 2386                       u8161 3D44  
                     u8081 2BD0                       u9041 19B8                       u6730 3BE2  
                     u6650 50A8                       u6810 48FE                       u9210 3F26  
                     u9130 4036                       u7450 1E6A                       u7370 1D92  
                     u7290 1CDC                       u8250 448C                       u8410 3B2A  
                     u8330 39AA                       u7610 2516                       u7530 23CA  
                     u8170 3DB2                       u8090 2BE8                       u9050 4284  
                     u6731 3BDA                       u6651 50A4                       u6811 48FA  
                     u9211 3F22                       u9131 4032                       u7451 1E66  
                     u7371 1D8E                       u7291 1CD8                       u8251 4488  
                     u8411 3B26                       u8331 39A6                       u7611 2512  
                     u7531 23C6                       u8171 3DAE                       u8091 2BE4  
                     u9051 4280                       u6708 3B96                       u6660 50BA  
                     u8420 526C                       u9220 3F56                       u9140 409E  
                     u7380 1DA6                       u8260 44C0                       u8340 3A06  
                     u7620 2544                       u7540 2440                       u7460 22C2  
                     u7700 1EAA                       u6900 4F64                       u8180 3E4A  
                     u8500 303A                       u9060 42DC                       u9300 3264  
                     u6661 50B6                       u8421 5268                       u9221 3F52  
                     u9141 409A                       u7381 1DA2                       u8341 3A02  
                     u7621 2540                       u7541 243C                       u7461 22BE  
                     u7701 1EA6                       u6901 4F60                       u8181 3E46  
                     u8501 3036                       u9061 42D8                       u9301 3260  
                     u6750 3C0C                       u6670 3B6C                       u9230 3F68  
                     u9150 40CE                       u7390 1DC0                       u8270 44EE  
                     u8350 3A5C                       u7630 255A                       u7550 2462  
                     u7470 22D4                       u7710 1EBA                       u8190 41C2  
                     u6910 4E76                       u8510 3058                       u9070 4306  
                     u9310 328E                       u8430 4C84                       u6751 3C08  
                     u6671 3B64                       u9231 3F64                       u9151 40CA  
                     u7391 1DBC                       u8271 44EA                       u8351 3A58  
                     u7631 2556                       u7551 245E                       u7471 22D0  
                     u7711 1EB6                       u8191 41BE                       u6911 4E72  
                     u8511 3054                       u9071 4302                       u9311 328A  
                     u8431 4C80                       u6760 3C26                       u6728 3BBE  
                     u9240 3F7A                       u9160 40F0                       u8280 4502  
                     u8360 3AA6                       u7640 256E                       u7560 248C  
                     u7480 22E4                       u7800 2168                       u7720 1EFA  
                     u9400 267C                       u6920 4EA8                       u8520 3066  
                     u8600 385A                       u9080 432E                       u9320 32AA  
                     u8440 4CA0                       u6761 3C22                       u9241 3F76  
                     u9161 40EC                       u8281 44FE                       u8265 44B6  
                     u8361 3AA2                       u7641 256A                       u7561 2488  
                     u7481 22E0                       u7801 2164                       u7721 1EF6  
                     u9401 2678                       u6921 4EA4                       u8521 3062  
                     u8601 3856                       u9081 432A                       u9321 32A6  
                     u8441 4C9C                       u6770 3C40                       u6690 3B94  
                     u9250 3F9C                       u9170 3E8C                       u8290 452A  
                     u8370 3AC4                       u7650 2588                       u7570 24B0  
                     u7490 2328                       u7810 2196                       u7730 1F0C  
                     u9410 26CA                       u8530 30A8                       u8610 388E  
                     u9090 4D98                       u9330 32BA                       u8450 4CE4  
                     u6771 3C3C                       u6691 3B8C                       u9251 3F98  
                     u9171 3E88                       u8291 4526                       u8371 3AC0  
                     u7651 2584                       u7571 24AC                       u7491 2324  
                     u7811 2192                       u7731 1F08                       u9411 26C6  
                     u6931 4BE8                       u8531 30A4                       u8611 388A  
                     u9091 4D94                       u9331 32B6                       u8451 4CE0  
                     u6780 3C5A                       u6748 3BE4                       u9180 3E9E  
                     u7900 4606                       u8460 5068                       u8380 3AD4  
                     u7660 25D0                       u7580 24C6                       u7820 21AC  
                     u7740 1F1C                       u9420 27EC                       u6940 4C46  
                     u9500 2ED6                       u8540 30EA                       u8700 34C2  
                     u8620 389E                       u9340 32D8                       u9260 31E4  
                     u6781 3C56                       u9181 3E9A                       u7901 4602  
                     u8461 5064                       u8381 3AD0                       u7661 25CC  
                     u7581 24C2                       u7821 21A8                       u7741 1F18  
                     u9421 27E8                       u6941 4C42                       u9501 2ED2  
                     u8541 30E6                       u8701 34BE                       u8621 389A  
                     u9341 32D4                       u9261 31E0                       u6790 3C7A  
                     u6950 437C                       u9190 3EB0                       u7910 4626  
                     u8390 3AE2                       u7670 2600                       u7590 24E4  
                     u7830 21C0                       u7750 1F52                       u9430 27FE  
                     u9510 2EF6                       u8550 30FC                       u8710 3522  
                     u8630 390C                       u9350 32F6                       u9270 31F4  
                     u6791 3C76                       u6951 4378                       u9191 3EAC  
                     u7911 4622                       u8391 3ADE                       u7671 25FC  
                     u7591 24E0                       u7831 21BC                       u7751 1F4E  
                     u9431 27FA                       u9511 2EF2                       u8551 30F8  
                     u8471 2F64                       u8711 351E                       u8631 3908  
                     u9351 32F2                       u9271 31F0                       u6688 3B6E  
                     u6960 439E                       u6880 53D6                       u7920 4676  
                     u7680 262E                       u7840 21DA                       u7760 1F62  
                     u9440 282A                       u8560 3136                       u8720 3534  
                     u8640 391E                       u8800 1588                       u9360 3314  
                     u9280 3236                       u9600 0A9E                       u6961 439A  
                     u6881 53D2                       u7921 4672                       u7681 262A  
                     u7841 21D6                       u7761 1F5E                       u9441 2826  
                     u8561 3132                       u8481 2F70                       u8721 3530  
                     u8641 391A                       u8801 1584                       u9361 3310  
                     u9281 3232                       u9601 0A9A                       u9521 08F8  
                     u6970 43D8                       u7930 5520                       u7850 2222  
                     u7770 20DC                       u7690 1E98                       u9450 2864  
                     u6890 4F52                       u8570 3160                       u8490 301E  
                     u8730 356E                       u8650 393E                       u8810 159E  
                     u9370 3366                       u9290 3254                       u9610 0AB0  
                     u6971 43D4                       u7931 551C                       u7851 221E  
                     u7691 1E94                       u9451 2860                       u8571 315C  
                     u8491 301A                       u8731 356A                       u8651 393A  
                     u8811 159A                       u9371 3362                       u9291 3250  
                     u9611 0AAC                       u9531 0920                       u6980 43FA  
                     u7860 2250                       u7780 2136                       u9460 2880  
                     u7940 4F90                       u8580 317C                       u8740 35CE  
                     u8660 3988                       u8900 16C8                       u8820 15C8  
                     u9380 3384                       u9700 1114                       u9620 0AEA  
                     u9540 0946                       u6981 43F6                       u7861 224C  
                     u7781 2132                       u9461 287C                       u7941 4F8C  
                     u8581 3178                       u8741 35CA                       u8661 3984  
                     u8901 16C4                       u8821 15C4                       u9381 3380  
                     u9701 1110                       u9621 0AE6                       u9541 0942  
                     u6990 4422                       u7870 228A                       u7790 2156  
                     u9470 2966                       u7950 4FBC                       u8670 3422  
                     u8590 3800                       u8910 1702                       u8830 15EE  
                     u8750 14D6                       u9390 33A6                       u9710 1138  
                     u9630 0B10                       u9550 09C6                       u6991 441E  
                     u7871 2286                       u7791 2152                       u7775 20D2  
                     u9471 2962                       u7951 4FB8                       u8671 341E  
                     u8591 37FC                       u8911 16FE                       u8831 15EA  
                     u8751 14D2                       u9391 33A2                       u9711 1134  
                     u9631 0B0C                       u9551 09C2                       u7880 45AA  
                     u9480 2C9C                       u7960 29BA                       u8680 347C  
                     u8920 1720                       u8840 1608                       u8760 1500  
                     u9800 1458                       u9720 1156                       u9640 0B4C  
                     u9560 09FA                       u7881 45A6                       u6897 4F48  
                     u9481 2C98                       u7961 29B6                       u8681 3478  
                     u8921 171C                       u8841 1604                       u8761 14FC  
                     u9801 1454                       u9721 1152                       u9641 0B48  
                     u9561 09F6                       u7890 45E8                       u9490 2CD6  
                     u7970 29DA                       u8690 34B2                       u8930 174A  
                     u8850 162A                       u8770 153C                       u9730 1222  
                     u9650 0B70                       u9570 0A20                       u9810 36FC  
                     u7891 45E4                       u9491 2CD2                       u7971 29D6  
                     u8691 34AE                       u8931 1746                       u8851 1626  
                     u8771 1538                       u9731 121E                       u9651 0B6C  
                     u9571 0A1C                       u9811 36F8                       u7980 29F8  
                     u8940 1778                       u8860 1650                       u8780 1558  
                     u9740 1242                       u9660 1098                       u9580 0A52  
                     u9820 3716                       u7981 29F4                       u8941 1774  
                     u8861 164C                       u8781 1554                       u9741 123E  
                     u9661 1094                       u9581 0A4E                       u9821 3712  
                     u7990 2A14                       u8950 17A0                       u8870 166C  
                     u8790 1576                       u9750 125E                       u9670 10B8  
                     u9590 0A64                       u9830 373A                       u7991 2A10  
                     u8951 179C                       u8871 1668                       u8791 1572  
                     u9751 125A                       u9671 10B4                       u9591 0A60  
                     u9831 3736                       u8960 17BC                       u8880 168A  
                     u9760 128A                       u9680 10D4                       u8961 17B8  
                     u8881 1686                       u9761 1286                       u9681 10D0  
                     u8970 17EE                       u8890 16A2                       u9770 129E  
                     u9690 1100                       u9907 4B48                       u8971 17EA  
                     u8891 169E                       u9771 129A                       u9691 10FC  
                     u8980 1860                       u9780 12C2                       u9917 4B62  
                     u8981 185C                       u9781 12BE                       u8990 1870  
                     u9790 12E0                       u9927 4BA4                       u8991 186C  
                     u9791 12DC                       u9937 53F4                       u9857 35F4  
                     u9947 541E                       u9867 3664                       u9957 3BF4  
                     u9877 36A0                       u9967 552E                       u9887 37A6  
                     u9897 4B2E                       _main 35D0                       _ftoa 2642  
                     _itoa 3CE2            LCD_SetCGRAM@cmd 0008                       _posc 4E4C  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 003D                       prodh 000FF4                       prodl 000FF3  
                     start 000E         __size_of_LCD_Write 00C4              __CFG_IESO$OFF 000000  
          ___fldiv@new_exp 0015      my_vprintf@double_temp 03E0              _LCD_WriteChar 526E  
              _SYSTEM_Init 50BC              __CFG_MCLRE$ON 000000              _LCD_WriteByte 54F8  
             ___param_bank 000000        my_vprintf@uint_temp 03D2           __end_of_KBD_Init 555E  
              ?_TIMER0_Int 0004           __end_of_LCD_Init 4BC4       __size_of_BLED_Enable 004A  
            __CFG_PLLDIV$5 000000             __CFG_CCP2MX$ON 000000                 _CreateChar 4FC0  
           ?_LCD_SetRowCol 0008              ___fltol@sign1 0025            __end_of___aldiv 4476  
          __end_of___almod 476C            __end_of___fladd 1E7E                      ?_main 0001  
                    ?_ftoa 0027            __end_of___fldiv 2642                      ?_itoa 00D3  
          __end_of___flneg 53AE                      STR_10 08E4                      STR_11 08E2  
          __end_of___flmul 22A8                      ?_posc 0008            __end_of___flsub 5228  
          __end_of___fltol 457C       __size_of_BLED_Toggle 0042             __CFG_DEBUG$OFF 000000  
                    i2l306 52BA                      i2l308 52C2                      i2l309 52F4  
   __end_of_LCD_SendNibble 554E                      _RCREG 000FAE                      _TMR0H 000FD7  
                    _TMR1H 000FCF                      _TMR0L 000FD6                      _TMR1L 000FCE  
                    _SPBRG 000FAF                      _PORTB 000F81             ??_LCD_SetCGRAM 0008  
            __CFG_USBDIV$2 000000                      _TRISB 000F93                      _TRISD 000F95  
           my_vprintf@expA 03D6        __size_of_KBD_InChar 0052                      _TXREG 000FAD  
           my_vprintf@prec 03E8              __CFG_PWRT$OFF 000000             my_vprintf@tipo 0801  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
                    _addOx 3E68             __CFG_EBTRB$OFF 000000                      _getWP 2F4A  
                    _lcd_c 00C6                      _lcd_r 003A                      _myISR 0008  
                    _atoui 476C                      _count 00CC                      _precE 33C6  
                    _precF 37BC                      _precG 1466                      _precI 4254  
                    _precS 4D68                      _space 00CE            __end_of_searchc 4FC0  
  __size_of_INTERRUPT_Init 0008                      _zeros 00D0    __size_of_INTERRUPT_Tmr0 0006  
                    itoa@i 0020                      tablat 000FF5            __end_of_reverse 4C5C  
                    posc@a 000C                      posc@c 000A                      plusw1 000FE3  
                    plusw2 000FDB                      ttemp5 003E                      ttemp6 0041  
                    ttemp7 0045              BLED_Color@red 0005                      status 000FD8  
          __end_of_upperCL 4CE6                      wtemp8 003E             __CFG_ICPRT$OFF 000000  
           ?_LCD_WriteChar 0001             ?_LCD_WriteByte 0001               ?_SERIAL_Init 0012  
          __initialization 4DE0               __end_of_main 37BC               __end_of_ftoa 2974  
             __end_of_itoa 3E68               __end_of_posc 4EAE       SERIAL_WriteChar@data 0004  
                   ??_main 0038                     ??_ftoa 002D                     ??_itoa 0016  
                   ??_posc 000B     __end_ofmy_vprintf@tipo 0810              __activetblptr 000002  
         ftoa_sci@exponent 002D                  ??_LCD_CLS 0008            ?_LCD_SendNibble 0001  
                ??_LCD_Lat 0004          __end_of_LCD_Write 4900            my_vprintf@F3551 0060  
          my_vprintf@F3536 0200            my_vprintf@F3544 00CA            my_vprintf@F3548 00C8  
                   ?_addOx 0008                     ?_getWP 00D3                     ?_myISR 0001  
                   ?_atoui 000A           ?_LCD_DisplayCtrl 0008                     ?_precE 001F  
                   ?_precF 001F                     ?_precG 001F                     ?_precI 0008  
                   ?_precS 0008                     _LCD_RH 53E4                     i2l6261 51B2  
                   i2l6263 51B8                     i2l5801 52B6                     i2l6265 51CC  
                   i2l6257 519C                     i2l5803 52CA                     i2l6267 51D2  
                   i2l6259 51AA                     i2l6269 51DC                     i2l8665 52DE  
      __size_of_TIMER0_Int 0040            LCD_SendCmd@data 0007                     _SPBRGH 000FB0  
         __end_of___xxtofl 3B3E            my_vprintf@error 03D4       __size_of_KBD_GetChar 01A4  
           __CFG_VREGEN$ON 000000            my_vprintf@width 03DA             __CFG_XINST$OFF 000000  
           getWP@precision 00D7               LCD_Write@str 000F               ??_BLED_Color 0006  
                   ___flge 457C                     ___fleq 4A74                     _addSig 3FE0  
            SERIAL_Write@i 000A                  ??___aldiv 000C                  ??___almod 000C  
                   addOx@k 0011                  ??___fladd 000C                     ___wmul 5488  
                ??___fldiv 000C                  ??___flneg 0008             __CFG_STVREN$ON 000000  
                ??___flmul 000C                  ??___flsub 0025                  ??___fltol 0021  
                   _alingL 003C                     _cleanS 5016            ??_LCD_SetRowCol 0009  
                   _keyPad 00A0           __end_of_ftoa_sci 2F4A                     clear_0 4E26  
                   clear_1 4E32                     getWP@i 0024                     getWP@j 002A  
                   getWP@k 0026                     getWP@p 0028                ?_CreateChar 000E  
           getWP@width_str 001D                     _strcat 5462                     _strcpy 4F0A  
                   _strlen 53AE                     atoui@i 0011           __end_of_setWidth 33C6  
                   precE@i 002B                     precE@j 002D                     precE@k 002F  
                   precF@i 002A                     precG@f 0028                     precF@j 0026  
                   precF@k 002E                     precE@p 0025                     precG@i 0034  
     __size_of_LCD_SendCmd 002A                     precG@j 0030                     precG@k 0032  
                   precF@p 0028                     precG@p 0026                     precI@i 0014  
                   precI@j 0010                     precI@k 000E                     precS@i 0010  
                ??_searchc 000B               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_reverse 0014  
         __end_of_roundStr 2C6A                  ??_upperCL 000A          ?_SERIAL_WriteChar 0001  
       __end_of_BLED_Color 49C2                 ___flge@ff1 0004                 ___flge@ff2 0008  
             ___xxtofl@arg 000E               ___xxtofl@exp 000D               ___xxtofl@val 0004  
               ___fleq@ff1 0004                 ___fleq@ff2 0008                  ?_KBD_Init 0001  
       ??_SERIAL_WriteChar 0004                 __accesstop 0060    __end_of__initialization 4E3E  
                ?_LCD_Init 0001            __CFG_PBADEN$OFF 000000                 ___flneg@f1 0004  
          ??_LCD_WriteChar 000E               ??_KBD_InChar 0004            ??_LCD_WriteByte 0006  
            ___rparam_used 000001                 ___fltol@f1 001D               ftoa@exponent 0031  
     __end_of_LCD_SetCGRAM 54D4              ?_SERIAL_Write 0008             __pcstackCOMRAM 0001  
             __pidataBANK0 4EAE               __pidataBANK2 52F6              __end_of_addOx 3FE0  
            __end_of_getWP 319A              __end_of_myISR 51E2              __end_of_atoui 483C  
            __end_of_precE 35D0              __end_of_precF 398A              __end_of_precG 19BE  
            __end_of_precI 436A              __end_of_precS 4DE0         __end_of_KBD_InChar 50BC  
               addSig@numS 0012      __end_offtoa_sci@width 0814                    ??_addOx 000D  
                  ??_getWP 0016                    ??_myISR 0004                    ??_atoui 000C  
                  ??_precE 0023                    ??_precF 0023                    ??_precG 0023  
                  ??_precI 000C                    ??_precS 000C             _INTERRUPT_Init 555E  
           _INTERRUPT_Tmr0 5566              ?_TIMER0_SetPs 0001                 __pbssBANK0 00BC  
               __pbssBANK2 0200                    ?_LCD_RH 0001                 ??_KBD_Init 0004  
               ??_LCD_Init 0008        __size_of_CreateChar 0056             ??_SERIAL_Write 000A  
             ?_SYSTEM_Init 0001                    ?___flge 0004                    ?___fleq 0004  
                  ?_addSig 0012                    ?___wmul 0004       __size_of_SERIAL_Init 0082  
                  ?_cleanS 0008               ??_TIMER0_Int 0007                    ?_strcat 0012  
                  ?_strcpy 0008                    ?_strlen 0004         __size_of_normalize 0120  
                  _LCD_CLS 540E                    _LCD_Lat 5526                  ?___xxtofl 0004  
    my_vprintf@string_temp 038E     __end_of_INTERRUPT_Init 5566     __end_of_INTERRUPT_Tmr0 556C  
         LCD_SendCmd@fbyte 0006             ??_TIMER0_SetPs 0004           my_vprintf@buffer 0390  
         my_vprintf@format 0384           my_vprintf@length 0382            __size_of_LCD_RH 002A  
         my_vprintf@valist 03E6                  ?_ftoa_sci 00DB         __end_of_TIMER0_Int 5376  
         my_vprintf@string 0300                setWidth@len 0010                setWidth@str 0008  
       LCD_DisplayCtrl@cmd 000B                    __Hparam 0000                  ?_setWidth 0008  
                  __Lparam 0000              ??_BLED_Enable 0004                    ___aldiv 436A  
          __size_of___flge 0104            __size_of___fleq 00AA                    ___almod 4680  
                  ___fladd 19BE            __size_of_addSig 0154                    ___fldiv 22A8  
                  ___flneg 5376                    ___flmul 1E7E                    ___flsub 51E2  
                  ___fltol 4476            __size_of___wmul 0026            __size_of_cleanS 0054  
         ??_LCD_SendNibble 0005                  ?_roundStr 000E               __psmallconst 0800  
            ??_BLED_Toggle 0001                    addSig@k 001C                    __pcinit 4DE0  
                  __ramtop 0800                    __ptext0 35D0                    __ptext1 08E8  
                  __ptext2 4C5C                    __ptext3 5462                    __ptext4 319A  
                  __ptext5 4D68                    __ptext6 4254                    __ptext7 1466  
                  __ptext8 37BC                    __ptext9 33C6                  _T0CONbits 000FD5  
          __size_of_strcat 0026            __size_of_strcpy 005C            __size_of_strlen 0036  
                _T1CONbits 000FCD                 ??___xxtofl 0008                    cleanS@i 000D  
                  _searchc 4F66           ___aldiv@dividend 0004                    _precInt 00CF  
          ?_INTERRUPT_Init 0001                    _reverse 4BC4            ?_INTERRUPT_Tmr0 0001  
                  _numeral 003B                    _upperCL 4C5C                  _LCD_Write 483C  
           __pintcode_body 519A                    atoui@vp 000F       end_of_initialization 4E3E  
              reverse@F192 0280      __size_of_LCD_SetCGRAM 0026                 getWP@width 00D5  
               ??_ftoa_sci 0027                    itoa@rem 001C                    itoa@num 00D5  
         BLED_Toggle@biled 0003              __Lmediumconst 0000                    itoa@str 00D3  
                  int_func 519A          __end_of_normalize 4254                 ??_setWidth 000C  
                  posc@str 0008                  _RCSTAbits 000FAB           ___aldiv@quotient 000E  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc2 000FDE            BLED_Color@biled 0008            BLED_Color@green 0004  
               ??_roundStr 0014                    strcpy@d 0010                    strlen@a 0006  
                  strcpy@s 000E                    strlen@s 0004               ??_CreateChar 0011  
                _PORTBbits 000F81                 _my_vprintf 08E8        __end_of_BLED_Enable 5150  
              ___fladd@grs 0013        __end_of_BLED_Toggle 52F6              ___xxtofl@sign 000C  
     __end_of_SERIAL_Write 526E               _LCD_SetCGRAM 54AE                  _TRISAbits 000F92  
                _TRISBbits 000F93                  _TRISCbits 000F94                  _TRISEbits 000F96  
              ___fldiv@grs 0017                ___fldiv@rem 0010          __end_offtoa@width 0812  
               ?_LCD_Write 000F           LCD_SetRowCol@cmd 000B           LCD_SetRowCol@col 0008  
         LCD_SetRowCol@row 000D            TIMER0_Int@t0_8b 0007                my_vprintf@i 03E4  
              my_vprintf@j 03DC                my_vprintf@x 03D8              ??_KBD_GetChar 0004  
          TIMER0_Int@t0_cs 0004            TIMER0_Int@t0_se 0005         ftoa_sci@digit_1614 0029  
              ___flmul@grs 0012         my_vprintf@int_temp 03DE          normalize@exponent 001F  
           __end_of_LCD_RH 540E                  _TXSTAbits 000FAC          __size_of_KBD_Init 0010  
       __end_of_CreateChar 5016   __size_of_LCD_DisplayCtrl 0024          __size_of_LCD_Init 00A6  
           ftoa_sci@buffer 00DB  __size_of_SERIAL_WriteChar 0016       __size_of_SYSTEM_Init 004A  
           __end_of___flge 4680             __end_of___fleq 4B1E             __end_of_addSig 4134  
     __end_of_TIMER0_SetPs 4A74             __end_of___wmul 54AE       TIMER0_SetPs@prescale 0006  
              _BAUDCONbits 000FB8             __end_of_cleanS 506A                 LCD_Write@i 0015  
            ??_LCD_SendCmd 0007      __end_of_LCD_SetRowCol 519A             __end_of_strcat 5488  
               ftoa@buffer 0027             __end_of_strcpy 4F66             __end_of_strlen 53E4  
      start_initialization 4DE0                 ftoa@places 0033              setWidth@width 000A  
     LCD_DisplayCtrl@disOn 000A       LCD_DisplayCtrl@curOn 0008           setWidth@widthDif 000E  
                 ??_LCD_RH 0008      __end_of_LCD_WriteChar 52B4      __end_of_LCD_WriteByte 5510  
        KBD_InChar@newChar 0004        __end_of_KBD_GetChar 3CE2              getWP@prec_str 0018  
                 ??___flge 000C                   ??___fleq 000C                   ??_addSig 0018  
           precE@precision 0021                _BLED_Enable 5106                   ??___wmul 0008  
              roundStr@len 0017                   ??_cleanS 000A                roundStr@prn 0012  
              __pdataBANK0 0060                __pdataBANK2 0280           __CFG_LPT1OSC$OFF 000000  
  LCD_DisplayCtrl@curBlink 0009                _BLED_Toggle 52B4              CreateChar@pos 0010  
              ?_my_vprintf 00E1                   ??_strcat 0016             precF@precision 0021  
                 ??_strcpy 000C                   ??_strlen 0006                  ___fladd@a 0008  
                ___fladd@b 0004                   ?_LCD_CLS 0001                  ___fldiv@a 0008  
                ___fldiv@b 0004                   ?_LCD_Lat 0001                  ___flmul@a 0008  
                ___flmul@b 0004                __pbssCOMRAM 003A                  ___flsub@a 0021  
                ___flsub@b 001D              __pcstackBANK0 00D3              __pcstackBANK1 0100  
            __pcstackBANK3 0300        __end_of_LCD_SendCmd 5462             precG@precision 0021  
        __size_of___xxtofl 01B4                ??_LCD_Write 0011           _SERIAL_Init$2462 0016  
                addSig@len 001A                  addSig@num 0014                  addOx@type 000C  
        __size_of_ftoa_sci 02E0              ??_SERIAL_Init 0016                 searchc@str 0008  
                __pintcode 0008             precI@precision 000A                   ?___aldiv 0004  
                 ?___almod 0004                   ?___fladd 0004                   ?___fldiv 0004  
                 ?___flneg 0004          __size_of_setWidth 022C                   ?___flmul 0004  
                 ?___flsub 001D                   ?___fltol 001D         LCD_SendNibble@data 0005  
        ??_LCD_DisplayCtrl 000A           ___almod@dividend 0004      __size_of_SERIAL_Write 0046  
         ??_INTERRUPT_Init 0004           ??_INTERRUPT_Tmr0 0004                  _itoa$1596 0018  
        __size_of_roundStr 02F6             normalize@value 0021                __smallconst 0800  
                 ?_searchc 0008                   ?_reverse 0012             __size_of_addOx 0178  
           __size_of_getWP 0250                   ?_upperCL 0008             __size_of_myISR 51DA  
           __size_of_atoui 00D0             __size_of_precE 020A             __size_of_precF 01CE  
           __size_of_precG 0558             __size_of_precI 0116             __size_of_precS 0078  
                getWP@F271 00BC                  getWP@F269 00C1                  cleanS@len 000B  
                cleanS@str 0008                _KBD_GetChar 3B3E                   _KBD_Init 554E  
          ___aldiv@divisor 0008            ___aldiv@counter 000C                   _LCD_Init 4B1E  
           ___wmul@product 0008                   _LATBbits 000F8A                   _LATCbits 000F8B  
                 _LATDbits 000F8C                   _LATEbits 000F8D        __size_of_my_vprintf 0B7E  
                getWP@form 00D3                   _PIE1bits 000F9D                 reverse@str 0012  
    __size_of_TIMER0_SetPs 00B2                   _PIR1bits 000F9E               _SERIAL_Write 5228  
                 i2u682_40 51AA                   i2u682_41 51A6                   i2u683_40 51CC  
                 i2u683_41 51C8            SERIAL_Init@BAUD 0012                   _RCONbits 000FD0  
         _SERIAL_WriteChar 5510           __CFG_WDTPS$32768 000000                  _normalize 4134  
      __end_of_SERIAL_Init 4D68                _LCD_SendCmd 5438          ___wmul@multiplier 0004  
         __size_of_LCD_CLS 002A           __size_of_LCD_Lat 0016          my_vprintf@sformat 00E1  
            ftoa_sci@digit 0027              ftoa_sci@value 00DD              ftoa_sci@width 0812  
              _INTCON2bits 000FF1                _INTCON3bits 000FF0                  copy_data0 4DF4  
                copy_data1 4E14               _TIMER0_SetPs 49C2                  ftoa@digit 002D  
                ftoa@value 0029                  ftoa@width 0810                   _Pattern1 00B4  
                 __Hrparam 0000                  ftoa_sci@i 002B                   __Lrparam 0000  
               _BLED_Color 4900                 ?_normalize 001D                  itoa@base_ 00D9  
         __size_of___aldiv 010C           __size_of___almod 00EC           __size_of___fladd 04C0  
       LCD_WriteChar@wData 000E           __size_of___fldiv 039A           __size_of___flneg 0038  
         __size_of___flmul 042A           __size_of___flsub 0046           __size_of___fltol 0106  
               upperCL@str 0008            SERIAL_Write@str 0008                   addOx@hoS 0008  
                 addOx@len 000F                   addOx@num 000A              reverse@auxstr 0100  
                 ___xxtofl 398A                 strcat@dest 0012                  precG@digS 002A  
                precE@posE 0029                  precG@posE 002C           __size_of_searchc 005A  
  __size_of_LCD_SendNibble 0012                   __ptext10 2974                   __ptext11 2F4A  
                 __ptext20 4680                   __ptext12 4F66                   __ptext21 2642  
                 __ptext13 4E4C                   __ptext30 4A74                   __ptext22 4134  
                 __ptext14 476C                   __ptext31 5016                   __ptext23 1E7E  
                 __ptext15 5488                   __ptext40 5336                   __ptext32 3FE0  
                 __ptext24 22A8                   __ptext16 2C6A                   __ptext41 4CE6  
                 __ptext33 457C                   __ptext25 398A                   __ptext17 3CE2  
                 __ptext50 53E4                   __ptext42 436A                   __ptext34 3E68  
                 __ptext26 4476                   __ptext18 4BC4                   __ptext51 54D4  
                 __ptext43 4B1E                   __ptext35 5228                   __ptext27 51E2  
                 __ptext19 4F0A                   __ptext60 553C                   __ptext52 540E  
                 __ptext44 554E                   __ptext36 53AE                   __ptext28 19BE  
                 __ptext61 5526                   __ptext53 506A                   __ptext45 5566  
                 __ptext37 5510                   __ptext29 5376                   __ptext62 4900  
                 __ptext54 3B3E                   __ptext46 555E                   __ptext38 50BC  
                 __ptext55 4FC0                   __ptext47 5106                   __ptext39 49C2  
                 __ptext64 52B4                   __ptext56 54F8                   __ptext48 483C  
                 __ptext57 5150                   __ptext49 526E                   __ptext58 54AE  
                 __ptext59 5438           __size_of_reverse 0098             precS@precision 000A  
          ___almod@divisor 0008           __size_of_upperCL 008A            ___almod@counter 000C  
               strcpy@dest 0008                  setWidth@j 0012                   _ftoa_sci 2C6A  
            __size_of_main 01EC              __size_of_ftoa 0332              __size_of_itoa 0186  
            __size_of_posc 0062           BLED_Enable@biled 0006             roundStr@decnum 000E  
               _KBD_InChar 506A        LCD_SetCGRAM@address 0009                   getWP@len 0022  
            ??_SYSTEM_Init 001C                   _setWidth 319A                _SERIAL_Init 4CE6  
             ?_BLED_Enable 0001                   int$flags 003D                   _roundStr 2974  
             ?_BLED_Toggle 0001               ??_my_vprintf 0036                   atoui@num 000D  
                 atoui@str 000A      __CFG_CPUDIV$OSC1_PLL2 000000                 _INTCONbits 000FF2  
        CreateChar@pattern 000E         LCD_WriteByte@wData 0006                  roundStr@e 0010  
                roundStr@i 001B                  roundStr@k 001D                  roundStr@p 0019  
      SERIAL_Init@baudrate 001A                CreateChar@i 0011                   intlevel2 0000  
                 precE@len 0027                   searchc@a 000C                   searchc@c 000A  
                strcat@src 0014                   precF@len 002C                   precG@len 002E  
                 precE@str 001F                   precI@len 0012                   precF@str 001F  
                 precG@str 001F                   precI@str 0008                   precS@len 000E  
                 precS@str 0008            _LCD_DisplayCtrl 54D4               normalize@val 001D  
   __size_of_LCD_SetRowCol 004A                  strcpy@src 000A         __end_of_my_vprintf 1466  
                 reverse@i 0142                   reverse@j 0140                ?_BLED_Color 0004  
              ??_normalize 001F             ftoa@digit_1622 002F                 _TIMER0_Int 5336  
      __end_of_SYSTEM_Init 5106                   upperCL@i 000B               ___aldiv@sign 000D  
   __size_of_LCD_WriteChar 0046     __size_of_LCD_WriteByte 0018   __end_of_SERIAL_WriteChar 5526  
           KBD_GetChar@col 000B              ___fladd@signs 0010             KBD_GetChar@key 0008  
           KBD_GetChar@row 0009         __CFG_FOSC$HSPLL_HS 000000               ?_KBD_GetChar 0001  
             ___almod@sign 000D        my_vprintf@char_temp 0380               ___fladd@aexp 0011  
             ___fladd@bexp 0012                ?_KBD_InChar 0001  
