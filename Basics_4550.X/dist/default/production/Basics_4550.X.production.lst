

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Aug 28 16:33:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           ; Version 2.10
    77                           ; Generated 31/07/2019 GMT
    78                           ; 
    79                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4550 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	idataBANK0
   112  004CE6                     __pidataBANK0:
   113                           	opt callstack 0
   114                           
   115                           ;initializer for my_vprintf@F3518
   116  004CE6  20                 	db	32
   117  004CE7  00                 	db	0
   118  004CE8  00                 	db	0
   119  004CE9  00                 	db	0
   120  004CEA  00                 	db	0
   121  004CEB  00                 	db	0
   122  004CEC  00                 	db	0
   123  004CED  00                 	db	0
   124  004CEE  00                 	db	0
   125  004CEF  00                 	db	0
   126  004CF0  00                 	db	0
   127  004CF1  00                 	db	0
   128  004CF2  00                 	db	0
   129  004CF3  00                 	db	0
   130  004CF4  00                 	db	0
   131  004CF5  00                 	db	0
   132  004CF6  00                 	db	0
   133  004CF7  00                 	db	0
   134  004CF8  00                 	db	0
   135  004CF9  00                 	db	0
   136  004CFA  00                 	db	0
   137  004CFB  00                 	db	0
   138  004CFC  00                 	db	0
   139  004CFD  00                 	db	0
   140  004CFE  00                 	db	0
   141  004CFF  00                 	db	0
   142  004D00  00                 	db	0
   143  004D01  00                 	db	0
   144  004D02  00                 	db	0
   145  004D03  00                 	db	0
   146  004D04  00                 	db	0
   147  004D05  00                 	db	0
   148  004D06  00                 	db	0
   149  004D07  00                 	db	0
   150  004D08  00                 	db	0
   151  004D09  00                 	db	0
   152  004D0A  00                 	db	0
   153  004D0B  00                 	db	0
   154  004D0C  00                 	db	0
   155  004D0D  00                 	db	0
   156  004D0E  00                 	db	0
   157  004D0F  00                 	db	0
   158  004D10  00                 	db	0
   159  004D11  00                 	db	0
   160  004D12  00                 	db	0
   161  004D13  00                 	db	0
   162  004D14  00                 	db	0
   163  004D15  00                 	db	0
   164  004D16  00                 	db	0
   165  004D17  00                 	db	0
   166  004D18  00                 	db	0
   167  004D19  00                 	db	0
   168  004D1A  00                 	db	0
   169  004D1B  00                 	db	0
   170  004D1C  00                 	db	0
   171  004D1D  00                 	db	0
   172  004D1E  00                 	db	0
   173  004D1F  00                 	db	0
   174  004D20  00                 	db	0
   175  004D21  00                 	db	0
   176  004D22  00                 	db	0
   177  004D23  00                 	db	0
   178  004D24  00                 	db	0
   179  004D25  00                 	db	0
   180                           
   181                           ;initializer for _keyPad
   182  004D26  31                 	db	49
   183  004D27  32                 	db	50
   184  004D28  33                 	db	51
   185  004D29  41                 	db	65
   186  004D2A  34                 	db	52
   187  004D2B  35                 	db	53
   188  004D2C  36                 	db	54
   189  004D2D  42                 	db	66
   190  004D2E  37                 	db	55
   191  004D2F  38                 	db	56
   192  004D30  39                 	db	57
   193  004D31  43                 	db	67
   194  004D32  2A                 	db	42
   195  004D33  30                 	db	48
   196  004D34  23                 	db	35
   197  004D35  44                 	db	68
   198  004D36  00                 	db	0
   199  004D37  00                 	db	0
   200  004D38  00                 	db	0
   201  004D39  00                 	db	0
   202                           
   203                           	psect	idataBANK2
   204  004FD0                     __pidataBANK2:
   205                           	opt callstack 0
   206                           
   207                           ;initializer for reverse@F192
   208  004FD0  20                 	db	32
   209  004FD1  00                 	db	0
   210  004FD2  00                 	db	0
   211  004FD3  00                 	db	0
   212  004FD4  00                 	db	0
   213  004FD5  00                 	db	0
   214  004FD6  00                 	db	0
   215  004FD7  00                 	db	0
   216  004FD8  00                 	db	0
   217  004FD9  00                 	db	0
   218  004FDA  00                 	db	0
   219  004FDB  00                 	db	0
   220  004FDC  00                 	db	0
   221  004FDD  00                 	db	0
   222  004FDE  00                 	db	0
   223  004FDF  00                 	db	0
   224  004FE0  00                 	db	0
   225  004FE1  00                 	db	0
   226  004FE2  00                 	db	0
   227  004FE3  00                 	db	0
   228  004FE4  00                 	db	0
   229  004FE5  00                 	db	0
   230  004FE6  00                 	db	0
   231  004FE7  00                 	db	0
   232  004FE8  00                 	db	0
   233  004FE9  00                 	db	0
   234  004FEA  00                 	db	0
   235  004FEB  00                 	db	0
   236  004FEC  00                 	db	0
   237  004FED  00                 	db	0
   238  004FEE  00                 	db	0
   239  004FEF  00                 	db	0
   240  004FF0  00                 	db	0
   241  004FF1  00                 	db	0
   242  004FF2  00                 	db	0
   243  004FF3  00                 	db	0
   244  004FF4  00                 	db	0
   245  004FF5  00                 	db	0
   246  004FF6  00                 	db	0
   247  004FF7  00                 	db	0
   248  004FF8  00                 	db	0
   249  004FF9  00                 	db	0
   250  004FFA  00                 	db	0
   251  004FFB  00                 	db	0
   252  004FFC  00                 	db	0
   253  004FFD  00                 	db	0
   254  004FFE  00                 	db	0
   255  004FFF  00                 	db	0
   256  005000  00                 	db	0
   257  005001  00                 	db	0
   258  005002  00                 	db	0
   259  005003  00                 	db	0
   260  005004  00                 	db	0
   261  005005  00                 	db	0
   262  005006  00                 	db	0
   263  005007  00                 	db	0
   264  005008  00                 	db	0
   265  005009  00                 	db	0
   266  00500A  00                 	db	0
   267  00500B  00                 	db	0
   268  00500C  00                 	db	0
   269  00500D  00                 	db	0
   270  00500E  00                 	db	0
   271  00500F  00                 	db	0
   272                           
   273                           	psect	smallconst
   274  000800                     __psmallconst:
   275                           	opt callstack 0
   276  000800  00                 	db	0
   277  000801                     my_vprintf@tipo:
   278                           	opt callstack 0
   279  000801  25                 	db	37
   280  000802  63                 	db	99
   281  000803  73                 	db	115
   282  000804  64                 	db	100
   283  000805  69                 	db	105
   284  000806  78                 	db	120
   285  000807  58                 	db	88
   286  000808  6F                 	db	111
   287  000809  75                 	db	117
   288  00080A  66                 	db	102
   289  00080B  67                 	db	103
   290  00080C  47                 	db	71
   291  00080D  65                 	db	101
   292  00080E  45                 	db	69
   293  00080F  6E                 	db	110
   294  000810                     __end_ofmy_vprintf@tipo:
   295                           	opt callstack 0
   296  000810  0007               	dw	7
   297  000812                     __end_offtoa@width:
   298                           	opt callstack 0
   299  000812  0006               	dw	6
   300  000814                     __end_offtoa_sci@width:
   301                           	opt callstack 0
   302  0000                     _TMR1L	set	4046
   303  0000                     _TMR1H	set	4047
   304  0000                     _T1CONbits	set	4045
   305  0000                     _TRISAbits	set	3986
   306  0000                     _T0CONbits	set	4053
   307  0000                     _LATCbits	set	3979
   308  0000                     _LATEbits	set	3981
   309  0000                     _TRISEbits	set	3990
   310  0000                     _PORTBbits	set	3969
   311  0000                     _LATBbits	set	3978
   312  0000                     _LATB	set	3978
   313  0000                     _TRISB	set	3987
   314  0000                     _PORTB	set	3969
   315  0000                     _PIE1bits	set	3997
   316  0000                     _INTCON3bits	set	4080
   317  0000                     _INTCON2bits	set	4081
   318  0000                     _TRISBbits	set	3987
   319  0000                     _RCONbits	set	4048
   320  0000                     _TRISDbits	set	3989
   321  0000                     _RCREG	set	4014
   322  0000                     _PIR1bits	set	3998
   323  0000                     _TXREG	set	4013
   324  0000                     _SPBRG	set	4015
   325  0000                     _SPBRGH	set	4016
   326  0000                     _BAUDCONbits	set	4024
   327  0000                     _TXSTAbits	set	4012
   328  0000                     _RCSTAbits	set	4011
   329  0000                     _TRISCbits	set	3988
   330  0000                     _LATDbits	set	3980
   331  0000                     _TMR0L	set	4054
   332  0000                     _TMR0H	set	4055
   333  0000                     _INTCONbits	set	4082
   334  000814                     STR_3:
   335  000814  4D                 	db	77	;'M'
   336  000815  6F                 	db	111	;'o'
   337  000816  74                 	db	116	;'t'
   338  000817  6F                 	db	111	;'o'
   339  000818  72                 	db	114	;'r'
   340  000819  20                 	db	32
   341  00081A  67                 	db	103	;'g'
   342  00081B  69                 	db	105	;'i'
   343  00081C  72                 	db	114	;'r'
   344  00081D  61                 	db	97	;'a'
   345  00081E  6E                 	db	110	;'n'
   346  00081F  64                 	db	100	;'d'
   347  000820  6F                 	db	111	;'o'
   348  000821  20                 	db	32
   349  000822  61                 	db	97	;'a'
   350  000823  20                 	db	32
   351  000824  6C                 	db	108	;'l'
   352  000825  61                 	db	97	;'a'
   353  000826  20                 	db	32
   354  000827  49                 	db	73	;'I'
   355  000828  7A                 	db	122	;'z'
   356  000829  71                 	db	113	;'q'
   357  00082A  75                 	db	117	;'u'
   358  00082B  69                 	db	105	;'i'
   359  00082C  65                 	db	101	;'e'
   360  00082D  72                 	db	114	;'r'
   361  00082E  64                 	db	100	;'d'
   362  00082F  61                 	db	97	;'a'
   363  000830  0A                 	db	10
   364  000831  0A                 	db	10
   365  000832  00                 	db	0
   366  000833                     STR_2:
   367  000833  4D                 	db	77	;'M'
   368  000834  6F                 	db	111	;'o'
   369  000835  74                 	db	116	;'t'
   370  000836  6F                 	db	111	;'o'
   371  000837  72                 	db	114	;'r'
   372  000838  20                 	db	32
   373  000839  67                 	db	103	;'g'
   374  00083A  69                 	db	105	;'i'
   375  00083B  72                 	db	114	;'r'
   376  00083C  61                 	db	97	;'a'
   377  00083D  6E                 	db	110	;'n'
   378  00083E  64                 	db	100	;'d'
   379  00083F  6F                 	db	111	;'o'
   380  000840  20                 	db	32
   381  000841  61                 	db	97	;'a'
   382  000842  20                 	db	32
   383  000843  6C                 	db	108	;'l'
   384  000844  61                 	db	97	;'a'
   385  000845  20                 	db	32
   386  000846  44                 	db	68	;'D'
   387  000847  65                 	db	101	;'e'
   388  000848  72                 	db	114	;'r'
   389  000849  65                 	db	101	;'e'
   390  00084A  63                 	db	99	;'c'
   391  00084B  68                 	db	104	;'h'
   392  00084C  61                 	db	97	;'a'
   393  00084D  0A                 	db	10
   394  00084E  0A                 	db	10
   395  00084F  00                 	db	0
   396  000850                     STR_5:
   397  000850  4C                 	db	76	;'L'
   398  000851  61                 	db	97	;'a'
   399  000852  20                 	db	32
   400  000853  75                 	db	117	;'u'
   401  000854  6C                 	db	108	;'l'
   402  000855  74                 	db	116	;'t'
   403  000856  69                 	db	105	;'i'
   404  000857  6D                 	db	109	;'m'
   405  000858  61                 	db	97	;'a'
   406  000859  20                 	db	32
   407  00085A  74                 	db	116	;'t'
   408  00085B  65                 	db	101	;'e'
   409  00085C  63                 	db	99	;'c'
   410  00085D  6C                 	db	108	;'l'
   411  00085E  61                 	db	97	;'a'
   412  00085F  20                 	db	32
   413  000860  66                 	db	102	;'f'
   414  000861  75                 	db	117	;'u'
   415  000862  65                 	db	101	;'e'
   416  000863  20                 	db	32
   417  000864  25                 	db	37
   418  000865  75                 	db	117	;'u'
   419  000866  0A                 	db	10
   420  000867  0A                 	db	10
   421  000868  00                 	db	0
   422  000869                     STR_4:
   423  000869  4D                 	db	77	;'M'
   424  00086A  6F                 	db	111	;'o'
   425  00086B  74                 	db	116	;'t'
   426  00086C  6F                 	db	111	;'o'
   427  00086D  72                 	db	114	;'r'
   428  00086E  20                 	db	32
   429  00086F  64                 	db	100	;'d'
   430  000870  65                 	db	101	;'e'
   431  000871  74                 	db	116	;'t'
   432  000872  65                 	db	101	;'e'
   433  000873  6E                 	db	110	;'n'
   434  000874  69                 	db	105	;'i'
   435  000875  64                 	db	100	;'d'
   436  000876  6F                 	db	111	;'o'
   437  000877  0A                 	db	10
   438  000878  0A                 	db	10
   439  000879  00                 	db	0
   440  00087A                     STR_1:
   441  00087A  42                 	db	66	;'B'
   442  00087B  49                 	db	73	;'I'
   443  00087C  45                 	db	69	;'E'
   444  00087D  4E                 	db	78	;'N'
   445  00087E  56                 	db	86	;'V'
   446  00087F  45                 	db	69	;'E'
   447  000880  4E                 	db	78	;'N'
   448  000881  49                 	db	73	;'I'
   449  000882  44                 	db	68	;'D'
   450  000883  4F                 	db	79	;'O'
   451  000884  0A                 	db	10
   452  000885  0A                 	db	10
   453  000886  00                 	db	0
   454  000887                     STR_7:
   455  000887  20                 	db	32
   456  000888  00                 	db	0
   457  000889                     STR_6:
   458  000889  25                 	db	37
   459  00088A  00                 	db	0
   460                           
   461                           ; #config settings
   462  00088B  00                 	db	0	; dummy byte at the end
   463  0000                     
   464                           	psect	cinit
   465  004B62                     __pcinit:
   466                           	opt callstack 0
   467  004B62                     start_initialization:
   468                           	opt callstack 0
   469  004B62                     __initialization:
   470                           	opt callstack 0
   471                           
   472                           ; Initialize objects allocated to BANK2 (64 bytes)
   473                           ; load TBLPTR registers with __pidataBANK2
   474  004B62  0ED0               	movlw	low __pidataBANK2
   475  004B64  6EF6               	movwf	tblptrl,c
   476  004B66  0E4F               	movlw	high __pidataBANK2
   477  004B68  6EF7               	movwf	tblptrh,c
   478  004B6A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   479  004B6C  6EF8               	movwf	tblptru,c
   480  004B6E  EE02  F080         	lfsr	0,__pdataBANK2
   481  004B72  EE10 F040          	lfsr	1,64
   482  004B76                     copy_data0:
   483  004B76  0009               	tblrd		*+
   484  004B78  CFF5 FFEE          	movff	tablat,postinc0
   485  004B7C  50E5               	movf	postdec1,w,c
   486  004B7E  50E1               	movf	fsr1l,w,c
   487  004B80  E1FA               	bnz	copy_data0
   488                           
   489                           ; Initialize objects allocated to BANK0 (84 bytes)
   490                           ; load TBLPTR registers with __pidataBANK0
   491  004B82  0EE6               	movlw	low __pidataBANK0
   492  004B84  6EF6               	movwf	tblptrl,c
   493  004B86  0E4C               	movlw	high __pidataBANK0
   494  004B88  6EF7               	movwf	tblptrh,c
   495  004B8A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   496  004B8C  6EF8               	movwf	tblptru,c
   497  004B8E  EE00  F060         	lfsr	0,__pdataBANK0
   498  004B92  EE10 F054          	lfsr	1,84
   499  004B96                     copy_data1:
   500  004B96  0009               	tblrd		*+
   501  004B98  CFF5 FFEE          	movff	tablat,postinc0
   502  004B9C  50E5               	movf	postdec1,w,c
   503  004B9E  50E1               	movf	fsr1l,w,c
   504  004BA0  E1FA               	bnz	copy_data1
   505                           
   506                           ; Clear objects allocated to BANK2 (128 bytes)
   507  004BA2  EE02  F000         	lfsr	0,__pbssBANK2
   508  004BA6  0E80               	movlw	128
   509  004BA8                     clear_0:
   510  004BA8  6AEE               	clrf	postinc0,c
   511  004BAA  06E8               	decf	wreg,f,c
   512  004BAC  E1FD               	bnz	clear_0
   513                           
   514                           ; Clear objects allocated to BANK0 (20 bytes)
   515  004BAE  EE00  F0B4         	lfsr	0,__pbssBANK0
   516  004BB2  0E14               	movlw	20
   517  004BB4                     clear_1:
   518  004BB4  6AEE               	clrf	postinc0,c
   519  004BB6  06E8               	decf	wreg,f,c
   520  004BB8  E1FD               	bnz	clear_1
   521                           
   522                           ; Clear objects allocated to COMRAM (3 bytes)
   523  004BBA  6A3C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   524  004BBC  6A3B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   525  004BBE  6A3A               	clrf	__pbssCOMRAM& (0+255),c
   526  004BC0                     end_of_initialization:
   527                           	opt callstack 0
   528  004BC0                     __end_of__initialization:
   529                           	opt callstack 0
   530  004BC0  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   531  004BC2  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   532  004BC4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   533  004BC6  6EF8               	movwf	tblptru,c
   534  004BC8  0100               	movlb	0
   535  004BCA  EF75  F01F         	goto	_main	;jump to C main() function
   536                           
   537                           	psect	bssCOMRAM
   538  00003A                     __pbssCOMRAM:
   539                           	opt callstack 0
   540  00003A                     _numeral:
   541                           	opt callstack 0
   542  00003A                     	ds	1
   543  00003B                     _alingL:
   544                           	opt callstack 0
   545  00003B                     	ds	1
   546  00003C                     _sig:
   547                           	opt callstack 0
   548  00003C                     	ds	1
   549                           
   550                           	psect	bssBANK0
   551  0000B4                     __pbssBANK0:
   552                           	opt callstack 0
   553  0000B4                     	ds	5
   554  0000B9                     	ds	5
   555  0000BE                     	ds	2
   556  0000C0                     	ds	2
   557  0000C2                     _count:
   558                           	opt callstack 0
   559  0000C2                     	ds	2
   560  0000C4                     _space:
   561                           	opt callstack 0
   562  0000C4                     	ds	1
   563  0000C5                     _precInt:
   564                           	opt callstack 0
   565  0000C5                     	ds	1
   566  0000C6                     _zeros:
   567                           	opt callstack 0
   568  0000C6                     	ds	1
   569  0000C7                     _c:
   570                           	opt callstack 0
   571  0000C7                     	ds	1
   572                           
   573                           	psect	dataBANK0
   574  000060                     __pdataBANK0:
   575                           	opt callstack 0
   576  000060                     my_vprintf@F3518:
   577                           	opt callstack 0
   578  000060                     	ds	64
   579  0000A0                     _keyPad:
   580                           	opt callstack 0
   581  0000A0                     	ds	20
   582                           
   583                           	psect	bssBANK2
   584  000200                     __pbssBANK2:
   585                           	opt callstack 0
   586  000200                     	ds	128
   587                           
   588                           	psect	dataBANK2
   589  000280                     __pdataBANK2:
   590                           	opt callstack 0
   591  000280                     reverse@F192:
   592                           	opt callstack 0
   593  000280                     	ds	64
   594                           
   595                           	psect	cstackBANK3
   596  000300                     __pcstackBANK3:
   597                           	opt callstack 0
   598  000300                     my_vprintf@string:
   599                           	opt callstack 0
   600                           
   601                           ; 128 bytes @ 0x0
   602  000300                     	ds	128
   603  000380                     my_vprintf@char_temp:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x80
   607  000380                     	ds	2
   608  000382                     my_vprintf@length:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x82
   612  000382                     	ds	2
   613  000384                     my_vprintf@format:
   614                           	opt callstack 0
   615                           
   616                           ; 10 bytes @ 0x84
   617  000384                     	ds	10
   618  00038E                     my_vprintf@string_temp:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x8E
   622  00038E                     	ds	2
   623  000390                     my_vprintf@buffer:
   624                           	opt callstack 0
   625                           
   626                           ; 64 bytes @ 0x90
   627  000390                     	ds	64
   628  0003D0                     my_vprintf@ch:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0xD0
   632  0003D0                     	ds	2
   633  0003D2                     my_vprintf@uint_temp:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0xD2
   637  0003D2                     	ds	2
   638  0003D4                     my_vprintf@error:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0xD4
   642  0003D4                     	ds	2
   643  0003D6                     my_vprintf@expA:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0xD6
   647  0003D6                     	ds	2
   648  0003D8                     my_vprintf@x:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0xD8
   652  0003D8                     	ds	2
   653  0003DA                     my_vprintf@width:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0xDA
   657  0003DA                     	ds	2
   658  0003DC                     my_vprintf@j:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0xDC
   662  0003DC                     	ds	2
   663  0003DE                     my_vprintf@int_temp:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0xDE
   667  0003DE                     	ds	2
   668  0003E0                     my_vprintf@double_temp:
   669                           	opt callstack 0
   670                           
   671                           ; 4 bytes @ 0xE0
   672  0003E0                     	ds	4
   673  0003E4                     my_vprintf@i:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0xE4
   677  0003E4                     	ds	2
   678  0003E6                     my_vprintf@valist:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0xE6
   682  0003E6                     	ds	2
   683  0003E8                     my_vprintf@prec:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0xE8
   687  0003E8                     	ds	2
   688                           
   689                           	psect	cstackBANK1
   690  000100                     __pcstackBANK1:
   691                           	opt callstack 0
   692  000100                     reverse@auxstr:
   693                           	opt callstack 0
   694                           
   695                           ; 64 bytes @ 0x0
   696  000100                     	ds	64
   697  000140                     reverse@j:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x40
   701  000140                     	ds	2
   702  000142                     reverse@i:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x42
   706  000142                     	ds	2
   707                           
   708                           	psect	cstackBANK0
   709  0000C8                     __pcstackBANK0:
   710                           	opt callstack 0
   711  0000C8                     getWP@form:
   712                           	opt callstack 0
   713  0000C8                     itoa@str:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x0
   717  0000C8                     	ds	2
   718  0000CA                     getWP@width:
   719                           	opt callstack 0
   720  0000CA                     itoa@num:
   721                           	opt callstack 0
   722                           
   723                           ; 4 bytes @ 0x2
   724  0000CA                     	ds	2
   725  0000CC                     getWP@precision:
   726                           	opt callstack 0
   727                           
   728                           ; 2 bytes @ 0x4
   729  0000CC                     	ds	2
   730  0000CE                     itoa@base_:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x6
   734  0000CE                     	ds	2
   735  0000D0                     ?_ftoa_sci:
   736                           	opt callstack 0
   737  0000D0                     ftoa_sci@buffer:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x8
   741  0000D0                     	ds	2
   742  0000D2                     ftoa_sci@value:
   743                           	opt callstack 0
   744                           
   745                           ; 4 bytes @ 0xA
   746  0000D2                     	ds	4
   747  0000D6                     ?_my_vprintf:
   748                           	opt callstack 0
   749  0000D6                     my_vprintf@sformat:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0xE
   753  0000D6                     	ds	4
   754                           
   755                           	psect	cstackCOMRAM
   756  000001                     __pcstackCOMRAM:
   757                           	opt callstack 0
   758  000001                     ??i2_BLED_Toggle:
   759                           
   760                           ; 1 bytes @ 0x0
   761  000001                     	ds	2
   762  000003                     i2BLED_Toggle@biled:
   763                           	opt callstack 0
   764                           
   765                           ; 1 bytes @ 0x2
   766  000003                     	ds	1
   767  000004                     ??_BLED_Toggle:
   768  000004                     ??_KBD_GetChar:
   769  000004                     ??_TIMER0_SetPs:
   770  000004                     ??_BLED_Enable:
   771  000004                     ?_strlen:
   772                           	opt callstack 0
   773  000004                     ?___wmul:
   774                           	opt callstack 0
   775  000004                     ?___fladd:
   776                           	opt callstack 0
   777  000004                     ?___fldiv:
   778                           	opt callstack 0
   779  000004                     ?___flmul:
   780                           	opt callstack 0
   781  000004                     ?___aldiv:
   782                           	opt callstack 0
   783  000004                     ?___almod:
   784                           	opt callstack 0
   785  000004                     ?___flneg:
   786                           	opt callstack 0
   787  000004                     ?___xxtofl:
   788                           	opt callstack 0
   789  000004                     SERIAL_WriteChar@data:
   790                           	opt callstack 0
   791  000004                     KBD_InChar@newChar:
   792                           	opt callstack 0
   793  000004                     BLED_Color@green:
   794                           	opt callstack 0
   795  000004                     TIMER0_Int@t0_cs:
   796                           	opt callstack 0
   797  000004                     ___wmul@multiplier:
   798                           	opt callstack 0
   799  000004                     strlen@s:
   800                           	opt callstack 0
   801  000004                     ___aldiv@dividend:
   802                           	opt callstack 0
   803  000004                     ___almod@dividend:
   804                           	opt callstack 0
   805  000004                     ___fleq@ff1:
   806                           	opt callstack 0
   807  000004                     ___flge@ff1:
   808                           	opt callstack 0
   809  000004                     ___flneg@f1:
   810                           	opt callstack 0
   811  000004                     ___fladd@b:
   812                           	opt callstack 0
   813  000004                     ___fldiv@b:
   814                           	opt callstack 0
   815  000004                     ___flmul@b:
   816                           	opt callstack 0
   817  000004                     ___xxtofl@val:
   818                           	opt callstack 0
   819                           
   820                           ; 4 bytes @ 0x3
   821  000004                     	ds	1
   822  000005                     BLED_Color@red:
   823                           	opt callstack 0
   824  000005                     TIMER0_Int@t0_se:
   825                           	opt callstack 0
   826                           
   827                           ; 1 bytes @ 0x4
   828  000005                     	ds	1
   829  000006                     ??_BLED_Color:
   830  000006                     BLED_Enable@biled:
   831                           	opt callstack 0
   832  000006                     BLED_Toggle@biled:
   833                           	opt callstack 0
   834  000006                     TIMER0_Int@t0_psa:
   835                           	opt callstack 0
   836  000006                     TIMER0_SetPs@prescale:
   837                           	opt callstack 0
   838  000006                     ___wmul@multiplicand:
   839                           	opt callstack 0
   840  000006                     strlen@a:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0x5
   844  000006                     	ds	1
   845  000007                     TIMER0_Int@t0_8b:
   846                           	opt callstack 0
   847                           
   848                           ; 1 bytes @ 0x6
   849  000007                     	ds	1
   850  000008                     ??___xxtofl:
   851  000008                     ?_posc:
   852                           	opt callstack 0
   853  000008                     KBD_GetChar@key:
   854                           	opt callstack 0
   855  000008                     BLED_Color@biled:
   856                           	opt callstack 0
   857  000008                     SERIAL_Write@str:
   858                           	opt callstack 0
   859  000008                     searchc@str:
   860                           	opt callstack 0
   861  000008                     posc@str:
   862                           	opt callstack 0
   863  000008                     upperCL@str:
   864                           	opt callstack 0
   865  000008                     cleanS@str:
   866                           	opt callstack 0
   867  000008                     precI@str:
   868                           	opt callstack 0
   869  000008                     precS@str:
   870                           	opt callstack 0
   871  000008                     addOx@hoS:
   872                           	opt callstack 0
   873  000008                     setWidth@str:
   874                           	opt callstack 0
   875  000008                     ___wmul@product:
   876                           	opt callstack 0
   877  000008                     strcpy@dest:
   878                           	opt callstack 0
   879  000008                     ___aldiv@divisor:
   880                           	opt callstack 0
   881  000008                     ___almod@divisor:
   882                           	opt callstack 0
   883  000008                     ___fleq@ff2:
   884                           	opt callstack 0
   885  000008                     ___flge@ff2:
   886                           	opt callstack 0
   887  000008                     ___fladd@a:
   888                           	opt callstack 0
   889  000008                     ___fldiv@a:
   890                           	opt callstack 0
   891  000008                     ___flmul@a:
   892                           	opt callstack 0
   893                           
   894                           ; 4 bytes @ 0x7
   895  000008                     	ds	1
   896  000009                     KBD_GetChar@row:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x8
   900  000009                     	ds	1
   901  00000A                     ??_cleanS:
   902  00000A                     ?_atoui:
   903                           	opt callstack 0
   904  00000A                     searchc@c:
   905                           	opt callstack 0
   906  00000A                     posc@c:
   907                           	opt callstack 0
   908  00000A                     SERIAL_Write@i:
   909                           	opt callstack 0
   910  00000A                     precI@precision:
   911                           	opt callstack 0
   912  00000A                     precS@precision:
   913                           	opt callstack 0
   914  00000A                     addOx@num:
   915                           	opt callstack 0
   916  00000A                     setWidth@width:
   917                           	opt callstack 0
   918  00000A                     atoui@str:
   919                           	opt callstack 0
   920  00000A                     strcpy@src:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x9
   924  00000A                     	ds	1
   925  00000B                     KBD_GetChar@col:
   926                           	opt callstack 0
   927  00000B                     upperCL@i:
   928                           	opt callstack 0
   929  00000B                     cleanS@len:
   930                           	opt callstack 0
   931                           
   932                           ; 2 bytes @ 0xA
   933  00000B                     	ds	1
   934  00000C                     ??_atoui:
   935  00000C                     ??_strcpy:
   936  00000C                     ??___fladd:
   937  00000C                     ??___fldiv:
   938  00000C                     ??___flmul:
   939  00000C                     ??_precI:
   940  00000C                     ??_precS:
   941  00000C                     ??_setWidth:
   942  00000C                     ??___fleq:
   943  00000C                     ??___flge:
   944  00000C                     addOx@type:
   945                           	opt callstack 0
   946  00000C                     ___aldiv@counter:
   947                           	opt callstack 0
   948  00000C                     ___almod@counter:
   949                           	opt callstack 0
   950  00000C                     ___xxtofl@sign:
   951                           	opt callstack 0
   952  00000C                     searchc@a:
   953                           	opt callstack 0
   954  00000C                     posc@a:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0xB
   958  00000C                     	ds	1
   959  00000D                     ??_addOx:
   960  00000D                     ___aldiv@sign:
   961                           	opt callstack 0
   962  00000D                     ___almod@sign:
   963                           	opt callstack 0
   964  00000D                     ___xxtofl@exp:
   965                           	opt callstack 0
   966  00000D                     cleanS@i:
   967                           	opt callstack 0
   968  00000D                     atoui@num:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0xC
   972  00000D                     	ds	1
   973  00000E                     ?_roundStr:
   974                           	opt callstack 0
   975  00000E                     roundStr@decnum:
   976                           	opt callstack 0
   977  00000E                     precI@k:
   978                           	opt callstack 0
   979  00000E                     precS@len:
   980                           	opt callstack 0
   981  00000E                     setWidth@widthDif:
   982                           	opt callstack 0
   983  00000E                     strcpy@s:
   984                           	opt callstack 0
   985  00000E                     ___aldiv@quotient:
   986                           	opt callstack 0
   987  00000E                     ___xxtofl@arg:
   988                           	opt callstack 0
   989                           
   990                           ; 4 bytes @ 0xD
   991  00000E                     	ds	1
   992  00000F                     addOx@len:
   993                           	opt callstack 0
   994  00000F                     atoui@vp:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0xE
   998  00000F                     	ds	1
   999  000010                     ___fladd@signs:
  1000                           	opt callstack 0
  1001  000010                     ___flmul@sign:
  1002                           	opt callstack 0
  1003  000010                     roundStr@e:
  1004                           	opt callstack 0
  1005  000010                     precI@j:
  1006                           	opt callstack 0
  1007  000010                     precS@i:
  1008                           	opt callstack 0
  1009  000010                     setWidth@len:
  1010                           	opt callstack 0
  1011  000010                     strcpy@d:
  1012                           	opt callstack 0
  1013  000010                     ___fldiv@rem:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 4 bytes @ 0xF
  1017  000010                     	ds	1
  1018  000011                     ___fladd@aexp:
  1019                           	opt callstack 0
  1020  000011                     ___flmul@aexp:
  1021                           	opt callstack 0
  1022  000011                     addOx@k:
  1023                           	opt callstack 0
  1024  000011                     atoui@i:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x10
  1028  000011                     	ds	1
  1029  000012                     ___fladd@bexp:
  1030                           	opt callstack 0
  1031  000012                     roundStr@prn:
  1032                           	opt callstack 0
  1033  000012                     precI@len:
  1034                           	opt callstack 0
  1035  000012                     addSig@numS:
  1036                           	opt callstack 0
  1037  000012                     setWidth@j:
  1038                           	opt callstack 0
  1039  000012                     reverse@str:
  1040                           	opt callstack 0
  1041  000012                     strcat@dest:
  1042                           	opt callstack 0
  1043  000012                     SERIAL_Init@BAUD:
  1044                           	opt callstack 0
  1045  000012                     ___flmul@grs:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 4 bytes @ 0x11
  1049  000012                     	ds	1
  1050  000013                     ___fladd@grs:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x12
  1054  000013                     	ds	1
  1055  000014                     ??_reverse:
  1056  000014                     ??_roundStr:
  1057  000014                     ___fldiv@sign:
  1058                           	opt callstack 0
  1059  000014                     precI@i:
  1060                           	opt callstack 0
  1061  000014                     strcat@src:
  1062                           	opt callstack 0
  1063  000014                     addSig@num:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x13
  1067  000014                     	ds	1
  1068  000015                     ___fldiv@new_exp:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x14
  1072  000015                     	ds	1
  1073  000016                     ??_getWP:
  1074  000016                     ___flmul@bexp:
  1075                           	opt callstack 0
  1076  000016                     _SERIAL_Init$2399:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x15
  1080  000016                     	ds	1
  1081  000017                     roundStr@len:
  1082                           	opt callstack 0
  1083  000017                     ___fldiv@grs:
  1084                           	opt callstack 0
  1085  000017                     ___flmul@prod:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x16
  1089  000017                     	ds	1
  1090  000018                     ??_addSig:
  1091  000018                     _itoa$1659:
  1092                           	opt callstack 0
  1093  000018                     getWP@prec_str:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 5 bytes @ 0x17
  1097  000018                     	ds	1
  1098  000019                     roundStr@p:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x18
  1102  000019                     	ds	1
  1103  00001A                     SERIAL_Init@baudrate:
  1104                           	opt callstack 0
  1105  00001A                     addSig@len:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x19
  1109  00001A                     	ds	1
  1110  00001B                     ___fldiv@bexp:
  1111                           	opt callstack 0
  1112  00001B                     roundStr@i:
  1113                           	opt callstack 0
  1114  00001B                     ___flmul@temp:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x1A
  1118  00001B                     	ds	1
  1119  00001C                     ___fldiv@aexp:
  1120                           	opt callstack 0
  1121  00001C                     addSig@k:
  1122                           	opt callstack 0
  1123  00001C                     itoa@rem:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x1B
  1127  00001C                     	ds	1
  1128  00001D                     ?_normalize:
  1129                           	opt callstack 0
  1130  00001D                     ?___flsub:
  1131                           	opt callstack 0
  1132  00001D                     ?___fltol:
  1133                           	opt callstack 0
  1134  00001D                     roundStr@k:
  1135                           	opt callstack 0
  1136  00001D                     normalize@val:
  1137                           	opt callstack 0
  1138  00001D                     ___fltol@f1:
  1139                           	opt callstack 0
  1140  00001D                     ___flsub@b:
  1141                           	opt callstack 0
  1142  00001D                     getWP@width_str:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 5 bytes @ 0x1C
  1146  00001D                     	ds	2
  1147  00001F                     precF@str:
  1148                           	opt callstack 0
  1149  00001F                     precE@str:
  1150                           	opt callstack 0
  1151  00001F                     precG@str:
  1152                           	opt callstack 0
  1153  00001F                     normalize@exponent:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x1E
  1157  00001F                     	ds	1
  1158  000020                     itoa@i:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x1F
  1162  000020                     	ds	1
  1163  000021                     ??___fltol:
  1164  000021                     precF@precision:
  1165                           	opt callstack 0
  1166  000021                     precE@precision:
  1167                           	opt callstack 0
  1168  000021                     precG@precision:
  1169                           	opt callstack 0
  1170  000021                     normalize@value:
  1171                           	opt callstack 0
  1172  000021                     ___flsub@a:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x20
  1176  000021                     	ds	1
  1177  000022                     getWP@len:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x21
  1181  000022                     	ds	1
  1182  000023                     ??_precF:
  1183  000023                     ??_precE:
  1184  000023                     ??_precG:
  1185                           
  1186                           ; 1 bytes @ 0x22
  1187  000023                     	ds	1
  1188  000024                     getWP@i:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x23
  1192  000024                     	ds	1
  1193  000025                     ___fltol@sign1:
  1194                           	opt callstack 0
  1195  000025                     precE@p:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x24
  1199  000025                     	ds	1
  1200  000026                     ___fltol@exp1:
  1201                           	opt callstack 0
  1202  000026                     getWP@k:
  1203                           	opt callstack 0
  1204  000026                     precF@j:
  1205                           	opt callstack 0
  1206  000026                     precG@p:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x25
  1210  000026                     	ds	1
  1211  000027                     precE@len:
  1212                           	opt callstack 0
  1213  000027                     ftoa_sci@digit:
  1214                           	opt callstack 0
  1215  000027                     ftoa@buffer:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x26
  1219  000027                     	ds	1
  1220  000028                     getWP@p:
  1221                           	opt callstack 0
  1222  000028                     precF@p:
  1223                           	opt callstack 0
  1224  000028                     precG@f:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x27
  1228  000028                     	ds	1
  1229  000029                     precE@posE:
  1230                           	opt callstack 0
  1231  000029                     ftoa_sci@digit_1677:
  1232                           	opt callstack 0
  1233  000029                     ftoa@value:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x28
  1237  000029                     	ds	1
  1238  00002A                     getWP@j:
  1239                           	opt callstack 0
  1240  00002A                     precF@i:
  1241                           	opt callstack 0
  1242  00002A                     precG@digS:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x29
  1246  00002A                     	ds	1
  1247  00002B                     precE@i:
  1248                           	opt callstack 0
  1249  00002B                     ftoa_sci@i:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x2A
  1253  00002B                     	ds	1
  1254  00002C                     precF@len:
  1255                           	opt callstack 0
  1256  00002C                     precG@posE:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x2B
  1260  00002C                     	ds	1
  1261  00002D                     precE@j:
  1262                           	opt callstack 0
  1263  00002D                     ftoa_sci@exponent:
  1264                           	opt callstack 0
  1265  00002D                     ftoa@digit:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x2C
  1269  00002D                     	ds	1
  1270  00002E                     precF@k:
  1271                           	opt callstack 0
  1272  00002E                     precG@len:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x2D
  1276  00002E                     	ds	1
  1277  00002F                     precE@k:
  1278                           	opt callstack 0
  1279  00002F                     ftoa@digit_1685:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x2E
  1283  00002F                     	ds	1
  1284  000030                     precG@j:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x2F
  1288  000030                     	ds	1
  1289  000031                     ftoa@exponent:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x30
  1293  000031                     	ds	1
  1294  000032                     precG@k:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x31
  1298  000032                     	ds	1
  1299  000033                     ftoa@places:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x32
  1303  000033                     	ds	1
  1304  000034                     precG@i:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x33
  1308  000034                     	ds	2
  1309  000036                     ??_my_vprintf:
  1310                           
  1311                           ; 1 bytes @ 0x35
  1312  000036                     	ds	2
  1313  000038                     ??_main:
  1314                           
  1315                           ; 1 bytes @ 0x37
  1316  000038                     	ds	2
  1317                           
  1318 ;;
  1319 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1320 ;;
  1321 ;; *************** function _main *****************
  1322 ;; Defined at:
  1323 ;;		line 47 in file "src/main.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1339 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1341 ;;Total ram usage:        2 bytes
  1342 ;; Hardware stack levels required when called:    7
  1343 ;; This function calls:
  1344 ;;		_BLED_Color
  1345 ;;		_BLED_Toggle
  1346 ;;		_KBD_GetChar
  1347 ;;		_KBD_InChar
  1348 ;;		_SYSTEM_Init
  1349 ;;		_my_vprintf
  1350 ;; This function is called by:
  1351 ;;		Startup code after reset
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text0
  1356  003EEA                     __ptext0:
  1357                           	opt callstack 0
  1358  003EEA                     _main:
  1359                           	opt callstack 24
  1360  003EEA                     
  1361                           ;src/main.c: 49:     SYSTEM_Init();
  1362  003EEA  ECF0  F026         	call	_SYSTEM_Init	;wreg free
  1363  003EEE                     
  1364                           ;src/main.c: 51:     (TMR0H = 0x48);
  1365  003EEE  0E48               	movlw	72
  1366  003EF0  6ED7               	movwf	215,c	;volatile
  1367  003EF2                     
  1368                           ;src/main.c: 52:     (TMR0L = 0xE5);
  1369  003EF2  0EE5               	movlw	229
  1370  003EF4  6ED6               	movwf	214,c	;volatile
  1371                           
  1372                           ;src/main.c: 53:     BLED_Color(BL1,0,0);
  1373  003EF6  0E00               	movlw	0
  1374  003EF8  6E04               	movwf	BLED_Color@green^0,c
  1375  003EFA  0E00               	movlw	0
  1376  003EFC  6E05               	movwf	BLED_Color@red^0,c
  1377  003EFE  0E00               	movlw	0
  1378  003F00  EC94  F023         	call	_BLED_Color
  1379                           
  1380                           ;src/main.c: 54:     BLED_Color(BL2,0,1);
  1381  003F04  0E00               	movlw	0
  1382  003F06  6E04               	movwf	BLED_Color@green^0,c
  1383  003F08  0E01               	movlw	1
  1384  003F0A  6E05               	movwf	BLED_Color@red^0,c
  1385  003F0C  0E01               	movlw	1
  1386  003F0E  EC94  F023         	call	_BLED_Color
  1387  003F12                     
  1388                           ;src/main.c: 56:     _delay((unsigned long)((1000)*(48000000/4000.0)));
  1389  003F12  0E3D               	movlw	61
  1390  003F14  6E39               	movwf	(??_main+1)^0,c
  1391  003F16  0EE1               	movlw	225
  1392  003F18  6E38               	movwf	??_main^0,c
  1393  003F1A  0E40               	movlw	64
  1394  003F1C                     u9627:
  1395  003F1C  2EE8               	decfsz	wreg,f,c
  1396  003F1E  D7FE               	bra	u9627
  1397  003F20  2E38               	decfsz	??_main^0,f,c
  1398  003F22  D7FC               	bra	u9627
  1399  003F24  2E39               	decfsz	(??_main+1)^0,f,c
  1400  003F26  D7FA               	bra	u9627
  1401  003F28                     
  1402                           ;src/main.c: 57:     my_vprintf("BIENVENIDO\n\n");
  1403  003F28  0E7A               	movlw	low STR_1
  1404  003F2A  0100               	movlb	0	; () banked
  1405  003F2C  6FD6               	movwf	my_vprintf@sformat& (0+255),b
  1406  003F2E  0E08               	movlw	high STR_1
  1407  003F30  6FD7               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1408  003F32  EC46  F004         	call	_my_vprintf	;wreg free
  1409  003F36                     l7940:
  1410                           
  1411                           ;src/main.c: 60:     {;src/main.c: 61:         BLED_Toggle(BL2);
  1412  003F36  0E01               	movlw	1
  1413  003F38  ECA6  F027         	call	_BLED_Toggle
  1414  003F3C                     
  1415                           ;src/main.c: 62:         KBD_InChar();
  1416  003F3C  ECC7  F026         	call	_KBD_InChar	;wreg free
  1417  003F40                     
  1418                           ;src/main.c: 63:         c = KBD_GetChar();
  1419  003F40  EC7A  F01C         	call	_KBD_GetChar	;wreg free
  1420  003F44  0100               	movlb	0	; () banked
  1421  003F46  6FC7               	movwf	_c& (0+255),b
  1422                           
  1423                           ;src/main.c: 64:         switch (c)
  1424  003F48  EFE8  F01F         	goto	l7976
  1425  003F4C                     l7946:
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;src/main.c: 67:                 my_vprintf("Motor girando a la Derecha\n\n");
  1429  003F4C  0E33               	movlw	low STR_2
  1430  003F4E  6FD6               	movwf	my_vprintf@sformat& (0+255),b
  1431  003F50  0E08               	movlw	high STR_2
  1432  003F52  6FD7               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1433  003F54  EC46  F004         	call	_my_vprintf	;wreg free
  1434  003F58                     
  1435                           ;src/main.c: 68:                 LATDbits.LATD0 = 0;
  1436  003F58  908C               	bcf	140,0,c	;volatile
  1437  003F5A                     
  1438                           ;src/main.c: 69:                 LATDbits.LATD1 = 0;
  1439  003F5A  928C               	bcf	140,1,c	;volatile
  1440  003F5C                     
  1441                           ;src/main.c: 70:                 _delay((unsigned long)((1000)*(48000000/4000.0)));
  1442  003F5C  0E3D               	movlw	61
  1443  003F5E  6E39               	movwf	(??_main+1)^0,c
  1444  003F60  0EE1               	movlw	225
  1445  003F62  6E38               	movwf	??_main^0,c
  1446  003F64  0E40               	movlw	64
  1447  003F66                     u9637:
  1448  003F66  2EE8               	decfsz	wreg,f,c
  1449  003F68  D7FE               	bra	u9637
  1450  003F6A  2E38               	decfsz	??_main^0,f,c
  1451  003F6C  D7FC               	bra	u9637
  1452  003F6E  2E39               	decfsz	(??_main+1)^0,f,c
  1453  003F70  D7FA               	bra	u9637
  1454  003F72                     
  1455                           ;src/main.c: 71:                 LATDbits.LATD0 = 0;
  1456  003F72  908C               	bcf	140,0,c	;volatile
  1457  003F74                     
  1458                           ;src/main.c: 72:                 LATDbits.LATD1 = 1;
  1459  003F74  828C               	bsf	140,1,c	;volatile
  1460                           
  1461                           ;src/main.c: 73:                 break;
  1462  003F76  EF01  F020         	goto	l7978
  1463  003F7A                     l7958:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;src/main.c: 75:                 my_vprintf("Motor girando a la Izquierda\n\n");
  1467  003F7A  0E14               	movlw	low STR_3
  1468  003F7C  6FD6               	movwf	my_vprintf@sformat& (0+255),b
  1469  003F7E  0E08               	movlw	high STR_3
  1470  003F80  6FD7               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1471  003F82  EC46  F004         	call	_my_vprintf	;wreg free
  1472  003F86                     
  1473                           ;src/main.c: 76:                 LATDbits.LATD0 = 0;
  1474  003F86  908C               	bcf	140,0,c	;volatile
  1475  003F88                     
  1476                           ;src/main.c: 77:                 LATDbits.LATD1 = 0;
  1477  003F88  928C               	bcf	140,1,c	;volatile
  1478  003F8A                     
  1479                           ;src/main.c: 78:                 _delay((unsigned long)((1000)*(48000000/4000.0)));
  1480  003F8A  0E3D               	movlw	61
  1481  003F8C  6E39               	movwf	(??_main+1)^0,c
  1482  003F8E  0EE1               	movlw	225
  1483  003F90  6E38               	movwf	??_main^0,c
  1484  003F92  0E40               	movlw	64
  1485  003F94                     u9647:
  1486  003F94  2EE8               	decfsz	wreg,f,c
  1487  003F96  D7FE               	bra	u9647
  1488  003F98  2E38               	decfsz	??_main^0,f,c
  1489  003F9A  D7FC               	bra	u9647
  1490  003F9C  2E39               	decfsz	(??_main+1)^0,f,c
  1491  003F9E  D7FA               	bra	u9647
  1492  003FA0                     
  1493                           ;src/main.c: 79:                 LATDbits.LATD0 = 1;
  1494  003FA0  808C               	bsf	140,0,c	;volatile
  1495  003FA2                     
  1496                           ;src/main.c: 80:                 LATDbits.LATD1 = 0;
  1497  003FA2  928C               	bcf	140,1,c	;volatile
  1498                           
  1499                           ;src/main.c: 81:                 break;
  1500  003FA4  EF01  F020         	goto	l7978
  1501  003FA8                     l7970:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;src/main.c: 83:                 my_vprintf("Motor detenido\n\n");
  1505  003FA8  0E69               	movlw	low STR_4
  1506  003FAA  6FD6               	movwf	my_vprintf@sformat& (0+255),b
  1507  003FAC  0E08               	movlw	high STR_4
  1508  003FAE  6FD7               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1509  003FB0  EC46  F004         	call	_my_vprintf	;wreg free
  1510  003FB4                     
  1511                           ;src/main.c: 84:                 LATDbits.LATD0 = 0;
  1512  003FB4  908C               	bcf	140,0,c	;volatile
  1513  003FB6                     
  1514                           ;src/main.c: 85:                 LATDbits.LATD1 = 0;
  1515  003FB6  928C               	bcf	140,1,c	;volatile
  1516  003FB8                     l44:
  1517                           
  1518                           ;src/main.c: 87:                 my_vprintf("La ultima tecla fue %u\n\n", c);
  1519  003FB8  0E50               	movlw	low STR_5
  1520  003FBA  0100               	movlb	0	; () banked
  1521  003FBC  6FD6               	movwf	my_vprintf@sformat& (0+255),b
  1522  003FBE  0E08               	movlw	high STR_5
  1523  003FC0  6FD7               	movwf	(my_vprintf@sformat+1)& (0+255),b
  1524  003FC2  C0C7  F0D8         	movff	_c,?_my_vprintf+2
  1525  003FC6  6BD9               	clrf	(?_my_vprintf+3)& (0+255),b
  1526  003FC8  EC46  F004         	call	_my_vprintf	;wreg free
  1527                           
  1528                           ;src/main.c: 89:         }
  1529  003FCC  EF01  F020         	goto	l7978
  1530  003FD0                     l7976:
  1531                           
  1532                           ; BSR set to: 0
  1533  003FD0  51C7               	movf	_c& (0+255),w,b
  1534  003FD2  6E38               	movwf	??_main^0,c
  1535  003FD4  6A39               	clrf	(??_main+1)^0,c
  1536                           
  1537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1538                           ; Switch size 1, requested type "simple"
  1539                           ; Number of cases is 1, Range of values is 0 to 0
  1540                           ; switch strategies available:
  1541                           ; Name         Instructions Cycles
  1542                           ; simple_byte            4     3 (average)
  1543                           ;	Chosen strategy is simple_byte
  1544  003FD6  5039               	movf	(??_main+1)^0,w,c
  1545  003FD8  0A00               	xorlw	0	; case 0
  1546  003FDA  B4D8               	btfsc	status,2,c
  1547  003FDC  EFF2  F01F         	goto	l8144
  1548  003FE0  EFDC  F01F         	goto	l44
  1549  003FE4                     l8144:
  1550                           
  1551                           ; BSR set to: 0
  1552                           ; Switch size 1, requested type "simple"
  1553                           ; Number of cases is 3, Range of values is 65 to 67
  1554                           ; switch strategies available:
  1555                           ; Name         Instructions Cycles
  1556                           ; simple_byte           10     6 (average)
  1557                           ;	Chosen strategy is simple_byte
  1558  003FE4  5038               	movf	??_main^0,w,c
  1559  003FE6  0A41               	xorlw	65	; case 65
  1560  003FE8  B4D8               	btfsc	status,2,c
  1561  003FEA  EFA6  F01F         	goto	l7946
  1562  003FEE  0A03               	xorlw	3	; case 66
  1563  003FF0  B4D8               	btfsc	status,2,c
  1564  003FF2  EFBD  F01F         	goto	l7958
  1565  003FF6  0A01               	xorlw	1	; case 67
  1566  003FF8  B4D8               	btfsc	status,2,c
  1567  003FFA  EFD4  F01F         	goto	l7970
  1568  003FFE  EFDC  F01F         	goto	l44
  1569  004002                     l7978:
  1570                           
  1571                           ;src/main.c: 90:         _delay((unsigned long)((2000)*(48000000/4000.0)));
  1572  004002  0E7A               	movlw	122
  1573  004004  6E39               	movwf	(??_main+1)^0,c
  1574  004006  0EC1               	movlw	193
  1575  004008  6E38               	movwf	??_main^0,c
  1576  00400A  0E82               	movlw	130
  1577  00400C                     u9657:
  1578  00400C  2EE8               	decfsz	wreg,f,c
  1579  00400E  D7FE               	bra	u9657
  1580  004010  2E38               	decfsz	??_main^0,f,c
  1581  004012  D7FC               	bra	u9657
  1582  004014  2E39               	decfsz	(??_main+1)^0,f,c
  1583  004016  D7FA               	bra	u9657
  1584  004018  EF9B  F01F         	goto	l7940
  1585  00401C  EF07  F000         	goto	start
  1586  004020                     __end_of_main:
  1587                           	opt callstack 0
  1588                           
  1589 ;; *************** function _my_vprintf *****************
  1590 ;; Defined at:
  1591 ;;		line 8 in file "src/print/my_print.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  sformat         2   14[BANK0 ] PTR const unsigned char 
  1594 ;;		 -> STR_5(25), STR_4(17), STR_3(31), STR_2(29), 
  1595 ;;		 -> STR_1(13), 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  string        128    0[BANK3 ] unsigned char [128]
  1598 ;;  buffer         64  144[BANK3 ] unsigned char [64]
  1599 ;;  format         10  132[BANK3 ] unsigned char [10]
  1600 ;;  double_temp     4  224[BANK3 ] unsigned char [10]
  1601 ;;  prec            2  232[BANK3 ] int 
  1602 ;;  valist          2  230[BANK3 ] PTR void [1]
  1603 ;;		 -> ?_my_vprintf(2), 
  1604 ;;  i               2  228[BANK3 ] int 
  1605 ;;  int_temp        2  222[BANK3 ] int 
  1606 ;;  j               2  220[BANK3 ] int 
  1607 ;;  width           2  218[BANK3 ] int 
  1608 ;;  x               2  216[BANK3 ] int 
  1609 ;;  ch              2  208[BANK3 ] unsigned char [2]
  1610 ;;  expA            2  214[BANK3 ] int 
  1611 ;;  char_temp       2  128[BANK3 ] unsigned char [2]
  1612 ;;  error           2  212[BANK3 ] int 
  1613 ;;  uint_temp       2  210[BANK3 ] unsigned short 
  1614 ;;  string_temp     2  142[BANK3 ] PTR unsigned char 
  1615 ;;		 -> ?_my_vprintf(2), 
  1616 ;;  length          2  130[BANK3 ] int 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  2   14[BANK0 ] int 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1626 ;;      Params:         0       4       0       0       0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0     234       0       0       0       0
  1628 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1629 ;;      Totals:         2       4       0       0     234       0       0       0       0
  1630 ;;Total ram usage:      240 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    6
  1633 ;; This function calls:
  1634 ;;		_SERIAL_Write
  1635 ;;		___xxtofl
  1636 ;;		_addOx
  1637 ;;		_addSig
  1638 ;;		_cleanS
  1639 ;;		_ftoa
  1640 ;;		_ftoa_sci
  1641 ;;		_getWP
  1642 ;;		_itoa
  1643 ;;		_precE
  1644 ;;		_precF
  1645 ;;		_precG
  1646 ;;		_precI
  1647 ;;		_precS
  1648 ;;		_setWidth
  1649 ;;		_strcat
  1650 ;;		_strcpy
  1651 ;;		_strlen
  1652 ;;		_upperCL
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text1
  1659  00088C                     __ptext1:
  1660                           	opt callstack 0
  1661  00088C                     _my_vprintf:
  1662                           	opt callstack 24
  1663  00088C                     
  1664                           ;src/print/my_print.c: 9:  va_list valist;;src/print/my_print.c: 11:  *valist = __va_sta
      +                          rt();
  1665  00088C  0ED8               	movlw	low (?_my_vprintf+2)
  1666  00088E  0103               	movlb	3	; () banked
  1667  000890  6FE6               	movwf	my_vprintf@valist& (0+255),b
  1668  000892  0E00               	movlw	high (?_my_vprintf+2)
  1669  000894  6FE7               	movwf	(my_vprintf@valist+1)& (0+255),b
  1670  000896                     
  1671                           ; BSR set to: 3
  1672                           ;src/print/my_print.c: 13:  const char tipo[]= {'%','c','s','d','i','x','X','o','u','f',
      +                          'g','G','e','E','n'};;src/print/my_print.c: 14:  char string[128] = "";
  1673  000896  EE23  F000         	lfsr	2,my_vprintf@string
  1674  00089A  0E7F               	movlw	127
  1675  00089C                     u9321:
  1676  00089C  6ADE               	clrf	postinc2,c
  1677  00089E  06E8               	decf	wreg,f,c
  1678  0008A0  E2FD               	bc	u9321
  1679  0008A2                     
  1680                           ; BSR set to: 3
  1681                           ;src/print/my_print.c: 15:  int length = 0;
  1682  0008A2  0E00               	movlw	0
  1683  0008A4  6F83               	movwf	(my_vprintf@length+1)& (0+255),b
  1684  0008A6  0E00               	movlw	0
  1685  0008A8  6F82               	movwf	my_vprintf@length& (0+255),b
  1686  0008AA                     
  1687                           ; BSR set to: 3
  1688                           ;src/print/my_print.c: 18:  int i, j, x;;src/print/my_print.c: 19:  char char_temp[2] = 
      +                          {0,0};
  1689  0008AA  0E00               	movlw	0
  1690  0008AC  6F81               	movwf	(my_vprintf@char_temp+1)& (0+255),b
  1691  0008AE  0E00               	movlw	0
  1692  0008B0  6F80               	movwf	my_vprintf@char_temp& (0+255),b
  1693  0008B2                     
  1694                           ; BSR set to: 3
  1695                           ;src/print/my_print.c: 20:  char *string_temp;;src/print/my_print.c: 21:  double double_
      +                          temp;;src/print/my_print.c: 22:  char ch[2]={0,0};
  1696  0008B2  0E00               	movlw	0
  1697  0008B4  6FD1               	movwf	(my_vprintf@ch+1)& (0+255),b
  1698  0008B6  0E00               	movlw	0
  1699  0008B8  6FD0               	movwf	my_vprintf@ch& (0+255),b
  1700  0008BA                     
  1701                           ; BSR set to: 3
  1702                           ;src/print/my_print.c: 23:  char format[10];;src/print/my_print.c: 24:  char buffer[64] 
      +                          = " ";
  1703  0008BA  EE20  F060         	lfsr	2,my_vprintf@F3518
  1704  0008BE  EE13  F090         	lfsr	1,my_vprintf@buffer
  1705  0008C2  0E3F               	movlw	63
  1706  0008C4                     u9331:
  1707  0008C4  CFDB FFE3          	movff	plusw2,plusw1
  1708  0008C8  06E8               	decf	wreg,f,c
  1709  0008CA  E2FC               	bc	u9331
  1710  0008CC                     
  1711                           ; BSR set to: 3
  1712                           ;src/print/my_print.c: 25:  int expA;;src/print/my_print.c: 26:  int prec;;src/print/my_
      +                          print.c: 27:  int width;;src/print/my_print.c: 28:  int error = 0;
  1713  0008CC  0E00               	movlw	0
  1714  0008CE  6FD5               	movwf	(my_vprintf@error+1)& (0+255),b
  1715  0008D0  0E00               	movlw	0
  1716  0008D2  6FD4               	movwf	my_vprintf@error& (0+255),b
  1717                           
  1718                           ;src/print/my_print.c: 34:  while ( (ch[0] = *sformat++)) {
  1719  0008D4  EFEB  F009         	goto	l7916
  1720  0008D8                     l7644:
  1721                           
  1722                           ; BSR set to: 3
  1723                           ;src/print/my_print.c: 35:   if ( '%' == ch[0] ) {
  1724  0008D8  0E25               	movlw	37
  1725  0008DA  19D0               	xorwf	my_vprintf@ch& (0+255),w,b
  1726  0008DC  A4D8               	btfss	status,2,c
  1727  0008DE  EF73  F004         	goto	u9341
  1728  0008E2  EF75  F004         	goto	u9340
  1729  0008E6                     u9341:
  1730  0008E6  EFDE  F009         	goto	l7912
  1731  0008EA                     u9340:
  1732  0008EA                     
  1733                           ; BSR set to: 3
  1734                           ;src/print/my_print.c: 36:    cleanS(buffer);
  1735  0008EA  0E90               	movlw	low my_vprintf@buffer
  1736  0008EC  6E08               	movwf	cleanS@str^0,c
  1737  0008EE  0E03               	movlw	high my_vprintf@buffer
  1738  0008F0  6E09               	movwf	(cleanS@str+1)^0,c
  1739  0008F2  EC9D  F026         	call	_cleanS	;wreg free
  1740                           
  1741                           ;src/print/my_print.c: 37:    cleanS(format);
  1742  0008F6  0E84               	movlw	low my_vprintf@format
  1743  0008F8  6E08               	movwf	cleanS@str^0,c
  1744  0008FA  0E03               	movlw	high my_vprintf@format
  1745  0008FC  6E09               	movwf	(cleanS@str+1)^0,c
  1746  0008FE  EC9D  F026         	call	_cleanS	;wreg free
  1747  000902                     
  1748                           ;src/print/my_print.c: 38:    width = -1;
  1749  000902  0103               	movlb	3	; () banked
  1750  000904  69DA               	setf	my_vprintf@width& (0+255),b
  1751  000906  69DB               	setf	(my_vprintf@width+1)& (0+255),b
  1752  000908                     
  1753                           ; BSR set to: 3
  1754                           ;src/print/my_print.c: 39:    prec = -1;
  1755  000908  69E8               	setf	my_vprintf@prec& (0+255),b
  1756  00090A  69E9               	setf	(my_vprintf@prec+1)& (0+255),b
  1757  00090C                     
  1758                           ; BSR set to: 3
  1759                           ;src/print/my_print.c: 41:    format[0]='%';
  1760  00090C  0E25               	movlw	37
  1761  00090E  6F84               	movwf	my_vprintf@format& (0+255),b
  1762  000910                     
  1763                           ; BSR set to: 3
  1764                           ;src/print/my_print.c: 42:    x = 0;
  1765  000910  0E00               	movlw	0
  1766  000912  6FD9               	movwf	(my_vprintf@x+1)& (0+255),b
  1767  000914  0E00               	movlw	0
  1768  000916  6FD8               	movwf	my_vprintf@x& (0+255),b
  1769  000918                     
  1770                           ; BSR set to: 3
  1771                           ;src/print/my_print.c: 43:    i = 1;
  1772  000918  0E00               	movlw	0
  1773  00091A  6FE5               	movwf	(my_vprintf@i+1)& (0+255),b
  1774  00091C  0E01               	movlw	1
  1775  00091E  6FE4               	movwf	my_vprintf@i& (0+255),b
  1776                           
  1777                           ;src/print/my_print.c: 45:    while (x==0) {
  1778  000920  EFD9  F004         	goto	l7678
  1779  000924                     l7658:
  1780                           
  1781                           ; BSR set to: 3
  1782                           ;src/print/my_print.c: 46:      format[i] = *sformat++;
  1783  000924  C0D6  FFF6         	movff	my_vprintf@sformat,tblptrl
  1784  000928  C0D7  FFF7         	movff	my_vprintf@sformat+1,tblptrh
  1785  00092C                     	if	0	;tblptru may be non-zero
  1786  00092C                     	endif
  1787  00092C                     	if	0	;tblptru may be non-zero
  1788  00092C                     	endif
  1789  00092C  0E84               	movlw	low my_vprintf@format
  1790  00092E  25E4               	addwf	my_vprintf@i& (0+255),w,b
  1791  000930  6ED9               	movwf	fsr2l,c
  1792  000932  0E03               	movlw	high my_vprintf@format
  1793  000934  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  1794  000936  6EDA               	movwf	fsr2h,c
  1795  000938  0008               	tblrd		*
  1796  00093A  CFF5 FFDF          	movff	tablat,indf2
  1797  00093E                     
  1798                           ; BSR set to: 3
  1799  00093E  0100               	movlb	0	; () banked
  1800  000940  4BD6               	infsnz	my_vprintf@sformat& (0+255),f,b
  1801  000942  2BD7               	incf	(my_vprintf@sformat+1)& (0+255),f,b
  1802  000944                     
  1803                           ; BSR set to: 0
  1804                           ;src/print/my_print.c: 47:      for(j = 0; j < 15; j++) {
  1805  000944  0E00               	movlw	0
  1806  000946  0103               	movlb	3	; () banked
  1807  000948  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  1808  00094A  0E00               	movlw	0
  1809  00094C  6FDC               	movwf	my_vprintf@j& (0+255),b
  1810  00094E                     l7664:
  1811                           
  1812                           ; BSR set to: 3
  1813  00094E  BFDD               	btfsc	(my_vprintf@j+1)& (0+255),7,b
  1814  000950  EFB3  F004         	goto	u9351
  1815  000954  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  1816  000956  E109               	bnz	u9350
  1817  000958  0E0F               	movlw	15
  1818  00095A  5DDC               	subwf	my_vprintf@j& (0+255),w,b
  1819  00095C  A0D8               	btfss	status,0,c
  1820  00095E  EFB3  F004         	goto	u9351
  1821  000962  EFB5  F004         	goto	u9350
  1822  000966                     u9351:
  1823  000966  EFB7  F004         	goto	l7668
  1824  00096A                     u9350:
  1825  00096A  EFD7  F004         	goto	l7676
  1826  00096E                     l7668:
  1827                           
  1828                           ; BSR set to: 3
  1829                           ;src/print/my_print.c: 48:         if (format[i] == tipo[j])
  1830  00096E  0E84               	movlw	low my_vprintf@format
  1831  000970  25E4               	addwf	my_vprintf@i& (0+255),w,b
  1832  000972  6ED9               	movwf	fsr2l,c
  1833  000974  0E03               	movlw	high my_vprintf@format
  1834  000976  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  1835  000978  6EDA               	movwf	fsr2h,c
  1836  00097A  50DF               	movf	indf2,w,c
  1837  00097C  6E36               	movwf	??_my_vprintf^0,c
  1838  00097E  0E01               	movlw	low my_vprintf@tipo
  1839  000980  25DC               	addwf	my_vprintf@j& (0+255),w,b
  1840  000982  6EF6               	movwf	tblptrl,c
  1841  000984  0E08               	movlw	high my_vprintf@tipo
  1842  000986  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  1843  000988  6EF7               	movwf	tblptrh,c
  1844  00098A                     	if	0	;There are less than 3 active tblptr bytes
  1845  00098A                     	endif
  1846  00098A  0008               	tblrd		*
  1847  00098C  50F5               	movf	tablat,w,c
  1848  00098E  1836               	xorwf	??_my_vprintf^0,w,c
  1849  000990  A4D8               	btfss	status,2,c
  1850  000992  EFCD  F004         	goto	u9361
  1851  000996  EFCF  F004         	goto	u9360
  1852  00099A                     u9361:
  1853  00099A  EFD3  F004         	goto	l7672
  1854  00099E                     u9360:
  1855  00099E                     
  1856                           ; BSR set to: 3
  1857                           ;src/print/my_print.c: 49:       x = i;
  1858  00099E  C3E4  F3D8         	movff	my_vprintf@i,my_vprintf@x
  1859  0009A2  C3E5  F3D9         	movff	my_vprintf@i+1,my_vprintf@x+1
  1860  0009A6                     l7672:
  1861                           
  1862                           ; BSR set to: 3
  1863                           ;src/print/my_print.c: 50:      }
  1864  0009A6  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  1865  0009A8  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  1866  0009AA  EFA7  F004         	goto	l7664
  1867  0009AE                     l7676:
  1868                           
  1869                           ; BSR set to: 3
  1870                           ;src/print/my_print.c: 51:      i++;
  1871  0009AE  4BE4               	infsnz	my_vprintf@i& (0+255),f,b
  1872  0009B0  2BE5               	incf	(my_vprintf@i+1)& (0+255),f,b
  1873  0009B2                     l7678:
  1874                           
  1875                           ; BSR set to: 3
  1876                           ;src/print/my_print.c: 45:    while (x==0) {
  1877  0009B2  51D8               	movf	my_vprintf@x& (0+255),w,b
  1878  0009B4  11D9               	iorwf	(my_vprintf@x+1)& (0+255),w,b
  1879  0009B6  B4D8               	btfsc	status,2,c
  1880  0009B8  EFE0  F004         	goto	u9371
  1881  0009BC  EFE2  F004         	goto	u9370
  1882  0009C0                     u9371:
  1883  0009C0  EF92  F004         	goto	l7658
  1884  0009C4                     u9370:
  1885  0009C4                     
  1886                           ; BSR set to: 3
  1887                           ;src/print/my_print.c: 55:    i=0;
  1888  0009C4  0E00               	movlw	0
  1889  0009C6  6FE5               	movwf	(my_vprintf@i+1)& (0+255),b
  1890  0009C8  0E00               	movlw	0
  1891  0009CA  6FE4               	movwf	my_vprintf@i& (0+255),b
  1892                           
  1893                           ;src/print/my_print.c: 56:    for (j=0; j < x; j++) {
  1894  0009CC  0E00               	movlw	0
  1895  0009CE  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  1896  0009D0  0E00               	movlw	0
  1897  0009D2  6FDC               	movwf	my_vprintf@j& (0+255),b
  1898  0009D4  EF4B  F005         	goto	l7702
  1899  0009D8                     l7682:
  1900                           
  1901                           ; BSR set to: 3
  1902                           ;src/print/my_print.c: 57:     if(format[j]=='*' && i==0)
  1903  0009D8  0E84               	movlw	low my_vprintf@format
  1904  0009DA  25DC               	addwf	my_vprintf@j& (0+255),w,b
  1905  0009DC  6ED9               	movwf	fsr2l,c
  1906  0009DE  0E03               	movlw	high my_vprintf@format
  1907  0009E0  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  1908  0009E2  6EDA               	movwf	fsr2h,c
  1909  0009E4  0E2A               	movlw	42
  1910  0009E6  18DE               	xorwf	postinc2,w,c
  1911  0009E8  A4D8               	btfss	status,2,c
  1912  0009EA  EFF9  F004         	goto	u9381
  1913  0009EE  EFFB  F004         	goto	u9380
  1914  0009F2                     u9381:
  1915  0009F2  EF12  F005         	goto	l7690
  1916  0009F6                     u9380:
  1917  0009F6                     
  1918                           ; BSR set to: 3
  1919  0009F6  51E4               	movf	my_vprintf@i& (0+255),w,b
  1920  0009F8  11E5               	iorwf	(my_vprintf@i+1)& (0+255),w,b
  1921  0009FA  A4D8               	btfss	status,2,c
  1922  0009FC  EF02  F005         	goto	u9391
  1923  000A00  EF04  F005         	goto	u9390
  1924  000A04                     u9391:
  1925  000A04  EF12  F005         	goto	l7690
  1926  000A08                     u9390:
  1927  000A08                     
  1928                           ; BSR set to: 3
  1929                           ;src/print/my_print.c: 58:      width = (*(int *)__va_arg(*(int **)valist, (int)0));
  1930  000A08  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  1931  000A0C  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  1932  000A10  CFDE F3DA          	movff	postinc2,my_vprintf@width
  1933  000A14  CFDD F3DB          	movff	postdec2,my_vprintf@width+1
  1934  000A18                     
  1935                           ; BSR set to: 3
  1936  000A18  0E02               	movlw	2
  1937  000A1A  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  1938  000A1C  0E00               	movlw	0
  1939  000A1E  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  1940  000A20  EF49  F005         	goto	l640
  1941  000A24                     l7690:
  1942                           
  1943                           ; BSR set to: 3
  1944  000A24  0E84               	movlw	low my_vprintf@format
  1945  000A26  25DC               	addwf	my_vprintf@j& (0+255),w,b
  1946  000A28  6ED9               	movwf	fsr2l,c
  1947  000A2A  0E03               	movlw	high my_vprintf@format
  1948  000A2C  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  1949  000A2E  6EDA               	movwf	fsr2h,c
  1950  000A30  0E2A               	movlw	42
  1951  000A32  18DE               	xorwf	postinc2,w,c
  1952  000A34  A4D8               	btfss	status,2,c
  1953  000A36  EF1F  F005         	goto	u9401
  1954  000A3A  EF21  F005         	goto	u9400
  1955  000A3E                     u9401:
  1956  000A3E  EF38  F005         	goto	l7698
  1957  000A42                     u9400:
  1958  000A42                     
  1959                           ; BSR set to: 3
  1960  000A42  05E4               	decf	my_vprintf@i& (0+255),w,b
  1961  000A44  11E5               	iorwf	(my_vprintf@i+1)& (0+255),w,b
  1962  000A46  A4D8               	btfss	status,2,c
  1963  000A48  EF28  F005         	goto	u9411
  1964  000A4C  EF2A  F005         	goto	u9410
  1965  000A50                     u9411:
  1966  000A50  EF38  F005         	goto	l7698
  1967  000A54                     u9410:
  1968  000A54                     
  1969                           ; BSR set to: 3
  1970                           ;src/print/my_print.c: 60:      prec = (*(int *)__va_arg(*(int **)valist, (int)0));
  1971  000A54  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  1972  000A58  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  1973  000A5C  CFDE F3E8          	movff	postinc2,my_vprintf@prec
  1974  000A60  CFDD F3E9          	movff	postdec2,my_vprintf@prec+1
  1975  000A64                     
  1976                           ; BSR set to: 3
  1977  000A64  0E02               	movlw	2
  1978  000A66  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  1979  000A68  0E00               	movlw	0
  1980  000A6A  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  1981  000A6C  EF49  F005         	goto	l640
  1982  000A70                     l7698:
  1983                           
  1984                           ; BSR set to: 3
  1985  000A70  0E84               	movlw	low my_vprintf@format
  1986  000A72  25DC               	addwf	my_vprintf@j& (0+255),w,b
  1987  000A74  6ED9               	movwf	fsr2l,c
  1988  000A76  0E03               	movlw	high my_vprintf@format
  1989  000A78  21DD               	addwfc	(my_vprintf@j+1)& (0+255),w,b
  1990  000A7A  6EDA               	movwf	fsr2h,c
  1991  000A7C  0E2E               	movlw	46
  1992  000A7E  18DE               	xorwf	postinc2,w,c
  1993  000A80  A4D8               	btfss	status,2,c
  1994  000A82  EF45  F005         	goto	u9421
  1995  000A86  EF47  F005         	goto	u9420
  1996  000A8A                     u9421:
  1997  000A8A  EF49  F005         	goto	l640
  1998  000A8E                     u9420:
  1999  000A8E                     
  2000                           ; BSR set to: 3
  2001                           ;src/print/my_print.c: 62:      i++;
  2002  000A8E  4BE4               	infsnz	my_vprintf@i& (0+255),f,b
  2003  000A90  2BE5               	incf	(my_vprintf@i+1)& (0+255),f,b
  2004  000A92                     l640:
  2005                           
  2006                           ; BSR set to: 3
  2007                           ;src/print/my_print.c: 63:    }
  2008  000A92  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  2009  000A94  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  2010  000A96                     l7702:
  2011                           
  2012                           ; BSR set to: 3
  2013  000A96  51D8               	movf	my_vprintf@x& (0+255),w,b
  2014  000A98  5DDC               	subwf	my_vprintf@j& (0+255),w,b
  2015  000A9A  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  2016  000A9C  0A80               	xorlw	128
  2017  000A9E  6E36               	movwf	??_my_vprintf^0,c
  2018  000AA0  51D9               	movf	(my_vprintf@x+1)& (0+255),w,b
  2019  000AA2  0A80               	xorlw	128
  2020  000AA4  5836               	subwfb	??_my_vprintf^0,w,c
  2021  000AA6  A0D8               	btfss	status,0,c
  2022  000AA8  EF58  F005         	goto	u9431
  2023  000AAC  EF5A  F005         	goto	u9430
  2024  000AB0                     u9431:
  2025  000AB0  EFEC  F004         	goto	l7682
  2026  000AB4                     u9430:
  2027  000AB4                     
  2028                           ; BSR set to: 3
  2029                           ;src/print/my_print.c: 65:    getWP(format, &width, &prec);
  2030  000AB4  0E84               	movlw	low my_vprintf@format
  2031  000AB6  0100               	movlb	0	; () banked
  2032  000AB8  6FC8               	movwf	getWP@form& (0+255),b
  2033  000ABA  0E03               	movlw	high my_vprintf@format
  2034  000ABC  6FC9               	movwf	(getWP@form+1)& (0+255),b
  2035  000ABE  0EDA               	movlw	low my_vprintf@width
  2036  000AC0  6FCA               	movwf	getWP@width& (0+255),b
  2037  000AC2  0E03               	movlw	high my_vprintf@width
  2038  000AC4  6FCB               	movwf	(getWP@width+1)& (0+255),b
  2039  000AC6  0EE8               	movlw	low my_vprintf@prec
  2040  000AC8  6FCC               	movwf	getWP@precision& (0+255),b
  2041  000ACA  0E03               	movlw	high my_vprintf@prec
  2042  000ACC  6FCD               	movwf	(getWP@precision+1)& (0+255),b
  2043  000ACE  EC77  F017         	call	_getWP	;wreg free
  2044  000AD2                     
  2045                           ;src/print/my_print.c: 68:    if (width >= 64)
  2046  000AD2  0103               	movlb	3	; () banked
  2047  000AD4  BFDB               	btfsc	(my_vprintf@width+1)& (0+255),7,b
  2048  000AD6  EF76  F005         	goto	u9441
  2049  000ADA  51DB               	movf	(my_vprintf@width+1)& (0+255),w,b
  2050  000ADC  E109               	bnz	u9440
  2051  000ADE  0E40               	movlw	64
  2052  000AE0  5DDA               	subwf	my_vprintf@width& (0+255),w,b
  2053  000AE2  A0D8               	btfss	status,0,c
  2054  000AE4  EF76  F005         	goto	u9441
  2055  000AE8  EF78  F005         	goto	u9440
  2056  000AEC                     u9441:
  2057  000AEC  EF7C  F005         	goto	l7710
  2058  000AF0                     u9440:
  2059  000AF0                     
  2060                           ; BSR set to: 3
  2061                           ;src/print/my_print.c: 69:     width = 0;
  2062  000AF0  0E00               	movlw	0
  2063  000AF2  6FDB               	movwf	(my_vprintf@width+1)& (0+255),b
  2064  000AF4  0E00               	movlw	0
  2065  000AF6  6FDA               	movwf	my_vprintf@width& (0+255),b
  2066  000AF8                     l7710:
  2067                           
  2068                           ; BSR set to: 3
  2069                           ;src/print/my_print.c: 70:    if (prec >= 64)
  2070  000AF8  BFE9               	btfsc	(my_vprintf@prec+1)& (0+255),7,b
  2071  000AFA  EF88  F005         	goto	u9451
  2072  000AFE  51E9               	movf	(my_vprintf@prec+1)& (0+255),w,b
  2073  000B00  E109               	bnz	u9450
  2074  000B02  0E40               	movlw	64
  2075  000B04  5DE8               	subwf	my_vprintf@prec& (0+255),w,b
  2076  000B06  A0D8               	btfss	status,0,c
  2077  000B08  EF88  F005         	goto	u9451
  2078  000B0C  EF8A  F005         	goto	u9450
  2079  000B10                     u9451:
  2080  000B10  EF6E  F009         	goto	l7904
  2081  000B14                     u9450:
  2082  000B14                     
  2083                           ; BSR set to: 3
  2084                           ;src/print/my_print.c: 71:     prec = 0;
  2085  000B14  0E00               	movlw	0
  2086  000B16  6FE9               	movwf	(my_vprintf@prec+1)& (0+255),b
  2087  000B18  0E00               	movlw	0
  2088  000B1A  6FE8               	movwf	my_vprintf@prec& (0+255),b
  2089  000B1C  EF6E  F009         	goto	l7904
  2090  000B20                     l7714:
  2091                           
  2092                           ; BSR set to: 3
  2093                           ;src/print/my_print.c: 75:      strcpy(buffer, "%");
  2094  000B20  0E90               	movlw	low my_vprintf@buffer
  2095  000B22  6E08               	movwf	strcpy@dest^0,c
  2096  000B24  0E03               	movlw	high my_vprintf@buffer
  2097  000B26  6E09               	movwf	(strcpy@dest+1)^0,c
  2098  000B28  0E89               	movlw	low STR_6
  2099  000B2A  6E0A               	movwf	strcpy@src^0,c
  2100  000B2C  0E08               	movlw	high STR_6
  2101  000B2E  6E0B               	movwf	(strcpy@src+1)^0,c
  2102  000B30  EC18  F026         	call	_strcpy	;wreg free
  2103                           
  2104                           ;src/print/my_print.c: 76:      break;
  2105  000B34  EFBD  F009         	goto	l7906
  2106  000B38                     l7716:
  2107                           
  2108                           ; BSR set to: 3
  2109                           ;src/print/my_print.c: 78:      char_temp[0] = (*(char *)__va_arg(*(char **)valist, (cha
      +                          r)0));
  2110  000B38  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2111  000B3C  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2112  000B40  50DF               	movf	indf2,w,c
  2113  000B42  6F80               	movwf	my_vprintf@char_temp& (0+255),b
  2114  000B44                     
  2115                           ; BSR set to: 3
  2116  000B44  0E02               	movlw	2
  2117  000B46  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2118  000B48  0E00               	movlw	0
  2119  000B4A  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2120  000B4C                     
  2121                           ; BSR set to: 3
  2122                           ;src/print/my_print.c: 79:      strcpy(buffer, char_temp);
  2123  000B4C  0E90               	movlw	low my_vprintf@buffer
  2124  000B4E  6E08               	movwf	strcpy@dest^0,c
  2125  000B50  0E03               	movlw	high my_vprintf@buffer
  2126  000B52  6E09               	movwf	(strcpy@dest+1)^0,c
  2127  000B54  0E80               	movlw	low my_vprintf@char_temp
  2128  000B56  6E0A               	movwf	strcpy@src^0,c
  2129  000B58  0E03               	movlw	high my_vprintf@char_temp
  2130  000B5A  6E0B               	movwf	(strcpy@src+1)^0,c
  2131  000B5C  EC18  F026         	call	_strcpy	;wreg free
  2132                           
  2133                           ;src/print/my_print.c: 80:      break;
  2134  000B60  EFBD  F009         	goto	l7906
  2135  000B64                     l7722:
  2136                           
  2137                           ; BSR set to: 3
  2138                           ;src/print/my_print.c: 82:      string_temp = (*(char * *)__va_arg(*(char * **)valist, (
      +                          char *)0));
  2139  000B64  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2140  000B68  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2141  000B6C  CFDE F38E          	movff	postinc2,my_vprintf@string_temp
  2142  000B70  CFDD F38F          	movff	postdec2,my_vprintf@string_temp+1
  2143  000B74                     
  2144                           ; BSR set to: 3
  2145  000B74  0E02               	movlw	2
  2146  000B76  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2147  000B78  0E00               	movlw	0
  2148  000B7A  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2149  000B7C                     
  2150                           ; BSR set to: 3
  2151                           ;src/print/my_print.c: 83:      strcpy(buffer, string_temp);
  2152  000B7C  0E90               	movlw	low my_vprintf@buffer
  2153  000B7E  6E08               	movwf	strcpy@dest^0,c
  2154  000B80  0E03               	movlw	high my_vprintf@buffer
  2155  000B82  6E09               	movwf	(strcpy@dest+1)^0,c
  2156  000B84  C38E  F00A         	movff	my_vprintf@string_temp,strcpy@src
  2157  000B88  C38F  F00B         	movff	my_vprintf@string_temp+1,strcpy@src+1
  2158  000B8C  EC18  F026         	call	_strcpy	;wreg free
  2159  000B90                     
  2160                           ;src/print/my_print.c: 84:      precS(buffer, &prec);
  2161  000B90  0E90               	movlw	low my_vprintf@buffer
  2162  000B92  6E08               	movwf	precS@str^0,c
  2163  000B94  0E03               	movlw	high my_vprintf@buffer
  2164  000B96  6E09               	movwf	(precS@str+1)^0,c
  2165  000B98  0EE8               	movlw	low my_vprintf@prec
  2166  000B9A  6E0A               	movwf	precS@precision^0,c
  2167  000B9C  0E03               	movlw	high my_vprintf@prec
  2168  000B9E  6E0B               	movwf	(precS@precision+1)^0,c
  2169  000BA0  EC75  F025         	call	_precS	;wreg free
  2170                           
  2171                           ;src/print/my_print.c: 85:      break;
  2172  000BA4  EFBD  F009         	goto	l7906
  2173  000BA8                     l7730:
  2174                           
  2175                           ; BSR set to: 3
  2176                           ;src/print/my_print.c: 87:      int_temp = (*(int *)__va_arg(*(int **)valist, (int)0));
  2177  000BA8  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2178  000BAC  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2179  000BB0  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2180  000BB4  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2181  000BB8                     
  2182                           ; BSR set to: 3
  2183  000BB8  0E02               	movlw	2
  2184  000BBA  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2185  000BBC  0E00               	movlw	0
  2186  000BBE  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2187  000BC0                     
  2188                           ; BSR set to: 3
  2189                           ;src/print/my_print.c: 88:      itoa(buffer, int_temp, 10);
  2190  000BC0  0E90               	movlw	low my_vprintf@buffer
  2191  000BC2  0100               	movlb	0	; () banked
  2192  000BC4  6FC8               	movwf	itoa@str& (0+255),b
  2193  000BC6  0E03               	movlw	high my_vprintf@buffer
  2194  000BC8  6FC9               	movwf	(itoa@str+1)& (0+255),b
  2195  000BCA  C3DE  F0CA         	movff	my_vprintf@int_temp,itoa@num
  2196  000BCE  C3DF  F0CB         	movff	my_vprintf@int_temp+1,itoa@num+1
  2197  000BD2  0E00               	movlw	0
  2198  000BD4  BFCB               	btfsc	(itoa@num+1)& (0+255),7,b
  2199  000BD6  0EFF               	movlw	-1
  2200  000BD8  6FCC               	movwf	(itoa@num+2)& (0+255),b
  2201  000BDA  6FCD               	movwf	(itoa@num+3)& (0+255),b
  2202  000BDC  0E00               	movlw	0
  2203  000BDE  6FCF               	movwf	(itoa@base_+1)& (0+255),b
  2204  000BE0  0E0A               	movlw	10
  2205  000BE2  6FCE               	movwf	itoa@base_& (0+255),b
  2206  000BE4  EC4C  F01D         	call	_itoa	;wreg free
  2207  000BE8                     
  2208                           ;src/print/my_print.c: 89:      precI(buffer, &prec);
  2209  000BE8  0E90               	movlw	low my_vprintf@buffer
  2210  000BEA  6E08               	movwf	precI@str^0,c
  2211  000BEC  0E03               	movlw	high my_vprintf@buffer
  2212  000BEE  6E09               	movwf	(precI@str+1)^0,c
  2213  000BF0  0EE8               	movlw	low my_vprintf@prec
  2214  000BF2  6E0A               	movwf	precI@precision^0,c
  2215  000BF4  0E03               	movlw	high my_vprintf@prec
  2216  000BF6  6E0B               	movwf	(precI@precision+1)^0,c
  2217  000BF8  ECA0  F020         	call	_precI	;wreg free
  2218  000BFC                     
  2219                           ;src/print/my_print.c: 90:      addSig(buffer, (double)int_temp);
  2220  000BFC  0E90               	movlw	low my_vprintf@buffer
  2221  000BFE  6E12               	movwf	addSig@numS^0,c
  2222  000C00  0E03               	movlw	high my_vprintf@buffer
  2223  000C02  6E13               	movwf	(addSig@numS+1)^0,c
  2224  000C04  C3DE  F004         	movff	my_vprintf@int_temp,___xxtofl@val
  2225  000C08  C3DF  F005         	movff	my_vprintf@int_temp+1,___xxtofl@val+1
  2226  000C0C  0E00               	movlw	0
  2227  000C0E  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  2228  000C10  0EFF               	movlw	-1
  2229  000C12  6E06               	movwf	(___xxtofl@val+2)^0,c
  2230  000C14  6E07               	movwf	(___xxtofl@val+3)^0,c
  2231  000C16  0E01               	movlw	1
  2232  000C18  ECA0  F01B         	call	___xxtofl
  2233  000C1C  C004  F014         	movff	?___xxtofl,addSig@num
  2234  000C20  C005  F015         	movff	?___xxtofl+1,addSig@num+1
  2235  000C24  C006  F016         	movff	?___xxtofl+2,addSig@num+2
  2236  000C28  C007  F017         	movff	?___xxtofl+3,addSig@num+3
  2237  000C2C  ECCB  F01E         	call	_addSig	;wreg free
  2238                           
  2239                           ;src/print/my_print.c: 91:      break;
  2240  000C30  EFBD  F009         	goto	l7906
  2241  000C34                     l7740:
  2242                           
  2243                           ; BSR set to: 3
  2244                           ;src/print/my_print.c: 93:      int_temp = (*(int *)__va_arg(*(int **)valist, (int)0));
  2245  000C34  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2246  000C38  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2247  000C3C  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2248  000C40  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2249  000C44                     
  2250                           ; BSR set to: 3
  2251  000C44  0E02               	movlw	2
  2252  000C46  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2253  000C48  0E00               	movlw	0
  2254  000C4A  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2255  000C4C                     
  2256                           ; BSR set to: 3
  2257                           ;src/print/my_print.c: 94:      itoa(buffer, int_temp, 10);
  2258  000C4C  0E90               	movlw	low my_vprintf@buffer
  2259  000C4E  0100               	movlb	0	; () banked
  2260  000C50  6FC8               	movwf	itoa@str& (0+255),b
  2261  000C52  0E03               	movlw	high my_vprintf@buffer
  2262  000C54  6FC9               	movwf	(itoa@str+1)& (0+255),b
  2263  000C56  C3DE  F0CA         	movff	my_vprintf@int_temp,itoa@num
  2264  000C5A  C3DF  F0CB         	movff	my_vprintf@int_temp+1,itoa@num+1
  2265  000C5E  0E00               	movlw	0
  2266  000C60  BFCB               	btfsc	(itoa@num+1)& (0+255),7,b
  2267  000C62  0EFF               	movlw	-1
  2268  000C64  6FCC               	movwf	(itoa@num+2)& (0+255),b
  2269  000C66  6FCD               	movwf	(itoa@num+3)& (0+255),b
  2270  000C68  0E00               	movlw	0
  2271  000C6A  6FCF               	movwf	(itoa@base_+1)& (0+255),b
  2272  000C6C  0E0A               	movlw	10
  2273  000C6E  6FCE               	movwf	itoa@base_& (0+255),b
  2274  000C70  EC4C  F01D         	call	_itoa	;wreg free
  2275  000C74                     
  2276                           ;src/print/my_print.c: 95:      precI(buffer, &prec);
  2277  000C74  0E90               	movlw	low my_vprintf@buffer
  2278  000C76  6E08               	movwf	precI@str^0,c
  2279  000C78  0E03               	movlw	high my_vprintf@buffer
  2280  000C7A  6E09               	movwf	(precI@str+1)^0,c
  2281  000C7C  0EE8               	movlw	low my_vprintf@prec
  2282  000C7E  6E0A               	movwf	precI@precision^0,c
  2283  000C80  0E03               	movlw	high my_vprintf@prec
  2284  000C82  6E0B               	movwf	(precI@precision+1)^0,c
  2285  000C84  ECA0  F020         	call	_precI	;wreg free
  2286  000C88                     
  2287                           ;src/print/my_print.c: 96:      addSig(buffer, (double)int_temp);
  2288  000C88  0E90               	movlw	low my_vprintf@buffer
  2289  000C8A  6E12               	movwf	addSig@numS^0,c
  2290  000C8C  0E03               	movlw	high my_vprintf@buffer
  2291  000C8E  6E13               	movwf	(addSig@numS+1)^0,c
  2292  000C90  C3DE  F004         	movff	my_vprintf@int_temp,___xxtofl@val
  2293  000C94  C3DF  F005         	movff	my_vprintf@int_temp+1,___xxtofl@val+1
  2294  000C98  0E00               	movlw	0
  2295  000C9A  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  2296  000C9C  0EFF               	movlw	-1
  2297  000C9E  6E06               	movwf	(___xxtofl@val+2)^0,c
  2298  000CA0  6E07               	movwf	(___xxtofl@val+3)^0,c
  2299  000CA2  0E01               	movlw	1
  2300  000CA4  ECA0  F01B         	call	___xxtofl
  2301  000CA8  C004  F014         	movff	?___xxtofl,addSig@num
  2302  000CAC  C005  F015         	movff	?___xxtofl+1,addSig@num+1
  2303  000CB0  C006  F016         	movff	?___xxtofl+2,addSig@num+2
  2304  000CB4  C007  F017         	movff	?___xxtofl+3,addSig@num+3
  2305  000CB8  ECCB  F01E         	call	_addSig	;wreg free
  2306                           
  2307                           ;src/print/my_print.c: 97:      break;
  2308  000CBC  EFBD  F009         	goto	l7906
  2309  000CC0                     l7750:
  2310                           
  2311                           ; BSR set to: 3
  2312                           ;src/print/my_print.c: 99:      uint_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2313  000CC0  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2314  000CC4  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2315  000CC8  CFDE F3D2          	movff	postinc2,my_vprintf@uint_temp
  2316  000CCC  CFDD F3D3          	movff	postdec2,my_vprintf@uint_temp+1
  2317  000CD0                     
  2318                           ; BSR set to: 3
  2319  000CD0  0E02               	movlw	2
  2320  000CD2  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2321  000CD4  0E00               	movlw	0
  2322  000CD6  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2323  000CD8                     
  2324                           ; BSR set to: 3
  2325                           ;src/print/my_print.c: 100:      itoa(buffer, uint_temp, 10);
  2326  000CD8  0E90               	movlw	low my_vprintf@buffer
  2327  000CDA  0100               	movlb	0	; () banked
  2328  000CDC  6FC8               	movwf	itoa@str& (0+255),b
  2329  000CDE  0E03               	movlw	high my_vprintf@buffer
  2330  000CE0  6FC9               	movwf	(itoa@str+1)& (0+255),b
  2331  000CE2  C3D2  F0CA         	movff	my_vprintf@uint_temp,itoa@num
  2332  000CE6  C3D3  F0CB         	movff	my_vprintf@uint_temp+1,itoa@num+1
  2333  000CEA  6BCC               	clrf	(itoa@num+2)& (0+255),b
  2334  000CEC  6BCD               	clrf	(itoa@num+3)& (0+255),b
  2335  000CEE  0E00               	movlw	0
  2336  000CF0  6FCF               	movwf	(itoa@base_+1)& (0+255),b
  2337  000CF2  0E0A               	movlw	10
  2338  000CF4  6FCE               	movwf	itoa@base_& (0+255),b
  2339  000CF6  EC4C  F01D         	call	_itoa	;wreg free
  2340  000CFA                     
  2341                           ;src/print/my_print.c: 101:      precI(buffer, &prec);
  2342  000CFA  0E90               	movlw	low my_vprintf@buffer
  2343  000CFC  6E08               	movwf	precI@str^0,c
  2344  000CFE  0E03               	movlw	high my_vprintf@buffer
  2345  000D00  6E09               	movwf	(precI@str+1)^0,c
  2346  000D02  0EE8               	movlw	low my_vprintf@prec
  2347  000D04  6E0A               	movwf	precI@precision^0,c
  2348  000D06  0E03               	movlw	high my_vprintf@prec
  2349  000D08  6E0B               	movwf	(precI@precision+1)^0,c
  2350  000D0A  ECA0  F020         	call	_precI	;wreg free
  2351                           
  2352                           ;src/print/my_print.c: 102:      break;
  2353  000D0E  EFBD  F009         	goto	l7906
  2354  000D12                     l7758:
  2355                           
  2356                           ; BSR set to: 3
  2357                           ;src/print/my_print.c: 104:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2358  000D12  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2359  000D16  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2360  000D1A  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2361  000D1E  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2362  000D22                     
  2363                           ; BSR set to: 3
  2364  000D22  0E02               	movlw	2
  2365  000D24  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2366  000D26  0E00               	movlw	0
  2367  000D28  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2368  000D2A                     
  2369                           ; BSR set to: 3
  2370                           ;src/print/my_print.c: 105:      itoa(buffer, int_temp, 16);
  2371  000D2A  0E90               	movlw	low my_vprintf@buffer
  2372  000D2C  0100               	movlb	0	; () banked
  2373  000D2E  6FC8               	movwf	itoa@str& (0+255),b
  2374  000D30  0E03               	movlw	high my_vprintf@buffer
  2375  000D32  6FC9               	movwf	(itoa@str+1)& (0+255),b
  2376  000D34  C3DE  F0CA         	movff	my_vprintf@int_temp,itoa@num
  2377  000D38  C3DF  F0CB         	movff	my_vprintf@int_temp+1,itoa@num+1
  2378  000D3C  0E00               	movlw	0
  2379  000D3E  BFCB               	btfsc	(itoa@num+1)& (0+255),7,b
  2380  000D40  0EFF               	movlw	-1
  2381  000D42  6FCC               	movwf	(itoa@num+2)& (0+255),b
  2382  000D44  6FCD               	movwf	(itoa@num+3)& (0+255),b
  2383  000D46  0E00               	movlw	0
  2384  000D48  6FCF               	movwf	(itoa@base_+1)& (0+255),b
  2385  000D4A  0E10               	movlw	16
  2386  000D4C  6FCE               	movwf	itoa@base_& (0+255),b
  2387  000D4E  EC4C  F01D         	call	_itoa	;wreg free
  2388  000D52                     
  2389                           ;src/print/my_print.c: 106:      precI(buffer, &prec);
  2390  000D52  0E90               	movlw	low my_vprintf@buffer
  2391  000D54  6E08               	movwf	precI@str^0,c
  2392  000D56  0E03               	movlw	high my_vprintf@buffer
  2393  000D58  6E09               	movwf	(precI@str+1)^0,c
  2394  000D5A  0EE8               	movlw	low my_vprintf@prec
  2395  000D5C  6E0A               	movwf	precI@precision^0,c
  2396  000D5E  0E03               	movlw	high my_vprintf@prec
  2397  000D60  6E0B               	movwf	(precI@precision+1)^0,c
  2398  000D62  ECA0  F020         	call	_precI	;wreg free
  2399  000D66                     
  2400                           ;src/print/my_print.c: 107:      addOx(buffer, int_temp,'x');
  2401  000D66  0E90               	movlw	low my_vprintf@buffer
  2402  000D68  6E08               	movwf	addOx@hoS^0,c
  2403  000D6A  0E03               	movlw	high my_vprintf@buffer
  2404  000D6C  6E09               	movwf	(addOx@hoS+1)^0,c
  2405  000D6E  C3DE  F00A         	movff	my_vprintf@int_temp,addOx@num
  2406  000D72  C3DF  F00B         	movff	my_vprintf@int_temp+1,addOx@num+1
  2407  000D76  0E78               	movlw	120
  2408  000D78  6E0C               	movwf	addOx@type^0,c
  2409  000D7A  EC0F  F01E         	call	_addOx	;wreg free
  2410  000D7E                     l7768:
  2411                           
  2412                           ;src/print/my_print.c: 108:      upperCL(buffer);
  2413  000D7E  0E90               	movlw	low my_vprintf@buffer
  2414  000D80  6E08               	movwf	upperCL@str^0,c
  2415  000D82  0E03               	movlw	high my_vprintf@buffer
  2416  000D84  6E09               	movwf	(upperCL@str+1)^0,c
  2417  000D86  ECEF  F024         	call	_upperCL	;wreg free
  2418                           
  2419                           ;src/print/my_print.c: 110:      break;
  2420  000D8A  EFBD  F009         	goto	l7906
  2421  000D8E                     l7770:
  2422                           
  2423                           ; BSR set to: 3
  2424                           ;src/print/my_print.c: 112:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2425  000D8E  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2426  000D92  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2427  000D96  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2428  000D9A  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2429  000D9E                     
  2430                           ; BSR set to: 3
  2431  000D9E  0E02               	movlw	2
  2432  000DA0  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2433  000DA2  0E00               	movlw	0
  2434  000DA4  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2435  000DA6                     
  2436                           ; BSR set to: 3
  2437                           ;src/print/my_print.c: 113:      itoa(buffer, int_temp, 16);
  2438  000DA6  0E90               	movlw	low my_vprintf@buffer
  2439  000DA8  0100               	movlb	0	; () banked
  2440  000DAA  6FC8               	movwf	itoa@str& (0+255),b
  2441  000DAC  0E03               	movlw	high my_vprintf@buffer
  2442  000DAE  6FC9               	movwf	(itoa@str+1)& (0+255),b
  2443  000DB0  C3DE  F0CA         	movff	my_vprintf@int_temp,itoa@num
  2444  000DB4  C3DF  F0CB         	movff	my_vprintf@int_temp+1,itoa@num+1
  2445  000DB8  0E00               	movlw	0
  2446  000DBA  BFCB               	btfsc	(itoa@num+1)& (0+255),7,b
  2447  000DBC  0EFF               	movlw	-1
  2448  000DBE  6FCC               	movwf	(itoa@num+2)& (0+255),b
  2449  000DC0  6FCD               	movwf	(itoa@num+3)& (0+255),b
  2450  000DC2  0E00               	movlw	0
  2451  000DC4  6FCF               	movwf	(itoa@base_+1)& (0+255),b
  2452  000DC6  0E10               	movlw	16
  2453  000DC8  6FCE               	movwf	itoa@base_& (0+255),b
  2454  000DCA  EC4C  F01D         	call	_itoa	;wreg free
  2455  000DCE                     
  2456                           ;src/print/my_print.c: 114:      precI(buffer, &prec);
  2457  000DCE  0E90               	movlw	low my_vprintf@buffer
  2458  000DD0  6E08               	movwf	precI@str^0,c
  2459  000DD2  0E03               	movlw	high my_vprintf@buffer
  2460  000DD4  6E09               	movwf	(precI@str+1)^0,c
  2461  000DD6  0EE8               	movlw	low my_vprintf@prec
  2462  000DD8  6E0A               	movwf	precI@precision^0,c
  2463  000DDA  0E03               	movlw	high my_vprintf@prec
  2464  000DDC  6E0B               	movwf	(precI@precision+1)^0,c
  2465  000DDE  ECA0  F020         	call	_precI	;wreg free
  2466  000DE2                     
  2467                           ;src/print/my_print.c: 115:      addOx(buffer, int_temp,'x');
  2468  000DE2  0E90               	movlw	low my_vprintf@buffer
  2469  000DE4  6E08               	movwf	addOx@hoS^0,c
  2470  000DE6  0E03               	movlw	high my_vprintf@buffer
  2471  000DE8  6E09               	movwf	(addOx@hoS+1)^0,c
  2472  000DEA  C3DE  F00A         	movff	my_vprintf@int_temp,addOx@num
  2473  000DEE  C3DF  F00B         	movff	my_vprintf@int_temp+1,addOx@num+1
  2474  000DF2  0E78               	movlw	120
  2475  000DF4  6E0C               	movwf	addOx@type^0,c
  2476  000DF6  EC0F  F01E         	call	_addOx	;wreg free
  2477                           
  2478                           ;src/print/my_print.c: 116:      break;
  2479  000DFA  EFBD  F009         	goto	l7906
  2480  000DFE                     l7780:
  2481                           
  2482                           ; BSR set to: 3
  2483                           ;src/print/my_print.c: 118:      int_temp = (*(uint16_t *)__va_arg(*(uint16_t **)valist,
      +                           (uint16_t)0));
  2484  000DFE  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2485  000E02  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2486  000E06  CFDE F3DE          	movff	postinc2,my_vprintf@int_temp
  2487  000E0A  CFDD F3DF          	movff	postdec2,my_vprintf@int_temp+1
  2488  000E0E                     
  2489                           ; BSR set to: 3
  2490  000E0E  0E02               	movlw	2
  2491  000E10  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2492  000E12  0E00               	movlw	0
  2493  000E14  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2494  000E16                     
  2495                           ; BSR set to: 3
  2496                           ;src/print/my_print.c: 119:      itoa(buffer, int_temp, 8);
  2497  000E16  0E90               	movlw	low my_vprintf@buffer
  2498  000E18  0100               	movlb	0	; () banked
  2499  000E1A  6FC8               	movwf	itoa@str& (0+255),b
  2500  000E1C  0E03               	movlw	high my_vprintf@buffer
  2501  000E1E  6FC9               	movwf	(itoa@str+1)& (0+255),b
  2502  000E20  C3DE  F0CA         	movff	my_vprintf@int_temp,itoa@num
  2503  000E24  C3DF  F0CB         	movff	my_vprintf@int_temp+1,itoa@num+1
  2504  000E28  0E00               	movlw	0
  2505  000E2A  BFCB               	btfsc	(itoa@num+1)& (0+255),7,b
  2506  000E2C  0EFF               	movlw	-1
  2507  000E2E  6FCC               	movwf	(itoa@num+2)& (0+255),b
  2508  000E30  6FCD               	movwf	(itoa@num+3)& (0+255),b
  2509  000E32  0E00               	movlw	0
  2510  000E34  6FCF               	movwf	(itoa@base_+1)& (0+255),b
  2511  000E36  0E08               	movlw	8
  2512  000E38  6FCE               	movwf	itoa@base_& (0+255),b
  2513  000E3A  EC4C  F01D         	call	_itoa	;wreg free
  2514  000E3E                     
  2515                           ;src/print/my_print.c: 120:      precI(buffer, &prec);
  2516  000E3E  0E90               	movlw	low my_vprintf@buffer
  2517  000E40  6E08               	movwf	precI@str^0,c
  2518  000E42  0E03               	movlw	high my_vprintf@buffer
  2519  000E44  6E09               	movwf	(precI@str+1)^0,c
  2520  000E46  0EE8               	movlw	low my_vprintf@prec
  2521  000E48  6E0A               	movwf	precI@precision^0,c
  2522  000E4A  0E03               	movlw	high my_vprintf@prec
  2523  000E4C  6E0B               	movwf	(precI@precision+1)^0,c
  2524  000E4E  ECA0  F020         	call	_precI	;wreg free
  2525  000E52                     
  2526                           ;src/print/my_print.c: 121:      addOx(buffer, int_temp,'o');
  2527  000E52  0E90               	movlw	low my_vprintf@buffer
  2528  000E54  6E08               	movwf	addOx@hoS^0,c
  2529  000E56  0E03               	movlw	high my_vprintf@buffer
  2530  000E58  6E09               	movwf	(addOx@hoS+1)^0,c
  2531  000E5A  C3DE  F00A         	movff	my_vprintf@int_temp,addOx@num
  2532  000E5E  C3DF  F00B         	movff	my_vprintf@int_temp+1,addOx@num+1
  2533  000E62  0E6F               	movlw	111
  2534  000E64  6E0C               	movwf	addOx@type^0,c
  2535  000E66  EC0F  F01E         	call	_addOx	;wreg free
  2536                           
  2537                           ;src/print/my_print.c: 122:      break;
  2538  000E6A  EFBD  F009         	goto	l7906
  2539  000E6E                     l7790:
  2540                           
  2541                           ; BSR set to: 3
  2542                           ;src/print/my_print.c: 124:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2543  000E6E  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2544  000E72  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2545  000E76  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  2546  000E7A  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  2547  000E7E  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  2548  000E82  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  2549  000E86                     
  2550                           ; BSR set to: 3
  2551  000E86  0E04               	movlw	4
  2552  000E88  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2553  000E8A  0E00               	movlw	0
  2554  000E8C  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2555  000E8E                     
  2556                           ; BSR set to: 3
  2557                           ;src/print/my_print.c: 125:      ftoa(buffer, double_temp);
  2558  000E8E  0E90               	movlw	low my_vprintf@buffer
  2559  000E90  6E27               	movwf	ftoa@buffer^0,c
  2560  000E92  0E03               	movlw	high my_vprintf@buffer
  2561  000E94  6E28               	movwf	(ftoa@buffer+1)^0,c
  2562  000E96  C3E0  F029         	movff	my_vprintf@double_temp,ftoa@value
  2563  000E9A  C3E1  F02A         	movff	my_vprintf@double_temp+1,ftoa@value+1
  2564  000E9E  C3E2  F02B         	movff	my_vprintf@double_temp+2,ftoa@value+2
  2565  000EA2  C3E3  F02C         	movff	my_vprintf@double_temp+3,ftoa@value+3
  2566  000EA6  ECF3  F012         	call	_ftoa	;wreg free
  2567  000EAA                     
  2568                           ;src/print/my_print.c: 126:      precF(buffer, &prec);
  2569  000EAA  0E90               	movlw	low my_vprintf@buffer
  2570  000EAC  6E1F               	movwf	precF@str^0,c
  2571  000EAE  0E03               	movlw	high my_vprintf@buffer
  2572  000EB0  6E20               	movwf	(precF@str+1)^0,c
  2573  000EB2  0EE8               	movlw	low my_vprintf@prec
  2574  000EB4  6E21               	movwf	precF@precision^0,c
  2575  000EB6  0E03               	movlw	high my_vprintf@prec
  2576  000EB8  6E22               	movwf	(precF@precision+1)^0,c
  2577  000EBA  ECB9  F01A         	call	_precF	;wreg free
  2578  000EBE                     l7798:
  2579                           
  2580                           ;src/print/my_print.c: 127:      addSig(buffer, double_temp);
  2581  000EBE  0E90               	movlw	low my_vprintf@buffer
  2582  000EC0  6E12               	movwf	addSig@numS^0,c
  2583  000EC2  0E03               	movlw	high my_vprintf@buffer
  2584  000EC4  6E13               	movwf	(addSig@numS+1)^0,c
  2585  000EC6  C3E0  F014         	movff	my_vprintf@double_temp,addSig@num
  2586  000ECA  C3E1  F015         	movff	my_vprintf@double_temp+1,addSig@num+1
  2587  000ECE  C3E2  F016         	movff	my_vprintf@double_temp+2,addSig@num+2
  2588  000ED2  C3E3  F017         	movff	my_vprintf@double_temp+3,addSig@num+3
  2589  000ED6  ECCB  F01E         	call	_addSig	;wreg free
  2590                           
  2591                           ;src/print/my_print.c: 128:      break;
  2592  000EDA  EFBD  F009         	goto	l7906
  2593  000EDE                     l7800:
  2594                           
  2595                           ; BSR set to: 3
  2596                           ;src/print/my_print.c: 130:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2597  000EDE  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2598  000EE2  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2599  000EE6  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  2600  000EEA  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  2601  000EEE  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  2602  000EF2  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  2603  000EF6                     
  2604                           ; BSR set to: 3
  2605  000EF6  0E04               	movlw	4
  2606  000EF8  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2607  000EFA  0E00               	movlw	0
  2608  000EFC  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2609  000EFE                     
  2610                           ; BSR set to: 3
  2611                           ;src/print/my_print.c: 131:      ftoa_sci(buffer, double_temp);
  2612  000EFE  0E90               	movlw	low my_vprintf@buffer
  2613  000F00  0100               	movlb	0	; () banked
  2614  000F02  6FD0               	movwf	ftoa_sci@buffer& (0+255),b
  2615  000F04  0E03               	movlw	high my_vprintf@buffer
  2616  000F06  6FD1               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2617  000F08  C3E0  F0D2         	movff	my_vprintf@double_temp,ftoa_sci@value
  2618  000F0C  C3E1  F0D3         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2619  000F10  C3E2  F0D4         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2620  000F14  C3E3  F0D5         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2621  000F18  EC07  F016         	call	_ftoa_sci	;wreg free
  2622  000F1C                     
  2623                           ;src/print/my_print.c: 132:      precE(buffer, &prec);
  2624  000F1C  0E90               	movlw	low my_vprintf@buffer
  2625  000F1E  6E1F               	movwf	precE@str^0,c
  2626  000F20  0E03               	movlw	high my_vprintf@buffer
  2627  000F22  6E20               	movwf	(precE@str+1)^0,c
  2628  000F24  0EE8               	movlw	low my_vprintf@prec
  2629  000F26  6E21               	movwf	precE@precision^0,c
  2630  000F28  0E03               	movlw	high my_vprintf@prec
  2631  000F2A  6E22               	movwf	(precE@precision+1)^0,c
  2632  000F2C  ECB4  F019         	call	_precE	;wreg free
  2633  000F30  EF5F  F007         	goto	l7798
  2634  000F34                     l7810:
  2635                           
  2636                           ; BSR set to: 3
  2637                           ;src/print/my_print.c: 136:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2638  000F34  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2639  000F38  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2640  000F3C  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  2641  000F40  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  2642  000F44  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  2643  000F48  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  2644  000F4C                     
  2645                           ; BSR set to: 3
  2646  000F4C  0E04               	movlw	4
  2647  000F4E  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2648  000F50  0E00               	movlw	0
  2649  000F52  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2650  000F54                     
  2651                           ; BSR set to: 3
  2652                           ;src/print/my_print.c: 137:      ftoa_sci(buffer, double_temp);
  2653  000F54  0E90               	movlw	low my_vprintf@buffer
  2654  000F56  0100               	movlb	0	; () banked
  2655  000F58  6FD0               	movwf	ftoa_sci@buffer& (0+255),b
  2656  000F5A  0E03               	movlw	high my_vprintf@buffer
  2657  000F5C  6FD1               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2658  000F5E  C3E0  F0D2         	movff	my_vprintf@double_temp,ftoa_sci@value
  2659  000F62  C3E1  F0D3         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2660  000F66  C3E2  F0D4         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2661  000F6A  C3E3  F0D5         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2662  000F6E  EC07  F016         	call	_ftoa_sci	;wreg free
  2663  000F72                     
  2664                           ;src/print/my_print.c: 138:      precE(buffer, &prec);
  2665  000F72  0E90               	movlw	low my_vprintf@buffer
  2666  000F74  6E1F               	movwf	precE@str^0,c
  2667  000F76  0E03               	movlw	high my_vprintf@buffer
  2668  000F78  6E20               	movwf	(precE@str+1)^0,c
  2669  000F7A  0EE8               	movlw	low my_vprintf@prec
  2670  000F7C  6E21               	movwf	precE@precision^0,c
  2671  000F7E  0E03               	movlw	high my_vprintf@prec
  2672  000F80  6E22               	movwf	(precE@precision+1)^0,c
  2673  000F82  ECB4  F019         	call	_precE	;wreg free
  2674  000F86                     l7818:
  2675                           
  2676                           ;src/print/my_print.c: 139:      addSig(buffer, double_temp);
  2677  000F86  0E90               	movlw	low my_vprintf@buffer
  2678  000F88  6E12               	movwf	addSig@numS^0,c
  2679  000F8A  0E03               	movlw	high my_vprintf@buffer
  2680  000F8C  6E13               	movwf	(addSig@numS+1)^0,c
  2681  000F8E  C3E0  F014         	movff	my_vprintf@double_temp,addSig@num
  2682  000F92  C3E1  F015         	movff	my_vprintf@double_temp+1,addSig@num+1
  2683  000F96  C3E2  F016         	movff	my_vprintf@double_temp+2,addSig@num+2
  2684  000F9A  C3E3  F017         	movff	my_vprintf@double_temp+3,addSig@num+3
  2685  000F9E  ECCB  F01E         	call	_addSig	;wreg free
  2686  000FA2  EFBF  F006         	goto	l7768
  2687  000FA6                     l7822:
  2688                           
  2689                           ; BSR set to: 3
  2690                           ;src/print/my_print.c: 143:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2691  000FA6  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2692  000FAA  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2693  000FAE  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  2694  000FB2  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  2695  000FB6  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  2696  000FBA  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  2697  000FBE                     
  2698                           ; BSR set to: 3
  2699  000FBE  0E04               	movlw	4
  2700  000FC0  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2701  000FC2  0E00               	movlw	0
  2702  000FC4  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2703  000FC6                     
  2704                           ; BSR set to: 3
  2705                           ;src/print/my_print.c: 144:      expA = ftoa_sci(buffer, double_temp);
  2706  000FC6  0E90               	movlw	low my_vprintf@buffer
  2707  000FC8  0100               	movlb	0	; () banked
  2708  000FCA  6FD0               	movwf	ftoa_sci@buffer& (0+255),b
  2709  000FCC  0E03               	movlw	high my_vprintf@buffer
  2710  000FCE  6FD1               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2711  000FD0  C3E0  F0D2         	movff	my_vprintf@double_temp,ftoa_sci@value
  2712  000FD4  C3E1  F0D3         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2713  000FD8  C3E2  F0D4         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2714  000FDC  C3E3  F0D5         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2715  000FE0  EC07  F016         	call	_ftoa_sci	;wreg free
  2716  000FE4  C0D0  F3D6         	movff	?_ftoa_sci,my_vprintf@expA
  2717  000FE8  C0D1  F3D7         	movff	?_ftoa_sci+1,my_vprintf@expA+1
  2718  000FEC                     
  2719                           ;src/print/my_print.c: 145:      ftoa(buffer, double_temp);
  2720  000FEC  0E90               	movlw	low my_vprintf@buffer
  2721  000FEE  6E27               	movwf	ftoa@buffer^0,c
  2722  000FF0  0E03               	movlw	high my_vprintf@buffer
  2723  000FF2  6E28               	movwf	(ftoa@buffer+1)^0,c
  2724  000FF4  C3E0  F029         	movff	my_vprintf@double_temp,ftoa@value
  2725  000FF8  C3E1  F02A         	movff	my_vprintf@double_temp+1,ftoa@value+1
  2726  000FFC  C3E2  F02B         	movff	my_vprintf@double_temp+2,ftoa@value+2
  2727  001000  C3E3  F02C         	movff	my_vprintf@double_temp+3,ftoa@value+3
  2728  001004  ECF3  F012         	call	_ftoa	;wreg free
  2729  001008                     
  2730                           ;src/print/my_print.c: 146:      j=0;
  2731  001008  0E00               	movlw	0
  2732  00100A  0103               	movlb	3	; () banked
  2733  00100C  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  2734  00100E  0E00               	movlw	0
  2735  001010  6FDC               	movwf	my_vprintf@j& (0+255),b
  2736  001012                     
  2737                           ; BSR set to: 3
  2738                           ;src/print/my_print.c: 147:      for (i=0;i<strlen(buffer);i++)
  2739  001012  0E00               	movlw	0
  2740  001014  6FE5               	movwf	(my_vprintf@i+1)& (0+255),b
  2741  001016  0E00               	movlw	0
  2742  001018  6FE4               	movwf	my_vprintf@i& (0+255),b
  2743  00101A  EF40  F008         	goto	l7844
  2744  00101E                     l7834:
  2745                           
  2746                           ; BSR set to: 3
  2747                           ;src/print/my_print.c: 148:      {;src/print/my_print.c: 149:       if (buffer[i]=='.')
  2748  00101E  0E90               	movlw	low my_vprintf@buffer
  2749  001020  25E4               	addwf	my_vprintf@i& (0+255),w,b
  2750  001022  6ED9               	movwf	fsr2l,c
  2751  001024  0E03               	movlw	high my_vprintf@buffer
  2752  001026  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2753  001028  6EDA               	movwf	fsr2h,c
  2754  00102A  0E2E               	movlw	46
  2755  00102C  18DE               	xorwf	postinc2,w,c
  2756  00102E  A4D8               	btfss	status,2,c
  2757  001030  EF1C  F008         	goto	u9461
  2758  001034  EF1E  F008         	goto	u9460
  2759  001038                     u9461:
  2760  001038  EF20  F008         	goto	l7838
  2761  00103C                     u9460:
  2762  00103C  EF52  F008         	goto	l7846
  2763  001040                     l7838:
  2764                           
  2765                           ; BSR set to: 3
  2766                           ;src/print/my_print.c: 152:       if (buffer[i]>=48 && buffer[i]<=57)
  2767  001040  0E90               	movlw	low my_vprintf@buffer
  2768  001042  25E4               	addwf	my_vprintf@i& (0+255),w,b
  2769  001044  6ED9               	movwf	fsr2l,c
  2770  001046  0E03               	movlw	high my_vprintf@buffer
  2771  001048  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2772  00104A  6EDA               	movwf	fsr2h,c
  2773  00104C  0E2F               	movlw	47
  2774  00104E  64DF               	cpfsgt	indf2,c
  2775  001050  EF2C  F008         	goto	u9471
  2776  001054  EF2E  F008         	goto	u9470
  2777  001058                     u9471:
  2778  001058  EF3E  F008         	goto	l666
  2779  00105C                     u9470:
  2780  00105C                     
  2781                           ; BSR set to: 3
  2782  00105C  0E90               	movlw	low my_vprintf@buffer
  2783  00105E  25E4               	addwf	my_vprintf@i& (0+255),w,b
  2784  001060  6ED9               	movwf	fsr2l,c
  2785  001062  0E03               	movlw	high my_vprintf@buffer
  2786  001064  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2787  001066  6EDA               	movwf	fsr2h,c
  2788  001068  0E3A               	movlw	58
  2789  00106A  60DF               	cpfslt	indf2,c
  2790  00106C  EF3A  F008         	goto	u9481
  2791  001070  EF3C  F008         	goto	u9480
  2792  001074                     u9481:
  2793  001074  EF3E  F008         	goto	l666
  2794  001078                     u9480:
  2795  001078                     
  2796                           ; BSR set to: 3
  2797                           ;src/print/my_print.c: 153:        j++;
  2798  001078  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  2799  00107A  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  2800  00107C                     l666:
  2801                           
  2802                           ; BSR set to: 3
  2803                           ;src/print/my_print.c: 154:      }
  2804  00107C  4BE4               	infsnz	my_vprintf@i& (0+255),f,b
  2805  00107E  2BE5               	incf	(my_vprintf@i+1)& (0+255),f,b
  2806  001080                     l7844:
  2807                           
  2808                           ; BSR set to: 3
  2809  001080  0E90               	movlw	low my_vprintf@buffer
  2810  001082  6E04               	movwf	strlen@s^0,c
  2811  001084  0E03               	movlw	high my_vprintf@buffer
  2812  001086  6E05               	movwf	(strlen@s+1)^0,c
  2813  001088  EC44  F028         	call	_strlen	;wreg free
  2814  00108C  5004               	movf	?_strlen^0,w,c
  2815  00108E  0103               	movlb	3	; () banked
  2816  001090  5DE4               	subwf	my_vprintf@i& (0+255),w,b
  2817  001092  5005               	movf	(?_strlen+1)^0,w,c
  2818  001094  59E5               	subwfb	(my_vprintf@i+1)& (0+255),w,b
  2819  001096  A0D8               	btfss	status,0,c
  2820  001098  EF50  F008         	goto	u9491
  2821  00109C  EF52  F008         	goto	u9490
  2822  0010A0                     u9491:
  2823  0010A0  EF0F  F008         	goto	l7834
  2824  0010A4                     u9490:
  2825  0010A4                     l7846:
  2826                           
  2827                           ; BSR set to: 3
  2828                           ;src/print/my_print.c: 155:      if (prec == -1)
  2829  0010A4  29E8               	incf	my_vprintf@prec& (0+255),w,b
  2830  0010A6  E106               	bnz	u9501
  2831  0010A8  29E9               	incf	(my_vprintf@prec+1)& (0+255),w,b
  2832  0010AA  A4D8               	btfss	status,2,c
  2833  0010AC  EF5A  F008         	goto	u9501
  2834  0010B0  EF5C  F008         	goto	u9500
  2835  0010B4                     u9501:
  2836  0010B4  EF60  F008         	goto	l7850
  2837  0010B8                     u9500:
  2838  0010B8                     
  2839                           ; BSR set to: 3
  2840                           ;src/print/my_print.c: 156:       prec = 6;
  2841  0010B8  0E00               	movlw	0
  2842  0010BA  6FE9               	movwf	(my_vprintf@prec+1)& (0+255),b
  2843  0010BC  0E06               	movlw	6
  2844  0010BE  6FE8               	movwf	my_vprintf@prec& (0+255),b
  2845  0010C0                     l7850:
  2846                           
  2847                           ; BSR set to: 3
  2848                           ;src/print/my_print.c: 157:      if (expA <= -4 || j > prec)
  2849  0010C0  AFD7               	btfss	(my_vprintf@expA+1)& (0+255),7,b
  2850  0010C2  EF6E  F008         	goto	u9510
  2851  0010C6  0EFD               	movlw	253
  2852  0010C8  5DD6               	subwf	my_vprintf@expA& (0+255),w,b
  2853  0010CA  0EFF               	movlw	255
  2854  0010CC  59D7               	subwfb	(my_vprintf@expA+1)& (0+255),w,b
  2855  0010CE  A0D8               	btfss	status,0,c
  2856  0010D0  EF6C  F008         	goto	u9511
  2857  0010D4  EF6E  F008         	goto	u9510
  2858  0010D8                     u9511:
  2859  0010D8  EF7D  F008         	goto	l7854
  2860  0010DC                     u9510:
  2861  0010DC                     
  2862                           ; BSR set to: 3
  2863  0010DC  51DC               	movf	my_vprintf@j& (0+255),w,b
  2864  0010DE  5DE8               	subwf	my_vprintf@prec& (0+255),w,b
  2865  0010E0  51E9               	movf	(my_vprintf@prec+1)& (0+255),w,b
  2866  0010E2  0A80               	xorlw	128
  2867  0010E4  6E36               	movwf	??_my_vprintf^0,c
  2868  0010E6  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  2869  0010E8  0A80               	xorlw	128
  2870  0010EA  5836               	subwfb	??_my_vprintf^0,w,c
  2871  0010EC  B0D8               	btfsc	status,0,c
  2872  0010EE  EF7B  F008         	goto	u9521
  2873  0010F2  EF7D  F008         	goto	u9520
  2874  0010F6                     u9521:
  2875  0010F6  EF8C  F008         	goto	l7856
  2876  0010FA                     u9520:
  2877  0010FA                     l7854:
  2878                           
  2879                           ; BSR set to: 3
  2880                           ;src/print/my_print.c: 158:       ftoa_sci(buffer, double_temp);
  2881  0010FA  0E90               	movlw	low my_vprintf@buffer
  2882  0010FC  0100               	movlb	0	; () banked
  2883  0010FE  6FD0               	movwf	ftoa_sci@buffer& (0+255),b
  2884  001100  0E03               	movlw	high my_vprintf@buffer
  2885  001102  6FD1               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2886  001104  C3E0  F0D2         	movff	my_vprintf@double_temp,ftoa_sci@value
  2887  001108  C3E1  F0D3         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2888  00110C  C3E2  F0D4         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2889  001110  C3E3  F0D5         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2890  001114  EC07  F016         	call	_ftoa_sci	;wreg free
  2891  001118                     l7856:
  2892                           
  2893                           ;src/print/my_print.c: 159:      precG(buffer, &prec);
  2894  001118  0E90               	movlw	low my_vprintf@buffer
  2895  00111A  6E1F               	movwf	precG@str^0,c
  2896  00111C  0E03               	movlw	high my_vprintf@buffer
  2897  00111E  6E20               	movwf	(precG@str+1)^0,c
  2898  001120  0EE8               	movlw	low my_vprintf@prec
  2899  001122  6E21               	movwf	precG@precision^0,c
  2900  001124  0E03               	movlw	high my_vprintf@prec
  2901  001126  6E22               	movwf	(precG@precision+1)^0,c
  2902  001128  EC05  F00A         	call	_precG	;wreg free
  2903  00112C  EF5F  F007         	goto	l7798
  2904  001130                     l7860:
  2905                           
  2906                           ; BSR set to: 3
  2907                           ;src/print/my_print.c: 163:      double_temp = (*(double *)__va_arg(*(double **)valist, 
      +                          (double)0));
  2908  001130  C3E6  FFD9         	movff	my_vprintf@valist,fsr2l
  2909  001134  C3E7  FFDA         	movff	my_vprintf@valist+1,fsr2h
  2910  001138  CFDE F3E0          	movff	postinc2,my_vprintf@double_temp
  2911  00113C  CFDE F3E1          	movff	postinc2,my_vprintf@double_temp+1
  2912  001140  CFDE F3E2          	movff	postinc2,my_vprintf@double_temp+2
  2913  001144  CFDE F3E3          	movff	postinc2,my_vprintf@double_temp+3
  2914  001148                     
  2915                           ; BSR set to: 3
  2916  001148  0E04               	movlw	4
  2917  00114A  27E6               	addwf	my_vprintf@valist& (0+255),f,b
  2918  00114C  0E00               	movlw	0
  2919  00114E  23E7               	addwfc	(my_vprintf@valist+1)& (0+255),f,b
  2920  001150                     
  2921                           ; BSR set to: 3
  2922                           ;src/print/my_print.c: 164:      expA = ftoa_sci(buffer, double_temp);
  2923  001150  0E90               	movlw	low my_vprintf@buffer
  2924  001152  0100               	movlb	0	; () banked
  2925  001154  6FD0               	movwf	ftoa_sci@buffer& (0+255),b
  2926  001156  0E03               	movlw	high my_vprintf@buffer
  2927  001158  6FD1               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  2928  00115A  C3E0  F0D2         	movff	my_vprintf@double_temp,ftoa_sci@value
  2929  00115E  C3E1  F0D3         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  2930  001162  C3E2  F0D4         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  2931  001166  C3E3  F0D5         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  2932  00116A  EC07  F016         	call	_ftoa_sci	;wreg free
  2933  00116E  C0D0  F3D6         	movff	?_ftoa_sci,my_vprintf@expA
  2934  001172  C0D1  F3D7         	movff	?_ftoa_sci+1,my_vprintf@expA+1
  2935  001176                     
  2936                           ;src/print/my_print.c: 165:      ftoa(buffer, double_temp);
  2937  001176  0E90               	movlw	low my_vprintf@buffer
  2938  001178  6E27               	movwf	ftoa@buffer^0,c
  2939  00117A  0E03               	movlw	high my_vprintf@buffer
  2940  00117C  6E28               	movwf	(ftoa@buffer+1)^0,c
  2941  00117E  C3E0  F029         	movff	my_vprintf@double_temp,ftoa@value
  2942  001182  C3E1  F02A         	movff	my_vprintf@double_temp+1,ftoa@value+1
  2943  001186  C3E2  F02B         	movff	my_vprintf@double_temp+2,ftoa@value+2
  2944  00118A  C3E3  F02C         	movff	my_vprintf@double_temp+3,ftoa@value+3
  2945  00118E  ECF3  F012         	call	_ftoa	;wreg free
  2946  001192                     
  2947                           ;src/print/my_print.c: 166:      j=0;
  2948  001192  0E00               	movlw	0
  2949  001194  0103               	movlb	3	; () banked
  2950  001196  6FDD               	movwf	(my_vprintf@j+1)& (0+255),b
  2951  001198  0E00               	movlw	0
  2952  00119A  6FDC               	movwf	my_vprintf@j& (0+255),b
  2953  00119C                     
  2954                           ; BSR set to: 3
  2955                           ;src/print/my_print.c: 167:      for (i=0;i<strlen(buffer);i++)
  2956  00119C  0E00               	movlw	0
  2957  00119E  6FE5               	movwf	(my_vprintf@i+1)& (0+255),b
  2958  0011A0  0E00               	movlw	0
  2959  0011A2  6FE4               	movwf	my_vprintf@i& (0+255),b
  2960  0011A4  EF05  F009         	goto	l7882
  2961  0011A8                     l7872:
  2962                           
  2963                           ; BSR set to: 3
  2964                           ;src/print/my_print.c: 168:      {;src/print/my_print.c: 169:       if (buffer[i]=='.')
  2965  0011A8  0E90               	movlw	low my_vprintf@buffer
  2966  0011AA  25E4               	addwf	my_vprintf@i& (0+255),w,b
  2967  0011AC  6ED9               	movwf	fsr2l,c
  2968  0011AE  0E03               	movlw	high my_vprintf@buffer
  2969  0011B0  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2970  0011B2  6EDA               	movwf	fsr2h,c
  2971  0011B4  0E2E               	movlw	46
  2972  0011B6  18DE               	xorwf	postinc2,w,c
  2973  0011B8  A4D8               	btfss	status,2,c
  2974  0011BA  EFE1  F008         	goto	u9531
  2975  0011BE  EFE3  F008         	goto	u9530
  2976  0011C2                     u9531:
  2977  0011C2  EFE5  F008         	goto	l7876
  2978  0011C6                     u9530:
  2979  0011C6  EF17  F009         	goto	l7884
  2980  0011CA                     l7876:
  2981                           
  2982                           ; BSR set to: 3
  2983                           ;src/print/my_print.c: 172:       if (buffer[i]>=48 && buffer[i]<=57)
  2984  0011CA  0E90               	movlw	low my_vprintf@buffer
  2985  0011CC  25E4               	addwf	my_vprintf@i& (0+255),w,b
  2986  0011CE  6ED9               	movwf	fsr2l,c
  2987  0011D0  0E03               	movlw	high my_vprintf@buffer
  2988  0011D2  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  2989  0011D4  6EDA               	movwf	fsr2h,c
  2990  0011D6  0E2F               	movlw	47
  2991  0011D8  64DF               	cpfsgt	indf2,c
  2992  0011DA  EFF1  F008         	goto	u9541
  2993  0011DE  EFF3  F008         	goto	u9540
  2994  0011E2                     u9541:
  2995  0011E2  EF03  F009         	goto	l676
  2996  0011E6                     u9540:
  2997  0011E6                     
  2998                           ; BSR set to: 3
  2999  0011E6  0E90               	movlw	low my_vprintf@buffer
  3000  0011E8  25E4               	addwf	my_vprintf@i& (0+255),w,b
  3001  0011EA  6ED9               	movwf	fsr2l,c
  3002  0011EC  0E03               	movlw	high my_vprintf@buffer
  3003  0011EE  21E5               	addwfc	(my_vprintf@i+1)& (0+255),w,b
  3004  0011F0  6EDA               	movwf	fsr2h,c
  3005  0011F2  0E3A               	movlw	58
  3006  0011F4  60DF               	cpfslt	indf2,c
  3007  0011F6  EFFF  F008         	goto	u9551
  3008  0011FA  EF01  F009         	goto	u9550
  3009  0011FE                     u9551:
  3010  0011FE  EF03  F009         	goto	l676
  3011  001202                     u9550:
  3012  001202                     
  3013                           ; BSR set to: 3
  3014                           ;src/print/my_print.c: 173:        j++;
  3015  001202  4BDC               	infsnz	my_vprintf@j& (0+255),f,b
  3016  001204  2BDD               	incf	(my_vprintf@j+1)& (0+255),f,b
  3017  001206                     l676:
  3018                           
  3019                           ; BSR set to: 3
  3020                           ;src/print/my_print.c: 174:      }
  3021  001206  4BE4               	infsnz	my_vprintf@i& (0+255),f,b
  3022  001208  2BE5               	incf	(my_vprintf@i+1)& (0+255),f,b
  3023  00120A                     l7882:
  3024                           
  3025                           ; BSR set to: 3
  3026  00120A  0E90               	movlw	low my_vprintf@buffer
  3027  00120C  6E04               	movwf	strlen@s^0,c
  3028  00120E  0E03               	movlw	high my_vprintf@buffer
  3029  001210  6E05               	movwf	(strlen@s+1)^0,c
  3030  001212  EC44  F028         	call	_strlen	;wreg free
  3031  001216  5004               	movf	?_strlen^0,w,c
  3032  001218  0103               	movlb	3	; () banked
  3033  00121A  5DE4               	subwf	my_vprintf@i& (0+255),w,b
  3034  00121C  5005               	movf	(?_strlen+1)^0,w,c
  3035  00121E  59E5               	subwfb	(my_vprintf@i+1)& (0+255),w,b
  3036  001220  A0D8               	btfss	status,0,c
  3037  001222  EF15  F009         	goto	u9561
  3038  001226  EF17  F009         	goto	u9560
  3039  00122A                     u9561:
  3040  00122A  EFD4  F008         	goto	l7872
  3041  00122E                     u9560:
  3042  00122E                     l7884:
  3043                           
  3044                           ; BSR set to: 3
  3045                           ;src/print/my_print.c: 175:      if (prec == -1)
  3046  00122E  29E8               	incf	my_vprintf@prec& (0+255),w,b
  3047  001230  E106               	bnz	u9571
  3048  001232  29E9               	incf	(my_vprintf@prec+1)& (0+255),w,b
  3049  001234  A4D8               	btfss	status,2,c
  3050  001236  EF1F  F009         	goto	u9571
  3051  00123A  EF21  F009         	goto	u9570
  3052  00123E                     u9571:
  3053  00123E  EF25  F009         	goto	l7888
  3054  001242                     u9570:
  3055  001242                     
  3056                           ; BSR set to: 3
  3057                           ;src/print/my_print.c: 176:       prec = 6;
  3058  001242  0E00               	movlw	0
  3059  001244  6FE9               	movwf	(my_vprintf@prec+1)& (0+255),b
  3060  001246  0E06               	movlw	6
  3061  001248  6FE8               	movwf	my_vprintf@prec& (0+255),b
  3062  00124A                     l7888:
  3063                           
  3064                           ; BSR set to: 3
  3065                           ;src/print/my_print.c: 177:      if (expA <= -4 || j > prec)
  3066  00124A  AFD7               	btfss	(my_vprintf@expA+1)& (0+255),7,b
  3067  00124C  EF33  F009         	goto	u9580
  3068  001250  0EFD               	movlw	253
  3069  001252  5DD6               	subwf	my_vprintf@expA& (0+255),w,b
  3070  001254  0EFF               	movlw	255
  3071  001256  59D7               	subwfb	(my_vprintf@expA+1)& (0+255),w,b
  3072  001258  A0D8               	btfss	status,0,c
  3073  00125A  EF31  F009         	goto	u9581
  3074  00125E  EF33  F009         	goto	u9580
  3075  001262                     u9581:
  3076  001262  EF42  F009         	goto	l7892
  3077  001266                     u9580:
  3078  001266                     
  3079                           ; BSR set to: 3
  3080  001266  51DC               	movf	my_vprintf@j& (0+255),w,b
  3081  001268  5DE8               	subwf	my_vprintf@prec& (0+255),w,b
  3082  00126A  51E9               	movf	(my_vprintf@prec+1)& (0+255),w,b
  3083  00126C  0A80               	xorlw	128
  3084  00126E  6E36               	movwf	??_my_vprintf^0,c
  3085  001270  51DD               	movf	(my_vprintf@j+1)& (0+255),w,b
  3086  001272  0A80               	xorlw	128
  3087  001274  5836               	subwfb	??_my_vprintf^0,w,c
  3088  001276  B0D8               	btfsc	status,0,c
  3089  001278  EF40  F009         	goto	u9591
  3090  00127C  EF42  F009         	goto	u9590
  3091  001280                     u9591:
  3092  001280  EF51  F009         	goto	l7894
  3093  001284                     u9590:
  3094  001284                     l7892:
  3095                           
  3096                           ; BSR set to: 3
  3097                           ;src/print/my_print.c: 178:       ftoa_sci(buffer, double_temp);
  3098  001284  0E90               	movlw	low my_vprintf@buffer
  3099  001286  0100               	movlb	0	; () banked
  3100  001288  6FD0               	movwf	ftoa_sci@buffer& (0+255),b
  3101  00128A  0E03               	movlw	high my_vprintf@buffer
  3102  00128C  6FD1               	movwf	(ftoa_sci@buffer+1)& (0+255),b
  3103  00128E  C3E0  F0D2         	movff	my_vprintf@double_temp,ftoa_sci@value
  3104  001292  C3E1  F0D3         	movff	my_vprintf@double_temp+1,ftoa_sci@value+1
  3105  001296  C3E2  F0D4         	movff	my_vprintf@double_temp+2,ftoa_sci@value+2
  3106  00129A  C3E3  F0D5         	movff	my_vprintf@double_temp+3,ftoa_sci@value+3
  3107  00129E  EC07  F016         	call	_ftoa_sci	;wreg free
  3108  0012A2                     l7894:
  3109                           
  3110                           ;src/print/my_print.c: 179:      precG(buffer, &prec);
  3111  0012A2  0E90               	movlw	low my_vprintf@buffer
  3112  0012A4  6E1F               	movwf	precG@str^0,c
  3113  0012A6  0E03               	movlw	high my_vprintf@buffer
  3114  0012A8  6E20               	movwf	(precG@str+1)^0,c
  3115  0012AA  0EE8               	movlw	low my_vprintf@prec
  3116  0012AC  6E21               	movwf	precG@precision^0,c
  3117  0012AE  0E03               	movlw	high my_vprintf@prec
  3118  0012B0  6E22               	movwf	(precG@precision+1)^0,c
  3119  0012B2  EC05  F00A         	call	_precG	;wreg free
  3120  0012B6  EFC3  F007         	goto	l7818
  3121  0012BA                     l7900:
  3122                           
  3123                           ; BSR set to: 3
  3124                           ;src/print/my_print.c: 184:      strcpy(buffer," ");
  3125  0012BA  0E90               	movlw	low my_vprintf@buffer
  3126  0012BC  6E08               	movwf	strcpy@dest^0,c
  3127  0012BE  0E03               	movlw	high my_vprintf@buffer
  3128  0012C0  6E09               	movwf	(strcpy@dest+1)^0,c
  3129  0012C2  0E87               	movlw	low STR_7
  3130  0012C4  6E0A               	movwf	strcpy@src^0,c
  3131  0012C6  0E08               	movlw	high STR_7
  3132  0012C8  6E0B               	movwf	(strcpy@src+1)^0,c
  3133  0012CA  EC18  F026         	call	_strcpy	;wreg free
  3134                           
  3135                           ;src/print/my_print.c: 185:      break;
  3136  0012CE  EFBD  F009         	goto	l7906
  3137  0012D2                     l7902:
  3138                           
  3139                           ; BSR set to: 3
  3140                           ;src/print/my_print.c: 187:      error--;
  3141  0012D2  07D4               	decf	my_vprintf@error& (0+255),f,b
  3142  0012D4  A0D8               	btfss	status,0,c
  3143  0012D6  07D5               	decf	(my_vprintf@error+1)& (0+255),f,b
  3144                           
  3145                           ;src/print/my_print.c: 188:    }
  3146  0012D8  EFBD  F009         	goto	l7906
  3147  0012DC                     l7904:
  3148                           
  3149                           ; BSR set to: 3
  3150  0012DC  0E84               	movlw	low my_vprintf@format
  3151  0012DE  25D8               	addwf	my_vprintf@x& (0+255),w,b
  3152  0012E0  6ED9               	movwf	fsr2l,c
  3153  0012E2  0E03               	movlw	high my_vprintf@format
  3154  0012E4  21D9               	addwfc	(my_vprintf@x+1)& (0+255),w,b
  3155  0012E6  6EDA               	movwf	fsr2h,c
  3156  0012E8  50DF               	movf	indf2,w,c
  3157  0012EA  6E36               	movwf	??_my_vprintf^0,c
  3158  0012EC  6A37               	clrf	(??_my_vprintf+1)^0,c
  3159                           
  3160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3161                           ; Switch size 1, requested type "simple"
  3162                           ; Number of cases is 1, Range of values is 0 to 0
  3163                           ; switch strategies available:
  3164                           ; Name         Instructions Cycles
  3165                           ; simple_byte            4     3 (average)
  3166                           ;	Chosen strategy is simple_byte
  3167  0012EE  5037               	movf	(??_my_vprintf+1)^0,w,c
  3168  0012F0  0A00               	xorlw	0	; case 0
  3169  0012F2  B4D8               	btfsc	status,2,c
  3170  0012F4  EF7E  F009         	goto	l8146
  3171  0012F8  EF69  F009         	goto	l7902
  3172  0012FC                     l8146:
  3173                           
  3174                           ; BSR set to: 3
  3175                           ; Switch size 1, requested type "simple"
  3176                           ; Number of cases is 15, Range of values is 37 to 120
  3177                           ; switch strategies available:
  3178                           ; Name         Instructions Cycles
  3179                           ; simple_byte           46    24 (average)
  3180                           ;	Chosen strategy is simple_byte
  3181  0012FC  5036               	movf	??_my_vprintf^0,w,c
  3182  0012FE  0A25               	xorlw	37	; case 37
  3183  001300  B4D8               	btfsc	status,2,c
  3184  001302  EF90  F005         	goto	l7714
  3185  001306  0A60               	xorlw	96	; case 69
  3186  001308  B4D8               	btfsc	status,2,c
  3187  00130A  EF9A  F007         	goto	l7810
  3188  00130E  0A02               	xorlw	2	; case 71
  3189  001310  B4D8               	btfsc	status,2,c
  3190  001312  EF98  F008         	goto	l7860
  3191  001316  0A1F               	xorlw	31	; case 88
  3192  001318  B4D8               	btfsc	status,2,c
  3193  00131A  EF89  F006         	goto	l7758
  3194  00131E  0A3B               	xorlw	59	; case 99
  3195  001320  B4D8               	btfsc	status,2,c
  3196  001322  EF9C  F005         	goto	l7716
  3197  001326  0A07               	xorlw	7	; case 100
  3198  001328  B4D8               	btfsc	status,2,c
  3199  00132A  EFD4  F005         	goto	l7730
  3200  00132E  0A01               	xorlw	1	; case 101
  3201  001330  B4D8               	btfsc	status,2,c
  3202  001332  EF6F  F007         	goto	l7800
  3203  001336  0A03               	xorlw	3	; case 102
  3204  001338  B4D8               	btfsc	status,2,c
  3205  00133A  EF37  F007         	goto	l7790
  3206  00133E  0A01               	xorlw	1	; case 103
  3207  001340  B4D8               	btfsc	status,2,c
  3208  001342  EFD3  F007         	goto	l7822
  3209  001346  0A0E               	xorlw	14	; case 105
  3210  001348  B4D8               	btfsc	status,2,c
  3211  00134A  EF1A  F006         	goto	l7740
  3212  00134E  0A07               	xorlw	7	; case 110
  3213  001350  B4D8               	btfsc	status,2,c
  3214  001352  EF5D  F009         	goto	l7900
  3215  001356  0A01               	xorlw	1	; case 111
  3216  001358  B4D8               	btfsc	status,2,c
  3217  00135A  EFFF  F006         	goto	l7780
  3218  00135E  0A1C               	xorlw	28	; case 115
  3219  001360  B4D8               	btfsc	status,2,c
  3220  001362  EFB2  F005         	goto	l7722
  3221  001366  0A06               	xorlw	6	; case 117
  3222  001368  B4D8               	btfsc	status,2,c
  3223  00136A  EF60  F006         	goto	l7750
  3224  00136E  0A0D               	xorlw	13	; case 120
  3225  001370  B4D8               	btfsc	status,2,c
  3226  001372  EFC7  F006         	goto	l7770
  3227  001376  EF69  F009         	goto	l7902
  3228  00137A                     l7906:
  3229                           
  3230                           ;src/print/my_print.c: 189:    setWidth(buffer, &width);
  3231  00137A  0E90               	movlw	low my_vprintf@buffer
  3232  00137C  6E08               	movwf	setWidth@str^0,c
  3233  00137E  0E03               	movlw	high my_vprintf@buffer
  3234  001380  6E09               	movwf	(setWidth@str+1)^0,c
  3235  001382  0EDA               	movlw	low my_vprintf@width
  3236  001384  6E0A               	movwf	setWidth@width^0,c
  3237  001386  0E03               	movlw	high my_vprintf@width
  3238  001388  6E0B               	movwf	(setWidth@width+1)^0,c
  3239  00138A  EC9E  F018         	call	_setWidth	;wreg free
  3240  00138E                     
  3241                           ;src/print/my_print.c: 190:    strcat(string, buffer);
  3242  00138E  0E00               	movlw	low my_vprintf@string
  3243  001390  6E12               	movwf	strcat@dest^0,c
  3244  001392  0E03               	movlw	high my_vprintf@string
  3245  001394  6E13               	movwf	(strcat@dest+1)^0,c
  3246  001396  0E90               	movlw	low my_vprintf@buffer
  3247  001398  6E14               	movwf	strcat@src^0,c
  3248  00139A  0E03               	movlw	high my_vprintf@buffer
  3249  00139C  6E15               	movwf	(strcat@src+1)^0,c
  3250  00139E  EC5F  F028         	call	_strcat	;wreg free
  3251  0013A2                     
  3252                           ;src/print/my_print.c: 191:    length += strlen(buffer);
  3253  0013A2  0E90               	movlw	low my_vprintf@buffer
  3254  0013A4  6E04               	movwf	strlen@s^0,c
  3255  0013A6  0E03               	movlw	high my_vprintf@buffer
  3256  0013A8  6E05               	movwf	(strlen@s+1)^0,c
  3257  0013AA  EC44  F028         	call	_strlen	;wreg free
  3258  0013AE  5004               	movf	?_strlen^0,w,c
  3259  0013B0  0103               	movlb	3	; () banked
  3260  0013B2  2782               	addwf	my_vprintf@length& (0+255),f,b
  3261  0013B4  5005               	movf	(?_strlen+1)^0,w,c
  3262  0013B6  2383               	addwfc	(my_vprintf@length+1)& (0+255),f,b
  3263                           
  3264                           ;src/print/my_print.c: 193:   }
  3265  0013B8  EFEB  F009         	goto	l7916
  3266  0013BC                     l7912:
  3267                           
  3268                           ; BSR set to: 3
  3269                           ;src/print/my_print.c: 195:   {;src/print/my_print.c: 196:    strcat(string, ch);
  3270  0013BC  0E00               	movlw	low my_vprintf@string
  3271  0013BE  6E12               	movwf	strcat@dest^0,c
  3272  0013C0  0E03               	movlw	high my_vprintf@string
  3273  0013C2  6E13               	movwf	(strcat@dest+1)^0,c
  3274  0013C4  0ED0               	movlw	low my_vprintf@ch
  3275  0013C6  6E14               	movwf	strcat@src^0,c
  3276  0013C8  0E03               	movlw	high my_vprintf@ch
  3277  0013CA  6E15               	movwf	(strcat@src+1)^0,c
  3278  0013CC  EC5F  F028         	call	_strcat	;wreg free
  3279  0013D0                     
  3280                           ;src/print/my_print.c: 197:    length++;
  3281  0013D0  0103               	movlb	3	; () banked
  3282  0013D2  4B82               	infsnz	my_vprintf@length& (0+255),f,b
  3283  0013D4  2B83               	incf	(my_vprintf@length+1)& (0+255),f,b
  3284  0013D6                     l7916:
  3285                           
  3286                           ; BSR set to: 3
  3287                           ;src/print/my_print.c: 34:  while ( (ch[0] = *sformat++)) {
  3288  0013D6  C0D6  FFF6         	movff	my_vprintf@sformat,tblptrl
  3289  0013DA  C0D7  FFF7         	movff	my_vprintf@sformat+1,tblptrh
  3290  0013DE  0100               	movlb	0	; () banked
  3291  0013E0  4BD6               	infsnz	my_vprintf@sformat& (0+255),f,b
  3292  0013E2  2BD7               	incf	(my_vprintf@sformat+1)& (0+255),f,b
  3293  0013E4                     	if	0	;tblptru may be non-zero
  3294  0013E4                     	endif
  3295  0013E4                     	if	0	;tblptru may be non-zero
  3296  0013E4                     	endif
  3297  0013E4  0008               	tblrd		*
  3298  0013E6  CFF5 F3D0          	movff	tablat,my_vprintf@ch
  3299  0013EA  0103               	movlb	3	; () banked
  3300  0013EC  51D0               	movf	my_vprintf@ch& (0+255),w,b
  3301  0013EE  A4D8               	btfss	status,2,c
  3302  0013F0  EFFC  F009         	goto	u9601
  3303  0013F4  EFFE  F009         	goto	u9600
  3304  0013F8                     u9601:
  3305  0013F8  EF6C  F004         	goto	l7644
  3306  0013FC                     u9600:
  3307  0013FC                     
  3308                           ; BSR set to: 3
  3309                           ;src/print/my_print.c: 203:  SERIAL_Write(string);
  3310  0013FC  0E00               	movlw	low my_vprintf@string
  3311  0013FE  6E08               	movwf	SERIAL_Write@str^0,c
  3312  001400  0E03               	movlw	high my_vprintf@string
  3313  001402  6E09               	movwf	(SERIAL_Write@str+1)^0,c
  3314  001404  EC83  F027         	call	_SERIAL_Write	;wreg free
  3315  001408  0012               	return		;funcret
  3316  00140A                     __end_of_my_vprintf:
  3317                           	opt callstack 0
  3318                           
  3319 ;; *************** function _upperCL *****************
  3320 ;; Defined at:
  3321 ;;		line 103 in file "src/print/format.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  str             2    7[COMRAM] PTR unsigned char 
  3324 ;;		 -> my_vprintf@buffer(64), 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  i               2   10[COMRAM] int 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3336 ;;      Params:         2       0       0       0       0       0       0       0       0
  3337 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3338 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3339 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3340 ;;Total ram usage:        5 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    3
  3343 ;; This function calls:
  3344 ;;		_strlen
  3345 ;; This function is called by:
  3346 ;;		_my_vprintf
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text2
  3351  0049DE                     __ptext2:
  3352                           	opt callstack 0
  3353  0049DE                     _upperCL:
  3354                           	opt callstack 26
  3355  0049DE                     
  3356                           ;src/print/format.c: 104:     int i;;src/print/format.c: 105:     for (i = 0; i <= strle
      +                          n(str);i++) {
  3357  0049DE  0E00               	movlw	0
  3358  0049E0  6E0C               	movwf	(upperCL@i+1)^0,c
  3359  0049E2  0E00               	movlw	0
  3360  0049E4  6E0B               	movwf	upperCL@i^0,c
  3361  0049E6  EF22  F025         	goto	l7004
  3362  0049EA                     l6996:
  3363                           
  3364                           ;src/print/format.c: 106:         if((str[i] >= 97) && (str[i] <= 122))
  3365  0049EA  500B               	movf	upperCL@i^0,w,c
  3366  0049EC  2408               	addwf	upperCL@str^0,w,c
  3367  0049EE  6ED9               	movwf	fsr2l,c
  3368  0049F0  500C               	movf	(upperCL@i+1)^0,w,c
  3369  0049F2  2009               	addwfc	(upperCL@str+1)^0,w,c
  3370  0049F4  6EDA               	movwf	fsr2h,c
  3371  0049F6  0E60               	movlw	96
  3372  0049F8  64DF               	cpfsgt	indf2,c
  3373  0049FA  EF01  F025         	goto	u8231
  3374  0049FE  EF03  F025         	goto	u8230
  3375  004A02                     u8231:
  3376  004A02  EF20  F025         	goto	l7002
  3377  004A06                     u8230:
  3378  004A06  500B               	movf	upperCL@i^0,w,c
  3379  004A08  2408               	addwf	upperCL@str^0,w,c
  3380  004A0A  6ED9               	movwf	fsr2l,c
  3381  004A0C  500C               	movf	(upperCL@i+1)^0,w,c
  3382  004A0E  2009               	addwfc	(upperCL@str+1)^0,w,c
  3383  004A10  6EDA               	movwf	fsr2h,c
  3384  004A12  0E7B               	movlw	123
  3385  004A14  60DF               	cpfslt	indf2,c
  3386  004A16  EF0F  F025         	goto	u8241
  3387  004A1A  EF11  F025         	goto	u8240
  3388  004A1E                     u8241:
  3389  004A1E  EF20  F025         	goto	l7002
  3390  004A22                     u8240:
  3391  004A22                     
  3392                           ;src/print/format.c: 107:             str[i] = str[i] - 32;
  3393  004A22  500B               	movf	upperCL@i^0,w,c
  3394  004A24  2408               	addwf	upperCL@str^0,w,c
  3395  004A26  6ED9               	movwf	fsr2l,c
  3396  004A28  500C               	movf	(upperCL@i+1)^0,w,c
  3397  004A2A  2009               	addwfc	(upperCL@str+1)^0,w,c
  3398  004A2C  6EDA               	movwf	fsr2h,c
  3399  004A2E  500B               	movf	upperCL@i^0,w,c
  3400  004A30  2408               	addwf	upperCL@str^0,w,c
  3401  004A32  6EE1               	movwf	fsr1l,c
  3402  004A34  500C               	movf	(upperCL@i+1)^0,w,c
  3403  004A36  2009               	addwfc	(upperCL@str+1)^0,w,c
  3404  004A38  6EE2               	movwf	fsr1h,c
  3405  004A3A  50E7               	movf	indf1,w,c
  3406  004A3C  0FE0               	addlw	224
  3407  004A3E  6EDF               	movwf	indf2,c
  3408  004A40                     l7002:
  3409                           
  3410                           ;src/print/format.c: 108:     }
  3411  004A40  4A0B               	infsnz	upperCL@i^0,f,c
  3412  004A42  2A0C               	incf	(upperCL@i+1)^0,f,c
  3413  004A44                     l7004:
  3414  004A44  C008  F004         	movff	upperCL@str,strlen@s
  3415  004A48  C009  F005         	movff	upperCL@str+1,strlen@s+1
  3416  004A4C  EC44  F028         	call	_strlen	;wreg free
  3417  004A50  500B               	movf	upperCL@i^0,w,c
  3418  004A52  5C04               	subwf	?_strlen^0,w,c
  3419  004A54  500C               	movf	(upperCL@i+1)^0,w,c
  3420  004A56  5805               	subwfb	(?_strlen+1)^0,w,c
  3421  004A58  B0D8               	btfsc	status,0,c
  3422  004A5A  EF31  F025         	goto	u8251
  3423  004A5E  EF33  F025         	goto	u8250
  3424  004A62                     u8251:
  3425  004A62  EFF5  F024         	goto	l6996
  3426  004A66                     u8250:
  3427  004A66  0012               	return		;funcret
  3428  004A68                     __end_of_upperCL:
  3429                           	opt callstack 0
  3430                           
  3431 ;; *************** function _strcat *****************
  3432 ;; Defined at:
  3433 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  dest            2   17[COMRAM] PTR unsigned char 
  3436 ;;		 -> my_vprintf@string(128), 
  3437 ;;  src             2   19[COMRAM] PTR const unsigned char 
  3438 ;;		 -> my_vprintf@buffer(64), my_vprintf@ch(2), 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  2   17[COMRAM] PTR unsigned char 
  3443 ;; Registers used:
  3444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3450 ;;      Params:         4       0       0       0       0       0       0       0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3453 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3454 ;;Total ram usage:        4 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    3
  3457 ;; This function calls:
  3458 ;;		_strcpy
  3459 ;;		_strlen
  3460 ;; This function is called by:
  3461 ;;		_my_vprintf
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text3
  3466  0050BE                     __ptext3:
  3467                           	opt callstack 0
  3468  0050BE                     _strcat:
  3469                           	opt callstack 26
  3470  0050BE  C012  F004         	movff	strcat@dest,strlen@s
  3471  0050C2  C013  F005         	movff	strcat@dest+1,strlen@s+1
  3472  0050C6  EC44  F028         	call	_strlen	;wreg free
  3473  0050CA  5004               	movf	?_strlen^0,w,c
  3474  0050CC  2412               	addwf	strcat@dest^0,w,c
  3475  0050CE  6E08               	movwf	strcpy@dest^0,c
  3476  0050D0  5005               	movf	(?_strlen+1)^0,w,c
  3477  0050D2  2013               	addwfc	(strcat@dest+1)^0,w,c
  3478  0050D4  6E09               	movwf	(strcpy@dest+1)^0,c
  3479  0050D6  C014  F00A         	movff	strcat@src,strcpy@src
  3480  0050DA  C015  F00B         	movff	strcat@src+1,strcpy@src+1
  3481  0050DE  EC18  F026         	call	_strcpy	;wreg free
  3482  0050E2  0012               	return		;funcret
  3483  0050E4                     __end_of_strcat:
  3484                           	opt callstack 0
  3485                           
  3486 ;; *************** function _setWidth *****************
  3487 ;; Defined at:
  3488 ;;		line 403 in file "src/print/format.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  str             2    7[COMRAM] PTR unsigned char 
  3491 ;;		 -> my_vprintf@buffer(64), 
  3492 ;;  width           2    9[COMRAM] PTR int 
  3493 ;;		 -> my_vprintf@width(2), 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  j               2   17[COMRAM] int 
  3496 ;;  len             2   15[COMRAM] int 
  3497 ;;  widthDif        2   13[COMRAM] int 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      void 
  3500 ;; Registers used:
  3501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3507 ;;      Params:         4       0       0       0       0       0       0       0       0
  3508 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3509 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3510 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3511 ;;Total ram usage:       12 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    3
  3514 ;; This function calls:
  3515 ;;		_strlen
  3516 ;; This function is called by:
  3517 ;;		_my_vprintf
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text4
  3522  00313C                     __ptext4:
  3523                           	opt callstack 0
  3524  00313C                     _setWidth:
  3525                           	opt callstack 26
  3526  00313C                     
  3527                           ;src/print/format.c: 404:     int j;;src/print/format.c: 405:     int len = strlen(str);
  3528  00313C  C008  F004         	movff	setWidth@str,strlen@s
  3529  003140  C009  F005         	movff	setWidth@str+1,strlen@s+1
  3530  003144  EC44  F028         	call	_strlen	;wreg free
  3531  003148  C004  F010         	movff	?_strlen,setWidth@len
  3532  00314C  C005  F011         	movff	?_strlen+1,setWidth@len+1
  3533  003150                     
  3534                           ;src/print/format.c: 406:     int widthDif;;src/print/format.c: 408:     widthDif = (*wi
      +                          dth) - len;
  3535  003150  C00A  FFD9         	movff	setWidth@width,fsr2l
  3536  003154  C00B  FFDA         	movff	setWidth@width+1,fsr2h
  3537  003158  CFDE F00C          	movff	postinc2,??_setWidth
  3538  00315C  CFDD F00D          	movff	postdec2,??_setWidth+1
  3539  003160  5010               	movf	setWidth@len^0,w,c
  3540  003162  5C0C               	subwf	??_setWidth^0,w,c
  3541  003164  6E0E               	movwf	setWidth@widthDif^0,c
  3542  003166  5011               	movf	(setWidth@len+1)^0,w,c
  3543  003168  580D               	subwfb	(??_setWidth+1)^0,w,c
  3544  00316A  6E0F               	movwf	(setWidth@widthDif+1)^0,c
  3545  00316C                     
  3546                           ;src/print/format.c: 409:     if (widthDif > 0 && alingL == 1) {
  3547  00316C  BE0F               	btfsc	(setWidth@widthDif+1)^0,7,c
  3548  00316E  EFC1  F018         	goto	u9061
  3549  003172  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3550  003174  E108               	bnz	u9060
  3551  003176  040E               	decf	setWidth@widthDif^0,w,c
  3552  003178  A0D8               	btfss	status,0,c
  3553  00317A  EFC1  F018         	goto	u9061
  3554  00317E  EFC3  F018         	goto	u9060
  3555  003182                     u9061:
  3556  003182  EFEE  F018         	goto	l7420
  3557  003186                     u9060:
  3558  003186  043B               	decf	_alingL^0,w,c
  3559  003188  A4D8               	btfss	status,2,c
  3560  00318A  EFC9  F018         	goto	u9071
  3561  00318E  EFCB  F018         	goto	u9070
  3562  003192                     u9071:
  3563  003192  EFEE  F018         	goto	l7420
  3564  003196                     u9070:
  3565  003196                     
  3566                           ;src/print/format.c: 410:         for(j=0; j < widthDif; j++) {
  3567  003196  0E00               	movlw	0
  3568  003198  6E13               	movwf	(setWidth@j+1)^0,c
  3569  00319A  0E00               	movlw	0
  3570  00319C  6E12               	movwf	setWidth@j^0,c
  3571  00319E  EFDD  F018         	goto	l7418
  3572  0031A2                     l7412:
  3573                           
  3574                           ;src/print/format.c: 412:             str[len] =' ';
  3575  0031A2  5010               	movf	setWidth@len^0,w,c
  3576  0031A4  2408               	addwf	setWidth@str^0,w,c
  3577  0031A6  6ED9               	movwf	fsr2l,c
  3578  0031A8  5011               	movf	(setWidth@len+1)^0,w,c
  3579  0031AA  2009               	addwfc	(setWidth@str+1)^0,w,c
  3580  0031AC  6EDA               	movwf	fsr2h,c
  3581  0031AE  0E20               	movlw	32
  3582  0031B0  6EDF               	movwf	indf2,c
  3583  0031B2                     
  3584                           ;src/print/format.c: 413:             len++;
  3585  0031B2  4A10               	infsnz	setWidth@len^0,f,c
  3586  0031B4  2A11               	incf	(setWidth@len+1)^0,f,c
  3587  0031B6                     
  3588                           ;src/print/format.c: 414:         }
  3589  0031B6  4A12               	infsnz	setWidth@j^0,f,c
  3590  0031B8  2A13               	incf	(setWidth@j+1)^0,f,c
  3591  0031BA                     l7418:
  3592  0031BA  500E               	movf	setWidth@widthDif^0,w,c
  3593  0031BC  5C12               	subwf	setWidth@j^0,w,c
  3594  0031BE  5013               	movf	(setWidth@j+1)^0,w,c
  3595  0031C0  0A80               	xorlw	128
  3596  0031C2  6E0C               	movwf	??_setWidth^0,c
  3597  0031C4  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3598  0031C6  0A80               	xorlw	128
  3599  0031C8  580C               	subwfb	??_setWidth^0,w,c
  3600  0031CA  A0D8               	btfss	status,0,c
  3601  0031CC  EFEA  F018         	goto	u9081
  3602  0031D0  EFEC  F018         	goto	u9080
  3603  0031D4                     u9081:
  3604  0031D4  EFD1  F018         	goto	l7412
  3605  0031D8                     u9080:
  3606  0031D8  EFB3  F019         	goto	l575
  3607  0031DC                     l7420:
  3608  0031DC  BE0F               	btfsc	(setWidth@widthDif+1)^0,7,c
  3609  0031DE  EFF9  F018         	goto	u9091
  3610  0031E2  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3611  0031E4  E108               	bnz	u9090
  3612  0031E6  040E               	decf	setWidth@widthDif^0,w,c
  3613  0031E8  A0D8               	btfss	status,0,c
  3614  0031EA  EFF9  F018         	goto	u9091
  3615  0031EE  EFFB  F018         	goto	u9090
  3616  0031F2                     u9091:
  3617  0031F2  EFB3  F019         	goto	l575
  3618  0031F6                     u9090:
  3619  0031F6  503B               	movf	_alingL^0,w,c
  3620  0031F8  A4D8               	btfss	status,2,c
  3621  0031FA  EF01  F019         	goto	u9101
  3622  0031FE  EF03  F019         	goto	u9100
  3623  003202                     u9101:
  3624  003202  EFB3  F019         	goto	l575
  3625  003206                     u9100:
  3626  003206                     
  3627                           ;src/print/format.c: 417:         for(j = (*width)-1; j >= 0; j--) {
  3628  003206  C00A  FFD9         	movff	setWidth@width,fsr2l
  3629  00320A  C00B  FFDA         	movff	setWidth@width+1,fsr2h
  3630  00320E  CFDE F00C          	movff	postinc2,??_setWidth
  3631  003212  CFDD F00D          	movff	postdec2,??_setWidth+1
  3632  003216  0EFF               	movlw	255
  3633  003218  240C               	addwf	??_setWidth^0,w,c
  3634  00321A  6E12               	movwf	setWidth@j^0,c
  3635  00321C  0EFF               	movlw	255
  3636  00321E  200D               	addwfc	(??_setWidth+1)^0,w,c
  3637  003220  6E13               	movwf	(setWidth@j+1)^0,c
  3638  003222                     l7426:
  3639  003222  BE13               	btfsc	(setWidth@j+1)^0,7,c
  3640  003224  EF18  F019         	goto	u9110
  3641  003228  EF16  F019         	goto	u9111
  3642  00322C                     u9111:
  3643  00322C  EF1A  F019         	goto	l7430
  3644  003230                     u9110:
  3645  003230  EFB3  F019         	goto	l575
  3646  003234                     l7430:
  3647                           
  3648                           ;src/print/format.c: 418:             len--;
  3649  003234  0610               	decf	setWidth@len^0,f,c
  3650  003236  A0D8               	btfss	status,0,c
  3651  003238  0611               	decf	(setWidth@len+1)^0,f,c
  3652  00323A                     
  3653                           ;src/print/format.c: 419:             if (zeros == 1 && precInt == 0) {
  3654  00323A  0100               	movlb	0	; () banked
  3655  00323C  05C6               	decf	_zeros& (0+255),w,b
  3656  00323E  A4D8               	btfss	status,2,c
  3657  003240  EF24  F019         	goto	u9121
  3658  003244  EF26  F019         	goto	u9120
  3659  003248                     u9121:
  3660  003248  EF95  F019         	goto	l7452
  3661  00324C                     u9120:
  3662  00324C                     
  3663                           ; BSR set to: 0
  3664  00324C  51C5               	movf	_precInt& (0+255),w,b
  3665  00324E  A4D8               	btfss	status,2,c
  3666  003250  EF2C  F019         	goto	u9131
  3667  003254  EF2E  F019         	goto	u9130
  3668  003258                     u9131:
  3669  003258  EF95  F019         	goto	l7452
  3670  00325C                     u9130:
  3671  00325C                     
  3672                           ; BSR set to: 0
  3673                           ;src/print/format.c: 420:                 if (j >= widthDif) {
  3674  00325C  500E               	movf	setWidth@widthDif^0,w,c
  3675  00325E  5C12               	subwf	setWidth@j^0,w,c
  3676  003260  5013               	movf	(setWidth@j+1)^0,w,c
  3677  003262  0A80               	xorlw	128
  3678  003264  6E0C               	movwf	??_setWidth^0,c
  3679  003266  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3680  003268  0A80               	xorlw	128
  3681  00326A  580C               	subwfb	??_setWidth^0,w,c
  3682  00326C  A0D8               	btfss	status,0,c
  3683  00326E  EF3B  F019         	goto	u9141
  3684  003272  EF3D  F019         	goto	u9140
  3685  003276                     u9141:
  3686  003276  EF75  F019         	goto	l7446
  3687  00327A                     u9140:
  3688  00327A                     
  3689                           ; BSR set to: 0
  3690                           ;src/print/format.c: 421:                     if (str[len] == '+' || str[len] == '-')
  3691  00327A  5010               	movf	setWidth@len^0,w,c
  3692  00327C  2408               	addwf	setWidth@str^0,w,c
  3693  00327E  6ED9               	movwf	fsr2l,c
  3694  003280  5011               	movf	(setWidth@len+1)^0,w,c
  3695  003282  2009               	addwfc	(setWidth@str+1)^0,w,c
  3696  003284  6EDA               	movwf	fsr2h,c
  3697  003286  0E2B               	movlw	43
  3698  003288  18DE               	xorwf	postinc2,w,c
  3699  00328A  B4D8               	btfsc	status,2,c
  3700  00328C  EF4A  F019         	goto	u9151
  3701  003290  EF4C  F019         	goto	u9150
  3702  003294                     u9151:
  3703  003294  EF5B  F019         	goto	l7442
  3704  003298                     u9150:
  3705  003298                     
  3706                           ; BSR set to: 0
  3707  003298  5010               	movf	setWidth@len^0,w,c
  3708  00329A  2408               	addwf	setWidth@str^0,w,c
  3709  00329C  6ED9               	movwf	fsr2l,c
  3710  00329E  5011               	movf	(setWidth@len+1)^0,w,c
  3711  0032A0  2009               	addwfc	(setWidth@str+1)^0,w,c
  3712  0032A2  6EDA               	movwf	fsr2h,c
  3713  0032A4  0E2D               	movlw	45
  3714  0032A6  18DE               	xorwf	postinc2,w,c
  3715  0032A8  A4D8               	btfss	status,2,c
  3716  0032AA  EF59  F019         	goto	u9161
  3717  0032AE  EF5B  F019         	goto	u9160
  3718  0032B2                     u9161:
  3719  0032B2  EF65  F019         	goto	l7444
  3720  0032B6                     u9160:
  3721  0032B6                     l7442:
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;src/print/format.c: 422:                         str [j] = '0';
  3725  0032B6  5012               	movf	setWidth@j^0,w,c
  3726  0032B8  2408               	addwf	setWidth@str^0,w,c
  3727  0032BA  6ED9               	movwf	fsr2l,c
  3728  0032BC  5013               	movf	(setWidth@j+1)^0,w,c
  3729  0032BE  2009               	addwfc	(setWidth@str+1)^0,w,c
  3730  0032C0  6EDA               	movwf	fsr2h,c
  3731  0032C2  0E30               	movlw	48
  3732  0032C4  6EDF               	movwf	indf2,c
  3733  0032C6  EFAE  F019         	goto	l7458
  3734  0032CA                     l7444:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;src/print/format.c: 424:                         str[j] = str[len];
  3738  0032CA  5010               	movf	setWidth@len^0,w,c
  3739  0032CC  2408               	addwf	setWidth@str^0,w,c
  3740  0032CE  6ED9               	movwf	fsr2l,c
  3741  0032D0  5011               	movf	(setWidth@len+1)^0,w,c
  3742  0032D2  2009               	addwfc	(setWidth@str+1)^0,w,c
  3743  0032D4  6EDA               	movwf	fsr2h,c
  3744  0032D6  5012               	movf	setWidth@j^0,w,c
  3745  0032D8  2408               	addwf	setWidth@str^0,w,c
  3746  0032DA  6EE1               	movwf	fsr1l,c
  3747  0032DC  5013               	movf	(setWidth@j+1)^0,w,c
  3748  0032DE  2009               	addwfc	(setWidth@str+1)^0,w,c
  3749  0032E0  6EE2               	movwf	fsr1h,c
  3750  0032E2  CFDF FFE7          	movff	indf2,indf1
  3751  0032E6  EFAE  F019         	goto	l7458
  3752  0032EA                     l7446:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;src/print/format.c: 427:                     if (str[j] != '+' && str [j] != '-')
  3756  0032EA  5012               	movf	setWidth@j^0,w,c
  3757  0032EC  2408               	addwf	setWidth@str^0,w,c
  3758  0032EE  6ED9               	movwf	fsr2l,c
  3759  0032F0  5013               	movf	(setWidth@j+1)^0,w,c
  3760  0032F2  2009               	addwfc	(setWidth@str+1)^0,w,c
  3761  0032F4  6EDA               	movwf	fsr2h,c
  3762  0032F6  0E2B               	movlw	43
  3763  0032F8  18DE               	xorwf	postinc2,w,c
  3764  0032FA  B4D8               	btfsc	status,2,c
  3765  0032FC  EF82  F019         	goto	u9171
  3766  003300  EF84  F019         	goto	u9170
  3767  003304                     u9171:
  3768  003304  EFAE  F019         	goto	l7458
  3769  003308                     u9170:
  3770  003308                     
  3771                           ; BSR set to: 0
  3772  003308  5012               	movf	setWidth@j^0,w,c
  3773  00330A  2408               	addwf	setWidth@str^0,w,c
  3774  00330C  6ED9               	movwf	fsr2l,c
  3775  00330E  5013               	movf	(setWidth@j+1)^0,w,c
  3776  003310  2009               	addwfc	(setWidth@str+1)^0,w,c
  3777  003312  6EDA               	movwf	fsr2h,c
  3778  003314  0E2D               	movlw	45
  3779  003316  18DE               	xorwf	postinc2,w,c
  3780  003318  B4D8               	btfsc	status,2,c
  3781  00331A  EF91  F019         	goto	u9181
  3782  00331E  EF93  F019         	goto	u9180
  3783  003322                     u9181:
  3784  003322  EFAE  F019         	goto	l7458
  3785  003326                     u9180:
  3786  003326  EF5B  F019         	goto	l7442
  3787  00332A                     l7452:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;src/print/format.c: 432:                 if (j >= widthDif)
  3791  00332A  500E               	movf	setWidth@widthDif^0,w,c
  3792  00332C  5C12               	subwf	setWidth@j^0,w,c
  3793  00332E  5013               	movf	(setWidth@j+1)^0,w,c
  3794  003330  0A80               	xorlw	128
  3795  003332  6E0C               	movwf	??_setWidth^0,c
  3796  003334  500F               	movf	(setWidth@widthDif+1)^0,w,c
  3797  003336  0A80               	xorlw	128
  3798  003338  580C               	subwfb	??_setWidth^0,w,c
  3799  00333A  A0D8               	btfss	status,0,c
  3800  00333C  EFA2  F019         	goto	u9191
  3801  003340  EFA4  F019         	goto	u9190
  3802  003344                     u9191:
  3803  003344  EFA6  F019         	goto	l7456
  3804  003348                     u9190:
  3805  003348  EF65  F019         	goto	l7444
  3806  00334C                     l7456:
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;src/print/format.c: 435:                     str[j] =' ';
  3810  00334C  5012               	movf	setWidth@j^0,w,c
  3811  00334E  2408               	addwf	setWidth@str^0,w,c
  3812  003350  6ED9               	movwf	fsr2l,c
  3813  003352  5013               	movf	(setWidth@j+1)^0,w,c
  3814  003354  2009               	addwfc	(setWidth@str+1)^0,w,c
  3815  003356  6EDA               	movwf	fsr2h,c
  3816  003358  0E20               	movlw	32
  3817  00335A  6EDF               	movwf	indf2,c
  3818  00335C                     l7458:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;src/print/format.c: 437:         }
  3822  00335C  0612               	decf	setWidth@j^0,f,c
  3823  00335E  A0D8               	btfss	status,0,c
  3824  003360  0613               	decf	(setWidth@j+1)^0,f,c
  3825  003362  EF11  F019         	goto	l7426
  3826  003366                     l575:
  3827  003366  0012               	return		;funcret
  3828  003368                     __end_of_setWidth:
  3829                           	opt callstack 0
  3830                           
  3831 ;; *************** function _precS *****************
  3832 ;; Defined at:
  3833 ;;		line 348 in file "src/print/format.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  str             2    7[COMRAM] PTR unsigned char 
  3836 ;;		 -> my_vprintf@buffer(64), 
  3837 ;;  precision       2    9[COMRAM] PTR int 
  3838 ;;		 -> my_vprintf@prec(2), 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  i               2   15[COMRAM] int 
  3841 ;;  len             2   13[COMRAM] int 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         4       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3854 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:       10 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    3
  3858 ;; This function calls:
  3859 ;;		_strlen
  3860 ;; This function is called by:
  3861 ;;		_my_vprintf
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text5
  3866  004AEA                     __ptext5:
  3867                           	opt callstack 0
  3868  004AEA                     _precS:
  3869                           	opt callstack 26
  3870  004AEA                     
  3871                           ;src/print/format.c: 349:     int i;;src/print/format.c: 350:     int len = strlen(str);
  3872  004AEA  C008  F004         	movff	precS@str,strlen@s
  3873  004AEE  C009  F005         	movff	precS@str+1,strlen@s+1
  3874  004AF2  EC44  F028         	call	_strlen	;wreg free
  3875  004AF6  C004  F00E         	movff	?_strlen,precS@len
  3876  004AFA  C005  F00F         	movff	?_strlen+1,precS@len+1
  3877  004AFE                     
  3878                           ;src/print/format.c: 352:     if ((*precision) != -1) {
  3879  004AFE  C00A  FFD9         	movff	precS@precision,fsr2l
  3880  004B02  C00B  FFDA         	movff	precS@precision+1,fsr2h
  3881  004B06  28DE               	incf	postinc2,w,c
  3882  004B08  E108               	bnz	u8890
  3883  004B0A  28DE               	incf	postinc2,w,c
  3884  004B0C  B4D8               	btfsc	status,2,c
  3885  004B0E  EF8B  F025         	goto	u8891
  3886  004B12  EF8D  F025         	goto	u8890
  3887  004B16                     u8891:
  3888  004B16  EFB0  F025         	goto	l529
  3889  004B1A                     u8890:
  3890  004B1A                     
  3891                           ;src/print/format.c: 353:         for (i = (*precision); i < len;i++)
  3892  004B1A  C00A  FFD9         	movff	precS@precision,fsr2l
  3893  004B1E  C00B  FFDA         	movff	precS@precision+1,fsr2h
  3894  004B22  CFDE F010          	movff	postinc2,precS@i
  3895  004B26  CFDD F011          	movff	postdec2,precS@i+1
  3896  004B2A  EFA1  F025         	goto	l7320
  3897  004B2E                     l7316:
  3898                           
  3899                           ;src/print/format.c: 354:             str[i] = 0;
  3900  004B2E  5010               	movf	precS@i^0,w,c
  3901  004B30  2408               	addwf	precS@str^0,w,c
  3902  004B32  6ED9               	movwf	fsr2l,c
  3903  004B34  5011               	movf	(precS@i+1)^0,w,c
  3904  004B36  2009               	addwfc	(precS@str+1)^0,w,c
  3905  004B38  6EDA               	movwf	fsr2h,c
  3906  004B3A  0E00               	movlw	0
  3907  004B3C  6EDF               	movwf	indf2,c
  3908  004B3E  4A10               	infsnz	precS@i^0,f,c
  3909  004B40  2A11               	incf	(precS@i+1)^0,f,c
  3910  004B42                     l7320:
  3911  004B42  500E               	movf	precS@len^0,w,c
  3912  004B44  5C10               	subwf	precS@i^0,w,c
  3913  004B46  5011               	movf	(precS@i+1)^0,w,c
  3914  004B48  0A80               	xorlw	128
  3915  004B4A  6E0C               	movwf	??_precS^0,c
  3916  004B4C  500F               	movf	(precS@len+1)^0,w,c
  3917  004B4E  0A80               	xorlw	128
  3918  004B50  580C               	subwfb	??_precS^0,w,c
  3919  004B52  A0D8               	btfss	status,0,c
  3920  004B54  EFAE  F025         	goto	u8901
  3921  004B58  EFB0  F025         	goto	u8900
  3922  004B5C                     u8901:
  3923  004B5C  EF97  F025         	goto	l7316
  3924  004B60                     u8900:
  3925  004B60                     l529:
  3926  004B60  0012               	return		;funcret
  3927  004B62                     __end_of_precS:
  3928                           	opt callstack 0
  3929                           
  3930 ;; *************** function _precI *****************
  3931 ;; Defined at:
  3932 ;;		line 323 in file "src/print/format.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  str             2    7[COMRAM] PTR unsigned char 
  3935 ;;		 -> my_vprintf@buffer(64), 
  3936 ;;  precision       2    9[COMRAM] PTR int 
  3937 ;;		 -> my_vprintf@prec(2), 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  i               2   19[COMRAM] int 
  3940 ;;  len             2   17[COMRAM] int 
  3941 ;;  j               2   15[COMRAM] int 
  3942 ;;  k               2   13[COMRAM] int 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3952 ;;      Params:         4       0       0       0       0       0       0       0       0
  3953 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3954 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3955 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3956 ;;Total ram usage:       14 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    3
  3959 ;; This function calls:
  3960 ;;		_strlen
  3961 ;; This function is called by:
  3962 ;;		_my_vprintf
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text6
  3967  004140                     __ptext6:
  3968                           	opt callstack 0
  3969  004140                     _precI:
  3970                           	opt callstack 26
  3971  004140                     
  3972                           ;src/print/format.c: 324:     int i, j, k;;src/print/format.c: 325:     int len = strlen
      +                          (str);
  3973  004140  C008  F004         	movff	precI@str,strlen@s
  3974  004144  C009  F005         	movff	precI@str+1,strlen@s+1
  3975  004148  EC44  F028         	call	_strlen	;wreg free
  3976  00414C  C004  F012         	movff	?_strlen,precI@len
  3977  004150  C005  F013         	movff	?_strlen+1,precI@len+1
  3978  004154                     
  3979                           ;src/print/format.c: 327:     if (*precision == -1)
  3980  004154  C00A  FFD9         	movff	precI@precision,fsr2l
  3981  004158  C00B  FFDA         	movff	precI@precision+1,fsr2h
  3982  00415C  28DE               	incf	postinc2,w,c
  3983  00415E  E106               	bnz	u8851
  3984  004160  28DE               	incf	postinc2,w,c
  3985  004162  A4D8               	btfss	status,2,c
  3986  004164  EFB6  F020         	goto	u8851
  3987  004168  EFB8  F020         	goto	u8850
  3988  00416C                     u8851:
  3989  00416C  EFC2  F020         	goto	l7284
  3990  004170                     u8850:
  3991  004170                     
  3992                           ;src/print/format.c: 328:         (*precision) = 1;
  3993  004170  C00A  FFD9         	movff	precI@precision,fsr2l
  3994  004174  C00B  FFDA         	movff	precI@precision+1,fsr2h
  3995  004178  0E01               	movlw	1
  3996  00417A  6EDE               	movwf	postinc2,c
  3997  00417C  0E00               	movlw	0
  3998  00417E  6EDD               	movwf	postdec2,c
  3999  004180  EFC5  F020         	goto	l7286
  4000  004184                     l7284:
  4001                           
  4002                           ;src/print/format.c: 330:         precInt = 1;
  4003  004184  0E01               	movlw	1
  4004  004186  0100               	movlb	0	; () banked
  4005  004188  6FC5               	movwf	_precInt& (0+255),b
  4006  00418A                     l7286:
  4007                           
  4008                           ;src/print/format.c: 332:     j = (*precision) - len;
  4009  00418A  C00A  FFD9         	movff	precI@precision,fsr2l
  4010  00418E  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4011  004192  CFDE F00C          	movff	postinc2,??_precI
  4012  004196  CFDD F00D          	movff	postdec2,??_precI+1
  4013  00419A  5012               	movf	precI@len^0,w,c
  4014  00419C  5C0C               	subwf	??_precI^0,w,c
  4015  00419E  6E10               	movwf	precI@j^0,c
  4016  0041A0  5013               	movf	(precI@len+1)^0,w,c
  4017  0041A2  580D               	subwfb	(??_precI+1)^0,w,c
  4018  0041A4  6E11               	movwf	(precI@j+1)^0,c
  4019  0041A6                     
  4020                           ;src/print/format.c: 333:     k = len;
  4021  0041A6  C012  F00E         	movff	precI@len,precI@k
  4022  0041AA  C013  F00F         	movff	precI@len+1,precI@k+1
  4023  0041AE                     
  4024                           ;src/print/format.c: 334:     if(j > 0) {
  4025  0041AE  BE11               	btfsc	(precI@j+1)^0,7,c
  4026  0041B0  EFE2  F020         	goto	u8861
  4027  0041B4  5011               	movf	(precI@j+1)^0,w,c
  4028  0041B6  E108               	bnz	u8860
  4029  0041B8  0410               	decf	precI@j^0,w,c
  4030  0041BA  A0D8               	btfss	status,0,c
  4031  0041BC  EFE2  F020         	goto	u8861
  4032  0041C0  EFE4  F020         	goto	u8860
  4033  0041C4                     u8861:
  4034  0041C4  EF2A  F021         	goto	l522
  4035  0041C8                     u8860:
  4036  0041C8                     
  4037                           ;src/print/format.c: 335:         for(i = (*precision)-1; i >= 0; i--) {
  4038  0041C8  C00A  FFD9         	movff	precI@precision,fsr2l
  4039  0041CC  C00B  FFDA         	movff	precI@precision+1,fsr2h
  4040  0041D0  CFDE F00C          	movff	postinc2,??_precI
  4041  0041D4  CFDD F00D          	movff	postdec2,??_precI+1
  4042  0041D8  0EFF               	movlw	255
  4043  0041DA  240C               	addwf	??_precI^0,w,c
  4044  0041DC  6E14               	movwf	precI@i^0,c
  4045  0041DE  0EFF               	movlw	255
  4046  0041E0  200D               	addwfc	(??_precI+1)^0,w,c
  4047  0041E2  6E15               	movwf	(precI@i+1)^0,c
  4048  0041E4                     l7294:
  4049  0041E4  BE15               	btfsc	(precI@i+1)^0,7,c
  4050  0041E6  EFF9  F020         	goto	u8870
  4051  0041EA  EFF7  F020         	goto	u8871
  4052  0041EE                     u8871:
  4053  0041EE  EFFB  F020         	goto	l7298
  4054  0041F2                     u8870:
  4055  0041F2  EF2A  F021         	goto	l522
  4056  0041F6                     l7298:
  4057                           
  4058                           ;src/print/format.c: 336:             k--;
  4059  0041F6  060E               	decf	precI@k^0,f,c
  4060  0041F8  A0D8               	btfss	status,0,c
  4061  0041FA  060F               	decf	(precI@k+1)^0,f,c
  4062  0041FC                     
  4063                           ;src/print/format.c: 337:             if (i>=j)
  4064  0041FC  5010               	movf	precI@j^0,w,c
  4065  0041FE  5C14               	subwf	precI@i^0,w,c
  4066  004200  5015               	movf	(precI@i+1)^0,w,c
  4067  004202  0A80               	xorlw	128
  4068  004204  6E0C               	movwf	??_precI^0,c
  4069  004206  5011               	movf	(precI@j+1)^0,w,c
  4070  004208  0A80               	xorlw	128
  4071  00420A  580C               	subwfb	??_precI^0,w,c
  4072  00420C  A0D8               	btfss	status,0,c
  4073  00420E  EF0B  F021         	goto	u8881
  4074  004212  EF0D  F021         	goto	u8880
  4075  004216                     u8881:
  4076  004216  EF1D  F021         	goto	l7304
  4077  00421A                     u8880:
  4078  00421A                     
  4079                           ;src/print/format.c: 338:                 str[i] = str[k];
  4080  00421A  500E               	movf	precI@k^0,w,c
  4081  00421C  2408               	addwf	precI@str^0,w,c
  4082  00421E  6ED9               	movwf	fsr2l,c
  4083  004220  500F               	movf	(precI@k+1)^0,w,c
  4084  004222  2009               	addwfc	(precI@str+1)^0,w,c
  4085  004224  6EDA               	movwf	fsr2h,c
  4086  004226  5014               	movf	precI@i^0,w,c
  4087  004228  2408               	addwf	precI@str^0,w,c
  4088  00422A  6EE1               	movwf	fsr1l,c
  4089  00422C  5015               	movf	(precI@i+1)^0,w,c
  4090  00422E  2009               	addwfc	(precI@str+1)^0,w,c
  4091  004230  6EE2               	movwf	fsr1h,c
  4092  004232  CFDF FFE7          	movff	indf2,indf1
  4093  004236  EF25  F021         	goto	l7306
  4094  00423A                     l7304:
  4095                           
  4096                           ;src/print/format.c: 340:                 str[i] ='0';
  4097  00423A  5014               	movf	precI@i^0,w,c
  4098  00423C  2408               	addwf	precI@str^0,w,c
  4099  00423E  6ED9               	movwf	fsr2l,c
  4100  004240  5015               	movf	(precI@i+1)^0,w,c
  4101  004242  2009               	addwfc	(precI@str+1)^0,w,c
  4102  004244  6EDA               	movwf	fsr2h,c
  4103  004246  0E30               	movlw	48
  4104  004248  6EDF               	movwf	indf2,c
  4105  00424A                     l7306:
  4106                           
  4107                           ;src/print/format.c: 341:         }
  4108  00424A  0614               	decf	precI@i^0,f,c
  4109  00424C  A0D8               	btfss	status,0,c
  4110  00424E  0615               	decf	(precI@i+1)^0,f,c
  4111  004250  EFF2  F020         	goto	l7294
  4112  004254                     l522:
  4113  004254  0012               	return		;funcret
  4114  004256                     __end_of_precI:
  4115                           	opt callstack 0
  4116                           
  4117 ;; *************** function _precG *****************
  4118 ;; Defined at:
  4119 ;;		line 239 in file "src/print/format.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  str             2   30[COMRAM] PTR unsigned char 
  4122 ;;		 -> my_vprintf@buffer(64), 
  4123 ;;  precision       2   32[COMRAM] PTR int 
  4124 ;;		 -> my_vprintf@prec(2), 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  i               2   51[COMRAM] int 
  4127 ;;  k               2   49[COMRAM] int 
  4128 ;;  j               2   47[COMRAM] int 
  4129 ;;  len             2   45[COMRAM] int 
  4130 ;;  posE            2   43[COMRAM] int 
  4131 ;;  digS            2   41[COMRAM] int 
  4132 ;;  f               2   39[COMRAM] int 
  4133 ;;  p               2   37[COMRAM] int 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4143 ;;      Params:         4       0       0       0       0       0       0       0       0
  4144 ;;      Locals:        16       0       0       0       0       0       0       0       0
  4145 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4146 ;;      Totals:        23       0       0       0       0       0       0       0       0
  4147 ;;Total ram usage:       23 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    5
  4150 ;; This function calls:
  4151 ;;		_posc
  4152 ;;		_roundStr
  4153 ;;		_strlen
  4154 ;; This function is called by:
  4155 ;;		_my_vprintf
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text7
  4160  00140A                     __ptext7:
  4161                           	opt callstack 0
  4162  00140A                     _precG:
  4163                           	opt callstack 24
  4164  00140A                     
  4165                           ;src/print/format.c: 240:     int i, j, k;;src/print/format.c: 241:     int len = strlen
      +                          (str);
  4166  00140A  C01F  F004         	movff	precG@str,strlen@s
  4167  00140E  C020  F005         	movff	precG@str+1,strlen@s+1
  4168  001412  EC44  F028         	call	_strlen	;wreg free
  4169  001416  C004  F02E         	movff	?_strlen,precG@len
  4170  00141A  C005  F02F         	movff	?_strlen+1,precG@len+1
  4171                           
  4172                           ;src/print/format.c: 242:     int posE = posc(str,'e');
  4173  00141E  C01F  F008         	movff	precG@str,posc@str
  4174  001422  C020  F009         	movff	precG@str+1,posc@str+1
  4175  001426  0E65               	movlw	101
  4176  001428  6E0A               	movwf	posc@c^0,c
  4177  00142A  ECE7  F025         	call	_posc	;wreg free
  4178  00142E  C008  F02C         	movff	?_posc,precG@posE
  4179  001432  C009  F02D         	movff	?_posc+1,precG@posE+1
  4180                           
  4181                           ;src/print/format.c: 243:     int p = posc(str,'.');
  4182  001436  C01F  F008         	movff	precG@str,posc@str
  4183  00143A  C020  F009         	movff	precG@str+1,posc@str+1
  4184  00143E  0E2E               	movlw	46
  4185  001440  6E0A               	movwf	posc@c^0,c
  4186  001442  ECE7  F025         	call	_posc	;wreg free
  4187  001446  C008  F026         	movff	?_posc,precG@p
  4188  00144A  C009  F027         	movff	?_posc+1,precG@p+1
  4189  00144E                     
  4190                           ;src/print/format.c: 244:     int f = 0;
  4191  00144E  0E00               	movlw	0
  4192  001450  6E29               	movwf	(precG@f+1)^0,c
  4193  001452  0E00               	movlw	0
  4194  001454  6E28               	movwf	precG@f^0,c
  4195  001456                     
  4196                           ;src/print/format.c: 245:     int digS = 0;
  4197  001456  0E00               	movlw	0
  4198  001458  6E2B               	movwf	(precG@digS+1)^0,c
  4199  00145A  0E00               	movlw	0
  4200  00145C  6E2A               	movwf	precG@digS^0,c
  4201  00145E                     
  4202                           ;src/print/format.c: 247:     if ((*precision) == - 1)
  4203  00145E  C021  FFD9         	movff	precG@precision,fsr2l
  4204  001462  C022  FFDA         	movff	precG@precision+1,fsr2h
  4205  001466  28DE               	incf	postinc2,w,c
  4206  001468  E106               	bnz	u8551
  4207  00146A  28DE               	incf	postinc2,w,c
  4208  00146C  A4D8               	btfss	status,2,c
  4209  00146E  EF3B  F00A         	goto	u8551
  4210  001472  EF3D  F00A         	goto	u8550
  4211  001476                     u8551:
  4212  001476  EF45  F00A         	goto	l7162
  4213  00147A                     u8550:
  4214  00147A                     
  4215                           ;src/print/format.c: 248:         (*precision) = 6;
  4216  00147A  C021  FFD9         	movff	precG@precision,fsr2l
  4217  00147E  C022  FFDA         	movff	precG@precision+1,fsr2h
  4218  001482  0E06               	movlw	6
  4219  001484  6EDE               	movwf	postinc2,c
  4220  001486  0E00               	movlw	0
  4221  001488  6EDD               	movwf	postdec2,c
  4222  00148A                     l7162:
  4223                           
  4224                           ;src/print/format.c: 250:     k = (posE > 0)? posE : len;
  4225  00148A  BE2D               	btfsc	(precG@posE+1)^0,7,c
  4226  00148C  EF52  F00A         	goto	u8560
  4227  001490  502D               	movf	(precG@posE+1)^0,w,c
  4228  001492  E106               	bnz	u8561
  4229  001494  042C               	decf	precG@posE^0,w,c
  4230  001496  B0D8               	btfsc	status,0,c
  4231  001498  EF50  F00A         	goto	u8561
  4232  00149C  EF52  F00A         	goto	u8560
  4233  0014A0                     u8561:
  4234  0014A0  EF58  F00A         	goto	l466
  4235  0014A4                     u8560:
  4236  0014A4  C02E  F032         	movff	precG@len,precG@k
  4237  0014A8  C02F  F033         	movff	precG@len+1,precG@k+1
  4238  0014AC  EF5C  F00A         	goto	l7166
  4239  0014B0                     l466:
  4240  0014B0  C02C  F032         	movff	precG@posE,precG@k
  4241  0014B4  C02D  F033         	movff	precG@posE+1,precG@k+1
  4242  0014B8                     l7166:
  4243                           
  4244                           ;src/print/format.c: 254:     for (i = 0; i <= len;i++) {
  4245  0014B8  0E00               	movlw	0
  4246  0014BA  6E35               	movwf	(precG@i+1)^0,c
  4247  0014BC  0E00               	movlw	0
  4248  0014BE  6E34               	movwf	precG@i^0,c
  4249  0014C0  EFBA  F00A         	goto	l7188
  4250  0014C4                     l7168:
  4251                           
  4252                           ;src/print/format.c: 255:         if (str[i] >= 48 && str[i] <= 57) {
  4253  0014C4  5034               	movf	precG@i^0,w,c
  4254  0014C6  241F               	addwf	precG@str^0,w,c
  4255  0014C8  6ED9               	movwf	fsr2l,c
  4256  0014CA  5035               	movf	(precG@i+1)^0,w,c
  4257  0014CC  2020               	addwfc	(precG@str+1)^0,w,c
  4258  0014CE  6EDA               	movwf	fsr2h,c
  4259  0014D0  0E2F               	movlw	47
  4260  0014D2  64DF               	cpfsgt	indf2,c
  4261  0014D4  EF6E  F00A         	goto	u8571
  4262  0014D8  EF70  F00A         	goto	u8570
  4263  0014DC                     u8571:
  4264  0014DC  EFA7  F00A         	goto	l7182
  4265  0014E0                     u8570:
  4266  0014E0  5034               	movf	precG@i^0,w,c
  4267  0014E2  241F               	addwf	precG@str^0,w,c
  4268  0014E4  6ED9               	movwf	fsr2l,c
  4269  0014E6  5035               	movf	(precG@i+1)^0,w,c
  4270  0014E8  2020               	addwfc	(precG@str+1)^0,w,c
  4271  0014EA  6EDA               	movwf	fsr2h,c
  4272  0014EC  0E3A               	movlw	58
  4273  0014EE  60DF               	cpfslt	indf2,c
  4274  0014F0  EF7C  F00A         	goto	u8581
  4275  0014F4  EF7E  F00A         	goto	u8580
  4276  0014F8                     u8581:
  4277  0014F8  EFA7  F00A         	goto	l7182
  4278  0014FC                     u8580:
  4279  0014FC                     
  4280                           ;src/print/format.c: 256:             if (!(str[i] == 48 && digS == 0)){
  4281  0014FC  5034               	movf	precG@i^0,w,c
  4282  0014FE  241F               	addwf	precG@str^0,w,c
  4283  001500  6ED9               	movwf	fsr2l,c
  4284  001502  5035               	movf	(precG@i+1)^0,w,c
  4285  001504  2020               	addwfc	(precG@str+1)^0,w,c
  4286  001506  6EDA               	movwf	fsr2h,c
  4287  001508  0E30               	movlw	48
  4288  00150A  18DE               	xorwf	postinc2,w,c
  4289  00150C  A4D8               	btfss	status,2,c
  4290  00150E  EF8B  F00A         	goto	u8591
  4291  001512  EF8D  F00A         	goto	u8590
  4292  001516                     u8591:
  4293  001516  EF96  F00A         	goto	l7176
  4294  00151A                     u8590:
  4295  00151A  502A               	movf	precG@digS^0,w,c
  4296  00151C  102B               	iorwf	(precG@digS+1)^0,w,c
  4297  00151E  B4D8               	btfsc	status,2,c
  4298  001520  EF94  F00A         	goto	u8601
  4299  001524  EF96  F00A         	goto	u8600
  4300  001528                     u8601:
  4301  001528  EFB8  F00A         	goto	l7186
  4302  00152C                     u8600:
  4303  00152C                     l7176:
  4304                           
  4305                           ;src/print/format.c: 257:                 digS++;
  4306  00152C  4A2A               	infsnz	precG@digS^0,f,c
  4307  00152E  2A2B               	incf	(precG@digS+1)^0,f,c
  4308  001530                     
  4309                           ;src/print/format.c: 258:                 if (digS == 1)
  4310  001530  042A               	decf	precG@digS^0,w,c
  4311  001532  102B               	iorwf	(precG@digS+1)^0,w,c
  4312  001534  A4D8               	btfss	status,2,c
  4313  001536  EF9F  F00A         	goto	u8611
  4314  00153A  EFA1  F00A         	goto	u8610
  4315  00153E                     u8611:
  4316  00153E  EFB8  F00A         	goto	l7186
  4317  001542                     u8610:
  4318  001542                     
  4319                           ;src/print/format.c: 259:                     f = i;
  4320  001542  C034  F028         	movff	precG@i,precG@f
  4321  001546  C035  F029         	movff	precG@i+1,precG@f+1
  4322  00154A  EFB8  F00A         	goto	l7186
  4323  00154E                     l7182:
  4324  00154E  5034               	movf	precG@i^0,w,c
  4325  001550  241F               	addwf	precG@str^0,w,c
  4326  001552  6ED9               	movwf	fsr2l,c
  4327  001554  5035               	movf	(precG@i+1)^0,w,c
  4328  001556  2020               	addwfc	(precG@str+1)^0,w,c
  4329  001558  6EDA               	movwf	fsr2h,c
  4330  00155A  0E65               	movlw	101
  4331  00155C  18DE               	xorwf	postinc2,w,c
  4332  00155E  A4D8               	btfss	status,2,c
  4333  001560  EFB4  F00A         	goto	u8621
  4334  001564  EFB6  F00A         	goto	u8620
  4335  001568                     u8621:
  4336  001568  EFB8  F00A         	goto	l7186
  4337  00156C                     u8620:
  4338  00156C  EFC9  F00A         	goto	l7190
  4339  001570                     l7186:
  4340                           
  4341                           ;src/print/format.c: 264:     }
  4342  001570  4A34               	infsnz	precG@i^0,f,c
  4343  001572  2A35               	incf	(precG@i+1)^0,f,c
  4344  001574                     l7188:
  4345  001574  5034               	movf	precG@i^0,w,c
  4346  001576  5C2E               	subwf	precG@len^0,w,c
  4347  001578  502F               	movf	(precG@len+1)^0,w,c
  4348  00157A  0A80               	xorlw	128
  4349  00157C  6E23               	movwf	??_precG^0,c
  4350  00157E  5035               	movf	(precG@i+1)^0,w,c
  4351  001580  0A80               	xorlw	128
  4352  001582  5823               	subwfb	??_precG^0,w,c
  4353  001584  B0D8               	btfsc	status,0,c
  4354  001586  EFC7  F00A         	goto	u8631
  4355  00158A  EFC9  F00A         	goto	u8630
  4356  00158E                     u8631:
  4357  00158E  EF62  F00A         	goto	l7168
  4358  001592                     u8630:
  4359  001592                     l7190:
  4360                           
  4361                           ;src/print/format.c: 265:     for (i = k-1; i >= 0;i--) {
  4362  001592  0EFF               	movlw	255
  4363  001594  2432               	addwf	precG@k^0,w,c
  4364  001596  6E34               	movwf	precG@i^0,c
  4365  001598  0EFF               	movlw	255
  4366  00159A  2033               	addwfc	(precG@k+1)^0,w,c
  4367  00159C  6E35               	movwf	(precG@i+1)^0,c
  4368  00159E  BE35               	btfsc	(precG@i+1)^0,7,c
  4369  0015A0  EFD6  F00A         	goto	u8640
  4370  0015A4  EFD4  F00A         	goto	u8641
  4371  0015A8                     u8641:
  4372  0015A8  EFD8  F00A         	goto	l7194
  4373  0015AC                     u8640:
  4374  0015AC  EF23  F00B         	goto	l7208
  4375  0015B0                     l7194:
  4376                           
  4377                           ;src/print/format.c: 266:         if (str[i] == 48)
  4378  0015B0  5034               	movf	precG@i^0,w,c
  4379  0015B2  241F               	addwf	precG@str^0,w,c
  4380  0015B4  6ED9               	movwf	fsr2l,c
  4381  0015B6  5035               	movf	(precG@i+1)^0,w,c
  4382  0015B8  2020               	addwfc	(precG@str+1)^0,w,c
  4383  0015BA  6EDA               	movwf	fsr2h,c
  4384  0015BC  0E30               	movlw	48
  4385  0015BE  18DE               	xorwf	postinc2,w,c
  4386  0015C0  A4D8               	btfss	status,2,c
  4387  0015C2  EFE5  F00A         	goto	u8651
  4388  0015C6  EFE7  F00A         	goto	u8650
  4389  0015CA                     u8651:
  4390  0015CA  EFEC  F00A         	goto	l7198
  4391  0015CE                     u8650:
  4392  0015CE                     
  4393                           ;src/print/format.c: 267:             digS--;
  4394  0015CE  062A               	decf	precG@digS^0,f,c
  4395  0015D0  A0D8               	btfss	status,0,c
  4396  0015D2  062B               	decf	(precG@digS+1)^0,f,c
  4397  0015D4  EF19  F00B         	goto	l7204
  4398  0015D8                     l7198:
  4399  0015D8  5034               	movf	precG@i^0,w,c
  4400  0015DA  241F               	addwf	precG@str^0,w,c
  4401  0015DC  6ED9               	movwf	fsr2l,c
  4402  0015DE  5035               	movf	(precG@i+1)^0,w,c
  4403  0015E0  2020               	addwfc	(precG@str+1)^0,w,c
  4404  0015E2  6EDA               	movwf	fsr2h,c
  4405  0015E4  0E30               	movlw	48
  4406  0015E6  64DF               	cpfsgt	indf2,c
  4407  0015E8  EFF8  F00A         	goto	u8661
  4408  0015EC  EFFA  F00A         	goto	u8660
  4409  0015F0                     u8661:
  4410  0015F0  EF08  F00B         	goto	l7202
  4411  0015F4                     u8660:
  4412  0015F4  5034               	movf	precG@i^0,w,c
  4413  0015F6  241F               	addwf	precG@str^0,w,c
  4414  0015F8  6ED9               	movwf	fsr2l,c
  4415  0015FA  5035               	movf	(precG@i+1)^0,w,c
  4416  0015FC  2020               	addwfc	(precG@str+1)^0,w,c
  4417  0015FE  6EDA               	movwf	fsr2h,c
  4418  001600  0E39               	movlw	57
  4419  001602  64DF               	cpfsgt	indf2,c
  4420  001604  EF06  F00B         	goto	u8671
  4421  001608  EF08  F00B         	goto	u8670
  4422  00160C                     u8671:
  4423  00160C  EF23  F00B         	goto	l7208
  4424  001610                     u8670:
  4425  001610                     l7202:
  4426  001610  5034               	movf	precG@i^0,w,c
  4427  001612  241F               	addwf	precG@str^0,w,c
  4428  001614  6ED9               	movwf	fsr2l,c
  4429  001616  5035               	movf	(precG@i+1)^0,w,c
  4430  001618  2020               	addwfc	(precG@str+1)^0,w,c
  4431  00161A  6EDA               	movwf	fsr2h,c
  4432  00161C  0E2E               	movlw	46
  4433  00161E  18DE               	xorwf	postinc2,w,c
  4434  001620  A4D8               	btfss	status,2,c
  4435  001622  EF15  F00B         	goto	u8681
  4436  001626  EF17  F00B         	goto	u8680
  4437  00162A                     u8681:
  4438  00162A  EF19  F00B         	goto	l7204
  4439  00162E                     u8680:
  4440  00162E  EF23  F00B         	goto	l7208
  4441  001632                     l7204:
  4442                           
  4443                           ;src/print/format.c: 270:     }
  4444  001632  0634               	decf	precG@i^0,f,c
  4445  001634  A0D8               	btfss	status,0,c
  4446  001636  0635               	decf	(precG@i+1)^0,f,c
  4447  001638  BE35               	btfsc	(precG@i+1)^0,7,c
  4448  00163A  EF23  F00B         	goto	u8690
  4449  00163E  EF21  F00B         	goto	u8691
  4450  001642                     u8691:
  4451  001642  EFD8  F00A         	goto	l7194
  4452  001646                     u8690:
  4453  001646                     l7208:
  4454                           
  4455                           ;src/print/format.c: 272:     if (digS > (*precision)) {
  4456  001646  C021  FFD9         	movff	precG@precision,fsr2l
  4457  00164A  C022  FFDA         	movff	precG@precision+1,fsr2h
  4458  00164E  502A               	movf	precG@digS^0,w,c
  4459  001650  5CDE               	subwf	postinc2,w,c
  4460  001652  50DE               	movf	postinc2,w,c
  4461  001654  0A80               	xorlw	128
  4462  001656  6E25               	movwf	(??_precG+2)^0,c
  4463  001658  502B               	movf	(precG@digS+1)^0,w,c
  4464  00165A  0A80               	xorlw	128
  4465  00165C  5825               	subwfb	(??_precG+2)^0,w,c
  4466  00165E  B0D8               	btfsc	status,0,c
  4467  001660  EF34  F00B         	goto	u8701
  4468  001664  EF36  F00B         	goto	u8700
  4469  001668                     u8701:
  4470  001668  EFB0  F00C         	goto	l512
  4471  00166C                     u8700:
  4472  00166C                     
  4473                           ;src/print/format.c: 273:         i = f + (*precision);
  4474  00166C  C021  FFD9         	movff	precG@precision,fsr2l
  4475  001670  C022  FFDA         	movff	precG@precision+1,fsr2h
  4476  001674  CFDE F023          	movff	postinc2,??_precG
  4477  001678  CFDD F024          	movff	postdec2,??_precG+1
  4478  00167C  5028               	movf	precG@f^0,w,c
  4479  00167E  2423               	addwf	??_precG^0,w,c
  4480  001680  6E34               	movwf	precG@i^0,c
  4481  001682  5029               	movf	(precG@f+1)^0,w,c
  4482  001684  2024               	addwfc	(??_precG+1)^0,w,c
  4483  001686  6E35               	movwf	(precG@i+1)^0,c
  4484  001688                     
  4485                           ;src/print/format.c: 275:         if (f < p && i >= p)
  4486  001688  5026               	movf	precG@p^0,w,c
  4487  00168A  5C28               	subwf	precG@f^0,w,c
  4488  00168C  5029               	movf	(precG@f+1)^0,w,c
  4489  00168E  0A80               	xorlw	128
  4490  001690  6E23               	movwf	??_precG^0,c
  4491  001692  5027               	movf	(precG@p+1)^0,w,c
  4492  001694  0A80               	xorlw	128
  4493  001696  5823               	subwfb	??_precG^0,w,c
  4494  001698  B0D8               	btfsc	status,0,c
  4495  00169A  EF51  F00B         	goto	u8711
  4496  00169E  EF53  F00B         	goto	u8710
  4497  0016A2                     u8711:
  4498  0016A2  EF64  F00B         	goto	l7218
  4499  0016A6                     u8710:
  4500  0016A6  5026               	movf	precG@p^0,w,c
  4501  0016A8  5C34               	subwf	precG@i^0,w,c
  4502  0016AA  5035               	movf	(precG@i+1)^0,w,c
  4503  0016AC  0A80               	xorlw	128
  4504  0016AE  6E23               	movwf	??_precG^0,c
  4505  0016B0  5027               	movf	(precG@p+1)^0,w,c
  4506  0016B2  0A80               	xorlw	128
  4507  0016B4  5823               	subwfb	??_precG^0,w,c
  4508  0016B6  A0D8               	btfss	status,0,c
  4509  0016B8  EF60  F00B         	goto	u8721
  4510  0016BC  EF62  F00B         	goto	u8720
  4511  0016C0                     u8721:
  4512  0016C0  EF64  F00B         	goto	l7218
  4513  0016C4                     u8720:
  4514  0016C4                     
  4515                           ;src/print/format.c: 276:             i++;
  4516  0016C4  4A34               	infsnz	precG@i^0,f,c
  4517  0016C6  2A35               	incf	(precG@i+1)^0,f,c
  4518  0016C8                     l7218:
  4519                           
  4520                           ;src/print/format.c: 278:         j = k - i;
  4521  0016C8  5034               	movf	precG@i^0,w,c
  4522  0016CA  5C32               	subwf	precG@k^0,w,c
  4523  0016CC  6E30               	movwf	precG@j^0,c
  4524  0016CE  5035               	movf	(precG@i+1)^0,w,c
  4525  0016D0  5833               	subwfb	(precG@k+1)^0,w,c
  4526  0016D2  6E31               	movwf	(precG@j+1)^0,c
  4527  0016D4                     
  4528                           ;src/print/format.c: 284:         if (j > 0) {
  4529  0016D4  BE31               	btfsc	(precG@j+1)^0,7,c
  4530  0016D6  EF75  F00B         	goto	u8731
  4531  0016DA  5031               	movf	(precG@j+1)^0,w,c
  4532  0016DC  E108               	bnz	u8730
  4533  0016DE  0430               	decf	precG@j^0,w,c
  4534  0016E0  A0D8               	btfss	status,0,c
  4535  0016E2  EF75  F00B         	goto	u8731
  4536  0016E6  EF77  F00B         	goto	u8730
  4537  0016EA                     u8731:
  4538  0016EA  EF02  F00C         	goto	l7246
  4539  0016EE                     u8730:
  4540  0016EE                     
  4541                           ;src/print/format.c: 286:             if (roundStr(str, posE, i) == 1) {
  4542  0016EE  C01F  F00E         	movff	precG@str,roundStr@decnum
  4543  0016F2  C020  F00F         	movff	precG@str+1,roundStr@decnum+1
  4544  0016F6  C02C  F010         	movff	precG@posE,roundStr@e
  4545  0016FA  C02D  F011         	movff	precG@posE+1,roundStr@e+1
  4546  0016FE  C034  F012         	movff	precG@i,roundStr@prn
  4547  001702  C035  F013         	movff	precG@i+1,roundStr@prn+1
  4548  001706  EC8C  F014         	call	_roundStr	;wreg free
  4549  00170A  040E               	decf	?_roundStr^0,w,c
  4550  00170C  100F               	iorwf	(?_roundStr+1)^0,w,c
  4551  00170E  A4D8               	btfss	status,2,c
  4552  001710  EF8C  F00B         	goto	u8741
  4553  001714  EF8E  F00B         	goto	u8740
  4554  001718                     u8741:
  4555  001718  EFD7  F00B         	goto	l7238
  4556  00171C                     u8740:
  4557  00171C                     
  4558                           ;src/print/format.c: 287:                 for (k = 0; k <= strlen(str);i++) {
  4559  00171C  0E00               	movlw	0
  4560  00171E  6E33               	movwf	(precG@k+1)^0,c
  4561  001720  0E00               	movlw	0
  4562  001722  6E32               	movwf	precG@k^0,c
  4563  001724  EFB8  F00B         	goto	l7234
  4564  001728                     l7226:
  4565                           
  4566                           ;src/print/format.c: 288:                     if (str[k] >= 49 && str[k] <= 57) {
  4567  001728  5032               	movf	precG@k^0,w,c
  4568  00172A  241F               	addwf	precG@str^0,w,c
  4569  00172C  6ED9               	movwf	fsr2l,c
  4570  00172E  5033               	movf	(precG@k+1)^0,w,c
  4571  001730  2020               	addwfc	(precG@str+1)^0,w,c
  4572  001732  6EDA               	movwf	fsr2h,c
  4573  001734  0E30               	movlw	48
  4574  001736  64DF               	cpfsgt	indf2,c
  4575  001738  EFA0  F00B         	goto	u8751
  4576  00173C  EFA2  F00B         	goto	u8750
  4577  001740                     u8751:
  4578  001740  EFB6  F00B         	goto	l7232
  4579  001744                     u8750:
  4580  001744  5032               	movf	precG@k^0,w,c
  4581  001746  241F               	addwf	precG@str^0,w,c
  4582  001748  6ED9               	movwf	fsr2l,c
  4583  00174A  5033               	movf	(precG@k+1)^0,w,c
  4584  00174C  2020               	addwfc	(precG@str+1)^0,w,c
  4585  00174E  6EDA               	movwf	fsr2h,c
  4586  001750  0E3A               	movlw	58
  4587  001752  60DF               	cpfslt	indf2,c
  4588  001754  EFAE  F00B         	goto	u8761
  4589  001758  EFB0  F00B         	goto	u8760
  4590  00175C                     u8761:
  4591  00175C  EFB6  F00B         	goto	l7232
  4592  001760                     u8760:
  4593  001760                     
  4594                           ;src/print/format.c: 289:                             f = k;
  4595  001760  C032  F028         	movff	precG@k,precG@f
  4596  001764  C033  F029         	movff	precG@k+1,precG@f+1
  4597                           
  4598                           ;src/print/format.c: 290:                             break;
  4599  001768  EFC9  F00B         	goto	l7236
  4600  00176C                     l7232:
  4601                           
  4602                           ;src/print/format.c: 292:                 }
  4603  00176C  4A34               	infsnz	precG@i^0,f,c
  4604  00176E  2A35               	incf	(precG@i+1)^0,f,c
  4605  001770                     l7234:
  4606  001770  C01F  F004         	movff	precG@str,strlen@s
  4607  001774  C020  F005         	movff	precG@str+1,strlen@s+1
  4608  001778  EC44  F028         	call	_strlen	;wreg free
  4609  00177C  5032               	movf	precG@k^0,w,c
  4610  00177E  5C04               	subwf	?_strlen^0,w,c
  4611  001780  5033               	movf	(precG@k+1)^0,w,c
  4612  001782  5805               	subwfb	(?_strlen+1)^0,w,c
  4613  001784  B0D8               	btfsc	status,0,c
  4614  001786  EFC7  F00B         	goto	u8771
  4615  00178A  EFC9  F00B         	goto	u8770
  4616  00178E                     u8771:
  4617  00178E  EF94  F00B         	goto	l7226
  4618  001792                     u8770:
  4619  001792                     l7236:
  4620                           
  4621                           ;src/print/format.c: 293:                 i = f + (*precision);
  4622  001792  C021  FFD9         	movff	precG@precision,fsr2l
  4623  001796  C022  FFDA         	movff	precG@precision+1,fsr2h
  4624  00179A  CFDE F023          	movff	postinc2,??_precG
  4625  00179E  CFDD F024          	movff	postdec2,??_precG+1
  4626  0017A2  5028               	movf	precG@f^0,w,c
  4627  0017A4  2423               	addwf	??_precG^0,w,c
  4628  0017A6  6E34               	movwf	precG@i^0,c
  4629  0017A8  5029               	movf	(precG@f+1)^0,w,c
  4630  0017AA  2024               	addwfc	(??_precG+1)^0,w,c
  4631  0017AC  6E35               	movwf	(precG@i+1)^0,c
  4632  0017AE                     l7238:
  4633                           
  4634                           ;src/print/format.c: 295:             for (k = i; k < len; k++)
  4635  0017AE  C034  F032         	movff	precG@i,precG@k
  4636  0017B2  C035  F033         	movff	precG@i+1,precG@k+1
  4637  0017B6  EFF3  F00B         	goto	l7244
  4638  0017BA                     l7240:
  4639                           
  4640                           ;src/print/format.c: 296:                 str[k] = str[k+j];
  4641  0017BA  5032               	movf	precG@k^0,w,c
  4642  0017BC  241F               	addwf	precG@str^0,w,c
  4643  0017BE  6E23               	movwf	??_precG^0,c
  4644  0017C0  5033               	movf	(precG@k+1)^0,w,c
  4645  0017C2  2020               	addwfc	(precG@str+1)^0,w,c
  4646  0017C4  6E24               	movwf	(??_precG+1)^0,c
  4647  0017C6  5030               	movf	precG@j^0,w,c
  4648  0017C8  2423               	addwf	??_precG^0,w,c
  4649  0017CA  6ED9               	movwf	fsr2l,c
  4650  0017CC  5031               	movf	(precG@j+1)^0,w,c
  4651  0017CE  2024               	addwfc	(??_precG+1)^0,w,c
  4652  0017D0  6EDA               	movwf	fsr2h,c
  4653  0017D2  5032               	movf	precG@k^0,w,c
  4654  0017D4  241F               	addwf	precG@str^0,w,c
  4655  0017D6  6EE1               	movwf	fsr1l,c
  4656  0017D8  5033               	movf	(precG@k+1)^0,w,c
  4657  0017DA  2020               	addwfc	(precG@str+1)^0,w,c
  4658  0017DC  6EE2               	movwf	fsr1h,c
  4659  0017DE  CFDF FFE7          	movff	indf2,indf1
  4660  0017E2  4A32               	infsnz	precG@k^0,f,c
  4661  0017E4  2A33               	incf	(precG@k+1)^0,f,c
  4662  0017E6                     l7244:
  4663  0017E6  502E               	movf	precG@len^0,w,c
  4664  0017E8  5C32               	subwf	precG@k^0,w,c
  4665  0017EA  5033               	movf	(precG@k+1)^0,w,c
  4666  0017EC  0A80               	xorlw	128
  4667  0017EE  6E23               	movwf	??_precG^0,c
  4668  0017F0  502F               	movf	(precG@len+1)^0,w,c
  4669  0017F2  0A80               	xorlw	128
  4670  0017F4  5823               	subwfb	??_precG^0,w,c
  4671  0017F6  A0D8               	btfss	status,0,c
  4672  0017F8  EF00  F00C         	goto	u8781
  4673  0017FC  EF02  F00C         	goto	u8780
  4674  001800                     u8781:
  4675  001800  EFDD  F00B         	goto	l7240
  4676  001804                     u8780:
  4677  001804                     l7246:
  4678                           
  4679                           ;src/print/format.c: 300:         if (numeral == 0) {
  4680  001804  503A               	movf	_numeral^0,w,c
  4681  001806  A4D8               	btfss	status,2,c
  4682  001808  EF08  F00C         	goto	u8791
  4683  00180C  EF0A  F00C         	goto	u8790
  4684  001810                     u8791:
  4685  001810  EFB0  F00C         	goto	l512
  4686  001814                     u8790:
  4687  001814                     
  4688                           ;src/print/format.c: 301:             p = posc(str,'.');
  4689  001814  C01F  F008         	movff	precG@str,posc@str
  4690  001818  C020  F009         	movff	precG@str+1,posc@str+1
  4691  00181C  0E2E               	movlw	46
  4692  00181E  6E0A               	movwf	posc@c^0,c
  4693  001820  ECE7  F025         	call	_posc	;wreg free
  4694  001824  C008  F026         	movff	?_posc,precG@p
  4695  001828  C009  F027         	movff	?_posc+1,precG@p+1
  4696                           
  4697                           ;src/print/format.c: 302:             len = strlen(str);
  4698  00182C  C01F  F004         	movff	precG@str,strlen@s
  4699  001830  C020  F005         	movff	precG@str+1,strlen@s+1
  4700  001834  EC44  F028         	call	_strlen	;wreg free
  4701  001838  C004  F02E         	movff	?_strlen,precG@len
  4702  00183C  C005  F02F         	movff	?_strlen+1,precG@len+1
  4703                           
  4704                           ;src/print/format.c: 303:             posE = posc(str,'e');
  4705  001840  C01F  F008         	movff	precG@str,posc@str
  4706  001844  C020  F009         	movff	precG@str+1,posc@str+1
  4707  001848  0E65               	movlw	101
  4708  00184A  6E0A               	movwf	posc@c^0,c
  4709  00184C  ECE7  F025         	call	_posc	;wreg free
  4710  001850  C008  F02C         	movff	?_posc,precG@posE
  4711  001854  C009  F02D         	movff	?_posc+1,precG@posE+1
  4712  001858                     
  4713                           ;src/print/format.c: 304:             k = (posE > 0)? posE : len;
  4714  001858  BE2D               	btfsc	(precG@posE+1)^0,7,c
  4715  00185A  EF39  F00C         	goto	u8800
  4716  00185E  502D               	movf	(precG@posE+1)^0,w,c
  4717  001860  E106               	bnz	u8801
  4718  001862  042C               	decf	precG@posE^0,w,c
  4719  001864  B0D8               	btfsc	status,0,c
  4720  001866  EF37  F00C         	goto	u8801
  4721  00186A  EF39  F00C         	goto	u8800
  4722  00186E                     u8801:
  4723  00186E  EF3F  F00C         	goto	l501
  4724  001872                     u8800:
  4725  001872  C02E  F032         	movff	precG@len,precG@k
  4726  001876  C02F  F033         	movff	precG@len+1,precG@k+1
  4727  00187A  EF43  F00C         	goto	l7254
  4728  00187E                     l501:
  4729  00187E  C02C  F032         	movff	precG@posE,precG@k
  4730  001882  C02D  F033         	movff	precG@posE+1,precG@k+1
  4731  001886                     l7254:
  4732                           
  4733                           ;src/print/format.c: 306:             for (j = k-1; j >= p; j--){
  4734  001886  0EFF               	movlw	255
  4735  001888  2432               	addwf	precG@k^0,w,c
  4736  00188A  6E30               	movwf	precG@j^0,c
  4737  00188C  0EFF               	movlw	255
  4738  00188E  2033               	addwfc	(precG@k+1)^0,w,c
  4739  001890  6E31               	movwf	(precG@j+1)^0,c
  4740  001892  EFA1  F00C         	goto	l7276
  4741  001896                     l7256:
  4742                           
  4743                           ;src/print/format.c: 307:                 if (str[j] >= 49 && str[j] <= 57)
  4744  001896  5030               	movf	precG@j^0,w,c
  4745  001898  241F               	addwf	precG@str^0,w,c
  4746  00189A  6ED9               	movwf	fsr2l,c
  4747  00189C  5031               	movf	(precG@j+1)^0,w,c
  4748  00189E  2020               	addwfc	(precG@str+1)^0,w,c
  4749  0018A0  6EDA               	movwf	fsr2h,c
  4750  0018A2  0E30               	movlw	48
  4751  0018A4  64DF               	cpfsgt	indf2,c
  4752  0018A6  EF57  F00C         	goto	u8811
  4753  0018AA  EF59  F00C         	goto	u8810
  4754  0018AE                     u8811:
  4755  0018AE  EF69  F00C         	goto	l7264
  4756  0018B2                     u8810:
  4757  0018B2  5030               	movf	precG@j^0,w,c
  4758  0018B4  241F               	addwf	precG@str^0,w,c
  4759  0018B6  6ED9               	movwf	fsr2l,c
  4760  0018B8  5031               	movf	(precG@j+1)^0,w,c
  4761  0018BA  2020               	addwfc	(precG@str+1)^0,w,c
  4762  0018BC  6EDA               	movwf	fsr2h,c
  4763  0018BE  0E3A               	movlw	58
  4764  0018C0  60DF               	cpfslt	indf2,c
  4765  0018C2  EF65  F00C         	goto	u8821
  4766  0018C6  EF67  F00C         	goto	u8820
  4767  0018CA                     u8821:
  4768  0018CA  EF69  F00C         	goto	l7264
  4769  0018CE                     u8820:
  4770  0018CE  EFB0  F00C         	goto	l512
  4771  0018D2                     l7264:
  4772                           
  4773                           ;src/print/format.c: 310:                     len = strlen(str);
  4774  0018D2  C01F  F004         	movff	precG@str,strlen@s
  4775  0018D6  C020  F005         	movff	precG@str+1,strlen@s+1
  4776  0018DA  EC44  F028         	call	_strlen	;wreg free
  4777  0018DE  C004  F02E         	movff	?_strlen,precG@len
  4778  0018E2  C005  F02F         	movff	?_strlen+1,precG@len+1
  4779  0018E6                     
  4780                           ;src/print/format.c: 311:                     for(i = j; i <= len; i++) {
  4781  0018E6  C030  F034         	movff	precG@j,precG@i
  4782  0018EA  C031  F035         	movff	precG@j+1,precG@i+1
  4783  0018EE  EF8F  F00C         	goto	l7272
  4784  0018F2                     l7268:
  4785                           
  4786                           ;src/print/format.c: 312:                         str[i] = str[i+1];
  4787  0018F2  5034               	movf	precG@i^0,w,c
  4788  0018F4  241F               	addwf	precG@str^0,w,c
  4789  0018F6  6E23               	movwf	??_precG^0,c
  4790  0018F8  5035               	movf	(precG@i+1)^0,w,c
  4791  0018FA  2020               	addwfc	(precG@str+1)^0,w,c
  4792  0018FC  6E24               	movwf	(??_precG+1)^0,c
  4793  0018FE  0E01               	movlw	1
  4794  001900  2423               	addwf	??_precG^0,w,c
  4795  001902  6ED9               	movwf	fsr2l,c
  4796  001904  0E00               	movlw	0
  4797  001906  2024               	addwfc	(??_precG+1)^0,w,c
  4798  001908  6EDA               	movwf	fsr2h,c
  4799  00190A  5034               	movf	precG@i^0,w,c
  4800  00190C  241F               	addwf	precG@str^0,w,c
  4801  00190E  6EE1               	movwf	fsr1l,c
  4802  001910  5035               	movf	(precG@i+1)^0,w,c
  4803  001912  2020               	addwfc	(precG@str+1)^0,w,c
  4804  001914  6EE2               	movwf	fsr1h,c
  4805  001916  CFDF FFE7          	movff	indf2,indf1
  4806  00191A                     
  4807                           ;src/print/format.c: 313:                     }
  4808  00191A  4A34               	infsnz	precG@i^0,f,c
  4809  00191C  2A35               	incf	(precG@i+1)^0,f,c
  4810  00191E                     l7272:
  4811  00191E  5034               	movf	precG@i^0,w,c
  4812  001920  5C2E               	subwf	precG@len^0,w,c
  4813  001922  502F               	movf	(precG@len+1)^0,w,c
  4814  001924  0A80               	xorlw	128
  4815  001926  6E23               	movwf	??_precG^0,c
  4816  001928  5035               	movf	(precG@i+1)^0,w,c
  4817  00192A  0A80               	xorlw	128
  4818  00192C  5823               	subwfb	??_precG^0,w,c
  4819  00192E  B0D8               	btfsc	status,0,c
  4820  001930  EF9C  F00C         	goto	u8831
  4821  001934  EF9E  F00C         	goto	u8830
  4822  001938                     u8831:
  4823  001938  EF79  F00C         	goto	l7268
  4824  00193C                     u8830:
  4825  00193C                     
  4826                           ;src/print/format.c: 315:             }
  4827  00193C  0630               	decf	precG@j^0,f,c
  4828  00193E  A0D8               	btfss	status,0,c
  4829  001940  0631               	decf	(precG@j+1)^0,f,c
  4830  001942                     l7276:
  4831  001942  5026               	movf	precG@p^0,w,c
  4832  001944  5C30               	subwf	precG@j^0,w,c
  4833  001946  5031               	movf	(precG@j+1)^0,w,c
  4834  001948  0A80               	xorlw	128
  4835  00194A  6E23               	movwf	??_precG^0,c
  4836  00194C  5027               	movf	(precG@p+1)^0,w,c
  4837  00194E  0A80               	xorlw	128
  4838  001950  5823               	subwfb	??_precG^0,w,c
  4839  001952  B0D8               	btfsc	status,0,c
  4840  001954  EFAE  F00C         	goto	u8841
  4841  001958  EFB0  F00C         	goto	u8840
  4842  00195C                     u8841:
  4843  00195C  EF4B  F00C         	goto	l7256
  4844  001960                     u8840:
  4845  001960                     l512:
  4846  001960  0012               	return		;funcret
  4847  001962                     __end_of_precG:
  4848                           	opt callstack 0
  4849                           
  4850 ;; *************** function _precF *****************
  4851 ;; Defined at:
  4852 ;;		line 173 in file "src/print/format.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  str             2   30[COMRAM] PTR unsigned char 
  4855 ;;		 -> my_vprintf@buffer(64), 
  4856 ;;  precision       2   32[COMRAM] PTR int 
  4857 ;;		 -> my_vprintf@prec(2), 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  k               2   45[COMRAM] int 
  4860 ;;  len             2   43[COMRAM] int 
  4861 ;;  i               2   41[COMRAM] int 
  4862 ;;  p               2   39[COMRAM] int 
  4863 ;;  j               2   37[COMRAM] int 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4873 ;;      Params:         4       0       0       0       0       0       0       0       0
  4874 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4875 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4876 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4877 ;;Total ram usage:       17 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    5
  4880 ;; This function calls:
  4881 ;;		_posc
  4882 ;;		_roundStr
  4883 ;;		_searchc
  4884 ;;		_strlen
  4885 ;; This function is called by:
  4886 ;;		_my_vprintf
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text8
  4891  003572                     __ptext8:
  4892                           	opt callstack 0
  4893  003572                     _precF:
  4894                           	opt callstack 24
  4895  003572                     
  4896                           ;src/print/format.c: 174:     int i, j, k;;src/print/format.c: 175:     int len = strlen
      +                          (str);
  4897  003572  C01F  F004         	movff	precF@str,strlen@s
  4898  003576  C020  F005         	movff	precF@str+1,strlen@s+1
  4899  00357A  EC44  F028         	call	_strlen	;wreg free
  4900  00357E  C004  F02C         	movff	?_strlen,precF@len
  4901  003582  C005  F02D         	movff	?_strlen+1,precF@len+1
  4902                           
  4903                           ;src/print/format.c: 176:     int p = posc(str,'.');
  4904  003586  C01F  F008         	movff	precF@str,posc@str
  4905  00358A  C020  F009         	movff	precF@str+1,posc@str+1
  4906  00358E  0E2E               	movlw	46
  4907  003590  6E0A               	movwf	posc@c^0,c
  4908  003592  ECE7  F025         	call	_posc	;wreg free
  4909  003596  C008  F028         	movff	?_posc,precF@p
  4910  00359A  C009  F029         	movff	?_posc+1,precF@p+1
  4911  00359E                     
  4912                           ;src/print/format.c: 179:     if ((*precision) < 0)
  4913  00359E  C021  FFD9         	movff	precF@precision,fsr2l
  4914  0035A2  C022  FFDA         	movff	precF@precision+1,fsr2h
  4915  0035A6  0E01               	movlw	1
  4916  0035A8  BEDB               	btfsc	plusw2,7,c
  4917  0035AA  EFDB  F01A         	goto	u8390
  4918  0035AE  EFD9  F01A         	goto	u8391
  4919  0035B2                     u8391:
  4920  0035B2  EFE3  F01A         	goto	l7078
  4921  0035B6                     u8390:
  4922  0035B6                     
  4923                           ;src/print/format.c: 180:         (*precision) = 4;
  4924  0035B6  C021  FFD9         	movff	precF@precision,fsr2l
  4925  0035BA  C022  FFDA         	movff	precF@precision+1,fsr2h
  4926  0035BE  0E04               	movlw	4
  4927  0035C0  6EDE               	movwf	postinc2,c
  4928  0035C2  0E00               	movlw	0
  4929  0035C4  6EDD               	movwf	postdec2,c
  4930  0035C6                     l7078:
  4931                           
  4932                           ;src/print/format.c: 182:     i = p + (*precision) + 1;
  4933  0035C6  C021  FFD9         	movff	precF@precision,fsr2l
  4934  0035CA  C022  FFDA         	movff	precF@precision+1,fsr2h
  4935  0035CE  CFDE F023          	movff	postinc2,??_precF
  4936  0035D2  CFDD F024          	movff	postdec2,??_precF+1
  4937  0035D6  5028               	movf	precF@p^0,w,c
  4938  0035D8  2623               	addwf	??_precF^0,f,c
  4939  0035DA  5029               	movf	(precF@p+1)^0,w,c
  4940  0035DC  2224               	addwfc	(??_precF+1)^0,f,c
  4941  0035DE  0E01               	movlw	1
  4942  0035E0  2423               	addwf	??_precF^0,w,c
  4943  0035E2  6E2A               	movwf	precF@i^0,c
  4944  0035E4  0E00               	movlw	0
  4945  0035E6  2024               	addwfc	(??_precF+1)^0,w,c
  4946  0035E8  6E2B               	movwf	(precF@i+1)^0,c
  4947  0035EA                     
  4948                           ;src/print/format.c: 183:     j = len - i;
  4949  0035EA  502A               	movf	precF@i^0,w,c
  4950  0035EC  5C2C               	subwf	precF@len^0,w,c
  4951  0035EE  6E26               	movwf	precF@j^0,c
  4952  0035F0  502B               	movf	(precF@i+1)^0,w,c
  4953  0035F2  582D               	subwfb	(precF@len+1)^0,w,c
  4954  0035F4  6E27               	movwf	(precF@j+1)^0,c
  4955  0035F6                     
  4956                           ;src/print/format.c: 186:     if(j > 0) {
  4957  0035F6  BE27               	btfsc	(precF@j+1)^0,7,c
  4958  0035F8  EF06  F01B         	goto	u8401
  4959  0035FC  5027               	movf	(precF@j+1)^0,w,c
  4960  0035FE  E108               	bnz	u8400
  4961  003600  0426               	decf	precF@j^0,w,c
  4962  003602  A0D8               	btfss	status,0,c
  4963  003604  EF06  F01B         	goto	u8401
  4964  003608  EF08  F01B         	goto	u8400
  4965  00360C                     u8401:
  4966  00360C  EF63  F01B         	goto	l7098
  4967  003610                     u8400:
  4968  003610                     
  4969                           ;src/print/format.c: 187:         roundStr(str, -1, i);
  4970  003610  C01F  F00E         	movff	precF@str,roundStr@decnum
  4971  003614  C020  F00F         	movff	precF@str+1,roundStr@decnum+1
  4972  003618  0EFF               	movlw	255
  4973  00361A  6E11               	movwf	(roundStr@e+1)^0,c
  4974  00361C  6810               	setf	roundStr@e^0,c
  4975  00361E  C02A  F012         	movff	precF@i,roundStr@prn
  4976  003622  C02B  F013         	movff	precF@i+1,roundStr@prn+1
  4977  003626  EC8C  F014         	call	_roundStr	;wreg free
  4978  00362A                     
  4979                           ;src/print/format.c: 188:         i = ((*precision) == 0 && numeral == 0)? p : (p + (*pr
      +                          ecision) + 1);
  4980  00362A  C021  FFD9         	movff	precF@precision,fsr2l
  4981  00362E  C022  FFDA         	movff	precF@precision+1,fsr2h
  4982  003632  50DE               	movf	postinc2,w,c
  4983  003634  10DE               	iorwf	postinc2,w,c
  4984  003636  A4D8               	btfss	status,2,c
  4985  003638  EF20  F01B         	goto	u8411
  4986  00363C  EF22  F01B         	goto	u8410
  4987  003640                     u8411:
  4988  003640  EF2A  F01B         	goto	l7090
  4989  003644                     u8410:
  4990  003644  503A               	movf	_numeral^0,w,c
  4991  003646  B4D8               	btfsc	status,2,c
  4992  003648  EF28  F01B         	goto	u8421
  4993  00364C  EF2A  F01B         	goto	u8420
  4994  003650                     u8421:
  4995  003650  EF3E  F01B         	goto	l432
  4996  003654                     u8420:
  4997  003654                     l7090:
  4998  003654  C021  FFD9         	movff	precF@precision,fsr2l
  4999  003658  C022  FFDA         	movff	precF@precision+1,fsr2h
  5000  00365C  CFDE F023          	movff	postinc2,??_precF
  5001  003660  CFDD F024          	movff	postdec2,??_precF+1
  5002  003664  5028               	movf	precF@p^0,w,c
  5003  003666  2623               	addwf	??_precF^0,f,c
  5004  003668  5029               	movf	(precF@p+1)^0,w,c
  5005  00366A  2224               	addwfc	(??_precF+1)^0,f,c
  5006  00366C  0E01               	movlw	1
  5007  00366E  2423               	addwf	??_precF^0,w,c
  5008  003670  6E2A               	movwf	precF@i^0,c
  5009  003672  0E00               	movlw	0
  5010  003674  2024               	addwfc	(??_precF+1)^0,w,c
  5011  003676  6E2B               	movwf	(precF@i+1)^0,c
  5012  003678  EF42  F01B         	goto	l434
  5013  00367C                     l432:
  5014  00367C  C028  F02A         	movff	precF@p,precF@i
  5015  003680  C029  F02B         	movff	precF@p+1,precF@i+1
  5016  003684                     l434:
  5017                           
  5018                           ;src/print/format.c: 189:         for (k = i; k < len; k++)
  5019  003684  C02A  F02E         	movff	precF@i,precF@k
  5020  003688  C02B  F02F         	movff	precF@i+1,precF@k+1
  5021  00368C  EF52  F01B         	goto	l7096
  5022  003690                     l7092:
  5023                           
  5024                           ;src/print/format.c: 190:             str[k] = 0;
  5025  003690  502E               	movf	precF@k^0,w,c
  5026  003692  241F               	addwf	precF@str^0,w,c
  5027  003694  6ED9               	movwf	fsr2l,c
  5028  003696  502F               	movf	(precF@k+1)^0,w,c
  5029  003698  2020               	addwfc	(precF@str+1)^0,w,c
  5030  00369A  6EDA               	movwf	fsr2h,c
  5031  00369C  0E00               	movlw	0
  5032  00369E  6EDF               	movwf	indf2,c
  5033  0036A0  4A2E               	infsnz	precF@k^0,f,c
  5034  0036A2  2A2F               	incf	(precF@k+1)^0,f,c
  5035  0036A4                     l7096:
  5036  0036A4  502C               	movf	precF@len^0,w,c
  5037  0036A6  5C2E               	subwf	precF@k^0,w,c
  5038  0036A8  502F               	movf	(precF@k+1)^0,w,c
  5039  0036AA  0A80               	xorlw	128
  5040  0036AC  6E23               	movwf	??_precF^0,c
  5041  0036AE  502D               	movf	(precF@len+1)^0,w,c
  5042  0036B0  0A80               	xorlw	128
  5043  0036B2  5823               	subwfb	??_precF^0,w,c
  5044  0036B4  A0D8               	btfss	status,0,c
  5045  0036B6  EF5F  F01B         	goto	u8431
  5046  0036BA  EF61  F01B         	goto	u8430
  5047  0036BE                     u8431:
  5048  0036BE  EF48  F01B         	goto	l7092
  5049  0036C2                     u8430:
  5050  0036C2  EF9F  F01B         	goto	l445
  5051  0036C6                     l7098:
  5052  0036C6  BE27               	btfsc	(precF@j+1)^0,7,c
  5053  0036C8  EF6A  F01B         	goto	u8440
  5054  0036CC  EF68  F01B         	goto	u8441
  5055  0036D0                     u8441:
  5056  0036D0  EF9F  F01B         	goto	l445
  5057  0036D4                     u8440:
  5058  0036D4  C01F  F008         	movff	precF@str,searchc@str
  5059  0036D8  C020  F009         	movff	precF@str+1,searchc@str+1
  5060  0036DC  0E2E               	movlw	46
  5061  0036DE  6E0A               	movwf	searchc@c^0,c
  5062  0036E0  EC46  F026         	call	_searchc	;wreg free
  5063  0036E4  0900               	iorlw	0
  5064  0036E6  B4D8               	btfsc	status,2,c
  5065  0036E8  EF78  F01B         	goto	u8451
  5066  0036EC  EF7A  F01B         	goto	u8450
  5067  0036F0                     u8451:
  5068  0036F0  EF9F  F01B         	goto	l445
  5069  0036F4                     u8450:
  5070  0036F4                     
  5071                           ;src/print/format.c: 194:         for (k = len; k < len + (j * -1); k++)
  5072  0036F4  C02C  F02E         	movff	precF@len,precF@k
  5073  0036F8  C02D  F02F         	movff	precF@len+1,precF@k+1
  5074  0036FC  EF8A  F01B         	goto	l7108
  5075  003700                     l7104:
  5076                           
  5077                           ;src/print/format.c: 195:             str[k] = '0';
  5078  003700  502E               	movf	precF@k^0,w,c
  5079  003702  241F               	addwf	precF@str^0,w,c
  5080  003704  6ED9               	movwf	fsr2l,c
  5081  003706  502F               	movf	(precF@k+1)^0,w,c
  5082  003708  2020               	addwfc	(precF@str+1)^0,w,c
  5083  00370A  6EDA               	movwf	fsr2h,c
  5084  00370C  0E30               	movlw	48
  5085  00370E  6EDF               	movwf	indf2,c
  5086  003710  4A2E               	infsnz	precF@k^0,f,c
  5087  003712  2A2F               	incf	(precF@k+1)^0,f,c
  5088  003714                     l7108:
  5089  003714  5026               	movf	precF@j^0,w,c
  5090  003716  5C2C               	subwf	precF@len^0,w,c
  5091  003718  6E23               	movwf	??_precF^0,c
  5092  00371A  5027               	movf	(precF@j+1)^0,w,c
  5093  00371C  582D               	subwfb	(precF@len+1)^0,w,c
  5094  00371E  6E24               	movwf	(??_precF+1)^0,c
  5095  003720  5023               	movf	??_precF^0,w,c
  5096  003722  5C2E               	subwf	precF@k^0,w,c
  5097  003724  502F               	movf	(precF@k+1)^0,w,c
  5098  003726  0A80               	xorlw	128
  5099  003728  6E25               	movwf	(??_precF+2)^0,c
  5100  00372A  5024               	movf	(??_precF+1)^0,w,c
  5101  00372C  0A80               	xorlw	128
  5102  00372E  5825               	subwfb	(??_precF+2)^0,w,c
  5103  003730  A0D8               	btfss	status,0,c
  5104  003732  EF9D  F01B         	goto	u8461
  5105  003736  EF9F  F01B         	goto	u8460
  5106  00373A                     u8461:
  5107  00373A  EF80  F01B         	goto	l7104
  5108  00373E                     u8460:
  5109  00373E                     l445:
  5110  00373E  0012               	return		;funcret
  5111  003740                     __end_of_precF:
  5112                           	opt callstack 0
  5113                           
  5114 ;; *************** function _precE *****************
  5115 ;; Defined at:
  5116 ;;		line 202 in file "src/print/format.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  str             2   30[COMRAM] PTR unsigned char 
  5119 ;;		 -> my_vprintf@buffer(64), 
  5120 ;;  precision       2   32[COMRAM] PTR int 
  5121 ;;		 -> my_vprintf@prec(2), 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  k               2   46[COMRAM] int 
  5124 ;;  j               2   44[COMRAM] int 
  5125 ;;  i               2   42[COMRAM] int 
  5126 ;;  posE            2   40[COMRAM] int 
  5127 ;;  len             2   38[COMRAM] int 
  5128 ;;  p               2   36[COMRAM] int 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5138 ;;      Params:         4       0       0       0       0       0       0       0       0
  5139 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5140 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5141 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5142 ;;Total ram usage:       18 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    5
  5145 ;; This function calls:
  5146 ;;		_posc
  5147 ;;		_roundStr
  5148 ;;		_strlen
  5149 ;; This function is called by:
  5150 ;;		_my_vprintf
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text9
  5155  003368                     __ptext9:
  5156                           	opt callstack 0
  5157  003368                     _precE:
  5158                           	opt callstack 24
  5159  003368                     
  5160                           ;src/print/format.c: 203:     int i, j, k;;src/print/format.c: 204:     int len = strlen
      +                          (str);
  5161  003368  C01F  F004         	movff	precE@str,strlen@s
  5162  00336C  C020  F005         	movff	precE@str+1,strlen@s+1
  5163  003370  EC44  F028         	call	_strlen	;wreg free
  5164  003374  C004  F027         	movff	?_strlen,precE@len
  5165  003378  C005  F028         	movff	?_strlen+1,precE@len+1
  5166                           
  5167                           ;src/print/format.c: 205:     int posE = posc(str,'e');
  5168  00337C  C01F  F008         	movff	precE@str,posc@str
  5169  003380  C020  F009         	movff	precE@str+1,posc@str+1
  5170  003384  0E65               	movlw	101
  5171  003386  6E0A               	movwf	posc@c^0,c
  5172  003388  ECE7  F025         	call	_posc	;wreg free
  5173  00338C  C008  F029         	movff	?_posc,precE@posE
  5174  003390  C009  F02A         	movff	?_posc+1,precE@posE+1
  5175                           
  5176                           ;src/print/format.c: 206:     int p = posc(str,'.');
  5177  003394  C01F  F008         	movff	precE@str,posc@str
  5178  003398  C020  F009         	movff	precE@str+1,posc@str+1
  5179  00339C  0E2E               	movlw	46
  5180  00339E  6E0A               	movwf	posc@c^0,c
  5181  0033A0  ECE7  F025         	call	_posc	;wreg free
  5182  0033A4  C008  F025         	movff	?_posc,precE@p
  5183  0033A8  C009  F026         	movff	?_posc+1,precE@p+1
  5184  0033AC                     
  5185                           ;src/print/format.c: 209:     if ((*precision) < 0)
  5186  0033AC  C021  FFD9         	movff	precE@precision,fsr2l
  5187  0033B0  C022  FFDA         	movff	precE@precision+1,fsr2h
  5188  0033B4  0E01               	movlw	1
  5189  0033B6  BEDB               	btfsc	plusw2,7,c
  5190  0033B8  EFE2  F019         	goto	u8470
  5191  0033BC  EFE0  F019         	goto	u8471
  5192  0033C0                     u8471:
  5193  0033C0  EFEA  F019         	goto	l7116
  5194  0033C4                     u8470:
  5195  0033C4                     
  5196                           ;src/print/format.c: 210:         (*precision) = 4;
  5197  0033C4  C021  FFD9         	movff	precE@precision,fsr2l
  5198  0033C8  C022  FFDA         	movff	precE@precision+1,fsr2h
  5199  0033CC  0E04               	movlw	4
  5200  0033CE  6EDE               	movwf	postinc2,c
  5201  0033D0  0E00               	movlw	0
  5202  0033D2  6EDD               	movwf	postdec2,c
  5203  0033D4                     l7116:
  5204                           
  5205                           ;src/print/format.c: 212:     i = p + (*precision) + 1;
  5206  0033D4  C021  FFD9         	movff	precE@precision,fsr2l
  5207  0033D8  C022  FFDA         	movff	precE@precision+1,fsr2h
  5208  0033DC  CFDE F023          	movff	postinc2,??_precE
  5209  0033E0  CFDD F024          	movff	postdec2,??_precE+1
  5210  0033E4  5025               	movf	precE@p^0,w,c
  5211  0033E6  2623               	addwf	??_precE^0,f,c
  5212  0033E8  5026               	movf	(precE@p+1)^0,w,c
  5213  0033EA  2224               	addwfc	(??_precE+1)^0,f,c
  5214  0033EC  0E01               	movlw	1
  5215  0033EE  2423               	addwf	??_precE^0,w,c
  5216  0033F0  6E2B               	movwf	precE@i^0,c
  5217  0033F2  0E00               	movlw	0
  5218  0033F4  2024               	addwfc	(??_precE+1)^0,w,c
  5219  0033F6  6E2C               	movwf	(precE@i+1)^0,c
  5220  0033F8                     
  5221                           ;src/print/format.c: 213:     j = posE - i;
  5222  0033F8  502B               	movf	precE@i^0,w,c
  5223  0033FA  5C29               	subwf	precE@posE^0,w,c
  5224  0033FC  6E2D               	movwf	precE@j^0,c
  5225  0033FE  502C               	movf	(precE@i+1)^0,w,c
  5226  003400  582A               	subwfb	(precE@posE+1)^0,w,c
  5227  003402  6E2E               	movwf	(precE@j+1)^0,c
  5228  003404                     
  5229                           ;src/print/format.c: 216:     if (j > 0) {
  5230  003404  BE2E               	btfsc	(precE@j+1)^0,7,c
  5231  003406  EF0D  F01A         	goto	u8481
  5232  00340A  502E               	movf	(precE@j+1)^0,w,c
  5233  00340C  E108               	bnz	u8480
  5234  00340E  042D               	decf	precE@j^0,w,c
  5235  003410  A0D8               	btfss	status,0,c
  5236  003412  EF0D  F01A         	goto	u8481
  5237  003416  EF0F  F01A         	goto	u8480
  5238  00341A                     u8481:
  5239  00341A  EF64  F01A         	goto	l7138
  5240  00341E                     u8480:
  5241  00341E                     
  5242                           ;src/print/format.c: 217:         roundStr(str, posE, i);
  5243  00341E  C01F  F00E         	movff	precE@str,roundStr@decnum
  5244  003422  C020  F00F         	movff	precE@str+1,roundStr@decnum+1
  5245  003426  C029  F010         	movff	precE@posE,roundStr@e
  5246  00342A  C02A  F011         	movff	precE@posE+1,roundStr@e+1
  5247  00342E  C02B  F012         	movff	precE@i,roundStr@prn
  5248  003432  C02C  F013         	movff	precE@i+1,roundStr@prn+1
  5249  003436  EC8C  F014         	call	_roundStr	;wreg free
  5250  00343A                     
  5251                           ;src/print/format.c: 218:         if((*precision) == 0 && numeral == 0){
  5252  00343A  C021  FFD9         	movff	precE@precision,fsr2l
  5253  00343E  C022  FFDA         	movff	precE@precision+1,fsr2h
  5254  003442  50DE               	movf	postinc2,w,c
  5255  003444  10DE               	iorwf	postinc2,w,c
  5256  003446  A4D8               	btfss	status,2,c
  5257  003448  EF28  F01A         	goto	u8491
  5258  00344C  EF2A  F01A         	goto	u8490
  5259  003450                     u8491:
  5260  003450  EF37  F01A         	goto	l7130
  5261  003454                     u8490:
  5262  003454  503A               	movf	_numeral^0,w,c
  5263  003456  A4D8               	btfss	status,2,c
  5264  003458  EF30  F01A         	goto	u8501
  5265  00345C  EF32  F01A         	goto	u8500
  5266  003460                     u8501:
  5267  003460  EF37  F01A         	goto	l7130
  5268  003464                     u8500:
  5269  003464                     
  5270                           ;src/print/format.c: 219:             i--;
  5271  003464  062B               	decf	precE@i^0,f,c
  5272  003466  A0D8               	btfss	status,0,c
  5273  003468  062C               	decf	(precE@i+1)^0,f,c
  5274                           
  5275                           ;src/print/format.c: 220:             j++;
  5276  00346A  4A2D               	infsnz	precE@j^0,f,c
  5277  00346C  2A2E               	incf	(precE@j+1)^0,f,c
  5278  00346E                     l7130:
  5279                           
  5280                           ;src/print/format.c: 222:         for (k = i; k < len; k++)
  5281  00346E  C02B  F02F         	movff	precE@i,precE@k
  5282  003472  C02C  F030         	movff	precE@i+1,precE@k+1
  5283  003476  EF53  F01A         	goto	l7136
  5284  00347A                     l7132:
  5285                           
  5286                           ;src/print/format.c: 223:             str[k] = str[k+j];
  5287  00347A  502F               	movf	precE@k^0,w,c
  5288  00347C  241F               	addwf	precE@str^0,w,c
  5289  00347E  6E23               	movwf	??_precE^0,c
  5290  003480  5030               	movf	(precE@k+1)^0,w,c
  5291  003482  2020               	addwfc	(precE@str+1)^0,w,c
  5292  003484  6E24               	movwf	(??_precE+1)^0,c
  5293  003486  502D               	movf	precE@j^0,w,c
  5294  003488  2423               	addwf	??_precE^0,w,c
  5295  00348A  6ED9               	movwf	fsr2l,c
  5296  00348C  502E               	movf	(precE@j+1)^0,w,c
  5297  00348E  2024               	addwfc	(??_precE+1)^0,w,c
  5298  003490  6EDA               	movwf	fsr2h,c
  5299  003492  502F               	movf	precE@k^0,w,c
  5300  003494  241F               	addwf	precE@str^0,w,c
  5301  003496  6EE1               	movwf	fsr1l,c
  5302  003498  5030               	movf	(precE@k+1)^0,w,c
  5303  00349A  2020               	addwfc	(precE@str+1)^0,w,c
  5304  00349C  6EE2               	movwf	fsr1h,c
  5305  00349E  CFDF FFE7          	movff	indf2,indf1
  5306  0034A2  4A2F               	infsnz	precE@k^0,f,c
  5307  0034A4  2A30               	incf	(precE@k+1)^0,f,c
  5308  0034A6                     l7136:
  5309  0034A6  5027               	movf	precE@len^0,w,c
  5310  0034A8  5C2F               	subwf	precE@k^0,w,c
  5311  0034AA  5030               	movf	(precE@k+1)^0,w,c
  5312  0034AC  0A80               	xorlw	128
  5313  0034AE  6E23               	movwf	??_precE^0,c
  5314  0034B0  5028               	movf	(precE@len+1)^0,w,c
  5315  0034B2  0A80               	xorlw	128
  5316  0034B4  5823               	subwfb	??_precE^0,w,c
  5317  0034B6  A0D8               	btfss	status,0,c
  5318  0034B8  EF60  F01A         	goto	u8511
  5319  0034BC  EF62  F01A         	goto	u8510
  5320  0034C0                     u8511:
  5321  0034C0  EF3D  F01A         	goto	l7132
  5322  0034C4                     u8510:
  5323  0034C4  EFB8  F01A         	goto	l461
  5324  0034C8                     l7138:
  5325  0034C8  BE2E               	btfsc	(precE@j+1)^0,7,c
  5326  0034CA  EF6B  F01A         	goto	u8520
  5327  0034CE  EF69  F01A         	goto	u8521
  5328  0034D2                     u8521:
  5329  0034D2  EFB8  F01A         	goto	l461
  5330  0034D6                     u8520:
  5331  0034D6                     
  5332                           ;src/print/format.c: 227:         for (k = len - 1 + (j * -1); k >= posE; k--) {
  5333  0034D6  502D               	movf	precE@j^0,w,c
  5334  0034D8  5C27               	subwf	precE@len^0,w,c
  5335  0034DA  6E23               	movwf	??_precE^0,c
  5336  0034DC  502E               	movf	(precE@j+1)^0,w,c
  5337  0034DE  5828               	subwfb	(precE@len+1)^0,w,c
  5338  0034E0  6E24               	movwf	(??_precE+1)^0,c
  5339  0034E2  0EFF               	movlw	255
  5340  0034E4  2423               	addwf	??_precE^0,w,c
  5341  0034E6  6E2F               	movwf	precE@k^0,c
  5342  0034E8  0EFF               	movlw	255
  5343  0034EA  2024               	addwfc	(??_precE+1)^0,w,c
  5344  0034EC  6E30               	movwf	(precE@k+1)^0,c
  5345  0034EE  EFA9  F01A         	goto	l7150
  5346  0034F2                     l7142:
  5347                           
  5348                           ;src/print/format.c: 228:             if (k >= i)
  5349  0034F2  502B               	movf	precE@i^0,w,c
  5350  0034F4  5C2F               	subwf	precE@k^0,w,c
  5351  0034F6  5030               	movf	(precE@k+1)^0,w,c
  5352  0034F8  0A80               	xorlw	128
  5353  0034FA  6E23               	movwf	??_precE^0,c
  5354  0034FC  502C               	movf	(precE@i+1)^0,w,c
  5355  0034FE  0A80               	xorlw	128
  5356  003500  5823               	subwfb	??_precE^0,w,c
  5357  003502  A0D8               	btfss	status,0,c
  5358  003504  EF86  F01A         	goto	u8531
  5359  003508  EF88  F01A         	goto	u8530
  5360  00350C                     u8531:
  5361  00350C  EF9E  F01A         	goto	l7146
  5362  003510                     u8530:
  5363  003510                     
  5364                           ;src/print/format.c: 229:                 str[k] = str[k+j];
  5365  003510  502F               	movf	precE@k^0,w,c
  5366  003512  241F               	addwf	precE@str^0,w,c
  5367  003514  6E23               	movwf	??_precE^0,c
  5368  003516  5030               	movf	(precE@k+1)^0,w,c
  5369  003518  2020               	addwfc	(precE@str+1)^0,w,c
  5370  00351A  6E24               	movwf	(??_precE+1)^0,c
  5371  00351C  502D               	movf	precE@j^0,w,c
  5372  00351E  2423               	addwf	??_precE^0,w,c
  5373  003520  6ED9               	movwf	fsr2l,c
  5374  003522  502E               	movf	(precE@j+1)^0,w,c
  5375  003524  2024               	addwfc	(??_precE+1)^0,w,c
  5376  003526  6EDA               	movwf	fsr2h,c
  5377  003528  502F               	movf	precE@k^0,w,c
  5378  00352A  241F               	addwf	precE@str^0,w,c
  5379  00352C  6EE1               	movwf	fsr1l,c
  5380  00352E  5030               	movf	(precE@k+1)^0,w,c
  5381  003530  2020               	addwfc	(precE@str+1)^0,w,c
  5382  003532  6EE2               	movwf	fsr1h,c
  5383  003534  CFDF FFE7          	movff	indf2,indf1
  5384  003538  EFA6  F01A         	goto	l7148
  5385  00353C                     l7146:
  5386                           
  5387                           ;src/print/format.c: 231:                 str[k] = '0';
  5388  00353C  502F               	movf	precE@k^0,w,c
  5389  00353E  241F               	addwf	precE@str^0,w,c
  5390  003540  6ED9               	movwf	fsr2l,c
  5391  003542  5030               	movf	(precE@k+1)^0,w,c
  5392  003544  2020               	addwfc	(precE@str+1)^0,w,c
  5393  003546  6EDA               	movwf	fsr2h,c
  5394  003548  0E30               	movlw	48
  5395  00354A  6EDF               	movwf	indf2,c
  5396  00354C                     l7148:
  5397                           
  5398                           ;src/print/format.c: 232:         }
  5399  00354C  062F               	decf	precE@k^0,f,c
  5400  00354E  A0D8               	btfss	status,0,c
  5401  003550  0630               	decf	(precE@k+1)^0,f,c
  5402  003552                     l7150:
  5403  003552  5029               	movf	precE@posE^0,w,c
  5404  003554  5C2F               	subwf	precE@k^0,w,c
  5405  003556  5030               	movf	(precE@k+1)^0,w,c
  5406  003558  0A80               	xorlw	128
  5407  00355A  6E23               	movwf	??_precE^0,c
  5408  00355C  502A               	movf	(precE@posE+1)^0,w,c
  5409  00355E  0A80               	xorlw	128
  5410  003560  5823               	subwfb	??_precE^0,w,c
  5411  003562  B0D8               	btfsc	status,0,c
  5412  003564  EFB6  F01A         	goto	u8541
  5413  003568  EFB8  F01A         	goto	u8540
  5414  00356C                     u8541:
  5415  00356C  EF79  F01A         	goto	l7142
  5416  003570                     u8540:
  5417  003570                     l461:
  5418  003570  0012               	return		;funcret
  5419  003572                     __end_of_precE:
  5420                           	opt callstack 0
  5421                           
  5422 ;; *************** function _roundStr *****************
  5423 ;; Defined at:
  5424 ;;		line 38 in file "src/print/format.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;  decnum          2   13[COMRAM] PTR unsigned char 
  5427 ;;		 -> my_vprintf@buffer(64), 
  5428 ;;  e               2   15[COMRAM] int 
  5429 ;;  prn             2   17[COMRAM] int 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  k               2   28[COMRAM] int 
  5432 ;;  i               2   26[COMRAM] int 
  5433 ;;  p               2   24[COMRAM] int 
  5434 ;;  len             2   22[COMRAM] int 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  2   13[COMRAM] int 
  5437 ;; Registers used:
  5438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5444 ;;      Params:         6       0       0       0       0       0       0       0       0
  5445 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5446 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5447 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5448 ;;Total ram usage:       17 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    4
  5451 ;; This function calls:
  5452 ;;		_posc
  5453 ;;		_strlen
  5454 ;; This function is called by:
  5455 ;;		_precF
  5456 ;;		_precE
  5457 ;;		_precG
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text10
  5462  002918                     __ptext10:
  5463                           	opt callstack 0
  5464  002918                     _roundStr:
  5465                           	opt callstack 24
  5466  002918                     
  5467                           ;src/print/format.c: 39:     int len = strlen(decnum);
  5468  002918  C00E  F004         	movff	roundStr@decnum,strlen@s
  5469  00291C  C00F  F005         	movff	roundStr@decnum+1,strlen@s+1
  5470  002920  EC44  F028         	call	_strlen	;wreg free
  5471  002924  C004  F017         	movff	?_strlen,roundStr@len
  5472  002928  C005  F018         	movff	?_strlen+1,roundStr@len+1
  5473                           
  5474                           ;src/print/format.c: 40:     int p = posc(decnum,'.');
  5475  00292C  C00E  F008         	movff	roundStr@decnum,posc@str
  5476  002930  C00F  F009         	movff	roundStr@decnum+1,posc@str+1
  5477  002934  0E2E               	movlw	46
  5478  002936  6E0A               	movwf	posc@c^0,c
  5479  002938  ECE7  F025         	call	_posc	;wreg free
  5480  00293C  C008  F019         	movff	?_posc,roundStr@p
  5481  002940  C009  F01A         	movff	?_posc+1,roundStr@p+1
  5482  002944                     
  5483                           ;src/print/format.c: 41:     int i, k;;src/print/format.c: 52:     for (k = prn - 1; k >
      +                          = 0; k--) {
  5484  002944  0EFF               	movlw	255
  5485  002946  2412               	addwf	roundStr@prn^0,w,c
  5486  002948  6E1D               	movwf	roundStr@k^0,c
  5487  00294A  0EFF               	movlw	255
  5488  00294C  2013               	addwfc	(roundStr@prn+1)^0,w,c
  5489  00294E  6E1E               	movwf	(roundStr@k+1)^0,c
  5490  002950                     l6686:
  5491  002950  BE1E               	btfsc	(roundStr@k+1)^0,7,c
  5492  002952  EFAF  F014         	goto	u7760
  5493  002956  EFAD  F014         	goto	u7761
  5494  00295A                     u7761:
  5495  00295A  EFB1  F014         	goto	l6690
  5496  00295E                     u7760:
  5497  00295E  EF20  F015         	goto	l6710
  5498  002962                     l6690:
  5499                           
  5500                           ;src/print/format.c: 53:         if (decnum[k] < '9' && decnum[k] != '.') {
  5501  002962  501D               	movf	roundStr@k^0,w,c
  5502  002964  240E               	addwf	roundStr@decnum^0,w,c
  5503  002966  6ED9               	movwf	fsr2l,c
  5504  002968  501E               	movf	(roundStr@k+1)^0,w,c
  5505  00296A  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5506  00296C  6EDA               	movwf	fsr2h,c
  5507  00296E  0E39               	movlw	57
  5508  002970  60DF               	cpfslt	indf2,c
  5509  002972  EFBD  F014         	goto	u7771
  5510  002976  EFBF  F014         	goto	u7770
  5511  00297A                     u7771:
  5512  00297A  EF1B  F015         	goto	l6706
  5513  00297E                     u7770:
  5514  00297E  501D               	movf	roundStr@k^0,w,c
  5515  002980  240E               	addwf	roundStr@decnum^0,w,c
  5516  002982  6ED9               	movwf	fsr2l,c
  5517  002984  501E               	movf	(roundStr@k+1)^0,w,c
  5518  002986  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5519  002988  6EDA               	movwf	fsr2h,c
  5520  00298A  0E2E               	movlw	46
  5521  00298C  18DE               	xorwf	postinc2,w,c
  5522  00298E  B4D8               	btfsc	status,2,c
  5523  002990  EFCC  F014         	goto	u7781
  5524  002994  EFCE  F014         	goto	u7780
  5525  002998                     u7781:
  5526  002998  EF1B  F015         	goto	l6706
  5527  00299C                     u7780:
  5528  00299C                     
  5529                           ;src/print/format.c: 54:             if (decnum[prn] >= '5') {
  5530  00299C  5012               	movf	roundStr@prn^0,w,c
  5531  00299E  240E               	addwf	roundStr@decnum^0,w,c
  5532  0029A0  6ED9               	movwf	fsr2l,c
  5533  0029A2  5013               	movf	(roundStr@prn+1)^0,w,c
  5534  0029A4  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5535  0029A6  6EDA               	movwf	fsr2h,c
  5536  0029A8  0E34               	movlw	52
  5537  0029AA  64DF               	cpfsgt	indf2,c
  5538  0029AC  EFDA  F014         	goto	u7791
  5539  0029B0  EFDC  F014         	goto	u7790
  5540  0029B4                     u7791:
  5541  0029B4  EF20  F015         	goto	l6710
  5542  0029B8                     u7790:
  5543  0029B8                     
  5544                           ;src/print/format.c: 55:                 decnum[k]++;
  5545  0029B8  501D               	movf	roundStr@k^0,w,c
  5546  0029BA  240E               	addwf	roundStr@decnum^0,w,c
  5547  0029BC  6ED9               	movwf	fsr2l,c
  5548  0029BE  501E               	movf	(roundStr@k+1)^0,w,c
  5549  0029C0  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5550  0029C2  6EDA               	movwf	fsr2h,c
  5551  0029C4  2ADF               	incf	indf2,f,c
  5552                           
  5553                           ;src/print/format.c: 56:                 while (k < prn) {
  5554  0029C6  EF0A  F015         	goto	l6704
  5555  0029CA                     l6698:
  5556                           
  5557                           ;src/print/format.c: 57:                     if (decnum[k+1] != '.')
  5558  0029CA  501D               	movf	roundStr@k^0,w,c
  5559  0029CC  240E               	addwf	roundStr@decnum^0,w,c
  5560  0029CE  6E14               	movwf	??_roundStr^0,c
  5561  0029D0  501E               	movf	(roundStr@k+1)^0,w,c
  5562  0029D2  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5563  0029D4  6E15               	movwf	(??_roundStr+1)^0,c
  5564  0029D6  0E01               	movlw	1
  5565  0029D8  2414               	addwf	??_roundStr^0,w,c
  5566  0029DA  6ED9               	movwf	fsr2l,c
  5567  0029DC  0E00               	movlw	0
  5568  0029DE  2015               	addwfc	(??_roundStr+1)^0,w,c
  5569  0029E0  6EDA               	movwf	fsr2h,c
  5570  0029E2  0E2E               	movlw	46
  5571  0029E4  18DE               	xorwf	postinc2,w,c
  5572  0029E6  B4D8               	btfsc	status,2,c
  5573  0029E8  EFF8  F014         	goto	u7801
  5574  0029EC  EFFA  F014         	goto	u7800
  5575  0029F0                     u7801:
  5576  0029F0  EF08  F015         	goto	l6702
  5577  0029F4                     u7800:
  5578  0029F4                     
  5579                           ;src/print/format.c: 58:                         decnum[k+1]='0';
  5580  0029F4  501D               	movf	roundStr@k^0,w,c
  5581  0029F6  240E               	addwf	roundStr@decnum^0,w,c
  5582  0029F8  6E14               	movwf	??_roundStr^0,c
  5583  0029FA  501E               	movf	(roundStr@k+1)^0,w,c
  5584  0029FC  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5585  0029FE  6E15               	movwf	(??_roundStr+1)^0,c
  5586  002A00  0E01               	movlw	1
  5587  002A02  2414               	addwf	??_roundStr^0,w,c
  5588  002A04  6ED9               	movwf	fsr2l,c
  5589  002A06  0E00               	movlw	0
  5590  002A08  2015               	addwfc	(??_roundStr+1)^0,w,c
  5591  002A0A  6EDA               	movwf	fsr2h,c
  5592  002A0C  0E30               	movlw	48
  5593  002A0E  6EDF               	movwf	indf2,c
  5594  002A10                     l6702:
  5595                           
  5596                           ;src/print/format.c: 59:                     k++;
  5597  002A10  4A1D               	infsnz	roundStr@k^0,f,c
  5598  002A12  2A1E               	incf	(roundStr@k+1)^0,f,c
  5599  002A14                     l6704:
  5600                           
  5601                           ;src/print/format.c: 56:                 while (k < prn) {
  5602  002A14  5012               	movf	roundStr@prn^0,w,c
  5603  002A16  5C1D               	subwf	roundStr@k^0,w,c
  5604  002A18  501E               	movf	(roundStr@k+1)^0,w,c
  5605  002A1A  0A80               	xorlw	128
  5606  002A1C  6E14               	movwf	??_roundStr^0,c
  5607  002A1E  5013               	movf	(roundStr@prn+1)^0,w,c
  5608  002A20  0A80               	xorlw	128
  5609  002A22  5814               	subwfb	??_roundStr^0,w,c
  5610  002A24  A0D8               	btfss	status,0,c
  5611  002A26  EF17  F015         	goto	u7811
  5612  002A2A  EF19  F015         	goto	u7810
  5613  002A2E                     u7811:
  5614  002A2E  EFE5  F014         	goto	l6698
  5615  002A32                     u7810:
  5616  002A32  EF20  F015         	goto	l6710
  5617  002A36                     l6706:
  5618                           
  5619                           ;src/print/format.c: 64:     }
  5620  002A36  061D               	decf	roundStr@k^0,f,c
  5621  002A38  A0D8               	btfss	status,0,c
  5622  002A3A  061E               	decf	(roundStr@k+1)^0,f,c
  5623  002A3C  EFA8  F014         	goto	l6686
  5624  002A40                     l6710:
  5625                           
  5626                           ;src/print/format.c: 67:     if (k == -1 && e == -1) {
  5627  002A40  281D               	incf	roundStr@k^0,w,c
  5628  002A42  E106               	bnz	u7821
  5629  002A44  281E               	incf	(roundStr@k+1)^0,w,c
  5630  002A46  A4D8               	btfss	status,2,c
  5631  002A48  EF28  F015         	goto	u7821
  5632  002A4C  EF2A  F015         	goto	u7820
  5633  002A50                     u7821:
  5634  002A50  EFB2  F015         	goto	l6742
  5635  002A54                     u7820:
  5636  002A54  2810               	incf	roundStr@e^0,w,c
  5637  002A56  E106               	bnz	u7831
  5638  002A58  2811               	incf	(roundStr@e+1)^0,w,c
  5639  002A5A  A4D8               	btfss	status,2,c
  5640  002A5C  EF32  F015         	goto	u7831
  5641  002A60  EF34  F015         	goto	u7830
  5642  002A64                     u7831:
  5643  002A64  EFB2  F015         	goto	l6742
  5644  002A68                     u7830:
  5645  002A68                     
  5646                           ;src/print/format.c: 68:         if (decnum[0] == '+' || decnum[0] == '-') {
  5647  002A68  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  5648  002A6C  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  5649  002A70  0E2B               	movlw	43
  5650  002A72  18DE               	xorwf	postinc2,w,c
  5651  002A74  B4D8               	btfsc	status,2,c
  5652  002A76  EF3F  F015         	goto	u7841
  5653  002A7A  EF41  F015         	goto	u7840
  5654  002A7E                     u7841:
  5655  002A7E  EF4E  F015         	goto	l6718
  5656  002A82                     u7840:
  5657  002A82  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  5658  002A86  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  5659  002A8A  0E2D               	movlw	45
  5660  002A8C  18DE               	xorwf	postinc2,w,c
  5661  002A8E  A4D8               	btfss	status,2,c
  5662  002A90  EF4C  F015         	goto	u7851
  5663  002A94  EF4E  F015         	goto	u7850
  5664  002A98                     u7851:
  5665  002A98  EF5C  F015         	goto	l6722
  5666  002A9C                     u7850:
  5667  002A9C                     l6718:
  5668                           
  5669                           ;src/print/format.c: 69:             decnum[1] = '1';
  5670  002A9C  EE20 F001          	lfsr	2,1
  5671  002AA0  500E               	movf	roundStr@decnum^0,w,c
  5672  002AA2  26D9               	addwf	fsr2l,f,c
  5673  002AA4  500F               	movf	(roundStr@decnum+1)^0,w,c
  5674  002AA6  22DA               	addwfc	fsr2h,f,c
  5675  002AA8  0E31               	movlw	49
  5676  002AAA  6EDF               	movwf	indf2,c
  5677  002AAC                     
  5678                           ;src/print/format.c: 70:             i = 2;
  5679  002AAC  0E00               	movlw	0
  5680  002AAE  6E1C               	movwf	(roundStr@i+1)^0,c
  5681  002AB0  0E02               	movlw	2
  5682  002AB2  6E1B               	movwf	roundStr@i^0,c
  5683                           
  5684                           ;src/print/format.c: 71:         }
  5685  002AB4  EFA1  F015         	goto	l6740
  5686  002AB8                     l6722:
  5687                           
  5688                           ;src/print/format.c: 73:             decnum[0] = '1';
  5689  002AB8  C00E  FFD9         	movff	roundStr@decnum,fsr2l
  5690  002ABC  C00F  FFDA         	movff	roundStr@decnum+1,fsr2h
  5691  002AC0  0E31               	movlw	49
  5692  002AC2  6EDF               	movwf	indf2,c
  5693  002AC4                     
  5694                           ;src/print/format.c: 74:             i = 1;
  5695  002AC4  0E00               	movlw	0
  5696  002AC6  6E1C               	movwf	(roundStr@i+1)^0,c
  5697  002AC8  0E01               	movlw	1
  5698  002ACA  6E1B               	movwf	roundStr@i^0,c
  5699  002ACC  EFA1  F015         	goto	l6740
  5700  002AD0                     l6726:
  5701                           
  5702                           ;src/print/format.c: 77:             if (decnum[i] == '.') {
  5703  002AD0  501B               	movf	roundStr@i^0,w,c
  5704  002AD2  240E               	addwf	roundStr@decnum^0,w,c
  5705  002AD4  6ED9               	movwf	fsr2l,c
  5706  002AD6  501C               	movf	(roundStr@i+1)^0,w,c
  5707  002AD8  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5708  002ADA  6EDA               	movwf	fsr2h,c
  5709  002ADC  0E2E               	movlw	46
  5710  002ADE  18DE               	xorwf	postinc2,w,c
  5711  002AE0  A4D8               	btfss	status,2,c
  5712  002AE2  EF75  F015         	goto	u7861
  5713  002AE6  EF77  F015         	goto	u7860
  5714  002AEA                     u7861:
  5715  002AEA  EF91  F015         	goto	l6732
  5716  002AEE                     u7860:
  5717  002AEE                     
  5718                           ;src/print/format.c: 78:                 decnum[i]='0';
  5719  002AEE  501B               	movf	roundStr@i^0,w,c
  5720  002AF0  240E               	addwf	roundStr@decnum^0,w,c
  5721  002AF2  6ED9               	movwf	fsr2l,c
  5722  002AF4  501C               	movf	(roundStr@i+1)^0,w,c
  5723  002AF6  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5724  002AF8  6EDA               	movwf	fsr2h,c
  5725  002AFA  0E30               	movlw	48
  5726  002AFC  6EDF               	movwf	indf2,c
  5727                           
  5728                           ;src/print/format.c: 79:                 decnum[i+1]='.';
  5729  002AFE  501B               	movf	roundStr@i^0,w,c
  5730  002B00  240E               	addwf	roundStr@decnum^0,w,c
  5731  002B02  6E14               	movwf	??_roundStr^0,c
  5732  002B04  501C               	movf	(roundStr@i+1)^0,w,c
  5733  002B06  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5734  002B08  6E15               	movwf	(??_roundStr+1)^0,c
  5735  002B0A  0E01               	movlw	1
  5736  002B0C  2414               	addwf	??_roundStr^0,w,c
  5737  002B0E  6ED9               	movwf	fsr2l,c
  5738  002B10  0E00               	movlw	0
  5739  002B12  2015               	addwfc	(??_roundStr+1)^0,w,c
  5740  002B14  6EDA               	movwf	fsr2h,c
  5741  002B16  0E2E               	movlw	46
  5742  002B18  6EDF               	movwf	indf2,c
  5743  002B1A                     
  5744                           ;src/print/format.c: 80:                 i++;
  5745  002B1A  4A1B               	infsnz	roundStr@i^0,f,c
  5746  002B1C  2A1C               	incf	(roundStr@i+1)^0,f,c
  5747                           
  5748                           ;src/print/format.c: 81:             }
  5749  002B1E  EF99  F015         	goto	l6734
  5750  002B22                     l6732:
  5751                           
  5752                           ;src/print/format.c: 83:                 decnum[i]='0';
  5753  002B22  501B               	movf	roundStr@i^0,w,c
  5754  002B24  240E               	addwf	roundStr@decnum^0,w,c
  5755  002B26  6ED9               	movwf	fsr2l,c
  5756  002B28  501C               	movf	(roundStr@i+1)^0,w,c
  5757  002B2A  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5758  002B2C  6EDA               	movwf	fsr2h,c
  5759  002B2E  0E30               	movlw	48
  5760  002B30  6EDF               	movwf	indf2,c
  5761  002B32                     l6734:
  5762                           
  5763                           ;src/print/format.c: 84:             i++;
  5764  002B32  4A1B               	infsnz	roundStr@i^0,f,c
  5765  002B34  2A1C               	incf	(roundStr@i+1)^0,f,c
  5766  002B36                     
  5767                           ;src/print/format.c: 85:             return 1;
  5768  002B36  0E00               	movlw	0
  5769  002B38  6E0F               	movwf	(?_roundStr+1)^0,c
  5770  002B3A  0E01               	movlw	1
  5771  002B3C  6E0E               	movwf	?_roundStr^0,c
  5772  002B3E  EF06  F016         	goto	l388
  5773  002B42                     l6740:
  5774                           
  5775                           ;src/print/format.c: 76:         while (i < len) {
  5776  002B42  5017               	movf	roundStr@len^0,w,c
  5777  002B44  5C1B               	subwf	roundStr@i^0,w,c
  5778  002B46  501C               	movf	(roundStr@i+1)^0,w,c
  5779  002B48  0A80               	xorlw	128
  5780  002B4A  6E14               	movwf	??_roundStr^0,c
  5781  002B4C  5018               	movf	(roundStr@len+1)^0,w,c
  5782  002B4E  0A80               	xorlw	128
  5783  002B50  5814               	subwfb	??_roundStr^0,w,c
  5784  002B52  A0D8               	btfss	status,0,c
  5785  002B54  EFAE  F015         	goto	u7871
  5786  002B58  EFB0  F015         	goto	u7870
  5787  002B5C                     u7871:
  5788  002B5C  EF68  F015         	goto	l6726
  5789  002B60                     u7870:
  5790  002B60  EF02  F016         	goto	l6758
  5791  002B64                     l6742:
  5792  002B64  281D               	incf	roundStr@k^0,w,c
  5793  002B66  E106               	bnz	u7881
  5794  002B68  281E               	incf	(roundStr@k+1)^0,w,c
  5795  002B6A  A4D8               	btfss	status,2,c
  5796  002B6C  EFBA  F015         	goto	u7881
  5797  002B70  EFBC  F015         	goto	u7880
  5798  002B74                     u7881:
  5799  002B74  EF02  F016         	goto	l6758
  5800  002B78                     u7880:
  5801  002B78  2810               	incf	roundStr@e^0,w,c
  5802  002B7A  E108               	bnz	u7890
  5803  002B7C  2811               	incf	(roundStr@e+1)^0,w,c
  5804  002B7E  B4D8               	btfsc	status,2,c
  5805  002B80  EFC4  F015         	goto	u7891
  5806  002B84  EFC6  F015         	goto	u7890
  5807  002B88                     u7891:
  5808  002B88  EF02  F016         	goto	l6758
  5809  002B8C                     u7890:
  5810  002B8C                     
  5811                           ;src/print/format.c: 92:         decnum[p-1] = '1';
  5812  002B8C  5019               	movf	roundStr@p^0,w,c
  5813  002B8E  240E               	addwf	roundStr@decnum^0,w,c
  5814  002B90  6E14               	movwf	??_roundStr^0,c
  5815  002B92  501A               	movf	(roundStr@p+1)^0,w,c
  5816  002B94  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5817  002B96  6E15               	movwf	(??_roundStr+1)^0,c
  5818  002B98  0EFF               	movlw	255
  5819  002B9A  2414               	addwf	??_roundStr^0,w,c
  5820  002B9C  6ED9               	movwf	fsr2l,c
  5821  002B9E  0EFF               	movlw	255
  5822  002BA0  2015               	addwfc	(??_roundStr+1)^0,w,c
  5823  002BA2  6EDA               	movwf	fsr2h,c
  5824  002BA4  0E31               	movlw	49
  5825  002BA6  6EDF               	movwf	indf2,c
  5826  002BA8                     
  5827                           ;src/print/format.c: 93:         for(i = p+1;i < e;i++)
  5828  002BA8  0E01               	movlw	1
  5829  002BAA  2419               	addwf	roundStr@p^0,w,c
  5830  002BAC  6E1B               	movwf	roundStr@i^0,c
  5831  002BAE  0E00               	movlw	0
  5832  002BB0  201A               	addwfc	(roundStr@p+1)^0,w,c
  5833  002BB2  6E1C               	movwf	(roundStr@i+1)^0,c
  5834  002BB4  EFE6  F015         	goto	l6754
  5835  002BB8                     l6750:
  5836                           
  5837                           ;src/print/format.c: 94:             decnum[i] = '0';
  5838  002BB8  501B               	movf	roundStr@i^0,w,c
  5839  002BBA  240E               	addwf	roundStr@decnum^0,w,c
  5840  002BBC  6ED9               	movwf	fsr2l,c
  5841  002BBE  501C               	movf	(roundStr@i+1)^0,w,c
  5842  002BC0  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5843  002BC2  6EDA               	movwf	fsr2h,c
  5844  002BC4  0E30               	movlw	48
  5845  002BC6  6EDF               	movwf	indf2,c
  5846  002BC8  4A1B               	infsnz	roundStr@i^0,f,c
  5847  002BCA  2A1C               	incf	(roundStr@i+1)^0,f,c
  5848  002BCC                     l6754:
  5849  002BCC  5010               	movf	roundStr@e^0,w,c
  5850  002BCE  5C1B               	subwf	roundStr@i^0,w,c
  5851  002BD0  501C               	movf	(roundStr@i+1)^0,w,c
  5852  002BD2  0A80               	xorlw	128
  5853  002BD4  6E14               	movwf	??_roundStr^0,c
  5854  002BD6  5011               	movf	(roundStr@e+1)^0,w,c
  5855  002BD8  0A80               	xorlw	128
  5856  002BDA  5814               	subwfb	??_roundStr^0,w,c
  5857  002BDC  A0D8               	btfss	status,0,c
  5858  002BDE  EFF3  F015         	goto	u7901
  5859  002BE2  EFF5  F015         	goto	u7900
  5860  002BE6                     u7901:
  5861  002BE6  EFDC  F015         	goto	l6750
  5862  002BEA                     u7900:
  5863  002BEA                     
  5864                           ;src/print/format.c: 95:         decnum[e+2]++;
  5865  002BEA  5010               	movf	roundStr@e^0,w,c
  5866  002BEC  240E               	addwf	roundStr@decnum^0,w,c
  5867  002BEE  6E14               	movwf	??_roundStr^0,c
  5868  002BF0  5011               	movf	(roundStr@e+1)^0,w,c
  5869  002BF2  200F               	addwfc	(roundStr@decnum+1)^0,w,c
  5870  002BF4  6E15               	movwf	(??_roundStr+1)^0,c
  5871  002BF6  0E02               	movlw	2
  5872  002BF8  2414               	addwf	??_roundStr^0,w,c
  5873  002BFA  6ED9               	movwf	fsr2l,c
  5874  002BFC  0E00               	movlw	0
  5875  002BFE  2015               	addwfc	(??_roundStr+1)^0,w,c
  5876  002C00  6EDA               	movwf	fsr2h,c
  5877  002C02  2ADF               	incf	indf2,f,c
  5878  002C04                     l6758:
  5879                           
  5880                           ;src/print/format.c: 97:     return 0;
  5881  002C04  0E00               	movlw	0
  5882  002C06  6E0F               	movwf	(?_roundStr+1)^0,c
  5883  002C08  0E00               	movlw	0
  5884  002C0A  6E0E               	movwf	?_roundStr^0,c
  5885  002C0C                     l388:
  5886  002C0C  0012               	return		;funcret
  5887  002C0E                     __end_of_roundStr:
  5888                           	opt callstack 0
  5889                           
  5890 ;; *************** function _getWP *****************
  5891 ;; Defined at:
  5892 ;;		line 125 in file "src/print/format.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  form            2    0[BANK0 ] PTR unsigned char 
  5895 ;;		 -> my_vprintf@format(10), 
  5896 ;;  width           2    2[BANK0 ] PTR int 
  5897 ;;		 -> my_vprintf@width(2), 
  5898 ;;  precision       2    4[BANK0 ] PTR int 
  5899 ;;		 -> my_vprintf@prec(2), 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;  width_str       5   28[COMRAM] unsigned char [5]
  5902 ;;  prec_str        5   23[COMRAM] unsigned char [5]
  5903 ;;  j               2   41[COMRAM] int 
  5904 ;;  p               2   39[COMRAM] int 
  5905 ;;  k               2   37[COMRAM] int 
  5906 ;;  i               2   35[COMRAM] int 
  5907 ;;  len             2   33[COMRAM] int 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5917 ;;      Params:         0       6       0       0       0       0       0       0       0
  5918 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5919 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5920 ;;      Totals:        22       6       0       0       0       0       0       0       0
  5921 ;;Total ram usage:       28 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    4
  5924 ;; This function calls:
  5925 ;;		_atoui
  5926 ;;		_posc
  5927 ;;		_reverse
  5928 ;;		_searchc
  5929 ;;		_strlen
  5930 ;; This function is called by:
  5931 ;;		_my_vprintf
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text11
  5936  002EEE                     __ptext11:
  5937                           	opt callstack 0
  5938  002EEE                     _getWP:
  5939                           	opt callstack 25
  5940  002EEE                     
  5941                           ;src/print/format.c: 126:     int i, j, k;;src/print/format.c: 127:     int p;;src/print
      +                          /format.c: 128:     int len = strlen(form);
  5942  002EEE  C0C8  F004         	movff	getWP@form,strlen@s
  5943  002EF2  C0C9  F005         	movff	getWP@form+1,strlen@s+1
  5944  002EF6  EC44  F028         	call	_strlen	;wreg free
  5945  002EFA  C004  F022         	movff	?_strlen,getWP@len
  5946  002EFE  C005  F023         	movff	?_strlen+1,getWP@len+1
  5947  002F02                     
  5948                           ;src/print/format.c: 129:     char width_str[5] = "";
  5949  002F02  EE20  F01D         	lfsr	2,getWP@width_str
  5950  002F06  0E04               	movlw	4
  5951  002F08                     u8271:
  5952  002F08  6ADE               	clrf	postinc2,c
  5953  002F0A  06E8               	decf	wreg,f,c
  5954  002F0C  E2FD               	bc	u8271
  5955  002F0E                     
  5956                           ;src/print/format.c: 130:     char prec_str[5] = "";
  5957  002F0E  EE20  F018         	lfsr	2,getWP@prec_str
  5958  002F12  0E04               	movlw	4
  5959  002F14                     u8281:
  5960  002F14  6ADE               	clrf	postinc2,c
  5961  002F16  06E8               	decf	wreg,f,c
  5962  002F18  E2FD               	bc	u8281
  5963  002F1A                     
  5964                           ;src/print/format.c: 132:     i = 0;
  5965  002F1A  0E00               	movlw	0
  5966  002F1C  6E25               	movwf	(getWP@i+1)^0,c
  5967  002F1E  0E00               	movlw	0
  5968  002F20  6E24               	movwf	getWP@i^0,c
  5969  002F22                     
  5970                           ;src/print/format.c: 133:     k = 0;
  5971  002F22  0E00               	movlw	0
  5972  002F24  6E27               	movwf	(getWP@k+1)^0,c
  5973  002F26  0E00               	movlw	0
  5974  002F28  6E26               	movwf	getWP@k^0,c
  5975  002F2A                     
  5976                           ;src/print/format.c: 134:     zeros = 0;
  5977  002F2A  0E00               	movlw	0
  5978  002F2C  0100               	movlb	0	; () banked
  5979  002F2E  6FC6               	movwf	_zeros& (0+255),b
  5980  002F30                     
  5981                           ; BSR set to: 0
  5982                           ;src/print/format.c: 135:     precInt = 0;
  5983  002F30  0E00               	movlw	0
  5984  002F32  6FC5               	movwf	_precInt& (0+255),b
  5985                           
  5986                           ;src/print/format.c: 137:     sig = searchc(form, '+');
  5987  002F34  C0C8  F008         	movff	getWP@form,searchc@str
  5988  002F38  C0C9  F009         	movff	getWP@form+1,searchc@str+1
  5989  002F3C  0E2B               	movlw	43
  5990  002F3E  6E0A               	movwf	searchc@c^0,c
  5991  002F40  EC46  F026         	call	_searchc	;wreg free
  5992  002F44  6E3C               	movwf	_sig^0,c
  5993                           
  5994                           ;src/print/format.c: 138:     alingL = searchc(form, '-');
  5995  002F46  C0C8  F008         	movff	getWP@form,searchc@str
  5996  002F4A  C0C9  F009         	movff	getWP@form+1,searchc@str+1
  5997  002F4E  0E2D               	movlw	45
  5998  002F50  6E0A               	movwf	searchc@c^0,c
  5999  002F52  EC46  F026         	call	_searchc	;wreg free
  6000  002F56  6E3B               	movwf	_alingL^0,c
  6001                           
  6002                           ;src/print/format.c: 139:     space = searchc(form, ' ');
  6003  002F58  C0C8  F008         	movff	getWP@form,searchc@str
  6004  002F5C  C0C9  F009         	movff	getWP@form+1,searchc@str+1
  6005  002F60  0E20               	movlw	32
  6006  002F62  6E0A               	movwf	searchc@c^0,c
  6007  002F64  EC46  F026         	call	_searchc	;wreg free
  6008  002F68  0100               	movlb	0	; () banked
  6009  002F6A  6FC4               	movwf	_space& (0+255),b
  6010                           
  6011                           ;src/print/format.c: 140:     numeral = searchc(form, '#');
  6012  002F6C  C0C8  F008         	movff	getWP@form,searchc@str
  6013  002F70  C0C9  F009         	movff	getWP@form+1,searchc@str+1
  6014  002F74  0E23               	movlw	35
  6015  002F76  6E0A               	movwf	searchc@c^0,c
  6016  002F78  EC46  F026         	call	_searchc	;wreg free
  6017  002F7C  6E3A               	movwf	_numeral^0,c
  6018                           
  6019                           ;src/print/format.c: 142:     p = posc(form, '.');
  6020  002F7E  C0C8  F008         	movff	getWP@form,posc@str
  6021  002F82  C0C9  F009         	movff	getWP@form+1,posc@str+1
  6022  002F86  0E2E               	movlw	46
  6023  002F88  6E0A               	movwf	posc@c^0,c
  6024  002F8A  ECE7  F025         	call	_posc	;wreg free
  6025  002F8E  C008  F028         	movff	?_posc,getWP@p
  6026  002F92  C009  F029         	movff	?_posc+1,getWP@p+1
  6027  002F96                     
  6028                           ;src/print/format.c: 144:     for(j = 1; j < len; j++) {
  6029  002F96  0E00               	movlw	0
  6030  002F98  6E2B               	movwf	(getWP@j+1)^0,c
  6031  002F9A  0E01               	movlw	1
  6032  002F9C  6E2A               	movwf	getWP@j^0,c
  6033  002F9E  EF37  F018         	goto	l7052
  6034  002FA2                     l7032:
  6035                           
  6036                           ;src/print/format.c: 145:         if(form[j] >= '0' && form[j] <= '9') {
  6037  002FA2  502A               	movf	getWP@j^0,w,c
  6038  002FA4  0100               	movlb	0	; () banked
  6039  002FA6  25C8               	addwf	getWP@form& (0+255),w,b
  6040  002FA8  6ED9               	movwf	fsr2l,c
  6041  002FAA  502B               	movf	(getWP@j+1)^0,w,c
  6042  002FAC  21C9               	addwfc	(getWP@form+1)& (0+255),w,b
  6043  002FAE  6EDA               	movwf	fsr2h,c
  6044  002FB0  0E2F               	movlw	47
  6045  002FB2  64DF               	cpfsgt	indf2,c
  6046  002FB4  EFDE  F017         	goto	u8291
  6047  002FB8  EFE0  F017         	goto	u8290
  6048  002FBC                     u8291:
  6049  002FBC  EF35  F018         	goto	l7050
  6050  002FC0                     u8290:
  6051  002FC0                     
  6052                           ; BSR set to: 0
  6053  002FC0  502A               	movf	getWP@j^0,w,c
  6054  002FC2  25C8               	addwf	getWP@form& (0+255),w,b
  6055  002FC4  6ED9               	movwf	fsr2l,c
  6056  002FC6  502B               	movf	(getWP@j+1)^0,w,c
  6057  002FC8  21C9               	addwfc	(getWP@form+1)& (0+255),w,b
  6058  002FCA  6EDA               	movwf	fsr2h,c
  6059  002FCC  0E3A               	movlw	58
  6060  002FCE  60DF               	cpfslt	indf2,c
  6061  002FD0  EFEC  F017         	goto	u8301
  6062  002FD4  EFEE  F017         	goto	u8300
  6063  002FD8                     u8301:
  6064  002FD8  EF35  F018         	goto	l7050
  6065  002FDC                     u8300:
  6066  002FDC                     
  6067                           ; BSR set to: 0
  6068                           ;src/print/format.c: 146:             if ((j < p)|| (p < 0)) {
  6069  002FDC  5028               	movf	getWP@p^0,w,c
  6070  002FDE  5C2A               	subwf	getWP@j^0,w,c
  6071  002FE0  502B               	movf	(getWP@j+1)^0,w,c
  6072  002FE2  0A80               	xorlw	128
  6073  002FE4  6E16               	movwf	??_getWP^0,c
  6074  002FE6  5029               	movf	(getWP@p+1)^0,w,c
  6075  002FE8  0A80               	xorlw	128
  6076  002FEA  5816               	subwfb	??_getWP^0,w,c
  6077  002FEC  A0D8               	btfss	status,0,c
  6078  002FEE  EFFB  F017         	goto	u8311
  6079  002FF2  EFFD  F017         	goto	u8310
  6080  002FF6                     u8311:
  6081  002FF6  EF04  F018         	goto	l7040
  6082  002FFA                     u8310:
  6083  002FFA                     
  6084                           ; BSR set to: 0
  6085  002FFA  BE29               	btfsc	(getWP@p+1)^0,7,c
  6086  002FFC  EF04  F018         	goto	u8320
  6087  003000  EF02  F018         	goto	u8321
  6088  003004                     u8321:
  6089  003004  EF16  F018         	goto	l7044
  6090  003008                     u8320:
  6091  003008                     l7040:
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;src/print/format.c: 147:                 width_str[i] = form[j];
  6095  003008  502A               	movf	getWP@j^0,w,c
  6096  00300A  25C8               	addwf	getWP@form& (0+255),w,b
  6097  00300C  6ED9               	movwf	fsr2l,c
  6098  00300E  502B               	movf	(getWP@j+1)^0,w,c
  6099  003010  21C9               	addwfc	(getWP@form+1)& (0+255),w,b
  6100  003012  6EDA               	movwf	fsr2h,c
  6101  003014  0E1D               	movlw	low getWP@width_str
  6102  003016  2424               	addwf	getWP@i^0,w,c
  6103  003018  6EE1               	movwf	fsr1l,c
  6104  00301A  0E00               	movlw	high getWP@width_str
  6105  00301C  2025               	addwfc	(getWP@i+1)^0,w,c
  6106  00301E  6EE2               	movwf	fsr1h,c
  6107  003020  CFDF FFE7          	movff	indf2,indf1
  6108  003024                     
  6109                           ; BSR set to: 0
  6110                           ;src/print/format.c: 148:                 i++;
  6111  003024  4A24               	infsnz	getWP@i^0,f,c
  6112  003026  2A25               	incf	(getWP@i+1)^0,f,c
  6113                           
  6114                           ;src/print/format.c: 149:             }
  6115  003028  EF35  F018         	goto	l7050
  6116  00302C                     l7044:
  6117                           
  6118                           ; BSR set to: 0
  6119  00302C  502A               	movf	getWP@j^0,w,c
  6120  00302E  5C28               	subwf	getWP@p^0,w,c
  6121  003030  5029               	movf	(getWP@p+1)^0,w,c
  6122  003032  0A80               	xorlw	128
  6123  003034  6E16               	movwf	??_getWP^0,c
  6124  003036  502B               	movf	(getWP@j+1)^0,w,c
  6125  003038  0A80               	xorlw	128
  6126  00303A  5816               	subwfb	??_getWP^0,w,c
  6127  00303C  B0D8               	btfsc	status,0,c
  6128  00303E  EF23  F018         	goto	u8331
  6129  003042  EF25  F018         	goto	u8330
  6130  003046                     u8331:
  6131  003046  EF35  F018         	goto	l7050
  6132  00304A                     u8330:
  6133  00304A                     
  6134                           ; BSR set to: 0
  6135                           ;src/print/format.c: 151:                 prec_str[k] = form[j];
  6136  00304A  502A               	movf	getWP@j^0,w,c
  6137  00304C  25C8               	addwf	getWP@form& (0+255),w,b
  6138  00304E  6ED9               	movwf	fsr2l,c
  6139  003050  502B               	movf	(getWP@j+1)^0,w,c
  6140  003052  21C9               	addwfc	(getWP@form+1)& (0+255),w,b
  6141  003054  6EDA               	movwf	fsr2h,c
  6142  003056  0E18               	movlw	low getWP@prec_str
  6143  003058  2426               	addwf	getWP@k^0,w,c
  6144  00305A  6EE1               	movwf	fsr1l,c
  6145  00305C  0E00               	movlw	high getWP@prec_str
  6146  00305E  2027               	addwfc	(getWP@k+1)^0,w,c
  6147  003060  6EE2               	movwf	fsr1h,c
  6148  003062  CFDF FFE7          	movff	indf2,indf1
  6149  003066                     
  6150                           ; BSR set to: 0
  6151                           ;src/print/format.c: 152:                 k++;
  6152  003066  4A26               	infsnz	getWP@k^0,f,c
  6153  003068  2A27               	incf	(getWP@k+1)^0,f,c
  6154  00306A                     l7050:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;src/print/format.c: 155:     }
  6158  00306A  4A2A               	infsnz	getWP@j^0,f,c
  6159  00306C  2A2B               	incf	(getWP@j+1)^0,f,c
  6160  00306E                     l7052:
  6161  00306E  5022               	movf	getWP@len^0,w,c
  6162  003070  5C2A               	subwf	getWP@j^0,w,c
  6163  003072  502B               	movf	(getWP@j+1)^0,w,c
  6164  003074  0A80               	xorlw	128
  6165  003076  6E16               	movwf	??_getWP^0,c
  6166  003078  5023               	movf	(getWP@len+1)^0,w,c
  6167  00307A  0A80               	xorlw	128
  6168  00307C  5816               	subwfb	??_getWP^0,w,c
  6169  00307E  A0D8               	btfss	status,0,c
  6170  003080  EF44  F018         	goto	u8341
  6171  003084  EF46  F018         	goto	u8340
  6172  003088                     u8341:
  6173  003088  EFD1  F017         	goto	l7032
  6174  00308C                     u8340:
  6175  00308C                     
  6176                           ;src/print/format.c: 157:     if(width_str[0] == '0')
  6177  00308C  0E30               	movlw	48
  6178  00308E  181D               	xorwf	getWP@width_str^0,w,c
  6179  003090  A4D8               	btfss	status,2,c
  6180  003092  EF4D  F018         	goto	u8351
  6181  003096  EF4F  F018         	goto	u8350
  6182  00309A                     u8351:
  6183  00309A  EF52  F018         	goto	l7058
  6184  00309E                     u8350:
  6185  00309E                     
  6186                           ;src/print/format.c: 158:       zeros = 1;
  6187  00309E  0E01               	movlw	1
  6188  0030A0  0100               	movlb	0	; () banked
  6189  0030A2  6FC6               	movwf	_zeros& (0+255),b
  6190  0030A4                     l7058:
  6191                           
  6192                           ;src/print/format.c: 160:     reverse(width_str);
  6193  0030A4  0E1D               	movlw	low getWP@width_str
  6194  0030A6  6E12               	movwf	reverse@str^0,c
  6195  0030A8  0E00               	movlw	high getWP@width_str
  6196  0030AA  6E13               	movwf	(reverse@str+1)^0,c
  6197  0030AC  ECA3  F024         	call	_reverse	;wreg free
  6198  0030B0                     
  6199                           ;src/print/format.c: 161:     reverse(prec_str);
  6200  0030B0  0E18               	movlw	low getWP@prec_str
  6201  0030B2  6E12               	movwf	reverse@str^0,c
  6202  0030B4  0E00               	movlw	high getWP@prec_str
  6203  0030B6  6E13               	movwf	(reverse@str+1)^0,c
  6204  0030B8  ECA3  F024         	call	_reverse	;wreg free
  6205  0030BC                     
  6206                           ;src/print/format.c: 163:     if ((*width) == -1)
  6207  0030BC  C0CA  FFD9         	movff	getWP@width,fsr2l
  6208  0030C0  C0CB  FFDA         	movff	getWP@width+1,fsr2h
  6209  0030C4  28DE               	incf	postinc2,w,c
  6210  0030C6  E106               	bnz	u8361
  6211  0030C8  28DE               	incf	postinc2,w,c
  6212  0030CA  A4D8               	btfss	status,2,c
  6213  0030CC  EF6A  F018         	goto	u8361
  6214  0030D0  EF6C  F018         	goto	u8360
  6215  0030D4                     u8361:
  6216  0030D4  EF7A  F018         	goto	l7066
  6217  0030D8                     u8360:
  6218  0030D8                     
  6219                           ;src/print/format.c: 164:         (*width) = atoui(width_str);
  6220  0030D8  0E1D               	movlw	low getWP@width_str
  6221  0030DA  6E0A               	movwf	atoui@str^0,c
  6222  0030DC  0E00               	movlw	high getWP@width_str
  6223  0030DE  6E0B               	movwf	(atoui@str+1)^0,c
  6224  0030E0  EC2C  F023         	call	_atoui	;wreg free
  6225  0030E4  C0CA  FFD9         	movff	getWP@width,fsr2l
  6226  0030E8  C0CB  FFDA         	movff	getWP@width+1,fsr2h
  6227  0030EC  C00A  FFDE         	movff	?_atoui,postinc2
  6228  0030F0  C00B  FFDD         	movff	?_atoui+1,postdec2
  6229  0030F4                     l7066:
  6230                           
  6231                           ;src/print/format.c: 166:     if (p >= 0 && (*precision) == -1)
  6232  0030F4  BE29               	btfsc	(getWP@p+1)^0,7,c
  6233  0030F6  EF7F  F018         	goto	u8371
  6234  0030FA  EF81  F018         	goto	u8370
  6235  0030FE                     u8371:
  6236  0030FE  EF9D  F018         	goto	l426
  6237  003102                     u8370:
  6238  003102  C0CC  FFD9         	movff	getWP@precision,fsr2l
  6239  003106  C0CD  FFDA         	movff	getWP@precision+1,fsr2h
  6240  00310A  28DE               	incf	postinc2,w,c
  6241  00310C  E106               	bnz	u8381
  6242  00310E  28DE               	incf	postinc2,w,c
  6243  003110  A4D8               	btfss	status,2,c
  6244  003112  EF8D  F018         	goto	u8381
  6245  003116  EF8F  F018         	goto	u8380
  6246  00311A                     u8381:
  6247  00311A  EF9D  F018         	goto	l426
  6248  00311E                     u8380:
  6249  00311E                     
  6250                           ;src/print/format.c: 167:         (*precision) = atoui(prec_str);
  6251  00311E  0E18               	movlw	low getWP@prec_str
  6252  003120  6E0A               	movwf	atoui@str^0,c
  6253  003122  0E00               	movlw	high getWP@prec_str
  6254  003124  6E0B               	movwf	(atoui@str+1)^0,c
  6255  003126  EC2C  F023         	call	_atoui	;wreg free
  6256  00312A  C0CC  FFD9         	movff	getWP@precision,fsr2l
  6257  00312E  C0CD  FFDA         	movff	getWP@precision+1,fsr2h
  6258  003132  C00A  FFDE         	movff	?_atoui,postinc2
  6259  003136  C00B  FFDD         	movff	?_atoui+1,postdec2
  6260  00313A                     l426:
  6261  00313A  0012               	return		;funcret
  6262  00313C                     __end_of_getWP:
  6263                           	opt callstack 0
  6264                           
  6265 ;; *************** function _searchc *****************
  6266 ;; Defined at:
  6267 ;;		line 11 in file "src/print/format.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  str             2    7[COMRAM] PTR unsigned char 
  6270 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), 
  6271 ;;  c               1    9[COMRAM] unsigned char 
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;  a               2   11[COMRAM] int 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      _Bool 
  6276 ;; Registers used:
  6277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6283 ;;      Params:         3       0       0       0       0       0       0       0       0
  6284 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6285 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6286 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6287 ;;Total ram usage:        6 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    3
  6290 ;; This function calls:
  6291 ;;		_strlen
  6292 ;; This function is called by:
  6293 ;;		_getWP
  6294 ;;		_precF
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           	psect	text12
  6299  004C8C                     __ptext12:
  6300                           	opt callstack 0
  6301  004C8C                     _searchc:
  6302                           	opt callstack 25
  6303  004C8C                     
  6304                           ;src/print/format.c: 12:     int a;;src/print/format.c: 13:     for(a = 0; a < strlen(st
      +                          r); a++)
  6305  004C8C  0E00               	movlw	0
  6306  004C8E  6E0D               	movwf	(searchc@a+1)^0,c
  6307  004C90  0E00               	movlw	0
  6308  004C92  6E0C               	movwf	searchc@a^0,c
  6309  004C94  EF60  F026         	goto	l6676
  6310  004C98                     l6668:
  6311                           
  6312                           ;src/print/format.c: 14:     {;src/print/format.c: 15:         if (str[a]==c)
  6313  004C98  500C               	movf	searchc@a^0,w,c
  6314  004C9A  2408               	addwf	searchc@str^0,w,c
  6315  004C9C  6ED9               	movwf	fsr2l,c
  6316  004C9E  500D               	movf	(searchc@a+1)^0,w,c
  6317  004CA0  2009               	addwfc	(searchc@str+1)^0,w,c
  6318  004CA2  6EDA               	movwf	fsr2h,c
  6319  004CA4  500A               	movf	searchc@c^0,w,c
  6320  004CA6  18DE               	xorwf	postinc2,w,c
  6321  004CA8  A4D8               	btfss	status,2,c
  6322  004CAA  EF59  F026         	goto	u7741
  6323  004CAE  EF5B  F026         	goto	u7740
  6324  004CB2                     u7741:
  6325  004CB2  EF5E  F026         	goto	l6674
  6326  004CB6                     u7740:
  6327  004CB6                     
  6328                           ;src/print/format.c: 16:             return 1;
  6329  004CB6  0E01               	movlw	1
  6330  004CB8  EF72  F026         	goto	l360
  6331  004CBC                     l6674:
  6332                           
  6333                           ;src/print/format.c: 17:     }
  6334  004CBC  4A0C               	infsnz	searchc@a^0,f,c
  6335  004CBE  2A0D               	incf	(searchc@a+1)^0,f,c
  6336  004CC0                     l6676:
  6337  004CC0  C008  F004         	movff	searchc@str,strlen@s
  6338  004CC4  C009  F005         	movff	searchc@str+1,strlen@s+1
  6339  004CC8  EC44  F028         	call	_strlen	;wreg free
  6340  004CCC  5004               	movf	?_strlen^0,w,c
  6341  004CCE  5C0C               	subwf	searchc@a^0,w,c
  6342  004CD0  5005               	movf	(?_strlen+1)^0,w,c
  6343  004CD2  580D               	subwfb	(searchc@a+1)^0,w,c
  6344  004CD4  A0D8               	btfss	status,0,c
  6345  004CD6  EF6F  F026         	goto	u7751
  6346  004CDA  EF71  F026         	goto	u7750
  6347  004CDE                     u7751:
  6348  004CDE  EF4C  F026         	goto	l6668
  6349  004CE2                     u7750:
  6350  004CE2                     
  6351                           ;src/print/format.c: 18:     return 0;
  6352  004CE2  0E00               	movlw	0
  6353  004CE4                     l360:
  6354  004CE4  0012               	return		;funcret
  6355  004CE6                     __end_of_searchc:
  6356                           	opt callstack 0
  6357                           
  6358 ;; *************** function _posc *****************
  6359 ;; Defined at:
  6360 ;;		line 24 in file "src/print/format.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  str             2    7[COMRAM] PTR unsigned char 
  6363 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), 
  6364 ;;  c               1    9[COMRAM] unsigned char 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  a               2   11[COMRAM] int 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  2    7[COMRAM] int 
  6369 ;; Registers used:
  6370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6376 ;;      Params:         3       0       0       0       0       0       0       0       0
  6377 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6378 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6379 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6380 ;;Total ram usage:        6 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    3
  6383 ;; This function calls:
  6384 ;;		_strlen
  6385 ;; This function is called by:
  6386 ;;		_roundStr
  6387 ;;		_getWP
  6388 ;;		_precF
  6389 ;;		_precE
  6390 ;;		_precG
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text13
  6395  004BCE                     __ptext13:
  6396                           	opt callstack 0
  6397  004BCE                     _posc:
  6398                           	opt callstack 24
  6399  004BCE                     
  6400                           ;src/print/format.c: 25:     int a;;src/print/format.c: 26:     for(a = 0; a < strlen(st
      +                          r); a++)
  6401  004BCE  0E00               	movlw	0
  6402  004BD0  6E0D               	movwf	(posc@a+1)^0,c
  6403  004BD2  0E00               	movlw	0
  6404  004BD4  6E0C               	movwf	posc@a^0,c
  6405  004BD6  EF04  F026         	goto	l6068
  6406  004BDA                     l6062:
  6407                           
  6408                           ;src/print/format.c: 27:     {;src/print/format.c: 28:         if (str[a]==c)
  6409  004BDA  500C               	movf	posc@a^0,w,c
  6410  004BDC  2408               	addwf	posc@str^0,w,c
  6411  004BDE  6ED9               	movwf	fsr2l,c
  6412  004BE0  500D               	movf	(posc@a+1)^0,w,c
  6413  004BE2  2009               	addwfc	(posc@str+1)^0,w,c
  6414  004BE4  6EDA               	movwf	fsr2h,c
  6415  004BE6  500A               	movf	posc@c^0,w,c
  6416  004BE8  18DE               	xorwf	postinc2,w,c
  6417  004BEA  A4D8               	btfss	status,2,c
  6418  004BEC  EFFA  F025         	goto	u6711
  6419  004BF0  EFFC  F025         	goto	u6710
  6420  004BF4                     u6711:
  6421  004BF4  EF02  F026         	goto	l6066
  6422  004BF8                     u6710:
  6423  004BF8                     
  6424                           ;src/print/format.c: 29:             return a;
  6425  004BF8  C00C  F008         	movff	posc@a,?_posc
  6426  004BFC  C00D  F009         	movff	posc@a+1,?_posc+1
  6427  004C00  EF17  F026         	goto	l367
  6428  004C04                     l6066:
  6429                           
  6430                           ;src/print/format.c: 30:     }
  6431  004C04  4A0C               	infsnz	posc@a^0,f,c
  6432  004C06  2A0D               	incf	(posc@a+1)^0,f,c
  6433  004C08                     l6068:
  6434  004C08  C008  F004         	movff	posc@str,strlen@s
  6435  004C0C  C009  F005         	movff	posc@str+1,strlen@s+1
  6436  004C10  EC44  F028         	call	_strlen	;wreg free
  6437  004C14  5004               	movf	?_strlen^0,w,c
  6438  004C16  5C0C               	subwf	posc@a^0,w,c
  6439  004C18  5005               	movf	(?_strlen+1)^0,w,c
  6440  004C1A  580D               	subwfb	(posc@a+1)^0,w,c
  6441  004C1C  A0D8               	btfss	status,0,c
  6442  004C1E  EF13  F026         	goto	u6721
  6443  004C22  EF15  F026         	goto	u6720
  6444  004C26                     u6721:
  6445  004C26  EFED  F025         	goto	l6062
  6446  004C2A                     u6720:
  6447  004C2A                     
  6448                           ;src/print/format.c: 31:     return -1;
  6449  004C2A  6808               	setf	?_posc^0,c
  6450  004C2C  6809               	setf	(?_posc+1)^0,c
  6451  004C2E                     l367:
  6452  004C2E  0012               	return		;funcret
  6453  004C30                     __end_of_posc:
  6454                           	opt callstack 0
  6455                           
  6456 ;; *************** function _atoui *****************
  6457 ;; Defined at:
  6458 ;;		line 57 in file "src/print/toString.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  str             2    9[COMRAM] PTR unsigned char 
  6461 ;;		 -> getWP@prec_str(5), getWP@width_str(5), 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  i               2   16[COMRAM] int 
  6464 ;;  vp              2   14[COMRAM] int 
  6465 ;;  num             2   12[COMRAM] int 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  2    9[COMRAM] int 
  6468 ;; Registers used:
  6469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6475 ;;      Params:         2       0       0       0       0       0       0       0       0
  6476 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6477 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6478 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6479 ;;Total ram usage:        9 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:    3
  6482 ;; This function calls:
  6483 ;;		___wmul
  6484 ;;		_strlen
  6485 ;; This function is called by:
  6486 ;;		_getWP
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text14
  6491  004658                     __ptext14:
  6492                           	opt callstack 0
  6493  004658                     _atoui:
  6494                           	opt callstack 25
  6495  004658                     
  6496                           ;src/print/toString.c: 58:     int i;;src/print/toString.c: 59:     int num = 0;
  6497  004658  0E00               	movlw	0
  6498  00465A  6E0E               	movwf	(atoui@num+1)^0,c
  6499  00465C  0E00               	movlw	0
  6500  00465E  6E0D               	movwf	atoui@num^0,c
  6501                           
  6502                           ;src/print/toString.c: 60:     int vp = 1;
  6503  004660  0E00               	movlw	0
  6504  004662  6E10               	movwf	(atoui@vp+1)^0,c
  6505  004664  0E01               	movlw	1
  6506  004666  6E0F               	movwf	atoui@vp^0,c
  6507                           
  6508                           ;src/print/toString.c: 62:     for (i = 0; i < strlen(str); i++) {
  6509  004668  0E00               	movlw	0
  6510  00466A  6E12               	movwf	(atoui@i+1)^0,c
  6511  00466C  0E00               	movlw	0
  6512  00466E  6E11               	movwf	atoui@i^0,c
  6513  004670  EF7E  F023         	goto	l6774
  6514  004674                     l6764:
  6515                           
  6516                           ;src/print/toString.c: 63:         if(str[i] >= '0' && str[i] <= '9'){
  6517  004674  5011               	movf	atoui@i^0,w,c
  6518  004676  240A               	addwf	atoui@str^0,w,c
  6519  004678  6ED9               	movwf	fsr2l,c
  6520  00467A  5012               	movf	(atoui@i+1)^0,w,c
  6521  00467C  200B               	addwfc	(atoui@str+1)^0,w,c
  6522  00467E  6EDA               	movwf	fsr2h,c
  6523  004680  0E2F               	movlw	47
  6524  004682  64DF               	cpfsgt	indf2,c
  6525  004684  EF46  F023         	goto	u7911
  6526  004688  EF48  F023         	goto	u7910
  6527  00468C                     u7911:
  6528  00468C  EF8F  F023         	goto	l720
  6529  004690                     u7910:
  6530  004690  5011               	movf	atoui@i^0,w,c
  6531  004692  240A               	addwf	atoui@str^0,w,c
  6532  004694  6ED9               	movwf	fsr2l,c
  6533  004696  5012               	movf	(atoui@i+1)^0,w,c
  6534  004698  200B               	addwfc	(atoui@str+1)^0,w,c
  6535  00469A  6EDA               	movwf	fsr2h,c
  6536  00469C  0E3A               	movlw	58
  6537  00469E  60DF               	cpfslt	indf2,c
  6538  0046A0  EF54  F023         	goto	u7921
  6539  0046A4  EF56  F023         	goto	u7920
  6540  0046A8                     u7921:
  6541  0046A8  EF8F  F023         	goto	l720
  6542  0046AC                     u7920:
  6543  0046AC                     
  6544                           ;src/print/toString.c: 64:             num += (str[i] - 48) * vp;
  6545  0046AC  5011               	movf	atoui@i^0,w,c
  6546  0046AE  240A               	addwf	atoui@str^0,w,c
  6547  0046B0  6ED9               	movwf	fsr2l,c
  6548  0046B2  5012               	movf	(atoui@i+1)^0,w,c
  6549  0046B4  200B               	addwfc	(atoui@str+1)^0,w,c
  6550  0046B6  6EDA               	movwf	fsr2h,c
  6551  0046B8  50DF               	movf	indf2,w,c
  6552  0046BA  6E0C               	movwf	??_atoui^0,c
  6553  0046BC  0ED0               	movlw	208
  6554  0046BE  240C               	addwf	??_atoui^0,w,c
  6555  0046C0  6E04               	movwf	___wmul@multiplier^0,c
  6556  0046C2  6A05               	clrf	(___wmul@multiplier+1)^0,c
  6557  0046C4  0EFF               	movlw	255
  6558  0046C6  2205               	addwfc	(___wmul@multiplier+1)^0,f,c
  6559  0046C8  C00F  F006         	movff	atoui@vp,___wmul@multiplicand
  6560  0046CC  C010  F007         	movff	atoui@vp+1,___wmul@multiplicand+1
  6561  0046D0  EC72  F028         	call	___wmul	;wreg free
  6562  0046D4  5004               	movf	?___wmul^0,w,c
  6563  0046D6  260D               	addwf	atoui@num^0,f,c
  6564  0046D8  5005               	movf	(?___wmul+1)^0,w,c
  6565  0046DA  220E               	addwfc	(atoui@num+1)^0,f,c
  6566  0046DC                     
  6567                           ;src/print/toString.c: 65:             vp *= 10;
  6568  0046DC  C00F  F004         	movff	atoui@vp,___wmul@multiplier
  6569  0046E0  C010  F005         	movff	atoui@vp+1,___wmul@multiplier+1
  6570  0046E4  0E00               	movlw	0
  6571  0046E6  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  6572  0046E8  0E0A               	movlw	10
  6573  0046EA  6E06               	movwf	___wmul@multiplicand^0,c
  6574  0046EC  EC72  F028         	call	___wmul	;wreg free
  6575  0046F0  C004  F00F         	movff	?___wmul,atoui@vp
  6576  0046F4  C005  F010         	movff	?___wmul+1,atoui@vp+1
  6577  0046F8                     
  6578                           ;src/print/toString.c: 69:     }
  6579  0046F8  4A11               	infsnz	atoui@i^0,f,c
  6580  0046FA  2A12               	incf	(atoui@i+1)^0,f,c
  6581  0046FC                     l6774:
  6582  0046FC  C00A  F004         	movff	atoui@str,strlen@s
  6583  004700  C00B  F005         	movff	atoui@str+1,strlen@s+1
  6584  004704  EC44  F028         	call	_strlen	;wreg free
  6585  004708  5004               	movf	?_strlen^0,w,c
  6586  00470A  5C11               	subwf	atoui@i^0,w,c
  6587  00470C  5005               	movf	(?_strlen+1)^0,w,c
  6588  00470E  5812               	subwfb	(atoui@i+1)^0,w,c
  6589  004710  A0D8               	btfss	status,0,c
  6590  004712  EF8D  F023         	goto	u7931
  6591  004716  EF8F  F023         	goto	u7930
  6592  00471A                     u7931:
  6593  00471A  EF3A  F023         	goto	l6764
  6594  00471E                     u7930:
  6595  00471E                     l720:
  6596                           
  6597                           ;src/print/toString.c: 70:     return num;
  6598  00471E  C00D  F00A         	movff	atoui@num,?_atoui
  6599  004722  C00E  F00B         	movff	atoui@num+1,?_atoui+1
  6600  004726  0012               	return		;funcret
  6601  004728                     __end_of_atoui:
  6602                           	opt callstack 0
  6603                           
  6604 ;; *************** function ___wmul *****************
  6605 ;; Defined at:
  6606 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  multiplier      2    3[COMRAM] unsigned int 
  6609 ;;  multiplicand    2    5[COMRAM] unsigned int 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  product         2    7[COMRAM] unsigned int 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  2    3[COMRAM] unsigned int 
  6614 ;; Registers used:
  6615 ;;		wreg, status,2, status,0, prodl, prodh
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6621 ;;      Params:         4       0       0       0       0       0       0       0       0
  6622 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6624 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6625 ;;Total ram usage:        6 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:    2
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_atoui
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text15
  6636  0050E4                     __ptext15:
  6637                           	opt callstack 0
  6638  0050E4                     ___wmul:
  6639                           	opt callstack 25
  6640  0050E4  5004               	movf	___wmul@multiplier^0,w,c
  6641  0050E6  0206               	mulwf	___wmul@multiplicand^0,c
  6642  0050E8  CFF3 F008          	movff	prodl,___wmul@product
  6643  0050EC  CFF4 F009          	movff	prodh,___wmul@product+1
  6644  0050F0  5004               	movf	___wmul@multiplier^0,w,c
  6645  0050F2  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  6646  0050F4  50F3               	movf	243,w,c
  6647  0050F6  2609               	addwf	(___wmul@product+1)^0,f,c
  6648  0050F8  5005               	movf	(___wmul@multiplier+1)^0,w,c
  6649  0050FA  0206               	mulwf	___wmul@multiplicand^0,c
  6650  0050FC  50F3               	movf	243,w,c
  6651  0050FE  2609               	addwf	(___wmul@product+1)^0,f,c
  6652  005100  C008  F004         	movff	___wmul@product,?___wmul
  6653  005104  C009  F005         	movff	___wmul@product+1,?___wmul+1
  6654  005108  0012               	return		;funcret
  6655  00510A                     __end_of___wmul:
  6656                           	opt callstack 0
  6657                           
  6658 ;; *************** function _ftoa_sci *****************
  6659 ;; Defined at:
  6660 ;;		line 97 in file "src/print/toString.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  buffer          2    8[BANK0 ] PTR unsigned char 
  6663 ;;		 -> my_vprintf@buffer(64), 
  6664 ;;  value           4   10[BANK0 ] PTR unsigned char 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  digit           2   40[COMRAM] int 
  6667 ;;  exponent        2   44[COMRAM] int 
  6668 ;;  i               2   42[COMRAM] int 
  6669 ;;  digit           2   38[COMRAM] int 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  2    8[BANK0 ] int 
  6672 ;; Registers used:
  6673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6679 ;;      Params:         0       6       0       0       0       0       0       0       0
  6680 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6682 ;;      Totals:         8       6       0       0       0       0       0       0       0
  6683 ;;Total ram usage:       14 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; Hardware stack levels required when called:    5
  6686 ;; This function calls:
  6687 ;;		___fleq
  6688 ;;		___flmul
  6689 ;;		___flneg
  6690 ;;		___flsub
  6691 ;;		___fltol
  6692 ;;		___xxtofl
  6693 ;;		_itoa
  6694 ;;		_normalize
  6695 ;; This function is called by:
  6696 ;;		_my_vprintf
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text16
  6701  002C0E                     __ptext16:
  6702                           	opt callstack 0
  6703  002C0E                     _ftoa_sci:
  6704                           	opt callstack 24
  6705  002C0E                     
  6706                           ;src/print/toString.c: 101:     static const int width = 6;;src/print/toString.c: 103:  
      +                             if (value == 0.0) {
  6707  002C0E  C0D2  F004         	movff	ftoa_sci@value,___fleq@ff1
  6708  002C12  C0D3  F005         	movff	ftoa_sci@value+1,___fleq@ff1+1
  6709  002C16  C0D4  F006         	movff	ftoa_sci@value+2,___fleq@ff1+2
  6710  002C1A  C0D5  F007         	movff	ftoa_sci@value+3,___fleq@ff1+3
  6711  002C1E  0E00               	movlw	0
  6712  002C20  6E08               	movwf	___fleq@ff2^0,c
  6713  002C22  0E00               	movlw	0
  6714  002C24  6E09               	movwf	(___fleq@ff2+1)^0,c
  6715  002C26  0E00               	movlw	0
  6716  002C28  6E0A               	movwf	(___fleq@ff2+2)^0,c
  6717  002C2A  0E00               	movlw	0
  6718  002C2C  6E0B               	movwf	(___fleq@ff2+3)^0,c
  6719  002C2E  EC4E  F024         	call	___fleq	;wreg free
  6720  002C32  A0D8               	btfss	status,0,c
  6721  002C34  EF1E  F016         	goto	u9281
  6722  002C38  EF20  F016         	goto	u9280
  6723  002C3C                     u9281:
  6724  002C3C  EF35  F016         	goto	l7546
  6725  002C40                     u9280:
  6726  002C40                     
  6727                           ;src/print/toString.c: 104:         buffer[0] = '0';
  6728  002C40  C0D0  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6729  002C44  C0D1  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6730  002C48  0E30               	movlw	48
  6731  002C4A  6EDF               	movwf	indf2,c
  6732  002C4C                     
  6733                           ;src/print/toString.c: 105:         buffer[1] = '\0';
  6734  002C4C  0100               	movlb	0	; () banked
  6735  002C4E  EE20 F001          	lfsr	2,1
  6736  002C52  51D0               	movf	ftoa_sci@buffer& (0+255),w,b
  6737  002C54  26D9               	addwf	fsr2l,f,c
  6738  002C56  51D1               	movf	(ftoa_sci@buffer+1)& (0+255),w,b
  6739  002C58  22DA               	addwfc	fsr2h,f,c
  6740  002C5A  0E00               	movlw	0
  6741  002C5C  6EDF               	movwf	indf2,c
  6742  002C5E                     
  6743                           ; BSR set to: 0
  6744                           ;src/print/toString.c: 106:         return 0;
  6745  002C5E  0E00               	movlw	0
  6746  002C60  6FD1               	movwf	(?_ftoa_sci+1)& (0+255),b
  6747  002C62  0E00               	movlw	0
  6748  002C64  6FD0               	movwf	?_ftoa_sci& (0+255),b
  6749  002C66  EF76  F017         	goto	l736
  6750  002C6A                     l7546:
  6751                           
  6752                           ;src/print/toString.c: 109:     if (value < 0.0) {
  6753  002C6A  0100               	movlb	0	; () banked
  6754  002C6C  BFD5               	btfsc	(ftoa_sci@value+3)& (0+255),7,b
  6755  002C6E  EF3D  F016         	goto	u9290
  6756  002C72  EF3B  F016         	goto	u9291
  6757  002C76                     u9291:
  6758  002C76  EF4F  F016         	goto	l7550
  6759  002C7A                     u9290:
  6760  002C7A                     
  6761                           ; BSR set to: 0
  6762                           ;src/print/toString.c: 110:         value = -value;
  6763  002C7A  C0D2  F004         	movff	ftoa_sci@value,___flneg@f1
  6764  002C7E  C0D3  F005         	movff	ftoa_sci@value+1,___flneg@f1+1
  6765  002C82  C0D4  F006         	movff	ftoa_sci@value+2,___flneg@f1+2
  6766  002C86  C0D5  F007         	movff	ftoa_sci@value+3,___flneg@f1+3
  6767  002C8A  EC28  F028         	call	___flneg	;wreg free
  6768  002C8E  C004  F0D2         	movff	?___flneg,ftoa_sci@value
  6769  002C92  C005  F0D3         	movff	?___flneg+1,ftoa_sci@value+1
  6770  002C96  C006  F0D4         	movff	?___flneg+2,ftoa_sci@value+2
  6771  002C9A  C007  F0D5         	movff	?___flneg+3,ftoa_sci@value+3
  6772  002C9E                     l7550:
  6773                           
  6774                           ;src/print/toString.c: 113:     exponent = normalize(&value);
  6775  002C9E  0ED2               	movlw	low ftoa_sci@value
  6776  002CA0  6E1D               	movwf	normalize@val^0,c
  6777  002CA2  0E00               	movlw	high ftoa_sci@value
  6778  002CA4  6E1E               	movwf	(normalize@val+1)^0,c
  6779  002CA6  EC10  F020         	call	_normalize	;wreg free
  6780  002CAA  C01D  F02D         	movff	?_normalize,ftoa_sci@exponent
  6781  002CAE  C01E  F02E         	movff	?_normalize+1,ftoa_sci@exponent+1
  6782  002CB2                     
  6783                           ;src/print/toString.c: 115:     int digit = value * 10.0;
  6784  002CB2  0E00               	movlw	0
  6785  002CB4  6E08               	movwf	___flmul@a^0,c
  6786  002CB6  0E00               	movlw	0
  6787  002CB8  6E09               	movwf	(___flmul@a+1)^0,c
  6788  002CBA  0E20               	movlw	32
  6789  002CBC  6E0A               	movwf	(___flmul@a+2)^0,c
  6790  002CBE  0E41               	movlw	65
  6791  002CC0  6E0B               	movwf	(___flmul@a+3)^0,c
  6792  002CC2  C0D2  F004         	movff	ftoa_sci@value,___flmul@b
  6793  002CC6  C0D3  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  6794  002CCA  C0D4  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  6795  002CCE  C0D5  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  6796  002CD2  EC11  F00F         	call	___flmul	;wreg free
  6797  002CD6  C004  F01D         	movff	?___flmul,___fltol@f1
  6798  002CDA  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  6799  002CDE  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  6800  002CE2  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  6801  002CE6  ECB1  F021         	call	___fltol	;wreg free
  6802  002CEA  C01D  F027         	movff	?___fltol,ftoa_sci@digit
  6803  002CEE  C01E  F028         	movff	?___fltol+1,ftoa_sci@digit+1
  6804  002CF2                     
  6805                           ;src/print/toString.c: 116:     *buffer++ = digit + '0';
  6806  002CF2  5027               	movf	ftoa_sci@digit^0,w,c
  6807  002CF4  0F30               	addlw	48
  6808  002CF6  C0D0  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6809  002CFA  C0D1  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6810  002CFE  6EDF               	movwf	indf2,c
  6811  002D00  0100               	movlb	0	; () banked
  6812  002D02  4BD0               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6813  002D04  2BD1               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6814  002D06                     
  6815                           ; BSR set to: 0
  6816                           ;src/print/toString.c: 117:     value = value * 10.0 - digit;
  6817  002D06  0E00               	movlw	0
  6818  002D08  6E08               	movwf	___flmul@a^0,c
  6819  002D0A  0E00               	movlw	0
  6820  002D0C  6E09               	movwf	(___flmul@a+1)^0,c
  6821  002D0E  0E20               	movlw	32
  6822  002D10  6E0A               	movwf	(___flmul@a+2)^0,c
  6823  002D12  0E41               	movlw	65
  6824  002D14  6E0B               	movwf	(___flmul@a+3)^0,c
  6825  002D16  C0D2  F004         	movff	ftoa_sci@value,___flmul@b
  6826  002D1A  C0D3  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  6827  002D1E  C0D4  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  6828  002D22  C0D5  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  6829  002D26  EC11  F00F         	call	___flmul	;wreg free
  6830  002D2A  C004  F01D         	movff	?___flmul,___flsub@b
  6831  002D2E  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  6832  002D32  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  6833  002D36  C007  F020         	movff	?___flmul+3,___flsub@b+3
  6834  002D3A  C027  F004         	movff	ftoa_sci@digit,___xxtofl@val
  6835  002D3E  C028  F005         	movff	ftoa_sci@digit+1,___xxtofl@val+1
  6836  002D42  0E00               	movlw	0
  6837  002D44  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  6838  002D46  0EFF               	movlw	-1
  6839  002D48  6E06               	movwf	(___xxtofl@val+2)^0,c
  6840  002D4A  6E07               	movwf	(___xxtofl@val+3)^0,c
  6841  002D4C  0E01               	movlw	1
  6842  002D4E  ECA0  F01B         	call	___xxtofl
  6843  002D52  C004  F021         	movff	?___xxtofl,___flsub@a
  6844  002D56  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  6845  002D5A  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  6846  002D5E  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  6847  002D62  EC60  F027         	call	___flsub	;wreg free
  6848  002D66  C01D  F0D2         	movff	?___flsub,ftoa_sci@value
  6849  002D6A  C01E  F0D3         	movff	?___flsub+1,ftoa_sci@value+1
  6850  002D6E  C01F  F0D4         	movff	?___flsub+2,ftoa_sci@value+2
  6851  002D72  C020  F0D5         	movff	?___flsub+3,ftoa_sci@value+3
  6852  002D76                     
  6853                           ;src/print/toString.c: 118:     --exponent;
  6854  002D76  062D               	decf	ftoa_sci@exponent^0,f,c
  6855  002D78  A0D8               	btfss	status,0,c
  6856  002D7A  062E               	decf	(ftoa_sci@exponent+1)^0,f,c
  6857  002D7C                     
  6858                           ;src/print/toString.c: 120:     *buffer++ = '.';
  6859  002D7C  C0D0  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6860  002D80  C0D1  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6861  002D84  0E2E               	movlw	46
  6862  002D86  6EDF               	movwf	indf2,c
  6863  002D88  0100               	movlb	0	; () banked
  6864  002D8A  4BD0               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6865  002D8C  2BD1               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6866  002D8E                     
  6867                           ; BSR set to: 0
  6868                           ;src/print/toString.c: 121:     int i;;src/print/toString.c: 122:     for (i = 0; i < wi
      +                          dth; i++) {
  6869  002D8E  0E00               	movlw	0
  6870  002D90  6E2C               	movwf	(ftoa_sci@i+1)^0,c
  6871  002D92  0E00               	movlw	0
  6872  002D94  6E2B               	movwf	ftoa_sci@i^0,c
  6873  002D96                     l7572:
  6874                           
  6875                           ;src/print/toString.c: 123:         int digit = value * 10.0;
  6876  002D96  0E00               	movlw	0
  6877  002D98  6E08               	movwf	___flmul@a^0,c
  6878  002D9A  0E00               	movlw	0
  6879  002D9C  6E09               	movwf	(___flmul@a+1)^0,c
  6880  002D9E  0E20               	movlw	32
  6881  002DA0  6E0A               	movwf	(___flmul@a+2)^0,c
  6882  002DA2  0E41               	movlw	65
  6883  002DA4  6E0B               	movwf	(___flmul@a+3)^0,c
  6884  002DA6  C0D2  F004         	movff	ftoa_sci@value,___flmul@b
  6885  002DAA  C0D3  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  6886  002DAE  C0D4  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  6887  002DB2  C0D5  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  6888  002DB6  EC11  F00F         	call	___flmul	;wreg free
  6889  002DBA  C004  F01D         	movff	?___flmul,___fltol@f1
  6890  002DBE  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  6891  002DC2  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  6892  002DC6  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  6893  002DCA  ECB1  F021         	call	___fltol	;wreg free
  6894  002DCE  C01D  F029         	movff	?___fltol,ftoa_sci@digit_1677
  6895  002DD2  C01E  F02A         	movff	?___fltol+1,ftoa_sci@digit_1677+1
  6896  002DD6                     
  6897                           ;src/print/toString.c: 124:         *buffer++ = digit + '0';
  6898  002DD6  5029               	movf	ftoa_sci@digit_1677^0,w,c
  6899  002DD8  0F30               	addlw	48
  6900  002DDA  C0D0  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6901  002DDE  C0D1  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6902  002DE2  6EDF               	movwf	indf2,c
  6903  002DE4  0100               	movlb	0	; () banked
  6904  002DE6  4BD0               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6905  002DE8  2BD1               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6906  002DEA                     
  6907                           ; BSR set to: 0
  6908                           ;src/print/toString.c: 125:         value = value * 10.0 - digit;
  6909  002DEA  0E00               	movlw	0
  6910  002DEC  6E08               	movwf	___flmul@a^0,c
  6911  002DEE  0E00               	movlw	0
  6912  002DF0  6E09               	movwf	(___flmul@a+1)^0,c
  6913  002DF2  0E20               	movlw	32
  6914  002DF4  6E0A               	movwf	(___flmul@a+2)^0,c
  6915  002DF6  0E41               	movlw	65
  6916  002DF8  6E0B               	movwf	(___flmul@a+3)^0,c
  6917  002DFA  C0D2  F004         	movff	ftoa_sci@value,___flmul@b
  6918  002DFE  C0D3  F005         	movff	ftoa_sci@value+1,___flmul@b+1
  6919  002E02  C0D4  F006         	movff	ftoa_sci@value+2,___flmul@b+2
  6920  002E06  C0D5  F007         	movff	ftoa_sci@value+3,___flmul@b+3
  6921  002E0A  EC11  F00F         	call	___flmul	;wreg free
  6922  002E0E  C004  F01D         	movff	?___flmul,___flsub@b
  6923  002E12  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  6924  002E16  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  6925  002E1A  C007  F020         	movff	?___flmul+3,___flsub@b+3
  6926  002E1E  C029  F004         	movff	ftoa_sci@digit_1677,___xxtofl@val
  6927  002E22  C02A  F005         	movff	ftoa_sci@digit_1677+1,___xxtofl@val+1
  6928  002E26  0E00               	movlw	0
  6929  002E28  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  6930  002E2A  0EFF               	movlw	-1
  6931  002E2C  6E06               	movwf	(___xxtofl@val+2)^0,c
  6932  002E2E  6E07               	movwf	(___xxtofl@val+3)^0,c
  6933  002E30  0E01               	movlw	1
  6934  002E32  ECA0  F01B         	call	___xxtofl
  6935  002E36  C004  F021         	movff	?___xxtofl,___flsub@a
  6936  002E3A  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  6937  002E3E  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  6938  002E42  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  6939  002E46  EC60  F027         	call	___flsub	;wreg free
  6940  002E4A  C01D  F0D2         	movff	?___flsub,ftoa_sci@value
  6941  002E4E  C01E  F0D3         	movff	?___flsub+1,ftoa_sci@value+1
  6942  002E52  C01F  F0D4         	movff	?___flsub+2,ftoa_sci@value+2
  6943  002E56  C020  F0D5         	movff	?___flsub+3,ftoa_sci@value+3
  6944  002E5A                     
  6945                           ;src/print/toString.c: 126:     }
  6946  002E5A  4A2B               	infsnz	ftoa_sci@i^0,f,c
  6947  002E5C  2A2C               	incf	(ftoa_sci@i+1)^0,f,c
  6948  002E5E  BE2C               	btfsc	(ftoa_sci@i+1)^0,7,c
  6949  002E60  EF3B  F017         	goto	u9301
  6950  002E64  502C               	movf	(ftoa_sci@i+1)^0,w,c
  6951  002E66  E109               	bnz	u9300
  6952  002E68  0E06               	movlw	6
  6953  002E6A  5C2B               	subwf	ftoa_sci@i^0,w,c
  6954  002E6C  A0D8               	btfss	status,0,c
  6955  002E6E  EF3B  F017         	goto	u9301
  6956  002E72  EF3D  F017         	goto	u9300
  6957  002E76                     u9301:
  6958  002E76  EFCB  F016         	goto	l7572
  6959  002E7A                     u9300:
  6960  002E7A                     
  6961                           ;src/print/toString.c: 128:     *buffer++ = 'e';
  6962  002E7A  C0D0  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6963  002E7E  C0D1  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6964  002E82  0E65               	movlw	101
  6965  002E84  6EDF               	movwf	indf2,c
  6966  002E86  0100               	movlb	0	; () banked
  6967  002E88  4BD0               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6968  002E8A  2BD1               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6969  002E8C                     
  6970                           ; BSR set to: 0
  6971                           ;src/print/toString.c: 129:     if (exponent >= 0)
  6972  002E8C  BE2E               	btfsc	(ftoa_sci@exponent+1)^0,7,c
  6973  002E8E  EF4B  F017         	goto	u9311
  6974  002E92  EF4D  F017         	goto	u9310
  6975  002E96                     u9311:
  6976  002E96  EF57  F017         	goto	l7594
  6977  002E9A                     u9310:
  6978  002E9A                     
  6979                           ; BSR set to: 0
  6980                           ;src/print/toString.c: 130:         *buffer++ = '+';
  6981  002E9A  C0D0  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6982  002E9E  C0D1  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6983  002EA2  0E2B               	movlw	43
  6984  002EA4  6EDF               	movwf	indf2,c
  6985  002EA6                     l7592:
  6986                           
  6987                           ; BSR set to: 0
  6988  002EA6  4BD0               	infsnz	ftoa_sci@buffer& (0+255),f,b
  6989  002EA8  2BD1               	incf	(ftoa_sci@buffer+1)& (0+255),f,b
  6990  002EAA  EF5F  F017         	goto	l7598
  6991  002EAE                     l7594:
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;src/print/toString.c: 132:         *buffer++ = '-';
  6995  002EAE  C0D0  FFD9         	movff	ftoa_sci@buffer,fsr2l
  6996  002EB2  C0D1  FFDA         	movff	ftoa_sci@buffer+1,fsr2h
  6997  002EB6  0E2D               	movlw	45
  6998  002EB8  6EDF               	movwf	indf2,c
  6999  002EBA  EF53  F017         	goto	l7592
  7000  002EBE                     l7598:
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;src/print/toString.c: 133:     itoa(buffer, exponent, 10);
  7004  002EBE  C0D0  F0C8         	movff	ftoa_sci@buffer,itoa@str
  7005  002EC2  C0D1  F0C9         	movff	ftoa_sci@buffer+1,itoa@str+1
  7006  002EC6  C02D  F0CA         	movff	ftoa_sci@exponent,itoa@num
  7007  002ECA  C02E  F0CB         	movff	ftoa_sci@exponent+1,itoa@num+1
  7008  002ECE  0E00               	movlw	0
  7009  002ED0  BFCB               	btfsc	(itoa@num+1)& (0+255),7,b
  7010  002ED2  0EFF               	movlw	-1
  7011  002ED4  6FCC               	movwf	(itoa@num+2)& (0+255),b
  7012  002ED6  6FCD               	movwf	(itoa@num+3)& (0+255),b
  7013  002ED8  0E00               	movlw	0
  7014  002EDA  6FCF               	movwf	(itoa@base_+1)& (0+255),b
  7015  002EDC  0E0A               	movlw	10
  7016  002EDE  6FCE               	movwf	itoa@base_& (0+255),b
  7017  002EE0  EC4C  F01D         	call	_itoa	;wreg free
  7018  002EE4                     
  7019                           ;src/print/toString.c: 134:     return exponent;
  7020  002EE4  C02D  F0D0         	movff	ftoa_sci@exponent,?_ftoa_sci
  7021  002EE8  C02E  F0D1         	movff	ftoa_sci@exponent+1,?_ftoa_sci+1
  7022  002EEC                     l736:
  7023  002EEC  0012               	return		;funcret
  7024  002EEE                     __end_of_ftoa_sci:
  7025                           	opt callstack 0
  7026                           
  7027 ;; *************** function _itoa *****************
  7028 ;; Defined at:
  7029 ;;		line 22 in file "src/print/toString.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  str             2    0[BANK0 ] PTR unsigned char 
  7032 ;;		 -> my_vprintf@buffer(64), 
  7033 ;;  num             4    2[BANK0 ] long 
  7034 ;;  base_           2    6[BANK0 ] int 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  rem             4   27[COMRAM] long 
  7037 ;;  i               2   31[COMRAM] int 
  7038 ;;  isNegative      2    0        int 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  2    0[BANK0 ] PTR unsigned char 
  7041 ;; Registers used:
  7042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7048 ;;      Params:         0       8       0       0       0       0       0       0       0
  7049 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7051 ;;      Totals:        12       8       0       0       0       0       0       0       0
  7052 ;;Total ram usage:       20 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    4
  7055 ;; This function calls:
  7056 ;;		___aldiv
  7057 ;;		___almod
  7058 ;;		_reverse
  7059 ;; This function is called by:
  7060 ;;		_my_vprintf
  7061 ;;		_ftoa_sci
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text17
  7066  003A98                     __ptext17:
  7067                           	opt callstack 0
  7068  003A98                     _itoa:
  7069                           	opt callstack 25
  7070  003A98                     
  7071                           ;src/print/toString.c: 23:     int i = 0;
  7072  003A98  0E00               	movlw	0
  7073  003A9A  6E21               	movwf	(itoa@i+1)^0,c
  7074  003A9C  0E00               	movlw	0
  7075  003A9E  6E20               	movwf	itoa@i^0,c
  7076  003AA0                     
  7077                           ;src/print/toString.c: 27:     if (num == 0) {
  7078  003AA0  0100               	movlb	0	; () banked
  7079  003AA2  51CA               	movf	itoa@num& (0+255),w,b
  7080  003AA4  11CB               	iorwf	(itoa@num+1)& (0+255),w,b
  7081  003AA6  11CC               	iorwf	(itoa@num+2)& (0+255),w,b
  7082  003AA8  11CD               	iorwf	(itoa@num+3)& (0+255),w,b
  7083  003AAA  A4D8               	btfss	status,2,c
  7084  003AAC  EF5A  F01D         	goto	u7941
  7085  003AB0  EF5C  F01D         	goto	u7940
  7086  003AB4                     u7941:
  7087  003AB4  EF6E  F01D         	goto	l6788
  7088  003AB8                     u7940:
  7089  003AB8                     
  7090                           ; BSR set to: 0
  7091                           ;src/print/toString.c: 28:         str[i++] = '0';
  7092  003AB8  C0C8  FFD9         	movff	itoa@str,fsr2l
  7093  003ABC  C0C9  FFDA         	movff	itoa@str+1,fsr2h
  7094  003AC0  0E30               	movlw	48
  7095  003AC2  6EDF               	movwf	indf2,c
  7096  003AC4                     
  7097                           ; BSR set to: 0
  7098  003AC4  4A20               	infsnz	itoa@i^0,f,c
  7099  003AC6  2A21               	incf	(itoa@i+1)^0,f,c
  7100  003AC8                     
  7101                           ; BSR set to: 0
  7102                           ;src/print/toString.c: 29:         str[i] = '\0';
  7103  003AC8  5020               	movf	itoa@i^0,w,c
  7104  003ACA  25C8               	addwf	itoa@str& (0+255),w,b
  7105  003ACC  6ED9               	movwf	fsr2l,c
  7106  003ACE  5021               	movf	(itoa@i+1)^0,w,c
  7107  003AD0  21C9               	addwfc	(itoa@str+1)& (0+255),w,b
  7108  003AD2  6EDA               	movwf	fsr2h,c
  7109  003AD4  0E00               	movlw	0
  7110  003AD6  6EDF               	movwf	indf2,c
  7111  003AD8  EF0E  F01E         	goto	l705
  7112  003ADC                     l6788:
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;src/print/toString.c: 34:     if (num < 0 && base_ == 10) {
  7116  003ADC  BFCD               	btfsc	(itoa@num+3)& (0+255),7,b
  7117  003ADE  EF75  F01D         	goto	u7950
  7118  003AE2  EF73  F01D         	goto	u7951
  7119  003AE6                     u7951:
  7120  003AE6  EFF4  F01D         	goto	l6810
  7121  003AEA                     u7950:
  7122  003AEA                     
  7123                           ; BSR set to: 0
  7124  003AEA  0E0A               	movlw	10
  7125  003AEC  19CE               	xorwf	itoa@base_& (0+255),w,b
  7126  003AEE  11CF               	iorwf	(itoa@base_+1)& (0+255),w,b
  7127  003AF0  A4D8               	btfss	status,2,c
  7128  003AF2  EF7D  F01D         	goto	u7961
  7129  003AF6  EF7F  F01D         	goto	u7960
  7130  003AFA                     u7961:
  7131  003AFA  EFF4  F01D         	goto	l6810
  7132  003AFE                     u7960:
  7133  003AFE                     
  7134                           ; BSR set to: 0
  7135                           ;src/print/toString.c: 36:         num = -num;
  7136  003AFE  1FCD               	comf	(itoa@num+3)& (0+255),f,b
  7137  003B00  1FCC               	comf	(itoa@num+2)& (0+255),f,b
  7138  003B02  1FCB               	comf	(itoa@num+1)& (0+255),f,b
  7139  003B04  6DCA               	negf	itoa@num& (0+255),b
  7140  003B06  0E00               	movlw	0
  7141  003B08  23CB               	addwfc	(itoa@num+1)& (0+255),f,b
  7142  003B0A  23CC               	addwfc	(itoa@num+2)& (0+255),f,b
  7143  003B0C  23CD               	addwfc	(itoa@num+3)& (0+255),f,b
  7144  003B0E  EFF4  F01D         	goto	l6810
  7145  003B12                     l6796:
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;src/print/toString.c: 41:         long rem = num % base_;
  7149  003B12  C0CA  F004         	movff	itoa@num,___almod@dividend
  7150  003B16  C0CB  F005         	movff	itoa@num+1,___almod@dividend+1
  7151  003B1A  C0CC  F006         	movff	itoa@num+2,___almod@dividend+2
  7152  003B1E  C0CD  F007         	movff	itoa@num+3,___almod@dividend+3
  7153  003B22  C0CE  F008         	movff	itoa@base_,___almod@divisor
  7154  003B26  C0CF  F009         	movff	itoa@base_+1,___almod@divisor+1
  7155  003B2A  0E00               	movlw	0
  7156  003B2C  BE09               	btfsc	(___almod@divisor+1)^0,7,c
  7157  003B2E  0EFF               	movlw	-1
  7158  003B30  6E0A               	movwf	(___almod@divisor+2)^0,c
  7159  003B32  6E0B               	movwf	(___almod@divisor+3)^0,c
  7160  003B34  ECB6  F022         	call	___almod	;wreg free
  7161  003B38  C004  F01C         	movff	?___almod,itoa@rem
  7162  003B3C  C005  F01D         	movff	?___almod+1,itoa@rem+1
  7163  003B40  C006  F01E         	movff	?___almod+2,itoa@rem+2
  7164  003B44  C007  F01F         	movff	?___almod+3,itoa@rem+3
  7165  003B48                     
  7166                           ;src/print/toString.c: 42:         str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';
  7167  003B48  BE1F               	btfsc	(itoa@rem+3)^0,7,c
  7168  003B4A  EFB4  F01D         	goto	u7970
  7169  003B4E  501F               	movf	(itoa@rem+3)^0,w,c
  7170  003B50  101E               	iorwf	(itoa@rem+2)^0,w,c
  7171  003B52  101D               	iorwf	(itoa@rem+1)^0,w,c
  7172  003B54  E107               	bnz	u7971
  7173  003B56  0E0A               	movlw	10
  7174  003B58  5C1C               	subwf	itoa@rem^0,w,c
  7175  003B5A  B0D8               	btfsc	status,0,c
  7176  003B5C  EFB2  F01D         	goto	u7971
  7177  003B60  EFB4  F01D         	goto	u7970
  7178  003B64                     u7971:
  7179  003B64  EFC2  F01D         	goto	l6802
  7180  003B68                     u7970:
  7181  003B68  0E30               	movlw	48
  7182  003B6A  241C               	addwf	itoa@rem^0,w,c
  7183  003B6C  6E18               	movwf	_itoa$1659^0,c
  7184  003B6E  0E00               	movlw	0
  7185  003B70  201D               	addwfc	(itoa@rem+1)^0,w,c
  7186  003B72  6E19               	movwf	(_itoa$1659+1)^0,c
  7187  003B74  0E00               	movlw	0
  7188  003B76  201E               	addwfc	(itoa@rem+2)^0,w,c
  7189  003B78  6E1A               	movwf	(_itoa$1659+2)^0,c
  7190  003B7A  0E00               	movlw	0
  7191  003B7C  201F               	addwfc	(itoa@rem+3)^0,w,c
  7192  003B7E  6E1B               	movwf	(_itoa$1659+3)^0,c
  7193  003B80  EFCE  F01D         	goto	l6804
  7194  003B84                     l6802:
  7195  003B84  0E57               	movlw	87
  7196  003B86  241C               	addwf	itoa@rem^0,w,c
  7197  003B88  6E18               	movwf	_itoa$1659^0,c
  7198  003B8A  0E00               	movlw	0
  7199  003B8C  201D               	addwfc	(itoa@rem+1)^0,w,c
  7200  003B8E  6E19               	movwf	(_itoa$1659+1)^0,c
  7201  003B90  0E00               	movlw	0
  7202  003B92  201E               	addwfc	(itoa@rem+2)^0,w,c
  7203  003B94  6E1A               	movwf	(_itoa$1659+2)^0,c
  7204  003B96  0E00               	movlw	0
  7205  003B98  201F               	addwfc	(itoa@rem+3)^0,w,c
  7206  003B9A  6E1B               	movwf	(_itoa$1659+3)^0,c
  7207  003B9C                     l6804:
  7208  003B9C  5020               	movf	itoa@i^0,w,c
  7209  003B9E  0100               	movlb	0	; () banked
  7210  003BA0  25C8               	addwf	itoa@str& (0+255),w,b
  7211  003BA2  6ED9               	movwf	fsr2l,c
  7212  003BA4  5021               	movf	(itoa@i+1)^0,w,c
  7213  003BA6  21C9               	addwfc	(itoa@str+1)& (0+255),w,b
  7214  003BA8  6EDA               	movwf	fsr2h,c
  7215  003BAA  C018  FFDF         	movff	_itoa$1659,indf2
  7216  003BAE                     
  7217                           ; BSR set to: 0
  7218  003BAE  4A20               	infsnz	itoa@i^0,f,c
  7219  003BB0  2A21               	incf	(itoa@i+1)^0,f,c
  7220  003BB2                     
  7221                           ; BSR set to: 0
  7222                           ;src/print/toString.c: 43:         num = num/base_;
  7223  003BB2  C0CA  F004         	movff	itoa@num,___aldiv@dividend
  7224  003BB6  C0CB  F005         	movff	itoa@num+1,___aldiv@dividend+1
  7225  003BBA  C0CC  F006         	movff	itoa@num+2,___aldiv@dividend+2
  7226  003BBE  C0CD  F007         	movff	itoa@num+3,___aldiv@dividend+3
  7227  003BC2  C0CE  F008         	movff	itoa@base_,___aldiv@divisor
  7228  003BC6  C0CF  F009         	movff	itoa@base_+1,___aldiv@divisor+1
  7229  003BCA  0E00               	movlw	0
  7230  003BCC  BE09               	btfsc	(___aldiv@divisor+1)^0,7,c
  7231  003BCE  0EFF               	movlw	-1
  7232  003BD0  6E0A               	movwf	(___aldiv@divisor+2)^0,c
  7233  003BD2  6E0B               	movwf	(___aldiv@divisor+3)^0,c
  7234  003BD4  EC2B  F021         	call	___aldiv	;wreg free
  7235  003BD8  C004  F0CA         	movff	?___aldiv,itoa@num
  7236  003BDC  C005  F0CB         	movff	?___aldiv+1,itoa@num+1
  7237  003BE0  C006  F0CC         	movff	?___aldiv+2,itoa@num+2
  7238  003BE4  C007  F0CD         	movff	?___aldiv+3,itoa@num+3
  7239  003BE8                     l6810:
  7240                           
  7241                           ;src/print/toString.c: 40:     while (num != 0) {
  7242  003BE8  0100               	movlb	0	; () banked
  7243  003BEA  51CA               	movf	itoa@num& (0+255),w,b
  7244  003BEC  11CB               	iorwf	(itoa@num+1)& (0+255),w,b
  7245  003BEE  11CC               	iorwf	(itoa@num+2)& (0+255),w,b
  7246  003BF0  11CD               	iorwf	(itoa@num+3)& (0+255),w,b
  7247  003BF2  A4D8               	btfss	status,2,c
  7248  003BF4  EFFE  F01D         	goto	u7981
  7249  003BF8  EF00  F01E         	goto	u7980
  7250  003BFC                     u7981:
  7251  003BFC  EF89  F01D         	goto	l6796
  7252  003C00                     u7980:
  7253  003C00                     
  7254                           ; BSR set to: 0
  7255                           ;src/print/toString.c: 46:     str[i] = '\0';
  7256  003C00  5020               	movf	itoa@i^0,w,c
  7257  003C02  25C8               	addwf	itoa@str& (0+255),w,b
  7258  003C04  6ED9               	movwf	fsr2l,c
  7259  003C06  5021               	movf	(itoa@i+1)^0,w,c
  7260  003C08  21C9               	addwfc	(itoa@str+1)& (0+255),w,b
  7261  003C0A  6EDA               	movwf	fsr2h,c
  7262  003C0C  0E00               	movlw	0
  7263  003C0E  6EDF               	movwf	indf2,c
  7264  003C10                     
  7265                           ; BSR set to: 0
  7266                           ;src/print/toString.c: 49:     reverse(str);
  7267  003C10  C0C8  F012         	movff	itoa@str,reverse@str
  7268  003C14  C0C9  F013         	movff	itoa@str+1,reverse@str+1
  7269  003C18  ECA3  F024         	call	_reverse	;wreg free
  7270  003C1C                     l705:
  7271  003C1C  0012               	return		;funcret
  7272  003C1E                     __end_of_itoa:
  7273                           	opt callstack 0
  7274                           
  7275 ;; *************** function _reverse *****************
  7276 ;; Defined at:
  7277 ;;		line 8 in file "src/print/toString.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  str             2   17[COMRAM] PTR unsigned char 
  7280 ;;		 -> my_vprintf@buffer(64), getWP@prec_str(5), getWP@width_str(5), 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;  auxstr         64    0[BANK1 ] unsigned char [64]
  7283 ;;  i               2   66[BANK1 ] int 
  7284 ;;  j               2   64[BANK1 ] int 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7294 ;;      Params:         2       0       0       0       0       0       0       0       0
  7295 ;;      Locals:         0       0      68       0       0       0       0       0       0
  7296 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7297 ;;      Totals:         4       0      68       0       0       0       0       0       0
  7298 ;;Total ram usage:       72 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    3
  7301 ;; This function calls:
  7302 ;;		_strcpy
  7303 ;;		_strlen
  7304 ;; This function is called by:
  7305 ;;		_getWP
  7306 ;;		_itoa
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text18
  7311  004946                     __ptext18:
  7312                           	opt callstack 0
  7313  004946                     _reverse:
  7314                           	opt callstack 25
  7315  004946                     
  7316                           ;src/print/toString.c: 9:     int i;;src/print/toString.c: 10:     int j = strlen(str) -
      +                          1;
  7317  004946  C012  F004         	movff	reverse@str,strlen@s
  7318  00494A  C013  F005         	movff	reverse@str+1,strlen@s+1
  7319  00494E  EC44  F028         	call	_strlen	;wreg free
  7320  004952  0EFF               	movlw	255
  7321  004954  2404               	addwf	?_strlen^0,w,c
  7322  004956  0101               	movlb	1	; () banked
  7323  004958  6F40               	movwf	reverse@j& (0+255),b
  7324  00495A  0EFF               	movlw	255
  7325  00495C  2005               	addwfc	(?_strlen+1)^0,w,c
  7326  00495E  6F41               	movwf	(reverse@j+1)& (0+255),b
  7327  004960                     
  7328                           ; BSR set to: 1
  7329                           ;src/print/toString.c: 11:     char auxstr[64] = " ";
  7330  004960  EE22  F080         	lfsr	2,reverse@F192
  7331  004964  EE11  F000         	lfsr	1,reverse@auxstr
  7332  004968  0E3F               	movlw	63
  7333  00496A                     u6731:
  7334  00496A  CFDB FFE3          	movff	plusw2,plusw1
  7335  00496E  06E8               	decf	wreg,f,c
  7336  004970  E2FC               	bc	u6731
  7337  004972                     
  7338                           ; BSR set to: 1
  7339                           ;src/print/toString.c: 13:     for(i = 0; i <= j;i++)
  7340  004972  0E00               	movlw	0
  7341  004974  6F43               	movwf	(reverse@i+1)& (0+255),b
  7342  004976  0E00               	movlw	0
  7343  004978  6F42               	movwf	reverse@i& (0+255),b
  7344  00497A  EFD5  F024         	goto	l6080
  7345  00497E                     l6076:
  7346                           
  7347                           ; BSR set to: 1
  7348                           ;src/print/toString.c: 14:          auxstr[i] = str[j-i];
  7349  00497E  5142               	movf	reverse@i& (0+255),w,b
  7350  004980  5C12               	subwf	reverse@str^0,w,c
  7351  004982  6E14               	movwf	??_reverse^0,c
  7352  004984  5143               	movf	(reverse@i+1)& (0+255),w,b
  7353  004986  5813               	subwfb	(reverse@str+1)^0,w,c
  7354  004988  6E15               	movwf	(??_reverse+1)^0,c
  7355  00498A  5140               	movf	reverse@j& (0+255),w,b
  7356  00498C  2414               	addwf	??_reverse^0,w,c
  7357  00498E  6ED9               	movwf	fsr2l,c
  7358  004990  5141               	movf	(reverse@j+1)& (0+255),w,b
  7359  004992  2015               	addwfc	(??_reverse+1)^0,w,c
  7360  004994  6EDA               	movwf	fsr2h,c
  7361  004996  0E00               	movlw	low reverse@auxstr
  7362  004998  2542               	addwf	reverse@i& (0+255),w,b
  7363  00499A  6EE1               	movwf	fsr1l,c
  7364  00499C  0E01               	movlw	high reverse@auxstr
  7365  00499E  2143               	addwfc	(reverse@i+1)& (0+255),w,b
  7366  0049A0  6EE2               	movwf	fsr1h,c
  7367  0049A2  CFDF FFE7          	movff	indf2,indf1
  7368  0049A6                     
  7369                           ; BSR set to: 1
  7370  0049A6  4B42               	infsnz	reverse@i& (0+255),f,b
  7371  0049A8  2B43               	incf	(reverse@i+1)& (0+255),f,b
  7372  0049AA                     l6080:
  7373                           
  7374                           ; BSR set to: 1
  7375  0049AA  5142               	movf	reverse@i& (0+255),w,b
  7376  0049AC  5D40               	subwf	reverse@j& (0+255),w,b
  7377  0049AE  5141               	movf	(reverse@j+1)& (0+255),w,b
  7378  0049B0  0A80               	xorlw	128
  7379  0049B2  6E14               	movwf	??_reverse^0,c
  7380  0049B4  5143               	movf	(reverse@i+1)& (0+255),w,b
  7381  0049B6  0A80               	xorlw	128
  7382  0049B8  5814               	subwfb	??_reverse^0,w,c
  7383  0049BA  B0D8               	btfsc	status,0,c
  7384  0049BC  EFE2  F024         	goto	u6741
  7385  0049C0  EFE4  F024         	goto	u6740
  7386  0049C4                     u6741:
  7387  0049C4  EFBF  F024         	goto	l6076
  7388  0049C8                     u6740:
  7389  0049C8                     
  7390                           ; BSR set to: 1
  7391                           ;src/print/toString.c: 16:     strcpy(str, auxstr);
  7392  0049C8  C012  F008         	movff	reverse@str,strcpy@dest
  7393  0049CC  C013  F009         	movff	reverse@str+1,strcpy@dest+1
  7394  0049D0  0E00               	movlw	low reverse@auxstr
  7395  0049D2  6E0A               	movwf	strcpy@src^0,c
  7396  0049D4  0E01               	movlw	high reverse@auxstr
  7397  0049D6  6E0B               	movwf	(strcpy@src+1)^0,c
  7398  0049D8  EC18  F026         	call	_strcpy	;wreg free
  7399  0049DC  0012               	return		;funcret
  7400  0049DE                     __end_of_reverse:
  7401                           	opt callstack 0
  7402                           
  7403 ;; *************** function _strcpy *****************
  7404 ;; Defined at:
  7405 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  dest            2    7[COMRAM] PTR unsigned char 
  7408 ;;		 -> my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), getWP@width_str(5), 
  7409 ;;  src             2    9[COMRAM] PTR const unsigned char 
  7410 ;;		 -> reverse@auxstr(64), STR_7(2), STR_6(2), my_vprintf@buffer(64), 
  7411 ;;		 -> my_vprintf@ch(2), my_vprintf@char_temp(2), ?_my_vprintf(2), 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  d               2   15[COMRAM] PTR unsigned char 
  7414 ;;		 -> my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), getWP@width_str(5), 
  7415 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7416 ;;		 -> reverse@auxstr(64), STR_7(2), STR_6(2), my_vprintf@buffer(64), 
  7417 ;;		 -> my_vprintf@ch(2), my_vprintf@char_temp(2), ?_my_vprintf(2), 
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  2    7[COMRAM] PTR unsigned char 
  7420 ;; Registers used:
  7421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7427 ;;      Params:         4       0       0       0       0       0       0       0       0
  7428 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7429 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7430 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7431 ;;Total ram usage:       10 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; Hardware stack levels required when called:    2
  7434 ;; This function calls:
  7435 ;;		Nothing
  7436 ;; This function is called by:
  7437 ;;		_my_vprintf
  7438 ;;		_reverse
  7439 ;;		_strcat
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text19
  7444  004C30                     __ptext19:
  7445                           	opt callstack 0
  7446  004C30                     _strcpy:
  7447                           	opt callstack 27
  7448  004C30  C00A  F00E         	movff	strcpy@src,strcpy@s
  7449  004C34  C00B  F00F         	movff	strcpy@src+1,strcpy@s+1
  7450  004C38  C008  F010         	movff	strcpy@dest,strcpy@d
  7451  004C3C  C009  F011         	movff	strcpy@dest+1,strcpy@d+1
  7452  004C40                     l6058:
  7453  004C40  500E               	movf	strcpy@s^0,w,c
  7454  004C42  6E0C               	movwf	??_strcpy^0,c
  7455  004C44  500F               	movf	(strcpy@s+1)^0,w,c
  7456  004C46  6E0D               	movwf	(??_strcpy+1)^0,c
  7457  004C48  4A0E               	infsnz	strcpy@s^0,f,c
  7458  004C4A  2A0F               	incf	(strcpy@s+1)^0,f,c
  7459  004C4C  C00C  FFF6         	movff	??_strcpy,tblptrl
  7460  004C50  C00D  FFF7         	movff	??_strcpy+1,tblptrh
  7461  004C54  6AF8               	clrf	tblptru,c
  7462  004C56  C010  FFD9         	movff	strcpy@d,fsr2l
  7463  004C5A  C011  FFDA         	movff	strcpy@d+1,fsr2h
  7464  004C5E  4A10               	infsnz	strcpy@d^0,f,c
  7465  004C60  2A11               	incf	(strcpy@d+1)^0,f,c
  7466  004C62  0E07               	movlw	(high __ramtop+-1)
  7467  004C64  64F7               	cpfsgt	tblptrh,c
  7468  004C66  D003               	bra	u6697
  7469  004C68  0008               	tblrd		*
  7470  004C6A  50F5               	movf	tablat,w,c
  7471  004C6C  D005               	bra	u6690
  7472  004C6E                     u6697:
  7473  004C6E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7474  004C72  CFF7 FFE2          	movff	tblptrh,fsr1h
  7475  004C76  50E7               	movf	indf1,w,c
  7476  004C78                     u6690:
  7477  004C78  6EDF               	movwf	indf2,c
  7478  004C7A  50DF               	movf	indf2,w,c
  7479  004C7C  A4D8               	btfss	status,2,c
  7480  004C7E  EF43  F026         	goto	u6701
  7481  004C82  EF45  F026         	goto	u6700
  7482  004C86                     u6701:
  7483  004C86  EF20  F026         	goto	l6058
  7484  004C8A                     u6700:
  7485  004C8A  0012               	return		;funcret
  7486  004C8C                     __end_of_strcpy:
  7487                           	opt callstack 0
  7488                           
  7489 ;; *************** function ___almod *****************
  7490 ;; Defined at:
  7491 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  dividend        4    3[COMRAM] long 
  7494 ;;  divisor         4    7[COMRAM] long 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  sign            1   12[COMRAM] unsigned char 
  7497 ;;  counter         1   11[COMRAM] unsigned char 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  4    3[COMRAM] long 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7507 ;;      Params:         8       0       0       0       0       0       0       0       0
  7508 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7510 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7511 ;;Total ram usage:       10 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; Hardware stack levels required when called:    2
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		_itoa
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text20
  7522  00456C                     __ptext20:
  7523                           	opt callstack 0
  7524  00456C                     ___almod:
  7525                           	opt callstack 26
  7526  00456C  0E00               	movlw	0
  7527  00456E  6E0D               	movwf	___almod@sign^0,c
  7528  004570  BE07               	btfsc	(___almod@dividend+3)^0,7,c
  7529  004572  EFBF  F022         	goto	u6810
  7530  004576  EFBD  F022         	goto	u6811
  7531  00457A                     u6811:
  7532  00457A  EFC9  F022         	goto	l6142
  7533  00457E                     u6810:
  7534  00457E  1E07               	comf	(___almod@dividend+3)^0,f,c
  7535  004580  1E06               	comf	(___almod@dividend+2)^0,f,c
  7536  004582  1E05               	comf	(___almod@dividend+1)^0,f,c
  7537  004584  6C04               	negf	___almod@dividend^0,c
  7538  004586  0E00               	movlw	0
  7539  004588  2205               	addwfc	(___almod@dividend+1)^0,f,c
  7540  00458A  2206               	addwfc	(___almod@dividend+2)^0,f,c
  7541  00458C  2207               	addwfc	(___almod@dividend+3)^0,f,c
  7542  00458E  0E01               	movlw	1
  7543  004590  6E0D               	movwf	___almod@sign^0,c
  7544  004592                     l6142:
  7545  004592  BE0B               	btfsc	(___almod@divisor+3)^0,7,c
  7546  004594  EFD0  F022         	goto	u6820
  7547  004598  EFCE  F022         	goto	u6821
  7548  00459C                     u6821:
  7549  00459C  EFD8  F022         	goto	l6146
  7550  0045A0                     u6820:
  7551  0045A0  1E0B               	comf	(___almod@divisor+3)^0,f,c
  7552  0045A2  1E0A               	comf	(___almod@divisor+2)^0,f,c
  7553  0045A4  1E09               	comf	(___almod@divisor+1)^0,f,c
  7554  0045A6  6C08               	negf	___almod@divisor^0,c
  7555  0045A8  0E00               	movlw	0
  7556  0045AA  2209               	addwfc	(___almod@divisor+1)^0,f,c
  7557  0045AC  220A               	addwfc	(___almod@divisor+2)^0,f,c
  7558  0045AE  220B               	addwfc	(___almod@divisor+3)^0,f,c
  7559  0045B0                     l6146:
  7560  0045B0  5008               	movf	___almod@divisor^0,w,c
  7561  0045B2  1009               	iorwf	(___almod@divisor+1)^0,w,c
  7562  0045B4  100A               	iorwf	(___almod@divisor+2)^0,w,c
  7563  0045B6  100B               	iorwf	(___almod@divisor+3)^0,w,c
  7564  0045B8  B4D8               	btfsc	status,2,c
  7565  0045BA  EFE1  F022         	goto	u6831
  7566  0045BE  EFE3  F022         	goto	u6830
  7567  0045C2                     u6831:
  7568  0045C2  EF13  F023         	goto	l6162
  7569  0045C6                     u6830:
  7570  0045C6  0E01               	movlw	1
  7571  0045C8  6E0C               	movwf	___almod@counter^0,c
  7572  0045CA  EFED  F022         	goto	l6152
  7573  0045CE                     l6150:
  7574  0045CE  90D8               	bcf	status,0,c
  7575  0045D0  3608               	rlcf	___almod@divisor^0,f,c
  7576  0045D2  3609               	rlcf	(___almod@divisor+1)^0,f,c
  7577  0045D4  360A               	rlcf	(___almod@divisor+2)^0,f,c
  7578  0045D6  360B               	rlcf	(___almod@divisor+3)^0,f,c
  7579  0045D8  2A0C               	incf	___almod@counter^0,f,c
  7580  0045DA                     l6152:
  7581  0045DA  AE0B               	btfss	(___almod@divisor+3)^0,7,c
  7582  0045DC  EFF2  F022         	goto	u6841
  7583  0045E0  EFF4  F022         	goto	u6840
  7584  0045E4                     u6841:
  7585  0045E4  EFE7  F022         	goto	l6150
  7586  0045E8                     u6840:
  7587  0045E8                     l6154:
  7588  0045E8  5008               	movf	___almod@divisor^0,w,c
  7589  0045EA  5C04               	subwf	___almod@dividend^0,w,c
  7590  0045EC  5009               	movf	(___almod@divisor+1)^0,w,c
  7591  0045EE  5805               	subwfb	(___almod@dividend+1)^0,w,c
  7592  0045F0  500A               	movf	(___almod@divisor+2)^0,w,c
  7593  0045F2  5806               	subwfb	(___almod@dividend+2)^0,w,c
  7594  0045F4  500B               	movf	(___almod@divisor+3)^0,w,c
  7595  0045F6  5807               	subwfb	(___almod@dividend+3)^0,w,c
  7596  0045F8  A0D8               	btfss	status,0,c
  7597  0045FA  EF01  F023         	goto	u6851
  7598  0045FE  EF03  F023         	goto	u6850
  7599  004602                     u6851:
  7600  004602  EF0B  F023         	goto	l6158
  7601  004606                     u6850:
  7602  004606  5008               	movf	___almod@divisor^0,w,c
  7603  004608  5E04               	subwf	___almod@dividend^0,f,c
  7604  00460A  5009               	movf	(___almod@divisor+1)^0,w,c
  7605  00460C  5A05               	subwfb	(___almod@dividend+1)^0,f,c
  7606  00460E  500A               	movf	(___almod@divisor+2)^0,w,c
  7607  004610  5A06               	subwfb	(___almod@dividend+2)^0,f,c
  7608  004612  500B               	movf	(___almod@divisor+3)^0,w,c
  7609  004614  5A07               	subwfb	(___almod@dividend+3)^0,f,c
  7610  004616                     l6158:
  7611  004616  90D8               	bcf	status,0,c
  7612  004618  320B               	rrcf	(___almod@divisor+3)^0,f,c
  7613  00461A  320A               	rrcf	(___almod@divisor+2)^0,f,c
  7614  00461C  3209               	rrcf	(___almod@divisor+1)^0,f,c
  7615  00461E  3208               	rrcf	___almod@divisor^0,f,c
  7616  004620  2E0C               	decfsz	___almod@counter^0,f,c
  7617  004622  EFF4  F022         	goto	l6154
  7618  004626                     l6162:
  7619  004626  500D               	movf	___almod@sign^0,w,c
  7620  004628  B4D8               	btfsc	status,2,c
  7621  00462A  EF19  F023         	goto	u6861
  7622  00462E  EF1B  F023         	goto	u6860
  7623  004632                     u6861:
  7624  004632  EF23  F023         	goto	l6166
  7625  004636                     u6860:
  7626  004636  1E07               	comf	(___almod@dividend+3)^0,f,c
  7627  004638  1E06               	comf	(___almod@dividend+2)^0,f,c
  7628  00463A  1E05               	comf	(___almod@dividend+1)^0,f,c
  7629  00463C  6C04               	negf	___almod@dividend^0,c
  7630  00463E  0E00               	movlw	0
  7631  004640  2205               	addwfc	(___almod@dividend+1)^0,f,c
  7632  004642  2206               	addwfc	(___almod@dividend+2)^0,f,c
  7633  004644  2207               	addwfc	(___almod@dividend+3)^0,f,c
  7634  004646                     l6166:
  7635  004646  C004  F004         	movff	___almod@dividend,?___almod
  7636  00464A  C005  F005         	movff	___almod@dividend+1,?___almod+1
  7637  00464E  C006  F006         	movff	___almod@dividend+2,?___almod+2
  7638  004652  C007  F007         	movff	___almod@dividend+3,?___almod+3
  7639  004656  0012               	return		;funcret
  7640  004658                     __end_of___almod:
  7641                           	opt callstack 0
  7642                           
  7643 ;; *************** function _ftoa *****************
  7644 ;; Defined at:
  7645 ;;		line 140 in file "src/print/toString.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  buffer          2   38[COMRAM] PTR unsigned char 
  7648 ;;		 -> my_vprintf@buffer(64), 
  7649 ;;  value           4   40[COMRAM] PTR unsigned char 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  digit           2   46[COMRAM] int 
  7652 ;;  digit           2   44[COMRAM] int 
  7653 ;;  places          2   50[COMRAM] int 
  7654 ;;  exponent        2   48[COMRAM] int 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7664 ;;      Params:         6       0       0       0       0       0       0       0       0
  7665 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7667 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7668 ;;Total ram usage:       14 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    4
  7671 ;; This function calls:
  7672 ;;		___fleq
  7673 ;;		___flmul
  7674 ;;		___flneg
  7675 ;;		___flsub
  7676 ;;		___fltol
  7677 ;;		___xxtofl
  7678 ;;		_normalize
  7679 ;; This function is called by:
  7680 ;;		_my_vprintf
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text21
  7685  0025E6                     __ptext21:
  7686                           	opt callstack 0
  7687  0025E6                     _ftoa:
  7688                           	opt callstack 25
  7689  0025E6                     
  7690                           ;src/print/toString.c: 145:     int places = 0;
  7691  0025E6  0E00               	movlw	0
  7692  0025E8  6E34               	movwf	(ftoa@places+1)^0,c
  7693  0025EA  0E00               	movlw	0
  7694  0025EC  6E33               	movwf	ftoa@places^0,c
  7695  0025EE                     
  7696                           ;src/print/toString.c: 146:     static const int width = 7;;src/print/toString.c: 148:  
      +                             if (value == 0.0) {
  7697  0025EE  C029  F004         	movff	ftoa@value,___fleq@ff1
  7698  0025F2  C02A  F005         	movff	ftoa@value+1,___fleq@ff1+1
  7699  0025F6  C02B  F006         	movff	ftoa@value+2,___fleq@ff1+2
  7700  0025FA  C02C  F007         	movff	ftoa@value+3,___fleq@ff1+3
  7701  0025FE  0E00               	movlw	0
  7702  002600  6E08               	movwf	___fleq@ff2^0,c
  7703  002602  0E00               	movlw	0
  7704  002604  6E09               	movwf	(___fleq@ff2+1)^0,c
  7705  002606  0E00               	movlw	0
  7706  002608  6E0A               	movwf	(___fleq@ff2+2)^0,c
  7707  00260A  0E00               	movlw	0
  7708  00260C  6E0B               	movwf	(___fleq@ff2+3)^0,c
  7709  00260E  EC4E  F024         	call	___fleq	;wreg free
  7710  002612  A0D8               	btfss	status,0,c
  7711  002614  EF0E  F013         	goto	u9201
  7712  002618  EF10  F013         	goto	u9200
  7713  00261C                     u9201:
  7714  00261C  EF30  F013         	goto	l7476
  7715  002620                     u9200:
  7716  002620                     
  7717                           ;src/print/toString.c: 149:         buffer[0] = '0';
  7718  002620  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7719  002624  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7720  002628  0E30               	movlw	48
  7721  00262A  6EDF               	movwf	indf2,c
  7722  00262C                     
  7723                           ;src/print/toString.c: 150:         buffer[1] = '.';
  7724  00262C  EE20 F001          	lfsr	2,1
  7725  002630  5027               	movf	ftoa@buffer^0,w,c
  7726  002632  26D9               	addwf	fsr2l,f,c
  7727  002634  5028               	movf	(ftoa@buffer+1)^0,w,c
  7728  002636  22DA               	addwfc	fsr2h,f,c
  7729  002638  0E2E               	movlw	46
  7730  00263A  6EDF               	movwf	indf2,c
  7731  00263C                     
  7732                           ;src/print/toString.c: 151:         buffer[2] = '0';
  7733  00263C  EE20 F002          	lfsr	2,2
  7734  002640  5027               	movf	ftoa@buffer^0,w,c
  7735  002642  26D9               	addwf	fsr2l,f,c
  7736  002644  5028               	movf	(ftoa@buffer+1)^0,w,c
  7737  002646  22DA               	addwfc	fsr2h,f,c
  7738  002648  0E30               	movlw	48
  7739  00264A  6EDF               	movwf	indf2,c
  7740  00264C                     
  7741                           ;src/print/toString.c: 152:         buffer[3] = '\0';
  7742  00264C  EE20 F003          	lfsr	2,3
  7743  002650  5027               	movf	ftoa@buffer^0,w,c
  7744  002652  26D9               	addwf	fsr2l,f,c
  7745  002654  5028               	movf	(ftoa@buffer+1)^0,w,c
  7746  002656  22DA               	addwfc	fsr2h,f,c
  7747  002658  0E00               	movlw	0
  7748  00265A  6EDF               	movwf	indf2,c
  7749  00265C  EF8B  F014         	goto	l747
  7750  002660                     l7476:
  7751                           
  7752                           ;src/print/toString.c: 156:     if (value < 0.0) {
  7753  002660  BE2C               	btfsc	(ftoa@value+3)^0,7,c
  7754  002662  EF37  F013         	goto	u9210
  7755  002666  EF35  F013         	goto	u9211
  7756  00266A                     u9211:
  7757  00266A  EF49  F013         	goto	l7480
  7758  00266E                     u9210:
  7759  00266E                     
  7760                           ;src/print/toString.c: 157:         value = -value;
  7761  00266E  C029  F004         	movff	ftoa@value,___flneg@f1
  7762  002672  C02A  F005         	movff	ftoa@value+1,___flneg@f1+1
  7763  002676  C02B  F006         	movff	ftoa@value+2,___flneg@f1+2
  7764  00267A  C02C  F007         	movff	ftoa@value+3,___flneg@f1+3
  7765  00267E  EC28  F028         	call	___flneg	;wreg free
  7766  002682  C004  F029         	movff	?___flneg,ftoa@value
  7767  002686  C005  F02A         	movff	?___flneg+1,ftoa@value+1
  7768  00268A  C006  F02B         	movff	?___flneg+2,ftoa@value+2
  7769  00268E  C007  F02C         	movff	?___flneg+3,ftoa@value+3
  7770  002692                     l7480:
  7771                           
  7772                           ;src/print/toString.c: 160:     exponent = normalize(&value);
  7773  002692  0E29               	movlw	low ftoa@value
  7774  002694  6E1D               	movwf	normalize@val^0,c
  7775  002696  0E00               	movlw	high ftoa@value
  7776  002698  6E1E               	movwf	(normalize@val+1)^0,c
  7777  00269A  EC10  F020         	call	_normalize	;wreg free
  7778  00269E  C01D  F031         	movff	?_normalize,ftoa@exponent
  7779  0026A2  C01E  F032         	movff	?_normalize+1,ftoa@exponent+1
  7780                           
  7781                           ;src/print/toString.c: 162:     while (exponent > 0) {
  7782  0026A6  EFBB  F013         	goto	l7494
  7783  0026AA                     l7482:
  7784                           
  7785                           ;src/print/toString.c: 163:         int digit = value * 10;
  7786  0026AA  0E00               	movlw	0
  7787  0026AC  6E08               	movwf	___flmul@a^0,c
  7788  0026AE  0E00               	movlw	0
  7789  0026B0  6E09               	movwf	(___flmul@a+1)^0,c
  7790  0026B2  0E20               	movlw	32
  7791  0026B4  6E0A               	movwf	(___flmul@a+2)^0,c
  7792  0026B6  0E41               	movlw	65
  7793  0026B8  6E0B               	movwf	(___flmul@a+3)^0,c
  7794  0026BA  C029  F004         	movff	ftoa@value,___flmul@b
  7795  0026BE  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  7796  0026C2  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  7797  0026C6  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  7798  0026CA  EC11  F00F         	call	___flmul	;wreg free
  7799  0026CE  C004  F01D         	movff	?___flmul,___fltol@f1
  7800  0026D2  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  7801  0026D6  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  7802  0026DA  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  7803  0026DE  ECB1  F021         	call	___fltol	;wreg free
  7804  0026E2  C01D  F02D         	movff	?___fltol,ftoa@digit
  7805  0026E6  C01E  F02E         	movff	?___fltol+1,ftoa@digit+1
  7806  0026EA                     
  7807                           ;src/print/toString.c: 164:         *buffer++ = digit + '0';
  7808  0026EA  502D               	movf	ftoa@digit^0,w,c
  7809  0026EC  0F30               	addlw	48
  7810  0026EE  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7811  0026F2  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7812  0026F6  6EDF               	movwf	indf2,c
  7813  0026F8  4A27               	infsnz	ftoa@buffer^0,f,c
  7814  0026FA  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7815  0026FC                     
  7816                           ;src/print/toString.c: 165:         value = value * 10 - digit;
  7817  0026FC  0E00               	movlw	0
  7818  0026FE  6E08               	movwf	___flmul@a^0,c
  7819  002700  0E00               	movlw	0
  7820  002702  6E09               	movwf	(___flmul@a+1)^0,c
  7821  002704  0E20               	movlw	32
  7822  002706  6E0A               	movwf	(___flmul@a+2)^0,c
  7823  002708  0E41               	movlw	65
  7824  00270A  6E0B               	movwf	(___flmul@a+3)^0,c
  7825  00270C  C029  F004         	movff	ftoa@value,___flmul@b
  7826  002710  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  7827  002714  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  7828  002718  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  7829  00271C  EC11  F00F         	call	___flmul	;wreg free
  7830  002720  C004  F01D         	movff	?___flmul,___flsub@b
  7831  002724  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  7832  002728  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  7833  00272C  C007  F020         	movff	?___flmul+3,___flsub@b+3
  7834  002730  C02D  F004         	movff	ftoa@digit,___xxtofl@val
  7835  002734  C02E  F005         	movff	ftoa@digit+1,___xxtofl@val+1
  7836  002738  0E00               	movlw	0
  7837  00273A  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  7838  00273C  0EFF               	movlw	-1
  7839  00273E  6E06               	movwf	(___xxtofl@val+2)^0,c
  7840  002740  6E07               	movwf	(___xxtofl@val+3)^0,c
  7841  002742  0E01               	movlw	1
  7842  002744  ECA0  F01B         	call	___xxtofl
  7843  002748  C004  F021         	movff	?___xxtofl,___flsub@a
  7844  00274C  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  7845  002750  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  7846  002754  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  7847  002758  EC60  F027         	call	___flsub	;wreg free
  7848  00275C  C01D  F029         	movff	?___flsub,ftoa@value
  7849  002760  C01E  F02A         	movff	?___flsub+1,ftoa@value+1
  7850  002764  C01F  F02B         	movff	?___flsub+2,ftoa@value+2
  7851  002768  C020  F02C         	movff	?___flsub+3,ftoa@value+3
  7852  00276C                     
  7853                           ;src/print/toString.c: 166:         ++places;
  7854  00276C  4A33               	infsnz	ftoa@places^0,f,c
  7855  00276E  2A34               	incf	(ftoa@places+1)^0,f,c
  7856  002770                     
  7857                           ;src/print/toString.c: 167:         --exponent;
  7858  002770  0631               	decf	ftoa@exponent^0,f,c
  7859  002772  A0D8               	btfss	status,0,c
  7860  002774  0632               	decf	(ftoa@exponent+1)^0,f,c
  7861  002776                     l7494:
  7862                           
  7863                           ;src/print/toString.c: 162:     while (exponent > 0) {
  7864  002776  BE32               	btfsc	(ftoa@exponent+1)^0,7,c
  7865  002778  EFC8  F013         	goto	u9220
  7866  00277C  5032               	movf	(ftoa@exponent+1)^0,w,c
  7867  00277E  E106               	bnz	u9221
  7868  002780  0431               	decf	ftoa@exponent^0,w,c
  7869  002782  B0D8               	btfsc	status,0,c
  7870  002784  EFC6  F013         	goto	u9221
  7871  002788  EFC8  F013         	goto	u9220
  7872  00278C                     u9221:
  7873  00278C  EF55  F013         	goto	l7482
  7874  002790                     u9220:
  7875  002790                     
  7876                           ;src/print/toString.c: 170:     if (places == 0)
  7877  002790  5033               	movf	ftoa@places^0,w,c
  7878  002792  1034               	iorwf	(ftoa@places+1)^0,w,c
  7879  002794  A4D8               	btfss	status,2,c
  7880  002796  EFCF  F013         	goto	u9231
  7881  00279A  EFD1  F013         	goto	u9230
  7882  00279E                     u9231:
  7883  00279E  EFD9  F013         	goto	l7502
  7884  0027A2                     u9230:
  7885  0027A2                     
  7886                           ;src/print/toString.c: 171:         *buffer++ = '0';
  7887  0027A2  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7888  0027A6  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7889  0027AA  0E30               	movlw	48
  7890  0027AC  6EDF               	movwf	indf2,c
  7891  0027AE  4A27               	infsnz	ftoa@buffer^0,f,c
  7892  0027B0  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7893  0027B2                     l7502:
  7894                           
  7895                           ;src/print/toString.c: 172:     if (places < width)
  7896  0027B2  BE34               	btfsc	(ftoa@places+1)^0,7,c
  7897  0027B4  EFE7  F013         	goto	u9240
  7898  0027B8  5034               	movf	(ftoa@places+1)^0,w,c
  7899  0027BA  E107               	bnz	u9241
  7900  0027BC  0E07               	movlw	7
  7901  0027BE  5C33               	subwf	ftoa@places^0,w,c
  7902  0027C0  B0D8               	btfsc	status,0,c
  7903  0027C2  EFE5  F013         	goto	u9241
  7904  0027C6  EFE7  F013         	goto	u9240
  7905  0027CA                     u9241:
  7906  0027CA  EFFD  F013         	goto	l7516
  7907  0027CE                     u9240:
  7908  0027CE                     
  7909                           ;src/print/toString.c: 173:         *buffer++ = '.';
  7910  0027CE  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7911  0027D2  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7912  0027D6  0E2E               	movlw	46
  7913  0027D8  6EDF               	movwf	indf2,c
  7914  0027DA  4A27               	infsnz	ftoa@buffer^0,f,c
  7915  0027DC  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7916  0027DE  EFFD  F013         	goto	l7516
  7917  0027E2                     l7508:
  7918                           
  7919                           ;src/print/toString.c: 176:         *buffer++ = '0';
  7920  0027E2  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7921  0027E6  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7922  0027EA  0E30               	movlw	48
  7923  0027EC  6EDF               	movwf	indf2,c
  7924  0027EE  4A27               	infsnz	ftoa@buffer^0,f,c
  7925  0027F0  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7926  0027F2                     
  7927                           ;src/print/toString.c: 177:         ++exponent;
  7928  0027F2  4A31               	infsnz	ftoa@exponent^0,f,c
  7929  0027F4  2A32               	incf	(ftoa@exponent+1)^0,f,c
  7930  0027F6                     
  7931                           ;src/print/toString.c: 178:         ++places;
  7932  0027F6  4A33               	infsnz	ftoa@places^0,f,c
  7933  0027F8  2A34               	incf	(ftoa@places+1)^0,f,c
  7934  0027FA                     l7516:
  7935                           
  7936                           ;src/print/toString.c: 175:     while ((exponent < 0) && (places < width)) {
  7937  0027FA  BE32               	btfsc	(ftoa@exponent+1)^0,7,c
  7938  0027FC  EF04  F014         	goto	u9250
  7939  002800  EF02  F014         	goto	u9251
  7940  002804                     u9251:
  7941  002804  EF77  F014         	goto	l7530
  7942  002808                     u9250:
  7943  002808  BE34               	btfsc	(ftoa@places+1)^0,7,c
  7944  00280A  EF10  F014         	goto	u9261
  7945  00280E  5034               	movf	(ftoa@places+1)^0,w,c
  7946  002810  E109               	bnz	u9260
  7947  002812  0E07               	movlw	7
  7948  002814  5C33               	subwf	ftoa@places^0,w,c
  7949  002816  A0D8               	btfss	status,0,c
  7950  002818  EF10  F014         	goto	u9261
  7951  00281C  EF12  F014         	goto	u9260
  7952  002820                     u9261:
  7953  002820  EFF1  F013         	goto	l7508
  7954  002824                     u9260:
  7955  002824  EF77  F014         	goto	l7530
  7956  002828                     l7520:
  7957                           
  7958                           ;src/print/toString.c: 182:         int digit = value * 10.0;
  7959  002828  0E00               	movlw	0
  7960  00282A  6E08               	movwf	___flmul@a^0,c
  7961  00282C  0E00               	movlw	0
  7962  00282E  6E09               	movwf	(___flmul@a+1)^0,c
  7963  002830  0E20               	movlw	32
  7964  002832  6E0A               	movwf	(___flmul@a+2)^0,c
  7965  002834  0E41               	movlw	65
  7966  002836  6E0B               	movwf	(___flmul@a+3)^0,c
  7967  002838  C029  F004         	movff	ftoa@value,___flmul@b
  7968  00283C  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  7969  002840  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  7970  002844  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  7971  002848  EC11  F00F         	call	___flmul	;wreg free
  7972  00284C  C004  F01D         	movff	?___flmul,___fltol@f1
  7973  002850  C005  F01E         	movff	?___flmul+1,___fltol@f1+1
  7974  002854  C006  F01F         	movff	?___flmul+2,___fltol@f1+2
  7975  002858  C007  F020         	movff	?___flmul+3,___fltol@f1+3
  7976  00285C  ECB1  F021         	call	___fltol	;wreg free
  7977  002860  C01D  F02F         	movff	?___fltol,ftoa@digit_1685
  7978  002864  C01E  F030         	movff	?___fltol+1,ftoa@digit_1685+1
  7979  002868                     
  7980                           ;src/print/toString.c: 183:         *buffer++ = digit + '0';
  7981  002868  502F               	movf	ftoa@digit_1685^0,w,c
  7982  00286A  0F30               	addlw	48
  7983  00286C  C027  FFD9         	movff	ftoa@buffer,fsr2l
  7984  002870  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  7985  002874  6EDF               	movwf	indf2,c
  7986  002876  4A27               	infsnz	ftoa@buffer^0,f,c
  7987  002878  2A28               	incf	(ftoa@buffer+1)^0,f,c
  7988  00287A                     
  7989                           ;src/print/toString.c: 184:         value = value * 10.0 - digit;
  7990  00287A  0E00               	movlw	0
  7991  00287C  6E08               	movwf	___flmul@a^0,c
  7992  00287E  0E00               	movlw	0
  7993  002880  6E09               	movwf	(___flmul@a+1)^0,c
  7994  002882  0E20               	movlw	32
  7995  002884  6E0A               	movwf	(___flmul@a+2)^0,c
  7996  002886  0E41               	movlw	65
  7997  002888  6E0B               	movwf	(___flmul@a+3)^0,c
  7998  00288A  C029  F004         	movff	ftoa@value,___flmul@b
  7999  00288E  C02A  F005         	movff	ftoa@value+1,___flmul@b+1
  8000  002892  C02B  F006         	movff	ftoa@value+2,___flmul@b+2
  8001  002896  C02C  F007         	movff	ftoa@value+3,___flmul@b+3
  8002  00289A  EC11  F00F         	call	___flmul	;wreg free
  8003  00289E  C004  F01D         	movff	?___flmul,___flsub@b
  8004  0028A2  C005  F01E         	movff	?___flmul+1,___flsub@b+1
  8005  0028A6  C006  F01F         	movff	?___flmul+2,___flsub@b+2
  8006  0028AA  C007  F020         	movff	?___flmul+3,___flsub@b+3
  8007  0028AE  C02F  F004         	movff	ftoa@digit_1685,___xxtofl@val
  8008  0028B2  C030  F005         	movff	ftoa@digit_1685+1,___xxtofl@val+1
  8009  0028B6  0E00               	movlw	0
  8010  0028B8  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  8011  0028BA  0EFF               	movlw	-1
  8012  0028BC  6E06               	movwf	(___xxtofl@val+2)^0,c
  8013  0028BE  6E07               	movwf	(___xxtofl@val+3)^0,c
  8014  0028C0  0E01               	movlw	1
  8015  0028C2  ECA0  F01B         	call	___xxtofl
  8016  0028C6  C004  F021         	movff	?___xxtofl,___flsub@a
  8017  0028CA  C005  F022         	movff	?___xxtofl+1,___flsub@a+1
  8018  0028CE  C006  F023         	movff	?___xxtofl+2,___flsub@a+2
  8019  0028D2  C007  F024         	movff	?___xxtofl+3,___flsub@a+3
  8020  0028D6  EC60  F027         	call	___flsub	;wreg free
  8021  0028DA  C01D  F029         	movff	?___flsub,ftoa@value
  8022  0028DE  C01E  F02A         	movff	?___flsub+1,ftoa@value+1
  8023  0028E2  C01F  F02B         	movff	?___flsub+2,ftoa@value+2
  8024  0028E6  C020  F02C         	movff	?___flsub+3,ftoa@value+3
  8025  0028EA                     
  8026                           ;src/print/toString.c: 185:         ++places;
  8027  0028EA  4A33               	infsnz	ftoa@places^0,f,c
  8028  0028EC  2A34               	incf	(ftoa@places+1)^0,f,c
  8029  0028EE                     l7530:
  8030                           
  8031                           ;src/print/toString.c: 181:     while (places < width) {
  8032  0028EE  BE34               	btfsc	(ftoa@places+1)^0,7,c
  8033  0028F0  EF83  F014         	goto	u9271
  8034  0028F4  5034               	movf	(ftoa@places+1)^0,w,c
  8035  0028F6  E109               	bnz	u9270
  8036  0028F8  0E07               	movlw	7
  8037  0028FA  5C33               	subwf	ftoa@places^0,w,c
  8038  0028FC  A0D8               	btfss	status,0,c
  8039  0028FE  EF83  F014         	goto	u9271
  8040  002902  EF85  F014         	goto	u9270
  8041  002906                     u9271:
  8042  002906  EF14  F014         	goto	l7520
  8043  00290A                     u9270:
  8044  00290A                     
  8045                           ;src/print/toString.c: 187:     *buffer = '\0';
  8046  00290A  C027  FFD9         	movff	ftoa@buffer,fsr2l
  8047  00290E  C028  FFDA         	movff	ftoa@buffer+1,fsr2h
  8048  002912  0E00               	movlw	0
  8049  002914  6EDF               	movwf	indf2,c
  8050  002916                     l747:
  8051  002916  0012               	return		;funcret
  8052  002918                     __end_of_ftoa:
  8053                           	opt callstack 0
  8054                           
  8055 ;; *************** function _normalize *****************
  8056 ;; Defined at:
  8057 ;;		line 76 in file "src/print/toString.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  val             2   28[COMRAM] PTR 
  8060 ;;		 -> ftoa@value(4), ftoa_sci@value(4), 
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  value           4   32[COMRAM] PTR 
  8063 ;;  exponent        2   30[COMRAM] int 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  2   28[COMRAM] int 
  8066 ;; Registers used:
  8067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8073 ;;      Params:         2       0       0       0       0       0       0       0       0
  8074 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8076 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8077 ;;Total ram usage:        8 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    3
  8080 ;; This function calls:
  8081 ;;		___fldiv
  8082 ;;		___flge
  8083 ;;		___flmul
  8084 ;; This function is called by:
  8085 ;;		_ftoa_sci
  8086 ;;		_ftoa
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text22
  8091  004020                     __ptext22:
  8092                           	opt callstack 0
  8093  004020                     _normalize:
  8094                           	opt callstack 25
  8095  004020                     
  8096                           ;src/print/toString.c: 77:     int exponent = 0;
  8097  004020  0E00               	movlw	0
  8098  004022  6E20               	movwf	(normalize@exponent+1)^0,c
  8099  004024  0E00               	movlw	0
  8100  004026  6E1F               	movwf	normalize@exponent^0,c
  8101  004028                     
  8102                           ;src/print/toString.c: 78:     double value = *val;
  8103  004028  C01D  FFD9         	movff	normalize@val,fsr2l
  8104  00402C  C01E  FFDA         	movff	normalize@val+1,fsr2h
  8105  004030  CFDE F021          	movff	postinc2,normalize@value
  8106  004034  CFDE F022          	movff	postinc2,normalize@value+1
  8107  004038  CFDE F023          	movff	postinc2,normalize@value+2
  8108  00403C  CFDE F024          	movff	postinc2,normalize@value+3
  8109                           
  8110                           ;src/print/toString.c: 80:     while (value >= 1.0) {
  8111  004040  EF3E  F020         	goto	l6826
  8112  004044                     l6822:
  8113                           
  8114                           ;src/print/toString.c: 81:         value /= 10.0;
  8115  004044  C021  F004         	movff	normalize@value,___fldiv@b
  8116  004048  C022  F005         	movff	normalize@value+1,___fldiv@b+1
  8117  00404C  C023  F006         	movff	normalize@value+2,___fldiv@b+2
  8118  004050  C024  F007         	movff	normalize@value+3,___fldiv@b+3
  8119  004054  0E00               	movlw	0
  8120  004056  6E08               	movwf	___fldiv@a^0,c
  8121  004058  0E00               	movlw	0
  8122  00405A  6E09               	movwf	(___fldiv@a+1)^0,c
  8123  00405C  0E20               	movlw	32
  8124  00405E  6E0A               	movwf	(___fldiv@a+2)^0,c
  8125  004060  0E41               	movlw	65
  8126  004062  6E0B               	movwf	(___fldiv@a+3)^0,c
  8127  004064  EC26  F011         	call	___fldiv	;wreg free
  8128  004068  C004  F021         	movff	?___fldiv,normalize@value
  8129  00406C  C005  F022         	movff	?___fldiv+1,normalize@value+1
  8130  004070  C006  F023         	movff	?___fldiv+2,normalize@value+2
  8131  004074  C007  F024         	movff	?___fldiv+3,normalize@value+3
  8132  004078                     
  8133                           ;src/print/toString.c: 82:         ++exponent;
  8134  004078  4A1F               	infsnz	normalize@exponent^0,f,c
  8135  00407A  2A20               	incf	(normalize@exponent+1)^0,f,c
  8136  00407C                     l6826:
  8137                           
  8138                           ;src/print/toString.c: 80:     while (value >= 1.0) {
  8139  00407C  C021  F004         	movff	normalize@value,___flge@ff1
  8140  004080  C022  F005         	movff	normalize@value+1,___flge@ff1+1
  8141  004084  C023  F006         	movff	normalize@value+2,___flge@ff1+2
  8142  004088  C024  F007         	movff	normalize@value+3,___flge@ff1+3
  8143  00408C  0E00               	movlw	0
  8144  00408E  6E08               	movwf	___flge@ff2^0,c
  8145  004090  0E00               	movlw	0
  8146  004092  6E09               	movwf	(___flge@ff2+1)^0,c
  8147  004094  0E80               	movlw	128
  8148  004096  6E0A               	movwf	(___flge@ff2+2)^0,c
  8149  004098  0E3F               	movlw	63
  8150  00409A  6E0B               	movwf	(___flge@ff2+3)^0,c
  8151  00409C  EC34  F022         	call	___flge	;wreg free
  8152  0040A0  B0D8               	btfsc	status,0,c
  8153  0040A2  EF55  F020         	goto	u7991
  8154  0040A6  EF57  F020         	goto	u7990
  8155  0040AA                     u7991:
  8156  0040AA  EF22  F020         	goto	l6822
  8157  0040AE                     u7990:
  8158  0040AE  EF76  F020         	goto	l6832
  8159  0040B2                     l6828:
  8160                           
  8161                           ;src/print/toString.c: 86:         value *= 10.0;
  8162  0040B2  C021  F004         	movff	normalize@value,___flmul@b
  8163  0040B6  C022  F005         	movff	normalize@value+1,___flmul@b+1
  8164  0040BA  C023  F006         	movff	normalize@value+2,___flmul@b+2
  8165  0040BE  C024  F007         	movff	normalize@value+3,___flmul@b+3
  8166  0040C2  0E00               	movlw	0
  8167  0040C4  6E08               	movwf	___flmul@a^0,c
  8168  0040C6  0E00               	movlw	0
  8169  0040C8  6E09               	movwf	(___flmul@a+1)^0,c
  8170  0040CA  0E20               	movlw	32
  8171  0040CC  6E0A               	movwf	(___flmul@a+2)^0,c
  8172  0040CE  0E41               	movlw	65
  8173  0040D0  6E0B               	movwf	(___flmul@a+3)^0,c
  8174  0040D2  EC11  F00F         	call	___flmul	;wreg free
  8175  0040D6  C004  F021         	movff	?___flmul,normalize@value
  8176  0040DA  C005  F022         	movff	?___flmul+1,normalize@value+1
  8177  0040DE  C006  F023         	movff	?___flmul+2,normalize@value+2
  8178  0040E2  C007  F024         	movff	?___flmul+3,normalize@value+3
  8179  0040E6                     
  8180                           ;src/print/toString.c: 87:         --exponent;
  8181  0040E6  061F               	decf	normalize@exponent^0,f,c
  8182  0040E8  A0D8               	btfss	status,0,c
  8183  0040EA  0620               	decf	(normalize@exponent+1)^0,f,c
  8184  0040EC                     l6832:
  8185                           
  8186                           ;src/print/toString.c: 85:     while (value < 0.1) {
  8187  0040EC  C021  F004         	movff	normalize@value,___flge@ff1
  8188  0040F0  C022  F005         	movff	normalize@value+1,___flge@ff1+1
  8189  0040F4  C023  F006         	movff	normalize@value+2,___flge@ff1+2
  8190  0040F8  C024  F007         	movff	normalize@value+3,___flge@ff1+3
  8191  0040FC  0ECD               	movlw	205
  8192  0040FE  6E08               	movwf	___flge@ff2^0,c
  8193  004100  0ECC               	movlw	204
  8194  004102  6E09               	movwf	(___flge@ff2+1)^0,c
  8195  004104  0ECC               	movlw	204
  8196  004106  6E0A               	movwf	(___flge@ff2+2)^0,c
  8197  004108  0E3D               	movlw	61
  8198  00410A  6E0B               	movwf	(___flge@ff2+3)^0,c
  8199  00410C  EC34  F022         	call	___flge	;wreg free
  8200  004110  A0D8               	btfss	status,0,c
  8201  004112  EF8D  F020         	goto	u8001
  8202  004116  EF8F  F020         	goto	u8000
  8203  00411A                     u8001:
  8204  00411A  EF59  F020         	goto	l6828
  8205  00411E                     u8000:
  8206  00411E                     
  8207                           ;src/print/toString.c: 89:     *val = value;
  8208  00411E  C01D  FFD9         	movff	normalize@val,fsr2l
  8209  004122  C01E  FFDA         	movff	normalize@val+1,fsr2h
  8210  004126  C021  FFDE         	movff	normalize@value,postinc2
  8211  00412A  C022  FFDE         	movff	normalize@value+1,postinc2
  8212  00412E  C023  FFDE         	movff	normalize@value+2,postinc2
  8213  004132  C024  FFDE         	movff	normalize@value+3,postinc2
  8214  004136                     
  8215                           ;src/print/toString.c: 91:     return exponent;
  8216  004136  C01F  F01D         	movff	normalize@exponent,?_normalize
  8217  00413A  C020  F01E         	movff	normalize@exponent+1,?_normalize+1
  8218  00413E  0012               	return		;funcret
  8219  004140                     __end_of_normalize:
  8220                           	opt callstack 0
  8221                           
  8222 ;; *************** function ___flmul *****************
  8223 ;; Defined at:
  8224 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  b               4    3[COMRAM] int 
  8227 ;;  a               4    7[COMRAM] int 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;  prod            4   22[COMRAM] struct .
  8230 ;;  grs             4   17[COMRAM] unsigned long 
  8231 ;;  temp            2   26[COMRAM] struct .
  8232 ;;  bexp            1   21[COMRAM] unsigned char 
  8233 ;;  aexp            1   16[COMRAM] unsigned char 
  8234 ;;  sign            1   15[COMRAM] unsigned char 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  4    3[COMRAM] unsigned char 
  8237 ;; Registers used:
  8238 ;;		wreg, status,2, status,0, prodl, prodh
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8244 ;;      Params:         8       0       0       0       0       0       0       0       0
  8245 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8246 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8247 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8248 ;;Total ram usage:       25 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:    2
  8251 ;; This function calls:
  8252 ;;		Nothing
  8253 ;; This function is called by:
  8254 ;;		_normalize
  8255 ;;		_ftoa_sci
  8256 ;;		_ftoa
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text23
  8261  001E22                     __ptext23:
  8262                           	opt callstack 0
  8263  001E22                     ___flmul:
  8264                           	opt callstack 25
  8265  001E22  5007               	movf	(___flmul@b+3)^0,w,c
  8266  001E24  0B80               	andlw	128
  8267  001E26  6E10               	movwf	___flmul@sign^0,c
  8268  001E28  5007               	movf	(___flmul@b+3)^0,w,c
  8269  001E2A  2407               	addwf	(___flmul@b+3)^0,w,c
  8270  001E2C  6E16               	movwf	___flmul@bexp^0,c
  8271  001E2E  AE06               	btfss	(___flmul@b+2)^0,7,c
  8272  001E30  EF1C  F00F         	goto	u7491
  8273  001E34  EF1E  F00F         	goto	u7490
  8274  001E38                     u7491:
  8275  001E38  EF1F  F00F         	goto	l6516
  8276  001E3C                     u7490:
  8277  001E3C  8016               	bsf	___flmul@bexp^0,0,c
  8278  001E3E                     l6516:
  8279  001E3E  5016               	movf	___flmul@bexp^0,w,c
  8280  001E40  B4D8               	btfsc	status,2,c
  8281  001E42  EF25  F00F         	goto	u7501
  8282  001E46  EF27  F00F         	goto	u7500
  8283  001E4A                     u7501:
  8284  001E4A  EF3A  F00F         	goto	l6524
  8285  001E4E                     u7500:
  8286  001E4E  2816               	incf	___flmul@bexp^0,w,c
  8287  001E50  A4D8               	btfss	status,2,c
  8288  001E52  EF2D  F00F         	goto	u7511
  8289  001E56  EF2F  F00F         	goto	u7510
  8290  001E5A                     u7511:
  8291  001E5A  EF37  F00F         	goto	l6522
  8292  001E5E                     u7510:
  8293  001E5E  0E00               	movlw	0
  8294  001E60  6E04               	movwf	___flmul@b^0,c
  8295  001E62  0E00               	movlw	0
  8296  001E64  6E05               	movwf	(___flmul@b+1)^0,c
  8297  001E66  0E00               	movlw	0
  8298  001E68  6E06               	movwf	(___flmul@b+2)^0,c
  8299  001E6A  0E00               	movlw	0
  8300  001E6C  6E07               	movwf	(___flmul@b+3)^0,c
  8301  001E6E                     l6522:
  8302  001E6E  8E06               	bsf	(___flmul@b+2)^0,7,c
  8303  001E70  EF42  F00F         	goto	l6526
  8304  001E74                     l6524:
  8305  001E74  0E00               	movlw	0
  8306  001E76  6E04               	movwf	___flmul@b^0,c
  8307  001E78  0E00               	movlw	0
  8308  001E7A  6E05               	movwf	(___flmul@b+1)^0,c
  8309  001E7C  0E00               	movlw	0
  8310  001E7E  6E06               	movwf	(___flmul@b+2)^0,c
  8311  001E80  0E00               	movlw	0
  8312  001E82  6E07               	movwf	(___flmul@b+3)^0,c
  8313  001E84                     l6526:
  8314  001E84  500B               	movf	(___flmul@a+3)^0,w,c
  8315  001E86  0B80               	andlw	128
  8316  001E88  1A10               	xorwf	___flmul@sign^0,f,c
  8317  001E8A  500B               	movf	(___flmul@a+3)^0,w,c
  8318  001E8C  240B               	addwf	(___flmul@a+3)^0,w,c
  8319  001E8E  6E11               	movwf	___flmul@aexp^0,c
  8320  001E90  AE0A               	btfss	(___flmul@a+2)^0,7,c
  8321  001E92  EF4D  F00F         	goto	u7521
  8322  001E96  EF4F  F00F         	goto	u7520
  8323  001E9A                     u7521:
  8324  001E9A  EF50  F00F         	goto	l6534
  8325  001E9E                     u7520:
  8326  001E9E  8011               	bsf	___flmul@aexp^0,0,c
  8327  001EA0                     l6534:
  8328  001EA0  5011               	movf	___flmul@aexp^0,w,c
  8329  001EA2  B4D8               	btfsc	status,2,c
  8330  001EA4  EF56  F00F         	goto	u7531
  8331  001EA8  EF58  F00F         	goto	u7530
  8332  001EAC                     u7531:
  8333  001EAC  EF6B  F00F         	goto	l6542
  8334  001EB0                     u7530:
  8335  001EB0  2811               	incf	___flmul@aexp^0,w,c
  8336  001EB2  A4D8               	btfss	status,2,c
  8337  001EB4  EF5E  F00F         	goto	u7541
  8338  001EB8  EF60  F00F         	goto	u7540
  8339  001EBC                     u7541:
  8340  001EBC  EF68  F00F         	goto	l6540
  8341  001EC0                     u7540:
  8342  001EC0  0E00               	movlw	0
  8343  001EC2  6E08               	movwf	___flmul@a^0,c
  8344  001EC4  0E00               	movlw	0
  8345  001EC6  6E09               	movwf	(___flmul@a+1)^0,c
  8346  001EC8  0E00               	movlw	0
  8347  001ECA  6E0A               	movwf	(___flmul@a+2)^0,c
  8348  001ECC  0E00               	movlw	0
  8349  001ECE  6E0B               	movwf	(___flmul@a+3)^0,c
  8350  001ED0                     l6540:
  8351  001ED0  8E0A               	bsf	(___flmul@a+2)^0,7,c
  8352  001ED2  EF73  F00F         	goto	l1378
  8353  001ED6                     l6542:
  8354  001ED6  0E00               	movlw	0
  8355  001ED8  6E08               	movwf	___flmul@a^0,c
  8356  001EDA  0E00               	movlw	0
  8357  001EDC  6E09               	movwf	(___flmul@a+1)^0,c
  8358  001EDE  0E00               	movlw	0
  8359  001EE0  6E0A               	movwf	(___flmul@a+2)^0,c
  8360  001EE2  0E00               	movlw	0
  8361  001EE4  6E0B               	movwf	(___flmul@a+3)^0,c
  8362  001EE6                     l1378:
  8363  001EE6  5011               	movf	___flmul@aexp^0,w,c
  8364  001EE8  B4D8               	btfsc	status,2,c
  8365  001EEA  EF79  F00F         	goto	u7551
  8366  001EEE  EF7B  F00F         	goto	u7550
  8367  001EF2                     u7551:
  8368  001EF2  EF83  F00F         	goto	l6546
  8369  001EF6                     u7550:
  8370  001EF6  5016               	movf	___flmul@bexp^0,w,c
  8371  001EF8  A4D8               	btfss	status,2,c
  8372  001EFA  EF81  F00F         	goto	u7561
  8373  001EFE  EF83  F00F         	goto	u7560
  8374  001F02                     u7561:
  8375  001F02  EF8D  F00F         	goto	l6550
  8376  001F06                     u7560:
  8377  001F06                     l6546:
  8378  001F06  0E00               	movlw	0
  8379  001F08  6E04               	movwf	?___flmul^0,c
  8380  001F0A  0E00               	movlw	0
  8381  001F0C  6E05               	movwf	(?___flmul+1)^0,c
  8382  001F0E  0E00               	movlw	0
  8383  001F10  6E06               	movwf	(?___flmul+2)^0,c
  8384  001F12  0E00               	movlw	0
  8385  001F14  6E07               	movwf	(?___flmul+3)^0,c
  8386  001F16  EF25  F011         	goto	l1382
  8387  001F1A                     l6550:
  8388  001F1A  500A               	movf	(___flmul@a+2)^0,w,c
  8389  001F1C  0204               	mulwf	___flmul@b^0,c
  8390  001F1E  CFF3 F01B          	movff	prodl,___flmul@temp
  8391  001F22  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8392  001F26  501B               	movf	___flmul@temp^0,w,c
  8393  001F28  6E12               	movwf	___flmul@grs^0,c
  8394  001F2A  6A13               	clrf	(___flmul@grs+1)^0,c
  8395  001F2C  6A14               	clrf	(___flmul@grs+2)^0,c
  8396  001F2E  6A15               	clrf	(___flmul@grs+3)^0,c
  8397  001F30  501C               	movf	(___flmul@temp+1)^0,w,c
  8398  001F32  6E17               	movwf	___flmul@prod^0,c
  8399  001F34  6A18               	clrf	(___flmul@prod+1)^0,c
  8400  001F36  6A19               	clrf	(___flmul@prod+2)^0,c
  8401  001F38  6A1A               	clrf	(___flmul@prod+3)^0,c
  8402  001F3A  5009               	movf	(___flmul@a+1)^0,w,c
  8403  001F3C  0205               	mulwf	(___flmul@b+1)^0,c
  8404  001F3E  CFF3 F01B          	movff	prodl,___flmul@temp
  8405  001F42  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8406  001F46  501B               	movf	___flmul@temp^0,w,c
  8407  001F48  2612               	addwf	___flmul@grs^0,f,c
  8408  001F4A  0E00               	movlw	0
  8409  001F4C  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8410  001F4E  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8411  001F50  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8412  001F52  501C               	movf	(___flmul@temp+1)^0,w,c
  8413  001F54  2617               	addwf	___flmul@prod^0,f,c
  8414  001F56  0E00               	movlw	0
  8415  001F58  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8416  001F5A  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8417  001F5C  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8418  001F5E  5008               	movf	___flmul@a^0,w,c
  8419  001F60  0206               	mulwf	(___flmul@b+2)^0,c
  8420  001F62  CFF3 F01B          	movff	prodl,___flmul@temp
  8421  001F66  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8422  001F6A  501B               	movf	___flmul@temp^0,w,c
  8423  001F6C  2612               	addwf	___flmul@grs^0,f,c
  8424  001F6E  0E00               	movlw	0
  8425  001F70  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8426  001F72  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8427  001F74  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8428  001F76  501C               	movf	(___flmul@temp+1)^0,w,c
  8429  001F78  2617               	addwf	___flmul@prod^0,f,c
  8430  001F7A  0E00               	movlw	0
  8431  001F7C  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8432  001F7E  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8433  001F80  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8434  001F82  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8435  001F86  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8436  001F8A  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8437  001F8E  6A12               	clrf	___flmul@grs^0,c
  8438  001F90  5008               	movf	___flmul@a^0,w,c
  8439  001F92  0205               	mulwf	(___flmul@b+1)^0,c
  8440  001F94  CFF3 F01B          	movff	prodl,___flmul@temp
  8441  001F98  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8442  001F9C  501B               	movf	___flmul@temp^0,w,c
  8443  001F9E  2612               	addwf	___flmul@grs^0,f,c
  8444  001FA0  501C               	movf	(___flmul@temp+1)^0,w,c
  8445  001FA2  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8446  001FA4  0E00               	movlw	0
  8447  001FA6  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8448  001FA8  0E00               	movlw	0
  8449  001FAA  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8450  001FAC  5009               	movf	(___flmul@a+1)^0,w,c
  8451  001FAE  0204               	mulwf	___flmul@b^0,c
  8452  001FB0  CFF3 F01B          	movff	prodl,___flmul@temp
  8453  001FB4  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8454  001FB8  501B               	movf	___flmul@temp^0,w,c
  8455  001FBA  2612               	addwf	___flmul@grs^0,f,c
  8456  001FBC  501C               	movf	(___flmul@temp+1)^0,w,c
  8457  001FBE  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8458  001FC0  0E00               	movlw	0
  8459  001FC2  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8460  001FC4  0E00               	movlw	0
  8461  001FC6  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8462  001FC8  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8463  001FCC  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8464  001FD0  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8465  001FD4  6A12               	clrf	___flmul@grs^0,c
  8466  001FD6  5008               	movf	___flmul@a^0,w,c
  8467  001FD8  0204               	mulwf	___flmul@b^0,c
  8468  001FDA  CFF3 F01B          	movff	prodl,___flmul@temp
  8469  001FDE  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8470  001FE2  501B               	movf	___flmul@temp^0,w,c
  8471  001FE4  2612               	addwf	___flmul@grs^0,f,c
  8472  001FE6  501C               	movf	(___flmul@temp+1)^0,w,c
  8473  001FE8  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8474  001FEA  0E00               	movlw	0
  8475  001FEC  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8476  001FEE  0E00               	movlw	0
  8477  001FF0  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8478  001FF2  500A               	movf	(___flmul@a+2)^0,w,c
  8479  001FF4  0205               	mulwf	(___flmul@b+1)^0,c
  8480  001FF6  CFF3 F01B          	movff	prodl,___flmul@temp
  8481  001FFA  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8482  001FFE  501B               	movf	___flmul@temp^0,w,c
  8483  002000  2617               	addwf	___flmul@prod^0,f,c
  8484  002002  501C               	movf	(___flmul@temp+1)^0,w,c
  8485  002004  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8486  002006  0E00               	movlw	0
  8487  002008  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8488  00200A  0E00               	movlw	0
  8489  00200C  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8490  00200E  5009               	movf	(___flmul@a+1)^0,w,c
  8491  002010  0206               	mulwf	(___flmul@b+2)^0,c
  8492  002012  CFF3 F01B          	movff	prodl,___flmul@temp
  8493  002016  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8494  00201A  501B               	movf	___flmul@temp^0,w,c
  8495  00201C  2617               	addwf	___flmul@prod^0,f,c
  8496  00201E  501C               	movf	(___flmul@temp+1)^0,w,c
  8497  002020  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8498  002022  0E00               	movlw	0
  8499  002024  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8500  002026  0E00               	movlw	0
  8501  002028  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8502  00202A  500A               	movf	(___flmul@a+2)^0,w,c
  8503  00202C  0206               	mulwf	(___flmul@b+2)^0,c
  8504  00202E  CFF3 F01B          	movff	prodl,___flmul@temp
  8505  002032  CFF4 F01C          	movff	prodh,___flmul@temp+1
  8506  002036  501B               	movf	___flmul@temp^0,w,c
  8507  002038  6E0C               	movwf	??___flmul^0,c
  8508  00203A  501C               	movf	(___flmul@temp+1)^0,w,c
  8509  00203C  6E0D               	movwf	(??___flmul+1)^0,c
  8510  00203E  6A0E               	clrf	(??___flmul+2)^0,c
  8511  002040  6A0F               	clrf	(??___flmul+3)^0,c
  8512  002042  C00E  F00F         	movff	??___flmul+2,??___flmul+3
  8513  002046  C00D  F00E         	movff	??___flmul+1,??___flmul+2
  8514  00204A  C00C  F00D         	movff	??___flmul,??___flmul+1
  8515  00204E  6A0C               	clrf	??___flmul^0,c
  8516  002050  500C               	movf	??___flmul^0,w,c
  8517  002052  2617               	addwf	___flmul@prod^0,f,c
  8518  002054  500D               	movf	(??___flmul+1)^0,w,c
  8519  002056  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8520  002058  500E               	movf	(??___flmul+2)^0,w,c
  8521  00205A  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8522  00205C  500F               	movf	(??___flmul+3)^0,w,c
  8523  00205E  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8524  002060  C012  F00C         	movff	___flmul@grs,??___flmul
  8525  002064  C013  F00D         	movff	___flmul@grs+1,??___flmul+1
  8526  002068  C014  F00E         	movff	___flmul@grs+2,??___flmul+2
  8527  00206C  C015  F00F         	movff	___flmul@grs+3,??___flmul+3
  8528  002070  0E19               	movlw	25
  8529  002072  EF40  F010         	goto	u7570
  8530  002076                     u7575:
  8531  002076  90D8               	bcf	status,0,c
  8532  002078  320F               	rrcf	(??___flmul+3)^0,f,c
  8533  00207A  320E               	rrcf	(??___flmul+2)^0,f,c
  8534  00207C  320D               	rrcf	(??___flmul+1)^0,f,c
  8535  00207E  320C               	rrcf	??___flmul^0,f,c
  8536  002080                     u7570:
  8537  002080  2EE8               	decfsz	wreg,f,c
  8538  002082  EF3B  F010         	goto	u7575
  8539  002086  500C               	movf	??___flmul^0,w,c
  8540  002088  2617               	addwf	___flmul@prod^0,f,c
  8541  00208A  500D               	movf	(??___flmul+1)^0,w,c
  8542  00208C  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8543  00208E  500E               	movf	(??___flmul+2)^0,w,c
  8544  002090  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8545  002092  500F               	movf	(??___flmul+3)^0,w,c
  8546  002094  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8547  002096  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8548  00209A  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8549  00209E  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8550  0020A2  6A12               	clrf	___flmul@grs^0,c
  8551  0020A4  5011               	movf	___flmul@aexp^0,w,c
  8552  0020A6  C016  F00C         	movff	___flmul@bexp,??___flmul
  8553  0020AA  6A0D               	clrf	(??___flmul+1)^0,c
  8554  0020AC  260C               	addwf	??___flmul^0,f,c
  8555  0020AE  0E00               	movlw	0
  8556  0020B0  220D               	addwfc	(??___flmul+1)^0,f,c
  8557  0020B2  0E82               	movlw	130
  8558  0020B4  240C               	addwf	??___flmul^0,w,c
  8559  0020B6  6E1B               	movwf	___flmul@temp^0,c
  8560  0020B8  0EFF               	movlw	255
  8561  0020BA  200D               	addwfc	(??___flmul+1)^0,w,c
  8562  0020BC  6E1C               	movwf	(___flmul@temp+1)^0,c
  8563  0020BE  EF76  F010         	goto	l6598
  8564  0020C2                     l6592:
  8565  0020C2  90D8               	bcf	status,0,c
  8566  0020C4  3617               	rlcf	___flmul@prod^0,f,c
  8567  0020C6  3618               	rlcf	(___flmul@prod+1)^0,f,c
  8568  0020C8  3619               	rlcf	(___flmul@prod+2)^0,f,c
  8569  0020CA  361A               	rlcf	(___flmul@prod+3)^0,f,c
  8570  0020CC  AE15               	btfss	(___flmul@grs+3)^0,7,c
  8571  0020CE  EF6B  F010         	goto	u7581
  8572  0020D2  EF6D  F010         	goto	u7580
  8573  0020D6                     u7581:
  8574  0020D6  EF6E  F010         	goto	l1385
  8575  0020DA                     u7580:
  8576  0020DA  8017               	bsf	___flmul@prod^0,0,c
  8577  0020DC                     l1385:
  8578  0020DC  90D8               	bcf	status,0,c
  8579  0020DE  3612               	rlcf	___flmul@grs^0,f,c
  8580  0020E0  3613               	rlcf	(___flmul@grs+1)^0,f,c
  8581  0020E2  3614               	rlcf	(___flmul@grs+2)^0,f,c
  8582  0020E4  3615               	rlcf	(___flmul@grs+3)^0,f,c
  8583  0020E6  061B               	decf	___flmul@temp^0,f,c
  8584  0020E8  A0D8               	btfss	status,0,c
  8585  0020EA  061C               	decf	(___flmul@temp+1)^0,f,c
  8586  0020EC                     l6598:
  8587  0020EC  AE19               	btfss	(___flmul@prod+2)^0,7,c
  8588  0020EE  EF7B  F010         	goto	u7591
  8589  0020F2  EF7D  F010         	goto	u7590
  8590  0020F6                     u7591:
  8591  0020F6  EF61  F010         	goto	l6592
  8592  0020FA                     u7590:
  8593  0020FA  0E00               	movlw	0
  8594  0020FC  6E11               	movwf	___flmul@aexp^0,c
  8595  0020FE  AE15               	btfss	(___flmul@grs+3)^0,7,c
  8596  002100  EF84  F010         	goto	u7601
  8597  002104  EF86  F010         	goto	u7600
  8598  002108                     u7601:
  8599  002108  EFAA  F010         	goto	l1387
  8600  00210C                     u7600:
  8601  00210C  0EFF               	movlw	255
  8602  00210E  1412               	andwf	___flmul@grs^0,w,c
  8603  002110  6E0C               	movwf	??___flmul^0,c
  8604  002112  0EFF               	movlw	255
  8605  002114  1413               	andwf	(___flmul@grs+1)^0,w,c
  8606  002116  6E0D               	movwf	(??___flmul+1)^0,c
  8607  002118  0EFF               	movlw	255
  8608  00211A  1414               	andwf	(___flmul@grs+2)^0,w,c
  8609  00211C  6E0E               	movwf	(??___flmul+2)^0,c
  8610  00211E  0E7F               	movlw	127
  8611  002120  1415               	andwf	(___flmul@grs+3)^0,w,c
  8612  002122  6E0F               	movwf	(??___flmul+3)^0,c
  8613  002124  500C               	movf	??___flmul^0,w,c
  8614  002126  100D               	iorwf	(??___flmul+1)^0,w,c
  8615  002128  100E               	iorwf	(??___flmul+2)^0,w,c
  8616  00212A  100F               	iorwf	(??___flmul+3)^0,w,c
  8617  00212C  B4D8               	btfsc	status,2,c
  8618  00212E  EF9B  F010         	goto	u7611
  8619  002132  EF9D  F010         	goto	u7610
  8620  002136                     u7611:
  8621  002136  EFA1  F010         	goto	l1388
  8622  00213A                     u7610:
  8623  00213A                     l6606:
  8624  00213A  0E01               	movlw	1
  8625  00213C  6E11               	movwf	___flmul@aexp^0,c
  8626  00213E  EFAA  F010         	goto	l1387
  8627  002142                     l1388:
  8628  002142  A017               	btfss	___flmul@prod^0,0,c
  8629  002144  EFA6  F010         	goto	u7621
  8630  002148  EFA8  F010         	goto	u7620
  8631  00214C                     u7621:
  8632  00214C  EFAA  F010         	goto	l1387
  8633  002150                     u7620:
  8634  002150  EF9D  F010         	goto	l6606
  8635  002154                     l1387:
  8636  002154  5011               	movf	___flmul@aexp^0,w,c
  8637  002156  B4D8               	btfsc	status,2,c
  8638  002158  EFB0  F010         	goto	u7631
  8639  00215C  EFB2  F010         	goto	u7630
  8640  002160                     u7631:
  8641  002160  EFD6  F010         	goto	l6618
  8642  002164                     u7630:
  8643  002164  0E01               	movlw	1
  8644  002166  2617               	addwf	___flmul@prod^0,f,c
  8645  002168  0E00               	movlw	0
  8646  00216A  2218               	addwfc	(___flmul@prod+1)^0,f,c
  8647  00216C  2219               	addwfc	(___flmul@prod+2)^0,f,c
  8648  00216E  221A               	addwfc	(___flmul@prod+3)^0,f,c
  8649  002170  A01A               	btfss	(___flmul@prod+3)^0,0,c
  8650  002172  EFBD  F010         	goto	u7641
  8651  002176  EFBF  F010         	goto	u7640
  8652  00217A                     u7641:
  8653  00217A  EFD6  F010         	goto	l6618
  8654  00217E                     u7640:
  8655  00217E  C017  F00C         	movff	___flmul@prod,??___flmul
  8656  002182  C018  F00D         	movff	___flmul@prod+1,??___flmul+1
  8657  002186  C019  F00E         	movff	___flmul@prod+2,??___flmul+2
  8658  00218A  C01A  F00F         	movff	___flmul@prod+3,??___flmul+3
  8659  00218E  340F               	rlcf	(??___flmul+3)^0,w,c
  8660  002190  320F               	rrcf	(??___flmul+3)^0,f,c
  8661  002192  320E               	rrcf	(??___flmul+2)^0,f,c
  8662  002194  320D               	rrcf	(??___flmul+1)^0,f,c
  8663  002196  320C               	rrcf	??___flmul^0,f,c
  8664  002198  C00C  F017         	movff	??___flmul,___flmul@prod
  8665  00219C  C00D  F018         	movff	??___flmul+1,___flmul@prod+1
  8666  0021A0  C00E  F019         	movff	??___flmul+2,___flmul@prod+2
  8667  0021A4  C00F  F01A         	movff	??___flmul+3,___flmul@prod+3
  8668  0021A8  4A1B               	infsnz	___flmul@temp^0,f,c
  8669  0021AA  2A1C               	incf	(___flmul@temp+1)^0,f,c
  8670  0021AC                     l6618:
  8671  0021AC  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  8672  0021AE  EFE1  F010         	goto	u7651
  8673  0021B2  501C               	movf	(___flmul@temp+1)^0,w,c
  8674  0021B4  E108               	bnz	u7650
  8675  0021B6  281B               	incf	___flmul@temp^0,w,c
  8676  0021B8  A0D8               	btfss	status,0,c
  8677  0021BA  EFE1  F010         	goto	u7651
  8678  0021BE  EFE3  F010         	goto	u7650
  8679  0021C2                     u7651:
  8680  0021C2  EFED  F010         	goto	l6622
  8681  0021C6                     u7650:
  8682  0021C6  0E00               	movlw	0
  8683  0021C8  6E17               	movwf	___flmul@prod^0,c
  8684  0021CA  0E00               	movlw	0
  8685  0021CC  6E18               	movwf	(___flmul@prod+1)^0,c
  8686  0021CE  0E80               	movlw	128
  8687  0021D0  6E19               	movwf	(___flmul@prod+2)^0,c
  8688  0021D2  0E7F               	movlw	127
  8689  0021D4  6E1A               	movwf	(___flmul@prod+3)^0,c
  8690  0021D6  EF1B  F011         	goto	l6634
  8691  0021DA                     l6622:
  8692  0021DA  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  8693  0021DC  EFFA  F010         	goto	u7660
  8694  0021E0  501C               	movf	(___flmul@temp+1)^0,w,c
  8695  0021E2  E106               	bnz	u7661
  8696  0021E4  041B               	decf	___flmul@temp^0,w,c
  8697  0021E6  B0D8               	btfsc	status,0,c
  8698  0021E8  EFF8  F010         	goto	u7661
  8699  0021EC  EFFA  F010         	goto	u7660
  8700  0021F0                     u7661:
  8701  0021F0  EF06  F011         	goto	l1395
  8702  0021F4                     u7660:
  8703  0021F4  0E00               	movlw	0
  8704  0021F6  6E17               	movwf	___flmul@prod^0,c
  8705  0021F8  0E00               	movlw	0
  8706  0021FA  6E18               	movwf	(___flmul@prod+1)^0,c
  8707  0021FC  0E00               	movlw	0
  8708  0021FE  6E19               	movwf	(___flmul@prod+2)^0,c
  8709  002200  0E00               	movlw	0
  8710  002202  6E1A               	movwf	(___flmul@prod+3)^0,c
  8711  002204  0E00               	movlw	0
  8712  002206  6E10               	movwf	___flmul@sign^0,c
  8713  002208  EF1B  F011         	goto	l6634
  8714  00220C                     l1395:
  8715  00220C  C01B  F016         	movff	___flmul@temp,___flmul@bexp
  8716  002210  0EFF               	movlw	255
  8717  002212  1617               	andwf	___flmul@prod^0,f,c
  8718  002214  0EFF               	movlw	255
  8719  002216  1618               	andwf	(___flmul@prod+1)^0,f,c
  8720  002218  0E7F               	movlw	127
  8721  00221A  1619               	andwf	(___flmul@prod+2)^0,f,c
  8722  00221C  0E00               	movlw	0
  8723  00221E  161A               	andwf	(___flmul@prod+3)^0,f,c
  8724  002220  A016               	btfss	___flmul@bexp^0,0,c
  8725  002222  EF15  F011         	goto	u7671
  8726  002226  EF17  F011         	goto	u7670
  8727  00222A                     u7671:
  8728  00222A  EF18  F011         	goto	l6632
  8729  00222E                     u7670:
  8730  00222E  8E19               	bsf	(___flmul@prod+2)^0,7,c
  8731  002230                     l6632:
  8732  002230  90D8               	bcf	status,0,c
  8733  002232  3016               	rrcf	___flmul@bexp^0,w,c
  8734  002234  6E1A               	movwf	(___flmul@prod+3)^0,c
  8735  002236                     l6634:
  8736  002236  5010               	movf	___flmul@sign^0,w,c
  8737  002238  121A               	iorwf	(___flmul@prod+3)^0,f,c
  8738  00223A  C017  F004         	movff	___flmul@prod,?___flmul
  8739  00223E  C018  F005         	movff	___flmul@prod+1,?___flmul+1
  8740  002242  C019  F006         	movff	___flmul@prod+2,?___flmul+2
  8741  002246  C01A  F007         	movff	___flmul@prod+3,?___flmul+3
  8742  00224A                     l1382:
  8743  00224A  0012               	return		;funcret
  8744  00224C                     __end_of___flmul:
  8745                           	opt callstack 0
  8746                           
  8747 ;; *************** function ___fldiv *****************
  8748 ;; Defined at:
  8749 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  b               4    3[COMRAM] unsigned char 
  8752 ;;  a               4    7[COMRAM] unsigned char 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;  grs             4   22[COMRAM] unsigned long 
  8755 ;;  rem             4   15[COMRAM] unsigned long 
  8756 ;;  new_exp         2   20[COMRAM] short 
  8757 ;;  aexp            1   27[COMRAM] unsigned char 
  8758 ;;  bexp            1   26[COMRAM] unsigned char 
  8759 ;;  sign            1   19[COMRAM] unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  4    3[COMRAM] unsigned char 
  8762 ;; Registers used:
  8763 ;;		wreg, status,2, status,0
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8769 ;;      Params:         8       0       0       0       0       0       0       0       0
  8770 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8771 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8772 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8773 ;;Total ram usage:       25 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    2
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_normalize
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text24
  8784  00224C                     __ptext24:
  8785                           	opt callstack 0
  8786  00224C                     ___fldiv:
  8787                           	opt callstack 25
  8788  00224C  5007               	movf	(___fldiv@b+3)^0,w,c
  8789  00224E  0B80               	andlw	128
  8790  002250  6E14               	movwf	___fldiv@sign^0,c
  8791  002252  5007               	movf	(___fldiv@b+3)^0,w,c
  8792  002254  2407               	addwf	(___fldiv@b+3)^0,w,c
  8793  002256  6E1B               	movwf	___fldiv@bexp^0,c
  8794  002258  AE06               	btfss	(___fldiv@b+2)^0,7,c
  8795  00225A  EF31  F011         	goto	u7261
  8796  00225E  EF33  F011         	goto	u7260
  8797  002262                     u7261:
  8798  002262  EF34  F011         	goto	l6378
  8799  002266                     u7260:
  8800  002266  801B               	bsf	___fldiv@bexp^0,0,c
  8801  002268                     l6378:
  8802  002268  501B               	movf	___fldiv@bexp^0,w,c
  8803  00226A  B4D8               	btfsc	status,2,c
  8804  00226C  EF3A  F011         	goto	u7271
  8805  002270  EF3C  F011         	goto	u7270
  8806  002274                     u7271:
  8807  002274  EF51  F011         	goto	l6388
  8808  002278                     u7270:
  8809  002278  281B               	incf	___fldiv@bexp^0,w,c
  8810  00227A  A4D8               	btfss	status,2,c
  8811  00227C  EF42  F011         	goto	u7281
  8812  002280  EF44  F011         	goto	u7280
  8813  002284                     u7281:
  8814  002284  EF4C  F011         	goto	l6384
  8815  002288                     u7280:
  8816  002288  0E00               	movlw	0
  8817  00228A  6E04               	movwf	___fldiv@b^0,c
  8818  00228C  0E00               	movlw	0
  8819  00228E  6E05               	movwf	(___fldiv@b+1)^0,c
  8820  002290  0E00               	movlw	0
  8821  002292  6E06               	movwf	(___fldiv@b+2)^0,c
  8822  002294  0E00               	movlw	0
  8823  002296  6E07               	movwf	(___fldiv@b+3)^0,c
  8824  002298                     l6384:
  8825  002298  8E06               	bsf	(___fldiv@b+2)^0,7,c
  8826  00229A  0E00               	movlw	0
  8827  00229C  6E07               	movwf	(___fldiv@b+3)^0,c
  8828  00229E  EF59  F011         	goto	l6390
  8829  0022A2                     l6388:
  8830  0022A2  0E00               	movlw	0
  8831  0022A4  6E04               	movwf	___fldiv@b^0,c
  8832  0022A6  0E00               	movlw	0
  8833  0022A8  6E05               	movwf	(___fldiv@b+1)^0,c
  8834  0022AA  0E00               	movlw	0
  8835  0022AC  6E06               	movwf	(___fldiv@b+2)^0,c
  8836  0022AE  0E00               	movlw	0
  8837  0022B0  6E07               	movwf	(___fldiv@b+3)^0,c
  8838  0022B2                     l6390:
  8839  0022B2  500B               	movf	(___fldiv@a+3)^0,w,c
  8840  0022B4  0B80               	andlw	128
  8841  0022B6  1A14               	xorwf	___fldiv@sign^0,f,c
  8842  0022B8  500B               	movf	(___fldiv@a+3)^0,w,c
  8843  0022BA  240B               	addwf	(___fldiv@a+3)^0,w,c
  8844  0022BC  6E1C               	movwf	___fldiv@aexp^0,c
  8845  0022BE  AE0A               	btfss	(___fldiv@a+2)^0,7,c
  8846  0022C0  EF64  F011         	goto	u7291
  8847  0022C4  EF66  F011         	goto	u7290
  8848  0022C8                     u7291:
  8849  0022C8  EF67  F011         	goto	l6398
  8850  0022CC                     u7290:
  8851  0022CC  801C               	bsf	___fldiv@aexp^0,0,c
  8852  0022CE                     l6398:
  8853  0022CE  501C               	movf	___fldiv@aexp^0,w,c
  8854  0022D0  B4D8               	btfsc	status,2,c
  8855  0022D2  EF6D  F011         	goto	u7301
  8856  0022D6  EF6F  F011         	goto	u7300
  8857  0022DA                     u7301:
  8858  0022DA  EF84  F011         	goto	l6408
  8859  0022DE                     u7300:
  8860  0022DE  281C               	incf	___fldiv@aexp^0,w,c
  8861  0022E0  A4D8               	btfss	status,2,c
  8862  0022E2  EF75  F011         	goto	u7311
  8863  0022E6  EF77  F011         	goto	u7310
  8864  0022EA                     u7311:
  8865  0022EA  EF7F  F011         	goto	l6404
  8866  0022EE                     u7310:
  8867  0022EE  0E00               	movlw	0
  8868  0022F0  6E08               	movwf	___fldiv@a^0,c
  8869  0022F2  0E00               	movlw	0
  8870  0022F4  6E09               	movwf	(___fldiv@a+1)^0,c
  8871  0022F6  0E00               	movlw	0
  8872  0022F8  6E0A               	movwf	(___fldiv@a+2)^0,c
  8873  0022FA  0E00               	movlw	0
  8874  0022FC  6E0B               	movwf	(___fldiv@a+3)^0,c
  8875  0022FE                     l6404:
  8876  0022FE  8E0A               	bsf	(___fldiv@a+2)^0,7,c
  8877  002300  0E00               	movlw	0
  8878  002302  6E0B               	movwf	(___fldiv@a+3)^0,c
  8879  002304  EF8C  F011         	goto	l6410
  8880  002308                     l6408:
  8881  002308  0E00               	movlw	0
  8882  00230A  6E08               	movwf	___fldiv@a^0,c
  8883  00230C  0E00               	movlw	0
  8884  00230E  6E09               	movwf	(___fldiv@a+1)^0,c
  8885  002310  0E00               	movlw	0
  8886  002312  6E0A               	movwf	(___fldiv@a+2)^0,c
  8887  002314  0E00               	movlw	0
  8888  002316  6E0B               	movwf	(___fldiv@a+3)^0,c
  8889  002318                     l6410:
  8890  002318  5008               	movf	___fldiv@a^0,w,c
  8891  00231A  1009               	iorwf	(___fldiv@a+1)^0,w,c
  8892  00231C  100A               	iorwf	(___fldiv@a+2)^0,w,c
  8893  00231E  100B               	iorwf	(___fldiv@a+3)^0,w,c
  8894  002320  A4D8               	btfss	status,2,c
  8895  002322  EF95  F011         	goto	u7321
  8896  002326  EF97  F011         	goto	u7320
  8897  00232A                     u7321:
  8898  00232A  EFAF  F011         	goto	l6422
  8899  00232E                     u7320:
  8900  00232E  0E00               	movlw	0
  8901  002330  6E04               	movwf	___fldiv@b^0,c
  8902  002332  0E00               	movlw	0
  8903  002334  6E05               	movwf	(___fldiv@b+1)^0,c
  8904  002336  0E00               	movlw	0
  8905  002338  6E06               	movwf	(___fldiv@b+2)^0,c
  8906  00233A  0E00               	movlw	0
  8907  00233C  6E07               	movwf	(___fldiv@b+3)^0,c
  8908  00233E  0E80               	movlw	128
  8909  002340  1206               	iorwf	(___fldiv@b+2)^0,f,c
  8910  002342  0E7F               	movlw	127
  8911  002344  1207               	iorwf	(___fldiv@b+3)^0,f,c
  8912  002346                     l6416:
  8913  002346  5014               	movf	___fldiv@sign^0,w,c
  8914  002348  1207               	iorwf	(___fldiv@b+3)^0,f,c
  8915  00234A  C004  F004         	movff	___fldiv@b,?___fldiv
  8916  00234E  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
  8917  002352  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
  8918  002356  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
  8919  00235A  EFF2  F012         	goto	l1346
  8920  00235E                     l6422:
  8921  00235E  501B               	movf	___fldiv@bexp^0,w,c
  8922  002360  A4D8               	btfss	status,2,c
  8923  002362  EFB5  F011         	goto	u7331
  8924  002366  EFB7  F011         	goto	u7330
  8925  00236A                     u7331:
  8926  00236A  EFC1  F011         	goto	l6430
  8927  00236E                     u7330:
  8928  00236E  0E00               	movlw	0
  8929  002370  6E04               	movwf	?___fldiv^0,c
  8930  002372  0E00               	movlw	0
  8931  002374  6E05               	movwf	(?___fldiv+1)^0,c
  8932  002376  0E00               	movlw	0
  8933  002378  6E06               	movwf	(?___fldiv+2)^0,c
  8934  00237A  0E00               	movlw	0
  8935  00237C  6E07               	movwf	(?___fldiv+3)^0,c
  8936  00237E  EFF2  F012         	goto	l1346
  8937  002382                     l6430:
  8938  002382  501C               	movf	___fldiv@aexp^0,w,c
  8939  002384  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
  8940  002388  6A0D               	clrf	(??___fldiv+1)^0,c
  8941  00238A  5E0C               	subwf	??___fldiv^0,f,c
  8942  00238C  0E00               	movlw	0
  8943  00238E  5A0D               	subwfb	(??___fldiv+1)^0,f,c
  8944  002390  0E7F               	movlw	127
  8945  002392  240C               	addwf	??___fldiv^0,w,c
  8946  002394  6E15               	movwf	___fldiv@new_exp^0,c
  8947  002396  0E00               	movlw	0
  8948  002398  200D               	addwfc	(??___fldiv+1)^0,w,c
  8949  00239A  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  8950  00239C  C004  F010         	movff	___fldiv@b,___fldiv@rem
  8951  0023A0  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
  8952  0023A4  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
  8953  0023A8  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
  8954  0023AC  0E00               	movlw	0
  8955  0023AE  6E04               	movwf	___fldiv@b^0,c
  8956  0023B0  0E00               	movlw	0
  8957  0023B2  6E05               	movwf	(___fldiv@b+1)^0,c
  8958  0023B4  0E00               	movlw	0
  8959  0023B6  6E06               	movwf	(___fldiv@b+2)^0,c
  8960  0023B8  0E00               	movlw	0
  8961  0023BA  6E07               	movwf	(___fldiv@b+3)^0,c
  8962  0023BC  0E00               	movlw	0
  8963  0023BE  6E17               	movwf	___fldiv@grs^0,c
  8964  0023C0  0E00               	movlw	0
  8965  0023C2  6E18               	movwf	(___fldiv@grs+1)^0,c
  8966  0023C4  0E00               	movlw	0
  8967  0023C6  6E19               	movwf	(___fldiv@grs+2)^0,c
  8968  0023C8  0E00               	movlw	0
  8969  0023CA  6E1A               	movwf	(___fldiv@grs+3)^0,c
  8970  0023CC  0E00               	movlw	0
  8971  0023CE  6E1C               	movwf	___fldiv@aexp^0,c
  8972  0023D0  EF22  F012         	goto	l1348
  8973  0023D4                     l6440:
  8974  0023D4  501C               	movf	___fldiv@aexp^0,w,c
  8975  0023D6  B4D8               	btfsc	status,2,c
  8976  0023D8  EFF0  F011         	goto	u7341
  8977  0023DC  EFF2  F011         	goto	u7340
  8978  0023E0                     u7341:
  8979  0023E0  EF09  F012         	goto	l6448
  8980  0023E4                     u7340:
  8981  0023E4  90D8               	bcf	status,0,c
  8982  0023E6  3610               	rlcf	___fldiv@rem^0,f,c
  8983  0023E8  3611               	rlcf	(___fldiv@rem+1)^0,f,c
  8984  0023EA  3612               	rlcf	(___fldiv@rem+2)^0,f,c
  8985  0023EC  3613               	rlcf	(___fldiv@rem+3)^0,f,c
  8986  0023EE  90D8               	bcf	status,0,c
  8987  0023F0  3604               	rlcf	___fldiv@b^0,f,c
  8988  0023F2  3605               	rlcf	(___fldiv@b+1)^0,f,c
  8989  0023F4  3606               	rlcf	(___fldiv@b+2)^0,f,c
  8990  0023F6  3607               	rlcf	(___fldiv@b+3)^0,f,c
  8991  0023F8  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  8992  0023FA  EF01  F012         	goto	u7351
  8993  0023FE  EF03  F012         	goto	u7350
  8994  002402                     u7351:
  8995  002402  EF04  F012         	goto	l1351
  8996  002406                     u7350:
  8997  002406  8004               	bsf	___fldiv@b^0,0,c
  8998  002408                     l1351:
  8999  002408  90D8               	bcf	status,0,c
  9000  00240A  3617               	rlcf	___fldiv@grs^0,f,c
  9001  00240C  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  9002  00240E  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  9003  002410  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  9004  002412                     l6448:
  9005  002412  5008               	movf	___fldiv@a^0,w,c
  9006  002414  5C10               	subwf	___fldiv@rem^0,w,c
  9007  002416  5009               	movf	(___fldiv@a+1)^0,w,c
  9008  002418  5811               	subwfb	(___fldiv@rem+1)^0,w,c
  9009  00241A  500A               	movf	(___fldiv@a+2)^0,w,c
  9010  00241C  5812               	subwfb	(___fldiv@rem+2)^0,w,c
  9011  00241E  500B               	movf	(___fldiv@a+3)^0,w,c
  9012  002420  5813               	subwfb	(___fldiv@rem+3)^0,w,c
  9013  002422  A0D8               	btfss	status,0,c
  9014  002424  EF16  F012         	goto	u7361
  9015  002428  EF18  F012         	goto	u7360
  9016  00242C                     u7361:
  9017  00242C  EF21  F012         	goto	l6454
  9018  002430                     u7360:
  9019  002430  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
  9020  002432  5008               	movf	___fldiv@a^0,w,c
  9021  002434  5E10               	subwf	___fldiv@rem^0,f,c
  9022  002436  5009               	movf	(___fldiv@a+1)^0,w,c
  9023  002438  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
  9024  00243A  500A               	movf	(___fldiv@a+2)^0,w,c
  9025  00243C  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
  9026  00243E  500B               	movf	(___fldiv@a+3)^0,w,c
  9027  002440  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
  9028  002442                     l6454:
  9029  002442  2A1C               	incf	___fldiv@aexp^0,f,c
  9030  002444                     l1348:
  9031  002444  0E19               	movlw	25
  9032  002446  641C               	cpfsgt	___fldiv@aexp^0,c
  9033  002448  EF28  F012         	goto	u7371
  9034  00244C  EF2A  F012         	goto	u7370
  9035  002450                     u7371:
  9036  002450  EFEA  F011         	goto	l6440
  9037  002454                     u7370:
  9038  002454  5010               	movf	___fldiv@rem^0,w,c
  9039  002456  1011               	iorwf	(___fldiv@rem+1)^0,w,c
  9040  002458  1012               	iorwf	(___fldiv@rem+2)^0,w,c
  9041  00245A  1013               	iorwf	(___fldiv@rem+3)^0,w,c
  9042  00245C  B4D8               	btfsc	status,2,c
  9043  00245E  EF33  F012         	goto	u7381
  9044  002462  EF35  F012         	goto	u7380
  9045  002466                     u7381:
  9046  002466  EF4D  F012         	goto	l6466
  9047  00246A                     u7380:
  9048  00246A  8017               	bsf	___fldiv@grs^0,0,c
  9049  00246C  EF4D  F012         	goto	l6466
  9050  002470                     l6460:
  9051  002470  90D8               	bcf	status,0,c
  9052  002472  3604               	rlcf	___fldiv@b^0,f,c
  9053  002474  3605               	rlcf	(___fldiv@b+1)^0,f,c
  9054  002476  3606               	rlcf	(___fldiv@b+2)^0,f,c
  9055  002478  3607               	rlcf	(___fldiv@b+3)^0,f,c
  9056  00247A  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  9057  00247C  EF42  F012         	goto	u7391
  9058  002480  EF44  F012         	goto	u7390
  9059  002484                     u7391:
  9060  002484  EF45  F012         	goto	l1357
  9061  002488                     u7390:
  9062  002488  8004               	bsf	___fldiv@b^0,0,c
  9063  00248A                     l1357:
  9064  00248A  90D8               	bcf	status,0,c
  9065  00248C  3617               	rlcf	___fldiv@grs^0,f,c
  9066  00248E  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  9067  002490  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  9068  002492  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  9069  002494  0615               	decf	___fldiv@new_exp^0,f,c
  9070  002496  A0D8               	btfss	status,0,c
  9071  002498  0616               	decf	(___fldiv@new_exp+1)^0,f,c
  9072  00249A                     l6466:
  9073  00249A  AE06               	btfss	(___fldiv@b+2)^0,7,c
  9074  00249C  EF52  F012         	goto	u7401
  9075  0024A0  EF54  F012         	goto	u7400
  9076  0024A4                     u7401:
  9077  0024A4  EF38  F012         	goto	l6460
  9078  0024A8                     u7400:
  9079  0024A8  0E00               	movlw	0
  9080  0024AA  6E1C               	movwf	___fldiv@aexp^0,c
  9081  0024AC  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  9082  0024AE  EF5B  F012         	goto	u7411
  9083  0024B2  EF5D  F012         	goto	u7410
  9084  0024B6                     u7411:
  9085  0024B6  EF81  F012         	goto	l1359
  9086  0024BA                     u7410:
  9087  0024BA  0EFF               	movlw	255
  9088  0024BC  1417               	andwf	___fldiv@grs^0,w,c
  9089  0024BE  6E0C               	movwf	??___fldiv^0,c
  9090  0024C0  0EFF               	movlw	255
  9091  0024C2  1418               	andwf	(___fldiv@grs+1)^0,w,c
  9092  0024C4  6E0D               	movwf	(??___fldiv+1)^0,c
  9093  0024C6  0EFF               	movlw	255
  9094  0024C8  1419               	andwf	(___fldiv@grs+2)^0,w,c
  9095  0024CA  6E0E               	movwf	(??___fldiv+2)^0,c
  9096  0024CC  0E7F               	movlw	127
  9097  0024CE  141A               	andwf	(___fldiv@grs+3)^0,w,c
  9098  0024D0  6E0F               	movwf	(??___fldiv+3)^0,c
  9099  0024D2  500C               	movf	??___fldiv^0,w,c
  9100  0024D4  100D               	iorwf	(??___fldiv+1)^0,w,c
  9101  0024D6  100E               	iorwf	(??___fldiv+2)^0,w,c
  9102  0024D8  100F               	iorwf	(??___fldiv+3)^0,w,c
  9103  0024DA  B4D8               	btfsc	status,2,c
  9104  0024DC  EF72  F012         	goto	u7421
  9105  0024E0  EF74  F012         	goto	u7420
  9106  0024E4                     u7421:
  9107  0024E4  EF78  F012         	goto	l1360
  9108  0024E8                     u7420:
  9109  0024E8                     l6474:
  9110  0024E8  0E01               	movlw	1
  9111  0024EA  6E1C               	movwf	___fldiv@aexp^0,c
  9112  0024EC  EF81  F012         	goto	l1359
  9113  0024F0                     l1360:
  9114  0024F0  A004               	btfss	___fldiv@b^0,0,c
  9115  0024F2  EF7D  F012         	goto	u7431
  9116  0024F6  EF7F  F012         	goto	u7430
  9117  0024FA                     u7431:
  9118  0024FA  EF81  F012         	goto	l1359
  9119  0024FE                     u7430:
  9120  0024FE  EF74  F012         	goto	l6474
  9121  002502                     l1359:
  9122  002502  501C               	movf	___fldiv@aexp^0,w,c
  9123  002504  B4D8               	btfsc	status,2,c
  9124  002506  EF87  F012         	goto	u7441
  9125  00250A  EF89  F012         	goto	u7440
  9126  00250E                     u7441:
  9127  00250E  EFAD  F012         	goto	l6486
  9128  002512                     u7440:
  9129  002512  0E01               	movlw	1
  9130  002514  2604               	addwf	___fldiv@b^0,f,c
  9131  002516  0E00               	movlw	0
  9132  002518  2205               	addwfc	(___fldiv@b+1)^0,f,c
  9133  00251A  2206               	addwfc	(___fldiv@b+2)^0,f,c
  9134  00251C  2207               	addwfc	(___fldiv@b+3)^0,f,c
  9135  00251E  A007               	btfss	(___fldiv@b+3)^0,0,c
  9136  002520  EF94  F012         	goto	u7451
  9137  002524  EF96  F012         	goto	u7450
  9138  002528                     u7451:
  9139  002528  EFAD  F012         	goto	l6486
  9140  00252C                     u7450:
  9141  00252C  C004  F00C         	movff	___fldiv@b,??___fldiv
  9142  002530  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
  9143  002534  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
  9144  002538  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
  9145  00253C  340F               	rlcf	(??___fldiv+3)^0,w,c
  9146  00253E  320F               	rrcf	(??___fldiv+3)^0,f,c
  9147  002540  320E               	rrcf	(??___fldiv+2)^0,f,c
  9148  002542  320D               	rrcf	(??___fldiv+1)^0,f,c
  9149  002544  320C               	rrcf	??___fldiv^0,f,c
  9150  002546  C00C  F004         	movff	??___fldiv,___fldiv@b
  9151  00254A  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
  9152  00254E  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
  9153  002552  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
  9154  002556  4A15               	infsnz	___fldiv@new_exp^0,f,c
  9155  002558  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
  9156  00255A                     l6486:
  9157  00255A  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9158  00255C  EFB8  F012         	goto	u7461
  9159  002560  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  9160  002562  E108               	bnz	u7460
  9161  002564  2815               	incf	___fldiv@new_exp^0,w,c
  9162  002566  A0D8               	btfss	status,0,c
  9163  002568  EFB8  F012         	goto	u7461
  9164  00256C  EFBA  F012         	goto	u7460
  9165  002570                     u7461:
  9166  002570  EFC5  F012         	goto	l6490
  9167  002574                     u7460:
  9168  002574  0E00               	movlw	0
  9169  002576  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  9170  002578  6815               	setf	___fldiv@new_exp^0,c
  9171  00257A  0E00               	movlw	0
  9172  00257C  6E04               	movwf	___fldiv@b^0,c
  9173  00257E  0E00               	movlw	0
  9174  002580  6E05               	movwf	(___fldiv@b+1)^0,c
  9175  002582  0E00               	movlw	0
  9176  002584  6E06               	movwf	(___fldiv@b+2)^0,c
  9177  002586  0E00               	movlw	0
  9178  002588  6E07               	movwf	(___fldiv@b+3)^0,c
  9179  00258A                     l6490:
  9180  00258A  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9181  00258C  EFD2  F012         	goto	u7470
  9182  002590  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  9183  002592  E106               	bnz	u7471
  9184  002594  0415               	decf	___fldiv@new_exp^0,w,c
  9185  002596  B0D8               	btfsc	status,0,c
  9186  002598  EFD0  F012         	goto	u7471
  9187  00259C  EFD2  F012         	goto	u7470
  9188  0025A0                     u7471:
  9189  0025A0  EFE0  F012         	goto	l6494
  9190  0025A4                     u7470:
  9191  0025A4  0E00               	movlw	0
  9192  0025A6  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  9193  0025A8  0E00               	movlw	0
  9194  0025AA  6E15               	movwf	___fldiv@new_exp^0,c
  9195  0025AC  0E00               	movlw	0
  9196  0025AE  6E04               	movwf	___fldiv@b^0,c
  9197  0025B0  0E00               	movlw	0
  9198  0025B2  6E05               	movwf	(___fldiv@b+1)^0,c
  9199  0025B4  0E00               	movlw	0
  9200  0025B6  6E06               	movwf	(___fldiv@b+2)^0,c
  9201  0025B8  0E00               	movlw	0
  9202  0025BA  6E07               	movwf	(___fldiv@b+3)^0,c
  9203  0025BC  0E00               	movlw	0
  9204  0025BE  6E14               	movwf	___fldiv@sign^0,c
  9205  0025C0                     l6494:
  9206  0025C0  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
  9207  0025C4  A01B               	btfss	___fldiv@bexp^0,0,c
  9208  0025C6  EFE7  F012         	goto	u7481
  9209  0025CA  EFE9  F012         	goto	u7480
  9210  0025CE                     u7481:
  9211  0025CE  EFEC  F012         	goto	l6500
  9212  0025D2                     u7480:
  9213  0025D2  8E06               	bsf	(___fldiv@b+2)^0,7,c
  9214  0025D4  EFED  F012         	goto	l6502
  9215  0025D8                     l6500:
  9216  0025D8  9E06               	bcf	(___fldiv@b+2)^0,7,c
  9217  0025DA                     l6502:
  9218  0025DA  90D8               	bcf	status,0,c
  9219  0025DC  301B               	rrcf	___fldiv@bexp^0,w,c
  9220  0025DE  6E07               	movwf	(___fldiv@b+3)^0,c
  9221  0025E0  EFA3  F011         	goto	l6416
  9222  0025E4                     l1346:
  9223  0025E4  0012               	return		;funcret
  9224  0025E6                     __end_of___fldiv:
  9225                           	opt callstack 0
  9226                           
  9227 ;; *************** function ___xxtofl *****************
  9228 ;; Defined at:
  9229 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  sign            1    wreg     unsigned char 
  9232 ;;  val             4    3[COMRAM] long 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  sign            1   11[COMRAM] unsigned char 
  9235 ;;  arg             4   13[COMRAM] unsigned long 
  9236 ;;  exp             1   12[COMRAM] unsigned char 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  4    3[COMRAM] unsigned char 
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9246 ;;      Params:         4       0       0       0       0       0       0       0       0
  9247 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9248 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9249 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9250 ;;Total ram usage:       14 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    2
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_my_vprintf
  9257 ;;		_ftoa_sci
  9258 ;;		_ftoa
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           	psect	text25
  9263  003740                     __ptext25:
  9264                           	opt callstack 0
  9265  003740                     ___xxtofl:
  9266                           	opt callstack 26
  9267                           
  9268                           ;incstack = 0
  9269                           ;___xxtofl@sign stored from wreg
  9270  003740  6E0C               	movwf	___xxtofl@sign^0,c
  9271  003742  500C               	movf	___xxtofl@sign^0,w,c
  9272  003744  B4D8               	btfsc	status,2,c
  9273  003746  EFA7  F01B         	goto	u8121
  9274  00374A  EFA9  F01B         	goto	u8120
  9275  00374E                     u8121:
  9276  00374E  EFCB  F01B         	goto	l1419
  9277  003752                     u8120:
  9278  003752  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  9279  003754  EFB0  F01B         	goto	u8130
  9280  003758  EFAE  F01B         	goto	u8131
  9281  00375C                     u8131:
  9282  00375C  EFCB  F01B         	goto	l1419
  9283  003760                     u8130:
  9284  003760  C004  F008         	movff	___xxtofl@val,??___xxtofl
  9285  003764  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  9286  003768  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  9287  00376C  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  9288  003770  1E08               	comf	??___xxtofl^0,f,c
  9289  003772  1E09               	comf	(??___xxtofl+1)^0,f,c
  9290  003774  1E0A               	comf	(??___xxtofl+2)^0,f,c
  9291  003776  1E0B               	comf	(??___xxtofl+3)^0,f,c
  9292  003778  2A08               	incf	??___xxtofl^0,f,c
  9293  00377A  0E00               	movlw	0
  9294  00377C  2209               	addwfc	(??___xxtofl+1)^0,f,c
  9295  00377E  220A               	addwfc	(??___xxtofl+2)^0,f,c
  9296  003780  220B               	addwfc	(??___xxtofl+3)^0,f,c
  9297  003782  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  9298  003786  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  9299  00378A  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  9300  00378E  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  9301  003792  EFD3  F01B         	goto	l6920
  9302  003796                     l1419:
  9303  003796  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  9304  00379A  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9305  00379E  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9306  0037A2  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9307  0037A6                     l6920:
  9308  0037A6  5004               	movf	___xxtofl@val^0,w,c
  9309  0037A8  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  9310  0037AA  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  9311  0037AC  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  9312  0037AE  A4D8               	btfss	status,2,c
  9313  0037B0  EFDC  F01B         	goto	u8141
  9314  0037B4  EFDE  F01B         	goto	u8140
  9315  0037B8                     u8141:
  9316  0037B8  EFE8  F01B         	goto	l6926
  9317  0037BC                     u8140:
  9318  0037BC  0E00               	movlw	0
  9319  0037BE  6E04               	movwf	?___xxtofl^0,c
  9320  0037C0  0E00               	movlw	0
  9321  0037C2  6E05               	movwf	(?___xxtofl+1)^0,c
  9322  0037C4  0E00               	movlw	0
  9323  0037C6  6E06               	movwf	(?___xxtofl+2)^0,c
  9324  0037C8  0E00               	movlw	0
  9325  0037CA  6E07               	movwf	(?___xxtofl+3)^0,c
  9326  0037CC  EF79  F01C         	goto	l1422
  9327  0037D0                     l6926:
  9328  0037D0  0E96               	movlw	150
  9329  0037D2  6E0D               	movwf	___xxtofl@exp^0,c
  9330  0037D4  EFF2  F01B         	goto	l6930
  9331  0037D8                     l6928:
  9332  0037D8  2A0D               	incf	___xxtofl@exp^0,f,c
  9333  0037DA  90D8               	bcf	status,0,c
  9334  0037DC  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  9335  0037DE  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  9336  0037E0  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  9337  0037E2  320E               	rrcf	___xxtofl@arg^0,f,c
  9338  0037E4                     l6930:
  9339  0037E4  0E00               	movlw	0
  9340  0037E6  140E               	andwf	___xxtofl@arg^0,w,c
  9341  0037E8  6E08               	movwf	??___xxtofl^0,c
  9342  0037EA  0E00               	movlw	0
  9343  0037EC  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  9344  0037EE  6E09               	movwf	(??___xxtofl+1)^0,c
  9345  0037F0  0E00               	movlw	0
  9346  0037F2  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  9347  0037F4  6E0A               	movwf	(??___xxtofl+2)^0,c
  9348  0037F6  0EFE               	movlw	254
  9349  0037F8  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  9350  0037FA  6E0B               	movwf	(??___xxtofl+3)^0,c
  9351  0037FC  5008               	movf	??___xxtofl^0,w,c
  9352  0037FE  1009               	iorwf	(??___xxtofl+1)^0,w,c
  9353  003800  100A               	iorwf	(??___xxtofl+2)^0,w,c
  9354  003802  100B               	iorwf	(??___xxtofl+3)^0,w,c
  9355  003804  A4D8               	btfss	status,2,c
  9356  003806  EF07  F01C         	goto	u8151
  9357  00380A  EF09  F01C         	goto	u8150
  9358  00380E                     u8151:
  9359  00380E  EFEC  F01B         	goto	l6928
  9360  003812                     u8150:
  9361  003812  EF17  F01C         	goto	l1426
  9362  003816                     l6932:
  9363  003816  2A0D               	incf	___xxtofl@exp^0,f,c
  9364  003818  0E01               	movlw	1
  9365  00381A  260E               	addwf	___xxtofl@arg^0,f,c
  9366  00381C  0E00               	movlw	0
  9367  00381E  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  9368  003820  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  9369  003822  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  9370  003824  90D8               	bcf	status,0,c
  9371  003826  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  9372  003828  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  9373  00382A  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  9374  00382C  320E               	rrcf	___xxtofl@arg^0,f,c
  9375  00382E                     l1426:
  9376  00382E  0E00               	movlw	0
  9377  003830  140E               	andwf	___xxtofl@arg^0,w,c
  9378  003832  6E08               	movwf	??___xxtofl^0,c
  9379  003834  0E00               	movlw	0
  9380  003836  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  9381  003838  6E09               	movwf	(??___xxtofl+1)^0,c
  9382  00383A  0E00               	movlw	0
  9383  00383C  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  9384  00383E  6E0A               	movwf	(??___xxtofl+2)^0,c
  9385  003840  0EFF               	movlw	255
  9386  003842  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  9387  003844  6E0B               	movwf	(??___xxtofl+3)^0,c
  9388  003846  5008               	movf	??___xxtofl^0,w,c
  9389  003848  1009               	iorwf	(??___xxtofl+1)^0,w,c
  9390  00384A  100A               	iorwf	(??___xxtofl+2)^0,w,c
  9391  00384C  100B               	iorwf	(??___xxtofl+3)^0,w,c
  9392  00384E  A4D8               	btfss	status,2,c
  9393  003850  EF2C  F01C         	goto	u8161
  9394  003854  EF2E  F01C         	goto	u8160
  9395  003858                     u8161:
  9396  003858  EF0B  F01C         	goto	l6932
  9397  00385C                     u8160:
  9398  00385C  EF36  F01C         	goto	l6940
  9399  003860                     l6938:
  9400  003860  060D               	decf	___xxtofl@exp^0,f,c
  9401  003862  90D8               	bcf	status,0,c
  9402  003864  360E               	rlcf	___xxtofl@arg^0,f,c
  9403  003866  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  9404  003868  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  9405  00386A  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  9406  00386C                     l6940:
  9407  00386C  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  9408  00386E  EF3B  F01C         	goto	u8171
  9409  003872  EF3D  F01C         	goto	u8170
  9410  003876                     u8171:
  9411  003876  EF45  F01C         	goto	l1433
  9412  00387A                     u8170:
  9413  00387A  0E02               	movlw	2
  9414  00387C  600D               	cpfslt	___xxtofl@exp^0,c
  9415  00387E  EF43  F01C         	goto	u8181
  9416  003882  EF45  F01C         	goto	u8180
  9417  003886                     u8181:
  9418  003886  EF30  F01C         	goto	l6938
  9419  00388A                     u8180:
  9420  00388A                     l1433:
  9421  00388A  B00D               	btfsc	___xxtofl@exp^0,0,c
  9422  00388C  EF4A  F01C         	goto	u8191
  9423  003890  EF4C  F01C         	goto	u8190
  9424  003894                     u8191:
  9425  003894  EF4D  F01C         	goto	l6946
  9426  003898                     u8190:
  9427  003898  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  9428  00389A                     l6946:
  9429  00389A  90D8               	bcf	status,0,c
  9430  00389C  320D               	rrcf	___xxtofl@exp^0,f,c
  9431  00389E  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  9432  0038A2  6A09               	clrf	(??___xxtofl+1)^0,c
  9433  0038A4  6A0A               	clrf	(??___xxtofl+2)^0,c
  9434  0038A6  6A0B               	clrf	(??___xxtofl+3)^0,c
  9435  0038A8  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  9436  0038AC  6A0A               	clrf	(??___xxtofl+2)^0,c
  9437  0038AE  6A09               	clrf	(??___xxtofl+1)^0,c
  9438  0038B0  6A08               	clrf	??___xxtofl^0,c
  9439  0038B2  5008               	movf	??___xxtofl^0,w,c
  9440  0038B4  120E               	iorwf	___xxtofl@arg^0,f,c
  9441  0038B6  5009               	movf	(??___xxtofl+1)^0,w,c
  9442  0038B8  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  9443  0038BA  500A               	movf	(??___xxtofl+2)^0,w,c
  9444  0038BC  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  9445  0038BE  500B               	movf	(??___xxtofl+3)^0,w,c
  9446  0038C0  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  9447  0038C2  500C               	movf	___xxtofl@sign^0,w,c
  9448  0038C4  B4D8               	btfsc	status,2,c
  9449  0038C6  EF67  F01C         	goto	u8201
  9450  0038CA  EF69  F01C         	goto	u8200
  9451  0038CE                     u8201:
  9452  0038CE  EF71  F01C         	goto	l6956
  9453  0038D2                     u8200:
  9454  0038D2  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  9455  0038D4  EF70  F01C         	goto	u8210
  9456  0038D8  EF6E  F01C         	goto	u8211
  9457  0038DC                     u8211:
  9458  0038DC  EF71  F01C         	goto	l6956
  9459  0038E0                     u8210:
  9460  0038E0  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  9461  0038E2                     l6956:
  9462  0038E2  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  9463  0038E6  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  9464  0038EA  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  9465  0038EE  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  9466  0038F2                     l1422:
  9467  0038F2  0012               	return		;funcret
  9468  0038F4                     __end_of___xxtofl:
  9469                           	opt callstack 0
  9470                           
  9471 ;; *************** function ___fltol *****************
  9472 ;; Defined at:
  9473 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  f1              4   28[COMRAM] unsigned char 
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;  exp1            1   37[COMRAM] unsigned char 
  9478 ;;  sign1           1   36[COMRAM] unsigned char 
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  4   28[COMRAM] long 
  9481 ;; Registers used:
  9482 ;;		wreg, status,2, status,0
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9488 ;;      Params:         4       0       0       0       0       0       0       0       0
  9489 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9490 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9491 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9492 ;;Total ram usage:       10 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; Hardware stack levels required when called:    2
  9495 ;; This function calls:
  9496 ;;		Nothing
  9497 ;; This function is called by:
  9498 ;;		_ftoa_sci
  9499 ;;		_ftoa
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text26
  9504  004362                     __ptext26:
  9505                           	opt callstack 0
  9506  004362                     ___fltol:
  9507                           	opt callstack 26
  9508  004362  341F               	rlcf	(___fltol@f1+2)^0,w,c
  9509  004364  3420               	rlcf	(___fltol@f1+3)^0,w,c
  9510  004366  6E26               	movwf	___fltol@exp1^0,c
  9511  004368  5026               	movf	___fltol@exp1^0,w,c
  9512  00436A  A4D8               	btfss	status,2,c
  9513  00436C  EFBA  F021         	goto	u8051
  9514  004370  EFBC  F021         	goto	u8050
  9515  004374                     u8051:
  9516  004374  EFC6  F021         	goto	l6876
  9517  004378                     u8050:
  9518  004378                     l6872:
  9519  004378  0E00               	movlw	0
  9520  00437A  6E1D               	movwf	?___fltol^0,c
  9521  00437C  0E00               	movlw	0
  9522  00437E  6E1E               	movwf	(?___fltol+1)^0,c
  9523  004380  0E00               	movlw	0
  9524  004382  6E1F               	movwf	(?___fltol+2)^0,c
  9525  004384  0E00               	movlw	0
  9526  004386  6E20               	movwf	(?___fltol+3)^0,c
  9527  004388  EF33  F022         	goto	l1061
  9528  00438C                     l6876:
  9529  00438C  C01D  F021         	movff	___fltol@f1,??___fltol
  9530  004390  C01E  F022         	movff	___fltol@f1+1,??___fltol+1
  9531  004394  C01F  F023         	movff	___fltol@f1+2,??___fltol+2
  9532  004398  C020  F024         	movff	___fltol@f1+3,??___fltol+3
  9533  00439C  0E20               	movlw	32
  9534  00439E  EFD6  F021         	goto	u8060
  9535  0043A2                     u8065:
  9536  0043A2  90D8               	bcf	status,0,c
  9537  0043A4  3224               	rrcf	(??___fltol+3)^0,f,c
  9538  0043A6  3223               	rrcf	(??___fltol+2)^0,f,c
  9539  0043A8  3222               	rrcf	(??___fltol+1)^0,f,c
  9540  0043AA  3221               	rrcf	??___fltol^0,f,c
  9541  0043AC                     u8060:
  9542  0043AC  2EE8               	decfsz	wreg,f,c
  9543  0043AE  EFD1  F021         	goto	u8065
  9544  0043B2  5021               	movf	??___fltol^0,w,c
  9545  0043B4  6E25               	movwf	___fltol@sign1^0,c
  9546  0043B6  8E1F               	bsf	(___fltol@f1+2)^0,7,c
  9547  0043B8  0EFF               	movlw	255
  9548  0043BA  161D               	andwf	___fltol@f1^0,f,c
  9549  0043BC  0EFF               	movlw	255
  9550  0043BE  161E               	andwf	(___fltol@f1+1)^0,f,c
  9551  0043C0  0EFF               	movlw	255
  9552  0043C2  161F               	andwf	(___fltol@f1+2)^0,f,c
  9553  0043C4  0E00               	movlw	0
  9554  0043C6  1620               	andwf	(___fltol@f1+3)^0,f,c
  9555  0043C8  0E96               	movlw	150
  9556  0043CA  5E26               	subwf	___fltol@exp1^0,f,c
  9557  0043CC  BE26               	btfsc	___fltol@exp1^0,7,c
  9558  0043CE  EFED  F021         	goto	u8070
  9559  0043D2  EFEB  F021         	goto	u8071
  9560  0043D6                     u8071:
  9561  0043D6  EF03  F022         	goto	l6896
  9562  0043DA                     u8070:
  9563  0043DA  5026               	movf	___fltol@exp1^0,w,c
  9564  0043DC  0A80               	xorlw	128
  9565  0043DE  0F97               	addlw	151
  9566  0043E0  B0D8               	btfsc	status,0,c
  9567  0043E2  EFF5  F021         	goto	u8081
  9568  0043E6  EFF7  F021         	goto	u8080
  9569  0043EA                     u8081:
  9570  0043EA  EFF9  F021         	goto	l6892
  9571  0043EE                     u8080:
  9572  0043EE  EFBC  F021         	goto	l6872
  9573  0043F2                     l6892:
  9574  0043F2  90D8               	bcf	status,0,c
  9575  0043F4  3220               	rrcf	(___fltol@f1+3)^0,f,c
  9576  0043F6  321F               	rrcf	(___fltol@f1+2)^0,f,c
  9577  0043F8  321E               	rrcf	(___fltol@f1+1)^0,f,c
  9578  0043FA  321D               	rrcf	___fltol@f1^0,f,c
  9579  0043FC  3E26               	incfsz	___fltol@exp1^0,f,c
  9580  0043FE  EFF9  F021         	goto	l6892
  9581  004402  EF1B  F022         	goto	l6906
  9582  004406                     l6896:
  9583  004406  0E1F               	movlw	31
  9584  004408  6426               	cpfsgt	___fltol@exp1^0,c
  9585  00440A  EF09  F022         	goto	u8091
  9586  00440E  EF0B  F022         	goto	u8090
  9587  004412                     u8091:
  9588  004412  EF13  F022         	goto	l6904
  9589  004416                     u8090:
  9590  004416  EFBC  F021         	goto	l6872
  9591  00441A                     l6902:
  9592  00441A  90D8               	bcf	status,0,c
  9593  00441C  361D               	rlcf	___fltol@f1^0,f,c
  9594  00441E  361E               	rlcf	(___fltol@f1+1)^0,f,c
  9595  004420  361F               	rlcf	(___fltol@f1+2)^0,f,c
  9596  004422  3620               	rlcf	(___fltol@f1+3)^0,f,c
  9597  004424  0626               	decf	___fltol@exp1^0,f,c
  9598  004426                     l6904:
  9599  004426  5026               	movf	___fltol@exp1^0,w,c
  9600  004428  A4D8               	btfss	status,2,c
  9601  00442A  EF19  F022         	goto	u8101
  9602  00442E  EF1B  F022         	goto	u8100
  9603  004432                     u8101:
  9604  004432  EF0D  F022         	goto	l6902
  9605  004436                     u8100:
  9606  004436                     l6906:
  9607  004436  5025               	movf	___fltol@sign1^0,w,c
  9608  004438  B4D8               	btfsc	status,2,c
  9609  00443A  EF21  F022         	goto	u8111
  9610  00443E  EF23  F022         	goto	u8110
  9611  004442                     u8111:
  9612  004442  EF2B  F022         	goto	l6910
  9613  004446                     u8110:
  9614  004446  1E20               	comf	(___fltol@f1+3)^0,f,c
  9615  004448  1E1F               	comf	(___fltol@f1+2)^0,f,c
  9616  00444A  1E1E               	comf	(___fltol@f1+1)^0,f,c
  9617  00444C  6C1D               	negf	___fltol@f1^0,c
  9618  00444E  0E00               	movlw	0
  9619  004450  221E               	addwfc	(___fltol@f1+1)^0,f,c
  9620  004452  221F               	addwfc	(___fltol@f1+2)^0,f,c
  9621  004454  2220               	addwfc	(___fltol@f1+3)^0,f,c
  9622  004456                     l6910:
  9623  004456  C01D  F01D         	movff	___fltol@f1,?___fltol
  9624  00445A  C01E  F01E         	movff	___fltol@f1+1,?___fltol+1
  9625  00445E  C01F  F01F         	movff	___fltol@f1+2,?___fltol+2
  9626  004462  C020  F020         	movff	___fltol@f1+3,?___fltol+3
  9627  004466                     l1061:
  9628  004466  0012               	return		;funcret
  9629  004468                     __end_of___fltol:
  9630                           	opt callstack 0
  9631                           
  9632 ;; *************** function ___flsub *****************
  9633 ;; Defined at:
  9634 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;  b               4   28[COMRAM] long 
  9637 ;;  a               4   32[COMRAM] long 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  4   28[COMRAM] long 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9649 ;;      Params:         8       0       0       0       0       0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9652 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9653 ;;Total ram usage:        8 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    3
  9656 ;; This function calls:
  9657 ;;		___fladd
  9658 ;; This function is called by:
  9659 ;;		_ftoa_sci
  9660 ;;		_ftoa
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           	psect	text27
  9665  004EC0                     __ptext27:
  9666                           	opt callstack 0
  9667  004EC0                     ___flsub:
  9668                           	opt callstack 25
  9669  004EC0  0E00               	movlw	0
  9670  004EC2  1A21               	xorwf	___flsub@a^0,f,c
  9671  004EC4  0E00               	movlw	0
  9672  004EC6  1A22               	xorwf	(___flsub@a+1)^0,f,c
  9673  004EC8  0E00               	movlw	0
  9674  004ECA  1A23               	xorwf	(___flsub@a+2)^0,f,c
  9675  004ECC  0E80               	movlw	128
  9676  004ECE  1A24               	xorwf	(___flsub@a+3)^0,f,c
  9677  004ED0  C01D  F004         	movff	___flsub@b,___fladd@b
  9678  004ED4  C01E  F005         	movff	___flsub@b+1,___fladd@b+1
  9679  004ED8  C01F  F006         	movff	___flsub@b+2,___fladd@b+2
  9680  004EDC  C020  F007         	movff	___flsub@b+3,___fladd@b+3
  9681  004EE0  C021  F008         	movff	___flsub@a,___fladd@a
  9682  004EE4  C022  F009         	movff	___flsub@a+1,___fladd@a+1
  9683  004EE8  C023  F00A         	movff	___flsub@a+2,___fladd@a+2
  9684  004EEC  C024  F00B         	movff	___flsub@a+3,___fladd@a+3
  9685  004EF0  ECB1  F00C         	call	___fladd	;wreg free
  9686  004EF4  C004  F01D         	movff	?___fladd,?___flsub
  9687  004EF8  C005  F01E         	movff	?___fladd+1,?___flsub+1
  9688  004EFC  C006  F01F         	movff	?___fladd+2,?___flsub+2
  9689  004F00  C007  F020         	movff	?___fladd+3,?___flsub+3
  9690  004F04  0012               	return		;funcret
  9691  004F06                     __end_of___flsub:
  9692                           	opt callstack 0
  9693                           
  9694 ;; *************** function ___fladd *****************
  9695 ;; Defined at:
  9696 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  b               4    3[COMRAM] long 
  9699 ;;  a               4    7[COMRAM] long 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  grs             1   18[COMRAM] unsigned char 
  9702 ;;  bexp            1   17[COMRAM] unsigned char 
  9703 ;;  aexp            1   16[COMRAM] unsigned char 
  9704 ;;  signs           1   15[COMRAM] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  4    3[COMRAM] unsigned char 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9714 ;;      Params:         8       0       0       0       0       0       0       0       0
  9715 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9716 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9717 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9718 ;;Total ram usage:       16 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:    2
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		___flsub
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text28
  9729  001962                     __ptext28:
  9730                           	opt callstack 0
  9731  001962                     ___fladd:
  9732                           	opt callstack 25
  9733  001962  5007               	movf	(___fladd@b+3)^0,w,c
  9734  001964  0B80               	andlw	128
  9735  001966  6E10               	movwf	___fladd@signs^0,c
  9736  001968  5007               	movf	(___fladd@b+3)^0,w,c
  9737  00196A  2407               	addwf	(___fladd@b+3)^0,w,c
  9738  00196C  6E12               	movwf	___fladd@bexp^0,c
  9739  00196E  AE06               	btfss	(___fladd@b+2)^0,7,c
  9740  001970  EFBC  F00C         	goto	u6871
  9741  001974  EFBE  F00C         	goto	u6870
  9742  001978                     u6871:
  9743  001978  EFBF  F00C         	goto	l6176
  9744  00197C                     u6870:
  9745  00197C  8012               	bsf	___fladd@bexp^0,0,c
  9746  00197E                     l6176:
  9747  00197E  5012               	movf	___fladd@bexp^0,w,c
  9748  001980  B4D8               	btfsc	status,2,c
  9749  001982  EFC5  F00C         	goto	u6881
  9750  001986  EFC7  F00C         	goto	u6880
  9751  00198A                     u6881:
  9752  00198A  EFDC  F00C         	goto	l6186
  9753  00198E                     u6880:
  9754  00198E  2812               	incf	___fladd@bexp^0,w,c
  9755  001990  A4D8               	btfss	status,2,c
  9756  001992  EFCD  F00C         	goto	u6891
  9757  001996  EFCF  F00C         	goto	u6890
  9758  00199A                     u6891:
  9759  00199A  EFD7  F00C         	goto	l6182
  9760  00199E                     u6890:
  9761  00199E  0E00               	movlw	0
  9762  0019A0  6E04               	movwf	___fladd@b^0,c
  9763  0019A2  0E00               	movlw	0
  9764  0019A4  6E05               	movwf	(___fladd@b+1)^0,c
  9765  0019A6  0E00               	movlw	0
  9766  0019A8  6E06               	movwf	(___fladd@b+2)^0,c
  9767  0019AA  0E00               	movlw	0
  9768  0019AC  6E07               	movwf	(___fladd@b+3)^0,c
  9769  0019AE                     l6182:
  9770  0019AE  8E06               	bsf	(___fladd@b+2)^0,7,c
  9771  0019B0  0E00               	movlw	0
  9772  0019B2  6E07               	movwf	(___fladd@b+3)^0,c
  9773  0019B4  EFE4  F00C         	goto	l6188
  9774  0019B8                     l6186:
  9775  0019B8  0E00               	movlw	0
  9776  0019BA  6E04               	movwf	___fladd@b^0,c
  9777  0019BC  0E00               	movlw	0
  9778  0019BE  6E05               	movwf	(___fladd@b+1)^0,c
  9779  0019C0  0E00               	movlw	0
  9780  0019C2  6E06               	movwf	(___fladd@b+2)^0,c
  9781  0019C4  0E00               	movlw	0
  9782  0019C6  6E07               	movwf	(___fladd@b+3)^0,c
  9783  0019C8                     l6188:
  9784  0019C8  500B               	movf	(___fladd@a+3)^0,w,c
  9785  0019CA  0B80               	andlw	128
  9786  0019CC  6E11               	movwf	___fladd@aexp^0,c
  9787  0019CE  5010               	movf	___fladd@signs^0,w,c
  9788  0019D0  1811               	xorwf	___fladd@aexp^0,w,c
  9789  0019D2  B4D8               	btfsc	status,2,c
  9790  0019D4  EFEE  F00C         	goto	u6901
  9791  0019D8  EFF0  F00C         	goto	u6900
  9792  0019DC                     u6901:
  9793  0019DC  EFF1  F00C         	goto	l6194
  9794  0019E0                     u6900:
  9795  0019E0  8C10               	bsf	___fladd@signs^0,6,c
  9796  0019E2                     l6194:
  9797  0019E2  500B               	movf	(___fladd@a+3)^0,w,c
  9798  0019E4  240B               	addwf	(___fladd@a+3)^0,w,c
  9799  0019E6  6E11               	movwf	___fladd@aexp^0,c
  9800  0019E8  AE0A               	btfss	(___fladd@a+2)^0,7,c
  9801  0019EA  EFF9  F00C         	goto	u6911
  9802  0019EE  EFFB  F00C         	goto	u6910
  9803  0019F2                     u6911:
  9804  0019F2  EFFC  F00C         	goto	l6200
  9805  0019F6                     u6910:
  9806  0019F6  8011               	bsf	___fladd@aexp^0,0,c
  9807  0019F8                     l6200:
  9808  0019F8  5011               	movf	___fladd@aexp^0,w,c
  9809  0019FA  B4D8               	btfsc	status,2,c
  9810  0019FC  EF02  F00D         	goto	u6921
  9811  001A00  EF04  F00D         	goto	u6920
  9812  001A04                     u6921:
  9813  001A04  EF19  F00D         	goto	l6210
  9814  001A08                     u6920:
  9815  001A08  2811               	incf	___fladd@aexp^0,w,c
  9816  001A0A  A4D8               	btfss	status,2,c
  9817  001A0C  EF0A  F00D         	goto	u6931
  9818  001A10  EF0C  F00D         	goto	u6930
  9819  001A14                     u6931:
  9820  001A14  EF14  F00D         	goto	l6206
  9821  001A18                     u6930:
  9822  001A18  0E00               	movlw	0
  9823  001A1A  6E08               	movwf	___fladd@a^0,c
  9824  001A1C  0E00               	movlw	0
  9825  001A1E  6E09               	movwf	(___fladd@a+1)^0,c
  9826  001A20  0E00               	movlw	0
  9827  001A22  6E0A               	movwf	(___fladd@a+2)^0,c
  9828  001A24  0E00               	movlw	0
  9829  001A26  6E0B               	movwf	(___fladd@a+3)^0,c
  9830  001A28                     l6206:
  9831  001A28  8E0A               	bsf	(___fladd@a+2)^0,7,c
  9832  001A2A  0E00               	movlw	0
  9833  001A2C  6E0B               	movwf	(___fladd@a+3)^0,c
  9834  001A2E  EF21  F00D         	goto	l6212
  9835  001A32                     l6210:
  9836  001A32  0E00               	movlw	0
  9837  001A34  6E08               	movwf	___fladd@a^0,c
  9838  001A36  0E00               	movlw	0
  9839  001A38  6E09               	movwf	(___fladd@a+1)^0,c
  9840  001A3A  0E00               	movlw	0
  9841  001A3C  6E0A               	movwf	(___fladd@a+2)^0,c
  9842  001A3E  0E00               	movlw	0
  9843  001A40  6E0B               	movwf	(___fladd@a+3)^0,c
  9844  001A42                     l6212:
  9845  001A42  5012               	movf	___fladd@bexp^0,w,c
  9846  001A44  5C11               	subwf	___fladd@aexp^0,w,c
  9847  001A46  B0D8               	btfsc	status,0,c
  9848  001A48  EF28  F00D         	goto	u6941
  9849  001A4C  EF2A  F00D         	goto	u6940
  9850  001A50                     u6941:
  9851  001A50  EF51  F00D         	goto	l6248
  9852  001A54                     u6940:
  9853  001A54  AC10               	btfss	___fladd@signs^0,6,c
  9854  001A56  EF2F  F00D         	goto	u6951
  9855  001A5A  EF31  F00D         	goto	u6950
  9856  001A5E                     u6951:
  9857  001A5E  EF33  F00D         	goto	l6218
  9858  001A62                     u6950:
  9859  001A62  0E80               	movlw	128
  9860  001A64  1A10               	xorwf	___fladd@signs^0,f,c
  9861  001A66                     l6218:
  9862  001A66  C012  F013         	movff	___fladd@bexp,___fladd@grs
  9863  001A6A  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  9864  001A6E  C013  F011         	movff	___fladd@grs,___fladd@aexp
  9865  001A72  C004  F013         	movff	___fladd@b,___fladd@grs
  9866  001A76  C008  F004         	movff	___fladd@a,___fladd@b
  9867  001A7A  C013  F008         	movff	___fladd@grs,___fladd@a
  9868  001A7E  C005  F013         	movff	___fladd@b+1,___fladd@grs
  9869  001A82  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  9870  001A86  C013  F009         	movff	___fladd@grs,___fladd@a+1
  9871  001A8A  C006  F013         	movff	___fladd@b+2,___fladd@grs
  9872  001A8E  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  9873  001A92  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  9874  001A96  C007  F013         	movff	___fladd@b+3,___fladd@grs
  9875  001A9A  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  9876  001A9E  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  9877  001AA2                     l6248:
  9878  001AA2  0E00               	movlw	0
  9879  001AA4  6E13               	movwf	___fladd@grs^0,c
  9880  001AA6  5012               	movf	___fladd@bexp^0,w,c
  9881  001AA8  C011  F00C         	movff	___fladd@aexp,??___fladd
  9882  001AAC  6A0D               	clrf	(??___fladd+1)^0,c
  9883  001AAE  5E0C               	subwf	??___fladd^0,f,c
  9884  001AB0  0E00               	movlw	0
  9885  001AB2  5A0D               	subwfb	(??___fladd+1)^0,f,c
  9886  001AB4  BE0D               	btfsc	(??___fladd+1)^0,7,c
  9887  001AB6  EF66  F00D         	goto	u6961
  9888  001ABA  500D               	movf	(??___fladd+1)^0,w,c
  9889  001ABC  E109               	bnz	u6960
  9890  001ABE  0E1A               	movlw	26
  9891  001AC0  5C0C               	subwf	??___fladd^0,w,c
  9892  001AC2  A0D8               	btfss	status,0,c
  9893  001AC4  EF66  F00D         	goto	u6961
  9894  001AC8  EF68  F00D         	goto	u6960
  9895  001ACC                     u6961:
  9896  001ACC  EF9F  F00D         	goto	l1293
  9897  001AD0                     u6960:
  9898  001AD0  5004               	movf	___fladd@b^0,w,c
  9899  001AD2  1005               	iorwf	(___fladd@b+1)^0,w,c
  9900  001AD4  1006               	iorwf	(___fladd@b+2)^0,w,c
  9901  001AD6  1007               	iorwf	(___fladd@b+3)^0,w,c
  9902  001AD8  A4D8               	btfss	status,2,c
  9903  001ADA  EF71  F00D         	goto	u6971
  9904  001ADE  EF74  F00D         	goto	u6970
  9905  001AE2                     u6971:
  9906  001AE2  0E01               	movlw	1
  9907  001AE4  EF75  F00D         	goto	u6980
  9908  001AE8                     u6970:
  9909  001AE8  0E00               	movlw	0
  9910  001AEA                     u6980:
  9911  001AEA  6E13               	movwf	___fladd@grs^0,c
  9912  001AEC  0E00               	movlw	0
  9913  001AEE  6E04               	movwf	___fladd@b^0,c
  9914  001AF0  0E00               	movlw	0
  9915  001AF2  6E05               	movwf	(___fladd@b+1)^0,c
  9916  001AF4  0E00               	movlw	0
  9917  001AF6  6E06               	movwf	(___fladd@b+2)^0,c
  9918  001AF8  0E00               	movlw	0
  9919  001AFA  6E07               	movwf	(___fladd@b+3)^0,c
  9920  001AFC  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  9921  001B00  EFA8  F00D         	goto	l1292
  9922  001B04                     l1294:
  9923  001B04  A013               	btfss	___fladd@grs^0,0,c
  9924  001B06  EF87  F00D         	goto	u6991
  9925  001B0A  EF89  F00D         	goto	u6990
  9926  001B0E                     u6991:
  9927  001B0E  EF8F  F00D         	goto	l6260
  9928  001B12                     u6990:
  9929  001B12  90D8               	bcf	status,0,c
  9930  001B14  3013               	rrcf	___fladd@grs^0,w,c
  9931  001B16  0901               	iorlw	1
  9932  001B18  6E13               	movwf	___fladd@grs^0,c
  9933  001B1A  EF91  F00D         	goto	l6262
  9934  001B1E                     l6260:
  9935  001B1E  90D8               	bcf	status,0,c
  9936  001B20  3213               	rrcf	___fladd@grs^0,f,c
  9937  001B22                     l6262:
  9938  001B22  A004               	btfss	___fladd@b^0,0,c
  9939  001B24  EF96  F00D         	goto	u7001
  9940  001B28  EF98  F00D         	goto	u7000
  9941  001B2C                     u7001:
  9942  001B2C  EF99  F00D         	goto	l6266
  9943  001B30                     u7000:
  9944  001B30  8E13               	bsf	___fladd@grs^0,7,c
  9945  001B32                     l6266:
  9946  001B32  3407               	rlcf	(___fladd@b+3)^0,w,c
  9947  001B34  3207               	rrcf	(___fladd@b+3)^0,f,c
  9948  001B36  3206               	rrcf	(___fladd@b+2)^0,f,c
  9949  001B38  3205               	rrcf	(___fladd@b+1)^0,f,c
  9950  001B3A  3204               	rrcf	___fladd@b^0,f,c
  9951  001B3C  2A12               	incf	___fladd@bexp^0,f,c
  9952  001B3E                     l1293:
  9953  001B3E  5011               	movf	___fladd@aexp^0,w,c
  9954  001B40  5C12               	subwf	___fladd@bexp^0,w,c
  9955  001B42  A0D8               	btfss	status,0,c
  9956  001B44  EFA6  F00D         	goto	u7011
  9957  001B48  EFA8  F00D         	goto	u7010
  9958  001B4C                     u7011:
  9959  001B4C  EF82  F00D         	goto	l1294
  9960  001B50                     u7010:
  9961  001B50                     l1292:
  9962  001B50  BC10               	btfsc	___fladd@signs^0,6,c
  9963  001B52  EFAD  F00D         	goto	u7021
  9964  001B56  EFAF  F00D         	goto	u7020
  9965  001B5A                     u7021:
  9966  001B5A  EFEF  F00D         	goto	l6294
  9967  001B5E                     u7020:
  9968  001B5E  5012               	movf	___fladd@bexp^0,w,c
  9969  001B60  A4D8               	btfss	status,2,c
  9970  001B62  EFB5  F00D         	goto	u7031
  9971  001B66  EFB7  F00D         	goto	u7030
  9972  001B6A                     u7031:
  9973  001B6A  EFC1  F00D         	goto	l6276
  9974  001B6E                     u7030:
  9975  001B6E  0E00               	movlw	0
  9976  001B70  6E04               	movwf	?___fladd^0,c
  9977  001B72  0E00               	movlw	0
  9978  001B74  6E05               	movwf	(?___fladd+1)^0,c
  9979  001B76  0E00               	movlw	0
  9980  001B78  6E06               	movwf	(?___fladd+2)^0,c
  9981  001B7A  0E00               	movlw	0
  9982  001B7C  6E07               	movwf	(?___fladd+3)^0,c
  9983  001B7E  EF10  F00F         	goto	l1301
  9984  001B82                     l6276:
  9985  001B82  5008               	movf	___fladd@a^0,w,c
  9986  001B84  2604               	addwf	___fladd@b^0,f,c
  9987  001B86  5009               	movf	(___fladd@a+1)^0,w,c
  9988  001B88  2205               	addwfc	(___fladd@b+1)^0,f,c
  9989  001B8A  500A               	movf	(___fladd@a+2)^0,w,c
  9990  001B8C  2206               	addwfc	(___fladd@b+2)^0,f,c
  9991  001B8E  500B               	movf	(___fladd@a+3)^0,w,c
  9992  001B90  2207               	addwfc	(___fladd@b+3)^0,f,c
  9993  001B92  A007               	btfss	(___fladd@b+3)^0,0,c
  9994  001B94  EFCE  F00D         	goto	u7041
  9995  001B98  EFD0  F00D         	goto	u7040
  9996  001B9C                     u7041:
  9997  001B9C  EF7C  F00E         	goto	l6330
  9998  001BA0                     u7040:
  9999  001BA0  A013               	btfss	___fladd@grs^0,0,c
 10000  001BA2  EFD5  F00D         	goto	u7051
 10001  001BA6  EFD7  F00D         	goto	u7050
 10002  001BAA                     u7051:
 10003  001BAA  EFDD  F00D         	goto	l6284
 10004  001BAE                     u7050:
 10005  001BAE  90D8               	bcf	status,0,c
 10006  001BB0  3013               	rrcf	___fladd@grs^0,w,c
 10007  001BB2  0901               	iorlw	1
 10008  001BB4  6E13               	movwf	___fladd@grs^0,c
 10009  001BB6  EFDF  F00D         	goto	l6286
 10010  001BBA                     l6284:
 10011  001BBA  90D8               	bcf	status,0,c
 10012  001BBC  3213               	rrcf	___fladd@grs^0,f,c
 10013  001BBE                     l6286:
 10014  001BBE  A004               	btfss	___fladd@b^0,0,c
 10015  001BC0  EFE4  F00D         	goto	u7061
 10016  001BC4  EFE6  F00D         	goto	u7060
 10017  001BC8                     u7061:
 10018  001BC8  EFE7  F00D         	goto	l6290
 10019  001BCC                     u7060:
 10020  001BCC  8E13               	bsf	___fladd@grs^0,7,c
 10021  001BCE                     l6290:
 10022  001BCE  3407               	rlcf	(___fladd@b+3)^0,w,c
 10023  001BD0  3207               	rrcf	(___fladd@b+3)^0,f,c
 10024  001BD2  3206               	rrcf	(___fladd@b+2)^0,f,c
 10025  001BD4  3205               	rrcf	(___fladd@b+1)^0,f,c
 10026  001BD6  3204               	rrcf	___fladd@b^0,f,c
 10027  001BD8  2A12               	incf	___fladd@bexp^0,f,c
 10028  001BDA  EF7C  F00E         	goto	l6330
 10029  001BDE                     l6294:
 10030  001BDE  5008               	movf	___fladd@a^0,w,c
 10031  001BE0  5C04               	subwf	___fladd@b^0,w,c
 10032  001BE2  5009               	movf	(___fladd@a+1)^0,w,c
 10033  001BE4  5805               	subwfb	(___fladd@b+1)^0,w,c
 10034  001BE6  500A               	movf	(___fladd@a+2)^0,w,c
 10035  001BE8  5806               	subwfb	(___fladd@b+2)^0,w,c
 10036  001BEA  5007               	movf	(___fladd@b+3)^0,w,c
 10037  001BEC  0A80               	xorlw	128
 10038  001BEE  6E0C               	movwf	??___fladd^0,c
 10039  001BF0  500B               	movf	(___fladd@a+3)^0,w,c
 10040  001BF2  0A80               	xorlw	128
 10041  001BF4  580C               	subwfb	??___fladd^0,w,c
 10042  001BF6  B0D8               	btfsc	status,0,c
 10043  001BF8  EF00  F00E         	goto	u7071
 10044  001BFC  EF02  F00E         	goto	u7070
 10045  001C00                     u7071:
 10046  001C00  EF2D  F00E         	goto	l6304
 10047  001C04                     u7070:
 10048  001C04  5004               	movf	___fladd@b^0,w,c
 10049  001C06  5C08               	subwf	___fladd@a^0,w,c
 10050  001C08  6E0C               	movwf	??___fladd^0,c
 10051  001C0A  5005               	movf	(___fladd@b+1)^0,w,c
 10052  001C0C  5809               	subwfb	(___fladd@a+1)^0,w,c
 10053  001C0E  6E0D               	movwf	(??___fladd+1)^0,c
 10054  001C10  5006               	movf	(___fladd@b+2)^0,w,c
 10055  001C12  580A               	subwfb	(___fladd@a+2)^0,w,c
 10056  001C14  6E0E               	movwf	(??___fladd+2)^0,c
 10057  001C16  5007               	movf	(___fladd@b+3)^0,w,c
 10058  001C18  580B               	subwfb	(___fladd@a+3)^0,w,c
 10059  001C1A  6E0F               	movwf	(??___fladd+3)^0,c
 10060  001C1C  0EFF               	movlw	255
 10061  001C1E  240C               	addwf	??___fladd^0,w,c
 10062  001C20  6E04               	movwf	___fladd@b^0,c
 10063  001C22  0EFF               	movlw	255
 10064  001C24  200D               	addwfc	(??___fladd+1)^0,w,c
 10065  001C26  6E05               	movwf	(___fladd@b+1)^0,c
 10066  001C28  0EFF               	movlw	255
 10067  001C2A  200E               	addwfc	(??___fladd+2)^0,w,c
 10068  001C2C  6E06               	movwf	(___fladd@b+2)^0,c
 10069  001C2E  0EFF               	movlw	255
 10070  001C30  200F               	addwfc	(??___fladd+3)^0,w,c
 10071  001C32  6E07               	movwf	(___fladd@b+3)^0,c
 10072  001C34  0E80               	movlw	128
 10073  001C36  1A10               	xorwf	___fladd@signs^0,f,c
 10074  001C38  6C13               	negf	___fladd@grs^0,c
 10075  001C3A  5013               	movf	___fladd@grs^0,w,c
 10076  001C3C  A4D8               	btfss	status,2,c
 10077  001C3E  EF23  F00E         	goto	u7081
 10078  001C42  EF25  F00E         	goto	u7080
 10079  001C46                     u7081:
 10080  001C46  EF35  F00E         	goto	l1309
 10081  001C4A                     u7080:
 10082  001C4A  0E01               	movlw	1
 10083  001C4C  2604               	addwf	___fladd@b^0,f,c
 10084  001C4E  0E00               	movlw	0
 10085  001C50  2205               	addwfc	(___fladd@b+1)^0,f,c
 10086  001C52  2206               	addwfc	(___fladd@b+2)^0,f,c
 10087  001C54  2207               	addwfc	(___fladd@b+3)^0,f,c
 10088  001C56  EF35  F00E         	goto	l1309
 10089  001C5A                     l6304:
 10090  001C5A  5008               	movf	___fladd@a^0,w,c
 10091  001C5C  5E04               	subwf	___fladd@b^0,f,c
 10092  001C5E  5009               	movf	(___fladd@a+1)^0,w,c
 10093  001C60  5A05               	subwfb	(___fladd@b+1)^0,f,c
 10094  001C62  500A               	movf	(___fladd@a+2)^0,w,c
 10095  001C64  5A06               	subwfb	(___fladd@b+2)^0,f,c
 10096  001C66  500B               	movf	(___fladd@a+3)^0,w,c
 10097  001C68  5A07               	subwfb	(___fladd@b+3)^0,f,c
 10098  001C6A                     l1309:
 10099  001C6A  5004               	movf	___fladd@b^0,w,c
 10100  001C6C  1005               	iorwf	(___fladd@b+1)^0,w,c
 10101  001C6E  1006               	iorwf	(___fladd@b+2)^0,w,c
 10102  001C70  1007               	iorwf	(___fladd@b+3)^0,w,c
 10103  001C72  A4D8               	btfss	status,2,c
 10104  001C74  EF3E  F00E         	goto	u7091
 10105  001C78  EF40  F00E         	goto	u7090
 10106  001C7C                     u7091:
 10107  001C7C  EF75  F00E         	goto	l6328
 10108  001C80                     u7090:
 10109  001C80  5013               	movf	___fladd@grs^0,w,c
 10110  001C82  A4D8               	btfss	status,2,c
 10111  001C84  EF46  F00E         	goto	u7101
 10112  001C88  EF48  F00E         	goto	u7100
 10113  001C8C                     u7101:
 10114  001C8C  EF75  F00E         	goto	l6328
 10115  001C90                     u7100:
 10116  001C90  0E00               	movlw	0
 10117  001C92  6E04               	movwf	?___fladd^0,c
 10118  001C94  0E00               	movlw	0
 10119  001C96  6E05               	movwf	(?___fladd+1)^0,c
 10120  001C98  0E00               	movlw	0
 10121  001C9A  6E06               	movwf	(?___fladd+2)^0,c
 10122  001C9C  0E00               	movlw	0
 10123  001C9E  6E07               	movwf	(?___fladd+3)^0,c
 10124  001CA0  EF10  F00F         	goto	l1301
 10125  001CA4                     l6312:
 10126  001CA4  90D8               	bcf	status,0,c
 10127  001CA6  3604               	rlcf	___fladd@b^0,f,c
 10128  001CA8  3605               	rlcf	(___fladd@b+1)^0,f,c
 10129  001CAA  3606               	rlcf	(___fladd@b+2)^0,f,c
 10130  001CAC  3607               	rlcf	(___fladd@b+3)^0,f,c
 10131  001CAE  AE13               	btfss	___fladd@grs^0,7,c
 10132  001CB0  EF5C  F00E         	goto	u7111
 10133  001CB4  EF5E  F00E         	goto	u7110
 10134  001CB8                     u7111:
 10135  001CB8  EF5F  F00E         	goto	l6318
 10136  001CBC                     u7110:
 10137  001CBC  8004               	bsf	___fladd@b^0,0,c
 10138  001CBE                     l6318:
 10139  001CBE  A013               	btfss	___fladd@grs^0,0,c
 10140  001CC0  EF64  F00E         	goto	u7121
 10141  001CC4  EF66  F00E         	goto	u7120
 10142  001CC8                     u7121:
 10143  001CC8  EF6A  F00E         	goto	l6322
 10144  001CCC                     u7120:
 10145  001CCC  80D8               	bsf	status,0,c
 10146  001CCE  3613               	rlcf	___fladd@grs^0,f,c
 10147  001CD0  EF6C  F00E         	goto	l6324
 10148  001CD4                     l6322:
 10149  001CD4  90D8               	bcf	status,0,c
 10150  001CD6  3613               	rlcf	___fladd@grs^0,f,c
 10151  001CD8                     l6324:
 10152  001CD8  5012               	movf	___fladd@bexp^0,w,c
 10153  001CDA  B4D8               	btfsc	status,2,c
 10154  001CDC  EF72  F00E         	goto	u7131
 10155  001CE0  EF74  F00E         	goto	u7130
 10156  001CE4                     u7131:
 10157  001CE4  EF75  F00E         	goto	l6328
 10158  001CE8                     u7130:
 10159  001CE8  0612               	decf	___fladd@bexp^0,f,c
 10160  001CEA                     l6328:
 10161  001CEA  AE06               	btfss	(___fladd@b+2)^0,7,c
 10162  001CEC  EF7A  F00E         	goto	u7141
 10163  001CF0  EF7C  F00E         	goto	u7140
 10164  001CF4                     u7141:
 10165  001CF4  EF52  F00E         	goto	l6312
 10166  001CF8                     u7140:
 10167  001CF8                     l6330:
 10168  001CF8  0E00               	movlw	0
 10169  001CFA  6E11               	movwf	___fladd@aexp^0,c
 10170  001CFC  AE13               	btfss	___fladd@grs^0,7,c
 10171  001CFE  EF83  F00E         	goto	u7151
 10172  001D02  EF85  F00E         	goto	u7150
 10173  001D06                     u7151:
 10174  001D06  EF9D  F00E         	goto	l1318
 10175  001D0A                     u7150:
 10176  001D0A  C013  F00C         	movff	___fladd@grs,??___fladd
 10177  001D0E  0E7F               	movlw	127
 10178  001D10  160C               	andwf	??___fladd^0,f,c
 10179  001D12  B4D8               	btfsc	status,2,c
 10180  001D14  EF8E  F00E         	goto	u7161
 10181  001D18  EF90  F00E         	goto	u7160
 10182  001D1C                     u7161:
 10183  001D1C  EF94  F00E         	goto	l1319
 10184  001D20                     u7160:
 10185  001D20                     l6336:
 10186  001D20  0E01               	movlw	1
 10187  001D22  6E11               	movwf	___fladd@aexp^0,c
 10188  001D24  EF9D  F00E         	goto	l1318
 10189  001D28                     l1319:
 10190  001D28  A004               	btfss	___fladd@b^0,0,c
 10191  001D2A  EF99  F00E         	goto	u7171
 10192  001D2E  EF9B  F00E         	goto	u7170
 10193  001D32                     u7171:
 10194  001D32  EF9D  F00E         	goto	l1318
 10195  001D36                     u7170:
 10196  001D36  EF90  F00E         	goto	l6336
 10197  001D3A                     l1318:
 10198  001D3A  5011               	movf	___fladd@aexp^0,w,c
 10199  001D3C  B4D8               	btfsc	status,2,c
 10200  001D3E  EFA3  F00E         	goto	u7181
 10201  001D42  EFA5  F00E         	goto	u7180
 10202  001D46                     u7181:
 10203  001D46  EFD0  F00E         	goto	l6348
 10204  001D4A                     u7180:
 10205  001D4A  0E01               	movlw	1
 10206  001D4C  2604               	addwf	___fladd@b^0,f,c
 10207  001D4E  0E00               	movlw	0
 10208  001D50  2205               	addwfc	(___fladd@b+1)^0,f,c
 10209  001D52  2206               	addwfc	(___fladd@b+2)^0,f,c
 10210  001D54  2207               	addwfc	(___fladd@b+3)^0,f,c
 10211  001D56  A007               	btfss	(___fladd@b+3)^0,0,c
 10212  001D58  EFB0  F00E         	goto	u7191
 10213  001D5C  EFB2  F00E         	goto	u7190
 10214  001D60                     u7191:
 10215  001D60  EFD0  F00E         	goto	l6348
 10216  001D64                     u7190:
 10217  001D64  C004  F00C         	movff	___fladd@b,??___fladd
 10218  001D68  C005  F00D         	movff	___fladd@b+1,??___fladd+1
 10219  001D6C  C006  F00E         	movff	___fladd@b+2,??___fladd+2
 10220  001D70  C007  F00F         	movff	___fladd@b+3,??___fladd+3
 10221  001D74  340F               	rlcf	(??___fladd+3)^0,w,c
 10222  001D76  320F               	rrcf	(??___fladd+3)^0,f,c
 10223  001D78  320E               	rrcf	(??___fladd+2)^0,f,c
 10224  001D7A  320D               	rrcf	(??___fladd+1)^0,f,c
 10225  001D7C  320C               	rrcf	??___fladd^0,f,c
 10226  001D7E  C00C  F004         	movff	??___fladd,___fladd@b
 10227  001D82  C00D  F005         	movff	??___fladd+1,___fladd@b+1
 10228  001D86  C00E  F006         	movff	??___fladd+2,___fladd@b+2
 10229  001D8A  C00F  F007         	movff	??___fladd+3,___fladd@b+3
 10230  001D8E  2812               	incf	___fladd@bexp^0,w,c
 10231  001D90  B4D8               	btfsc	status,2,c
 10232  001D92  EFCD  F00E         	goto	u7201
 10233  001D96  EFCF  F00E         	goto	u7200
 10234  001D9A                     u7201:
 10235  001D9A  EFD0  F00E         	goto	l6348
 10236  001D9E                     u7200:
 10237  001D9E  2A12               	incf	___fladd@bexp^0,f,c
 10238  001DA0                     l6348:
 10239  001DA0  2812               	incf	___fladd@bexp^0,w,c
 10240  001DA2  B4D8               	btfsc	status,2,c
 10241  001DA4  EFD6  F00E         	goto	u7211
 10242  001DA8  EFD8  F00E         	goto	u7210
 10243  001DAC                     u7211:
 10244  001DAC  EFE0  F00E         	goto	l6352
 10245  001DB0                     u7210:
 10246  001DB0  5012               	movf	___fladd@bexp^0,w,c
 10247  001DB2  A4D8               	btfss	status,2,c
 10248  001DB4  EFDE  F00E         	goto	u7221
 10249  001DB8  EFE0  F00E         	goto	u7220
 10250  001DBC                     u7221:
 10251  001DBC  EFF2  F00E         	goto	l6356
 10252  001DC0                     u7220:
 10253  001DC0                     l6352:
 10254  001DC0  0E00               	movlw	0
 10255  001DC2  6E04               	movwf	___fladd@b^0,c
 10256  001DC4  0E00               	movlw	0
 10257  001DC6  6E05               	movwf	(___fladd@b+1)^0,c
 10258  001DC8  0E00               	movlw	0
 10259  001DCA  6E06               	movwf	(___fladd@b+2)^0,c
 10260  001DCC  0E00               	movlw	0
 10261  001DCE  6E07               	movwf	(___fladd@b+3)^0,c
 10262  001DD0  5012               	movf	___fladd@bexp^0,w,c
 10263  001DD2  A4D8               	btfss	status,2,c
 10264  001DD4  EFEE  F00E         	goto	u7231
 10265  001DD8  EFF0  F00E         	goto	u7230
 10266  001DDC                     u7231:
 10267  001DDC  EFF2  F00E         	goto	l6356
 10268  001DE0                     u7230:
 10269  001DE0  0E00               	movlw	0
 10270  001DE2  6E10               	movwf	___fladd@signs^0,c
 10271  001DE4                     l6356:
 10272  001DE4  A012               	btfss	___fladd@bexp^0,0,c
 10273  001DE6  EFF7  F00E         	goto	u7241
 10274  001DEA  EFF9  F00E         	goto	u7240
 10275  001DEE                     u7241:
 10276  001DEE  EFFC  F00E         	goto	l6360
 10277  001DF2                     u7240:
 10278  001DF2  8E06               	bsf	(___fladd@b+2)^0,7,c
 10279  001DF4  EFFD  F00E         	goto	l6362
 10280  001DF8                     l6360:
 10281  001DF8  9E06               	bcf	(___fladd@b+2)^0,7,c
 10282  001DFA                     l6362:
 10283  001DFA  90D8               	bcf	status,0,c
 10284  001DFC  3012               	rrcf	___fladd@bexp^0,w,c
 10285  001DFE  6E07               	movwf	(___fladd@b+3)^0,c
 10286  001E00  AE10               	btfss	___fladd@signs^0,7,c
 10287  001E02  EF05  F00F         	goto	u7251
 10288  001E06  EF07  F00F         	goto	u7250
 10289  001E0A                     u7251:
 10290  001E0A  EF08  F00F         	goto	l6368
 10291  001E0E                     u7250:
 10292  001E0E  8E07               	bsf	(___fladd@b+3)^0,7,c
 10293  001E10                     l6368:
 10294  001E10  C004  F004         	movff	___fladd@b,?___fladd
 10295  001E14  C005  F005         	movff	___fladd@b+1,?___fladd+1
 10296  001E18  C006  F006         	movff	___fladd@b+2,?___fladd+2
 10297  001E1C  C007  F007         	movff	___fladd@b+3,?___fladd+3
 10298  001E20                     l1301:
 10299  001E20  0012               	return		;funcret
 10300  001E22                     __end_of___fladd:
 10301                           	opt callstack 0
 10302                           
 10303 ;; *************** function ___flneg *****************
 10304 ;; Defined at:
 10305 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;  f1              4    3[COMRAM] unsigned char 
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  4    3[COMRAM] unsigned char 
 10312 ;; Registers used:
 10313 ;;		wreg, status,2, status,0
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10319 ;;      Params:         4       0       0       0       0       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10322 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10323 ;;Total ram usage:        4 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:    2
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_ftoa_sci
 10330 ;;		_ftoa
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           	psect	text29
 10335  005050                     __ptext29:
 10336                           	opt callstack 0
 10337  005050                     ___flneg:
 10338                           	opt callstack 26
 10339  005050  5004               	movf	___flneg@f1^0,w,c
 10340  005052  1005               	iorwf	(___flneg@f1+1)^0,w,c
 10341  005054  1006               	iorwf	(___flneg@f1+2)^0,w,c
 10342  005056  1007               	iorwf	(___flneg@f1+3)^0,w,c
 10343  005058  B4D8               	btfsc	status,2,c
 10344  00505A  EF31  F028         	goto	u8041
 10345  00505E  EF33  F028         	goto	u8040
 10346  005062                     u8041:
 10347  005062  EF3B  F028         	goto	l6866
 10348  005066                     u8040:
 10349  005066  0E00               	movlw	0
 10350  005068  1A04               	xorwf	___flneg@f1^0,f,c
 10351  00506A  0E00               	movlw	0
 10352  00506C  1A05               	xorwf	(___flneg@f1+1)^0,f,c
 10353  00506E  0E00               	movlw	0
 10354  005070  1A06               	xorwf	(___flneg@f1+2)^0,f,c
 10355  005072  0E80               	movlw	128
 10356  005074  1A07               	xorwf	(___flneg@f1+3)^0,f,c
 10357  005076                     l6866:
 10358  005076  C004  F004         	movff	___flneg@f1,?___flneg
 10359  00507A  C005  F005         	movff	___flneg@f1+1,?___flneg+1
 10360  00507E  C006  F006         	movff	___flneg@f1+2,?___flneg+2
 10361  005082  C007  F007         	movff	___flneg@f1+3,?___flneg+3
 10362  005086  0012               	return		;funcret
 10363  005088                     __end_of___flneg:
 10364                           	opt callstack 0
 10365                           
 10366 ;; *************** function ___fleq *****************
 10367 ;; Defined at:
 10368 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  ff1             4    3[COMRAM] unsigned char 
 10371 ;;  ff2             4    7[COMRAM] unsigned char 
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;		None               void
 10376 ;; Registers used:
 10377 ;;		wreg, status,2, status,0
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10383 ;;      Params:         8       0       0       0       0       0       0       0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10385 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10386 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10387 ;;Total ram usage:       12 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    2
 10390 ;; This function calls:
 10391 ;;		Nothing
 10392 ;; This function is called by:
 10393 ;;		_ftoa_sci
 10394 ;;		_ftoa
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           	psect	text30
 10399  00489C                     __ptext30:
 10400                           	opt callstack 0
 10401  00489C                     ___fleq:
 10402                           	opt callstack 26
 10403  00489C  0E00               	movlw	0
 10404  00489E  1404               	andwf	___fleq@ff1^0,w,c
 10405  0048A0  6E0C               	movwf	??___fleq^0,c
 10406  0048A2  0E00               	movlw	0
 10407  0048A4  1405               	andwf	(___fleq@ff1+1)^0,w,c
 10408  0048A6  6E0D               	movwf	(??___fleq+1)^0,c
 10409  0048A8  0E80               	movlw	128
 10410  0048AA  1406               	andwf	(___fleq@ff1+2)^0,w,c
 10411  0048AC  6E0E               	movwf	(??___fleq+2)^0,c
 10412  0048AE  0E7F               	movlw	127
 10413  0048B0  1407               	andwf	(___fleq@ff1+3)^0,w,c
 10414  0048B2  6E0F               	movwf	(??___fleq+3)^0,c
 10415  0048B4  500C               	movf	??___fleq^0,w,c
 10416  0048B6  100D               	iorwf	(??___fleq+1)^0,w,c
 10417  0048B8  100E               	iorwf	(??___fleq+2)^0,w,c
 10418  0048BA  100F               	iorwf	(??___fleq+3)^0,w,c
 10419  0048BC  A4D8               	btfss	status,2,c
 10420  0048BE  EF63  F024         	goto	u8011
 10421  0048C2  EF65  F024         	goto	u8010
 10422  0048C6                     u8011:
 10423  0048C6  EF6D  F024         	goto	l6850
 10424  0048CA                     u8010:
 10425  0048CA  0E00               	movlw	0
 10426  0048CC  6E04               	movwf	___fleq@ff1^0,c
 10427  0048CE  0E00               	movlw	0
 10428  0048D0  6E05               	movwf	(___fleq@ff1+1)^0,c
 10429  0048D2  0E00               	movlw	0
 10430  0048D4  6E06               	movwf	(___fleq@ff1+2)^0,c
 10431  0048D6  0E00               	movlw	0
 10432  0048D8  6E07               	movwf	(___fleq@ff1+3)^0,c
 10433  0048DA                     l6850:
 10434  0048DA  0E00               	movlw	0
 10435  0048DC  1408               	andwf	___fleq@ff2^0,w,c
 10436  0048DE  6E0C               	movwf	??___fleq^0,c
 10437  0048E0  0E00               	movlw	0
 10438  0048E2  1409               	andwf	(___fleq@ff2+1)^0,w,c
 10439  0048E4  6E0D               	movwf	(??___fleq+1)^0,c
 10440  0048E6  0E80               	movlw	128
 10441  0048E8  140A               	andwf	(___fleq@ff2+2)^0,w,c
 10442  0048EA  6E0E               	movwf	(??___fleq+2)^0,c
 10443  0048EC  0E7F               	movlw	127
 10444  0048EE  140B               	andwf	(___fleq@ff2+3)^0,w,c
 10445  0048F0  6E0F               	movwf	(??___fleq+3)^0,c
 10446  0048F2  500C               	movf	??___fleq^0,w,c
 10447  0048F4  100D               	iorwf	(??___fleq+1)^0,w,c
 10448  0048F6  100E               	iorwf	(??___fleq+2)^0,w,c
 10449  0048F8  100F               	iorwf	(??___fleq+3)^0,w,c
 10450  0048FA  A4D8               	btfss	status,2,c
 10451  0048FC  EF82  F024         	goto	u8021
 10452  004900  EF84  F024         	goto	u8020
 10453  004904                     u8021:
 10454  004904  EF8C  F024         	goto	l6854
 10455  004908                     u8020:
 10456  004908  0E00               	movlw	0
 10457  00490A  6E08               	movwf	___fleq@ff2^0,c
 10458  00490C  0E00               	movlw	0
 10459  00490E  6E09               	movwf	(___fleq@ff2+1)^0,c
 10460  004910  0E00               	movlw	0
 10461  004912  6E0A               	movwf	(___fleq@ff2+2)^0,c
 10462  004914  0E00               	movlw	0
 10463  004916  6E0B               	movwf	(___fleq@ff2+3)^0,c
 10464  004918                     l6854:
 10465  004918  5008               	movf	___fleq@ff2^0,w,c
 10466  00491A  1804               	xorwf	___fleq@ff1^0,w,c
 10467  00491C  E10F               	bnz	u8030
 10468  00491E  5009               	movf	(___fleq@ff2+1)^0,w,c
 10469  004920  1805               	xorwf	(___fleq@ff1+1)^0,w,c
 10470  004922  E10C               	bnz	u8030
 10471  004924  500A               	movf	(___fleq@ff2+2)^0,w,c
 10472  004926  1806               	xorwf	(___fleq@ff1+2)^0,w,c
 10473  004928  E109               	bnz	u8030
 10474  00492A  500B               	movf	(___fleq@ff2+3)^0,w,c
 10475  00492C  1807               	xorwf	(___fleq@ff1+3)^0,w,c
 10476  00492E  B4D8               	btfsc	status,2,c
 10477  004930  EF9C  F024         	goto	u8031
 10478  004934  EF9E  F024         	goto	u8030
 10479  004938                     u8031:
 10480  004938  EFA1  F024         	goto	l6858
 10481  00493C                     u8030:
 10482  00493C  90D8               	bcf	status,0,c
 10483  00493E  EFA2  F024         	goto	l1023
 10484  004942                     l6858:
 10485  004942  80D8               	bsf	status,0,c
 10486  004944                     l1023:
 10487  004944  0012               	return		;funcret
 10488  004946                     __end_of___fleq:
 10489                           	opt callstack 0
 10490                           
 10491 ;; *************** function _cleanS *****************
 10492 ;; Defined at:
 10493 ;;		line 115 in file "src/print/format.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;  str             2    7[COMRAM] PTR unsigned char 
 10496 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), 
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;  i               2   12[COMRAM] int 
 10499 ;;  len             2   10[COMRAM] int 
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      void 
 10502 ;; Registers used:
 10503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10509 ;;      Params:         2       0       0       0       0       0       0       0       0
 10510 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10511 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10512 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10513 ;;Total ram usage:        7 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; Hardware stack levels required when called:    3
 10516 ;; This function calls:
 10517 ;;		_strlen
 10518 ;; This function is called by:
 10519 ;;		_my_vprintf
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text31
 10524  004D3A                     __ptext31:
 10525                           	opt callstack 0
 10526  004D3A                     _cleanS:
 10527                           	opt callstack 26
 10528  004D3A                     
 10529                           ;src/print/format.c: 116:     int i,len;;src/print/format.c: 117:     len = strlen(str);
 10530  004D3A  C008  F004         	movff	cleanS@str,strlen@s
 10531  004D3E  C009  F005         	movff	cleanS@str+1,strlen@s+1
 10532  004D42  EC44  F028         	call	_strlen	;wreg free
 10533  004D46  C004  F00B         	movff	?_strlen,cleanS@len
 10534  004D4A  C005  F00C         	movff	?_strlen+1,cleanS@len+1
 10535  004D4E                     
 10536                           ;src/print/format.c: 118:     for(i=0;i<len;i++)
 10537  004D4E  0E00               	movlw	0
 10538  004D50  6E0E               	movwf	(cleanS@i+1)^0,c
 10539  004D52  0E00               	movlw	0
 10540  004D54  6E0D               	movwf	cleanS@i^0,c
 10541  004D56  EFB7  F026         	goto	l7014
 10542  004D5A                     l7010:
 10543                           
 10544                           ;src/print/format.c: 119:         str[i] = 0;
 10545  004D5A  500D               	movf	cleanS@i^0,w,c
 10546  004D5C  2408               	addwf	cleanS@str^0,w,c
 10547  004D5E  6ED9               	movwf	fsr2l,c
 10548  004D60  500E               	movf	(cleanS@i+1)^0,w,c
 10549  004D62  2009               	addwfc	(cleanS@str+1)^0,w,c
 10550  004D64  6EDA               	movwf	fsr2h,c
 10551  004D66  0E00               	movlw	0
 10552  004D68  6EDF               	movwf	indf2,c
 10553  004D6A  4A0D               	infsnz	cleanS@i^0,f,c
 10554  004D6C  2A0E               	incf	(cleanS@i+1)^0,f,c
 10555  004D6E                     l7014:
 10556  004D6E  500B               	movf	cleanS@len^0,w,c
 10557  004D70  5C0D               	subwf	cleanS@i^0,w,c
 10558  004D72  500E               	movf	(cleanS@i+1)^0,w,c
 10559  004D74  0A80               	xorlw	128
 10560  004D76  6E0A               	movwf	??_cleanS^0,c
 10561  004D78  500C               	movf	(cleanS@len+1)^0,w,c
 10562  004D7A  0A80               	xorlw	128
 10563  004D7C  580A               	subwfb	??_cleanS^0,w,c
 10564  004D7E  A0D8               	btfss	status,0,c
 10565  004D80  EFC4  F026         	goto	u8261
 10566  004D84  EFC6  F026         	goto	u8260
 10567  004D88                     u8261:
 10568  004D88  EFAD  F026         	goto	l7010
 10569  004D8C                     u8260:
 10570  004D8C  0012               	return		;funcret
 10571  004D8E                     __end_of_cleanS:
 10572                           	opt callstack 0
 10573                           
 10574 ;; *************** function _addSig *****************
 10575 ;; Defined at:
 10576 ;;		line 361 in file "src/print/format.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  numS            2   17[COMRAM] PTR unsigned char 
 10579 ;;		 -> my_vprintf@buffer(64), 
 10580 ;;  num             4   19[COMRAM] PTR unsigned char 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;  k               2   27[COMRAM] int 
 10583 ;;  len             2   25[COMRAM] int 
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  1    wreg      void 
 10586 ;; Registers used:
 10587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10593 ;;      Params:         6       0       0       0       0       0       0       0       0
 10594 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10595 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10596 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10597 ;;Total ram usage:       12 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; Hardware stack levels required when called:    3
 10600 ;; This function calls:
 10601 ;;		___flge
 10602 ;;		_strlen
 10603 ;; This function is called by:
 10604 ;;		_my_vprintf
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           	psect	text32
 10609  003D96                     __ptext32:
 10610                           	opt callstack 0
 10611  003D96                     _addSig:
 10612                           	opt callstack 26
 10613  003D96                     
 10614                           ;src/print/format.c: 362:     int k;;src/print/format.c: 363:     int len = strlen(numS)
      +                          ;
 10615  003D96  C012  F004         	movff	addSig@numS,strlen@s
 10616  003D9A  C013  F005         	movff	addSig@numS+1,strlen@s+1
 10617  003D9E  EC44  F028         	call	_strlen	;wreg free
 10618  003DA2  C004  F01A         	movff	?_strlen,addSig@len
 10619  003DA6  C005  F01B         	movff	?_strlen+1,addSig@len+1
 10620  003DAA                     
 10621                           ;src/print/format.c: 365:     if(sig==1 || num < 0.0) {
 10622  003DAA  043C               	decf	_sig^0,w,c
 10623  003DAC  B4D8               	btfsc	status,2,c
 10624  003DAE  EFDB  F01E         	goto	u8911
 10625  003DB2  EFDD  F01E         	goto	u8910
 10626  003DB6                     u8911:
 10627  003DB6  EFE4  F01E         	goto	l534
 10628  003DBA                     u8910:
 10629  003DBA  BE17               	btfsc	(addSig@num+3)^0,7,c
 10630  003DBC  EFE4  F01E         	goto	u8920
 10631  003DC0  EFE2  F01E         	goto	u8921
 10632  003DC4                     u8921:
 10633  003DC4  EF39  F01F         	goto	l7344
 10634  003DC8                     u8920:
 10635  003DC8                     l534:
 10636                           
 10637                           ;src/print/format.c: 366:         for(k = len;k > 0;k--)
 10638  003DC8  C01A  F01C         	movff	addSig@len,addSig@k
 10639  003DCC  C01B  F01D         	movff	addSig@len+1,addSig@k+1
 10640  003DD0                     l7328:
 10641  003DD0  BE1D               	btfsc	(addSig@k+1)^0,7,c
 10642  003DD2  EFF5  F01E         	goto	u8930
 10643  003DD6  501D               	movf	(addSig@k+1)^0,w,c
 10644  003DD8  E106               	bnz	u8931
 10645  003DDA  041C               	decf	addSig@k^0,w,c
 10646  003DDC  B0D8               	btfsc	status,0,c
 10647  003DDE  EFF3  F01E         	goto	u8931
 10648  003DE2  EFF5  F01E         	goto	u8930
 10649  003DE6                     u8931:
 10650  003DE6  EFF7  F01E         	goto	l7332
 10651  003DEA                     u8930:
 10652  003DEA  EF10  F01F         	goto	l7338
 10653  003DEE                     l7332:
 10654                           
 10655                           ;src/print/format.c: 367:             numS[k]=numS[k-1];
 10656  003DEE  501C               	movf	addSig@k^0,w,c
 10657  003DF0  2412               	addwf	addSig@numS^0,w,c
 10658  003DF2  6E18               	movwf	??_addSig^0,c
 10659  003DF4  501D               	movf	(addSig@k+1)^0,w,c
 10660  003DF6  2013               	addwfc	(addSig@numS+1)^0,w,c
 10661  003DF8  6E19               	movwf	(??_addSig+1)^0,c
 10662  003DFA  0EFF               	movlw	255
 10663  003DFC  2418               	addwf	??_addSig^0,w,c
 10664  003DFE  6ED9               	movwf	fsr2l,c
 10665  003E00  0EFF               	movlw	255
 10666  003E02  2019               	addwfc	(??_addSig+1)^0,w,c
 10667  003E04  6EDA               	movwf	fsr2h,c
 10668  003E06  501C               	movf	addSig@k^0,w,c
 10669  003E08  2412               	addwf	addSig@numS^0,w,c
 10670  003E0A  6EE1               	movwf	fsr1l,c
 10671  003E0C  501D               	movf	(addSig@k+1)^0,w,c
 10672  003E0E  2013               	addwfc	(addSig@numS+1)^0,w,c
 10673  003E10  6EE2               	movwf	fsr1h,c
 10674  003E12  CFDF FFE7          	movff	indf2,indf1
 10675  003E16  061C               	decf	addSig@k^0,f,c
 10676  003E18  A0D8               	btfss	status,0,c
 10677  003E1A  061D               	decf	(addSig@k+1)^0,f,c
 10678  003E1C  EFE8  F01E         	goto	l7328
 10679  003E20                     l7338:
 10680                           
 10681                           ;src/print/format.c: 368:         if (num > 0)
 10682  003E20  0E00               	movlw	0
 10683  003E22  6E04               	movwf	___flge@ff1^0,c
 10684  003E24  0E00               	movlw	0
 10685  003E26  6E05               	movwf	(___flge@ff1+1)^0,c
 10686  003E28  0E00               	movlw	0
 10687  003E2A  6E06               	movwf	(___flge@ff1+2)^0,c
 10688  003E2C  0E00               	movlw	0
 10689  003E2E  6E07               	movwf	(___flge@ff1+3)^0,c
 10690  003E30  C014  F008         	movff	addSig@num,___flge@ff2
 10691  003E34  C015  F009         	movff	addSig@num+1,___flge@ff2+1
 10692  003E38  C016  F00A         	movff	addSig@num+2,___flge@ff2+2
 10693  003E3C  C017  F00B         	movff	addSig@num+3,___flge@ff2+3
 10694  003E40  EC34  F022         	call	___flge	;wreg free
 10695  003E44  B0D8               	btfsc	status,0,c
 10696  003E46  EF27  F01F         	goto	u8941
 10697  003E4A  EF29  F01F         	goto	u8940
 10698  003E4E                     u8941:
 10699  003E4E  EF31  F01F         	goto	l7342
 10700  003E52                     u8940:
 10701  003E52                     
 10702                           ;src/print/format.c: 369:             numS[0]= '+';
 10703  003E52  C012  FFD9         	movff	addSig@numS,fsr2l
 10704  003E56  C013  FFDA         	movff	addSig@numS+1,fsr2h
 10705  003E5A  0E2B               	movlw	43
 10706  003E5C  6EDF               	movwf	indf2,c
 10707  003E5E  EF74  F01F         	goto	l543
 10708  003E62                     l7342:
 10709                           
 10710                           ;src/print/format.c: 371:             numS[0]= '-';
 10711  003E62  C012  FFD9         	movff	addSig@numS,fsr2l
 10712  003E66  C013  FFDA         	movff	addSig@numS+1,fsr2h
 10713  003E6A  0E2D               	movlw	45
 10714  003E6C  6EDF               	movwf	indf2,c
 10715  003E6E  EF74  F01F         	goto	l543
 10716  003E72                     l7344:
 10717  003E72  0100               	movlb	0	; () banked
 10718  003E74  05C4               	decf	_space& (0+255),w,b
 10719  003E76  A4D8               	btfss	status,2,c
 10720  003E78  EF40  F01F         	goto	u8951
 10721  003E7C  EF42  F01F         	goto	u8950
 10722  003E80                     u8951:
 10723  003E80  EF74  F01F         	goto	l543
 10724  003E84                     u8950:
 10725  003E84                     
 10726                           ; BSR set to: 0
 10727                           ;src/print/format.c: 374:         for(k = len;k > 0;k--)
 10728  003E84  C01A  F01C         	movff	addSig@len,addSig@k
 10729  003E88  C01B  F01D         	movff	addSig@len+1,addSig@k+1
 10730  003E8C                     l7348:
 10731  003E8C  BE1D               	btfsc	(addSig@k+1)^0,7,c
 10732  003E8E  EF53  F01F         	goto	u8960
 10733  003E92  501D               	movf	(addSig@k+1)^0,w,c
 10734  003E94  E106               	bnz	u8961
 10735  003E96  041C               	decf	addSig@k^0,w,c
 10736  003E98  B0D8               	btfsc	status,0,c
 10737  003E9A  EF51  F01F         	goto	u8961
 10738  003E9E  EF53  F01F         	goto	u8960
 10739  003EA2                     u8961:
 10740  003EA2  EF55  F01F         	goto	l7352
 10741  003EA6                     u8960:
 10742  003EA6  EF6E  F01F         	goto	l7358
 10743  003EAA                     l7352:
 10744                           
 10745                           ;src/print/format.c: 375:             numS[k]=numS[k-1];
 10746  003EAA  501C               	movf	addSig@k^0,w,c
 10747  003EAC  2412               	addwf	addSig@numS^0,w,c
 10748  003EAE  6E18               	movwf	??_addSig^0,c
 10749  003EB0  501D               	movf	(addSig@k+1)^0,w,c
 10750  003EB2  2013               	addwfc	(addSig@numS+1)^0,w,c
 10751  003EB4  6E19               	movwf	(??_addSig+1)^0,c
 10752  003EB6  0EFF               	movlw	255
 10753  003EB8  2418               	addwf	??_addSig^0,w,c
 10754  003EBA  6ED9               	movwf	fsr2l,c
 10755  003EBC  0EFF               	movlw	255
 10756  003EBE  2019               	addwfc	(??_addSig+1)^0,w,c
 10757  003EC0  6EDA               	movwf	fsr2h,c
 10758  003EC2  501C               	movf	addSig@k^0,w,c
 10759  003EC4  2412               	addwf	addSig@numS^0,w,c
 10760  003EC6  6EE1               	movwf	fsr1l,c
 10761  003EC8  501D               	movf	(addSig@k+1)^0,w,c
 10762  003ECA  2013               	addwfc	(addSig@numS+1)^0,w,c
 10763  003ECC  6EE2               	movwf	fsr1h,c
 10764  003ECE  CFDF FFE7          	movff	indf2,indf1
 10765  003ED2  061C               	decf	addSig@k^0,f,c
 10766  003ED4  A0D8               	btfss	status,0,c
 10767  003ED6  061D               	decf	(addSig@k+1)^0,f,c
 10768  003ED8  EF46  F01F         	goto	l7348
 10769  003EDC                     l7358:
 10770                           
 10771                           ;src/print/format.c: 376:         numS[0]= ' ';
 10772  003EDC  C012  FFD9         	movff	addSig@numS,fsr2l
 10773  003EE0  C013  FFDA         	movff	addSig@numS+1,fsr2h
 10774  003EE4  0E20               	movlw	32
 10775  003EE6  6EDF               	movwf	indf2,c
 10776  003EE8                     l543:
 10777  003EE8  0012               	return		;funcret
 10778  003EEA                     __end_of_addSig:
 10779                           	opt callstack 0
 10780                           
 10781 ;; *************** function ___flge *****************
 10782 ;; Defined at:
 10783 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  ff1             4    3[COMRAM] void 
 10786 ;;  ff2             4    7[COMRAM] void 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;		None               void
 10791 ;; Registers used:
 10792 ;;		wreg, status,2, status,0
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10798 ;;      Params:         8       0       0       0       0       0       0       0       0
 10799 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10800 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10801 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10802 ;;Total ram usage:       12 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; Hardware stack levels required when called:    2
 10805 ;; This function calls:
 10806 ;;		Nothing
 10807 ;; This function is called by:
 10808 ;;		_addSig
 10809 ;;		_normalize
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813                           	psect	text33
 10814  004468                     __ptext33:
 10815                           	opt callstack 0
 10816  004468                     ___flge:
 10817                           	opt callstack 25
 10818  004468  0E00               	movlw	0
 10819  00446A  1404               	andwf	___flge@ff1^0,w,c
 10820  00446C  6E0C               	movwf	??___flge^0,c
 10821  00446E  0E00               	movlw	0
 10822  004470  1405               	andwf	(___flge@ff1+1)^0,w,c
 10823  004472  6E0D               	movwf	(??___flge+1)^0,c
 10824  004474  0E80               	movlw	128
 10825  004476  1406               	andwf	(___flge@ff1+2)^0,w,c
 10826  004478  6E0E               	movwf	(??___flge+2)^0,c
 10827  00447A  0E7F               	movlw	127
 10828  00447C  1407               	andwf	(___flge@ff1+3)^0,w,c
 10829  00447E  6E0F               	movwf	(??___flge+3)^0,c
 10830  004480  500C               	movf	??___flge^0,w,c
 10831  004482  100D               	iorwf	(??___flge+1)^0,w,c
 10832  004484  100E               	iorwf	(??___flge+2)^0,w,c
 10833  004486  100F               	iorwf	(??___flge+3)^0,w,c
 10834  004488  A4D8               	btfss	status,2,c
 10835  00448A  EF49  F022         	goto	u7681
 10836  00448E  EF4B  F022         	goto	u7680
 10837  004492                     u7681:
 10838  004492  EF53  F022         	goto	l6644
 10839  004496                     u7680:
 10840  004496  0E00               	movlw	0
 10841  004498  6E04               	movwf	___flge@ff1^0,c
 10842  00449A  0E00               	movlw	0
 10843  00449C  6E05               	movwf	(___flge@ff1+1)^0,c
 10844  00449E  0E00               	movlw	0
 10845  0044A0  6E06               	movwf	(___flge@ff1+2)^0,c
 10846  0044A2  0E00               	movlw	0
 10847  0044A4  6E07               	movwf	(___flge@ff1+3)^0,c
 10848  0044A6                     l6644:
 10849  0044A6  0E00               	movlw	0
 10850  0044A8  1408               	andwf	___flge@ff2^0,w,c
 10851  0044AA  6E0C               	movwf	??___flge^0,c
 10852  0044AC  0E00               	movlw	0
 10853  0044AE  1409               	andwf	(___flge@ff2+1)^0,w,c
 10854  0044B0  6E0D               	movwf	(??___flge+1)^0,c
 10855  0044B2  0E80               	movlw	128
 10856  0044B4  140A               	andwf	(___flge@ff2+2)^0,w,c
 10857  0044B6  6E0E               	movwf	(??___flge+2)^0,c
 10858  0044B8  0E7F               	movlw	127
 10859  0044BA  140B               	andwf	(___flge@ff2+3)^0,w,c
 10860  0044BC  6E0F               	movwf	(??___flge+3)^0,c
 10861  0044BE  500C               	movf	??___flge^0,w,c
 10862  0044C0  100D               	iorwf	(??___flge+1)^0,w,c
 10863  0044C2  100E               	iorwf	(??___flge+2)^0,w,c
 10864  0044C4  100F               	iorwf	(??___flge+3)^0,w,c
 10865  0044C6  A4D8               	btfss	status,2,c
 10866  0044C8  EF68  F022         	goto	u7691
 10867  0044CC  EF6A  F022         	goto	u7690
 10868  0044D0                     u7691:
 10869  0044D0  EF72  F022         	goto	l6648
 10870  0044D4                     u7690:
 10871  0044D4  0E00               	movlw	0
 10872  0044D6  6E08               	movwf	___flge@ff2^0,c
 10873  0044D8  0E00               	movlw	0
 10874  0044DA  6E09               	movwf	(___flge@ff2+1)^0,c
 10875  0044DC  0E00               	movlw	0
 10876  0044DE  6E0A               	movwf	(___flge@ff2+2)^0,c
 10877  0044E0  0E00               	movlw	0
 10878  0044E2  6E0B               	movwf	(___flge@ff2+3)^0,c
 10879  0044E4                     l6648:
 10880  0044E4  AE07               	btfss	(___flge@ff1+3)^0,7,c
 10881  0044E6  EF77  F022         	goto	u7701
 10882  0044EA  EF79  F022         	goto	u7700
 10883  0044EE                     u7701:
 10884  0044EE  EF82  F022         	goto	l6652
 10885  0044F2                     u7700:
 10886  0044F2  6C04               	negf	___flge@ff1^0,c
 10887  0044F4  1E05               	comf	(___flge@ff1+1)^0,f,c
 10888  0044F6  B0D8               	btfsc	status,0,c
 10889  0044F8  2A05               	incf	(___flge@ff1+1)^0,f,c
 10890  0044FA  1E06               	comf	(___flge@ff1+2)^0,f,c
 10891  0044FC  B0D8               	btfsc	status,0,c
 10892  0044FE  2A06               	incf	(___flge@ff1+2)^0,f,c
 10893  004500  0E80               	movlw	128
 10894  004502  5607               	subfwb	(___flge@ff1+3)^0,f,c
 10895  004504                     l6652:
 10896  004504  AE0B               	btfss	(___flge@ff2+3)^0,7,c
 10897  004506  EF87  F022         	goto	u7711
 10898  00450A  EF89  F022         	goto	u7710
 10899  00450E                     u7711:
 10900  00450E  EF92  F022         	goto	l1029
 10901  004512                     u7710:
 10902  004512  6C08               	negf	___flge@ff2^0,c
 10903  004514  1E09               	comf	(___flge@ff2+1)^0,f,c
 10904  004516  B0D8               	btfsc	status,0,c
 10905  004518  2A09               	incf	(___flge@ff2+1)^0,f,c
 10906  00451A  1E0A               	comf	(___flge@ff2+2)^0,f,c
 10907  00451C  B0D8               	btfsc	status,0,c
 10908  00451E  2A0A               	incf	(___flge@ff2+2)^0,f,c
 10909  004520  0E80               	movlw	128
 10910  004522  560B               	subfwb	(___flge@ff2+3)^0,f,c
 10911  004524                     l1029:
 10912  004524  0E00               	movlw	0
 10913  004526  1A04               	xorwf	___flge@ff1^0,f,c
 10914  004528  0E00               	movlw	0
 10915  00452A  1A05               	xorwf	(___flge@ff1+1)^0,f,c
 10916  00452C  0E00               	movlw	0
 10917  00452E  1A06               	xorwf	(___flge@ff1+2)^0,f,c
 10918  004530  0E80               	movlw	128
 10919  004532  1A07               	xorwf	(___flge@ff1+3)^0,f,c
 10920  004534  0E00               	movlw	0
 10921  004536  1A08               	xorwf	___flge@ff2^0,f,c
 10922  004538  0E00               	movlw	0
 10923  00453A  1A09               	xorwf	(___flge@ff2+1)^0,f,c
 10924  00453C  0E00               	movlw	0
 10925  00453E  1A0A               	xorwf	(___flge@ff2+2)^0,f,c
 10926  004540  0E80               	movlw	128
 10927  004542  1A0B               	xorwf	(___flge@ff2+3)^0,f,c
 10928  004544  5008               	movf	___flge@ff2^0,w,c
 10929  004546  5C04               	subwf	___flge@ff1^0,w,c
 10930  004548  5009               	movf	(___flge@ff2+1)^0,w,c
 10931  00454A  5805               	subwfb	(___flge@ff1+1)^0,w,c
 10932  00454C  500A               	movf	(___flge@ff2+2)^0,w,c
 10933  00454E  5806               	subwfb	(___flge@ff1+2)^0,w,c
 10934  004550  500B               	movf	(___flge@ff2+3)^0,w,c
 10935  004552  5807               	subwfb	(___flge@ff1+3)^0,w,c
 10936  004554  B0D8               	btfsc	status,0,c
 10937  004556  EFAF  F022         	goto	u7721
 10938  00455A  EFB1  F022         	goto	u7720
 10939  00455E                     u7721:
 10940  00455E  EFB4  F022         	goto	l6658
 10941  004562                     u7720:
 10942  004562  90D8               	bcf	status,0,c
 10943  004564  EFB5  F022         	goto	l1034
 10944  004568                     l6658:
 10945  004568  80D8               	bsf	status,0,c
 10946  00456A                     l1034:
 10947  00456A  0012               	return		;funcret
 10948  00456C                     __end_of___flge:
 10949                           	opt callstack 0
 10950                           
 10951 ;; *************** function _addOx *****************
 10952 ;; Defined at:
 10953 ;;		line 383 in file "src/print/format.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;  hoS             2    7[COMRAM] PTR unsigned char 
 10956 ;;		 -> my_vprintf@buffer(64), 
 10957 ;;  num             2    9[COMRAM] int 
 10958 ;;  type            1   11[COMRAM] unsigned char 
 10959 ;; Auto vars:     Size  Location     Type
 10960 ;;  k               2   16[COMRAM] int 
 10961 ;;  len             2   14[COMRAM] int 
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  1    wreg      void 
 10964 ;; Registers used:
 10965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/0
 10968 ;;		On exit  : 0/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10971 ;;      Params:         5       0       0       0       0       0       0       0       0
 10972 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10973 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10974 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10975 ;;Total ram usage:       11 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:    3
 10978 ;; This function calls:
 10979 ;;		_strlen
 10980 ;; This function is called by:
 10981 ;;		_my_vprintf
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985                           	psect	text34
 10986  003C1E                     __ptext34:
 10987                           	opt callstack 0
 10988  003C1E                     _addOx:
 10989                           	opt callstack 26
 10990  003C1E                     
 10991                           ;src/print/format.c: 384:     int k;;src/print/format.c: 385:     int len = strlen(hoS);
 10992  003C1E  C008  F004         	movff	addOx@hoS,strlen@s
 10993  003C22  C009  F005         	movff	addOx@hoS+1,strlen@s+1
 10994  003C26  EC44  F028         	call	_strlen	;wreg free
 10995  003C2A  C004  F00F         	movff	?_strlen,addOx@len
 10996  003C2E  C005  F010         	movff	?_strlen+1,addOx@len+1
 10997  003C32                     
 10998                           ;src/print/format.c: 387:     if(numeral == 1 && num != 0 && type=='x') {
 10999  003C32  043A               	decf	_numeral^0,w,c
 11000  003C34  A4D8               	btfss	status,2,c
 11001  003C36  EF1F  F01E         	goto	u8971
 11002  003C3A  EF21  F01E         	goto	u8970
 11003  003C3E                     u8971:
 11004  003C3E  EF7E  F01E         	goto	l7382
 11005  003C42                     u8970:
 11006  003C42  500A               	movf	addOx@num^0,w,c
 11007  003C44  100B               	iorwf	(addOx@num+1)^0,w,c
 11008  003C46  B4D8               	btfsc	status,2,c
 11009  003C48  EF28  F01E         	goto	u8981
 11010  003C4C  EF2A  F01E         	goto	u8980
 11011  003C50                     u8981:
 11012  003C50  EF7E  F01E         	goto	l7382
 11013  003C54                     u8980:
 11014  003C54  0E78               	movlw	120
 11015  003C56  180C               	xorwf	addOx@type^0,w,c
 11016  003C58  A4D8               	btfss	status,2,c
 11017  003C5A  EF31  F01E         	goto	u8991
 11018  003C5E  EF33  F01E         	goto	u8990
 11019  003C62                     u8991:
 11020  003C62  EF7E  F01E         	goto	l7382
 11021  003C66                     u8990:
 11022  003C66                     
 11023                           ;src/print/format.c: 388:         for(k = len+1;k > 1;k--)
 11024  003C66  0E01               	movlw	1
 11025  003C68  240F               	addwf	addOx@len^0,w,c
 11026  003C6A  6E11               	movwf	addOx@k^0,c
 11027  003C6C  0E00               	movlw	0
 11028  003C6E  2010               	addwfc	(addOx@len+1)^0,w,c
 11029  003C70  6E12               	movwf	(addOx@k+1)^0,c
 11030  003C72  BE12               	btfsc	(addOx@k+1)^0,7,c
 11031  003C74  EF47  F01E         	goto	u9000
 11032  003C78  5012               	movf	(addOx@k+1)^0,w,c
 11033  003C7A  E107               	bnz	u9001
 11034  003C7C  0E02               	movlw	2
 11035  003C7E  5C11               	subwf	addOx@k^0,w,c
 11036  003C80  B0D8               	btfsc	status,0,c
 11037  003C82  EF45  F01E         	goto	u9001
 11038  003C86  EF47  F01E         	goto	u9000
 11039  003C8A                     u9001:
 11040  003C8A  EF49  F01E         	goto	l7372
 11041  003C8E                     u9000:
 11042  003C8E  EF6E  F01E         	goto	l7378
 11043  003C92                     l7372:
 11044                           
 11045                           ;src/print/format.c: 389:             hoS[k]=hoS[k-2];
 11046  003C92  5011               	movf	addOx@k^0,w,c
 11047  003C94  2408               	addwf	addOx@hoS^0,w,c
 11048  003C96  6E0D               	movwf	??_addOx^0,c
 11049  003C98  5012               	movf	(addOx@k+1)^0,w,c
 11050  003C9A  2009               	addwfc	(addOx@hoS+1)^0,w,c
 11051  003C9C  6E0E               	movwf	(??_addOx+1)^0,c
 11052  003C9E  0EFE               	movlw	254
 11053  003CA0  240D               	addwf	??_addOx^0,w,c
 11054  003CA2  6ED9               	movwf	fsr2l,c
 11055  003CA4  0EFF               	movlw	255
 11056  003CA6  200E               	addwfc	(??_addOx+1)^0,w,c
 11057  003CA8  6EDA               	movwf	fsr2h,c
 11058  003CAA  5011               	movf	addOx@k^0,w,c
 11059  003CAC  2408               	addwf	addOx@hoS^0,w,c
 11060  003CAE  6EE1               	movwf	fsr1l,c
 11061  003CB0  5012               	movf	(addOx@k+1)^0,w,c
 11062  003CB2  2009               	addwfc	(addOx@hoS+1)^0,w,c
 11063  003CB4  6EE2               	movwf	fsr1h,c
 11064  003CB6  CFDF FFE7          	movff	indf2,indf1
 11065  003CBA  0611               	decf	addOx@k^0,f,c
 11066  003CBC  A0D8               	btfss	status,0,c
 11067  003CBE  0612               	decf	(addOx@k+1)^0,f,c
 11068  003CC0  BE12               	btfsc	(addOx@k+1)^0,7,c
 11069  003CC2  EF6E  F01E         	goto	u9010
 11070  003CC6  5012               	movf	(addOx@k+1)^0,w,c
 11071  003CC8  E107               	bnz	u9011
 11072  003CCA  0E02               	movlw	2
 11073  003CCC  5C11               	subwf	addOx@k^0,w,c
 11074  003CCE  B0D8               	btfsc	status,0,c
 11075  003CD0  EF6C  F01E         	goto	u9011
 11076  003CD4  EF6E  F01E         	goto	u9010
 11077  003CD8                     u9011:
 11078  003CD8  EF49  F01E         	goto	l7372
 11079  003CDC                     u9010:
 11080  003CDC                     l7378:
 11081                           
 11082                           ;src/print/format.c: 390:         hoS[0]= '0';
 11083  003CDC  C008  FFD9         	movff	addOx@hoS,fsr2l
 11084  003CE0  C009  FFDA         	movff	addOx@hoS+1,fsr2h
 11085  003CE4  0E30               	movlw	48
 11086  003CE6  6EDF               	movwf	indf2,c
 11087  003CE8                     
 11088                           ;src/print/format.c: 391:         hoS[1]= 'x';
 11089  003CE8  EE20 F001          	lfsr	2,1
 11090  003CEC  5008               	movf	addOx@hoS^0,w,c
 11091  003CEE  26D9               	addwf	fsr2l,f,c
 11092  003CF0  5009               	movf	(addOx@hoS+1)^0,w,c
 11093  003CF2  22DA               	addwfc	fsr2h,f,c
 11094  003CF4  0E78               	movlw	120
 11095  003CF6  6EDF               	movwf	indf2,c
 11096                           
 11097                           ;src/print/format.c: 392:     }
 11098  003CF8  EFCA  F01E         	goto	l553
 11099  003CFC                     l7382:
 11100  003CFC  043A               	decf	_numeral^0,w,c
 11101  003CFE  A4D8               	btfss	status,2,c
 11102  003D00  EF84  F01E         	goto	u9021
 11103  003D04  EF86  F01E         	goto	u9020
 11104  003D08                     u9021:
 11105  003D08  EFCA  F01E         	goto	l553
 11106  003D0C                     u9020:
 11107  003D0C  500A               	movf	addOx@num^0,w,c
 11108  003D0E  100B               	iorwf	(addOx@num+1)^0,w,c
 11109  003D10  B4D8               	btfsc	status,2,c
 11110  003D12  EF8D  F01E         	goto	u9031
 11111  003D16  EF8F  F01E         	goto	u9030
 11112  003D1A                     u9031:
 11113  003D1A  EFCA  F01E         	goto	l553
 11114  003D1E                     u9030:
 11115  003D1E  0E6F               	movlw	111
 11116  003D20  180C               	xorwf	addOx@type^0,w,c
 11117  003D22  A4D8               	btfss	status,2,c
 11118  003D24  EF96  F01E         	goto	u9041
 11119  003D28  EF98  F01E         	goto	u9040
 11120  003D2C                     u9041:
 11121  003D2C  EFCA  F01E         	goto	l553
 11122  003D30                     u9040:
 11123  003D30                     
 11124                           ;src/print/format.c: 394:         for(k = len;k > 0;k--)
 11125  003D30  C00F  F011         	movff	addOx@len,addOx@k
 11126  003D34  C010  F012         	movff	addOx@len+1,addOx@k+1
 11127  003D38                     l7390:
 11128  003D38  BE12               	btfsc	(addOx@k+1)^0,7,c
 11129  003D3A  EFA9  F01E         	goto	u9050
 11130  003D3E  5012               	movf	(addOx@k+1)^0,w,c
 11131  003D40  E106               	bnz	u9051
 11132  003D42  0411               	decf	addOx@k^0,w,c
 11133  003D44  B0D8               	btfsc	status,0,c
 11134  003D46  EFA7  F01E         	goto	u9051
 11135  003D4A  EFA9  F01E         	goto	u9050
 11136  003D4E                     u9051:
 11137  003D4E  EFAB  F01E         	goto	l7394
 11138  003D52                     u9050:
 11139  003D52  EFC4  F01E         	goto	l7400
 11140  003D56                     l7394:
 11141                           
 11142                           ;src/print/format.c: 395:             hoS[k]=hoS[k-1];
 11143  003D56  5011               	movf	addOx@k^0,w,c
 11144  003D58  2408               	addwf	addOx@hoS^0,w,c
 11145  003D5A  6E0D               	movwf	??_addOx^0,c
 11146  003D5C  5012               	movf	(addOx@k+1)^0,w,c
 11147  003D5E  2009               	addwfc	(addOx@hoS+1)^0,w,c
 11148  003D60  6E0E               	movwf	(??_addOx+1)^0,c
 11149  003D62  0EFF               	movlw	255
 11150  003D64  240D               	addwf	??_addOx^0,w,c
 11151  003D66  6ED9               	movwf	fsr2l,c
 11152  003D68  0EFF               	movlw	255
 11153  003D6A  200E               	addwfc	(??_addOx+1)^0,w,c
 11154  003D6C  6EDA               	movwf	fsr2h,c
 11155  003D6E  5011               	movf	addOx@k^0,w,c
 11156  003D70  2408               	addwf	addOx@hoS^0,w,c
 11157  003D72  6EE1               	movwf	fsr1l,c
 11158  003D74  5012               	movf	(addOx@k+1)^0,w,c
 11159  003D76  2009               	addwfc	(addOx@hoS+1)^0,w,c
 11160  003D78  6EE2               	movwf	fsr1h,c
 11161  003D7A  CFDF FFE7          	movff	indf2,indf1
 11162  003D7E  0611               	decf	addOx@k^0,f,c
 11163  003D80  A0D8               	btfss	status,0,c
 11164  003D82  0612               	decf	(addOx@k+1)^0,f,c
 11165  003D84  EF9C  F01E         	goto	l7390
 11166  003D88                     l7400:
 11167                           
 11168                           ;src/print/format.c: 396:         hoS[0]= '0';
 11169  003D88  C008  FFD9         	movff	addOx@hoS,fsr2l
 11170  003D8C  C009  FFDA         	movff	addOx@hoS+1,fsr2h
 11171  003D90  0E30               	movlw	48
 11172  003D92  6EDF               	movwf	indf2,c
 11173  003D94                     l553:
 11174  003D94  0012               	return		;funcret
 11175  003D96                     __end_of_addOx:
 11176                           	opt callstack 0
 11177                           
 11178 ;; *************** function _SERIAL_Write *****************
 11179 ;; Defined at:
 11180 ;;		line 33 in file "src/serial.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;  str             2    7[COMRAM] PTR unsigned char 
 11183 ;;		 -> my_vprintf@string(128), 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;  i               2    9[COMRAM] int 
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  1    wreg      void 
 11188 ;; Registers used:
 11189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11195 ;;      Params:         2       0       0       0       0       0       0       0       0
 11196 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11197 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11198 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11199 ;;Total ram usage:        4 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; Hardware stack levels required when called:    3
 11202 ;; This function calls:
 11203 ;;		_SERIAL_WriteChar
 11204 ;;		_strlen
 11205 ;; This function is called by:
 11206 ;;		_my_vprintf
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text35
 11211  004F06                     __ptext35:
 11212                           	opt callstack 0
 11213  004F06                     _SERIAL_Write:
 11214                           	opt callstack 26
 11215  004F06                     
 11216                           ;src/serial.c: 34:     int i;;src/serial.c: 35:     for (i = 0; i < strlen(str); i++)
 11217  004F06  0E00               	movlw	0
 11218  004F08  6E0B               	movwf	(SERIAL_Write@i+1)^0,c
 11219  004F0A  0E00               	movlw	0
 11220  004F0C  6E0A               	movwf	SERIAL_Write@i^0,c
 11221  004F0E  EF94  F027         	goto	l6992
 11222  004F12                     l6988:
 11223                           
 11224                           ;src/serial.c: 36:     {;src/serial.c: 37:         SERIAL_WriteChar(str[i]);
 11225  004F12  500A               	movf	SERIAL_Write@i^0,w,c
 11226  004F14  2408               	addwf	SERIAL_Write@str^0,w,c
 11227  004F16  6ED9               	movwf	fsr2l,c
 11228  004F18  500B               	movf	(SERIAL_Write@i+1)^0,w,c
 11229  004F1A  2009               	addwfc	(SERIAL_Write@str+1)^0,w,c
 11230  004F1C  6EDA               	movwf	fsr2h,c
 11231  004F1E  50DF               	movf	indf2,w,c
 11232  004F20  EC85  F028         	call	_SERIAL_WriteChar
 11233  004F24                     
 11234                           ;src/serial.c: 38:     }
 11235  004F24  4A0A               	infsnz	SERIAL_Write@i^0,f,c
 11236  004F26  2A0B               	incf	(SERIAL_Write@i+1)^0,f,c
 11237  004F28                     l6992:
 11238  004F28  C008  F004         	movff	SERIAL_Write@str,strlen@s
 11239  004F2C  C009  F005         	movff	SERIAL_Write@str+1,strlen@s+1
 11240  004F30  EC44  F028         	call	_strlen	;wreg free
 11241  004F34  5004               	movf	?_strlen^0,w,c
 11242  004F36  5C0A               	subwf	SERIAL_Write@i^0,w,c
 11243  004F38  5005               	movf	(?_strlen+1)^0,w,c
 11244  004F3A  580B               	subwfb	(SERIAL_Write@i+1)^0,w,c
 11245  004F3C  A0D8               	btfss	status,0,c
 11246  004F3E  EFA3  F027         	goto	u8221
 11247  004F42  EFA5  F027         	goto	u8220
 11248  004F46                     u8221:
 11249  004F46  EF89  F027         	goto	l6988
 11250  004F4A                     u8220:
 11251  004F4A  0012               	return		;funcret
 11252  004F4C                     __end_of_SERIAL_Write:
 11253                           	opt callstack 0
 11254                           
 11255 ;; *************** function _strlen *****************
 11256 ;; Defined at:
 11257 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  s               2    3[COMRAM] PTR const unsigned char 
 11260 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), 
 11261 ;;		 -> getWP@width_str(5), 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;  a               2    5[COMRAM] PTR const unsigned char 
 11264 ;;		 -> my_vprintf@format(10), my_vprintf@buffer(64), my_vprintf@string(128), getWP@prec_str(5), 
 11265 ;;		 -> getWP@width_str(5), 
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  2    3[COMRAM] unsigned int 
 11268 ;; Registers used:
 11269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11275 ;;      Params:         2       0       0       0       0       0       0       0       0
 11276 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11277 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11278 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11279 ;;Total ram usage:        4 bytes
 11280 ;; Hardware stack levels used:    1
 11281 ;; Hardware stack levels required when called:    2
 11282 ;; This function calls:
 11283 ;;		Nothing
 11284 ;; This function is called by:
 11285 ;;		_SERIAL_Write
 11286 ;;		_searchc
 11287 ;;		_posc
 11288 ;;		_roundStr
 11289 ;;		_upperCL
 11290 ;;		_cleanS
 11291 ;;		_getWP
 11292 ;;		_precF
 11293 ;;		_precE
 11294 ;;		_precG
 11295 ;;		_precI
 11296 ;;		_precS
 11297 ;;		_addSig
 11298 ;;		_addOx
 11299 ;;		_setWidth
 11300 ;;		_my_vprintf
 11301 ;;		_reverse
 11302 ;;		_atoui
 11303 ;;		_strcat
 11304 ;;		_SERIAL_WriteLine
 11305 ;; This function uses a non-reentrant model
 11306 ;;
 11307                           
 11308                           	psect	text36
 11309  005088                     __ptext36:
 11310                           	opt callstack 0
 11311  005088                     _strlen:
 11312                           	opt callstack 26
 11313  005088  C004  F006         	movff	strlen@s,strlen@a
 11314  00508C  C005  F007         	movff	strlen@s+1,strlen@a+1
 11315  005090  EF4C  F028         	goto	l6050
 11316  005094                     l6048:
 11317  005094  4A04               	infsnz	strlen@s^0,f,c
 11318  005096  2A05               	incf	(strlen@s+1)^0,f,c
 11319  005098                     l6050:
 11320  005098  C004  FFD9         	movff	strlen@s,fsr2l
 11321  00509C  C005  FFDA         	movff	strlen@s+1,fsr2h
 11322  0050A0  50DF               	movf	indf2,w,c
 11323  0050A2  A4D8               	btfss	status,2,c
 11324  0050A4  EF56  F028         	goto	u6681
 11325  0050A8  EF58  F028         	goto	u6680
 11326  0050AC                     u6681:
 11327  0050AC  EF4A  F028         	goto	l6048
 11328  0050B0                     u6680:
 11329  0050B0  5006               	movf	strlen@a^0,w,c
 11330  0050B2  5C04               	subwf	strlen@s^0,w,c
 11331  0050B4  6E04               	movwf	?_strlen^0,c
 11332  0050B6  5007               	movf	(strlen@a+1)^0,w,c
 11333  0050B8  5805               	subwfb	(strlen@s+1)^0,w,c
 11334  0050BA  6E05               	movwf	(?_strlen+1)^0,c
 11335  0050BC  0012               	return		;funcret
 11336  0050BE                     __end_of_strlen:
 11337                           	opt callstack 0
 11338                           
 11339 ;; *************** function _SERIAL_WriteChar *****************
 11340 ;; Defined at:
 11341 ;;		line 28 in file "src/serial.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  data            1    wreg     unsigned char 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;  data            1    3[COMRAM] unsigned char 
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      void 
 11348 ;; Registers used:
 11349 ;;		wreg
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11355 ;;      Params:         0       0       0       0       0       0       0       0       0
 11356 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11358 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11359 ;;Total ram usage:        1 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:    2
 11362 ;; This function calls:
 11363 ;;		Nothing
 11364 ;; This function is called by:
 11365 ;;		_SERIAL_Write
 11366 ;;		_SERIAL_WriteLine
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           
 11370                           	psect	text37
 11371  00510A                     __ptext37:
 11372                           	opt callstack 0
 11373  00510A                     _SERIAL_WriteChar:
 11374                           	opt callstack 26
 11375                           
 11376                           ;incstack = 0
 11377                           ;SERIAL_WriteChar@data stored from wreg
 11378  00510A  6E04               	movwf	SERIAL_WriteChar@data^0,c
 11379  00510C                     l73:
 11380  00510C  A2AC               	btfss	172,1,c	;volatile
 11381  00510E  EF8B  F028         	goto	u7731
 11382  005112  EF8D  F028         	goto	u7730
 11383  005116                     u7731:
 11384  005116  EF86  F028         	goto	l73
 11385  00511A                     u7730:
 11386  00511A                     
 11387                           ;src/serial.c: 30:     TXREG = data;
 11388  00511A  C004  FFAD         	movff	SERIAL_WriteChar@data,4013	;volatile
 11389  00511E  0012               	return		;funcret
 11390  005120                     __end_of_SERIAL_WriteChar:
 11391                           	opt callstack 0
 11392                           
 11393 ;; *************** function _SYSTEM_Init *****************
 11394 ;; Defined at:
 11395 ;;		line 63 in file "src/system.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;		None
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;		None
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1    wreg      void 
 11402 ;; Registers used:
 11403 ;;		wreg, status,2, status,0, cstack
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11409 ;;      Params:         0       0       0       0       0       0       0       0       0
 11410 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11411 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11412 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11413 ;;Total ram usage:        0 bytes
 11414 ;; Hardware stack levels used:    1
 11415 ;; Hardware stack levels required when called:    4
 11416 ;; This function calls:
 11417 ;;		_BLED_Enable
 11418 ;;		_INTERRUPT_Init
 11419 ;;		_INTERRUPT_Tmr0
 11420 ;;		_KBD_Init
 11421 ;;		_SERIAL_Init
 11422 ;;		_TIMER0_Int
 11423 ;;		_TIMER0_SetPs
 11424 ;; This function is called by:
 11425 ;;		_main
 11426 ;; This function uses a non-reentrant model
 11427 ;;
 11428                           
 11429                           	psect	text38
 11430  004DE0                     __ptext38:
 11431                           	opt callstack 0
 11432  004DE0                     _SYSTEM_Init:
 11433                           	opt callstack 26
 11434  004DE0  EC90  F028         	call	_KBD_Init	;wreg free
 11435  004DE4  EC98  F028         	call	_INTERRUPT_Init	;wreg free
 11436  004DE8  0E00               	movlw	0
 11437  004DEA  6E04               	movwf	TIMER0_Int@t0_cs^0,c
 11438  004DEC  0E00               	movlw	0
 11439  004DEE  6E05               	movwf	TIMER0_Int@t0_se^0,c
 11440  004DF0  0E00               	movlw	0
 11441  004DF2  6E06               	movwf	TIMER0_Int@t0_psa^0,c
 11442  004DF4  0E00               	movlw	0
 11443  004DF6  EC08  F028         	call	_TIMER0_Int
 11444  004DFA  0E06               	movlw	6
 11445  004DFC  ECF5  F023         	call	_TIMER0_SetPs
 11446  004E00  EC9C  F028         	call	_INTERRUPT_Tmr0	;wreg free
 11447  004E04  0E00               	movlw	0
 11448  004E06  EC17  F027         	call	_BLED_Enable
 11449  004E0A  0E01               	movlw	1
 11450  004E0C  EC17  F027         	call	_BLED_Enable
 11451  004E10  0E80               	movlw	128
 11452  004E12  6E12               	movwf	SERIAL_Init@BAUD^0,c
 11453  004E14  0E25               	movlw	37
 11454  004E16  6E13               	movwf	(SERIAL_Init@BAUD+1)^0,c
 11455  004E18  0E00               	movlw	0
 11456  004E1A  6E14               	movwf	(SERIAL_Init@BAUD+2)^0,c
 11457  004E1C  0E00               	movlw	0
 11458  004E1E  6E15               	movwf	(SERIAL_Init@BAUD+3)^0,c
 11459  004E20  EC34  F025         	call	_SERIAL_Init	;wreg free
 11460  004E24  9095               	bcf	149,0,c	;volatile
 11461  004E26  9295               	bcf	149,1,c	;volatile
 11462  004E28  908C               	bcf	140,0,c	;volatile
 11463  004E2A  928C               	bcf	140,1,c	;volatile
 11464  004E2C  0012               	return		;funcret
 11465  004E2E                     __end_of_SYSTEM_Init:
 11466                           	opt callstack 0
 11467                           
 11468 ;; *************** function _TIMER0_SetPs *****************
 11469 ;; Defined at:
 11470 ;;		line 14 in file "src/timer.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;  prescale        1    wreg     enum E3190
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;  prescale        1    5[COMRAM] enum E3190
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		wreg, status,2, status,0
 11479 ;; Tracked objects:
 11480 ;;		On entry : 0/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11484 ;;      Params:         0       0       0       0       0       0       0       0       0
 11485 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11486 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11487 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11488 ;;Total ram usage:        3 bytes
 11489 ;; Hardware stack levels used:    1
 11490 ;; Hardware stack levels required when called:    2
 11491 ;; This function calls:
 11492 ;;		Nothing
 11493 ;; This function is called by:
 11494 ;;		_SYSTEM_Init
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498                           	psect	text39
 11499  0047EA                     __ptext39:
 11500                           	opt callstack 0
 11501  0047EA                     _TIMER0_SetPs:
 11502                           	opt callstack 27
 11503                           
 11504                           ;incstack = 0
 11505                           ;TIMER0_SetPs@prescale stored from wreg
 11506  0047EA  6E06               	movwf	TIMER0_SetPs@prescale^0,c
 11507  0047EC                     
 11508                           ;src/timer.c: 14: void TIMER0_SetPs(PRESCALE prescale);src/timer.c: 15: {;src/timer.c: 1
      +                          6:     switch (prescale)
 11509  0047EC  EF20  F024         	goto	l4782
 11510  0047F0                     l311:
 11511                           
 11512                           ;src/timer.c: 19:             T0CONbits.T0PS0 = 0;
 11513  0047F0  90D5               	bcf	213,0,c	;volatile
 11514                           
 11515                           ;src/timer.c: 20:             T0CONbits.T0PS1 = 0;
 11516  0047F2  92D5               	bcf	213,1,c	;volatile
 11517                           
 11518                           ;src/timer.c: 21:             T0CONbits.T0PS2 = 0;
 11519  0047F4  94D5               	bcf	213,2,c	;volatile
 11520                           
 11521                           ;src/timer.c: 22:             break;
 11522  0047F6  EF4D  F024         	goto	l320
 11523  0047FA                     l313:
 11524                           
 11525                           ;src/timer.c: 24:             T0CONbits.T0PS0 = 1;
 11526  0047FA  80D5               	bsf	213,0,c	;volatile
 11527                           
 11528                           ;src/timer.c: 25:             T0CONbits.T0PS1 = 0;
 11529  0047FC  92D5               	bcf	213,1,c	;volatile
 11530                           
 11531                           ;src/timer.c: 26:             T0CONbits.T0PS2 = 0;
 11532  0047FE  94D5               	bcf	213,2,c	;volatile
 11533                           
 11534                           ;src/timer.c: 27:             break;
 11535  004800  EF4D  F024         	goto	l320
 11536  004804                     l314:
 11537                           
 11538                           ;src/timer.c: 29:             T0CONbits.T0PS0 = 0;
 11539  004804  90D5               	bcf	213,0,c	;volatile
 11540                           
 11541                           ;src/timer.c: 30:             T0CONbits.T0PS1 = 1;
 11542  004806  82D5               	bsf	213,1,c	;volatile
 11543                           
 11544                           ;src/timer.c: 31:             T0CONbits.T0PS2 = 0;
 11545  004808  94D5               	bcf	213,2,c	;volatile
 11546                           
 11547                           ;src/timer.c: 32:             break;
 11548  00480A  EF4D  F024         	goto	l320
 11549  00480E                     l315:
 11550                           
 11551                           ;src/timer.c: 34:             T0CONbits.T0PS0 = 1;
 11552  00480E  80D5               	bsf	213,0,c	;volatile
 11553                           
 11554                           ;src/timer.c: 35:             T0CONbits.T0PS1 = 1;
 11555  004810  82D5               	bsf	213,1,c	;volatile
 11556                           
 11557                           ;src/timer.c: 36:             T0CONbits.T0PS2 = 0;
 11558  004812  94D5               	bcf	213,2,c	;volatile
 11559                           
 11560                           ;src/timer.c: 37:             break;
 11561  004814  EF4D  F024         	goto	l320
 11562  004818                     l316:
 11563                           
 11564                           ;src/timer.c: 39:             T0CONbits.T0PS0 = 0;
 11565  004818  90D5               	bcf	213,0,c	;volatile
 11566                           
 11567                           ;src/timer.c: 40:             T0CONbits.T0PS1 = 0;
 11568  00481A  92D5               	bcf	213,1,c	;volatile
 11569                           
 11570                           ;src/timer.c: 41:             T0CONbits.T0PS2 = 1;
 11571  00481C  84D5               	bsf	213,2,c	;volatile
 11572                           
 11573                           ;src/timer.c: 42:             break;
 11574  00481E  EF4D  F024         	goto	l320
 11575  004822                     l317:
 11576                           
 11577                           ;src/timer.c: 44:             T0CONbits.T0PS0 = 1;
 11578  004822  80D5               	bsf	213,0,c	;volatile
 11579                           
 11580                           ;src/timer.c: 45:             T0CONbits.T0PS1 = 0;
 11581  004824  92D5               	bcf	213,1,c	;volatile
 11582                           
 11583                           ;src/timer.c: 46:             T0CONbits.T0PS2 = 1;
 11584  004826  84D5               	bsf	213,2,c	;volatile
 11585                           
 11586                           ;src/timer.c: 47:             break;
 11587  004828  EF4D  F024         	goto	l320
 11588  00482C                     l318:
 11589                           
 11590                           ;src/timer.c: 49:             T0CONbits.T0PS0 = 0;
 11591  00482C  90D5               	bcf	213,0,c	;volatile
 11592                           
 11593                           ;src/timer.c: 50:             T0CONbits.T0PS1 = 1;
 11594  00482E  82D5               	bsf	213,1,c	;volatile
 11595                           
 11596                           ;src/timer.c: 51:             T0CONbits.T0PS2 = 1;
 11597  004830  84D5               	bsf	213,2,c	;volatile
 11598                           
 11599                           ;src/timer.c: 52:             break;
 11600  004832  EF4D  F024         	goto	l320
 11601  004836                     l319:
 11602                           
 11603                           ;src/timer.c: 54:             T0CONbits.T0PS0 = 1;
 11604  004836  80D5               	bsf	213,0,c	;volatile
 11605                           
 11606                           ;src/timer.c: 55:             T0CONbits.T0PS1 = 1;
 11607  004838  82D5               	bsf	213,1,c	;volatile
 11608                           
 11609                           ;src/timer.c: 56:             T0CONbits.T0PS2 = 1;
 11610  00483A  84D5               	bsf	213,2,c	;volatile
 11611                           
 11612                           ;src/timer.c: 57:     }
 11613  00483C  EF4D  F024         	goto	l320
 11614  004840                     l4782:
 11615  004840  5006               	movf	TIMER0_SetPs@prescale^0,w,c
 11616  004842  6E04               	movwf	??_TIMER0_SetPs^0,c
 11617  004844  6A05               	clrf	(??_TIMER0_SetPs+1)^0,c
 11618                           
 11619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11620                           ; Switch size 1, requested type "simple"
 11621                           ; Number of cases is 1, Range of values is 0 to 0
 11622                           ; switch strategies available:
 11623                           ; Name         Instructions Cycles
 11624                           ; simple_byte            4     3 (average)
 11625                           ;	Chosen strategy is simple_byte
 11626  004846  5005               	movf	(??_TIMER0_SetPs+1)^0,w,c
 11627  004848  0A00               	xorlw	0	; case 0
 11628  00484A  B4D8               	btfsc	status,2,c
 11629  00484C  EF2A  F024         	goto	l8148
 11630  004850  EF4D  F024         	goto	l320
 11631  004854                     l8148:
 11632                           
 11633                           ; Switch size 1, requested type "simple"
 11634                           ; Number of cases is 8, Range of values is 0 to 7
 11635                           ; switch strategies available:
 11636                           ; Name         Instructions Cycles
 11637                           ; simple_byte           25    13 (average)
 11638                           ;	Chosen strategy is simple_byte
 11639  004854  5004               	movf	??_TIMER0_SetPs^0,w,c
 11640  004856  0A00               	xorlw	0	; case 0
 11641  004858  B4D8               	btfsc	status,2,c
 11642  00485A  EFF8  F023         	goto	l311
 11643  00485E  0A01               	xorlw	1	; case 1
 11644  004860  B4D8               	btfsc	status,2,c
 11645  004862  EFFD  F023         	goto	l313
 11646  004866  0A03               	xorlw	3	; case 2
 11647  004868  B4D8               	btfsc	status,2,c
 11648  00486A  EF02  F024         	goto	l314
 11649  00486E  0A01               	xorlw	1	; case 3
 11650  004870  B4D8               	btfsc	status,2,c
 11651  004872  EF07  F024         	goto	l315
 11652  004876  0A07               	xorlw	7	; case 4
 11653  004878  B4D8               	btfsc	status,2,c
 11654  00487A  EF0C  F024         	goto	l316
 11655  00487E  0A01               	xorlw	1	; case 5
 11656  004880  B4D8               	btfsc	status,2,c
 11657  004882  EF11  F024         	goto	l317
 11658  004886  0A03               	xorlw	3	; case 6
 11659  004888  B4D8               	btfsc	status,2,c
 11660  00488A  EF16  F024         	goto	l318
 11661  00488E  0A01               	xorlw	1	; case 7
 11662  004890  B4D8               	btfsc	status,2,c
 11663  004892  EF1B  F024         	goto	l319
 11664  004896  EF4D  F024         	goto	l320
 11665  00489A                     l320:
 11666  00489A  0012               	return		;funcret
 11667  00489C                     __end_of_TIMER0_SetPs:
 11668                           	opt callstack 0
 11669                           
 11670 ;; *************** function _TIMER0_Int *****************
 11671 ;; Defined at:
 11672 ;;		line 3 in file "src/timer.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;  t0_8b           1    wreg     _Bool 
 11675 ;;  t0_cs           1    3[COMRAM] _Bool 
 11676 ;;  t0_se           1    4[COMRAM] _Bool 
 11677 ;;  t0_psa          1    5[COMRAM] _Bool 
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;  t0_8b           1    6[COMRAM] _Bool 
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  1    wreg      void 
 11682 ;; Registers used:
 11683 ;;		wreg, status,2
 11684 ;; Tracked objects:
 11685 ;;		On entry : 0/0
 11686 ;;		On exit  : 0/0
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11689 ;;      Params:         3       0       0       0       0       0       0       0       0
 11690 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11691 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11692 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11693 ;;Total ram usage:        4 bytes
 11694 ;; Hardware stack levels used:    1
 11695 ;; Hardware stack levels required when called:    2
 11696 ;; This function calls:
 11697 ;;		Nothing
 11698 ;; This function is called by:
 11699 ;;		_SYSTEM_Init
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           	psect	text40
 11704  005010                     __ptext40:
 11705                           	opt callstack 0
 11706  005010                     _TIMER0_Int:
 11707                           	opt callstack 27
 11708                           
 11709                           ;incstack = 0
 11710                           ;TIMER0_Int@t0_8b stored from wreg
 11711  005010  6E07               	movwf	TIMER0_Int@t0_8b^0,c
 11712  005012                     
 11713                           ;src/timer.c: 3: void TIMER0_Int(_Bool t0_8b, _Bool t0_cs, _Bool t0_se, _Bool t0_psa);sr
      +                          c/timer.c: 4: {;src/timer.c: 5:     T0CONbits.TMR0ON = 1;
 11714  005012  8ED5               	bsf	213,7,c	;volatile
 11715  005014                     
 11716                           ;src/timer.c: 6:     T0CONbits.T08BIT = t0_8b;
 11717  005014  B007               	btfsc	TIMER0_Int@t0_8b^0,0,c
 11718  005016  D002               	bra	u4965
 11719  005018  9CD5               	bcf	213,6,c	;volatile
 11720  00501A  D001               	bra	u4966
 11721  00501C                     u4965:
 11722  00501C  8CD5               	bsf	213,6,c	;volatile
 11723  00501E                     u4966:
 11724  00501E                     
 11725                           ;src/timer.c: 7:     T0CONbits.T0CS = t0_cs;
 11726  00501E  B004               	btfsc	TIMER0_Int@t0_cs^0,0,c
 11727  005020  D002               	bra	u4975
 11728  005022  9AD5               	bcf	213,5,c	;volatile
 11729  005024  D001               	bra	u4976
 11730  005026                     u4975:
 11731  005026  8AD5               	bsf	213,5,c	;volatile
 11732  005028                     u4976:
 11733  005028                     
 11734                           ;src/timer.c: 8:     T0CONbits.T0SE = t0_se;
 11735  005028  B005               	btfsc	TIMER0_Int@t0_se^0,0,c
 11736  00502A  D002               	bra	u4985
 11737  00502C  98D5               	bcf	213,4,c	;volatile
 11738  00502E  D001               	bra	u4986
 11739  005030                     u4985:
 11740  005030  88D5               	bsf	213,4,c	;volatile
 11741  005032                     u4986:
 11742  005032                     
 11743                           ;src/timer.c: 9:     T0CONbits.PSA = t0_psa;
 11744  005032  B006               	btfsc	TIMER0_Int@t0_psa^0,0,c
 11745  005034  D002               	bra	u4995
 11746  005036  96D5               	bcf	213,3,c	;volatile
 11747  005038  D001               	bra	u4996
 11748  00503A                     u4995:
 11749  00503A  86D5               	bsf	213,3,c	;volatile
 11750  00503C                     u4996:
 11751  00503C                     
 11752                           ;src/timer.c: 10:     if (t0_cs)
 11753  00503C  5004               	movf	TIMER0_Int@t0_cs^0,w,c
 11754  00503E  B4D8               	btfsc	status,2,c
 11755  005040  EF24  F028         	goto	u5001
 11756  005044  EF26  F028         	goto	u5000
 11757  005048                     u5001:
 11758  005048  EF27  F028         	goto	l307
 11759  00504C                     u5000:
 11760  00504C                     
 11761                           ;src/timer.c: 11:         TRISAbits.RA4 = 1;
 11762  00504C  8892               	bsf	146,4,c	;volatile
 11763  00504E                     l307:
 11764  00504E  0012               	return		;funcret
 11765  005050                     __end_of_TIMER0_Int:
 11766                           	opt callstack 0
 11767                           
 11768 ;; *************** function _SERIAL_Init *****************
 11769 ;; Defined at:
 11770 ;;		line 3 in file "src/serial.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  BAUD            4   17[COMRAM] long 
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  baudrate        2   25[COMRAM] unsigned short 
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg, status,2, status,0, cstack
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11784 ;;      Params:         4       0       0       0       0       0       0       0       0
 11785 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11786 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11787 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11788 ;;Total ram usage:       10 bytes
 11789 ;; Hardware stack levels used:    1
 11790 ;; Hardware stack levels required when called:    3
 11791 ;; This function calls:
 11792 ;;		___aldiv
 11793 ;; This function is called by:
 11794 ;;		_SYSTEM_Init
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           	psect	text41
 11799  004A68                     __ptext41:
 11800                           	opt callstack 0
 11801  004A68                     _SERIAL_Init:
 11802                           	opt callstack 26
 11803  004A68                     
 11804                           ;src/serial.c: 3: void SERIAL_Init(long BAUD);src/serial.c: 4: {;src/serial.c: 6:     ui
      +                          nt16_t baudrate = (((48000000/BAUD)/4)-1);
 11805  004A68  C012  F008         	movff	SERIAL_Init@BAUD,___aldiv@divisor
 11806  004A6C  C013  F009         	movff	SERIAL_Init@BAUD+1,___aldiv@divisor+1
 11807  004A70  C014  F00A         	movff	SERIAL_Init@BAUD+2,___aldiv@divisor+2
 11808  004A74  C015  F00B         	movff	SERIAL_Init@BAUD+3,___aldiv@divisor+3
 11809  004A78  0E00               	movlw	0
 11810  004A7A  6E04               	movwf	___aldiv@dividend^0,c
 11811  004A7C  0E6C               	movlw	108
 11812  004A7E  6E05               	movwf	(___aldiv@dividend+1)^0,c
 11813  004A80  0EDC               	movlw	220
 11814  004A82  6E06               	movwf	(___aldiv@dividend+2)^0,c
 11815  004A84  0E02               	movlw	2
 11816  004A86  6E07               	movwf	(___aldiv@dividend+3)^0,c
 11817  004A88  EC2B  F021         	call	___aldiv	;wreg free
 11818  004A8C  C004  F016         	movff	?___aldiv,_SERIAL_Init$2399
 11819  004A90  C005  F017         	movff	?___aldiv+1,_SERIAL_Init$2399+1
 11820  004A94  C006  F018         	movff	?___aldiv+2,_SERIAL_Init$2399+2
 11821  004A98  C007  F019         	movff	?___aldiv+3,_SERIAL_Init$2399+3
 11822                           
 11823                           ;src/serial.c: 3: void SERIAL_Init(long BAUD);src/serial.c: 4: {;src/serial.c: 6:     ui
      +                          nt16_t baudrate = (((48000000/BAUD)/4)-1);
 11824  004A9C  C016  F004         	movff	_SERIAL_Init$2399,___aldiv@dividend
 11825  004AA0  C017  F005         	movff	_SERIAL_Init$2399+1,___aldiv@dividend+1
 11826  004AA4  C018  F006         	movff	_SERIAL_Init$2399+2,___aldiv@dividend+2
 11827  004AA8  C019  F007         	movff	_SERIAL_Init$2399+3,___aldiv@dividend+3
 11828  004AAC  0E04               	movlw	4
 11829  004AAE  6E08               	movwf	___aldiv@divisor^0,c
 11830  004AB0  0E00               	movlw	0
 11831  004AB2  6E09               	movwf	(___aldiv@divisor+1)^0,c
 11832  004AB4  0E00               	movlw	0
 11833  004AB6  6E0A               	movwf	(___aldiv@divisor+2)^0,c
 11834  004AB8  0E00               	movlw	0
 11835  004ABA  6E0B               	movwf	(___aldiv@divisor+3)^0,c
 11836  004ABC  EC2B  F021         	call	___aldiv	;wreg free
 11837  004AC0  0EFF               	movlw	255
 11838  004AC2  2404               	addwf	?___aldiv^0,w,c
 11839  004AC4  6E1A               	movwf	SERIAL_Init@baudrate^0,c
 11840  004AC6  0EFF               	movlw	255
 11841  004AC8  2005               	addwfc	(?___aldiv+1)^0,w,c
 11842  004ACA  6E1B               	movwf	(SERIAL_Init@baudrate+1)^0,c
 11843  004ACC                     
 11844                           ;src/serial.c: 8:     TRISCbits.RC6 = 1;
 11845  004ACC  8C94               	bsf	148,6,c	;volatile
 11846  004ACE                     
 11847                           ;src/serial.c: 9:     TRISCbits.RC7 = 1;
 11848  004ACE  8E94               	bsf	148,7,c	;volatile
 11849  004AD0                     
 11850                           ;src/serial.c: 12:     RCSTAbits.SPEN = 1;
 11851  004AD0  8EAB               	bsf	171,7,c	;volatile
 11852  004AD2                     
 11853                           ;src/serial.c: 13:     TXSTAbits.SYNC = 0;
 11854  004AD2  98AC               	bcf	172,4,c	;volatile
 11855  004AD4                     
 11856                           ;src/serial.c: 14:     TXSTAbits.BRGH = 1;
 11857  004AD4  84AC               	bsf	172,2,c	;volatile
 11858  004AD6                     
 11859                           ;src/serial.c: 15:     BAUDCONbits.BRG16 = 1;
 11860  004AD6  86B8               	bsf	184,3,c	;volatile
 11861  004AD8                     
 11862                           ;src/serial.c: 16:     SPBRGH = baudrate >> 8;
 11863  004AD8  501B               	movf	(SERIAL_Init@baudrate+1)^0,w,c
 11864  004ADA  6EB0               	movwf	176,c	;volatile
 11865  004ADC                     
 11866                           ;src/serial.c: 17:     SPBRG = baudrate;
 11867  004ADC  C01A  FFAF         	movff	SERIAL_Init@baudrate,4015	;volatile
 11868  004AE0                     
 11869                           ;src/serial.c: 20:     TXSTAbits.TX9 = 0;
 11870  004AE0  9CAC               	bcf	172,6,c	;volatile
 11871  004AE2                     
 11872                           ;src/serial.c: 21:     TXSTAbits.TXEN = 1;
 11873  004AE2  8AAC               	bsf	172,5,c	;volatile
 11874  004AE4                     
 11875                           ;src/serial.c: 24:     RCSTAbits.RC9 = 0;
 11876  004AE4  9CAB               	bcf	171,6,c	;volatile
 11877  004AE6                     
 11878                           ;src/serial.c: 25:     RCSTAbits.CREN = 1;
 11879  004AE6  88AB               	bsf	171,4,c	;volatile
 11880  004AE8  0012               	return		;funcret
 11881  004AEA                     __end_of_SERIAL_Init:
 11882                           	opt callstack 0
 11883                           
 11884 ;; *************** function ___aldiv *****************
 11885 ;; Defined at:
 11886 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11887 ;; Parameters:    Size  Location     Type
 11888 ;;  dividend        4    3[COMRAM] long 
 11889 ;;  divisor         4    7[COMRAM] long 
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;  quotient        4   13[COMRAM] long 
 11892 ;;  sign            1   12[COMRAM] unsigned char 
 11893 ;;  counter         1   11[COMRAM] unsigned char 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  4    3[COMRAM] long 
 11896 ;; Registers used:
 11897 ;;		wreg, status,2, status,0
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11903 ;;      Params:         8       0       0       0       0       0       0       0       0
 11904 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11906 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11907 ;;Total ram usage:       14 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; Hardware stack levels required when called:    2
 11910 ;; This function calls:
 11911 ;;		Nothing
 11912 ;; This function is called by:
 11913 ;;		_SERIAL_Init
 11914 ;;		_itoa
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918                           	psect	text42
 11919  004256                     __ptext42:
 11920                           	opt callstack 0
 11921  004256                     ___aldiv:
 11922                           	opt callstack 26
 11923  004256  0E00               	movlw	0
 11924  004258  6E0D               	movwf	___aldiv@sign^0,c
 11925  00425A  BE0B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11926  00425C  EF34  F021         	goto	u6750
 11927  004260  EF32  F021         	goto	u6751
 11928  004264                     u6751:
 11929  004264  EF3E  F021         	goto	l6098
 11930  004268                     u6750:
 11931  004268  1E0B               	comf	(___aldiv@divisor+3)^0,f,c
 11932  00426A  1E0A               	comf	(___aldiv@divisor+2)^0,f,c
 11933  00426C  1E09               	comf	(___aldiv@divisor+1)^0,f,c
 11934  00426E  6C08               	negf	___aldiv@divisor^0,c
 11935  004270  0E00               	movlw	0
 11936  004272  2209               	addwfc	(___aldiv@divisor+1)^0,f,c
 11937  004274  220A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11938  004276  220B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11939  004278  0E01               	movlw	1
 11940  00427A  6E0D               	movwf	___aldiv@sign^0,c
 11941  00427C                     l6098:
 11942  00427C  BE07               	btfsc	(___aldiv@dividend+3)^0,7,c
 11943  00427E  EF45  F021         	goto	u6760
 11944  004282  EF43  F021         	goto	u6761
 11945  004286                     u6761:
 11946  004286  EF4F  F021         	goto	l6104
 11947  00428A                     u6760:
 11948  00428A  1E07               	comf	(___aldiv@dividend+3)^0,f,c
 11949  00428C  1E06               	comf	(___aldiv@dividend+2)^0,f,c
 11950  00428E  1E05               	comf	(___aldiv@dividend+1)^0,f,c
 11951  004290  6C04               	negf	___aldiv@dividend^0,c
 11952  004292  0E00               	movlw	0
 11953  004294  2205               	addwfc	(___aldiv@dividend+1)^0,f,c
 11954  004296  2206               	addwfc	(___aldiv@dividend+2)^0,f,c
 11955  004298  2207               	addwfc	(___aldiv@dividend+3)^0,f,c
 11956  00429A  0E01               	movlw	1
 11957  00429C  1A0D               	xorwf	___aldiv@sign^0,f,c
 11958  00429E                     l6104:
 11959  00429E  0E00               	movlw	0
 11960  0042A0  6E0E               	movwf	___aldiv@quotient^0,c
 11961  0042A2  0E00               	movlw	0
 11962  0042A4  6E0F               	movwf	(___aldiv@quotient+1)^0,c
 11963  0042A6  0E00               	movlw	0
 11964  0042A8  6E10               	movwf	(___aldiv@quotient+2)^0,c
 11965  0042AA  0E00               	movlw	0
 11966  0042AC  6E11               	movwf	(___aldiv@quotient+3)^0,c
 11967  0042AE  5008               	movf	___aldiv@divisor^0,w,c
 11968  0042B0  1009               	iorwf	(___aldiv@divisor+1)^0,w,c
 11969  0042B2  100A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11970  0042B4  100B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11971  0042B6  B4D8               	btfsc	status,2,c
 11972  0042B8  EF60  F021         	goto	u6771
 11973  0042BC  EF62  F021         	goto	u6770
 11974  0042C0                     u6771:
 11975  0042C0  EF98  F021         	goto	l6126
 11976  0042C4                     u6770:
 11977  0042C4  0E01               	movlw	1
 11978  0042C6  6E0C               	movwf	___aldiv@counter^0,c
 11979  0042C8  EF6C  F021         	goto	l6112
 11980  0042CC                     l6110:
 11981  0042CC  90D8               	bcf	status,0,c
 11982  0042CE  3608               	rlcf	___aldiv@divisor^0,f,c
 11983  0042D0  3609               	rlcf	(___aldiv@divisor+1)^0,f,c
 11984  0042D2  360A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11985  0042D4  360B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11986  0042D6  2A0C               	incf	___aldiv@counter^0,f,c
 11987  0042D8                     l6112:
 11988  0042D8  AE0B               	btfss	(___aldiv@divisor+3)^0,7,c
 11989  0042DA  EF71  F021         	goto	u6781
 11990  0042DE  EF73  F021         	goto	u6780
 11991  0042E2                     u6781:
 11992  0042E2  EF66  F021         	goto	l6110
 11993  0042E6                     u6780:
 11994  0042E6                     l6114:
 11995  0042E6  90D8               	bcf	status,0,c
 11996  0042E8  360E               	rlcf	___aldiv@quotient^0,f,c
 11997  0042EA  360F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11998  0042EC  3610               	rlcf	(___aldiv@quotient+2)^0,f,c
 11999  0042EE  3611               	rlcf	(___aldiv@quotient+3)^0,f,c
 12000  0042F0  5008               	movf	___aldiv@divisor^0,w,c
 12001  0042F2  5C04               	subwf	___aldiv@dividend^0,w,c
 12002  0042F4  5009               	movf	(___aldiv@divisor+1)^0,w,c
 12003  0042F6  5805               	subwfb	(___aldiv@dividend+1)^0,w,c
 12004  0042F8  500A               	movf	(___aldiv@divisor+2)^0,w,c
 12005  0042FA  5806               	subwfb	(___aldiv@dividend+2)^0,w,c
 12006  0042FC  500B               	movf	(___aldiv@divisor+3)^0,w,c
 12007  0042FE  5807               	subwfb	(___aldiv@dividend+3)^0,w,c
 12008  004300  A0D8               	btfss	status,0,c
 12009  004302  EF85  F021         	goto	u6791
 12010  004306  EF87  F021         	goto	u6790
 12011  00430A                     u6791:
 12012  00430A  EF90  F021         	goto	l6122
 12013  00430E                     u6790:
 12014  00430E  5008               	movf	___aldiv@divisor^0,w,c
 12015  004310  5E04               	subwf	___aldiv@dividend^0,f,c
 12016  004312  5009               	movf	(___aldiv@divisor+1)^0,w,c
 12017  004314  5A05               	subwfb	(___aldiv@dividend+1)^0,f,c
 12018  004316  500A               	movf	(___aldiv@divisor+2)^0,w,c
 12019  004318  5A06               	subwfb	(___aldiv@dividend+2)^0,f,c
 12020  00431A  500B               	movf	(___aldiv@divisor+3)^0,w,c
 12021  00431C  5A07               	subwfb	(___aldiv@dividend+3)^0,f,c
 12022  00431E  800E               	bsf	___aldiv@quotient^0,0,c
 12023  004320                     l6122:
 12024  004320  90D8               	bcf	status,0,c
 12025  004322  320B               	rrcf	(___aldiv@divisor+3)^0,f,c
 12026  004324  320A               	rrcf	(___aldiv@divisor+2)^0,f,c
 12027  004326  3209               	rrcf	(___aldiv@divisor+1)^0,f,c
 12028  004328  3208               	rrcf	___aldiv@divisor^0,f,c
 12029  00432A  2E0C               	decfsz	___aldiv@counter^0,f,c
 12030  00432C  EF73  F021         	goto	l6114
 12031  004330                     l6126:
 12032  004330  500D               	movf	___aldiv@sign^0,w,c
 12033  004332  B4D8               	btfsc	status,2,c
 12034  004334  EF9E  F021         	goto	u6801
 12035  004338  EFA0  F021         	goto	u6800
 12036  00433C                     u6801:
 12037  00433C  EFA8  F021         	goto	l6130
 12038  004340                     u6800:
 12039  004340  1E11               	comf	(___aldiv@quotient+3)^0,f,c
 12040  004342  1E10               	comf	(___aldiv@quotient+2)^0,f,c
 12041  004344  1E0F               	comf	(___aldiv@quotient+1)^0,f,c
 12042  004346  6C0E               	negf	___aldiv@quotient^0,c
 12043  004348  0E00               	movlw	0
 12044  00434A  220F               	addwfc	(___aldiv@quotient+1)^0,f,c
 12045  00434C  2210               	addwfc	(___aldiv@quotient+2)^0,f,c
 12046  00434E  2211               	addwfc	(___aldiv@quotient+3)^0,f,c
 12047  004350                     l6130:
 12048  004350  C00E  F004         	movff	___aldiv@quotient,?___aldiv
 12049  004354  C00F  F005         	movff	___aldiv@quotient+1,?___aldiv+1
 12050  004358  C010  F006         	movff	___aldiv@quotient+2,?___aldiv+2
 12051  00435C  C011  F007         	movff	___aldiv@quotient+3,?___aldiv+3
 12052  004360  0012               	return		;funcret
 12053  004362                     __end_of___aldiv:
 12054                           	opt callstack 0
 12055                           
 12056 ;; *************** function _KBD_Init *****************
 12057 ;; Defined at:
 12058 ;;		line 13 in file "src/kbd.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;		None
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;		None
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      void 
 12065 ;; Registers used:
 12066 ;;		wreg, status,2
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12072 ;;      Params:         0       0       0       0       0       0       0       0       0
 12073 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12075 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12076 ;;Total ram usage:        0 bytes
 12077 ;; Hardware stack levels used:    1
 12078 ;; Hardware stack levels required when called:    2
 12079 ;; This function calls:
 12080 ;;		Nothing
 12081 ;; This function is called by:
 12082 ;;		_SYSTEM_Init
 12083 ;; This function uses a non-reentrant model
 12084 ;;
 12085                           
 12086                           	psect	text43
 12087  005120                     __ptext43:
 12088                           	opt callstack 0
 12089  005120                     _KBD_Init:
 12090                           	opt callstack 27
 12091  005120                     
 12092                           ;src/kbd.c: 15:     PORTB = 0x00;
 12093  005120  0E00               	movlw	0
 12094  005122  6E81               	movwf	129,c	;volatile
 12095                           
 12096                           ;src/kbd.c: 16:     TRISB = 0XF0;
 12097  005124  0EF0               	movlw	240
 12098  005126  6E93               	movwf	147,c	;volatile
 12099                           
 12100                           ;src/kbd.c: 17:     LATB = 0x00;
 12101  005128  0E00               	movlw	0
 12102  00512A  6E8A               	movwf	138,c	;volatile
 12103  00512C                     
 12104                           ;src/kbd.c: 18:     INTCON2bits.RBPU = 0;
 12105  00512C  9EF1               	bcf	241,7,c	;volatile
 12106  00512E  0012               	return		;funcret
 12107  005130                     __end_of_KBD_Init:
 12108                           	opt callstack 0
 12109                           
 12110 ;; *************** function _INTERRUPT_Tmr0 *****************
 12111 ;; Defined at:
 12112 ;;		line 44 in file "src/interrupts.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;		None
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;		None
 12117 ;; Return value:  Size  Location     Type
 12118 ;;                  1    wreg      void 
 12119 ;; Registers used:
 12120 ;;		None
 12121 ;; Tracked objects:
 12122 ;;		On entry : 0/0
 12123 ;;		On exit  : 0/0
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12126 ;;      Params:         0       0       0       0       0       0       0       0       0
 12127 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12128 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12129 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12130 ;;Total ram usage:        0 bytes
 12131 ;; Hardware stack levels used:    1
 12132 ;; Hardware stack levels required when called:    2
 12133 ;; This function calls:
 12134 ;;		Nothing
 12135 ;; This function is called by:
 12136 ;;		_SYSTEM_Init
 12137 ;; This function uses a non-reentrant model
 12138 ;;
 12139                           
 12140                           	psect	text44
 12141  005138                     __ptext44:
 12142                           	opt callstack 0
 12143  005138                     _INTERRUPT_Tmr0:
 12144                           	opt callstack 27
 12145  005138                     
 12146                           ;src/interrupts.c: 46:  INTCONbits.TMR0IE = 1;
 12147  005138  8AF2               	bsf	242,5,c	;volatile
 12148                           
 12149                           ;src/interrupts.c: 47:  INTCONbits.TMR0IF = 0;
 12150  00513A  94F2               	bcf	242,2,c	;volatile
 12151  00513C  0012               	return		;funcret
 12152  00513E                     __end_of_INTERRUPT_Tmr0:
 12153                           	opt callstack 0
 12154                           
 12155 ;; *************** function _INTERRUPT_Init *****************
 12156 ;; Defined at:
 12157 ;;		line 3 in file "src/interrupts.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;		None
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;		None
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      void 
 12164 ;; Registers used:
 12165 ;;		None
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0
 12172 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12173 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12174 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12175 ;;Total ram usage:        0 bytes
 12176 ;; Hardware stack levels used:    1
 12177 ;; Hardware stack levels required when called:    2
 12178 ;; This function calls:
 12179 ;;		Nothing
 12180 ;; This function is called by:
 12181 ;;		_SYSTEM_Init
 12182 ;; This function uses a non-reentrant model
 12183 ;;
 12184                           
 12185                           	psect	text45
 12186  005130                     __ptext45:
 12187                           	opt callstack 0
 12188  005130                     _INTERRUPT_Init:
 12189                           	opt callstack 27
 12190  005130                     
 12191                           ;src/interrupts.c: 5:  RCONbits.IPEN = 0;
 12192  005130  9ED0               	bcf	208,7,c	;volatile
 12193                           
 12194                           ;src/interrupts.c: 7:     INTCONbits.GIEH = 1;
 12195  005132  8EF2               	bsf	242,7,c	;volatile
 12196                           
 12197                           ;src/interrupts.c: 8:     INTCONbits.GIEL = 1;
 12198  005134  8CF2               	bsf	242,6,c	;volatile
 12199  005136  0012               	return		;funcret
 12200  005138                     __end_of_INTERRUPT_Init:
 12201                           	opt callstack 0
 12202                           
 12203 ;; *************** function _BLED_Enable *****************
 12204 ;; Defined at:
 12205 ;;		line 79 in file "src/leds.c"
 12206 ;; Parameters:    Size  Location     Type
 12207 ;;  biled           1    wreg     enum E3166
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;  biled           1    5[COMRAM] enum E3166
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  1    wreg      void 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12219 ;;      Params:         0       0       0       0       0       0       0       0       0
 12220 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12221 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12222 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12223 ;;Total ram usage:        3 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    2
 12226 ;; This function calls:
 12227 ;;		Nothing
 12228 ;; This function is called by:
 12229 ;;		_SYSTEM_Init
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233                           	psect	text46
 12234  004E2E                     __ptext46:
 12235                           	opt callstack 0
 12236  004E2E                     _BLED_Enable:
 12237                           	opt callstack 27
 12238                           
 12239                           ;incstack = 0
 12240                           ;BLED_Enable@biled stored from wreg
 12241  004E2E  6E06               	movwf	BLED_Enable@biled^0,c
 12242  004E30                     
 12243                           ;src/leds.c: 79: void BLED_Enable(BILED biled);src/leds.c: 80: {;src/leds.c: 81:     swi
      +                          tch (biled)
 12244  004E30  EF26  F027         	goto	l4792
 12245  004E34                     l276:
 12246                           
 12247                           ;src/leds.c: 84:             TRISEbits.RE1 = 0;
 12248  004E34  9296               	bcf	150,1,c	;volatile
 12249                           
 12250                           ;src/leds.c: 85:             TRISEbits.RE0 = 0;
 12251  004E36  9096               	bcf	150,0,c	;volatile
 12252                           
 12253                           ;src/leds.c: 86:             LATEbits.LATE1 = 0;
 12254  004E38  928D               	bcf	141,1,c	;volatile
 12255                           
 12256                           ;src/leds.c: 87:             LATEbits.LATE0 = 0;
 12257  004E3A  908D               	bcf	141,0,c	;volatile
 12258                           
 12259                           ;src/leds.c: 88:             break;
 12260  004E3C  EF3B  F027         	goto	l279
 12261  004E40                     l278:
 12262                           
 12263                           ;src/leds.c: 90:             TRISCbits.RC2 = 0;
 12264  004E40  9494               	bcf	148,2,c	;volatile
 12265                           
 12266                           ;src/leds.c: 91:             TRISCbits.RC1 = 0;
 12267  004E42  9294               	bcf	148,1,c	;volatile
 12268                           
 12269                           ;src/leds.c: 92:             LATCbits.LATC2 = 0;
 12270  004E44  948B               	bcf	139,2,c	;volatile
 12271                           
 12272                           ;src/leds.c: 93:             LATCbits.LATC1 = 0;
 12273  004E46  928B               	bcf	139,1,c	;volatile
 12274                           
 12275                           ;src/leds.c: 94:     }
 12276  004E48  EF3B  F027         	goto	l279
 12277  004E4C                     l4792:
 12278  004E4C  5006               	movf	BLED_Enable@biled^0,w,c
 12279  004E4E  6E04               	movwf	??_BLED_Enable^0,c
 12280  004E50  6A05               	clrf	(??_BLED_Enable+1)^0,c
 12281                           
 12282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12283                           ; Switch size 1, requested type "simple"
 12284                           ; Number of cases is 1, Range of values is 0 to 0
 12285                           ; switch strategies available:
 12286                           ; Name         Instructions Cycles
 12287                           ; simple_byte            4     3 (average)
 12288                           ;	Chosen strategy is simple_byte
 12289  004E52  5005               	movf	(??_BLED_Enable+1)^0,w,c
 12290  004E54  0A00               	xorlw	0	; case 0
 12291  004E56  B4D8               	btfsc	status,2,c
 12292  004E58  EF30  F027         	goto	l8150
 12293  004E5C  EF3B  F027         	goto	l279
 12294  004E60                     l8150:
 12295                           
 12296                           ; Switch size 1, requested type "simple"
 12297                           ; Number of cases is 2, Range of values is 0 to 1
 12298                           ; switch strategies available:
 12299                           ; Name         Instructions Cycles
 12300                           ; simple_byte            7     4 (average)
 12301                           ;	Chosen strategy is simple_byte
 12302  004E60  5004               	movf	??_BLED_Enable^0,w,c
 12303  004E62  0A00               	xorlw	0	; case 0
 12304  004E64  B4D8               	btfsc	status,2,c
 12305  004E66  EF1A  F027         	goto	l276
 12306  004E6A  0A01               	xorlw	1	; case 1
 12307  004E6C  B4D8               	btfsc	status,2,c
 12308  004E6E  EF20  F027         	goto	l278
 12309  004E72  EF3B  F027         	goto	l279
 12310  004E76                     l279:
 12311  004E76  0012               	return		;funcret
 12312  004E78                     __end_of_BLED_Enable:
 12313                           	opt callstack 0
 12314                           
 12315 ;; *************** function _KBD_InChar *****************
 12316 ;; Defined at:
 12317 ;;		line 66 in file "src/kbd.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;		None
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;  newChar         1    3[COMRAM] unsigned char 
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, status,2, status,0
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12331 ;;      Params:         0       0       0       0       0       0       0       0       0
 12332 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12333 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12334 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12335 ;;Total ram usage:        1 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:    2
 12338 ;; This function calls:
 12339 ;;		Nothing
 12340 ;; This function is called by:
 12341 ;;		_main
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           	psect	text47
 12346  004D8E                     __ptext47:
 12347                           	opt callstack 0
 12348  004D8E                     _KBD_InChar:
 12349                           	opt callstack 28
 12350  004D8E                     l196:
 12351  004D8E                     
 12352                           ;src/kbd.c: 69:     {;src/kbd.c: 70:         uint8_t newChar= (PORTB & 0xF0)>> 4;
 12353  004D8E  3881               	swapf	129,w,c	;volatile
 12354  004D90  0B0F               	andlw	15
 12355  004D92  0B0F               	andlw	15
 12356  004D94  6E04               	movwf	KBD_InChar@newChar^0,c
 12357                           
 12358                           ;src/kbd.c: 71:         if(newChar == 14 || newChar == 13 || newChar == 11 || newChar ==
      +                           7)
 12359  004D96  0E0E               	movlw	14
 12360  004D98  1804               	xorwf	KBD_InChar@newChar^0,w,c
 12361  004D9A  B4D8               	btfsc	status,2,c
 12362  004D9C  EFD2  F026         	goto	u6471
 12363  004DA0  EFD4  F026         	goto	u6470
 12364  004DA4                     u6471:
 12365  004DA4  EFEF  F026         	goto	l200
 12366  004DA8                     u6470:
 12367  004DA8  0E0D               	movlw	13
 12368  004DAA  1804               	xorwf	KBD_InChar@newChar^0,w,c
 12369  004DAC  B4D8               	btfsc	status,2,c
 12370  004DAE  EFDB  F026         	goto	u6481
 12371  004DB2  EFDD  F026         	goto	u6480
 12372  004DB6                     u6481:
 12373  004DB6  EFEF  F026         	goto	l200
 12374  004DBA                     u6480:
 12375  004DBA  0E0B               	movlw	11
 12376  004DBC  1804               	xorwf	KBD_InChar@newChar^0,w,c
 12377  004DBE  B4D8               	btfsc	status,2,c
 12378  004DC0  EFE4  F026         	goto	u6491
 12379  004DC4  EFE6  F026         	goto	u6490
 12380  004DC8                     u6491:
 12381  004DC8  EFEF  F026         	goto	l200
 12382  004DCC                     u6490:
 12383  004DCC  0E07               	movlw	7
 12384  004DCE  1804               	xorwf	KBD_InChar@newChar^0,w,c
 12385  004DD0  A4D8               	btfss	status,2,c
 12386  004DD2  EFED  F026         	goto	u6501
 12387  004DD6  EFEF  F026         	goto	u6500
 12388  004DDA                     u6501:
 12389  004DDA  EFC7  F026         	goto	l196
 12390  004DDE                     u6500:
 12391  004DDE                     l200:
 12392  004DDE  0012               	return		;funcret
 12393  004DE0                     __end_of_KBD_InChar:
 12394                           	opt callstack 0
 12395                           
 12396 ;; *************** function _KBD_GetChar *****************
 12397 ;; Defined at:
 12398 ;;		line 21 in file "src/kbd.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;		None
 12401 ;; Auto vars:     Size  Location     Type
 12402 ;;  col             2   10[COMRAM] int 
 12403 ;;  row             2    8[COMRAM] int 
 12404 ;;  key             1    7[COMRAM] unsigned char 
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  1    wreg      unsigned char 
 12407 ;; Registers used:
 12408 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12414 ;;      Params:         0       0       0       0       0       0       0       0       0
 12415 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12416 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12417 ;;      Totals:         9       0       0       0       0       0       0       0       0
 12418 ;;Total ram usage:        9 bytes
 12419 ;; Hardware stack levels used:    1
 12420 ;; Hardware stack levels required when called:    2
 12421 ;; This function calls:
 12422 ;;		Nothing
 12423 ;; This function is called by:
 12424 ;;		_main
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           	psect	text48
 12429  0038F4                     __ptext48:
 12430                           	opt callstack 0
 12431  0038F4                     _KBD_GetChar:
 12432                           	opt callstack 28
 12433  0038F4                     
 12434                           ;src/kbd.c: 24:     int row = 0, col = 0;
 12435  0038F4  0E00               	movlw	0
 12436  0038F6  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12437  0038F8  0E00               	movlw	0
 12438  0038FA  6E09               	movwf	KBD_GetChar@row^0,c
 12439  0038FC  0E00               	movlw	0
 12440  0038FE  6E0C               	movwf	(KBD_GetChar@col+1)^0,c
 12441  003900  0E00               	movlw	0
 12442  003902  6E0B               	movwf	KBD_GetChar@col^0,c
 12443                           
 12444                           ;src/kbd.c: 26:     for(col = 0; col <= 3; col++)
 12445  003904  0E00               	movlw	0
 12446  003906  6E0C               	movwf	(KBD_GetChar@col+1)^0,c
 12447  003908  0E00               	movlw	0
 12448  00390A  6E0B               	movwf	KBD_GetChar@col^0,c
 12449  00390C                     l5768:
 12450                           
 12451                           ;src/kbd.c: 27:     {;src/kbd.c: 28:         LATBbits.LATB3 = col == 0? 0:1;
 12452  00390C  500B               	movf	KBD_GetChar@col^0,w,c
 12453  00390E  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12454  003910  A4D8               	btfss	status,2,c
 12455  003912  EF8D  F01C         	goto	u6511
 12456  003916  EF91  F01C         	goto	u6510
 12457  00391A                     u6511:
 12458  00391A  6A04               	clrf	??_KBD_GetChar^0,c
 12459  00391C  2A04               	incf	??_KBD_GetChar^0,f,c
 12460  00391E  EF92  F01C         	goto	u6528
 12461  003922                     u6510:
 12462  003922  6A04               	clrf	??_KBD_GetChar^0,c
 12463  003924                     u6528:
 12464  003924  4604               	rlncf	??_KBD_GetChar^0,f,c
 12465  003926  4604               	rlncf	??_KBD_GetChar^0,f,c
 12466  003928  4604               	rlncf	??_KBD_GetChar^0,f,c
 12467  00392A  508A               	movf	138,w,c	;volatile
 12468  00392C  1804               	xorwf	??_KBD_GetChar^0,w,c
 12469  00392E  0BF7               	andlw	-9
 12470  003930  1804               	xorwf	??_KBD_GetChar^0,w,c
 12471  003932  6E8A               	movwf	138,c	;volatile
 12472                           
 12473                           ;src/kbd.c: 29:         LATBbits.LATB2 = col == 1? 0:1;
 12474  003934  040B               	decf	KBD_GetChar@col^0,w,c
 12475  003936  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12476  003938  A4D8               	btfss	status,2,c
 12477  00393A  EFA1  F01C         	goto	u6531
 12478  00393E  EFA5  F01C         	goto	u6530
 12479  003942                     u6531:
 12480  003942  6A04               	clrf	??_KBD_GetChar^0,c
 12481  003944  2A04               	incf	??_KBD_GetChar^0,f,c
 12482  003946  EFA6  F01C         	goto	u6548
 12483  00394A                     u6530:
 12484  00394A  6A04               	clrf	??_KBD_GetChar^0,c
 12485  00394C                     u6548:
 12486  00394C  4604               	rlncf	??_KBD_GetChar^0,f,c
 12487  00394E  4604               	rlncf	??_KBD_GetChar^0,f,c
 12488  003950  508A               	movf	138,w,c	;volatile
 12489  003952  1804               	xorwf	??_KBD_GetChar^0,w,c
 12490  003954  0BFB               	andlw	-5
 12491  003956  1804               	xorwf	??_KBD_GetChar^0,w,c
 12492  003958  6E8A               	movwf	138,c	;volatile
 12493                           
 12494                           ;src/kbd.c: 30:         LATBbits.LATB1 = col == 2? 0:1;
 12495  00395A  0E02               	movlw	2
 12496  00395C  180B               	xorwf	KBD_GetChar@col^0,w,c
 12497  00395E  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12498  003960  A4D8               	btfss	status,2,c
 12499  003962  EFB5  F01C         	goto	u6551
 12500  003966  EFB9  F01C         	goto	u6550
 12501  00396A                     u6551:
 12502  00396A  6A04               	clrf	??_KBD_GetChar^0,c
 12503  00396C  2A04               	incf	??_KBD_GetChar^0,f,c
 12504  00396E  EFBA  F01C         	goto	u6568
 12505  003972                     u6550:
 12506  003972  6A04               	clrf	??_KBD_GetChar^0,c
 12507  003974                     u6568:
 12508  003974  4604               	rlncf	??_KBD_GetChar^0,f,c
 12509  003976  508A               	movf	138,w,c	;volatile
 12510  003978  1804               	xorwf	??_KBD_GetChar^0,w,c
 12511  00397A  0BFD               	andlw	-3
 12512  00397C  1804               	xorwf	??_KBD_GetChar^0,w,c
 12513  00397E  6E8A               	movwf	138,c	;volatile
 12514                           
 12515                           ;src/kbd.c: 31:         LATBbits.LATB0 = col == 3? 0:1;
 12516  003980  0E03               	movlw	3
 12517  003982  180B               	xorwf	KBD_GetChar@col^0,w,c
 12518  003984  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12519  003986  A4D8               	btfss	status,2,c
 12520  003988  EFC8  F01C         	goto	u6571
 12521  00398C  EFCC  F01C         	goto	u6570
 12522  003990                     u6571:
 12523  003990  6A04               	clrf	??_KBD_GetChar^0,c
 12524  003992  2A04               	incf	??_KBD_GetChar^0,f,c
 12525  003994  EFCD  F01C         	goto	u6588
 12526  003998                     u6570:
 12527  003998  6A04               	clrf	??_KBD_GetChar^0,c
 12528  00399A                     u6588:
 12529  00399A  508A               	movf	138,w,c	;volatile
 12530  00399C  1804               	xorwf	??_KBD_GetChar^0,w,c
 12531  00399E  0BFE               	andlw	-2
 12532  0039A0  1804               	xorwf	??_KBD_GetChar^0,w,c
 12533  0039A2  6E8A               	movwf	138,c	;volatile
 12534  0039A4                     
 12535                           ;src/kbd.c: 32:         _delay((unsigned long)((10)*(48000000/4000.0)));
 12536  0039A4  0E9C               	movlw	156
 12537  0039A6  6E04               	movwf	??_KBD_GetChar^0,c
 12538  0039A8  0ED7               	movlw	215
 12539  0039AA                     u9667:
 12540  0039AA  2EE8               	decfsz	wreg,f,c
 12541  0039AC  D7FE               	bra	u9667
 12542  0039AE  2E04               	decfsz	??_KBD_GetChar^0,f,c
 12543  0039B0  D7FC               	bra	u9667
 12544  0039B2  F000               	nop	
 12545  0039B4                     
 12546                           ;src/kbd.c: 34:         if(!PORTBbits.RB7)
 12547  0039B4  BE81               	btfsc	129,7,c	;volatile
 12548  0039B6  EFDF  F01C         	goto	u6591
 12549  0039BA  EFE1  F01C         	goto	u6590
 12550  0039BE                     u6591:
 12551  0039BE  EFE7  F01C         	goto	l185
 12552  0039C2                     u6590:
 12553  0039C2                     
 12554                           ;src/kbd.c: 35:         {;src/kbd.c: 36:             row = 0;
 12555  0039C2  0E00               	movlw	0
 12556  0039C4  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12557  0039C6  0E00               	movlw	0
 12558  0039C8  6E09               	movwf	KBD_GetChar@row^0,c
 12559                           
 12560                           ;src/kbd.c: 37:             break;
 12561  0039CA  EF2C  F01D         	goto	l5796
 12562  0039CE                     l185:
 12563  0039CE  BC81               	btfsc	129,6,c	;volatile
 12564  0039D0  EFEC  F01C         	goto	u6601
 12565  0039D4  EFEE  F01C         	goto	u6600
 12566  0039D8                     u6601:
 12567  0039D8  EFF4  F01C         	goto	l187
 12568  0039DC                     u6600:
 12569  0039DC                     
 12570                           ;src/kbd.c: 40:         {;src/kbd.c: 41:             row = 1;
 12571  0039DC  0E00               	movlw	0
 12572  0039DE  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12573  0039E0  0E01               	movlw	1
 12574  0039E2  6E09               	movwf	KBD_GetChar@row^0,c
 12575                           
 12576                           ;src/kbd.c: 42:             break;
 12577  0039E4  EF2C  F01D         	goto	l5796
 12578  0039E8                     l187:
 12579  0039E8  BA81               	btfsc	129,5,c	;volatile
 12580  0039EA  EFF9  F01C         	goto	u6611
 12581  0039EE  EFFB  F01C         	goto	u6610
 12582  0039F2                     u6611:
 12583  0039F2  EF01  F01D         	goto	l189
 12584  0039F6                     u6610:
 12585  0039F6                     
 12586                           ;src/kbd.c: 45:         {;src/kbd.c: 46:             row = 2;
 12587  0039F6  0E00               	movlw	0
 12588  0039F8  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12589  0039FA  0E02               	movlw	2
 12590  0039FC  6E09               	movwf	KBD_GetChar@row^0,c
 12591                           
 12592                           ;src/kbd.c: 47:             break;
 12593  0039FE  EF2C  F01D         	goto	l5796
 12594  003A02                     l189:
 12595  003A02  B881               	btfsc	129,4,c	;volatile
 12596  003A04  EF06  F01D         	goto	u6621
 12597  003A08  EF08  F01D         	goto	u6620
 12598  003A0C                     u6621:
 12599  003A0C  EF0E  F01D         	goto	l188
 12600  003A10                     u6620:
 12601  003A10                     
 12602                           ;src/kbd.c: 50:         {;src/kbd.c: 51:             row = 3;
 12603  003A10  0E00               	movlw	0
 12604  003A12  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12605  003A14  0E03               	movlw	3
 12606  003A16  6E09               	movwf	KBD_GetChar@row^0,c
 12607                           
 12608                           ;src/kbd.c: 52:             break;
 12609  003A18  EF2C  F01D         	goto	l5796
 12610  003A1C                     l188:
 12611  003A1C                     
 12612                           ;src/kbd.c: 54:         if (col == 3)
 12613  003A1C  0E03               	movlw	3
 12614  003A1E  180B               	xorwf	KBD_GetChar@col^0,w,c
 12615  003A20  100C               	iorwf	(KBD_GetChar@col+1)^0,w,c
 12616  003A22  A4D8               	btfss	status,2,c
 12617  003A24  EF16  F01D         	goto	u6631
 12618  003A28  EF18  F01D         	goto	u6630
 12619  003A2C                     u6631:
 12620  003A2C  EF1C  F01D         	goto	l5792
 12621  003A30                     u6630:
 12622  003A30                     
 12623                           ;src/kbd.c: 55:             row = 4;
 12624  003A30  0E00               	movlw	0
 12625  003A32  6E0A               	movwf	(KBD_GetChar@row+1)^0,c
 12626  003A34  0E04               	movlw	4
 12627  003A36  6E09               	movwf	KBD_GetChar@row^0,c
 12628  003A38                     l5792:
 12629                           
 12630                           ;src/kbd.c: 56:     }
 12631  003A38  4A0B               	infsnz	KBD_GetChar@col^0,f,c
 12632  003A3A  2A0C               	incf	(KBD_GetChar@col+1)^0,f,c
 12633  003A3C  BE0C               	btfsc	(KBD_GetChar@col+1)^0,7,c
 12634  003A3E  EF2A  F01D         	goto	u6641
 12635  003A42  500C               	movf	(KBD_GetChar@col+1)^0,w,c
 12636  003A44  E109               	bnz	u6640
 12637  003A46  0E04               	movlw	4
 12638  003A48  5C0B               	subwf	KBD_GetChar@col^0,w,c
 12639  003A4A  A0D8               	btfss	status,0,c
 12640  003A4C  EF2A  F01D         	goto	u6641
 12641  003A50  EF2C  F01D         	goto	u6640
 12642  003A54                     u6641:
 12643  003A54  EF86  F01C         	goto	l5768
 12644  003A58                     u6640:
 12645  003A58                     l5796:
 12646                           
 12647                           ;src/kbd.c: 57:     key = keyPad[row][col];
 12648  003A58  C009  F004         	movff	KBD_GetChar@row,??_KBD_GetChar
 12649  003A5C  C00A  F005         	movff	KBD_GetChar@row+1,??_KBD_GetChar+1
 12650  003A60  90D8               	bcf	status,0,c
 12651  003A62  3604               	rlcf	??_KBD_GetChar^0,f,c
 12652  003A64  3605               	rlcf	(??_KBD_GetChar+1)^0,f,c
 12653  003A66  90D8               	bcf	status,0,c
 12654  003A68  3604               	rlcf	??_KBD_GetChar^0,f,c
 12655  003A6A  3605               	rlcf	(??_KBD_GetChar+1)^0,f,c
 12656  003A6C  0EA0               	movlw	low _keyPad
 12657  003A6E  6E06               	movwf	(??_KBD_GetChar+2)^0,c
 12658  003A70  0E00               	movlw	high _keyPad
 12659  003A72  6E07               	movwf	(??_KBD_GetChar+3)^0,c
 12660  003A74  5004               	movf	??_KBD_GetChar^0,w,c
 12661  003A76  2606               	addwf	(??_KBD_GetChar+2)^0,f,c
 12662  003A78  5005               	movf	(??_KBD_GetChar+1)^0,w,c
 12663  003A7A  2207               	addwfc	(??_KBD_GetChar+3)^0,f,c
 12664  003A7C  500B               	movf	KBD_GetChar@col^0,w,c
 12665  003A7E  2406               	addwf	(??_KBD_GetChar+2)^0,w,c
 12666  003A80  6ED9               	movwf	fsr2l,c
 12667  003A82  500C               	movf	(KBD_GetChar@col+1)^0,w,c
 12668  003A84  2007               	addwfc	(??_KBD_GetChar+3)^0,w,c
 12669  003A86  6EDA               	movwf	fsr2h,c
 12670  003A88  50DF               	movf	indf2,w,c
 12671  003A8A  6E08               	movwf	KBD_GetChar@key^0,c
 12672  003A8C                     
 12673                           ;src/kbd.c: 59:     LATBbits.LATB3 = 0;
 12674  003A8C  968A               	bcf	138,3,c	;volatile
 12675  003A8E                     
 12676                           ;src/kbd.c: 60:     LATBbits.LATB2 = 0;
 12677  003A8E  948A               	bcf	138,2,c	;volatile
 12678  003A90                     
 12679                           ;src/kbd.c: 61:     LATBbits.LATB1 = 0;
 12680  003A90  928A               	bcf	138,1,c	;volatile
 12681  003A92                     
 12682                           ;src/kbd.c: 62:     LATBbits.LATB0 = 0;
 12683  003A92  908A               	bcf	138,0,c	;volatile
 12684  003A94                     
 12685                           ;src/kbd.c: 63:     return key;
 12686  003A94  5008               	movf	KBD_GetChar@key^0,w,c
 12687  003A96  0012               	return		;funcret
 12688  003A98                     __end_of_KBD_GetChar:
 12689                           	opt callstack 0
 12690                           
 12691 ;; *************** function _BLED_Toggle *****************
 12692 ;; Defined at:
 12693 ;;		line 111 in file "src/leds.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;  biled           1    wreg     enum E3166
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  biled           1    5[COMRAM] enum E3166
 12698 ;; Return value:  Size  Location     Type
 12699 ;;                  1    wreg      void 
 12700 ;; Registers used:
 12701 ;;		wreg, status,2, status,0
 12702 ;; Tracked objects:
 12703 ;;		On entry : 0/0
 12704 ;;		On exit  : 0/0
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12707 ;;      Params:         0       0       0       0       0       0       0       0       0
 12708 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12709 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12710 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12711 ;;Total ram usage:        3 bytes
 12712 ;; Hardware stack levels used:    1
 12713 ;; Hardware stack levels required when called:    2
 12714 ;; This function calls:
 12715 ;;		Nothing
 12716 ;; This function is called by:
 12717 ;;		_main
 12718 ;; This function uses a non-reentrant model
 12719 ;;
 12720                           
 12721                           	psect	text49
 12722  004F4C                     __ptext49:
 12723                           	opt callstack 0
 12724  004F4C                     _BLED_Toggle:
 12725                           	opt callstack 28
 12726                           
 12727                           ;incstack = 0
 12728                           ;BLED_Toggle@biled stored from wreg
 12729  004F4C  6E06               	movwf	BLED_Toggle@biled^0,c
 12730  004F4E                     
 12731                           ;src/leds.c: 111: void BLED_Toggle(BILED biled);src/leds.c: 112: {;src/leds.c: 113:     
      +                          switch (biled)
 12732  004F4E  EFB1  F027         	goto	l5414
 12733  004F52                     l290:
 12734                           
 12735                           ;src/leds.c: 116:             LATEbits.LATE1 ^= 1;
 12736  004F52  728D               	btg	141,1,c	;volatile
 12737                           
 12738                           ;src/leds.c: 117:             LATEbits.LATE0 ^= 1;
 12739  004F54  708D               	btg	141,0,c	;volatile
 12740                           
 12741                           ;src/leds.c: 118:             break;
 12742  004F56  EFC6  F027         	goto	l293
 12743  004F5A                     l292:
 12744                           
 12745                           ;src/leds.c: 120:             LATCbits.LATC2 ^= 1;
 12746  004F5A  748B               	btg	139,2,c	;volatile
 12747                           
 12748                           ;src/leds.c: 121:             LATCbits.LATC1 ^= 1;
 12749  004F5C  728B               	btg	139,1,c	;volatile
 12750                           
 12751                           ;src/leds.c: 122:     }
 12752  004F5E  EFC6  F027         	goto	l293
 12753  004F62                     l5414:
 12754  004F62  5006               	movf	BLED_Toggle@biled^0,w,c
 12755  004F64  6E04               	movwf	??_BLED_Toggle^0,c
 12756  004F66  6A05               	clrf	(??_BLED_Toggle+1)^0,c
 12757                           
 12758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12759                           ; Switch size 1, requested type "simple"
 12760                           ; Number of cases is 1, Range of values is 0 to 0
 12761                           ; switch strategies available:
 12762                           ; Name         Instructions Cycles
 12763                           ; simple_byte            4     3 (average)
 12764                           ;	Chosen strategy is simple_byte
 12765  004F68  5005               	movf	(??_BLED_Toggle+1)^0,w,c
 12766  004F6A  0A00               	xorlw	0	; case 0
 12767  004F6C  B4D8               	btfsc	status,2,c
 12768  004F6E  EFBB  F027         	goto	l8152
 12769  004F72  EFC6  F027         	goto	l293
 12770  004F76                     l8152:
 12771                           
 12772                           ; Switch size 1, requested type "simple"
 12773                           ; Number of cases is 2, Range of values is 0 to 1
 12774                           ; switch strategies available:
 12775                           ; Name         Instructions Cycles
 12776                           ; simple_byte            7     4 (average)
 12777                           ;	Chosen strategy is simple_byte
 12778  004F76  5004               	movf	??_BLED_Toggle^0,w,c
 12779  004F78  0A00               	xorlw	0	; case 0
 12780  004F7A  B4D8               	btfsc	status,2,c
 12781  004F7C  EFA9  F027         	goto	l290
 12782  004F80  0A01               	xorlw	1	; case 1
 12783  004F82  B4D8               	btfsc	status,2,c
 12784  004F84  EFAD  F027         	goto	l292
 12785  004F88  EFC6  F027         	goto	l293
 12786  004F8C                     l293:
 12787  004F8C  0012               	return		;funcret
 12788  004F8E                     __end_of_BLED_Toggle:
 12789                           	opt callstack 0
 12790                           
 12791 ;; *************** function _BLED_Color *****************
 12792 ;; Defined at:
 12793 ;;		line 97 in file "src/leds.c"
 12794 ;; Parameters:    Size  Location     Type
 12795 ;;  biled           1    wreg     enum E3166
 12796 ;;  green           1    3[COMRAM] _Bool 
 12797 ;;  red             1    4[COMRAM] _Bool 
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;  biled           1    7[COMRAM] enum E3166
 12800 ;; Return value:  Size  Location     Type
 12801 ;;                  1    wreg      void 
 12802 ;; Registers used:
 12803 ;;		wreg, status,2, status,0
 12804 ;; Tracked objects:
 12805 ;;		On entry : 0/0
 12806 ;;		On exit  : 0/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12809 ;;      Params:         2       0       0       0       0       0       0       0       0
 12810 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12811 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12812 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12813 ;;Total ram usage:        5 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; Hardware stack levels required when called:    2
 12816 ;; This function calls:
 12817 ;;		Nothing
 12818 ;; This function is called by:
 12819 ;;		_main
 12820 ;; This function uses a non-reentrant model
 12821 ;;
 12822                           
 12823                           	psect	text50
 12824  004728                     __ptext50:
 12825                           	opt callstack 0
 12826  004728                     _BLED_Color:
 12827                           	opt callstack 28
 12828                           
 12829                           ;incstack = 0
 12830                           ;BLED_Color@biled stored from wreg
 12831  004728  6E08               	movwf	BLED_Color@biled^0,c
 12832  00472A                     
 12833                           ;src/leds.c: 97: void BLED_Color(BILED biled, _Bool green, _Bool red);src/leds.c: 98: {;
      +                          src/leds.c: 99:     switch (biled)
 12834  00472A  EFDF  F023         	goto	l5444
 12835  00472E                     l5440:
 12836                           
 12837                           ;src/leds.c: 102:             LATEbits.LATE1 = (green? 1 : 0);
 12838  00472E  5004               	movf	BLED_Color@green^0,w,c
 12839  004730  A4D8               	btfss	status,2,c
 12840  004732  EF9D  F023         	goto	u6101
 12841  004736  EFA1  F023         	goto	u6100
 12842  00473A                     u6101:
 12843  00473A  6A06               	clrf	??_BLED_Color^0,c
 12844  00473C  2A06               	incf	??_BLED_Color^0,f,c
 12845  00473E  EFA2  F023         	goto	u6118
 12846  004742                     u6100:
 12847  004742  6A06               	clrf	??_BLED_Color^0,c
 12848  004744                     u6118:
 12849  004744  4606               	rlncf	??_BLED_Color^0,f,c
 12850  004746  508D               	movf	141,w,c	;volatile
 12851  004748  1806               	xorwf	??_BLED_Color^0,w,c
 12852  00474A  0BFD               	andlw	-3
 12853  00474C  1806               	xorwf	??_BLED_Color^0,w,c
 12854  00474E  6E8D               	movwf	141,c	;volatile
 12855                           
 12856                           ;src/leds.c: 103:             LATEbits.LATE0 = (red? 1 : 0);
 12857  004750  5005               	movf	BLED_Color@red^0,w,c
 12858  004752  A4D8               	btfss	status,2,c
 12859  004754  EFAE  F023         	goto	u6121
 12860  004758  EFB2  F023         	goto	u6120
 12861  00475C                     u6121:
 12862  00475C  6A06               	clrf	??_BLED_Color^0,c
 12863  00475E  2A06               	incf	??_BLED_Color^0,f,c
 12864  004760  EFB3  F023         	goto	u6138
 12865  004764                     u6120:
 12866  004764  6A06               	clrf	??_BLED_Color^0,c
 12867  004766                     u6138:
 12868  004766  508D               	movf	141,w,c	;volatile
 12869  004768  1806               	xorwf	??_BLED_Color^0,w,c
 12870  00476A  0BFE               	andlw	-2
 12871  00476C  1806               	xorwf	??_BLED_Color^0,w,c
 12872  00476E  6E8D               	movwf	141,c	;volatile
 12873                           
 12874                           ;src/leds.c: 104:             break;
 12875  004770  EFF4  F023         	goto	l286
 12876  004774                     l5442:
 12877                           
 12878                           ;src/leds.c: 106:             LATCbits.LATC2 = (green? 1 : 0);
 12879  004774  5004               	movf	BLED_Color@green^0,w,c
 12880  004776  A4D8               	btfss	status,2,c
 12881  004778  EFC0  F023         	goto	u6141
 12882  00477C  EFC4  F023         	goto	u6140
 12883  004780                     u6141:
 12884  004780  6A06               	clrf	??_BLED_Color^0,c
 12885  004782  2A06               	incf	??_BLED_Color^0,f,c
 12886  004784  EFC5  F023         	goto	u6158
 12887  004788                     u6140:
 12888  004788  6A06               	clrf	??_BLED_Color^0,c
 12889  00478A                     u6158:
 12890  00478A  4606               	rlncf	??_BLED_Color^0,f,c
 12891  00478C  4606               	rlncf	??_BLED_Color^0,f,c
 12892  00478E  508B               	movf	139,w,c	;volatile
 12893  004790  1806               	xorwf	??_BLED_Color^0,w,c
 12894  004792  0BFB               	andlw	-5
 12895  004794  1806               	xorwf	??_BLED_Color^0,w,c
 12896  004796  6E8B               	movwf	139,c	;volatile
 12897                           
 12898                           ;src/leds.c: 107:             LATCbits.LATC1 = (red? 1 : 0);
 12899  004798  5005               	movf	BLED_Color@red^0,w,c
 12900  00479A  A4D8               	btfss	status,2,c
 12901  00479C  EFD2  F023         	goto	u6161
 12902  0047A0  EFD6  F023         	goto	u6160
 12903  0047A4                     u6161:
 12904  0047A4  6A06               	clrf	??_BLED_Color^0,c
 12905  0047A6  2A06               	incf	??_BLED_Color^0,f,c
 12906  0047A8  EFD7  F023         	goto	u6178
 12907  0047AC                     u6160:
 12908  0047AC  6A06               	clrf	??_BLED_Color^0,c
 12909  0047AE                     u6178:
 12910  0047AE  4606               	rlncf	??_BLED_Color^0,f,c
 12911  0047B0  508B               	movf	139,w,c	;volatile
 12912  0047B2  1806               	xorwf	??_BLED_Color^0,w,c
 12913  0047B4  0BFD               	andlw	-3
 12914  0047B6  1806               	xorwf	??_BLED_Color^0,w,c
 12915  0047B8  6E8B               	movwf	139,c	;volatile
 12916                           
 12917                           ;src/leds.c: 108:     }
 12918  0047BA  EFF4  F023         	goto	l286
 12919  0047BE                     l5444:
 12920  0047BE  5008               	movf	BLED_Color@biled^0,w,c
 12921  0047C0  6E06               	movwf	??_BLED_Color^0,c
 12922  0047C2  6A07               	clrf	(??_BLED_Color+1)^0,c
 12923                           
 12924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12925                           ; Switch size 1, requested type "simple"
 12926                           ; Number of cases is 1, Range of values is 0 to 0
 12927                           ; switch strategies available:
 12928                           ; Name         Instructions Cycles
 12929                           ; simple_byte            4     3 (average)
 12930                           ;	Chosen strategy is simple_byte
 12931  0047C4  5007               	movf	(??_BLED_Color+1)^0,w,c
 12932  0047C6  0A00               	xorlw	0	; case 0
 12933  0047C8  B4D8               	btfsc	status,2,c
 12934  0047CA  EFE9  F023         	goto	l8154
 12935  0047CE  EFF4  F023         	goto	l286
 12936  0047D2                     l8154:
 12937                           
 12938                           ; Switch size 1, requested type "simple"
 12939                           ; Number of cases is 2, Range of values is 0 to 1
 12940                           ; switch strategies available:
 12941                           ; Name         Instructions Cycles
 12942                           ; simple_byte            7     4 (average)
 12943                           ;	Chosen strategy is simple_byte
 12944  0047D2  5006               	movf	??_BLED_Color^0,w,c
 12945  0047D4  0A00               	xorlw	0	; case 0
 12946  0047D6  B4D8               	btfsc	status,2,c
 12947  0047D8  EF97  F023         	goto	l5440
 12948  0047DC  0A01               	xorlw	1	; case 1
 12949  0047DE  B4D8               	btfsc	status,2,c
 12950  0047E0  EFBA  F023         	goto	l5442
 12951  0047E4  EFF4  F023         	goto	l286
 12952  0047E8                     l286:
 12953  0047E8  0012               	return		;funcret
 12954  0047EA                     __end_of_BLED_Color:
 12955                           	opt callstack 0
 12956                           
 12957 ;; *************** function _myISR *****************
 12958 ;; Defined at:
 12959 ;;		line 17 in file "src/main.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;		None
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;		None
 12964 ;; Return value:  Size  Location     Type
 12965 ;;                  1    wreg      void 
 12966 ;; Registers used:
 12967 ;;		wreg, status,2, status,0, cstack
 12968 ;; Tracked objects:
 12969 ;;		On entry : 0/0
 12970 ;;		On exit  : 0/0
 12971 ;;		Unchanged: 0/0
 12972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12973 ;;      Params:         0       0       0       0       0       0       0       0       0
 12974 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12975 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12976 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12977 ;;Total ram usage:        0 bytes
 12978 ;; Hardware stack levels used:    1
 12979 ;; Hardware stack levels required when called:    1
 12980 ;; This function calls:
 12981 ;;		i2_BLED_Toggle
 12982 ;; This function is called by:
 12983 ;;		Interrupt level 2
 12984 ;; This function uses a non-reentrant model
 12985 ;;
 12986                           
 12987                           	psect	intcode
 12988  000008                     __pintcode:
 12989                           	opt callstack 0
 12990  000008                     _myISR:
 12991                           	opt callstack 24
 12992                           
 12993                           ;incstack = 0
 12994  000008  823D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12995  00000A  ED3C  F027         	call	int_func,f	;refresh shadow registers
 12996                           
 12997                           	psect	intcode_body
 12998  004E78                     __pintcode_body:
 12999                           	opt callstack 24
 13000  004E78                     int_func:
 13001                           	opt callstack 24
 13002  004E78  0006               	pop		; remove dummy address from shadow register refresh
 13003  004E7A                     
 13004                           ;src/main.c: 19:     if (INTCONbits.TMR0IF)
 13005  004E7A  A4F2               	btfss	242,2,c	;volatile
 13006  004E7C  EF42  F027         	goto	i2u665_41
 13007  004E80  EF44  F027         	goto	i2u665_40
 13008  004E84                     i2u665_41:
 13009  004E84  EF5E  F027         	goto	i2l33
 13010  004E88                     i2u665_40:
 13011  004E88                     
 13012                           ;src/main.c: 20:     {;src/main.c: 21:         (TMR0H = 0x48);
 13013  004E88  0E48               	movlw	72
 13014  004E8A  6ED7               	movwf	215,c	;volatile
 13015                           
 13016                           ;src/main.c: 22:         (TMR0L = 0xE5);
 13017  004E8C  0EE5               	movlw	229
 13018  004E8E  6ED6               	movwf	214,c	;volatile
 13019  004E90                     
 13020                           ;src/main.c: 23:         count++;
 13021  004E90  0100               	movlb	0	; () banked
 13022  004E92  4BC2               	infsnz	_count& (0+255),f,b
 13023  004E94  2BC3               	incf	(_count+1)& (0+255),f,b
 13024  004E96                     
 13025                           ; BSR set to: 0
 13026                           ;src/main.c: 24:         if(count == 2)
 13027  004E96  0E02               	movlw	2
 13028  004E98  19C2               	xorwf	_count& (0+255),w,b
 13029  004E9A  11C3               	iorwf	(_count+1)& (0+255),w,b
 13030  004E9C  A4D8               	btfss	status,2,c
 13031  004E9E  EF53  F027         	goto	i2u666_41
 13032  004EA2  EF55  F027         	goto	i2u666_40
 13033  004EA6                     i2u666_41:
 13034  004EA6  EF5D  F027         	goto	i2l5830
 13035  004EAA                     i2u666_40:
 13036  004EAA                     
 13037                           ; BSR set to: 0
 13038                           ;src/main.c: 25:         {;src/main.c: 26:             BLED_Toggle(BL1);
 13039  004EAA  0E00               	movlw	0
 13040  004EAC  ECC7  F027         	call	i2_BLED_Toggle
 13041  004EB0                     
 13042                           ;src/main.c: 27:             count = 0;
 13043  004EB0  0E00               	movlw	0
 13044  004EB2  0100               	movlb	0	; () banked
 13045  004EB4  6FC3               	movwf	(_count+1)& (0+255),b
 13046  004EB6  0E00               	movlw	0
 13047  004EB8  6FC2               	movwf	_count& (0+255),b
 13048  004EBA                     i2l5830:
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;src/main.c: 29:         INTCONbits.TMR0IF = 0;
 13052  004EBA  94F2               	bcf	242,2,c	;volatile
 13053  004EBC                     i2l33:
 13054  004EBC  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13055  004EBE  0011               	retfie		f
 13056  004EC0                     __end_of_myISR:
 13057                           	opt callstack 0
 13058                           
 13059 ;; *************** function i2_BLED_Toggle *****************
 13060 ;; Defined at:
 13061 ;;		line 111 in file "src/leds.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;  biled           1    wreg     enum E3166
 13064 ;; Auto vars:     Size  Location     Type
 13065 ;;  biled           1    2[COMRAM] enum E3166
 13066 ;; Return value:  Size  Location     Type
 13067 ;;                  1    wreg      void 
 13068 ;; Registers used:
 13069 ;;		wreg, status,2, status,0
 13070 ;; Tracked objects:
 13071 ;;		On entry : 0/0
 13072 ;;		On exit  : 0/0
 13073 ;;		Unchanged: 0/0
 13074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13075 ;;      Params:         0       0       0       0       0       0       0       0       0
 13076 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13077 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13078 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13079 ;;Total ram usage:        3 bytes
 13080 ;; Hardware stack levels used:    1
 13081 ;; This function calls:
 13082 ;;		Nothing
 13083 ;; This function is called by:
 13084 ;;		_myISR
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           	psect	text52
 13089  004F8E                     __ptext52:
 13090                           	opt callstack 0
 13091  004F8E                     i2_BLED_Toggle:
 13092                           	opt callstack 24
 13093                           
 13094                           ;incstack = 0
 13095                           ;i2BLED_Toggle@biled stored from wreg
 13096  004F8E  6E03               	movwf	i2BLED_Toggle@biled^0,c
 13097  004F90                     
 13098                           ;src/leds.c: 111: void BLED_Toggle(BILED biled);src/leds.c: 112: {;src/leds.c: 113:     
      +                          switch (biled)
 13099  004F90  EFD2  F027         	goto	i2l5812
 13100  004F94                     i2l290:
 13101                           
 13102                           ;src/leds.c: 116:             LATEbits.LATE1 ^= 1;
 13103  004F94  728D               	btg	141,1,c	;volatile
 13104                           
 13105                           ;src/leds.c: 117:             LATEbits.LATE0 ^= 1;
 13106  004F96  708D               	btg	141,0,c	;volatile
 13107                           
 13108                           ;src/leds.c: 118:             break;
 13109  004F98  EFE7  F027         	goto	i2l293
 13110  004F9C                     i2l292:
 13111                           
 13112                           ;src/leds.c: 120:             LATCbits.LATC2 ^= 1;
 13113  004F9C  748B               	btg	139,2,c	;volatile
 13114                           
 13115                           ;src/leds.c: 121:             LATCbits.LATC1 ^= 1;
 13116  004F9E  728B               	btg	139,1,c	;volatile
 13117                           
 13118                           ;src/leds.c: 122:     }
 13119  004FA0  EFE7  F027         	goto	i2l293
 13120  004FA4                     i2l5812:
 13121  004FA4  5003               	movf	i2BLED_Toggle@biled^0,w,c
 13122  004FA6  6E01               	movwf	??i2_BLED_Toggle^0,c
 13123  004FA8  6A02               	clrf	(??i2_BLED_Toggle+1)^0,c
 13124                           
 13125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13126                           ; Switch size 1, requested type "simple"
 13127                           ; Number of cases is 1, Range of values is 0 to 0
 13128                           ; switch strategies available:
 13129                           ; Name         Instructions Cycles
 13130                           ; simple_byte            4     3 (average)
 13131                           ;	Chosen strategy is simple_byte
 13132  004FAA  5002               	movf	(??i2_BLED_Toggle+1)^0,w,c
 13133  004FAC  0A00               	xorlw	0	; case 0
 13134  004FAE  B4D8               	btfsc	status,2,c
 13135  004FB0  EFDC  F027         	goto	i2l8156
 13136  004FB4  EFE7  F027         	goto	i2l293
 13137  004FB8                     i2l8156:
 13138                           
 13139                           ; Switch size 1, requested type "simple"
 13140                           ; Number of cases is 2, Range of values is 0 to 1
 13141                           ; switch strategies available:
 13142                           ; Name         Instructions Cycles
 13143                           ; simple_byte            7     4 (average)
 13144                           ;	Chosen strategy is simple_byte
 13145  004FB8  5001               	movf	??i2_BLED_Toggle^0,w,c
 13146  004FBA  0A00               	xorlw	0	; case 0
 13147  004FBC  B4D8               	btfsc	status,2,c
 13148  004FBE  EFCA  F027         	goto	i2l290
 13149  004FC2  0A01               	xorlw	1	; case 1
 13150  004FC4  B4D8               	btfsc	status,2,c
 13151  004FC6  EFCE  F027         	goto	i2l292
 13152  004FCA  EFE7  F027         	goto	i2l293
 13153  004FCE                     i2l293:
 13154  004FCE  0012               	return		;funcret
 13155  004FD0                     __end_ofi2_BLED_Toggle:
 13156                           	opt callstack 0
 13157                           
 13158                           	psect	rparam
 13159  0000                     
 13160                           	psect	temp
 13161  00003D                     btemp:
 13162                           	opt callstack 0
 13163  00003D                     	ds	1
 13164  0000                     int$flags	set	btemp
 13165  0000                     wtemp8	set	btemp+1
 13166  0000                     ttemp5	set	btemp+1
 13167  0000                     ttemp6	set	btemp+4
 13168  0000                     ttemp7	set	btemp+8
 13169                           tosu	equ	0xFFF
 13170                           tosh	equ	0xFFE
 13171                           tosl	equ	0xFFD
 13172                           stkptr	equ	0xFFC
 13173                           pclatu	equ	0xFFB
 13174                           pclath	equ	0xFFA
 13175                           pcl	equ	0xFF9
 13176                           tblptru	equ	0xFF8
 13177                           tblptrh	equ	0xFF7
 13178                           tblptrl	equ	0xFF6
 13179                           tablat	equ	0xFF5
 13180                           prodh	equ	0xFF4
 13181                           prodl	equ	0xFF3
 13182                           indf0	equ	0xFEF
 13183                           postinc0	equ	0xFEE
 13184                           postdec0	equ	0xFED
 13185                           preinc0	equ	0xFEC
 13186                           plusw0	equ	0xFEB
 13187                           fsr0h	equ	0xFEA
 13188                           fsr0l	equ	0xFE9
 13189                           wreg	equ	0xFE8
 13190                           indf1	equ	0xFE7
 13191                           postinc1	equ	0xFE6
 13192                           postdec1	equ	0xFE5
 13193                           preinc1	equ	0xFE4
 13194                           plusw1	equ	0xFE3
 13195                           fsr1h	equ	0xFE2
 13196                           fsr1l	equ	0xFE1
 13197                           bsr	equ	0xFE0
 13198                           indf2	equ	0xFDF
 13199                           postinc2	equ	0xFDE
 13200                           postdec2	equ	0xFDD
 13201                           preinc2	equ	0xFDC
 13202                           plusw2	equ	0xFDB
 13203                           fsr2h	equ	0xFDA
 13204                           fsr2l	equ	0xFD9
 13205                           status	equ	0xFD8


Data Sizes:
    Strings     119
    Constant    19
    Data        148
    BSS         151
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      60
    BANK0           160     18     122
    BANK1           256     68      68
    BANK2           256      0     192
    BANK3           256    234     234
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), 
		 -> getWP@width_str(COMRAM[5]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 64
		 -> reverse@auxstr(BANK1[64]), STR_7(CODE[2]), STR_6(CODE[2]), my_vprintf@buffer(BANK3[64]), 
		 -> my_vprintf@ch(BANK3[2]), my_vprintf@char_temp(BANK3[2]), ?_my_vprintf(BANK0[2]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> reverse@auxstr(BANK1[64]), STR_7(CODE[2]), STR_6(CODE[2]), my_vprintf@buffer(BANK3[64]), 
		 -> my_vprintf@ch(BANK3[2]), my_vprintf@char_temp(BANK3[2]), ?_my_vprintf(BANK0[2]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), my_vprintf@ch(BANK3[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@string(BANK3[128]), 

    ftoa@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    ftoa_sci@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    normalize@val	PTR  size(2) Largest target is 4
		 -> ftoa@value(COMRAM[4]), ftoa_sci@value(BANK0[4]), 

    atoui@str	PTR unsigned char  size(2) Largest target is 5
		 -> getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    itoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    reverse@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@string(BANK3[128]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    my_vprintf@string_temp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_my_vprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@buffer(BANK3[64]), my_vprintf@string(BANK3[128]), getWP@prec_str(COMRAM[5]), getWP@width_str(COMRAM[5]), 

    my_vprintf@sformat	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_5(CODE[25]), STR_4(CODE[17]), STR_3(CODE[31]), STR_2(CODE[29]), 
		 -> STR_1(CODE[13]), 

    my_vprintf@valist	PTR void [1] size(2) Largest target is 2
		 -> ?_my_vprintf(BANK0[2]), 

    setWidth@width	PTR int  size(2) Largest target is 2
		 -> my_vprintf@width(BANK3[2]), 

    setWidth@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    addOx@hoS	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    addSig@numS	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precS@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precS@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precI@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precI@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precG@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precG@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precE@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precE@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    precF@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    precF@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    getWP@precision	PTR int  size(2) Largest target is 2
		 -> my_vprintf@prec(BANK3[2]), 

    getWP@width	PTR int  size(2) Largest target is 2
		 -> my_vprintf@width(BANK3[2]), 

    getWP@form	PTR unsigned char  size(2) Largest target is 10
		 -> my_vprintf@format(BANK3[10]), 

    cleanS@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), 

    upperCL@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    roundStr@decnum	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@buffer(BANK3[64]), 

    posc@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), 

    searchc@str	PTR unsigned char  size(2) Largest target is 64
		 -> my_vprintf@format(BANK3[10]), my_vprintf@buffer(BANK3[64]), 

    SERIAL_Write@str	PTR unsigned char  size(2) Largest target is 128
		 -> my_vprintf@string(BANK3[128]), 


Critical Paths under _main in COMRAM

    _main->_my_vprintf
    _my_vprintf->_precG
    _upperCL->_strlen
    _strcat->_strcpy
    _setWidth->_strlen
    _precS->_strlen
    _precI->_strlen
    _precG->_roundStr
    _precF->_roundStr
    _precE->_roundStr
    _roundStr->_posc
    _getWP->_reverse
    _searchc->_strlen
    _posc->_strlen
    _atoui->___wmul
    _ftoa_sci->___fltol
    _itoa->_reverse
    _reverse->_strcpy
    _strcpy->_strlen
    _ftoa->___fltol
    _normalize->___fldiv
    _normalize->___flmul
    ___fltol->___flmul
    ___flsub->___flmul
    _cleanS->_strlen
    _addSig->___xxtofl
    _addOx->_strlen
    _SERIAL_Write->_strlen
    _SYSTEM_Init->_SERIAL_Init
    _SERIAL_Init->___aldiv

Critical Paths under _myISR in COMRAM

    _myISR->i2_BLED_Toggle

Critical Paths under _main in BANK0

    _main->_my_vprintf
    _my_vprintf->_ftoa_sci
    _ftoa_sci->_itoa

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    _getWP->_reverse
    _itoa->_reverse

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_my_vprintf

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  176138
                                             55 COMRAM     2     2      0
                         _BLED_Color
                        _BLED_Toggle
                        _KBD_GetChar
                         _KBD_InChar
                        _SYSTEM_Init
                         _my_vprintf
 ---------------------------------------------------------------------------------
 (1) _my_vprintf                                         240   236      4  173795
                                             53 COMRAM     2     2      0
                                             14 BANK0      4     0      4
                                              0 BANK3    234   234      0
                       _SERIAL_Write
                           ___xxtofl
                              _addOx
                             _addSig
                             _cleanS
                               _ftoa
                           _ftoa_sci
                              _getWP
                               _itoa
                              _precE
                              _precF
                              _precG
                              _precI
                              _precS
                           _setWidth
                             _strcat
                             _strcpy
                             _strlen
                            _upperCL
 ---------------------------------------------------------------------------------
 (2) _upperCL                                              5     3      2    2966
                                              7 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    4057
                                             17 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _setWidth                                            12     8      4    3762
                                              7 COMRAM    12     8      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precS                                               10     6      4    2786
                                              7 COMRAM    10     6      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precI                                               14    10      4    4036
                                              7 COMRAM    14    10      4
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precG                                               23    19      4   18476
                                             30 COMRAM    23    19      4
                               _posc
                           _roundStr
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precF                                               17    13      4   19932
                                             30 COMRAM    17    13      4
                               _posc
                           _roundStr
                            _searchc
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _precE                                               18    14      4   16922
                                             30 COMRAM    18    14      4
                               _posc
                           _roundStr
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _roundStr                                            17    11      6    8841
                                             13 COMRAM    17    11      6
                               _posc
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _getWP                                               28    22      6   19161
                                             21 COMRAM    22    22      0
                                              0 BANK0      6     0      6
                              _atoui
                               _posc
                            _reverse
                            _searchc
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _searchc                                              6     3      3    3441
                                              7 COMRAM     6     3      3
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _posc                                                 6     3      3    4192
                                              7 COMRAM     6     3      3
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _atoui                                                9     7      2    3511
                                              9 COMRAM     9     7      2
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     592
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ftoa_sci                                            14     8      6   28431
                                             38 COMRAM     8     8      0
                                              8 BANK0      6     0      6
                             ___fleq
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _itoa
                          _normalize
 ---------------------------------------------------------------------------------
 (2) _itoa                                                20    12      8    8412
                                             21 COMRAM    12    12      0
                                              0 BANK0      8     0      8
                            ___aldiv
                            ___almod
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                             72    70      2    4198
                                             17 COMRAM     4     2      2
                                              0 BANK1     68    68      0
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                              10     6      4    1217
                                              7 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     613
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                14     8      6   19547
                                             38 COMRAM    14     8      6
                             ___fleq
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _normalize
 ---------------------------------------------------------------------------------
 (3) _normalize                                            8     6      2    7208
                                             28 COMRAM     8     6      2
                            ___fldiv
                             ___flge
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3953
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1016
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     697
                                             28 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4187
                                             28 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3262
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     245
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _cleanS                                               7     5      2    2724
                                              7 COMRAM     7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _addSig                                              12     6      6    5081
                                             17 COMRAM    12     6      6
                             ___flge
                           ___xxtofl (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     806
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _addOx                                               11     6      5    3887
                                              7 COMRAM    11     6      5
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SERIAL_Write                                         4     2      2    2631
                                              7 COMRAM     4     2      2
                   _SERIAL_WriteChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    2380
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SERIAL_WriteChar                                     1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Init                                          0     0      0    1587
                        _BLED_Enable
                     _INTERRUPT_Init
                     _INTERRUPT_Tmr0
                           _KBD_Init
                        _SERIAL_Init
                         _TIMER0_Int
                       _TIMER0_SetPs
 ---------------------------------------------------------------------------------
 (2) _TIMER0_SetPs                                         3     3      0      22
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_Int                                           4     1      3     338
                                              3 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _SERIAL_Init                                         10     6      4    1205
                                             17 COMRAM    10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     985
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _KBD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Tmr0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BLED_Enable                                          3     3      0      22
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _KBD_InChar                                           1     1      0      89
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _KBD_GetChar                                          9     9      0     231
                                              3 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _BLED_Toggle                                          3     3      0      22
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _BLED_Color                                           5     3      2     414
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myISR                                                0     0      0      22
                      i2_BLED_Toggle
 ---------------------------------------------------------------------------------
 (7) i2_BLED_Toggle                                        3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BLED_Color
   _BLED_Toggle
   _KBD_GetChar
   _KBD_InChar
   _SYSTEM_Init
     _BLED_Enable
     _INTERRUPT_Init
     _INTERRUPT_Tmr0
     _KBD_Init
     _SERIAL_Init
       ___aldiv
     _TIMER0_Int
     _TIMER0_SetPs
   _my_vprintf
     _SERIAL_Write
       _SERIAL_WriteChar
       _strlen
     ___xxtofl
     _addOx
       _strlen
     _addSig
       ___flge
       ___xxtofl (ARG)
       _strlen (ARG)
     _cleanS
       _strlen
     _ftoa
       ___fleq
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
       ___xxtofl
       _normalize
         ___fldiv
         ___flge
         ___flmul
     _ftoa_sci
       ___fleq
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
       ___xxtofl
       _itoa
         ___aldiv
         ___almod
         _reverse
           _strcpy
             _strlen (ARG)
           _strlen
       _normalize
         ___fldiv
         ___flge
         ___flmul
     _getWP
       _atoui
         ___wmul
         _strlen
       _posc
         _strlen
       _reverse
         _strcpy
           _strlen (ARG)
         _strlen
       _searchc
         _strlen
       _strlen
     _itoa
       ___aldiv
       ___almod
       _reverse
         _strcpy
           _strlen (ARG)
         _strlen
     _precE
       _posc
         _strlen
       _roundStr
         _posc
           _strlen
         _strlen
       _strlen
     _precF
       _posc
         _strlen
       _roundStr
         _posc
           _strlen
         _strlen
       _searchc
         _strlen
       _strlen
     _precG
       _posc
         _strlen
       _roundStr
         _posc
           _strlen
         _strlen
       _strlen
     _precI
       _strlen
     _precS
       _strlen
     _setWidth
       _strlen
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strcpy
       _strlen (ARG)
     _strlen
     _upperCL
       _strlen

 _myISR (ROOT)
   i2_BLED_Toggle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     EA      EA      11       91.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     44      44       7       26.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      7A       5       76.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      3C       1       63.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A4      20        0.0%
DATA                 0      0     2A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Aug 28 16:33:02 2020

             ___fldiv@aexp 001C               ___fldiv@bexp 001B                          _c 00C7  
             ___fldiv@sign 0014                         l44 3FB8                         l70 4AE8  
                       l73 510C                         l82 4F4A                         l76 511E  
              __CFG_BOR$ON 000000        ___wmul@multiplicand 0006                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000                        l200 4DDE  
                      l143 5136                        l311 47F0                        l320 489A  
                      l128 4E2C                        l313 47FA                        l401 4A66  
                      l314 4804                        l307 504E                        l315 480E  
                      l180 512E                        l316 4818                        l317 4822  
                      l501 187E                        l158 513C                        l318 482C  
                      l319 4836                        l407 4D8C                        l360 4CE4  
                      l432 367C                        l512 1960                        l193 3A96  
                      l185 39CE                        l290 4F52                        l426 313A  
                      l434 3684                        l522 4254                        l187 39E8  
                      l292 4F5A                        l188 3A1C                        l196 4D8E  
                      l276 4E34                        l293 4F8C                        l189 3A02  
                      l701 49DC                        l461 3570                        l445 373E  
                      l286 47E8                        l278 4E40                        l534 3DC8  
                      l279 4E76                        l543 3EE8                        l367 4C2E  
                      l720 471E                        l368 4C2A                        l640 0A92  
                      l553 3D94                        l705 3C1C                        l721 4726  
                      l529 4B60                        l730 413E                        l466 14B0  
                      l388 2C0C                        l575 3366                        l736 2EEC  
                      l666 107C                        l843 4360                        l747 2916  
                      l764 5108                        l676 1206                        l856 4656  
                      l689 1408               __CFG_CPB$OFF 000000               my_vprintf@ch 03D0  
                      _sig 003C           TIMER0_Int@t0_psa 0006                        wreg 000FE8  
             ___flmul@aexp 0011               ___flmul@bexp 0016               ___flmul@sign 0010  
             ___flmul@temp 001B               ___flmul@prod 0017               __CFG_LVP$OFF 000000  
      __size_of_BLED_Color 00C2               ___fltol@exp1 0026               __CFG_WDT$OFF 000000  
                     l1023 4944                       l1034 456A                       l1029 4524  
                     l1301 1E20                       l1061 4466                       l1038 5086  
                     l1309 1C6A                       l1318 1D3A                       l1334 4F04  
                     l1422 38F2                       l1319 1D28                       l1351 2408  
                     l1360 24F0                       l1433 388A                       l1426 382E  
                     l1346 25E4                       l1442 50E2                       l1419 3796  
                     l1292 1B50                       l1348 2444                       l1293 1B3E  
                     l1357 248A                       l1454 50BC                       l1294 1B04  
                     l1382 224A                       l1359 2502                       l1448 4C8A  
                     l1385 20DC                       l1378 1EE6                       l1395 220C  
                     l1387 2154                       l1388 2142                       l6100 428A  
                     l6110 42CC                       l6102 429A                       l6120 431E  
                     l6112 42D8                       l6104 429E                       l6200 19F8  
                     l7000 4A22                       l6130 4350                       l6122 4320  
                     l6114 42E6                       l6106 42AE                       l6050 5098  
                     l7010 4D5A                       l6202 1A08                       l6210 1A32  
                     l7002 4A40                       l5412 4F4E                       l6124 432A  
                     l6116 42F0                       l6108 42C4                       l6052 50B0  
                     l7012 4D6A                       l6300 1C3A                       l6220 1A6A  
                     l6212 1A42                       l6204 1A18                       l6140 458E  
                     l6060 4BCE                       l7020 2F0E                       l7100 36D4  
                     l7004 4A44                       l5414 4F62                       l6118 430E  
                     l6126 4330                       l6046 5088                       l7014 4D6E  
                     l7006 4D3A                       l6302 1C4A                       l6230 1A7E  
                     l6222 1A6E                       l6214 1A54                       l6206 1A28  
                     l6150 45CE                       l6142 4592                       l6134 456C  
                     l6070 4946                       l6062 4BDA                       l7030 2F96  
                     l7022 2F1A                       l7110 3368                       l7102 36F4  
                     l5440 472E                       l6128 4340                       l6048 5094  
                     l7008 4D4E                       l6320 1CCC                       l6312 1CA4  
                     l6304 1C5A                       l6240 1A92                       l6232 1A82  
                     l6224 1A72                       l6216 1A62                       l6208 1A2A  
                     l6400 22DE                       l6160 4620                       l6152 45DA  
                     l6144 45A0                       l6136 4570                       l6056 4C30  
                     l6080 49AA                       l6072 4960                       l6064 4BF8  
                     l7040 3008                       l7032 2FA2                       l7024 2F22  
                     l7016 2EEE                       l7120 3404                       l7112 33AC  
                     l7104 3700                       l7200 15F4                       l5442 4774  
                     l6090 4256                       l6322 1CD4                       l6314 1CAE  
                     l6306 1C80                       l6330 1CF8                       l6250 1AA6  
                     l6242 1A96                       l6234 1A86                       l6226 1A76  
                     l6218 1A66                       l6170 1962                       l6410 2318  
                     l6402 22EE                       l6154 45E8                       l6162 4626  
                     l6146 45B0                       l6138 457E                       l6058 4C40  
                     l6082 49C8                       l6074 4972                       l6066 4C04  
                     l7042 3024                       l7034 2FC0                       l7050 306A  
                     l7026 2F2A                       l7018 2F02                       l7130 346E  
                     l7122 341E                       l7114 33C4                       l7106 3710  
                     l7210 166C                       l7202 1610                       l5444 47BE  
                     l6092 425A                       l6340 1D4A                       l6332 1CFC  
                     l6324 1CD8                       l6316 1CBC                       l6308 1C90  
                     l6260 1B1E                       l6252 1AD0                       l6244 1A9A  
                     l6236 1A8A                       l6228 1A7A                       l6180 199E  
                     l6172 196E                       l6500 25D8                       l6412 232E  
                     l6404 22FE                       l6164 4636                       l6156 4606  
                     l6148 45C6                       l6076 497E                       l6084 50E4  
                     l6068 4C08                       l7060 30B0                       l7044 302C  
                     l7036 2FDC                       l7052 306E                       l7028 2F30  
                     l7140 34D6                       l7132 347A                       l7124 343A  
                     l7116 33D4                       l7108 3714                       l7220 16D4  
                     l7212 1688                       l7204 1632                       l7300 41FC  
                     l5438 472A                       l6094 4268                       l6350 1DB0  
                     l6342 1D56                       l6334 1D0A                       l6326 1CE8  
                     l6318 1CBE                       l6270 1B5E                       l6262 1B22  
                     l6254 1AEC                       l6246 1A9E                       l6238 1A8E  
                     l6190 19CE                       l6182 19AE                       l6174 197C  
                     l6502 25DA                       l6430 2382                       l6414 233E  
                     l6422 235E                       l6406 2300                       l6510 1E22  
                     l6166 4646                       l6158 4616                       l6078 49A6  
                     l6086 5100                       l7070 311E                       l7062 30BC  
                     l7054 308C                       l7046 304A                       l7038 2FFA  
                     l7142 34F2                       l7150 3552                       l7134 34A2  
                     l7126 3454                       l7118 33F8                       l7230 1760  
                     l7222 16EE                       l7214 16A6                       l7206 1638  
                     l7302 421A                       l7310 4AEA                       l5800 3A8E  
                     l4760 5120                       l6096 4278                       l7400 3D88  
                     l6360 1DF8                       l6352 1DC0                       l6344 1D64  
                     l6336 1D20                       l6328 1CEA                       l6280 1BA0  
                     l6272 1B6E                       l6264 1B30                       l6256 1AFC  
                     l6248 1AA2                       l6192 19E0                       l6184 19B0  
                     l6176 197E                       l6440 23D4                       l6432 239C  
                     l6424 236E                       l6416 2346                       l6408 2308  
                     l6600 20FA                       l6520 1E5E                       l6512 1E2E  
                     l7064 30D8                       l7056 309E                       l7048 3066  
                     l7144 3510                       l7136 34A6                       l7128 3464  
                     l7080 35EA                       l7072 3572                       l7240 17BA  
                     l7232 176C                       l7224 171C                       l7216 16C4  
                     l7208 1646                       l7160 147A                       l7152 140A  
                     l7304 423A                       l7320 4B42                       l7312 4AFE  
                     l5802 3A90                       l4762 512C                       l6098 427C  
                     l4770 501E                       l7322 3D96                       l6362 1DFA  
                     l6354 1DE0                       l6346 1D9E                       l6290 1BCE  
                     l6282 1BAE                       l6266 1B32                       l6258 1B12  
                     l6194 19E2                       l6178 198E                       l6186 19B8  
                     l6450 2430                       l6442 23E4                       l6434 23AC  
                     l6426 236E                       l6418 234A                       l6610 2164  
                     l6602 20FE                       l6530 1E90                       l6522 1E6E  
                     l6514 1E3C                       l7066 30F4                       l7058 30A4  
                     l7146 353C                       l7138 34C8                       l7090 3654  
                     l7082 35F6                       l7074 359E                       l7250 1858  
                     l7242 17E2                       l7226 1728                       l7234 1770  
                     l7218 16C8                       l7170 14E0                       l7162 148A  
                     l7154 144E                       l7306 424A                       l7314 4B1A  
                     l7410 3196                       l7402 313C                       l5804 3A92  
                     l4764 5130                       l4772 5028                       l4780 47EC  
                     l7340 3E52                       l7332 3DEE                       l7324 3DAA  
                     l6364 1E00                       l6356 1DE4                       l6348 1DA0  
                     l6292 1BD8                       l6284 1BBA                       l6276 1B82  
                     l6268 1B3C                       l6196 19E8                       l6188 19C8  
                     l6460 2470                       l6452 2432                       l6444 23F8  
                     l6436 23BC                       l6380 2278                       l6372 224C  
                     l6620 21C6                       l6612 2170                       l6604 210C  
                     l6540 1ED0                       l6532 1E9E                       l6524 1E74  
                     l6516 1E3E                       l7500 27AE                       l7068 3102  
                     l6700 29F4                       l7148 354C                       l7092 3690  
                     l7084 3610                       l7076 35B6                       l7252 1872  
                     l7244 17E6                       l7236 1792                       l7228 1744  
                     l7180 1542                       l7172 14FC                       l7164 14A4  
                     l7156 1456                       l7316 4B2E                       l7412 31A2  
                     l7420 31DC                       l7404 3150                       l5806 3A94  
                     l8150 4E60                       l4790 4E30                       l4774 5032  
                     l4766 5012                       l4782 4840                       l7342 3E62  
                     l7334 3E16                       l7326 3DBA                       l6366 1E0E  
                     l6358 1DF2                       l6286 1BBE                       l6278 1B92  
                     l6294 1BDE                       l6198 19F6                       l6470 24AC  
                     l6462 247A                       l6454 2442                       l6446 2406  
                     l6438 23CC                       l6390 22B2                       l6382 2288  
                     l6374 2258                       l6630 222E                       l6622 21DA  
                     l6614 217E                       l6606 213A                       l6550 1F1A  
                     l6542 1ED6                       l6534 1EA0                       l6526 1E84  
                     l6518 1E4E                       l7510 27EE                       l7502 27B2  
                     l6702 2A10                       l6710 2A40                       l7094 36A0  
                     l7086 362A                       l7078 35C6                       l7270 191A  
                     l7254 1886                       l7238 17AE                       l7246 1804  
                     l7190 1592                       l7174 151A                       l7182 154E  
                     l7166 14B8                       l7158 145E                       l7318 4B3E  
                     l7430 3234                       l7422 31F6                       l7414 31B2  
                     l7406 316C                       l8152 4F76                       l5760 4DCC  
                     l4792 4E4C                       l4776 503C                       l4768 5014  
                     l7360 3C1E                       l6640 4468                       l7352 3EAA  
                     l7328 3DD0                       l7344 3E72                       l6368 1E10  
                     l6296 1C04                       l6288 1BCC                       l6480 251E  
                     l6472 24BA                       l6464 2488                       l6456 2454  
                     l6448 2412                       l6392 22B8                       l6384 2298  
                     l6376 2266                       l6632 2230                       l6624 21F4  
                     l6616 21A8                       l6560 1F6A                       l6552 1F26  
                     l6544 1EF6                       l6536 1EB0                       l6528 1E8A  
                     l7520 2828                       l7512 27F2                       l7504 27CE  
                     l6800 3B68                       l7600 2EE4                       l6720 2AAC  
                     l6712 2A54                       l6704 2A14                       l7096 36A4  
                     l7088 3644                       l7272 191E                       l7264 18D2  
                     l7256 1896                       l7248 1814                       l7176 152C  
                     l7168 14C4                       l7280 4154                       l7440 3298  
                     l7432 323A                       l7424 3206                       l7416 31B6  
                     l7408 3186                       l8144 3FE4                       l8154 47D2  
                     l5770 39A4                       l5762 38F4                       l5754 4D8E  
                     l4778 504C                       l7610 4DE4                       l7362 3C32  
                     l6650 44F2                       l6642 4496                       l7354 3ED2  
                     l7346 3E84                       l7338 3E20                       l6298 1C38  
                     l6490 258A                       l6482 252C                       l6474 24E8  
                     l6458 246A                       l6466 249A                       l6394 22BE  
                     l6386 229A                       l6378 2268                       l6626 2210  
                     l6634 2236                       l6618 21AC                       l6570 1FAC  
                     l6562 1F76                       l6554 1F30                       l6546 1F06  
                     l6538 1EC0                       l7522 2868                       l7530 28EE  
                     l7514 27F6                       l7506 27DA                       l6802 3B84  
                     l6810 3BE8                       l6730 2B1A                       l6722 2AB8  
                     l6714 2A68                       l6706 2A36                       l7098 36C6  
                     l7274 193C                       l7266 18E6                       l7258 18B2  
                     l7194 15B0                       l7178 1530                       l7186 1570  
                     l7290 41AE                       l7282 4170                       l7442 32B6  
                     l7434 324C                       l7426 3222                       l7418 31BA  
                     l8146 12FC                       l5772 39B4                       l5756 4DA8  
                     l4788 5138                       l8148 4854                       l7620 4E26  
                     l7612 4DE8                       l7380 3CE8                       l7372 3C92  
                     l7364 3C42                       l6652 4504                       l6644 44A6  
                     l7348 3E8C                       l6492 25A4                       l6484 2556  
                     l6468 24A8                       l6396 22CC                       l6388 22A2  
                     l6636 223A                       l6628 2220                       l6580 200E  
                     l6572 1FB8                       l6564 1F82                       l6556 1F46  
                     l6820 4028                       l7532 290A                       l7524 2876  
                     l7508 27E2                       l7516 27FA                       l6812 3C00  
                     l6804 3B9C                       l7540 2C4C                       l6732 2B22  
                     l6724 2AC4                       l6740 2B42                       l6716 2A82  
                     l7268 18F2                       l7276 1942                       l7196 15CE  
                     l7188 1574                       l7292 41C8                       l7284 4184  
                     l7444 32CA                       l7436 325C                       l7452 332A  
                     l7604 50BE                       l7700 0A8E                       l5790 3A30  
                     l5782 39F6                       l5774 39C2                       l5758 4DBA  
                     l7622 4E28                       l7614 4DFA                       l6662 510C  
                     l7390 3D38                       l7374 3CBA                       l7366 3C54  
                     l7382 3CFC                       l6654 4512                       l6646 44D4  
                     l7358 3EDC                       l6910 4456                       l6902 441A  
                     l6494 25C0                       l6478 2512                       l6486 255A  
                     l6398 22CE                       l6590 20A4                       l6582 201A  
                     l6574 1FC8                       l6566 1F90                       l6558 1F52  
                     l6830 40E6                       l6822 4044                       l7526 287A  
                     l7518 2808                       l7470 263C                       l7462 25E6  
                     l6814 3C10                       l6806 3BAE                       l7550 2C9E  
                     l7542 2C5E                       l7534 2C0E                       l6670 4CB6  
                     l6750 2BB8                       l6734 2B32                       l6726 2AD0  
                     l6718 2A9C                       l6742 2B64                       l7198 15D8  
                     l7294 41E4                       l7286 418A                       l7278 4140  
                     l7438 327A                       l7446 32EA                       l7710 0AF8  
                     l7702 0A96                       l7630 08A2                       l5792 3A38  
                     l5768 390C                       l7624 4E2A                       l7616 4E00  
                     l7608 4DE0                       l6664 511A                       l7384 3D0C  
                     l7376 3CC0                       l7368 3C66                       l6656 4562  
                     l6648 44E4                       l6840 4EC0                       l6904 4426  
                     l6920 37A6                       l6496 25C4                       l6488 2574  
                     l6592 20C2                       l6584 2036                       l6576 1FE2  
                     l6568 1F9C                       l6832 40EC                       l6824 4078  
                     l7528 28EA                       l7480 2692                       l7472 264C  
                     l7464 25EE                       l6808 3BB2                       l7560 2D76  
                     l7552 2CB2                       l7536 2C0E                       l6752 2BC8  
                     l6744 2B78                       l6736 2B36                       l6728 2AEE  
                     l7288 41A6                       l7456 334C                       l7448 3308  
                     l7800 0EDE                       l7720 0B4C                       l7712 0B14  
                     l7704 0AB4                       l7640 08BA                       l7632 08AA  
                     l5794 3A3C                       l5786 3A10                       l5778 39DC  
                     l7618 4E24                       l7394 3D56                       l7386 3D1E  
                     l7378 3CDC                       l6658 4568                       l6850 48DA  
                     l6842 4ED0                       l6906 4436                       l6930 37E4  
                     l6922 37BC                       l6914 3742                       l6498 25D2  
                     l6594 20CC                       l6586 2060                       l6578 1FF2  
                     l6834 411E                       l6826 407C                       l6818 4020  
                     l7490 276C                       l7482 26AA                       l7466 2620  
                     l7562 2D7C                       l7554 2CF2                       l7538 2C40  
                     l7546 2C6A                       l6770 46DC                       l6762 4658  
                     l6674 4CBC                       l6666 4C8C                       l6754 2BCC  
                     l6746 2B8C                       l6690 2962                       l6682 2918  
                     l7298 41F6                       l7458 335C                       l7810 0F34  
                     l7802 0EF6                       l7730 0BA8                       l7722 0B64  
                     l7714 0B20                       l7706 0AD2                       l7650 0908  
                     l7642 08CC                       l7634 08AA                       l7626 088C  
                     l5788 3A1C                       l5796 3A58                       l7396 3D7E  
                     l7388 3D30                       l6852 4908                       l6908 4446  
                     l6940 386C                       l6932 3816                       l6916 3752  
                     l6596 20DA                       l6588 2096                       l6836 4136  
                     l6828 40B2                       l7492 2770                       l7484 26EA  
                     l7468 262C                       l7476 2660                       l6780 3AB8  
                     l7580 2E5A                       l7572 2D96                       l7564 2D88  
                     l7556 2D00                       l7548 2C7A                       l6772 46F8  
                     l6764 4674                       l6668 4C98                       l6676 4CC0  
                     l6756 2BEA                       l6748 2BA8                       l6692 297E  
                     l6684 2944                       l7900 12BA                       l7812 0F4C  
                     l7804 0EFE                       l7740 0C34                       l7732 0BB8  
                     l7724 0B74                       l7716 0B38                       l7708 0AF0  
                     l7660 093E                       l7652 090C                       l7644 08D8  
                     l7636 08AA                       l7628 0896                       l5798 3A8C  
                     l6854 4918                       l6846 489C                       l6862 5050  
                     l6870 4362                       l6950 38C2                       l6942 387A  
                     l6934 3818                       l6926 37D0                       l6918 3760  
                     l6598 20EC                       l7486 26F8                       l7494 2776  
                     l7478 266E                       l6790 3AEA                       l6782 3AC4  
                     l7590 2E9A                       l7582 2E5E                       l7574 2DD6  
                     l7566 2D8E                       l7558 2D06                       l6766 4690  
                     l6774 46FC                       l6678 4CE2                       l6758 2C04  
                     l6694 299C                       l6686 2950                       l7910 13A2  
                     l7902 12D2                       l7830 1008                       l7822 0FA6  
                     l7814 0F54                       l7806 0F1C                       l7750 0CC0  
                     l7742 0C44                       l7734 0BC0                       l7726 0B7C  
                     l7718 0B44                       l7670 099E                       l7662 0944  
                     l7654 0910                       l7646 08EA                       l7638 08B2  
                     l6960 4A68                       l6856 493C                       l6848 48CA  
                     l6864 5066                       l6880 43B8                       l6872 4378  
                     l6952 38D2                       l6944 3898                       l6936 3824  
                     l6928 37D8                       l7496 2790                       l7488 26FC  
                     l6792 3AFE                       l6784 3AC8                       l6776 3A98  
                     l7592 2EA6                       l7584 2E7A                       l7576 2DE4  
                     l6768 46AC                       l6696 29B8                       l7840 105C  
                     l7832 1012                       l7824 0FBE                       l7816 0F72  
                     l7760 0D22                       l7752 0CD0                       l7744 0C4C  
                     l7736 0BE8                       l7728 0B90                       l7904 12DC  
                     l7680 09C4                       l7672 09A6                       l7664 094E  
                     l7656 0918                       l7648 0902                       l7912 13BC  
                     l6970 4AD4                       l6962 4ACC                       l6858 4942  
                     l6866 5076                       l6882 43C8                       l6954 38E0  
                     l6946 389A                       l6938 3860                       l7498 27A2  
                     l6794 3AFE                       l6778 3AA0                       l7594 2EAE  
                     l7586 2E86                       l7578 2DEA                       l6698 29CA  
                     l7914 13D0                       l7850 10C0                       l7842 1078  
                     l7834 101E                       l7826 0FC6                       l7818 0F86  
                     l7770 0D8E                       l7762 0D2A                       l7754 0CD8  
                     l7746 0C74                       l7738 0BFC                       l7906 137A  
                     l7690 0A24                       l7682 09D8                       l7658 0924  
                     l7930 3EEA                       l6980 4AE2                       l6972 4AD6  
                     l6964 4ACE                       l6892 43F2                       l6884 43CC  
                     l6876 438C                       l6956 38E2                       l6948 389E  
                     l6796 3B12                       l6788 3ADC                       l7588 2E8C  
                     l7908 138E                       l7860 1130                       l7852 10DC  
                     l7844 1080                       l7828 0FEC                       l7780 0DFE  
                     l7772 0D9E                       l7764 0D52                       l7756 0CFA  
                     l7748 0C88                       l7692 0A42                       l7684 09F6  
                     l7676 09AE                       l7668 096E                       l7916 13D6  
                     l7940 3F36                       l7932 3EEE                       l6982 4AE4  
                     l6974 4AD8                       l6966 4AD0                       l6990 4F24  
                     l6894 43FC                       l6886 43DA                       l6878 43B6  
                     l6798 3B48                       l7598 2EBE                       l7918 13FC  
                     l7870 119C                       l7862 1148                       l7854 10FA  
                     l7846 10A4                       l7838 1040                       l7790 0E6E  
                     l7782 0E0E                       l7774 0DA6                       l7766 0D66  
                     l7758 0D12                       l7694 0A54                       l7686 0A08  
                     l7678 09B2                       l7950 3F5A                       l7942 3F3C  
                     l7934 3EF2                       l6984 4AE6                       l6976 4ADC  
                     l6968 4AD2                       l6992 4F28                       l6896 4406  
                     l7880 1202                       l7872 11A8                       l7864 1150  
                     l7856 1118                       l7848 10B8                       l7792 0E86  
                     l7784 0E16                       l7776 0DCE                       l7768 0D7E  
                     l7696 0A64                       l7688 0A18                       l7960 3F86  
                     l7952 3F5C                       l7944 3F40                       l7936 3F12  
                     l6978 4AE0                       l6986 4F06                       l6994 49DE  
                     l7890 1266                       l7882 120A                       l7866 1176  
                     l7794 0E8E                       l7786 0E3E                       l7778 0DE2  
                     l7698 0A70                       l7970 3FA8                       l7962 3F88  
                     l7954 3F72                       l7946 3F4C                       l7938 3F28  
                     l6988 4F12                       l6996 49EA                       l7892 1284  
                     l7884 122E                       l7876 11CA                       l7868 1192  
                     l7796 0EAA                       l7788 0E52                       l7972 3FB4  
                     l7964 3F8A                       l7956 3F74                       l7948 3F58  
                     l6998 4A06                       l7894 12A2                       l7886 1242  
                     l7878 11E6                       l7798 0EBE                       l7974 3FB6  
                     l7966 3FA0                       l7958 3F7A                       l7888 124A  
                     l7968 3FA2                       l7976 3FD0                       l7978 4002  
                     STR_1 087A                       STR_2 0833                       STR_3 0814  
                     STR_4 0869                       STR_5 0850                       STR_6 0889  
                     STR_7 0887                       _LATB 000F8A                       u5000 504C  
                     u5001 5048                       u6100 4742                       u6101 473A  
                     u6120 4764                       u7000 1B30                       u6121 475C  
                     u7001 1B2C                       u7010 1B50                       u7011 1B4C  
                     u6140 4788                       u7100 1C90                       u7020 1B5E  
                     u6141 4780                       u7101 1C8C                       u7021 1B5A  
                     u6118 4744                       u7110 1CBC                       u7030 1B6E  
                     u7111 1CB8                       u7031 1B6A                       u6160 47AC  
                     u7200 1D9E                       u7120 1CCC                       u7040 1BA0  
                     u8000 411E                       u6161 47A4                       u7201 1D9A  
                     u7121 1CC8                       u7041 1B9C                       u8001 411A  
                     u6138 4766                       u8010 48CA                       u7210 1DB0  
                     u7130 1CE8                       u7050 1BAE                       u8011 48C6  
                     u7211 1DAC                       u7131 1CE4                       u7051 1BAA  
                     u6500 4DDE                       u8020 4908                       u7220 1DC0  
                     u7140 1CF8                       u7060 1BCC                       u8100 4436  
                     u7300 22DE                       u6501 4DDA                       u8021 4904  
                     u7221 1DBC                       u7141 1CF4                       u7061 1BC8  
                     u8101 4432                       u7301 22DA                       u6158 478A  
                     u6510 3922                       u8030 493C                       u7230 1DE0  
                     u7150 1D0A                       u7070 1C04                       u8110 4446  
                     u7310 22EE                       u6511 391A                       u8031 4938  
                     u7231 1DDC                       u7151 1D06                       u7071 1C00  
                     u8111 4442                       u7311 22EA                       u6600 39DC  
                     u9000 3C8E                       u8040 5066                       u7240 1DF2  
                     u7160 1D20                       u7080 1C4A                       u8200 38D2  
                     u8120 3752                       u7400 24A8                       u7320 232E  
                     i2l33 4EBC                       u6601 39D8                       u9001 3C8A  
                     u8041 5062                       u7241 1DEE                       u7161 1D1C  
                     u7081 1C46                       u8201 38CE                       u8121 374E  
                     u7401 24A4                       u7321 232A                       u6178 47AE  
                     u6610 39F6                       u6530 394A                       u9010 3CDC  
                     u7250 1E0E                       u7170 1D36                       u7090 1C80  
                     u8050 4378                       u8210 38E0                       u8130 3760  
                     u7410 24BA                       u7330 236E                       u6611 39F2  
                     u6531 3942                       u9011 3CD8                       u7251 1E0A  
                     u7171 1D32                       u7091 1C7C                       u8051 4374  
                     u8211 38DC                       u8131 375C                       u7411 24B6  
                     u7331 236A                       u6620 3A10                       u8220 4F4A  
                     u9020 3D0C                       u7180 1D4A                       u8060 43AC  
                     u8140 37BC                       u7420 24E8                       u7340 23E4  
                     u7260 2266                       u7500 1E4E                       u6700 4C8A  
                     u8300 2FDC                       u9100 3206                       u6621 3A0C  
                     u8221 4F46                       u9021 3D08                       u7181 1D46  
                     u8141 37B8                       u7421 24E4                       u7341 23E0  
                     u7261 2262                       u7501 1E4A                       u6701 4C86  
                     u8301 2FD8                       u9101 3202                       u6630 3A30  
                     u6550 3972                       u6470 4DA8                       u9030 3D1E  
                     u7190 1D64                       u8070 43DA                       u8150 3812  
                     u7430 24FE                       u7350 2406                       u7270 2278  
                     u7510 1E5E                       u6710 4BF8                       u8310 2FFA  
                     u9110 3230                       u8230 4A06                       u6631 3A2C  
                     u6551 396A                       u6471 4DA4                       u9031 3D1A  
                     u7191 1D60                       u8071 43D6                       u8151 380E  
                     u7431 24FA                       u7351 2402                       u7271 2274  
                     u7511 1E5A                       u6711 4BF4                       u8311 2FF6  
                     u9111 322C                       u8231 4A02                       u6640 3A58  
                     u6528 3924                       u6480 4DBA                       u6800 4340  
                     u9040 3D30                       u8080 43EE                       u8160 385C  
                     u7440 2512                       u7360 2430                       u7280 2288  
                     u7600 210C                       u7520 1E9E                       u9200 2620  
                     u6720 4C2A                       u8320 3008                       u8400 3610  
                     u9120 324C                       u8240 4A22                       u6641 3A54  
                     u6481 4DB6                       u6801 433C                       u9041 3D2C  
                     u8081 43EA                       u8065 43A2                       u8161 3858  
                     u7441 250E                       u7361 242C                       u7281 2284  
                     u7601 2108                       u7521 1E9A                       u9201 261C  
                     u6721 4C26                       u8321 3004                       u8401 360C  
                     u9121 3248                       u8241 4A1E                       u6570 3998  
                     u6490 4DCC                       u9050 3D52                       u8090 4416  
                     u8170 387A                       u7450 252C                       u7370 2454  
                     u7290 22CC                       u7610 213A                       u7530 1EB0  
                     u9210 266E                       u6810 457E                       u8330 304A  
                     u8410 3644                       u9130 325C                       u8250 4A66  
                     u6571 3990                       u6491 4DC8                       u9051 3D4E  
                     u8091 4412                       u8171 3876                       u7451 2528  
                     u7371 2450                       u7291 22C8                       u7611 2136  
                     u7531 1EAC                       u9211 266A                       u6811 457A  
                     u6731 496A                       u8331 3046                       u8411 3640  
                     u9131 3258                       u8251 4A62                       u6548 394C  
                     u7700 44F2                       u8260 4D8C                       u6900 19E0  
                     u8180 388A                       u7460 2574                       u7380 246A  
                     u7620 2150                       u7540 1EC0                       u9220 2790  
                     u6820 45A0                       u6740 49C8                       u9300 2E7A  
                     u8340 308C                       u8500 3464                       u8420 3654  
                     u9140 327A                       u9060 3186                       u4965 501C  
                     u7701 44EE                       u8261 4D88                       u6901 19DC  
                     u8181 3886                       u7461 2570                       u7381 2466  
                     u7621 214C                       u7541 1EBC                       u9221 278C  
                     u6821 459C                       u6741 49C4                       u9301 2E76  
                     u8341 3088                       u8501 3460                       u8421 3650  
                     u9141 3276                       u9061 3182                       u6590 39C2  
                     u6750 4268                       u4966 501E                       u7710 4512  
                     u6910 19F6                       u8190 3898                       u7470 25A4  
                     u7390 2488                       u7630 2164                       u7550 1EF6  
                     u9230 27A2                       u6830 45C6                       u9310 2E9A  
                     u8350 309E                       u8510 34C4                       u8430 36C2  
                     u9150 3298                       u9070 3196                       u6591 39BE  
                     u6751 4264                       u4975 5026                       u7711 450E  
                     u6911 19F2                       u8191 3894                       u7471 25A0  
                     u7391 2484                       u7631 2160                       u7551 1EF2  
                     u9231 279E                       u6831 45C2                       u9311 2E96  
                     u8351 309A                       u8271 2F08                       u8511 34C0  
                     u8431 36BE                       u9151 3294                       u9071 3192  
                     u6568 3974                       u6760 428A                       u4976 5028  
                     u6680 50B0                       u7720 4562                       u6920 1A08  
                     u7480 25D2                       u7640 217E                       u7560 1F06  
                     u9240 27CE                       u6840 45E8                       u8360 30D8  
                     u7800 29F4                       u8520 34D6                       u8440 36D4  
                     u8600 152C                       u9160 32B6                       u9080 31D8  
                     u9400 0A42                       u6761 4286                       u4985 5030  
                     u6681 50AC                       u7721 455E                       u6921 1A04  
                     u7481 25CE                       u7641 217A                       u7561 1F02  
                     u9241 27CA                       u6841 45E4                       u8361 30D4  
                     u8281 2F14                       u7801 29F0                       u8521 34D2  
                     u8441 36D0                       u8601 1528                       u9161 32B2  
                     u9081 31D4                       u9401 0A3E                       u9321 089C  
                     u6770 42C4                       u4986 5032                       u7730 511A  
                     u6930 1A18                       u7650 21C6                       u7570 2080  
                     u7490 1E3C                       u9250 2808                       u6850 4606  
                     u6690 4C78                       u8370 3102                       u8290 2FC0  
                     u7810 2A32                       u8530 3510                       u8450 36F4  
                     u8610 1542                       u9170 3308                       u9090 31F6  
                     u9410 0A54                       u6771 42C0                       u4995 503A  
                     u7731 5116                       u6931 1A14                       u7651 21C2  
                     u7491 1E38                       u9251 2804                       u6851 4602  
                     u8371 30FE                       u8291 2FBC                       u7811 2A2E  
                     u8531 350C                       u8451 36F0                       u8611 153E  
                     u9171 3304                       u9091 31F2                       u9411 0A50  
                     u9331 08C4                       u6588 399A                       u6780 42E6  
                     u4996 503C                       u6940 1A54                       u7660 21F4  
                     u7580 20DA                       u9260 2824                       u6860 4636  
                     u7740 4CB6                       u8380 311E                       u7900 2BEA  
                     u7820 2A54                       u8540 3570                       u8460 373E  
                     u8700 166C                       u8620 156C                       u9180 3326  
                     u9500 10B8                       u9420 0A8E                       u9340 08EA  
                     u6781 42E2                       u6941 1A50                       u7661 21F0  
                     u7581 20D6                       u9261 2820                       u6861 4632  
                     u7741 4CB2                       u8381 311A                       u7901 2BE6  
                     u7821 2A50                       u8541 356C                       u8461 373A  
                     u8701 1668                       u8621 1568                       u9181 3322  
                     u9501 10B4                       u9421 0A8A                       u9341 08E6  
                     u6790 430E                       u6950 1A62                       u6870 197C  
                     u7670 222E                       u7590 20FA                       u9270 290A  
                     u7910 4690                       u7750 4CE2                       u7830 2A68  
                     u8470 33C4                       u8390 35B6                       u8710 16A6  
                     u8630 1592                       u8550 147A                       u9190 3348  
                     u9510 10DC                       u9430 0AB4                       u9350 096A  
                     u6791 430A                       u6951 1A5E                       u6871 1978  
                     u7671 222A                       u7591 20F6                       u7575 2076  
                     u9271 2906                       u7911 468C                       u7751 4CDE  
                     u7831 2A64                       u8471 33C0                       u8391 35B2  
                     u8711 16A2                       u8631 158E                       u8551 1476  
                     u9191 3344                       u9511 10D8                       u9431 0AB0  
                     u9351 0966                       u7680 4496                       u6960 1AD0  
                     u6880 198E                       u9280 2C40                       u7920 46AC  
                     u7840 2A82                       u7760 295E                       u8480 341E  
                     u8800 1872                       u8720 16C4                       u8640 15AC  
                     u8560 14A4                       u9600 13FC                       u9520 10FA  
                     u9440 0AF0                       u9360 099E                       u7681 4492  
                     u6961 1ACC                       u6881 198A                       u6697 4C6E  
                     u9281 2C3C                       u7921 46A8                       u7841 2A7E  
                     u7761 295A                       u8481 341A                       u8801 186E  
                     u8721 16C0                       u8641 15A8                       u8561 14A0  
                     u9601 13F8                       u9521 10F6                       u9441 0AEC  
                     u9361 099A                       u7690 44D4                       u6970 1AE8  
                     u6890 199E                       u9290 2C7A                       u7930 471E  
                     u7850 2A9C                       u7770 297E                       u8490 3454  
                     u8810 18B2                       u8730 16EE                       u8650 15CE  
                     u8570 14E0                       u9530 11C6                       u9450 0B14  
                     u9370 09C4                       u7691 44D0                       u6971 1AE2  
                     u6891 199A                       u9291 2C76                       u7931 471A  
                     u7851 2A98                       u7771 297A                       u8491 3450  
                     u8811 18AE                       u8731 16EA                       u8651 15CA  
                     u8571 14DC                       u9531 11C2                       u9451 0B10  
                     u9371 09C0                       u6980 1AEA                       u7940 3AB8  
                     u7860 2AEE                       u7780 299C                       u8820 18CE  
                     u8740 171C                       u8660 15F4                       u8580 14FC  
                     u8900 4B60                       u9540 11E6                       u9460 103C  
                     u9380 09F6                       u7941 3AB4                       u7861 2AEA  
                     u7781 2998                       u8821 18CA                       u8741 1718  
                     u8661 15F0                       u8581 14F8                       u8901 4B5C  
                     u9541 11E2                       u9461 1038                       u9381 09F2  
                     u8910 3DBA                       u6990 1B12                       u7950 3AEA  
                     u7870 2B60                       u7790 29B8                       u8830 193C  
                     u8750 1744                       u8670 1610                       u8590 151A  
                     u9550 1202                       u9470 105C                       u9390 0A08  
                     u8911 3DB6                       u6991 1B0E                       u7951 3AE6  
                     u7871 2B5C                       u7791 29B4                       u8831 1938  
                     u8751 1740                       u8671 160C                       u8591 1516  
                     u9551 11FE                       u9471 1058                       u9391 0A04  
                     u8920 3DC8                       u7960 3AFE                       u7880 2B78  
                     u8840 1960                       u8760 1760                       u8680 162E  
                     u9560 122E                       u9480 1078                       u8921 3DC4  
                     u7961 3AFA                       u7881 2B74                       u8841 195C  
                     u8761 175C                       u8681 162A                       u9561 122A  
                     u9481 1074                       u8930 3DEA                       u7970 3B68  
                     u7890 2B8C                       u8770 1792                       u8690 1646  
                     u8850 4170                       u9570 1242                       u9490 10A4  
                     u8931 3DE6                       u7971 3B64                       u7891 2B88  
                     u8771 178E                       u8691 1642                       u8851 416C  
                     u9571 123E                       u9491 10A0                       u9627 3F1C  
                     u8940 3E52                       u7980 3C00                       u8780 1804  
                     u8860 41C8                       u9580 1266                       u8941 3E4E  
                     u7981 3BFC                       u8781 1800                       u8861 41C4  
                     u9581 1262                       u9637 3F66                       u8950 3E84  
                     u7990 40AE                       u8790 1814                       u8870 41F2  
                     u9590 1284                       u8951 3E80                       u7991 40AA  
                     u8791 1810                       u8871 41EE                       u9591 1280  
                     u9647 3F94                       u8960 3EA6                       u8880 421A  
                     u8961 3EA2                       u8881 4216                       u9657 400C  
                     u8970 3C42                       u8890 4B1A                       u9667 39AA  
                     u8971 3C3E                       u8891 4B16                       u8980 3C54  
                     u8981 3C50                       u8990 3C66                       u8991 3C62  
                     _main 3EEA                       _ftoa 25E6                       _itoa 3A98  
                     _posc 4BCE                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf1 000FE7                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 003D                       prodh 000FF4  
                     prodl 000FF3                       start 000E              __CFG_IESO$OFF 000000  
          ___fldiv@new_exp 0015      my_vprintf@double_temp 03E0                _SYSTEM_Init 4DE0  
            __CFG_MCLRE$ON 000000               ___param_bank 000000        my_vprintf@uint_temp 03D2  
         __end_of_KBD_Init 5130                ?_TIMER0_Int 0004       __size_of_BLED_Enable 004A  
            __CFG_PLLDIV$5 000000              ___fltol@sign1 0025            __end_of___aldiv 4362  
          __end_of___almod 4658            __end_of___fladd 1E22                      ?_main 0001  
                    ?_ftoa 0027            __end_of___fldiv 25E6                      ?_itoa 00C8  
          __end_of___flneg 5088            __end_of___flmul 224C                      ?_posc 0008  
          __end_of___flsub 4F06            __end_of___fltol 4468       __size_of_BLED_Toggle 0042  
                    i2l290 4F94                      i2l292 4F9C                      i2l293 4FCE  
                    _RCREG 000FAE                      _TMR0H 000FD7                      _TMR1H 000FCF  
                    _TMR0L 000FD6                      _TMR1L 000FCE                      _SPBRG 000FAF  
                    _PORTB 000F81              __CFG_USBDIV$2 000000                      _TRISB 000F93  
           my_vprintf@expA 03D6        __size_of_KBD_InChar 0052                      _TXREG 000FAD  
           my_vprintf@prec 03E8              __CFG_PWRT$OFF 000000             my_vprintf@tipo 0801  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000                      _addOx 3C1E             __CFG_EBTRB$OFF 000000  
                    _getWP 2EEE                      _myISR 0008                      _atoui 4658  
                    _count 00C2                      _precE 3368                      _precF 3572  
                    _precG 140A                      _precI 4140                      _precS 4AEA  
                    _space 00C4            __end_of_searchc 4CE6    __size_of_INTERRUPT_Init 0008  
                    _zeros 00C6    __size_of_INTERRUPT_Tmr0 0006                      itoa@i 0020  
                    tablat 000FF5            __end_of_reverse 49DE                      posc@a 000C  
                    posc@c 000A                      plusw1 000FE3                      plusw2 000FDB  
                    ttemp5 003E                      ttemp6 0041                      ttemp7 0045  
            BLED_Color@red 0005                      status 000FD8            __end_of_upperCL 4A68  
   __size_ofi2_BLED_Toggle 0042                      wtemp8 003E               ?_SERIAL_Init 0012  
          __initialization 4B62               __end_of_main 4020               __end_of_ftoa 2918  
             __end_of_itoa 3C1E               __end_of_posc 4C30       SERIAL_WriteChar@data 0004  
                   ??_main 0038                     ??_ftoa 002D                     ??_itoa 0016  
                   ??_posc 000B     __end_ofmy_vprintf@tipo 0810              __activetblptr 000002  
         ftoa_sci@exponent 002D            my_vprintf@F3503 0200            my_vprintf@F3511 00C0  
          my_vprintf@F3515 00BE            my_vprintf@F3518 0060                     ?_addOx 0008  
                   ?_getWP 00C8                     ?_myISR 0001                     ?_atoui 000A  
                   ?_precE 001F                     ?_precF 001F                     ?_precG 001F  
                   ?_precI 0008                     ?_precS 0008                     i2l5810 4F90  
                   i2l5812 4FA4                     i2l5820 4E88                     i2l5830 4EBA  
                   i2l5822 4E90                     i2l5824 4E96                     i2l5826 4EAA  
                   i2l5818 4E7A                     i2l8156 4FB8                     i2l5828 4EB0  
      __size_of_TIMER0_Int 0040                     _SPBRGH 000FB0           __end_of___xxtofl 38F4  
          my_vprintf@error 03D4       __size_of_KBD_GetChar 01A4             __CFG_VREGEN$ON 000000  
          my_vprintf@width 03DA             __CFG_XINST$OFF 000000             getWP@precision 00CC  
             ??_BLED_Color 0006                     ___flge 4468                     ___fleq 489C  
                   _addSig 3D96              SERIAL_Write@i 000A                  ??___aldiv 000C  
                ??___almod 000C                     addOx@k 0011                  ??___fladd 000C  
                   ___wmul 50E4                  ??___fldiv 000C                  ??___flneg 0008  
           __CFG_STVREN$ON 000000                  ??___flmul 000C                  ??___flsub 0025  
                ??___fltol 0021                     _alingL 003B                     _cleanS 4D3A  
                   _keyPad 00A0           __end_of_ftoa_sci 2EEE                     clear_0 4BA8  
                   clear_1 4BB4                     getWP@i 0024                     getWP@j 002A  
                   getWP@k 0026                     getWP@p 0028             getWP@width_str 001D  
            i2_BLED_Toggle 4F8E                     _strcat 50BE                     _strcpy 4C30  
                   _strlen 5088                     atoui@i 0011           __end_of_setWidth 3368  
                   precE@i 002B                     precE@j 002D                     precE@k 002F  
                   precF@i 002A                     precG@f 0028                     precF@j 0026  
                   precF@k 002E                     precE@p 0025                     precG@i 0034  
                   precG@j 0030                     precG@k 0032                     precF@p 0028  
                   precG@p 0026                     precI@i 0014                     precI@j 0010  
                   precI@k 000E                     precS@i 0010                  ??_searchc 000B  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_reverse 0014           __end_of_roundStr 2C0E  
                ??_upperCL 000A          ?_SERIAL_WriteChar 0001         __end_of_BLED_Color 47EA  
               ___flge@ff1 0004                 ___flge@ff2 0008               ___xxtofl@arg 000E  
             ___xxtofl@exp 000D               ___xxtofl@val 0004                 ___fleq@ff1 0004  
               ___fleq@ff2 0008                  ?_KBD_Init 0001         ??_SERIAL_WriteChar 0004  
               __accesstop 0060    __end_of__initialization 4BC0            __CFG_PBADEN$OFF 000000  
               ___flneg@f1 0004               ??_KBD_InChar 0004              ___rparam_used 000001  
               ___fltol@f1 001D               ftoa@exponent 0031              ?_SERIAL_Write 0008  
           __pcstackCOMRAM 0001               __pidataBANK0 4CE6               __pidataBANK2 4FD0  
            __end_of_addOx 3D96              __end_of_getWP 313C              __end_of_myISR 4EC0  
            __end_of_atoui 4728              __end_of_precE 3572              __end_of_precF 3740  
            __end_of_precG 1962              __end_of_precI 4256              __end_of_precS 4B62  
           ?i2_BLED_Toggle 0001         __end_of_KBD_InChar 4DE0                 addSig@numS 0012  
    __end_offtoa_sci@width 0814                    ??_addOx 000D                    ??_getWP 0016  
                  ??_myISR 0004                    ??_atoui 000C                    ??_precE 0023  
                  ??_precF 0023                    ??_precG 0023                    ??_precI 000C  
                  ??_precS 000C             _INTERRUPT_Init 5130             _INTERRUPT_Tmr0 5138  
            ?_TIMER0_SetPs 0001                 __pbssBANK0 00B4                 __pbssBANK2 0200  
               ??_KBD_Init 0004             ??_SERIAL_Write 000A               ?_SYSTEM_Init 0001  
                  ?___flge 0004                    ?___fleq 0004                    ?_addSig 0012  
                  ?___wmul 0004       __size_of_SERIAL_Init 0082                    ?_cleanS 0008  
             ??_TIMER0_Int 0007                    ?_strcat 0012                    ?_strcpy 0008  
                  ?_strlen 0004         __size_of_normalize 0120                  ?___xxtofl 0004  
    my_vprintf@string_temp 038E     __end_of_INTERRUPT_Init 5138     __end_of_INTERRUPT_Tmr0 513E  
           ??_TIMER0_SetPs 0004           my_vprintf@buffer 0390           my_vprintf@format 0384  
         my_vprintf@length 0382           my_vprintf@valist 03E6                  ?_ftoa_sci 00D0  
       __end_of_TIMER0_Int 5050           my_vprintf@string 0300                setWidth@len 0010  
              setWidth@str 0008                    __Hparam 0000                  ?_setWidth 0008  
                  __Lparam 0000              ??_BLED_Enable 0004                    ___aldiv 4256  
          __size_of___flge 0104            __size_of___fleq 00AA                    ___almod 456C  
                  ___fladd 1962            __size_of_addSig 0154                    ___fldiv 224C  
                  ___flneg 5050                    ___flmul 1E22                    ___flsub 4EC0  
                  ___fltol 4362            ??i2_BLED_Toggle 0001            __size_of___wmul 0026  
          __size_of_cleanS 0054                  ?_roundStr 000E               __psmallconst 0800  
            ??_BLED_Toggle 0004                    addSig@k 001C                    __pcinit 4B62  
                  __ramtop 0800                    __ptext0 3EEA                    __ptext1 088C  
                  __ptext2 49DE                    __ptext3 50BE                    __ptext4 313C  
                  __ptext5 4AEA                    __ptext6 4140                    __ptext7 140A  
                  __ptext8 3572                    __ptext9 3368                  _T0CONbits 000FD5  
          __size_of_strcat 0026            __size_of_strcpy 005C            __size_of_strlen 0036  
                _T1CONbits 000FCD                 ??___xxtofl 0008                    cleanS@i 000D  
                  _searchc 4C8C           ___aldiv@dividend 0004                    _precInt 00C5  
          ?_INTERRUPT_Init 0001                    _reverse 4946            ?_INTERRUPT_Tmr0 0001  
                  _numeral 003A                    _upperCL 49DE             __pintcode_body 4E78  
                  atoui@vp 000F       end_of_initialization 4BC0                reverse@F192 0280  
               getWP@width 00CA                 ??_ftoa_sci 0027                    itoa@rem 001C  
                  itoa@num 00CA           BLED_Toggle@biled 0006              __Lmediumconst 0000  
                  itoa@str 00C8                    int_func 4E78          __end_of_normalize 4140  
               ??_setWidth 000C                    posc@str 0008                  _RCSTAbits 000FAB  
         ___aldiv@quotient 000E                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE            BLED_Color@biled 0008  
          BLED_Color@green 0004                 ??_roundStr 0014                    strcpy@d 0010  
                  strlen@a 0006                    strcpy@s 000E                    strlen@s 0004  
                _PORTBbits 000F81                 _my_vprintf 088C        __end_of_BLED_Enable 4E78  
              ___fladd@grs 0013        __end_of_BLED_Toggle 4F8E              ___xxtofl@sign 000C  
     __end_of_SERIAL_Write 4F4C                  _TRISAbits 000F92                  _TRISBbits 000F93  
                _TRISCbits 000F94                  _TRISDbits 000F95                  _TRISEbits 000F96  
              ___fldiv@grs 0017                ___fldiv@rem 0010          __end_offtoa@width 0812  
          TIMER0_Int@t0_8b 0007                my_vprintf@i 03E4                my_vprintf@j 03DC  
              my_vprintf@x 03D8              ??_KBD_GetChar 0004            TIMER0_Int@t0_cs 0004  
          TIMER0_Int@t0_se 0005         ftoa_sci@digit_1677 0029                ___flmul@grs 0012  
       my_vprintf@int_temp 03DE          normalize@exponent 001F                  _TXSTAbits 000FAC  
        __size_of_KBD_Init 0010             ftoa_sci@buffer 00D0  __size_of_SERIAL_WriteChar 0016  
     __size_of_SYSTEM_Init 004E             __end_of___flge 456C             __end_of___fleq 4946  
           __end_of_addSig 3EEA       __end_of_TIMER0_SetPs 489C             __end_of___wmul 510A  
     TIMER0_SetPs@prescale 0006                _BAUDCONbits 000FB8             __end_of_cleanS 4D8E  
           __end_of_strcat 50E4                 ftoa@buffer 0027             __end_of_strcpy 4C8C  
           __end_of_strlen 50BE        start_initialization 4B62                 ftoa@places 0033  
            setWidth@width 000A           setWidth@widthDif 000E          KBD_InChar@newChar 0004  
      __end_of_KBD_GetChar 3A98              getWP@prec_str 0018                   ??___flge 000C  
                 ??___fleq 000C                   ??_addSig 0018             precE@precision 0021  
              _BLED_Enable 4E2E                   ??___wmul 0008                roundStr@len 0017  
                 ??_cleanS 000A                roundStr@prn 0012                __pdataBANK0 0060  
              __pdataBANK2 0280           __CFG_LPT1OSC$OFF 000000                _BLED_Toggle 4F4C  
              ?_my_vprintf 00D6                   ??_strcat 0016             precF@precision 0021  
                 ??_strcpy 000C                   ??_strlen 0006                  ___fladd@a 0008  
                ___fladd@b 0004                  ___fldiv@a 0008                  ___fldiv@b 0004  
                ___flmul@a 0008                  ___flmul@b 0004                __pbssCOMRAM 003A  
                ___flsub@a 0021                  ___flsub@b 001D              __pcstackBANK0 00C8  
            __pcstackBANK1 0100              __pcstackBANK3 0300             precG@precision 0021  
        __size_of___xxtofl 01B4           _SERIAL_Init$2399 0016                  addSig@len 001A  
                addSig@num 0014                  addOx@type 000C          __size_of_ftoa_sci 02E0  
            ??_SERIAL_Init 0016                 searchc@str 0008                  __pintcode 0008  
           precI@precision 000A                   ?___aldiv 0004                   ?___almod 0004  
                 ?___fladd 0004                   ?___fldiv 0004                   ?___flneg 0004  
        __size_of_setWidth 022C                   ?___flmul 0004                   ?___flsub 001D  
                 ?___fltol 001D           ___almod@dividend 0004      __size_of_SERIAL_Write 0046  
         ??_INTERRUPT_Init 0004           ??_INTERRUPT_Tmr0 0004                  _itoa$1659 0018  
        __size_of_roundStr 02F6             normalize@value 0021                __smallconst 0800  
                 ?_searchc 0008                   ?_reverse 0012             __size_of_addOx 0178  
           __size_of_getWP 024E                   ?_upperCL 0008             __size_of_myISR 4EB8  
           __size_of_atoui 00D0             __size_of_precE 020A             __size_of_precF 01CE  
           __size_of_precG 0558             __size_of_precI 0116             __size_of_precS 0078  
                getWP@F271 00B4                  getWP@F269 00B9                  cleanS@len 000B  
                cleanS@str 0008                _KBD_GetChar 38F4                   _KBD_Init 5120  
          ___aldiv@divisor 0008            ___aldiv@counter 000C             ___wmul@product 0008  
                 _LATBbits 000F8A                   _LATCbits 000F8B                   _LATDbits 000F8C  
                 _LATEbits 000F8D        __size_of_my_vprintf 0B7E                  getWP@form 00C8  
                 _PIE1bits 000F9D                 reverse@str 0012      __size_of_TIMER0_SetPs 00B2  
                 _PIR1bits 000F9E               _SERIAL_Write 4F06                   i2u665_40 4E88  
                 i2u665_41 4E84                   i2u666_40 4EAA                   i2u666_41 4EA6  
          SERIAL_Init@BAUD 0012                   _RCONbits 000FD0           _SERIAL_WriteChar 510A  
         __CFG_WDTPS$32768 000000                  _normalize 4020        __end_of_SERIAL_Init 4AEA  
    __end_ofi2_BLED_Toggle 4FD0          ___wmul@multiplier 0004          my_vprintf@sformat 00D6  
            ftoa_sci@digit 0027              ftoa_sci@value 00D2              ftoa_sci@width 0812  
              _INTCON2bits 000FF1                _INTCON3bits 000FF0                  copy_data0 4B76  
                copy_data1 4B96               _TIMER0_SetPs 47EA                  ftoa@digit 002D  
                ftoa@value 0029                  ftoa@width 0810                   __Hrparam 0000  
                ftoa_sci@i 002B                   __Lrparam 0000         i2BLED_Toggle@biled 0003  
               _BLED_Color 4728                 ?_normalize 001D                  itoa@base_ 00CE  
         __size_of___aldiv 010C           __size_of___almod 00EC           __size_of___fladd 04C0  
         __size_of___fldiv 039A           __size_of___flneg 0038           __size_of___flmul 042A  
         __size_of___flsub 0046           __size_of___fltol 0106                 upperCL@str 0008  
          SERIAL_Write@str 0008                   addOx@hoS 0008                   addOx@len 000F  
                 addOx@num 000A              reverse@auxstr 0100                   ___xxtofl 3740  
               strcat@dest 0012                  precG@digS 002A                  precE@posE 0029  
                precG@posE 002C           __size_of_searchc 005A                   __ptext10 2918  
                 __ptext11 2EEE                   __ptext20 456C                   __ptext12 4C8C  
                 __ptext21 25E6                   __ptext13 4BCE                   __ptext30 489C  
                 __ptext22 4020                   __ptext14 4658                   __ptext31 4D3A  
                 __ptext23 1E22                   __ptext15 50E4                   __ptext40 5010  
                 __ptext32 3D96                   __ptext24 224C                   __ptext16 2C0E  
                 __ptext41 4A68                   __ptext33 4468                   __ptext25 3740  
                 __ptext17 3A98                   __ptext50 4728                   __ptext42 4256  
                 __ptext34 3C1E                   __ptext26 4362                   __ptext18 4946  
                 __ptext43 5120                   __ptext35 4F06                   __ptext27 4EC0  
                 __ptext19 4C30                   __ptext52 4F8E                   __ptext44 5138  
                 __ptext36 5088                   __ptext28 1962                   __ptext45 5130  
                 __ptext37 510A                   __ptext29 5050                   __ptext46 4E2E  
                 __ptext38 4DE0                   __ptext47 4D8E                   __ptext39 47EA  
                 __ptext48 38F4                   __ptext49 4F4C           __size_of_reverse 0098  
           precS@precision 000A            ___almod@divisor 0008           __size_of_upperCL 008A  
          ___almod@counter 000C                 strcpy@dest 0008                  setWidth@j 0012  
                 _ftoa_sci 2C0E              __size_of_main 0136              __size_of_ftoa 0332  
            __size_of_itoa 0186              __size_of_posc 0062           BLED_Enable@biled 0006  
           roundStr@decnum 000E                 _KBD_InChar 4D8E                   getWP@len 0022  
            ??_SYSTEM_Init 001C                   _setWidth 313C                _SERIAL_Init 4A68  
             ?_BLED_Enable 0001                   int$flags 003D                   _roundStr 2918  
             ?_BLED_Toggle 0001               ??_my_vprintf 0036                   atoui@num 000D  
                 atoui@str 000A      __CFG_CPUDIV$OSC1_PLL2 000000                 _INTCONbits 000FF2  
                roundStr@e 0010                  roundStr@i 001B                  roundStr@k 001D  
                roundStr@p 0019        SERIAL_Init@baudrate 001A                   intlevel2 0000  
                 precE@len 0027                   searchc@a 000C                   searchc@c 000A  
                strcat@src 0014                   precF@len 002C                   precG@len 002E  
                 precE@str 001F                   precI@len 0012                   precF@str 001F  
                 precG@str 001F                   precI@str 0008                   precS@len 000E  
                 precS@str 0008               normalize@val 001D                  strcpy@src 000A  
       __end_of_my_vprintf 140A                   reverse@i 0142                   reverse@j 0140  
              ?_BLED_Color 0004                ??_normalize 001F             ftoa@digit_1685 002F  
               _TIMER0_Int 5010        __end_of_SYSTEM_Init 4E2E                   upperCL@i 000B  
             ___aldiv@sign 000D   __end_of_SERIAL_WriteChar 5120             KBD_GetChar@col 000B  
            ___fladd@signs 0010             KBD_GetChar@key 0008             KBD_GetChar@row 0009  
       __CFG_FOSC$HSPLL_HS 000000               ?_KBD_GetChar 0001               ___almod@sign 000D  
      my_vprintf@char_temp 0380               ___fladd@aexp 0011               ___fladd@bexp 0012  
              ?_KBD_InChar 0001  
